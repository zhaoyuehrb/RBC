%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGCGGCGGCUGGAGGAGGAGAGCGGCGGCGGCGGGAGCAGCGAAGGGGGCGGCAGGGAUCCUCCAGGCUGCCGGCUGGGAAGGCGUGGGCGACCCGGUGUGUGGCGCGCCCAGAGCCCCGCGUUUCAGCCCUAGGGAAGGAAGCCAGUUGAGGGAAGUUCUCCAUGAAUGUACGUCACAAUGAUGAUGACCGACCAAAUCCCUCUGGAACUGCCACCAUUGCUGAACGGAGAGGUAGCCAUGAUGCCCCA\
CUUGGUGAAUGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[-32.55192566 405.61959839]
[-39.82658386 418.73748779]
[-32.03961945 431.90225220]
[-31.88863945 447.09677124]
[-39.31406021 460.23944092]
[-52.23449707 467.84985352]
[-67.12916565 467.97036743]
[-74.40382385 481.08828735]
[-74.33011627 496.90933228]
[-87.26903534 504.28723145]
[-94.54369354 517.40515137]
[-94.46999359 533.22619629]
[-107.40890503 540.60412598]
[-114.68356323 553.72198486]
[-121.95822906 566.83990479]
[-129.23287964 579.95782471]
[-120.77731323 592.71563721]
[-119.23065948 607.94274902]
[-124.94834137 622.14019775]
[-136.61647034 632.04541016]
[-151.55380249 635.38226318]
[-166.32785034 631.38397217]
[-177.54364014 620.96936035]
[-182.62387085 606.53155518]
[-180.40112305 591.38830566]
[-171.38619995 579.01940918]
[-157.65063477 572.26715088]
[-142.35078430 572.68316650]
[-135.07612610 559.56524658]
[-127.80146790 546.44732666]
[-120.52680206 533.32946777]
[-121.12084198 518.44665527]
[-107.66159821 510.13049316]
[-100.38693237 497.01257324]
[-100.98097229 482.12982178]
[-87.52172852 473.81362915]
[-80.24706268 460.69570923]
[-88.03293610 447.99746704]
[-88.41999054 433.00726318]
[-81.20417023 419.74835205]
[-68.23542023 411.82949829]
[-52.94448471 411.46282959]
[-45.66982269 398.34494019]
[-46.02225113 387.58828735]
[-36.83768463 379.73159790]
[-31.27731895 365.80026245]
[-33.74549866 351.11157227]
[-21.44383430 341.16271973]
[-15.88346767 327.23138428]
[-10.32310200 313.30004883]
[-4.84298706 299.33691406]
[0.55669683 285.34252930]
[5.95638037 271.34811401]
[11.35606384 257.35369873]
[16.75574875 243.35929871]
[7.47103310 231.57821655]
[-7.39780807 233.55749512]
[-15.45621204 237.77781677]
[-22.44902420 235.47299194]
[-37.33965683 237.28103638]
[-52.23028946 239.08908081]
[-67.22513580 247.00053406]
[-78.97838593 234.78179932]
[-70.49079132 220.10539246]
[-54.03834152 224.19845581]
[-39.14770889 222.39039612]
[-24.25707436 220.58235168]
[-9.37709141 218.68865967]
[5.49175024 216.70936584]
[19.59111595 192.73367310]
[44.63689041 189.34695435]
[51.60773849 176.06510925]
[58.57858276 162.78327942]
[65.54943085 149.50143433]
[72.52027893 136.21958923]
[79.49112701 122.93775177]
[86.46197510 109.65591431]
[84.91121674 94.73628998]
[75.35784149 83.17198944]
[65.80445862 71.60769653]
[56.25108337 60.04339600]
[46.69770432 48.47909927]
[37.14432907 36.91480255]
[27.59095192 25.35050392]
[18.03757286 13.78620625]
[5.31810760 11.79746342]
[-2.40206075 1.99992514]
[-1.42449653 -10.03381920]
[-10.84416676 -21.70728493]
[-20.26383591 -33.38075256]
[-28.05795860 -38.07124329]
[-29.72380638 -45.24317932]
[-39.00852203 -57.02426910]
[-48.29323578 -68.80535889]
[-57.57794952 -80.58644867]
[-71.27837372 -77.86631012]
[-84.75186920 -81.29031372]
[-95.38976288 -90.13683319]
[-101.15770721 -102.64011383]
[-100.98458099 -116.34249878]
[-94.96095276 -128.57746887]
[-104.10948181 -140.46461487]
[-113.25801086 -152.35176086]
[-122.40653992 -164.23892212]
[-131.55506897 -176.12606812]
[-140.70359802 -188.01322937]
[-155.15550232 -196.87770081]
[-150.63815308 -213.21875000]
[-133.68518066 -213.40158081]
[-128.81645203 -197.16175842]
[-119.66792297 -185.27459717]
[-110.51938629 -173.38745117]
[-101.37085724 -161.50030518]
[-92.22232819 -149.61314392]
[-83.07379913 -137.72599792]
[-67.09532928 -140.24565125]
[-51.94309235 -134.31938171]
[-41.79737091 -121.48022461]
[-39.50854874 -105.18215942]
[-45.79685974 -89.87116241]
[-36.51214600 -78.09007263]
[-27.22743034 -66.30898285]
[-17.94271660 -54.52789307]
[-8.59036922 -42.80042267]
[0.82930022 -31.12695503]
[10.24897003 -19.45348930]
[26.94759560 -14.00622749]
[29.60187149 4.23282862]
[39.15524673 15.79712582]
[48.70862579 27.36142349]
[58.26200485 38.92572021]
[67.81538391 50.49002075]
[77.36875916 62.05431747]
[86.92213440 73.61861420]
[96.47550964 85.18291473]
[102.64344025 85.07701111]
[108.31674957 87.42059326]
[121.47628784 80.22153473]
[134.63583374 73.02246857]
[143.02934265 59.61129761]
[157.90843201 60.29095840]
[171.06796265 53.09189606]
[179.46147156 39.68072128]
[194.34056091 40.36038208]
[207.50010681 33.16131973]
[212.03852844 18.26029396]
[225.48672485 11.14688396]
[239.66459656 15.56540012]
[252.82414246 8.36633778]
[258.82308960 1.52808177]
[266.17678833 1.16114092]
[279.41830444 -5.88601255]
[292.65982056 -12.93316555]
[305.90133667 -19.98031807]
[319.01922607 -27.25498009]
[332.00961304 -34.75497818]
[345.00000000 -42.25497818]
[357.99038696 -49.75497818]
[370.98074341 -57.25497818]
[383.97113037 -64.75498199]
[387.72277832 -90.71574402]
[414.85177612 -102.92794037]
[424.79861450 -114.15560150]
[434.74545288 -125.38327026]
[444.69229126 -136.61093140]
[445.16281128 -152.64707947]
[458.07968140 -162.16198730]
[473.53424072 -157.85662842]
[479.67105103 -143.03370667]
[471.78250122 -129.06408691]
[455.91995239 -126.66408539]
[445.97311401 -115.43642426]
[436.02627563 -104.20876312]
[426.07943726 -92.98110199]
[435.15942383 -81.04151154]
[448.63629150 -87.62741852]
[454.94354248 -94.18239594]
[462.30633545 -94.21057129]
[475.85809326 -100.64095306]
[489.40985107 -107.07134247]
[502.96160889 -113.50173187]
[516.51336670 -119.93212128]
[521.58221436 -134.90151978]
[535.78814697 -141.82727051]
[550.70312500 -136.60047913]
[557.47827148 -122.32208252]
[552.09411621 -107.46321869]
[537.74487305 -100.83937073]
[522.94378662 -106.38036346]
[509.39199829 -99.94997406]
[495.84024048 -93.51959229]
[482.28848267 -87.08920288]
[468.73672485 -80.65881348]
[455.22219849 -74.15055847]
[441.74533081 -67.56464386]
[439.24371338 -59.85638046]
[435.01770020 -53.18186188]
[429.41613770 -47.90473175]
[422.85827637 -44.28235245]
[415.80349731 -42.45404434]
[408.71957397 -42.43762970]
[402.05181885 -44.13407135]
[396.19528198 -47.33966064]
[391.47113037 -51.76459885]
[378.48074341 -44.26459885]
[365.49038696 -36.76459885]
[352.50000000 -29.26459885]
[339.50961304 -21.76459885]
[326.51922607 -14.26459789]
[325.25640869 -11.00972271]
[322.37454224 -8.19410896]
[318.09210205 -6.56313086]
[312.94848633 -6.73880720]
[299.70697021 0.30834603]
[286.46545410 7.35549927]
[273.22393799 14.40265274]
[260.02319336 21.52587891]
[246.86366272 28.72494125]
[242.93807983 43.04714203]
[229.69499207 50.53547668]
[214.69917297 46.32085800]
[201.53962708 53.51992035]
[194.08738708 66.41616821]
[178.26702881 66.25143433]
[165.10749817 73.45050049]
[157.65524292 86.34674835]
[141.83489990 86.18201447]
[128.67535400 93.38107300]
[115.51581573 100.58013916]
[130.50434875 99.99370575]
[143.23257446 107.93046570]
[149.30197144 121.64769745]
[146.61512756 136.40509033]
[136.10054016 147.10292053]
[121.39175415 150.04428101]
[107.57172394 144.21275330]
[99.41627502 131.62351990]
[99.74381256 116.62676239]
[92.77296448 129.90859985]
[85.80211639 143.19044495]
[78.83127594 156.47227478]
[71.86042786 169.75411987]
[64.88957977 183.03596497]
[57.91872787 196.31779480]
[65.52999878 205.90113831]
[68.41933441 218.23162842]
[65.68155670 231.03306580]
[57.48596954 241.78262329]
[45.11021423 248.20727539]
[30.75015450 248.75898743]
[25.35047150 262.75338745]
[19.95078659 276.74780273]
[14.55110359 290.74221802]
[9.15141964 304.73660278]
[8.98639584 313.83175659]
[3.60824132 318.86041260]
[-1.95212424 332.79174805]
[-7.51248980 346.72308350]
[-5.44202423 362.40823364]
[-17.34597588 371.36062622]
[-22.90634155 385.29196167]
[-10.38694859 377.02969360]
[4.44355917 374.78115845]
[18.84939957 378.96105957]
[30.17313004 388.79840088]
[36.32586288 402.47845459]
[36.17259979 417.47766113]
[29.74161911 431.02914429]
[18.21923828 440.63302612]
[3.73099399 444.51773071]
[-11.05047131 441.96658325]
[-23.39842033 433.45025635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[7 37]
[8 36]
[10 34]
[11 33]
[13 31]
[14 30]
[15 29]
[16 28]
[45 261]
[46 260]
[48 258]
[49 257]
[50 256]
[51 254]
[52 253]
[53 252]
[54 251]
[55 250]
[56 69]
[57 68]
[59 67]
[60 66]
[61 65]
[71 244]
[72 243]
[73 242]
[74 241]
[75 240]
[76 239]
[77 238]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[88 126]
[89 125]
[90 124]
[92 123]
[93 122]
[94 121]
[95 120]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
[137 229]
[138 228]
[139 227]
[141 225]
[142 224]
[144 222]
[145 221]
[148 218]
[149 217]
[151 216]
[152 215]
[153 214]
[154 213]
[155 209]
[156 208]
[157 207]
[158 206]
[159 205]
[160 204]
[162 174]
[163 173]
[164 172]
[165 171]
[175 195]
[176 194]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
