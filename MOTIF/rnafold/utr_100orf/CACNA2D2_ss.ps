%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGCCCGCAGAGGCGCUGCGGCCCGUGCAGCCCCGGAGGCCCCUCGCGGAGAAGGCGGCGGCGGAGGAGAGGCCGAGUUACCGCCCGCCGCCCGCGCCCCCCCAACCCCGCCGCCGCCGCCGCCGCCGCCACUGCCCCCCCUCCCCGCGGCGCCGCAUCUUGAAUGGAAACAUGGCGGUGCCGGCUCGGACCUGCGGCGCCUCUCGGCCCGGCCCAGCGCGGACUGCGCGCCCCUGGCCCGGCUGCGGCCCC\
CACCCUGGCCCCGGCACCC\
) } def
/len { sequence length } bind def

/coor [
[368.77273560 482.61437988]
[361.84863281 469.30810547]
[354.92449951 456.00186157]
[348.00039673 442.69558716]
[341.07626343 429.38934326]
[334.15216064 416.08306885]
[321.41351318 408.36450195]
[321.90689087 392.55099487]
[314.98275757 379.24472046]
[308.05865479 365.93847656]
[301.13452148 352.63220215]
[293.16958618 339.92160034]
[284.21475220 327.88784790]
[275.25991821 315.85409546]
[266.30511475 303.82037354]
[257.35028076 291.78662109]
[248.39543152 279.75286865]
[239.44059753 267.71914673]
[230.48576355 255.68539429]
[221.53092957 243.65165710]
[212.57609558 231.61790466]
[203.62126160 219.58416748]
[194.59783936 207.60176086]
[185.50611877 195.67111206]
[171.63786316 190.23780823]
[169.42745972 174.57177734]
[160.33573914 162.64112854]
[151.24401855 150.71046448]
[137.37576294 145.27717590]
[135.16534424 129.61112976]
[126.07362366 117.68047333]
[116.73892212 125.85186768]
[105.21871185 129.63693237]
[93.41448212 128.64051819]
[83.18706512 123.23861694]
[76.06328583 114.48432159]
[73.00884247 103.90989685]
[74.30100250 93.26104736]
[61.45576477 85.51508331]
[48.61053085 77.76911926]
[35.76529694 70.02316284]
[22.92006111 62.27719879]
[12.29629898 69.54601288]
[-0.23908202 72.26006317]
[-12.82619190 70.05265045]
[-23.61101151 63.28461838]
[-31.01848221 52.98593521]
[-33.98249435 40.69906235]
[-32.09922791 28.24797630]
[-44.76414490 20.21057320]
[-57.42906570 12.17317200]
[-70.09398651 4.13577032]
[-83.69602966 11.13088417]
[-98.87291718 10.38337612]
[-111.55364227 2.19401455]
[-118.38694763 -11.15371704]
[-117.62678528 -26.02946091]
[-130.29170227 -34.06686401]
[-142.95661926 -42.10426331]
[-155.62153625 -50.14166641]
[-168.28645325 -58.17906952]
[-180.95137024 -66.21646881]
[-193.61630249 -74.25387573]
[-206.28121948 -82.29127502]
[-218.94613647 -90.32867432]
[-231.61105347 -98.36608124]
[-244.27597046 -106.40348053]
[-260.07369995 -107.26515961]
[-266.67382812 -120.61759186]
[-279.33874512 -128.65499878]
[-289.75198364 -125.68215179]
[-299.87973022 -128.84523010]
[-306.47189331 -136.87756348]
[-307.55184937 -146.99209595]
[-320.02981567 -155.31674194]
[-332.50781250 -163.64138794]
[-347.00167847 -158.42272949]
[-361.61843872 -162.68928528]
[-370.81140137 -174.60369873]
[-371.22103882 -189.46876526]
[-383.69900513 -197.79341125]
[-396.17700195 -206.11805725]
[-409.49832153 -197.08372498]
[-425.23040771 -193.86854553]
[-440.95242310 -196.93699646]
[-454.25677490 -205.78895569]
[-463.11764526 -219.04096985]
[-466.19952393 -234.64237976]
[-463.05847168 -250.19262695]
[-475.63076782 -258.37417603]
[-488.20303345 -266.55572510]
[-504.13311768 -264.65524292]
[-515.44958496 -276.02703857]
[-513.47137451 -291.94766235]
[-499.71600342 -300.20416260]
[-484.73544312 -294.46286011]
[-480.02148438 -279.12802124]
[-467.44918823 -270.94644165]
[-454.87692261 -262.76489258]
[-443.63180542 -271.12817383]
[-430.18051147 -275.16522217]
[-416.12896729 -274.37277222]
[-403.16201782 -268.82553101]
[-392.84133911 -259.16943359]
[-386.41748047 -246.54663086]
[-384.67831421 -232.46038818]
[-387.85235596 -218.59605408]
[-375.37435913 -210.27140808]
[-362.89639282 -201.94676208]
[-349.01370239 -207.27676392]
[-334.48260498 -203.36375427]
[-324.93029785 -191.50599670]
[-324.18316650 -176.11938477]
[-311.70516968 -167.79473877]
[-299.22720337 -159.47009277]
[-279.86978149 -159.59375000]
[-271.30136108 -141.31991577]
[-258.63644409 -133.28251648]
[-243.74458313 -132.99571228]
[-236.23857117 -119.06839752]
[-223.57365417 -111.03099823]
[-210.90873718 -102.99359131]
[-198.24380493 -94.95619202]
[-185.57888794 -86.91879272]
[-172.91397095 -78.88138580]
[-160.24905396 -70.84398651]
[-147.58413696 -62.80658340]
[-134.91921997 -54.76918411]
[-122.25429535 -46.73178101]
[-109.58937836 -38.69437790]
[-96.45306396 -45.71598053]
[-81.46620178 -45.21620941]
[-68.65705109 -37.22920990]
[-61.51868439 -23.81502151]
[-62.05658340 -8.52914906]
[-49.39166260 -0.49174684]
[-36.72674561 7.54565525]
[-24.06182480 15.58305740]
[-9.06943893 7.05473185]
[8.26619530 7.31865501]
[23.14457130 16.39244652]
[31.39960289 31.84158897]
[30.66602135 49.43196106]
[43.51125717 57.17792511]
[56.35649490 64.92388916]
[69.20172882 72.66984558]
[82.04696655 80.41580963]
[91.82475281 73.42752838]
[104.19640350 71.26945496]
[116.80378723 74.82353973]
[127.04045868 83.83687592]
[136.79846191 72.44470978]
[146.55645752 61.05253983]
[156.31445312 49.66037369]
[166.07244873 38.26820755]
[175.83044434 26.87603951]
[185.58845520 15.48387337]
[195.34645081 4.09170628]
[205.10444641 -7.30046034]
[201.90689087 -18.70398331]
[204.56640625 -30.12206268]
[212.31405640 -38.76086807]
[223.15063477 -42.56369019]
[234.36163330 -40.69993973]
[244.37734985 -51.86620331]
[240.99072266 -67.00920105]
[247.18260193 -81.23735046]
[260.57208252 -89.07963562]
[276.01065063 -87.52053833]
[287.56182861 -77.15956116]
[290.78396606 -61.98071671]
[284.43811035 -47.82057571]
[270.96432495 -40.12400055]
[255.54360962 -41.85048676]
[245.52789307 -30.68422318]
[247.59671021 -12.46802521]
[235.45553589 1.69375169]
[216.49661255 2.45753813]
[206.73861694 13.84970474]
[196.98062134 25.24187088]
[187.22261047 36.63403702]
[177.46461487 48.02620697]
[167.70661926 59.41837311]
[157.94862366 70.81053925]
[148.19062805 82.20270538]
[138.43261719 93.59487152]
[138.00428772 108.58875275]
[147.09600830 120.51941681]
[161.61456299 126.80606842]
[163.17466736 141.61874390]
[172.26638794 153.54940796]
[181.35810852 165.48005676]
[195.87667847 171.76670837]
[197.43678284 186.57939148]
[206.52850342 198.51005554]
[214.18856812 203.41468811]
[215.65501404 210.62933350]
[224.60984802 222.66307068]
[233.56468201 234.69682312]
[242.51951599 246.73056030]
[251.47434998 258.76431274]
[260.42916870 270.79803467]
[269.38400269 282.83178711]
[278.33883667 294.86553955]
[287.29367065 306.89926147]
[296.24850464 318.93301392]
[305.20333862 330.96676636]
[314.54269409 315.37442017]
[334.23962402 306.51528931]
[349.06158447 308.81948853]
[363.88354492 311.12368774]
[380.46350098 307.58221436]
[388.45635986 322.53381348]
[376.30169678 334.35333252]
[361.57934570 325.94564819]
[346.75738525 323.64144897]
[331.93542480 321.33724976]
[327.56176758 327.42996216]
[339.74703979 336.17749023]
[330.99932861 348.36260986]
[318.81445312 339.61538696]
[314.44079590 345.70809937]
[321.36489868 359.01434326]
[328.28903198 372.32061768]
[335.21313477 385.62689209]
[348.44705200 394.29718018]
[347.45843506 409.15896606]
[354.38253784 422.46520996]
[361.30667114 435.77148438]
[368.23077393 449.07772827]
[375.15490723 462.38400269]
[382.07901001 475.69024658]
[391.44091797 487.41009521]
[402.88864136 497.10287476]
[414.33636475 506.79562378]
[430.33154297 512.41619873]
[429.35855103 529.34216309]
[412.82467651 533.09283447]
[404.64358521 518.24334717]
[393.19586182 508.55056763]
[381.74816895 498.85781860]
[375.70581055 503.30078125]
[377.35894775 518.20941162]
[363.62112427 512.18676758]
[357.57876587 516.62969971]
[363.41781616 530.44659424]
[369.25686646 544.26342773]
[375.09591675 558.08026123]
[387.59490967 567.78002930]
[385.42227173 582.51531982]
[391.26132202 596.33221436]
[397.10037231 610.14904785]
[402.93942261 623.96588135]
[418.08316040 627.34918213]
[428.32080078 639.00982666]
[429.71575928 654.46405029]
[421.73162842 667.76940918]
[407.43847656 673.80975342]
[392.33230591 670.26239014]
[382.22177124 658.49139404]
[380.99456787 643.02294922]
[389.12255859 629.80493164]
[383.28350830 615.98809814]
[377.44445801 602.17126465]
[371.60540771 588.35437012]
[359.52404785 579.64288330]
[361.27905273 563.91931152]
[355.44000244 550.10247803]
[349.60095215 536.28564453]
[343.76190186 522.46875000]
[343.13912964 511.29791260]
[345.27154541 501.31344604]
[349.60668945 493.12789917]
[355.46850586 487.16992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 232]
[2 231]
[3 230]
[4 229]
[5 228]
[6 227]
[8 225]
[9 224]
[10 223]
[11 222]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[23 195]
[24 194]
[26 192]
[27 191]
[28 190]
[30 188]
[31 187]
[38 147]
[39 146]
[40 145]
[41 144]
[42 143]
[49 138]
[50 137]
[51 136]
[52 135]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[69 118]
[70 117]
[74 115]
[75 114]
[76 113]
[80 109]
[81 108]
[82 107]
[89 99]
[90 98]
[91 97]
[151 186]
[152 185]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[164 175]
[165 174]
[209 217]
[210 216]
[211 215]
[233 241]
[234 240]
[235 239]
[245 270]
[246 269]
[247 268]
[248 267]
[250 265]
[251 264]
[252 263]
[253 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
