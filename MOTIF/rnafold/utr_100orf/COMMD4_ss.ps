%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAGGCAGUUAGUCCAAGUCACGUGAUCGUCGACUCAGCUGACCCUGCGGGACCGGAAAAAGAAAUUCCCGGGCCCUGGCUUCUUGGCGCGAUGAGGUUCCGGUUCUGUGGUGAUCUGGACUGUCCCGACUGGGUCCUGGCAGAAAUCAGCACGCUGGCCAAGAUGUCCUCUGUGAAGUUGCGGCUGCUCU\
) } def
/len { sequence length } bind def

/coor [
[88.70279694 118.90623474]
[77.08372498 128.39291382]
[65.46464539 137.87959290]
[63.73108292 153.35966492]
[51.81254959 162.81498718]
[37.06535339 161.06690979]
[25.44627953 170.55358887]
[13.82720470 180.04026794]
[11.12092495 186.09609985]
[6.45831585 189.37455750]
[1.67756474 189.63812256]
[-10.24110031 198.74555969]
[-22.15976524 207.85299683]
[-34.07843018 216.96043396]
[-45.99709702 226.06787109]
[-57.91576004 235.17530823]
[-58.15373230 248.65022278]
[-65.99803162 259.36877441]
[-78.40104675 263.54635620]
[-90.75841522 259.86880493]
[-102.82225800 268.78305054]
[-114.88609314 277.69729614]
[-126.94993591 286.61154175]
[-138.94157410 295.62268066]
[-150.86024475 304.73010254]
[-162.77890015 313.83755493]
[-168.58216858 329.17553711]
[-184.80830383 331.55136108]
[-194.76525879 318.52096558]
[-188.21015930 303.48889160]
[-171.88633728 301.91888428]
[-159.96768188 292.81143188]
[-148.04901123 283.70401001]
[-144.63847351 277.13598633]
[-135.86418152 274.54769897]
[-123.80033875 265.63345337]
[-111.73650360 256.71920776]
[-99.67266083 247.80496216]
[-97.89318085 231.08760071]
[-84.31008911 220.61849976]
[-67.02320099 223.25663757]
[-55.10453415 214.14920044]
[-43.18586731 205.04176331]
[-31.26720238 195.93432617]
[-19.34853745 186.82688904]
[-7.42987299 177.71945190]
[4.34052467 168.42118835]
[15.95959854 158.93450928]
[27.57867241 149.44783020]
[28.81573296 134.64900208]
[40.46398544 124.86264038]
[55.97796631 126.26052094]
[67.59704590 116.77384186]
[79.21611786 107.28716278]
[77.16420746 91.84735107]
[86.21482849 77.40223694]
[73.34695435 69.69393921]
[60.47908783 61.98563385]
[47.61121750 54.27733231]
[34.89176559 62.71405411]
[19.77020836 64.78800964]
[5.24894333 60.08740997]
[-5.78882170 49.54556274]
[-11.15153027 35.25556564]
[-9.77441406 20.05469894]
[-1.93089914 6.96111107]
[10.82167816 -1.42545712]
[25.95128441 -3.43984699]
[40.45392609 1.31790018]
[51.45009232 11.90313053]
[56.75648499 26.21413803]
[55.31951904 41.40946198]
[68.18738556 49.11776352]
[81.05525970 56.82606506]
[93.92312622 64.53437042]
[108.91096497 65.13835907]
[122.35736847 58.49048615]
[135.80377197 51.84261322]
[138.71156311 47.47561646]
[142.61643982 44.92446136]
[146.65614319 44.26439667]
[150.06428528 45.21611404]
[163.81617737 39.22564697]
[169.67204285 24.79142952]
[183.70373535 18.91214371]
[197.42846680 24.58376694]
[211.18035889 18.59329796]
[224.93223572 12.60282993]
[234.49412537 -0.00196650]
[249.25239563 2.00870848]
[263.00427246 -3.98176026]
[276.75616455 -9.97222900]
[283.38482666 -16.27684975]
[290.77816772 -15.94645023]
[304.62478638 -21.71459770]
[314.38848877 -34.16371536]
[329.11245728 -31.91554642]
[342.95904541 -37.68369293]
[352.72274780 -50.13281250]
[367.44671631 -47.88464355]
[381.29333496 -53.65279007]
[395.13992310 -59.42094040]
[401.22756958 -73.75894165]
[415.35217285 -79.41141510]
[428.98373413 -73.51942444]
[442.83035278 -79.28757477]
[456.67694092 -85.05571747]
[470.52355957 -90.82386780]
[481.35314941 -105.70925903]
[498.65225220 -102.79233551]
[512.40411377 -108.78280640]
[526.15600586 -114.77326965]
[539.90789795 -120.76374054]
[549.46978760 -133.36853027]
[564.22802734 -131.35786438]
[577.97991943 -137.34832764]
[591.73181152 -143.33880615]
[605.38543701 -149.55003357]
[618.93719482 -155.98042297]
[632.48895264 -162.41081238]
[646.04064941 -168.84120178]
[645.34295654 -183.99998474]
[650.48822021 -198.23266602]
[660.66314697 -209.38099670]
[674.29412842 -215.76713562]
[689.29095459 -216.44613647]
[703.36682129 -211.34562683]
[714.38745117 -201.27214050]
[727.93920898 -207.70252991]
[741.49096680 -214.13291931]
[750.35638428 -227.92918396]
[766.72186279 -226.87947083]
[773.75207520 -212.06365967]
[764.21490479 -198.72297668]
[747.92132568 -200.58116150]
[734.36956787 -194.15077209]
[720.81781006 -187.72038269]
[721.65087891 -172.81283569]
[716.69952393 -158.68379211]
[706.68890381 -147.49664307]
[693.12127686 -140.97685242]
[678.05065918 -140.14604187]
[663.77191162 -145.16189575]
[652.47106934 -155.28944397]
[638.91931152 -148.85905457]
[625.36755371 -142.42866516]
[611.81579590 -135.99827576]
[609.39385986 -131.86798096]
[604.34527588 -129.22225952]
[597.72229004 -129.58691406]
[583.97039795 -123.59645081]
[570.21850586 -117.60597992]
[561.64025879 -105.42966461]
[545.89837646 -107.01185608]
[532.14648438 -101.02139282]
[518.39459229 -95.03092194]
[504.64273071 -89.04045105]
[499.92111206 -77.89435577]
[488.50216675 -72.79484558]
[476.29171753 -76.97726440]
[462.44509888 -71.20911407]
[448.59851074 -65.44096375]
[434.75189209 -59.67281723]
[429.33483887 -45.84563446]
[415.37457275 -39.79866409]
[400.90808105 -45.57433319]
[387.06146240 -39.80618668]
[373.21487427 -34.03803635]
[364.44155884 -22.00149536]
[348.72720337 -23.83708954]
[334.88058472 -18.06894112]
[326.10726929 -6.03239965]
[310.39291382 -7.86799335]
[296.54632568 -2.09984541]
[282.74661255 3.77965379]
[268.99475098 9.77012253]
[255.24285889 15.76059151]
[246.66459656 27.93690872]
[230.92269897 26.35471344]
[217.17082214 32.34518051]
[203.41894531 38.33565140]
[198.22532654 52.24830627]
[184.36430359 58.51939392]
[169.80664062 52.97753143]
[156.05476379 58.96799850]
[142.45164490 65.28901672]
[129.00523376 71.93688965]
[115.55883789 78.58476257]
[121.94265747 86.21250153]
[124.95149994 95.47213745]
[124.29904175 104.97559357]
[120.23600006 113.35826874]
[113.49150848 119.47498322]
[105.14743805 122.55602264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[6 49]
[7 48]
[8 47]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[16 41]
[20 38]
[21 37]
[22 36]
[23 35]
[24 33]
[25 32]
[26 31]
[56 75]
[57 74]
[58 73]
[59 72]
[76 188]
[77 187]
[78 186]
[82 185]
[83 184]
[86 181]
[87 180]
[88 179]
[90 177]
[91 176]
[92 175]
[94 174]
[95 173]
[97 171]
[98 170]
[100 168]
[101 167]
[102 166]
[105 163]
[106 162]
[107 161]
[108 160]
[110 157]
[111 156]
[112 155]
[113 154]
[115 152]
[116 151]
[117 150]
[118 147]
[119 146]
[120 145]
[121 144]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
