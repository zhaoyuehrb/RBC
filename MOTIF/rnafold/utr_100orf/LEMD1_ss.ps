%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAGGGACUGGUUGCUAGUGGAAACCUCAGAGUGAAACUCACCCAGCUUUAGUAACCAACUCGAUUGCAUAGACUUUAGAUAACCAUGUGAAGGGGAUUCUACCAUCAGAAAAGAGGCCAAACUUCUAUCAUCAUGGUGGAUGUGAAGUGUCUGAGUGACUGUAAAUUGCAGAACCAACUUGAGAAGCUUGGAUUUUCACCUGGCCCAAUACUACCUUCCACCAGAAAGUUGU\
) } def
/len { sequence length } bind def

/coor [
[86.72523499 822.22332764]
[72.40184784 817.35552979]
[60.28494263 808.29815674]
[51.56162262 795.93859863]
[47.08650589 781.48767090]
[47.29801559 766.36120605]
[52.17543411 752.04107666]
[61.24092102 739.93023682]
[73.60633087 731.21520996]
[88.06022644 726.74975586]
[88.25989532 711.75109863]
[88.45956421 696.75244141]
[88.65924072 681.75378418]
[88.85890961 666.75506592]
[75.46193695 660.19866943]
[66.20207214 648.42730713]
[62.95806885 633.74273682]
[66.42565155 619.04595947]
[75.96917725 607.26422119]
[89.73736572 600.76824951]
[89.93704224 585.76953125]
[90.13671112 570.77087402]
[90.33638000 555.77221680]
[74.99025726 548.66973877]
[64.26407623 535.52532959]
[60.35818481 518.95867920]
[64.10736847 502.29901123]
[74.80297852 488.91616821]
[90.32632446 481.53881836]
[90.12665558 466.54016113]
[89.92697906 451.54147339]
[89.72731018 436.54281616]
[86.50107574 429.90792847]
[89.62614441 421.34347534]
[89.62614441 406.34347534]
[89.62614441 391.34347534]
[89.62614441 376.34347534]
[89.62614441 361.34347534]
[89.62614441 346.34347534]
[80.01745605 340.22949219]
[74.48921967 330.13549805]
[74.51242065 318.50708008]
[80.19673157 308.22558594]
[90.23479462 301.89428711]
[90.63410187 286.89959717]
[83.23834991 273.97085571]
[91.34027863 260.38156128]
[91.73958588 245.38687134]
[92.13889313 230.39218140]
[92.53820038 215.39749146]
[92.93750763 200.40281677]
[93.33681488 185.40812683]
[93.43665314 170.40846252]
[93.23698425 155.40979004]
[93.03731537 140.41111755]
[76.85850525 133.85275269]
[64.87391663 121.15882874]
[59.25566864 104.63002014]
[61.02202606 87.26206207]
[69.85284424 72.20275879]
[84.14761353 62.18149185]
[80.97687531 47.52044296]
[77.80613708 32.85939026]
[74.63539886 18.19833946]
[71.36714172 3.55871773]
[68.00152588 -11.05882740]
[64.63591003 -25.67637253]
[56.86426926 -12.84665680]
[42.70071793 -7.90764570]
[28.63655090 -13.12293530]
[21.11751556 -26.10230827]
[23.58966064 -40.89719009]
[34.91997528 -50.72694016]
[49.91566467 -51.08648682]
[61.70500183 -41.80953979]
[59.71411896 -56.67683411]
[57.72323608 -71.54412842]
[55.73235321 -86.41141510]
[53.74147034 -101.27870941]
[51.75058746 -116.14600372]
[42.25010300 -128.79714966]
[48.22971725 -142.43875122]
[46.23883438 -157.30604553]
[34.66194916 -171.63607788]
[41.99050903 -187.58963013]
[39.80189896 -202.42910767]
[37.61328506 -217.26858521]
[35.42467499 -232.10804749]
[33.23606491 -246.94752502]
[31.04745102 -261.78698730]
[28.76011848 -276.61157227]
[26.37416649 -291.42059326]
[23.98821449 -306.22964478]
[21.50374794 -321.02246094]
[18.92087746 -335.79840088]
[16.33800697 -350.57434082]
[13.75513649 -365.35031128]
[11.17226601 -380.12625122]
[-2.55548000 -383.44869995]
[-13.94744015 -391.72467041]
[-21.30504608 -403.67944336]
[-23.54682541 -417.49291992]
[-20.36726761 -431.07666016]
[-12.27797604 -442.38970947]
[-0.52568161 -449.74520874]
[-2.91163397 -464.55422974]
[-7.35920954 -472.51257324]
[-5.22941494 -479.57614136]
[-7.41802645 -494.41561890]
[-20.25218773 -503.63839722]
[-22.72332573 -519.24829102]
[-13.36536026 -531.98425293]
[2.26979518 -534.29022217]
[14.90607929 -524.79809570]
[17.04660988 -509.13946533]
[7.42144680 -496.60421753]
[9.61005878 -481.76473999]
[11.89739132 -466.94018555]
[14.28334332 -452.13116455]
[29.69150925 -447.86596680]
[41.73824310 -437.26666260]
[47.97547531 -422.41952515]
[47.10625458 -406.28063965]
[39.25405502 -392.08740234]
[25.94821930 -382.70913696]
[28.53108978 -367.93316650]
[31.11396027 -353.15722656]
[33.69683075 -338.38125610]
[36.27970123 -323.60531616]
[40.52022934 -317.56808472]
[38.79724121 -308.61557007]
[41.18319321 -293.80654907]
[43.56914520 -278.99752808]
[47.72893143 -272.90438843]
[45.88692474 -263.97561646]
[48.07553864 -249.13613892]
[50.26414871 -234.29666138]
[52.45275879 -219.45719910]
[54.64137268 -204.61772156]
[56.82998276 -189.77824402]
[66.34312439 -182.32402039]
[68.29638672 -169.99142456]
[61.10612869 -159.29693604]
[63.09701157 -144.42964172]
[72.45509338 -132.84190369]
[66.61788177 -118.13688660]
[68.60876465 -103.26959229]
[70.59964752 -88.40229797]
[72.59053040 -73.53501129]
[74.58141327 -58.66771698]
[76.57229614 -43.80042267]
[79.25345612 -29.04199028]
[82.61907196 -14.42444515]
[85.98468781 0.19309966]
[90.54051971 5.99607992]
[89.29644775 15.02760029]
[92.46718597 29.68865204]
[95.63792419 44.34970093]
[98.80866241 59.01075363]
[114.56237793 61.66627121]
[128.10575867 70.14025116]
[137.38310242 83.14648438]
[151.95455933 79.58658600]
[166.52600098 76.02667999]
[181.09745789 72.46678162]
[195.66889954 68.90688324]
[209.62054443 59.27423859]
[222.73895264 70.01406860]
[216.05036926 85.59287262]
[199.22880554 83.47833252]
[184.65734863 87.03823090]
[170.08590698 90.59812927]
[155.51445007 94.15803528]
[140.94300842 97.71793365]
[140.32537842 107.44323730]
[137.43040466 116.74819946]
[132.42160034 125.10732269]
[125.58181763 132.04853821]
[117.29732513 137.17984009]
[108.03598785 140.21144104]
[108.23565674 155.21011353]
[108.43532562 170.20878601]
[111.08769226 174.66474915]
[111.71465302 179.23643494]
[110.60881042 183.13682556]
[108.33150482 185.80743408]
[107.93219757 200.80212402]
[107.53289032 215.79679871]
[107.13357544 230.79148865]
[106.73426819 245.78617859]
[106.33496094 260.78085327]
[113.70215607 274.78210449]
[105.62879181 287.29888916]
[105.22948456 302.29357910]
[118.78093719 315.55172729]
[118.32772827 334.18469238]
[104.62614441 346.34347534]
[104.62614441 361.34347534]
[104.62614441 376.34347534]
[104.62614441 391.34347534]
[104.62614441 406.34347534]
[104.62614441 421.34347534]
[104.72598267 436.34313965]
[104.92565155 451.34179688]
[105.12532043 466.34048462]
[105.32499695 481.33914185]
[117.65723419 486.03253174]
[127.63989258 494.61257935]
[134.10166931 506.04400635]
[136.29409790 518.95867920]
[133.97814941 531.81933594]
[127.45018768 543.10266113]
[117.50414276 551.47955322]
[105.33505249 555.97186279]
[105.13538361 570.97058105]
[104.93570709 585.96923828]
[104.73603821 600.96789551]
[118.32642365 607.82812500]
[127.55293274 619.85968018]
[130.62805176 634.64361572]
[126.99428558 649.23663330]
[117.42434692 660.75732422]
[103.85758209 666.95477295]
[103.65790558 681.95343018]
[103.45823669 696.95208740]
[103.25856781 711.95074463]
[103.05889130 726.94946289]
[117.38879395 731.79803467]
[129.51782227 740.83917236]
[138.25770569 753.18707275]
[142.75218201 767.63195801]
[142.56094360 782.75866699]
[137.70271301 797.08532715]
[128.65347290 809.20831299]
[116.29975128 817.93988037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 227]
[11 226]
[12 225]
[13 224]
[14 223]
[20 217]
[21 216]
[22 215]
[23 214]
[29 206]
[30 205]
[31 204]
[32 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[44 194]
[45 193]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 182]
[54 181]
[55 180]
[61 159]
[62 158]
[63 157]
[64 156]
[65 154]
[66 153]
[67 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[82 144]
[83 143]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
[91 133]
[92 132]
[93 131]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[105 119]
[106 118]
[108 117]
[109 116]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
