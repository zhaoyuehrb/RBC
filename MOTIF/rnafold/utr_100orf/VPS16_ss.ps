%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGGAAGUGCCGGCCUGGAGCCCGCUCUAGGUGGGUGUCCCCUCGGUGCUUCCCAGCUGCCGUCUGCACCAGCCAUGGACUGCUACACGGCGAACUGGAACCCACUCGGGGACUCUGCCUUUUACCGGAAAUAUGAGCUGUACAGCAUGGACUGGGACCUGAAGGAGGAACUCA\
) } def
/len { sequence length } bind def

/coor [
[149.51023865 196.11471558]
[138.67410278 206.48672485]
[125.12336731 212.91925049]
[110.23648834 214.75794983]
[95.52786255 211.81578064]
[82.49375153 204.39204407]
[72.46007538 193.24191284]
[66.44753265 179.49966431]
[65.06774139 164.56326294]
[68.46108246 149.95213318]
[76.28235626 137.15261841]
[87.73864746 127.46512604]
[93.99433136 113.83184052]
[81.96830750 122.79703522]
[69.94228363 131.76223755]
[63.50263596 146.21357727]
[48.67430878 147.61715698]
[36.64828491 156.58235168]
[24.62226295 165.54754639]
[12.59624004 174.51275635]
[0.57021743 183.47795105]
[-11.45580578 192.44314575]
[-23.48182869 201.40834045]
[-35.50785065 210.37353516]
[-41.49292755 225.64151001]
[-57.74614716 227.82438660]
[-67.54758453 214.67662048]
[-60.81436920 199.72349548]
[-44.47304916 198.34751892]
[-32.44702530 189.38232422]
[-20.42100334 180.41712952]
[-8.39498043 171.45191956]
[3.63104224 162.48672485]
[15.65706539 153.52153015]
[27.68308830 144.55633545]
[39.70911026 135.59112549]
[45.28857803 121.78103638]
[60.97708893 119.73621368]
[73.00311279 110.77101135]
[85.02912903 101.80581665]
[89.18618011 87.39335632]
[83.78199768 73.40068817]
[78.37781525 59.40802002]
[72.97364044 45.41534805]
[67.56945801 31.42267799]
[62.16527176 17.43000793]
[50.69398499 11.49173737]
[46.48960876 -0.29692370]
[51.29683304 -11.41709614]
[46.13905334 -25.50245476]
[40.98127365 -39.58781052]
[35.82349396 -53.67317200]
[20.77335167 -56.40089035]
[9.18575478 -66.23066711]
[4.10791683 -80.44622040]
[6.80925751 -95.19609070]
[16.46579361 -106.53702545]
[11.30801392 -120.62238312]
[6.15023422 -134.70774841]
[0.99245459 -148.79310608]
[-13.40416050 -160.25277710]
[-9.75319672 -177.40512085]
[-15.15737915 -191.39779663]
[-20.56156158 -205.39047241]
[-25.96574211 -219.38313293]
[-31.36992455 -233.37580872]
[-36.77410507 -247.36848450]
[-52.88703156 -254.14393616]
[-59.00769043 -270.15609741]
[-51.81133270 -285.34194946]
[-57.46025467 -299.23764038]
[-63.10917282 -313.13330078]
[-69.00109100 -326.92770386]
[-75.13418579 -340.61657715]
[-81.26728821 -354.30541992]
[-94.86677551 -363.46981812]
[-93.46015930 -379.80853271]
[-78.49444580 -386.51370239]
[-65.36507416 -376.68762207]
[-67.57842255 -360.43853760]
[-61.44532394 -346.74966431]
[-55.31222153 -333.06079102]
[-51.22148514 -330.54519653]
[-48.68323898 -325.41955566]
[-49.21350098 -318.78222656]
[-43.56457901 -304.88653564]
[-37.91566086 -290.99087524]
[-25.44459534 -287.68374634]
[-17.03685570 -277.64190674]
[-15.94089890 -264.39550781]
[-22.78143692 -252.77265930]
[-17.37725449 -238.77998352]
[-11.97307205 -224.78732300]
[-6.56889057 -210.79464722]
[-1.16470885 -196.80198669]
[4.23947287 -182.80931091]
[15.18387604 -177.61433411]
[19.79140663 -165.97732544]
[15.07781219 -153.95088196]
[20.23559189 -139.86552429]
[25.39337158 -125.78016663]
[30.55115128 -111.69480896]
[45.24786377 -109.27154541]
[56.83545685 -99.75399780]
[62.13834763 -85.62085724]
[59.63862991 -70.63259125]
[49.90885162 -58.83095169]
[55.06663132 -44.74559021]
[60.22441101 -30.66023445]
[65.38218689 -16.57487679]
[79.43262482 -6.08116531]
[76.15794373 12.02582645]
[81.56212616 26.01849556]
[86.96630859 40.01116562]
[92.37049103 54.00383759]
[97.77467346 67.99650574]
[103.17885590 81.98917389]
[122.09538269 97.22897339]
[135.94094849 102.99961090]
[149.78651428 108.77024841]
[165.50120544 106.93748474]
[174.27235413 118.97560883]
[188.11791992 124.74624634]
[201.96348572 130.51689148]
[215.80905151 136.28753662]
[229.65461731 142.05816650]
[247.76419067 133.41893005]
[266.12390137 140.72680664]
[273.12405396 158.88047791]
[287.25411987 163.91445923]
[301.38421631 168.94844055]
[315.51428223 173.98242188]
[326.95303345 166.83830261]
[340.22369385 167.58518982]
[350.48336792 175.72567749]
[354.11764526 188.10537720]
[368.15719604 193.38655090]
[382.19674683 198.66773987]
[396.23629761 203.94892883]
[408.05603027 194.14129639]
[423.19873047 191.57331848]
[437.59106445 196.93577576]
[447.36160278 208.78619385]
[449.88208008 223.93685913]
[444.47454834 238.31231689]
[432.59356689 248.04566956]
[417.43508911 250.51866150]
[403.07662964 245.06608582]
[393.38058472 233.15464783]
[390.95510864 217.98847961]
[376.91555786 212.70729065]
[362.87600708 207.42611694]
[348.83645630 202.14492798]
[333.84527588 209.73852539]
[317.67755127 204.04148865]
[310.48031616 188.11248779]
[296.35021973 183.07852173]
[282.22015381 178.04454041]
[268.09008789 173.01055908]
[260.30487061 179.77726746]
[250.33126831 182.71005249]
[239.96223450 181.21148682]
[231.09112549 175.48713684]
[225.36610413 166.52030945]
[223.88397217 155.90373230]
[210.03840637 150.13310242]
[196.19284058 144.36245728]
[182.34727478 138.59181213]
[168.50170898 132.82116699]
[153.77734375 135.06669617]
[144.01586914 122.61582184]
[130.17030334 116.84517670]
[116.32474518 111.07453918]
[125.70877838 122.77667236]
[139.17483521 129.38465881]
[149.87533569 139.89651489]
[156.72175598 153.24291992]
[159.01763916 168.06617737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 40]
[14 39]
[15 38]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[41 117]
[42 116]
[43 115]
[44 114]
[45 113]
[46 112]
[49 110]
[50 109]
[51 108]
[52 107]
[57 102]
[58 101]
[59 100]
[60 99]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[70 87]
[71 86]
[72 85]
[73 82]
[74 81]
[75 80]
[118 173]
[119 172]
[120 171]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[129 159]
[130 158]
[131 157]
[132 156]
[136 153]
[137 152]
[138 151]
[139 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
