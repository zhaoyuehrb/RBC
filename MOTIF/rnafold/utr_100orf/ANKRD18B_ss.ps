%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGUGGGGGUGGAAAGGCCACGAGGAGCCGCGGCGUCUCAGGAGCGGGUGGUGGGCAUCUGAGAAGUCGCCACCAUGAGGAAGCUCCUCAGUUUUGGGAGACGCCUGGGCCAGGCGCUCCUGAGCUCCAUGGACCAAGAGUAUGCGGGUCGGGGGUACCACAUUCGGGACUGGG\
) } def
/len { sequence length } bind def

/coor [
[97.26809692 259.75531006]
[109.35628510 250.16993713]
[107.77080536 235.25396729]
[106.18532562 220.33798218]
[104.59984589 205.42201233]
[103.01436615 190.50604248]
[101.42888641 175.59007263]
[99.84341431 160.67410278]
[98.12636566 145.77268982]
[96.27789307 130.88702393]
[84.93371582 130.18646240]
[73.76380157 125.17998505]
[64.86157227 137.25268555]
[55.95934296 149.32539368]
[47.05710983 161.39810181]
[48.02349854 177.41203308]
[36.00986862 188.04463196]
[20.23204422 185.13948059]
[12.79342556 170.92518616]
[19.40028381 156.30570984]
[34.98440170 152.49588013]
[43.88663101 140.42317200]
[52.78886414 128.35046387]
[61.69109344 116.27775574]
[58.40861130 101.64131165]
[45.20326233 94.52662659]
[31.99791718 87.41193390]
[18.79257011 80.29724884]
[5.58722353 73.18255615]
[-7.61812353 66.06786346]
[-20.82347107 58.95317459]
[-44.25255203 69.41944122]
[-69.29840851 49.16612625]
[-83.62827301 44.73275375]
[-97.95814514 40.29938126]
[-112.28801727 35.86600876]
[-126.61788940 31.43263626]
[-142.08836365 34.74551773]
[-151.96022034 23.59223366]
[-166.29008484 19.15886116]
[-180.61994934 14.72548866]
[-194.94982910 10.29211617]
[-209.27969360 5.85874319]
[-223.60957336 1.42537069]
[-237.93943787 -3.00800204]
[-253.40991211 0.30487856]
[-263.28176880 -10.84840488]
[-277.61163330 -15.28177738]
[-289.34906006 -5.26995897]
[-304.63906860 -3.21585417]
[-318.60266113 -9.77492142]
[-326.78411865 -22.85418510]
[-326.57278442 -38.28010178]
[-318.03607178 -51.13031387]
[-303.89801025 -57.30437088]
[-288.67001343 -54.83214951]
[-277.21130371 -44.50252533]
[-273.17825317 -29.61164856]
[-258.84838867 -25.17827606]
[-244.40289307 -28.80826187]
[-233.50607300 -17.33787346]
[-219.17619324 -12.90450096]
[-204.84632874 -8.47112751]
[-190.51644897 -4.03775501]
[-176.18658447 0.39561757]
[-161.85670471 4.82899046]
[-147.52684021 9.26236248]
[-133.08134460 5.63237762]
[-122.18451691 17.10276604]
[-107.85464478 21.53613853]
[-93.52477264 25.96951103]
[-79.19490051 30.40288353]
[-64.86503601 34.83625793]
[-59.65615082 29.44018745]
[-49.23839188 18.64804649]
[-44.02951431 13.25197601]
[-48.96584702 -0.91250789]
[-61.72914124 -11.20961285]
[-58.92625427 -27.36745453]
[-43.44055557 -32.76423264]
[-31.20240593 -21.84820175]
[-34.80136108 -5.84884119]
[-29.86502838 8.31564331]
[-16.17939568 18.92176056]
[-10.93680191 33.10045624]
[-13.70878029 45.74782944]
[-0.50343370 52.86251831]
[12.70191288 59.97720718]
[25.90726089 67.09189606]
[39.11260605 74.20658875]
[52.31795502 81.32128143]
[65.52330017 88.43596649]
[72.73509979 75.71127319]
[84.41767883 66.81113434]
[98.71739960 63.20730591]
[113.34179688 65.52643585]
[125.92707825 73.44167328]
[136.62686157 62.92908096]
[147.32666016 52.41648865]
[158.02644348 41.90390015]
[168.72622681 31.39130974]
[179.42601013 20.87872124]
[190.12580872 10.36613083]
[194.07019043 2.09300280]
[201.10841370 -0.23549362]
[211.99206543 -10.55761147]
[222.87571716 -20.87972832]
[233.75936890 -31.20184708]
[244.64302063 -41.52396393]
[255.52667236 -51.84608078]
[262.85845947 -67.13272095]
[279.57733154 -64.31924438]
[281.50204468 -47.47490311]
[265.84878540 -40.96242905]
[254.96514893 -30.64031219]
[244.08149719 -20.31819344]
[233.19784546 -9.99607658]
[222.31419373 0.32604116]
[211.43052673 10.64815903]
[200.63839722 21.06591797]
[189.93861389 31.57850838]
[179.23881531 42.09109879]
[168.53903198 52.60368729]
[157.83924866 63.11627579]
[147.13945007 73.62886810]
[136.43966675 84.14145660]
[139.72215271 98.77789307]
[153.88664246 103.71422577]
[168.05111694 108.65055847]
[182.21560669 113.58689117]
[196.38008118 118.52322388]
[205.91879272 113.21762848]
[216.58227539 114.03786469]
[224.84994507 120.46997833]
[228.12634277 130.18760681]
[242.10778809 135.62074280]
[256.08923340 141.05389404]
[270.07067871 146.48703003]
[281.56732178 136.38327026]
[296.44525146 132.79084778]
[311.28567505 136.53527832]
[322.67834473 146.75613403]
[328.00531006 161.10472107]
[326.04248047 176.28384399]
[317.24087524 188.80546570]
[303.62310791 195.79217529]
[288.31835938 195.63851929]
[274.84359741 188.37977600]
[266.29519653 175.68395996]
[264.63754272 160.46849060]
[250.65609741 155.03533936]
[236.67465210 149.60220337]
[222.69319153 144.16905212]
[203.87377930 148.53262329]
[191.44375610 132.68771362]
[177.27926636 127.75138092]
[163.11479187 122.81504822]
[148.95030212 117.87871552]
[134.78581238 112.94238281]
[124.25179291 123.99053955]
[111.16355896 129.03854370]
[113.01203918 143.92422485]
[117.18636322 152.08374023]
[114.75938416 159.08862305]
[116.34486389 174.00459290]
[117.93034363 188.92056274]
[119.51582336 203.83653259]
[121.10129547 218.75251770]
[122.68677521 233.66848755]
[124.27225494 248.58445740]
[138.10530090 255.41455078]
[146.03018188 268.65087891]
[145.51808167 284.06973267]
[136.73242188 296.75103760]
[122.47666168 302.64825439]
[107.29977417 299.87954712]
[96.04464722 289.32846069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 162]
[10 161]
[12 24]
[13 23]
[14 22]
[15 21]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[31 86]
[33 73]
[34 72]
[35 71]
[36 70]
[37 69]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[47 59]
[48 58]
[76 83]
[77 82]
[97 126]
[98 125]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[135 153]
[136 152]
[137 151]
[138 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
