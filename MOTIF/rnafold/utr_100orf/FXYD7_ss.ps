%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:38:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACAUCGGUCCGUCCUGCUUCCAGCUGCUGCAGCGCGCCUUCGCCGCCAAAGCAUCCAGCAGCCCCCUGCUCCGGCCCAGCAUGGCGACCCCGACCCAGACCCCCACAAAGGCUCCUGAGGAACCUGACCCAUUUUACUAUGACUACAACACGGUGCAGACUGUGGGCAUGACUCUGGCAA\
) } def
/len { sequence length } bind def

/coor [
[-113.03206635 166.70570374]
[-127.94939423 168.27839661]
[-141.98907471 162.99752808]
[-152.17207336 151.98361206]
[-156.33775330 137.57363892]
[-153.60218811 122.82519531]
[-144.54583740 110.86766815]
[-131.09049988 104.23830414]
[-145.75382996 101.07811737]
[-160.41716003 97.91793060]
[-175.08049011 94.75774384]
[-189.58978271 104.51056671]
[-206.33634949 100.83592224]
[-215.07786560 86.48048401]
[-229.79273987 83.56974792]
[-244.50761414 80.65901184]
[-259.22250366 77.74826813]
[-274.26177979 82.66058350]
[-285.24569702 72.60063934]
[-299.96057129 69.68990326]
[-314.67544556 66.77915955]
[-329.39031982 63.86842346]
[-348.13696289 71.23892975]
[-362.15087891 57.93536758]
[-376.95611572 55.52597809]
[-385.18603516 69.37153625]
[-400.90185547 77.37313080]
[-419.99142456 75.64598083]
[-436.47805786 63.12511444]
[-451.38677979 64.77745819]
[-466.29547119 66.42980194]
[-481.20419312 68.08214569]
[-488.94485474 81.40086365]
[-502.88088989 87.53608704]
[-517.58343506 84.32682037]
[-527.45874023 73.20857239]
[-542.36749268 74.86091614]
[-557.27618408 76.51325989]
[-565.48291016 80.57717896]
[-572.45178223 78.06487274]
[-587.38641357 79.46381378]
[-600.44152832 89.38833618]
[-615.45727539 82.79588318]
[-616.98669434 66.46820831]
[-603.45648193 57.20182800]
[-588.78533936 64.52919006]
[-573.85076904 63.13024902]
[-558.92852783 61.60454941]
[-544.01983643 59.95220566]
[-529.11108398 58.29986191]
[-521.91003418 45.28901672]
[-508.26702881 38.93819427]
[-493.32577515 41.87293625]
[-482.85653687 53.17343140]
[-467.94781494 51.52108765]
[-453.03912354 49.86874390]
[-438.13040161 48.21640015]
[-435.87341309 41.06405258]
[-446.00466919 30.00252533]
[-431.35946655 26.75936508]
[-429.10247803 19.60701942]
[-440.36254883 9.69689846]
[-451.62265015 -0.21322244]
[-462.88272095 -10.12334347]
[-474.14282227 -20.03346443]
[-490.31890869 -22.72896767]
[-495.81842041 -38.17847824]
[-484.98391724 -50.48886490]
[-468.96102905 -46.99625397]
[-464.23269653 -31.29354858]
[-452.97259521 -21.38342857]
[-441.71252441 -11.47330666]
[-430.45245361 -1.56318617]
[-419.19235229 8.34693432]
[-395.56216431 8.95211506]
[-378.98196411 22.30290413]
[-374.54672241 40.72074509]
[-359.74148560 43.13013840]
[-351.99636841 36.42212677]
[-341.61825562 35.06835175]
[-332.01629639 39.75776291]
[-326.47958374 49.15354538]
[-311.76470947 52.06428528]
[-297.04983521 54.97502518]
[-282.33496094 57.88576126]
[-268.34820557 52.76525116]
[-256.31176758 63.03339386]
[-241.59687805 65.94412994]
[-226.88200378 68.85487366]
[-212.16712952 71.76560974]
[-202.55754089 63.16168976]
[-189.55209351 61.64798355]
[-177.88121033 68.00097656]
[-171.92030334 80.09441376]
[-157.25697327 83.25460052]
[-142.59364319 86.41478729]
[-127.93031311 89.57498169]
[-118.15853882 86.20169067]
[-108.13613129 92.10972595]
[-93.14964294 92.74634552]
[-78.16316223 93.38295746]
[-63.17667389 94.01957703]
[-48.19018936 94.65619659]
[-34.39151764 79.60275269]
[-13.67809200 79.57904816]
[0.55154949 95.03130341]
[15.54668331 94.64926147]
[30.54181671 94.26721191]
[45.53695297 93.88516998]
[60.53208542 93.50312805]
[75.52722168 93.12107849]
[89.22055054 70.14164734]
[121.61609650 68.66449738]
[133.97196960 60.15966034]
[146.32785034 51.65482330]
[153.30844116 37.45686340]
[168.17918396 36.61404800]
[180.53504944 28.10920906]
[192.89093018 19.60437202]
[202.50981140 5.64323187]
[218.58811951 11.02137756]
[217.87107849 27.96015549]
[201.39576721 31.96024895]
[189.03990173 40.46508789]
[176.68402100 48.96992493]
[170.58720398 62.55956268]
[154.83268738 64.01070404]
[142.47680664 72.51554108]
[130.12094116 81.02037811]
[131.07356262 88.45963287]
[145.95207214 86.55436707]
[160.83058167 84.64909363]
[174.39219666 78.23954010]
[184.67869568 89.15686798]
[177.47422791 102.31345367]
[162.73585510 99.52760315]
[147.85734558 101.43286896]
[132.97883606 103.33813477]
[133.93147278 110.77738953]
[148.03169250 115.89439392]
[162.13191223 121.01139832]
[176.23213196 126.12839508]
[191.84396362 123.56291962]
[201.16833496 135.17779541]
[215.26855469 140.29479980]
[228.71220398 132.30715942]
[244.13656616 134.88067627]
[254.25872803 146.80021667]
[254.29933167 162.43774414]
[244.23919678 174.40969849]
[228.82839966 177.06327820]
[215.34346008 169.14555359]
[210.15155029 154.39501953]
[196.05133057 149.27801514]
[181.44805908 152.20950317]
[171.11514282 140.22862244]
[157.01490784 135.11161804]
[142.91468811 129.99461365]
[128.81446838 124.87761688]
[117.48748016 131.42166138]
[105.29682922 133.43540955]
[93.89183044 131.15136719]
[84.65193939 125.35301971]
[78.51992798 117.21775818]
[75.90926361 108.11621857]
[60.91413116 108.49826050]
[45.91899490 108.88030243]
[30.92386246 109.26234436]
[15.92872810 109.64439392]
[0.93359381 110.02643585]
[-3.45241332 118.73810577]
[-10.67565632 125.20547485]
[-19.70849228 128.56533813]
[-29.28640556 128.39257812]
[-38.08499527 124.75344849]
[-44.90311050 118.19063568]
[-48.82680893 109.64267731]
[-63.81329346 109.00606537]
[-78.79977417 108.36944580]
[-93.78626251 107.73282623]
[-108.77274323 107.09620667]
[-97.42192078 116.90226746]
[-91.67090607 130.75599670]
[-92.73999023 145.71784973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 97]
[9 96]
[10 95]
[11 94]
[14 90]
[15 89]
[16 88]
[17 87]
[19 85]
[20 84]
[21 83]
[22 82]
[24 78]
[25 77]
[29 57]
[30 56]
[31 55]
[32 54]
[36 50]
[37 49]
[38 48]
[40 47]
[41 46]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[99 181]
[100 180]
[101 179]
[102 178]
[103 177]
[106 170]
[107 169]
[108 168]
[109 167]
[110 166]
[111 165]
[113 129]
[114 128]
[115 127]
[117 125]
[118 124]
[119 123]
[139 159]
[140 158]
[141 157]
[142 156]
[144 154]
[145 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
