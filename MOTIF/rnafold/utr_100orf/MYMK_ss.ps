%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUGCCCAAAGGGAGCUGGCCUUCCCACUUCGUGCUCCUGUGCUGGGGACCUGGGACACCAGCACCCUCCCCACCCCAGCCAGUGCUUUCCUCCUGGCCCAUGGGGACGCUGGUGGCCAAGCUGCUCCUGCCCACCCUCAGCAGCCUGGCCUUCCUCCCCACUGUCAGCAUCGCGGCCAAGAGGCGGUUCCACAUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[42.22777557 793.21057129]
[29.00341606 782.60150146]
[35.53702927 766.95703125]
[36.00122833 751.96423340]
[36.46543121 736.97143555]
[33.90081406 732.93566895]
[33.84859467 727.24481201]
[37.18313980 721.52380371]
[38.11109543 706.55255127]
[39.03905106 691.58129883]
[27.45532608 682.25628662]
[23.53737640 667.72656250]
[28.99008560 653.50964355]
[41.91805649 645.13262939]
[42.84601212 630.16137695]
[43.77396774 615.19012451]
[44.70192719 600.21881104]
[45.62988281 585.24755859]
[46.55783844 570.27630615]
[47.48579407 555.30505371]
[44.76019669 548.43011475]
[48.54572296 540.10980225]
[49.70524979 525.15472412]
[50.86478043 510.19958496]
[52.02431107 495.24447632]
[40.88995743 489.25939941]
[32.81821823 479.47036743]
[29.03656197 467.31036377]
[30.14104462 454.57696533]
[36.00267410 443.16659546]
[45.78134155 434.79193115]
[58.04606628 430.72512817]
[59.66785049 415.81304932]
[61.28963852 400.90100098]
[62.91142273 385.98892212]
[64.53321075 371.07684326]
[53.39474106 361.22430420]
[50.15535355 346.52838135]
[56.26200485 332.57983398]
[69.56482697 324.81185913]
[71.18661499 309.89981079]
[72.80839539 294.98773193]
[60.30319214 284.35754395]
[56.55849075 268.20697021]
[63.24234772 252.85359192]
[77.90332794 244.42457581]
[79.29415131 229.48919678]
[80.68497467 214.55381775]
[82.07579803 199.61843872]
[83.46662140 184.68305969]
[84.85744476 169.74768066]
[82.89402008 166.81170654]
[82.25870514 162.77703857]
[83.45317078 158.27993774]
[86.67520905 154.15693665]
[88.75769806 139.30220032]
[90.84018707 124.44746399]
[92.92267609 109.59272766]
[82.83472443 103.27321625]
[80.46859741 87.80073547]
[74.38168335 74.09127045]
[68.29477692 60.38179779]
[62.20787048 46.67232895]
[56.12096024 32.96286011]
[50.03404999 19.25339317]
[40.85104370 17.06373024]
[33.81199265 10.98143387]
[30.41552162 2.46880889]
[31.30711746 -6.51461887]
[36.16041946 -13.96286774]
[30.71633911 -27.94006348]
[25.27225685 -41.91725922]
[19.82817459 -55.89445114]
[14.38409233 -69.87164307]
[8.94001102 -83.84883881]
[-3.47082472 -85.40515137]
[-13.97995186 -92.05407715]
[-20.62401772 -102.48075867]
[-22.19278145 -114.67166138]
[-18.44916916 -126.30329132]
[-10.16274261 -135.18502808]
[-15.17166901 -149.32400513]
[-20.18059540 -163.46298218]
[-25.18952179 -177.60195923]
[-30.19844818 -191.74093628]
[-45.31492233 -194.45898438]
[-57.03678131 -204.38337708]
[-62.21090698 -218.84449768]
[-59.44548035 -233.95237732]
[-49.48439407 -245.64308167]
[-35.00712585 -250.77185059]
[-19.90799141 -247.95907593]
[-8.24857807 -237.96139526]
[-3.16521144 -223.46812439]
[-6.02529192 -208.37788391]
[-16.05947113 -196.74986267]
[-11.05054569 -182.61088562]
[-6.04161930 -168.47190857]
[-1.03269279 -154.33293152]
[3.97623348 -140.19395447]
[21.12016678 -135.97741699]
[32.40412903 -122.19551849]
[33.16778946 -104.24255371]
[22.91720581 -89.29292297]
[28.36128807 -75.31572723]
[33.80537033 -61.33853531]
[39.24945068 -47.36133957]
[44.69353485 -33.38414383]
[50.13761520 -19.40695000]
[67.30727386 -7.96018887]
[63.74352264 13.16648388]
[69.83042908 26.87595367]
[75.91733551 40.58542252]
[82.00424957 54.29489136]
[88.09115601 68.00436401]
[94.17806244 81.71382904]
[108.46527863 86.28279877]
[121.37758636 78.64917755]
[134.28990173 71.01555634]
[147.20220947 63.38193130]
[160.11453247 55.74831009]
[168.05642700 42.06486130]
[182.94990540 42.24827576]
[195.86221313 34.61465454]
[208.77452087 26.98102951]
[221.68684387 19.34740639]
[234.59915161 11.71378326]
[247.51145935 4.08016062]
[245.72152710 -11.04319859]
[250.24374390 -25.58518410]
[260.29464722 -37.02630615]
[274.13284302 -43.38432312]
[289.36077881 -43.55767059]
[303.34011841 -37.51631165]
[313.64886475 -26.30695534]
[318.50094604 -11.87168312]
[317.05572510 3.28850389]
[309.56362915 16.54701233]
[297.32263184 25.60672379]
[282.45364380 28.89798927]
[267.53274536 25.85057831]
[255.14508057 16.99247169]
[242.23277283 24.62609482]
[229.32046509 32.25971985]
[216.40814209 39.89334106]
[203.49583435 47.52696609]
[190.58352661 55.16058731]
[183.56520081 68.29802704]
[167.74815369 68.66062164]
[154.83583069 76.29424286]
[141.92352295 83.92786407]
[129.01121521 91.56149292]
[116.09889984 99.19511414]
[107.77741241 111.67520905]
[105.69492340 126.52995300]
[103.61244202 141.38468933]
[101.52995300 156.23942566]
[99.79282379 171.13850403]
[98.40200043 186.07388306]
[97.01117706 201.00926208]
[95.62035370 215.94464111]
[94.22953033 230.88002014]
[92.83870697 245.81539917]
[103.84169006 254.12355042]
[109.25816345 266.68457031]
[107.77095032 280.17364502]
[99.87503815 291.07751465]
[87.72046661 296.60952759]
[86.09867859 311.52157593]
[84.47689819 326.43365479]
[95.79882812 336.87969971]
[98.76418304 351.81491089]
[92.44133759 365.47088623]
[79.44527435 372.69863892]
[77.82349396 387.61071777]
[76.20170593 402.52276611]
[74.57991791 417.43484497]
[72.95813751 432.34692383]
[87.37432098 442.38760376]
[94.68577576 458.26416016]
[92.96179962 475.56863403]
[82.76663208 489.54678345]
[66.97942352 496.40399170]
[65.81989288 511.35913086]
[64.66036987 526.31420898]
[63.50083923 541.26934814]
[62.45706558 556.23297119]
[61.52910614 571.20428467]
[60.60115051 586.17553711]
[59.67319489 601.14678955]
[58.74523926 616.11804199]
[57.81727982 631.08935547]
[56.88932419 646.06060791]
[68.68386078 655.96997070]
[72.33917999 670.75140381]
[66.65692902 684.68615723]
[54.01032257 692.50927734]
[53.08236313 707.48052979]
[52.15440750 722.45178223]
[51.45824432 737.43560791]
[50.99404526 752.42846680]
[50.52984619 767.42126465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[8 199]
[9 198]
[10 197]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[22 186]
[23 185]
[24 184]
[25 183]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[40 170]
[41 169]
[42 168]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[55 157]
[56 156]
[57 155]
[58 154]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[70 109]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[117 153]
[118 152]
[119 151]
[120 150]
[121 149]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[128 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
