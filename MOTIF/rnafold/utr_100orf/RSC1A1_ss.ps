%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGAAACCCGAGUUUGAGGACCUUAUUUUAUUCUACGCUGUUUAGAUUUGUAUCCUCUGGUAAUUUAGUGGCAUUAGUCACCUGCUAAUUAAUCUUUUUCCUUUCCCCUGUGUUCCAUAUAGAGAAAAGUGGUAAAGAAUCUACCUCACUGGGAAUGUCAUCAUUACCAACUUCAGAUGGGUUUAACCAUCCCGCCCGUUCUUCAGGACAGAGUCCUGAUGUUGGUAAUCCUAUGAGUCUUGCUCGCUCUGUC\
U\
) } def
/len { sequence length } bind def

/coor [
[80.50274658 286.87246704]
[91.44306946 275.46697998]
[90.89311218 260.47705078]
[90.34314728 245.48715210]
[89.79319000 230.49723816]
[77.92830658 239.67463684]
[63.32622147 236.24256897]
[56.79187012 222.74064636]
[63.16041183 209.15971375]
[77.71938324 205.54911804]
[89.69590759 214.58087158]
[90.06259155 199.58534241]
[90.42927551 184.58982849]
[90.79596710 169.59431458]
[91.16265106 154.59880066]
[75.57956696 151.06292725]
[61.31810379 143.07533264]
[49.64898682 131.11082458]
[37.52451706 139.94242859]
[25.40004921 148.77403259]
[13.27558041 157.60563660]
[1.15111256 166.43724060]
[-0.94381762 171.15512085]
[-4.29397202 174.30029297]
[-8.09779644 175.65829468]
[-11.58371639 175.36071777]
[-24.02383423 183.74185181]
[-36.46395493 192.12298584]
[-35.25601578 204.53175354]
[-39.40335083 216.21270752]
[-48.06460571 224.97891235]
[-59.55952454 229.21675110]
[-71.69470978 228.18278503]
[-82.18211365 222.13330078]
[-94.82339478 230.20782471]
[-107.46467590 238.28234863]
[-120.10596466 246.35687256]
[-121.94910431 261.88546753]
[-133.37796021 272.55856323]
[-148.99617004 273.33670044]
[-161.42929077 263.85241699]
[-164.80679321 248.58393860]
[-157.53392029 234.74055481]
[-143.04469299 228.85868835]
[-128.18048096 233.71559143]
[-115.53919983 225.64106750]
[-102.89791870 217.56654358]
[-90.25662994 209.49201965]
[-90.00566864 191.81112671]
[-79.07753754 177.70957947]
[-61.71454239 172.97106934]
[-44.84508896 179.68286133]
[-32.40497208 171.30172729]
[-19.96485329 162.92059326]
[-7.68049383 154.31277466]
[4.44397449 145.48117065]
[16.56844330 136.64956665]
[28.69291115 127.81795502]
[40.81737900 118.98635101]
[37.99225235 104.25479889]
[23.46077156 100.53511047]
[8.92929173 96.81541443]
[-5.60218716 93.09572601]
[-20.13366699 89.37602997]
[-26.35543060 94.84410858]
[-34.13717651 97.39582825]
[-42.20208740 96.68998718]
[-49.25703812 92.91368866]
[-54.19992828 86.74036407]
[-56.29169464 79.21085358]
[-70.62400055 74.78535461]
[-84.95630646 70.35985565]
[-99.28861237 65.93435669]
[-113.62091064 61.50885773]
[-129.48100281 65.67892456]
[-140.82864380 53.83987427]
[-135.99035645 38.17070389]
[-119.94334412 34.79051208]
[-109.19541168 47.17655182]
[-94.86310577 51.60205078]
[-80.53080750 56.02754974]
[-66.19850159 60.45304871]
[-51.86619568 64.87854767]
[-31.30757332 58.08353806]
[-16.41397476 74.84455109]
[-1.88249612 78.56424713]
[12.64898300 82.28393555]
[27.18046379 86.00363159]
[41.71194077 89.72332001]
[44.80527496 80.49192810]
[49.33105850 71.99230194]
[55.13402939 64.44155121]
[62.02693558 58.02589035]
[69.79643250 52.89606857]
[78.20960999 49.16392899]
[74.22410583 34.70309448]
[70.23860168 20.24225616]
[66.25309753 5.78142118]
[62.26759720 -8.67941475]
[51.14170074 -19.92774773]
[55.21925354 -34.25334930]
[51.23374939 -48.71418381]
[47.15993881 -63.15039062]
[42.99796677 -77.56143188]
[38.83599472 -91.97246552]
[34.67402649 -106.38350677]
[20.23356056 -111.74812317]
[11.81922340 -124.43876648]
[12.48318100 -139.47283936]
[21.76143074 -151.09402466]
[17.59946060 -165.50506592]
[13.43748951 -179.91609192]
[9.27551842 -194.32713318]
[5.11354733 -208.73817444]
[0.95157671 -223.14921570]
[-9.25215912 -236.68878174]
[0.93361026 -250.24188232]
[16.77674866 -244.20605469]
[15.36261368 -227.31118774]
[19.52458572 -212.90014648]
[23.68655586 -198.48910522]
[27.84852600 -184.07806396]
[32.01049805 -169.66703796]
[36.17246628 -155.25599670]
[50.21784210 -150.37077332]
[58.79484177 -138.00552368]
[58.44198227 -122.78288269]
[49.08506393 -110.54547119]
[53.24703217 -96.13443756]
[57.40900421 -81.72339630]
[61.57097626 -67.31236267]
[66.43200684 -61.77442551]
[65.69458771 -52.69968796]
[69.68009186 -38.23884964]
[80.52091217 -28.02485466]
[76.72843170 -12.66491699]
[80.71393585 1.79591882]
[84.69944000 16.25675392]
[88.68494415 30.71759033]
[92.67044067 45.17842484]
[105.07678223 44.92411041]
[117.22757721 47.44205093]
[128.51121521 52.60551071]
[138.35974121 60.15458298]
[146.27742004 69.70928192]
[151.86570740 80.78867340]
[154.84333801 92.83506775]
[169.84304810 92.92675018]
[184.84277344 93.01843262]
[199.84249878 93.11010742]
[208.41403198 90.04036713]
[215.02471924 93.29570770]
[230.02220154 93.57073212]
[245.01966858 93.84576416]
[260.01715088 94.12078857]
[275.01461792 94.39581299]
[263.26470947 85.07167053]
[258.33822632 70.90375519]
[261.76831055 56.30120850]
[272.48751831 45.80841064]
[287.15994263 42.69077682]
[301.21948242 47.91854095]
[310.29071045 59.86478424]
[311.55062866 74.81177521]
[304.60714722 88.10793304]
[291.61929321 95.61586761]
[306.49591064 97.53588104]
[321.37249756 99.45589447]
[336.24911499 101.37590790]
[351.12573242 103.29591370]
[366.00234985 105.21592712]
[380.87896729 107.13594055]
[395.75555420 109.05595398]
[399.51428223 99.75341034]
[407.37985229 92.04736328]
[418.57421875 87.73970795]
[431.54675293 88.22641754]
[444.18789673 94.17745209]
[458.95288086 91.53261566]
[473.71786499 88.88777161]
[488.48284912 86.24293518]
[503.24783325 83.59809113]
[512.07080078 70.48583221]
[527.59710693 67.53485870]
[540.61535645 76.49592590]
[543.40203857 92.05260468]
[534.30383301 104.97537994]
[518.71856689 107.59740448]
[505.89266968 98.36307526]
[491.12768555 101.00791931]
[476.36270142 103.65275574]
[461.59771729 106.29759979]
[446.83273315 108.94244385]
[445.64590454 116.34793854]
[460.45690918 118.72161865]
[475.26788330 121.09529877]
[490.07888794 123.46897888]
[504.89852905 121.14981079]
[511.68353271 134.52754211]
[501.05709839 145.11428833]
[487.70520020 138.27996826]
[472.89422607 135.90629578]
[458.08322144 133.53262329]
[443.27221680 131.15893555]
[442.08538818 138.56443787]
[455.28436279 145.69091797]
[468.48336792 152.81738281]
[481.68234253 159.94386292]
[494.88134766 167.07034302]
[508.08032227 174.19682312]
[521.27929688 181.32328796]
[538.08929443 183.52807617]
[540.62414551 200.29144287]
[525.21759033 207.36779785]
[514.15283203 194.52227783]
[500.95385742 187.39581299]
[487.75485229 180.26933289]
[474.55587769 173.14285278]
[461.35687256 166.01637268]
[448.15789795 158.88990784]
[434.95889282 151.76342773]
[404.32342529 146.88116455]
[393.83554077 123.93256378]
[378.95895386 122.01255798]
[364.08233643 120.09254456]
[349.20571899 118.17253113]
[334.32910156 116.25251770]
[319.45248413 114.33250427]
[304.57589722 112.41249084]
[289.69927979 110.49247742]
[274.73959351 109.39329529]
[259.74212646 109.11826324]
[244.74464417 108.84323883]
[229.74717712 108.56821442]
[214.74969482 108.29319000]
[199.75080872 108.10983276]
[184.75109863 108.01815033]
[169.75137329 107.92646790]
[154.75164795 107.83478546]
[150.82298279 121.82091522]
[143.38807678 134.30163574]
[132.95986938 144.41592407]
[120.25780487 151.46600342]
[106.15816498 154.96548462]
[105.79148102 169.96099854]
[105.42479706 184.95651245]
[105.05810547 199.95204163]
[104.69142151 214.94755554]
[104.78310394 229.94726562]
[105.33306122 244.93717957]
[105.88302612 259.92709351]
[106.43298340 274.91702271]
[118.17967224 285.49014282]
[118.92607117 301.27679443]
[108.22935486 312.91104126]
[92.43569183 313.49047852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[5 249]
[11 248]
[12 247]
[13 246]
[14 245]
[15 244]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[26 54]
[27 53]
[28 52]
[34 48]
[35 47]
[36 46]
[37 45]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
[101 134]
[102 133]
[103 131]
[104 130]
[105 129]
[106 128]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[147 239]
[148 238]
[149 237]
[150 236]
[152 235]
[153 234]
[154 233]
[155 232]
[156 231]
[166 230]
[167 229]
[168 228]
[169 227]
[170 226]
[171 225]
[172 224]
[173 223]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
[210 216]
[211 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
