%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCCUCCCUUUCUGCGACUGGCUGUUAGGCGUGGGUCUCCGCCCCACAGCCCUGCGCCUGCGCGUGGGCCUGGGCCGCCCGUCGUACCUGAUGGUAGGAGGCAGUAGUUCCCCGCUUCCCUUCCGCGGGAGGGAGAGUUAGCUAGCCAUCCAAGAAAACACCAUGAAAGAUAACGAUAUCAAGAGACUACUGUAUACCCAUCUUUUAUGCAUAUUUUCAAUUAUCCUAAGUGUCUUCAUUCCAUCACUCUUCU\
UGGAGAACU\
) } def
/len { sequence length } bind def

/coor [
[369.65289307 159.63400269]
[366.78134155 145.70138550]
[351.97305298 143.31095886]
[338.75320435 153.73092651]
[321.75491333 151.30189514]
[311.58956909 137.04573059]
[296.75396729 134.83102417]
[281.91836548 132.61633301]
[267.06991577 130.48960876]
[252.20909119 128.45092773]
[237.34826660 126.41226196]
[222.48745728 124.37359619]
[207.62664795 122.33492279]
[192.76582336 120.29625702]
[177.90501404 118.25758362]
[163.04418945 116.21891785]
[148.18338013 114.18024445]
[133.32257080 112.14157867]
[123.78806305 126.30474091]
[108.74060059 134.37168884]
[91.66748047 134.47290039]
[76.52544403 126.58489227]
[66.82370758 112.53575134]
[51.98810959 114.75045013]
[37.15250397 116.96514893]
[22.31690216 119.17984772]
[7.48129988 121.39454651]
[-7.35430288 123.60924530]
[-22.18990517 125.82394409]
[-37.02550888 128.03865051]
[-51.86111069 130.25334167]
[-66.66941833 132.64375305]
[-81.44834137 135.20954895]
[-96.21179962 137.86291504]
[-110.95927429 140.60372925]
[-125.70674896 143.34454346]
[-140.45422363 146.08535767]
[-155.20169067 148.82618713]
[-159.42910767 157.18847656]
[-166.90713501 162.60379028]
[-175.89961243 163.97000122]
[-184.38844299 161.10758972]
[-190.52641296 154.77200317]
[-205.36201477 156.98670959]
[-220.19761658 159.20140076]
[-235.03321838 161.41610718]
[-240.09074402 172.13148499]
[-249.58628845 179.01707458]
[-261.10537720 180.46432495]
[-271.78665161 176.22985840]
[-279.03253174 167.46733093]
[-293.91647339 169.32969666]
[-308.80041504 171.19204712]
[-323.68435669 173.05439758]
[-331.77932739 177.21267700]
[-338.75564575 174.84953308]
[-353.66061401 176.53530884]
[-368.56558228 178.22108459]
[-383.47058105 179.90686035]
[-396.33248901 190.08050537]
[-411.47216797 183.77792358]
[-413.31518555 167.48266602]
[-399.96560669 157.95790100]
[-385.15634155 165.00189209]
[-370.25137329 163.31611633]
[-355.34640503 161.63034058]
[-340.44143677 159.94456482]
[-325.54672241 158.17045593]
[-310.66278076 156.30810547]
[-295.77883911 154.44575500]
[-280.89489746 152.58338928]
[-270.51596069 137.47497559]
[-252.06768799 134.73731995]
[-237.24790955 146.58050537]
[-222.41230774 144.36579895]
[-207.57670593 142.15110779]
[-192.74110413 139.93640137]
[-177.71511841 125.76277161]
[-157.94250488 134.07870483]
[-143.19503784 131.33789062]
[-128.44757080 128.59707642]
[-113.70008850 125.85625458]
[-98.95262146 123.11544037]
[-92.97061920 118.81783295]
[-84.01413727 120.43062592]
[-69.23521423 117.86483002]
[-65.81782532 114.57172394]
[-60.30590820 113.36968231]
[-54.07580948 115.41773987]
[-39.24020767 113.20304108]
[-24.40460396 110.98834229]
[-9.56900120 108.77364349]
[5.26660156 106.55894470]
[20.10220528 104.34424591]
[34.93780899 102.12954712]
[49.77341080 99.91484833]
[64.60901642 97.70014954]
[67.98170471 84.74746704]
[75.91468048 73.96716309]
[68.28671265 61.05150604]
[60.65874863 48.13585281]
[53.03078079 35.22019958]
[45.40281677 22.30454445]
[37.77484894 9.38888931]
[22.49191856 10.21992588]
[8.57818031 3.84289646]
[-0.76908809 -8.27680397]
[-3.40195465 -23.35415840]
[1.28459442 -37.92449951]
[12.21362495 -48.63967133]
[26.87372398 -53.03740311]
[41.89611053 -50.10713196]
[53.82875061 -40.52220917]
[59.92960739 -26.48518181]
[58.79674911 -11.22165585]
[50.69050217 1.76092267]
[58.31847000 14.67657661]
[65.94643402 27.59223175]
[73.57440186 40.50788498]
[81.20236969 53.42353821]
[88.83033752 66.33919525]
[101.50656128 64.56637573]
[113.98654938 67.40878296]
[124.64480591 74.49617767]
[132.09307861 84.90544128]
[135.36123657 97.28076172]
[150.22204590 99.31942749]
[165.08287048 101.35810089]
[179.94367981 103.39676666]
[194.80448914 105.43544006]
[209.66531372 107.47411346]
[224.52612305 109.51277924]
[239.38694763 111.55145264]
[254.24775696 113.59011841]
[269.10858154 115.62879181]
[278.00204468 113.69853973]
[284.13305664 117.78072357]
[298.96865845 119.99542236]
[313.80429077 122.21012115]
[323.61859131 113.01451874]
[336.74392700 111.16670990]
[348.36947632 117.11820221]
[354.36346436 128.50265503]
[369.17175293 130.89308167]
[377.53616333 117.14379120]
[390.50927734 107.68529510]
[406.08294678 103.94507599]
[421.86035156 106.46824646]
[435.42514038 114.83835602]
[444.71127319 127.74575806]
[448.31784058 143.19244385]
[463.15344238 145.40715027]
[477.98904419 147.62184143]
[492.82464600 149.83654785]
[507.66024780 152.05123901]
[522.49584961 154.26594543]
[537.33148193 156.48063660]
[552.16705322 158.69534302]
[557.16992188 148.59565735]
[566.13592529 140.75376892]
[578.02294922 136.71963501]
[591.19116211 137.55778503]
[603.62860107 143.62261963]
[613.25787354 154.43717957]
[627.72741699 150.48336792]
[642.19696045 146.52957153]
[656.66644287 142.57575989]
[671.13598633 138.62194824]
[685.60552979 134.66815186]
[700.07507324 130.71434021]
[714.54461670 126.76052856]
[729.01416016 122.80672455]
[743.48364258 118.85291290]
[747.46856689 104.08580017]
[758.23889160 93.36677551]
[772.83142090 89.50358582]
[787.30157471 93.43694305]
[797.78936768 104.01385498]
[812.25891113 100.06004333]
[826.72845459 96.10623932]
[841.19799805 92.15242767]
[846.07379150 87.76666260]
[851.60260010 86.64472198]
[856.05749512 88.28076172]
[870.61669922 84.67111206]
[878.55865479 71.00725555]
[893.85748291 67.04208374]
[907.43658447 75.12806702]
[911.23980713 90.46791840]
[903.01068115 103.96079254]
[887.63146973 107.60160065]
[874.22637939 99.23031616]
[859.66717529 102.83996582]
[845.15179443 106.62196350]
[830.68225098 110.57576752]
[816.21270752 114.52957916]
[801.74316406 118.48338318]
[798.09136963 132.92395020]
[787.63220215 143.66925049]
[773.10284424 147.76364136]
[758.37817383 144.01112366]
[747.43750000 133.32244873]
[732.96795654 137.27626038]
[718.49841309 141.23005676]
[704.02886963 145.18386841]
[689.55932617 149.13768005]
[675.08978271 153.09149170]
[660.62030029 157.04528809]
[646.15075684 160.99909973]
[631.68121338 164.95291138]
[617.21166992 168.90672302]
[614.55853271 175.92176819]
[629.15228271 179.38903809]
[643.74609375 182.85630798]
[658.33984375 186.32357788]
[672.93359375 189.79084778]
[687.52734375 193.25811768]
[702.31323242 190.73251343]
[715.93988037 197.00262451]
[723.64050293 209.87509155]
[722.72137451 224.84689331]
[713.50390625 236.68069458]
[699.21258545 241.23684692]
[684.84674072 236.92152405]
[675.43078613 225.24205017]
[662.19512939 218.18400574]
[648.95941162 211.12596130]
[635.72369385 204.06793213]
[622.48797607 197.00988770]
[609.25225830 189.95184326]
[606.59912109 196.96688843]
[614.83074951 209.50643921]
[623.06237793 222.04598999]
[631.29400635 234.58554077]
[646.41723633 232.52409363]
[660.93463135 237.23670959]
[671.96368408 247.78767395]
[677.31457520 262.08209229]
[675.92486572 277.28182983]
[668.07055664 290.36892700]
[655.31103516 298.74493408]
[640.17974854 300.74682617]
[625.68103027 295.97708130]
[614.69366455 285.38275146]
[609.39910889 271.06735229]
[610.84863281 255.87322998]
[618.75445557 242.81716919]
[610.52282715 230.27761841]
[602.29119873 217.73806763]
[594.05957031 205.19851685]
[561.71929932 199.29338074]
[549.95233154 173.53094482]
[535.11676025 171.31623840]
[520.28112793 169.10154724]
[505.44555664 166.88684082]
[490.60995483 164.67214966]
[475.77435303 162.45744324]
[460.93875122 160.24275208]
[446.10314941 158.02804565]
[439.35095215 170.31108093]
[428.79272461 179.57531738]
[415.68051147 184.69505310]
[401.57858276 185.03771973]
[388.17660522 180.54187012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[6 139]
[7 138]
[8 137]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 86]
[33 85]
[34 83]
[35 82]
[36 81]
[37 80]
[38 79]
[43 77]
[44 76]
[45 75]
[46 74]
[51 71]
[52 70]
[53 69]
[54 68]
[56 67]
[57 66]
[58 65]
[59 64]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[151 259]
[152 258]
[153 257]
[154 256]
[155 255]
[156 254]
[157 253]
[158 252]
[164 211]
[165 210]
[166 209]
[167 208]
[168 207]
[169 206]
[170 205]
[171 204]
[172 203]
[173 202]
[178 197]
[179 196]
[180 195]
[181 194]
[184 193]
[185 192]
[231 250]
[232 249]
[233 248]
[234 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
