%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGGGCGGGUCAGCGCGCCGGCGCAGUGCGGCGGUCACAGGCUGAGUGCUGCGGCGCGAUCCUUGCUUCCCUGAGCGUUGGCCCGGGAGGAAAGAAGAUGGUGCUGGAUCUGGAUUUGUUUCGGGUGGAUAAAGGAGGGGACCCAGCCCUCAUCCGAGAGACGCAGGAGAAGCGCUUCAAGGACCCGGGACUAGUGG\
) } def
/len { sequence length } bind def

/coor [
[84.79634857 326.91696167]
[76.93750763 313.72094727]
[76.74559784 298.36325073]
[84.27223969 284.97500610]
[97.49280548 277.15756226]
[97.25836945 262.15939331]
[84.69399261 250.98565674]
[84.08253479 233.84471130]
[96.28999329 221.32025146]
[95.82117462 206.32757568]
[95.35235596 191.33489990]
[94.88354492 176.34223938]
[94.41472626 161.34956360]
[93.94590759 146.35688782]
[80.11913300 142.31269836]
[68.18014526 134.25070190]
[59.26262283 122.93641663]
[45.18064499 128.10342407]
[31.09866905 133.27043152]
[17.01669121 138.43742371]
[2.93471408 143.60443115]
[-11.14726353 148.77143860]
[-14.50044918 152.79287720]
[-18.64756584 154.90893555]
[-22.72774124 155.13679504]
[-26.01223183 153.83360291]
[-40.32091904 158.33488464]
[-54.62960815 162.83615112]
[-68.93830109 167.33741760]
[-83.24698639 171.83868408]
[-97.55567169 176.33995056]
[-111.86436462 180.84123230]
[-118.51227570 191.90037537]
[-130.52888489 195.35209656]
[-141.31718445 189.86923218]
[-155.69447327 194.14631653]
[-170.07177734 198.42340088]
[-184.44906616 202.70048523]
[-198.82635498 206.97756958]
[-212.28388977 217.28926086]
[-225.91801453 207.21220398]
[-220.00907898 191.32130432]
[-203.10343933 192.60028076]
[-188.72615051 188.32319641]
[-174.34886169 184.04611206]
[-159.97155762 179.76902771]
[-145.59426880 175.49194336]
[-134.23864746 162.11672974]
[-116.36563110 166.53253174]
[-102.05694580 162.03126526]
[-87.74825287 157.52999878]
[-73.43956757 153.02873230]
[-59.13087845 148.52746582]
[-44.82218933 144.02618408]
[-30.51350021 139.52491760]
[-16.31426620 134.68945312]
[-2.23228860 129.52246094]
[11.84968853 124.35545349]
[25.93166542 119.18844604]
[40.01364136 114.02144623]
[54.09561920 108.85443878]
[54.07467651 91.25482941]
[60.56230927 74.89458466]
[72.63908386 62.09230423]
[88.59346771 54.66233063]
[106.16439819 53.65764999]
[122.86170197 59.22064590]
[132.20095825 47.48273849]
[141.54020691 35.74483490]
[150.87945557 24.00692749]
[160.21870422 12.26902103]
[169.55795288 0.53111535]
[178.80517578 -11.27941704]
[187.95983887 -23.16185379]
[197.11448669 -35.04429245]
[198.36967468 -41.54882431]
[202.15666199 -45.79990005]
[206.74566650 -47.14910507]
[216.26722717 -58.73961258]
[225.78878784 -70.33011627]
[235.31034851 -81.92062378]
[244.83190918 -93.51113129]
[241.65458679 -120.17063904]
[266.80889893 -136.74153137]
[269.60577393 -151.47846985]
[272.40267944 -166.21540833]
[275.19958496 -180.95233154]
[277.99649048 -195.68927002]
[280.79339600 -210.42620850]
[283.59030151 -225.16314697]
[286.38717651 -239.90008545]
[281.35876465 -254.90093994]
[291.33349609 -265.96231079]
[294.13040161 -280.69924927]
[296.92730713 -295.43618774]
[286.46762085 -306.74554443]
[284.69360352 -321.86859131]
[292.07742310 -334.98129272]
[305.60473633 -341.15780640]
[308.40164185 -355.89474487]
[311.19854736 -370.63168335]
[313.99545288 -385.36862183]
[303.26498413 -396.57742310]
[301.20559692 -411.95724487]
[308.60916138 -425.59420776]
[322.62881470 -432.24465942]
[337.87374878 -429.35134888]
[348.48199463 -418.02679443]
[350.37442017 -402.62554932]
[342.82336426 -389.06970215]
[328.73239136 -382.57174683]
[325.93548584 -367.83480835]
[323.13858032 -353.09786987]
[320.34167480 -338.36093140]
[330.66543579 -327.65774536]
[332.73156738 -312.75152588]
[325.54013062 -299.33004761]
[311.66424561 -292.63928223]
[308.86734009 -277.90234375]
[306.07043457 -263.16540527]
[311.29891968 -249.21864319]
[301.12411499 -237.10319519]
[298.32723999 -222.36625671]
[295.53033447 -207.62931824]
[292.73342896 -192.89237976]
[289.93652344 -178.15544128]
[287.13961792 -163.41850281]
[284.34271240 -148.68156433]
[281.54583740 -133.94462585]
[292.27603149 -123.46308136]
[306.94335938 -126.60468292]
[321.61065674 -129.74629211]
[336.27798462 -132.88789368]
[339.40673828 -135.92507935]
[342.98080444 -137.63198853]
[346.52572632 -138.03233337]
[349.62380981 -137.30200195]
[351.95886230 -135.73716736]
[366.79382324 -137.95623779]
[381.62875366 -140.17532349]
[396.46371460 -142.39439392]
[411.29867554 -144.61346436]
[419.31271362 -158.04138184]
[434.10003662 -163.12757874]
[448.67849731 -157.47050476]
[456.16458130 -143.74125671]
[453.02362061 -128.42236328]
[440.73867798 -118.74694061]
[425.11029053 -119.28343201]
[413.51773071 -129.77851868]
[398.68280029 -127.55944061]
[383.84783936 -125.34037018]
[369.01287842 -123.12129211]
[354.17794800 -120.90222168]
[339.41958618 -118.22057343]
[324.75228882 -115.07897186]
[310.08496094 -111.93736267]
[295.41763306 -108.79576111]
[292.71975708 -97.10542297]
[285.89868164 -87.85440826]
[276.39675903 -82.33166504]
[265.98141479 -81.10674286]
[256.42242432 -83.98957062]
[246.90086365 -72.39906311]
[237.37930298 -60.80855942]
[227.85772705 -49.21805191]
[218.33616638 -37.62754440]
[208.99691772 -25.88963699]
[199.84226990 -14.00720024]
[190.68762207 -2.12476301]
[189.09439087 5.09836817]
[181.29585266 9.87036419]
[171.95660400 21.60827065]
[162.61735535 33.34617615]
[153.27810669 45.08408356]
[143.93885803 56.82198715]
[134.59960938 68.55989075]
[141.61564636 78.69857025]
[145.73716736 90.31884766]
[146.67749023 102.61248016]
[144.37121582 114.72440338]
[138.97875977 125.81219482]
[130.87518311 135.10464478]
[120.62412262 141.95544434]
[108.93857574 145.88807678]
[109.40739441 160.88073730]
[109.87621307 175.87341309]
[110.34503174 190.86608887]
[110.81385040 205.85876465]
[111.28266907 220.85142517]
[122.09934235 228.88540649]
[126.25086212 241.49899292]
[122.43363190 254.01438904]
[112.25653076 261.92495728]
[112.49097443 276.92312622]
[125.94940948 284.32354736]
[133.89080811 297.47003174]
[134.17900085 312.82620239]
[126.73643494 326.26138306]
[113.56513977 334.16152954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[22 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[67 177]
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 170]
[74 169]
[75 168]
[78 167]
[79 166]
[80 165]
[81 164]
[82 163]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[93 120]
[94 119]
[95 118]
[99 114]
[100 113]
[101 112]
[102 111]
[130 158]
[131 157]
[132 156]
[133 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
