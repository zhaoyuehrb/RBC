%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGCGGGGCCGCGCGUCCAGGCGGCGAGCGGAAGUGGGUGUGAGAGCGGAAGUGGCCGGCUAGAGCCGGGGGCUGGGCGGGGACCGGGCUUGUCGGUGAAGCGGCAGUGGCGGCGGCGGCGGCGGCUCGGCAGGCGGGUUCAGGCUUCGGGGGCCAGCCGCCGCCAUGAUCCUGCUGGAGGUGAACAACCGCAUCAUCGAGGAGACGCUCGCGCUCAAGUUCGAGAACGCGGCCGCCGGAAACAAACCGGA\
AGCAGUAGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[155.76933289 566.86584473]
[150.96841431 552.65490723]
[146.16748047 538.44396973]
[141.36654663 524.23303223]
[136.48303223 510.05023193]
[131.51707458 495.89608765]
[126.55112457 481.74197388]
[121.58517456 467.58782959]
[116.61922455 453.43371582]
[112.75108337 453.62005615]
[108.88789368 453.34991455]
[105.08333588 452.62704468]
[98.19583893 465.95230103]
[91.30834198 479.27755737]
[84.42084503 492.60281372]
[77.53334808 505.92807007]
[84.61747742 519.73364258]
[82.20066833 535.06140137]
[71.21222687 546.01739502]
[55.87743759 548.38885498]
[42.09284210 541.26391602]
[35.15889359 527.38226318]
[37.74183655 512.08172607]
[48.84848022 501.24554443]
[64.20809174 499.04055786]
[71.09558868 485.71530151]
[77.98308563 472.39004517]
[84.87058258 459.06478882]
[91.75807953 445.73956299]
[81.93669128 431.79769897]
[80.38930511 414.70440674]
[87.63910675 399.02703857]
[101.84394073 389.00952148]
[100.10255432 374.11093140]
[98.36116028 359.21234131]
[96.61976624 344.31378174]
[84.81330109 335.30584717]
[82.83504486 320.22137451]
[92.36345673 307.89874268]
[90.62206268 293.00015259]
[88.88066864 278.10159302]
[87.13927460 263.20300293]
[85.39788055 248.30444336]
[83.65648651 233.40586853]
[81.91509247 218.50729370]
[78.81864929 214.91362000]
[77.92401886 209.34657288]
[80.31067657 203.24230957]
[78.91643524 188.30725098]
[77.52218628 173.37219238]
[76.12793732 158.43713379]
[74.73368835 143.50207520]
[74.84821320 158.50163269]
[65.75710297 170.43275452]
[51.26485443 174.30247498]
[37.43622971 168.49134827]
[30.05828285 155.43125916]
[32.21857071 140.58763123]
[43.01304245 130.17228699]
[57.92562485 128.54415894]
[42.92968750 128.89320374]
[27.93374634 129.24223328]
[12.93780899 129.59126282]
[-2.05813003 129.94029236]
[-15.77656746 138.92564392]
[-30.29343796 131.29724121]
[-30.67502975 114.90254211]
[-16.52879333 106.60699463]
[-2.40716434 114.94435883]
[12.58877373 114.59532928]
[27.58471298 114.24629211]
[42.58065033 113.89725494]
[57.57659149 113.54822540]
[58.92189789 106.16986847]
[47.48750305 96.46138763]
[61.61251831 91.41315460]
[62.95782852 84.03479767]
[49.05006790 78.41569519]
[35.14231110 72.79660034]
[21.23455429 67.17749786]
[7.51325369 74.67816162]
[-7.80895853 71.55345154]
[-17.49740219 59.27875900]
[-16.97749138 43.64982224]
[-6.49471188 32.04614258]
[9.00128937 29.94662857]
[22.19377327 38.34260178]
[26.85365295 53.26974487]
[40.76140976 58.88884354]
[54.66917038 64.50794220]
[68.57692719 70.12703705]
[87.29290771 70.02647400]
[100.18992615 78.24585724]
[105.48387909 64.21111298]
[110.77783966 50.17637253]
[108.40894318 34.53351593]
[120.14019012 25.35597992]
[125.43414307 11.32123756]
[130.72810364 -2.71350479]
[136.02206421 -16.74824715]
[141.31602478 -30.78298950]
[146.60998535 -44.81773376]
[151.90393066 -58.85247421]
[149.53503418 -74.49533081]
[161.26628113 -83.67286682]
[166.56024170 -97.70761108]
[149.69200134 -139.92805481]
[152.63975525 -154.63555908]
[155.58750916 -169.34306335]
[158.53524780 -184.05056763]
[161.48300171 -198.75807190]
[160.10285950 -207.75086975]
[164.55155945 -213.61911011]
[167.67022705 -228.29132080]
[170.70349121 -242.98143005]
[173.65124512 -257.68893433]
[167.17123413 -268.81427002]
[169.90527344 -280.98556519]
[179.86125183 -287.81683350]
[182.97993469 -302.48904419]
[186.09860229 -317.16125488]
[189.21728516 -331.83346558]
[192.33595276 -346.50567627]
[195.45463562 -361.17788696]
[198.57330322 -375.85009766]
[201.69198608 -390.52230835]
[204.81065369 -405.19451904]
[207.84391785 -419.88464355]
[210.79167175 -434.59213257]
[213.73942566 -449.29965210]
[216.68717957 -464.00717163]
[219.63491821 -478.71466064]
[209.29167175 -490.13058472]
[207.67269897 -505.27102661]
[215.19046021 -518.30737305]
[228.78036499 -524.34497070]
[231.72811890 -539.05249023]
[234.67587280 -553.76000977]
[237.62361145 -568.46752930]
[227.00857544 -579.78564453]
[225.10687256 -595.18579102]
[232.64974976 -608.74615479]
[246.73683167 -615.25262451]
[261.95132446 -612.20324707]
[272.44296265 -600.77062988]
[274.17749023 -585.35076904]
[266.48794556 -571.87304688]
[252.33113098 -565.51977539]
[249.38337708 -550.81225586]
[246.43562317 -536.10473633]
[243.48788452 -521.39721680]
[253.70143127 -510.58883667]
[255.61471558 -495.66226196]
[248.28613281 -482.31515503]
[234.34242249 -475.76690674]
[231.39468384 -461.05941772]
[228.44692993 -446.35189819]
[225.49917603 -431.64440918]
[222.55143738 -416.93688965]
[224.31199646 -409.78652954]
[219.48287964 -402.07586670]
[216.36419678 -387.40365601]
[213.24552917 -372.73141479]
[210.12684631 -358.05920410]
[207.00817871 -343.38699341]
[203.88949585 -328.71478271]
[200.77082825 -314.04257202]
[197.65214539 -299.37036133]
[194.53347778 -284.69815063]
[200.83764648 -268.30444336]
[188.35874939 -254.74119568]
[185.41101074 -240.03369141]
[187.17156982 -232.88333130]
[182.34245300 -225.17265320]
[179.22377014 -210.50044250]
[176.19050598 -195.81033325]
[173.24275208 -181.10282898]
[170.29501343 -166.39530945]
[167.34725952 -151.68780518]
[164.39950562 -136.98030090]
[170.00219727 -131.99432373]
[184.24073792 -136.71279907]
[181.20758057 -122.02239227]
[186.81025696 -117.03642273]
[201.07611084 -121.67167664]
[215.34196472 -126.30693054]
[223.87719727 -139.89109802]
[239.83483887 -141.54431152]
[250.97355652 -129.99836731]
[248.74867249 -114.11034393]
[234.86692810 -106.06815338]
[219.97721863 -112.04108429]
[205.71136475 -107.40583038]
[191.44552612 -102.77057648]
[180.59498596 -92.41365051]
[175.30102539 -78.37890625]
[178.04858398 -63.73991394]
[165.93867493 -53.55851746]
[160.64471436 -39.52377319]
[155.35076904 -25.48903275]
[150.05680847 -11.45428944]
[144.76284790 2.58045363]
[139.46888733 16.61519623]
[134.17492676 30.64993858]
[136.92248535 45.28893661]
[124.81258392 55.47032928]
[119.51862335 69.50507355]
[114.22466278 83.53981781]
[128.92727661 114.93637848]
[89.66874695 142.10781860]
[91.06299591 157.04287720]
[92.45724487 171.97795105]
[93.85149384 186.91300964]
[95.24574280 201.84806824]
[96.81366730 216.76589966]
[98.55506134 231.66447449]
[100.29645538 246.56304932]
[102.03784943 261.46160889]
[103.77924347 276.36019897]
[105.52063751 291.25875854]
[107.26203156 306.15734863]
[119.37539673 315.95040894]
[120.92918396 331.08450317]
[111.51834106 342.57238770]
[113.25973511 357.47094727]
[115.00112915 372.36953735]
[116.74252319 387.26812744]
[132.07330322 393.12030029]
[142.75231934 405.47091675]
[146.29327393 421.32501221]
[141.92842102 436.88668823]
[130.77334595 448.46777344]
[135.73930359 462.62188721]
[140.70526123 476.77603149]
[145.67120361 490.93014526]
[150.63716125 505.08425903]
[156.41098022 512.11547852]
[155.57749939 519.43206787]
[160.37843323 533.64300537]
[165.17935181 547.85400391]
[169.98028564 562.06494141]
[184.91847229 560.21148682]
[199.92395020 561.40332031]
[214.38224792 565.59167480]
[227.70132446 572.60504150]
[239.33573914 582.15625000]
[248.80909729 593.85412598]
[255.73344421 607.21966553]
[259.82525635 621.70562744]
[260.91699219 636.71868896]
[258.96389771 651.64422607]
[254.04598999 665.87091064]
[246.36463928 678.81622314]
[236.23439026 689.95007324]
[224.07006836 698.81658936]
[210.36979675 705.05255127]
[195.69461060 708.40270996]
[180.64543152 708.72985840]
[165.83851624 706.02062988]
[151.88020325 700.38586426]
[139.34207153 692.05639648]
[128.73754883 681.37329102]
[120.50088501 668.77398682]
[114.96936798 654.77447510]
[112.36951447 639.94793701]
[112.80778503 624.90155029]
[116.26622009 610.25152588]
[122.60321808 596.59765625]
[131.55926514 584.49914551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 241]
[2 240]
[3 239]
[4 238]
[5 236]
[6 235]
[7 234]
[8 233]
[9 232]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[33 227]
[34 226]
[35 225]
[36 224]
[39 221]
[40 220]
[41 219]
[42 218]
[43 217]
[44 216]
[45 215]
[48 214]
[49 213]
[50 212]
[51 211]
[52 210]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[77 91]
[78 90]
[79 89]
[80 88]
[93 208]
[94 207]
[95 206]
[97 204]
[98 203]
[99 202]
[100 201]
[101 200]
[102 199]
[103 198]
[105 196]
[106 195]
[107 180]
[108 179]
[109 178]
[110 177]
[111 176]
[113 175]
[114 174]
[115 172]
[116 171]
[119 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[136 151]
[137 150]
[138 149]
[139 148]
[184 194]
[185 193]
[186 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
