%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAGGAGAGAAAGGAAAGCGCGAGGAGCCGCCGCCACCACCAGCGCAGCAGUCCUGGAGCUGUGAGGAGAUUCGGGCCGUCACCCUGCCUCCCCUGCGUCCCGCCACCGGCCGCUUCUGUCCUCGGACCCAUUCCAACAAUCUCGUAAAACAUGGUGGAUUACUAUGAAGUUCUAGGCGUGCAGAGACAUGCCUCACCCGAGGAUAUUAAAAAGGCAUAUCGGAAACUGGCACUGAAGUGGCAUCCAGAUA\
) } def
/len { sequence length } bind def

/coor [
[98.27921295 151.44688416]
[83.99413300 156.02252197]
[70.32849121 149.83786011]
[64.33788300 136.08602905]
[69.11528015 121.86715698]
[82.19612885 114.52216339]
[67.82041168 118.80454254]
[53.44469452 123.08691406]
[42.42780304 134.44203186]
[28.02128983 130.66027832]
[13.64557171 134.94265747]
[-0.73014635 139.22502136]
[-8.28962040 152.84457397]
[-22.92964745 156.98272705]
[-35.86721802 149.69198608]
[-50.24293518 153.97436523]
[-64.61865234 158.25672913]
[-70.23723602 176.58421326]
[-85.66452026 187.70660400]
[-104.52696991 187.25335693]
[-119.16641998 175.59066772]
[-133.37408447 180.40132141]
[-143.96386719 192.15576172]
[-158.50027466 188.90893555]
[-172.70793152 193.71958923]
[-186.91560364 198.53024292]
[-201.12326050 203.34089661]
[-205.82807922 218.00959778]
[-218.12443542 226.99031067]
[-233.17314148 227.00820923]
[-245.20278931 218.26605225]
[-259.41046143 223.07670593]
[-265.80090332 234.25933838]
[-277.71182251 237.98292542]
[-288.61065674 232.77558899]
[-302.87649536 237.41084290]
[-317.14236450 242.04609680]
[-319.33184814 255.84616089]
[-327.21090698 267.30535889]
[-339.19805908 274.22393799]
[-352.93002319 275.30364990]
[-365.72772217 270.39089966]
[-375.11886597 260.49572754]
[-389.44073486 264.95489502]
[-403.76260376 269.41403198]
[-418.08447266 273.87319946]
[-428.96063232 285.36315918]
[-443.41265869 281.75918579]
[-457.73452759 286.21835327]
[-468.45333862 298.62960815]
[-484.50823975 295.28710938]
[-489.38330078 279.62933350]
[-478.06350708 267.76367188]
[-462.19366455 271.89648438]
[-447.87179565 267.43731689]
[-438.02001953 256.26629639]
[-422.54364014 259.55133057]
[-408.22177124 255.09216309]
[-393.89987183 250.63301086]
[-379.57800293 246.17385864]
[-376.40316772 230.31672668]
[-365.59637451 218.15977478]
[-350.04180908 213.09031677]
[-333.96331787 216.58474731]
[-321.77761841 227.78024292]
[-307.51174927 223.14498901]
[-293.24591064 218.50973511]
[-282.20538330 204.85354614]
[-264.22109985 208.86903381]
[-250.01344299 204.05838013]
[-245.76963806 189.80609131]
[-233.80570984 180.67764282]
[-218.58271790 180.34040833]
[-205.93391418 189.13323975]
[-191.72625732 184.32258606]
[-177.51858521 179.51193237]
[-163.31092834 174.70127869]
[-153.73738098 163.29092407]
[-138.18473816 166.19364929]
[-123.97707367 161.38301086]
[-122.74141693 150.34333801]
[-117.46276855 140.51089478]
[-108.86550903 133.31547546]
[-98.15962982 129.81947327]
[-86.87052917 130.56108093]
[-76.62164307 135.47184753]
[-68.90103149 143.88101196]
[-54.52531052 139.59863281]
[-40.14959335 135.31626892]
[-33.31061935 122.13430786]
[-18.79260063 117.58658600]
[-5.01252031 124.84930420]
[9.36319828 120.56693268]
[23.73891640 116.28456116]
[33.72756195 105.23574829]
[49.16231918 108.71119690]
[63.53804016 104.42882538]
[77.91375732 100.14644623]
[83.76054382 86.33286285]
[76.82748413 73.03125763]
[69.89443207 59.72965622]
[57.86388016 55.13014984]
[52.35733032 43.93137360]
[55.83126068 32.36275482]
[49.06259918 18.97674751]
[42.29393768 5.59073830]
[28.27941132 -2.92542720]
[28.91782570 -19.31214333]
[43.55243301 -26.71216202]
[57.12840652 -17.51297760]
[55.67994690 -1.17792249]
[62.44860840 12.20808601]
[69.21726990 25.59409523]
[84.40536499 34.40922546]
[83.19603729 52.79659653]
[90.12908936 66.09820557]
[97.06214905 79.39981079]
[101.24974823 79.26244354]
[105.37321472 79.96633148]
[109.26554871 81.48020935]
[112.76966095 83.74008942]
[124.73991394 74.70056915]
[136.71017456 65.66104889]
[148.68043518 56.62153244]
[160.65069580 47.58201218]
[172.62095642 38.54249191]
[184.59120178 29.50297165]
[196.56146240 20.46345329]
[208.53172302 11.42393303]
[194.64048767 17.08376503]
[179.80857849 19.32297707]
[164.86560059 18.01631355]
[150.64739990 13.23686504]
[137.94931030 5.25197411]
[127.48159790 -5.49171782]
[119.82977295 -18.39325333]
[115.42185974 -32.73097610]
[114.50440979 -47.70289230]
[117.12874603 -62.47153854]
[123.14807129 -76.21081543]
[132.22569275 -88.15220642]
[143.85385132 -97.62776184]
[157.38209534 -104.10745239]
[172.05372620 -107.22884369]
[187.04808044 -106.81732178]
[201.52642822 -102.89591980]
[214.67892456 -95.68398285]
[225.76985168 -85.58490753]
[234.17884827 -73.16359711]
[239.43553162 -59.11485672]
[241.24588013 -44.22450256]
[239.50863647 -29.32544327]
[234.32095337 -15.25107002]
[225.97381592 -2.78956485]
[237.24378967 -12.68843269]
[248.51377869 -22.58730125]
[259.78375244 -32.48616791]
[271.05374146 -42.38503647]
[282.32369995 -52.28390503]
[293.59368896 -62.18277359]
[301.50399780 -77.17821503]
[318.10321045 -73.72818756]
[319.38311768 -56.82262039]
[303.49255371 -50.91279602]
[292.22256470 -41.01392746]
[280.95260620 -31.11505890]
[269.68261719 -21.21619034]
[258.41262817 -11.31732273]
[247.14265442 -1.41845453]
[235.87268066 8.48041344]
[238.83856201 15.36906624]
[252.61587524 9.43729782]
[266.39318848 3.50552964]
[281.29055786 5.25709009]
[272.32495117 17.28283501]
[258.54763794 23.21460342]
[244.77033997 29.14636993]
[247.73622131 36.03502274]
[262.67224121 34.65099716]
[277.60824585 33.26697159]
[292.54425049 31.88294601]
[307.48025513 30.49892235]
[322.41629028 29.11489677]
[337.35229492 27.73087120]
[347.25473022 15.41350746]
[362.97531128 13.78897381]
[375.18728638 23.82107544]
[376.64550781 39.55794525]
[366.48486328 51.66317749]
[350.73345947 52.95495224]
[338.73632812 42.66688156]
[323.80032349 44.05090714]
[308.86428833 45.43493271]
[293.92828369 46.81895828]
[278.99227905 48.20298386]
[264.05624390 49.58700943]
[249.12023926 50.97103500]
[236.05323792 47.65562820]
[226.05053711 41.06622314]
[219.80786133 32.50647736]
[217.57124329 23.39419174]
[205.60098267 32.43371201]
[193.63072205 41.47322845]
[181.66047668 50.51274872]
[169.69021606 59.55226898]
[157.71995544 68.59178925]
[145.74969482 77.63130951]
[133.77943420 86.67082977]
[121.80918121 95.71035004]
[136.64784241 93.51627350]
[150.04998779 86.77960968]
[165.03703308 87.40281677]
[177.83361816 95.22888947]
[185.21615601 108.28638458]
[185.32492065 123.28599548]
[178.13250732 136.44917297]
[165.45075989 144.46000671]
[150.47433472 145.30047607]
[136.97590637 138.75888062]
[128.35615540 126.48386383]
[116.32112122 117.53077698]
[122.59052277 131.15776062]
[128.85992432 144.78474426]
[135.12933350 158.41171265]
[141.48255920 171.99981689]
[147.91937256 185.54852295]
[154.35618591 199.09722900]
[158.60696411 202.02969360]
[161.07872009 205.90547180]
[161.70895386 209.89631653]
[160.77012634 213.26760864]
[166.70188904 227.04492188]
[179.26579285 236.66047668]
[177.19219971 251.41003418]
[183.12396240 265.18734741]
[189.05574036 278.96463013]
[202.51942444 288.32739258]
[200.87342834 304.64373779]
[185.81103516 311.12878418]
[172.82711792 301.11129761]
[175.27842712 284.89642334]
[169.34666443 271.11911011]
[163.41490173 257.34179688]
[151.27526855 248.71168518]
[152.92459106 232.97668457]
[146.99281311 219.19938660]
[140.80747986 205.53404236]
[134.37066650 191.98533630]
[127.93385315 178.43663025]
[122.24091339 173.75683594]
[121.50235748 164.68112183]
[115.23294830 151.05413818]
[108.96354675 137.42716980]
[102.69413757 123.80018616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 98]
[7 97]
[8 96]
[10 94]
[11 93]
[12 92]
[15 89]
[16 88]
[17 87]
[21 80]
[22 79]
[24 77]
[25 76]
[26 75]
[27 74]
[31 70]
[32 69]
[35 67]
[36 66]
[37 65]
[43 60]
[44 59]
[45 58]
[46 57]
[48 55]
[49 54]
[99 117]
[100 116]
[101 115]
[104 113]
[105 112]
[106 111]
[121 209]
[122 208]
[123 207]
[124 206]
[125 205]
[126 204]
[127 203]
[128 202]
[129 201]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[221 254]
[222 253]
[223 252]
[224 251]
[225 249]
[226 248]
[227 247]
[231 246]
[232 245]
[234 243]
[235 242]
[236 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
