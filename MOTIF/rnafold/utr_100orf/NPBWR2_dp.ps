%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPBWR2)
} def

/sequence { (\
AUGCAGGCCGCUGGGCACCCAGAGCCCCUUGACAGCAGGGGCUCCUUCUCCCUCCCCACGAUGGGUGCCAACGUCUCUCAGGACAAUGGCACUGGCCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 21 0.005592503 ubox
2 80 0.013046521 ubox
2 86 0.003385362 ubox
2 98 0.035433026 ubox
2 100 0.205201303 ubox
3 11 0.029073818 ubox
3 20 0.006206563 ubox
3 72 0.004666414 ubox
3 79 0.014455254 ubox
3 96 0.087971645 ubox
3 97 0.033600631 ubox
3 99 0.252360805 ubox
4 10 0.029110639 ubox
4 13 0.120299027 ubox
4 94 0.148228825 ubox
4 95 0.066127025 ubox
5 12 0.120604843 ubox
5 76 0.017372518 ubox
5 78 0.009653912 ubox
5 93 0.160317596 ubox
6 11 0.120495692 ubox
6 75 0.018537184 ubox
6 76 0.007803040 ubox
6 77 0.009746921 ubox
6 92 0.161077033 ubox
6 93 0.004962979 ubox
6 97 0.977044193 ubox
7 16 0.028088081 ubox
7 74 0.018532250 ubox
7 75 0.010643487 ubox
7 76 0.006252709 ubox
7 90 0.160825523 ubox
7 92 0.004692967 ubox
7 96 0.978139626 ubox
8 15 0.028164150 ubox
8 73 0.016134061 ubox
8 89 0.160948521 ubox
8 95 0.978140571 ubox
9 14 0.028169781 ubox
9 60 0.020706729 ubox
9 73 0.015274447 ubox
9 88 0.160862054 ubox
9 94 0.977406648 ubox
10 16 0.049316151 ubox
10 36 0.005387051 ubox
10 59 0.066378928 ubox
10 62 0.004576134 ubox
10 72 0.038331234 ubox
10 74 0.006441881 ubox
10 87 0.115913395 ubox
10 90 0.210109029 ubox
10 93 0.692301026 ubox
10 96 0.004057672 ubox
11 15 0.049062336 ubox
11 22 0.401369601 ubox
11 35 0.005397499 ubox
11 64 0.008001168 ubox
11 73 0.007040852 ubox
11 81 0.010704153 ubox
11 89 0.212035553 ubox
11 95 0.004083608 ubox
12 21 0.595893729 ubox
12 34 0.005361432 ubox
12 58 0.098058088 ubox
12 60 0.003274993 ubox
12 63 0.007670321 ubox
12 70 0.047873718 ubox
12 80 0.010732194 ubox
12 85 0.043973459 ubox
12 88 0.204160226 ubox
12 91 0.244501884 ubox
12 94 0.003927564 ubox
12 98 0.006616323 ubox
12 100 0.005626861 ubox
13 19 0.037922384 ubox
13 20 0.623377315 ubox
13 27 0.005371456 ubox
13 46 0.004908865 ubox
13 47 0.005045942 ubox
13 48 0.003924759 ubox
13 49 0.006051899 ubox
13 50 0.021018057 ubox
13 51 0.045124507 ubox
13 52 0.632307039 ubox
13 53 0.134508627 ubox
13 54 0.046498728 ubox
13 55 0.028681151 ubox
13 56 0.049158559 ubox
13 57 0.105883001 ubox
13 69 0.043203331 ubox
13 72 0.029050988 ubox
13 79 0.010726434 ubox
13 84 0.034717372 ubox
13 87 0.112943475 ubox
13 90 0.242453383 ubox
13 93 0.006288776 ubox
13 97 0.007503891 ubox
13 99 0.007476972 ubox
14 18 0.038716552 ubox
14 19 0.621254714 ubox
14 20 0.060555740 ubox
14 26 0.006001711 ubox
14 45 0.005307008 ubox
14 46 0.006552501 ubox
14 47 0.003414988 ubox
14 48 0.006631975 ubox
14 49 0.021491463 ubox
14 50 0.045365319 ubox
14 51 0.633402890 ubox
14 52 0.148612321 ubox
14 53 0.035906850 ubox
14 54 0.028559995 ubox
14 55 0.050509512 ubox
14 56 0.105529331 ubox
14 68 0.030588013 ubox
14 69 0.394729149 ubox
14 92 0.006738383 ubox
14 96 0.007511516 ubox
14 97 0.013763047 ubox
15 19 0.060476861 ubox
15 25 0.006017550 ubox
15 44 0.004316609 ubox
15 45 0.006920235 ubox
15 47 0.006173594 ubox
15 48 0.023558698 ubox
15 49 0.040647276 ubox
15 50 0.632346535 ubox
15 51 0.148474281 ubox
15 52 0.038361502 ubox
15 53 0.022408864 ubox
15 54 0.051048237 ubox
15 55 0.104918089 ubox
15 68 0.396548656 ubox
15 96 0.013784394 ubox
16 24 0.006026254 ubox
16 67 0.397798063 ubox
16 94 0.007509791 ubox
16 95 0.013453048 ubox
17 66 0.397850820 ubox
17 93 0.006662828 ubox
18 65 0.397975748 ubox
18 95 0.003513433 ubox
19 64 0.397991773 ubox
19 94 0.003547794 ubox
19 95 0.011218491 ubox
20 63 0.397914712 ubox
20 94 0.011674847 ubox
21 46 0.119687471 ubox
21 47 0.022438817 ubox
21 49 0.036041437 ubox
21 53 0.003434643 ubox
21 62 0.383720586 ubox
21 93 0.010829242 ubox
22 44 0.908193576 ubox
22 45 0.092400428 ubox
22 46 0.004681962 ubox
22 47 0.004139614 ubox
22 48 0.029926057 ubox
22 50 0.003726954 ubox
22 92 0.003817494 ubox
23 43 0.990400402 ubox
23 46 0.007250626 ubox
23 47 0.023628747 ubox
23 49 0.003414155 ubox
24 42 0.999851067 ubox
24 45 0.006724648 ubox
24 46 0.003352286 ubox
25 41 0.998002412 ubox
26 40 0.996094648 ubox
26 41 0.062755035 ubox
27 39 0.994182563 ubox
27 40 0.087992786 ubox
28 35 0.004675914 ubox
28 38 0.992119584 ubox
28 39 0.107450962 ubox
29 34 0.008570627 ubox
29 35 0.015918105 ubox
29 37 0.807447349 ubox
29 38 0.123779316 ubox
30 34 0.031244120 ubox
30 37 0.563392064 ubox
31 36 0.785879343 ubox
37 53 0.004734406 ubox
38 52 0.005062151 ubox
39 51 0.005060639 ubox
40 50 0.005055042 ubox
41 49 0.004064309 ubox
43 61 0.003901683 ubox
43 65 0.006583629 ubox
44 60 0.005916569 ubox
44 63 0.009149430 ubox
44 64 0.168874996 ubox
44 65 0.010856972 ubox
45 63 0.174409831 ubox
45 64 0.027740624 ubox
45 65 0.004104261 ubox
46 61 0.017757020 ubox
46 63 0.027108127 ubox
46 64 0.006344537 ubox
47 60 0.016960714 ubox
47 61 0.186248797 ubox
47 63 0.009392274 ubox
47 64 0.015900377 ubox
48 60 0.193066809 ubox
48 63 0.029272249 ubox
48 64 0.018057342 ubox
48 65 0.011347403 ubox
49 61 0.093854240 ubox
49 63 0.017234824 ubox
49 64 0.010098044 ubox
49 65 0.036652291 ubox
50 60 0.099369288 ubox
50 63 0.016866315 ubox
50 64 0.311683578 ubox
50 65 0.172439175 ubox
51 63 0.315113358 ubox
51 64 0.299319169 ubox
51 65 0.011539790 ubox
52 63 0.302071109 ubox
52 64 0.017214124 ubox
52 65 0.009052742 ubox
53 61 0.431517139 ubox
53 63 0.014592648 ubox
53 64 0.021619388 ubox
53 65 0.015339781 ubox
54 60 0.440216436 ubox
54 63 0.038541271 ubox
54 64 0.131653129 ubox
54 65 0.152035744 ubox
55 63 0.132677409 ubox
55 64 0.262475031 ubox
55 65 0.450742443 ubox
56 63 0.262673260 ubox
56 64 0.674333598 ubox
56 65 0.021481698 ubox
57 63 0.679715540 ubox
57 64 0.032325191 ubox
58 62 0.551400722 ubox
58 66 0.004818598 ubox
59 65 0.005731681 ubox
62 98 0.004626938 ubox
63 93 0.015343457 ubox
63 97 0.005322299 ubox
64 92 0.012434743 ubox
64 93 0.258923319 ubox
64 96 0.005159818 ubox
65 92 0.760513448 ubox
66 91 0.881083018 ubox
67 90 0.917370833 ubox
68 89 0.917488167 ubox
69 88 0.917466696 ubox
70 87 0.889885043 ubox
72 88 0.028455420 ubox
73 84 0.994778142 ubox
73 87 0.018594851 ubox
73 90 0.023942567 ubox
73 92 0.007967307 ubox
74 82 0.033150398 ubox
74 83 0.997266042 ubox
74 86 0.017400435 ubox
74 89 0.024023007 ubox
74 91 0.007884779 ubox
75 81 0.046769368 ubox
75 82 0.996673894 ubox
75 88 0.024033617 ubox
76 80 0.050595989 ubox
76 81 0.916176170 ubox
76 82 0.012103098 ubox
76 83 0.034004847 ubox
76 89 0.004796896 ubox
77 81 0.111818364 ubox
77 82 0.036295085 ubox
77 88 0.005681679 ubox
77 89 0.005341871 ubox
78 89 0.019445979 ubox
79 88 0.025895417 ubox
79 94 0.003414005 ubox
80 87 0.025407422 ubox
80 93 0.004017911 ubox
81 92 0.004124384 ubox
87 98 0.110413964 ubox
88 97 0.127004298 ubox
89 96 0.127040466 ubox
90 95 0.126824681 ubox
93 100 0.003378118 ubox
94 99 0.005374732 ubox
6 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
58 62 0.9500000 lbox
65 92 0.9500000 lbox
66 91 0.9500000 lbox
67 90 0.9500000 lbox
68 89 0.9500000 lbox
69 88 0.9500000 lbox
70 87 0.9500000 lbox
73 84 0.9500000 lbox
74 83 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
showpage
end
%%EOF
