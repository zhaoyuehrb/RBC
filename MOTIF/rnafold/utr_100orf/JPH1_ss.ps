%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUACACCCUGCCGUGCCCAGCACUGCCCGCGUCCGUGCCCCUGCGGGGAGCGCGCCGGGGCUGCCCCCCGAAUGACGGGCGGAAGGUUCGACUUCGACGAUGGCGGCACCUACUGCGGCGGCUGGGAGGAGGGCAAGGCGCACGGGCAUGGCAUCUGCACGGGGCCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[195.79736328 888.97991943]
[182.48219299 881.76983643]
[172.23141479 870.62530518]
[166.15695190 856.75518799]
[164.91772461 841.66406250]
[168.64816284 826.98883057]
[176.94358826 814.32135010]
[188.90419006 805.03576660]
[203.23258972 800.13922119]
[203.23258972 785.13922119]
[203.23258972 770.13922119]
[202.29072571 755.16882324]
[200.41073608 740.28710938]
[198.53073120 725.40539551]
[196.65072632 710.52368164]
[194.77073669 695.64196777]
[192.89073181 680.76019287]
[191.01074219 665.87847900]
[189.13073730 650.99676514]
[187.25074768 636.11505127]
[185.37074280 621.23333740]
[171.47683716 605.99560547]
[179.96192932 586.34143066]
[177.28356934 571.58245850]
[164.93205261 563.33776855]
[162.00556946 548.40820312]
[170.73715210 535.50872803]
[168.05879211 520.74975586]
[165.38044739 505.99084473]
[162.70208740 491.23190308]
[160.02374268 476.47296143]
[146.54649353 470.18789673]
[139.26832581 457.01623535]
[141.16384888 441.90795898]
[151.71409607 430.68304443]
[149.03573608 415.92410278]
[146.35739136 401.16516113]
[134.00585938 392.92041016]
[131.07939148 377.99090576]
[139.81095886 365.09140015]
[137.13261414 350.33245850]
[134.45425415 335.57351685]
[124.56875610 324.43231201]
[129.71760559 309.47238159]
[127.03924561 294.71343994]
[124.36089325 279.95449829]
[121.68254089 265.19555664]
[119.00418854 250.43659973]
[116.32583618 235.67765808]
[113.38297272 220.96917725]
[110.17655945 206.31588745]
[99.89749908 195.53672791]
[104.50601959 180.40159607]
[101.29959869 165.74830627]
[96.78298187 159.86650085]
[98.16963959 150.80326843]
[95.22678375 136.09478760]
[92.28392029 121.38629150]
[89.34106445 106.67781067]
[81.99706268 93.59860229]
[70.97080994 83.42895508]
[59.94455719 73.25930786]
[43.83560944 70.18784332]
[38.69735718 54.61445618]
[49.81559372 42.55971146]
[65.75283051 46.42449570]
[70.11420441 62.23305130]
[81.14045715 72.40270233]
[92.16670990 82.57234192]
[104.38061523 73.86484528]
[98.36167145 60.12540054]
[92.34273529 46.38595581]
[86.32379150 32.64651108]
[71.96443176 25.49191093]
[68.74623871 9.77495289]
[79.13793182 -2.44765830]
[95.16790009 -1.79978132]
[104.53931427 11.22158813]
[100.06324005 26.62756920]
[106.08217621 40.36701584]
[112.10112000 54.10646057]
[118.12006378 67.84590149]
[125.55218506 66.83915710]
[140.41642761 64.82565308]
[147.84855652 63.81890488]
[149.99539185 48.97333145]
[152.14222717 34.12775803]
[154.28906250 19.28218269]
[144.62866211 6.77409983]
[146.72511292 -8.89052391]
[159.33462524 -18.41814613]
[174.97621155 -16.15619659]
[184.36999512 -3.44665098]
[181.94279480 12.17014408]
[169.13464355 21.42901993]
[166.98780823 36.27459335]
[164.84097290 51.12017059]
[162.69412231 65.96574402]
[158.79110718 80.52590179]
[151.99697876 92.54578400]
[143.09809875 101.51295471]
[132.96174622 107.11413574]
[122.49038696 109.24605560]
[112.57503510 108.01640320]
[104.04955292 103.73494720]
[106.99240875 118.44343567]
[109.93527222 133.15191650]
[112.87812805 147.86041260]
[115.95288849 162.54188538]
[119.15930939 177.19517517]
[129.66770935 189.02243042]
[124.82984924 203.10946655]
[128.03627014 217.76275635]
[132.23410034 222.94041443]
[133.03997803 228.60862732]
[131.08477783 232.99929810]
[133.76313782 247.75825500]
[136.44148254 262.51718140]
[139.11984253 277.27612305]
[141.79818726 292.03509521]
[144.47654724 306.79403687]
[154.55361938 318.99087524]
[149.21319580 332.89517212]
[151.89155579 347.65411377]
[154.56991577 362.41305542]
[167.27728271 371.42196655]
[169.78326416 386.42779541]
[161.11633301 398.48678589]
[163.79467773 413.24575806]
[166.47303772 428.00469971]
[180.29469299 434.80676270]
[187.37802124 448.28561401]
[185.19213867 463.17474365]
[174.78268433 473.79458618]
[177.46102905 488.55352783]
[180.13938904 503.31246948]
[182.81773376 518.07141113]
[185.49609375 532.83038330]
[198.20346069 541.83929443]
[200.70944214 556.84509277]
[192.04251099 568.90411377]
[194.72087097 583.66308594]
[203.16990662 587.98132324]
[208.58796692 595.60229492]
[209.85284424 604.72784424]
[206.80439758 613.27539062]
[200.25245667 619.35333252]
[202.13246155 634.23504639]
[204.01246643 649.11676025]
[205.89245605 663.99847412]
[207.77246094 678.88024902]
[209.65245056 693.76196289]
[211.53245544 708.64367676]
[213.41244507 723.52539062]
[215.29244995 738.40710449]
[217.17245483 753.28881836]
[226.49423218 741.53704834]
[241.15792847 738.37854004]
[254.49114990 745.25061035]
[260.42691040 759.02618408]
[256.26428223 773.43701172]
[243.89736938 781.92578125]
[228.95346069 780.62988281]
[218.23258972 770.13922119]
[218.23258972 785.13922119]
[218.23258972 800.13922119]
[232.56097412 805.03576660]
[244.52159119 814.32135010]
[252.81701660 826.98883057]
[256.54745483 841.66406250]
[255.30821228 856.75518799]
[249.23376465 870.62530518]
[238.98298645 881.76983643]
[225.66781616 888.97991943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 166]
[10 165]
[11 164]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[23 142]
[24 141]
[27 138]
[28 137]
[29 136]
[30 135]
[31 134]
[35 130]
[36 129]
[37 128]
[40 125]
[41 124]
[42 123]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 116]
[50 113]
[51 112]
[53 110]
[54 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 69]
[61 68]
[62 67]
[70 82]
[71 81]
[72 80]
[73 79]
[85 98]
[86 97]
[87 96]
[88 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
