%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCGCUUCCCUCCUGGGGCAGAGUCUCGGUCACAAACAACCACCACCGGCCCACCCCGCCCCUCCUUCCCUCUUCACUGUGAGCUCAGAGCAGCAGGACAAAGUGCUCGGGACAAGGACAUAGGGCUGAGAGUAGCCAUGGGCUCUGGAGGAGACAGCCUCCUGGGGGGCAGGGGUUCCCUGCCUCUGCUGCUCCUGCUCAUCAUGGGAGGCAUGGCUCAGGACUCCCCGCCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-136.26223755 809.81420898]
[-135.25712585 824.92279053]
[-139.21464539 839.53845215]
[-147.70547485 852.07574463]
[-159.80860901 861.17480469]
[-174.21119690 865.84857178]
[-189.35093689 865.59014893]
[-203.58560181 860.42749023]
[-215.37110901 850.92059326]
[-223.42906189 838.10076904]
[-226.88539124 823.35858154]
[-225.36517334 808.29309082]
[-219.03332520 794.53863525]
[-208.57666016 783.58703613]
[-195.12945557 776.62634277]
[-180.15034485 774.41156006]
[-177.42803955 759.66064453]
[-174.70571899 744.90972900]
[-171.98339844 730.15887451]
[-169.26107788 715.40795898]
[-166.53877258 700.65704346]
[-163.81645203 685.90618896]
[-171.58532715 668.18664551]
[-158.22145081 653.07708740]
[-155.88458252 638.26019287]
[-153.54772949 623.44335938]
[-151.21086121 608.62652588]
[-148.87400818 593.80969238]
[-146.53713989 578.99279785]
[-153.70506287 562.96502686]
[-141.98168945 548.75280762]
[-139.83816528 533.90673828]
[-137.69464111 519.06072998]
[-135.55113220 504.21466064]
[-133.40760803 489.36859131]
[-138.55310059 483.91204834]
[-147.55178833 495.91302490]
[-156.55049133 507.91400146]
[-165.54917908 519.91497803]
[-168.79125977 534.56042480]
[-179.93263245 544.60382080]
[-194.83477783 546.31445312]
[-207.96217346 539.05694580]
[-214.43855286 525.52709961]
[-211.85824585 510.75073242]
[-201.17970276 500.21655273]
[-186.36779785 497.83786011]
[-173.85989380 489.55822754]
[-161.35198975 481.27859497]
[-148.84408569 472.99896240]
[-153.98959351 467.54241943]
[-168.93577576 468.81185913]
[-183.88195801 470.08132935]
[-192.73519897 482.97140503]
[-207.81651306 487.10519409]
[-222.00494385 480.53085327]
[-228.60118103 466.35256958]
[-224.49066162 451.26489258]
[-211.61424255 442.39178467]
[-196.05178833 443.92285156]
[-185.15141296 455.13513184]
[-170.20523071 453.86569214]
[-155.25904846 452.59622192]
[-153.72676086 443.79141235]
[-150.37896729 435.73937988]
[-145.46661377 428.79837036]
[-139.30752563 423.25448608]
[-132.26718140 419.30996704]
[-124.73791504 417.07684326]
[-117.11743927 416.57492065]
[-109.78809357 417.73516846]
[-103.09765625 420.40740967]
[-94.79461670 407.91503906]
[-86.49156952 395.42266846]
[-78.18852234 382.93026733]
[-69.88548279 370.43789673]
[-68.80274963 363.14239502]
[-61.39189529 357.83776855]
[-52.92671204 345.45468140]
[-55.92145157 330.90933228]
[-47.51295471 318.23056030]
[-32.23615265 315.18801880]
[-23.77097130 302.80493164]
[-15.30579090 290.42184448]
[-6.84061003 278.03875732]
[1.62457108 265.65570068]
[10.08975220 253.27261353]
[5.96269512 241.07859802]
[9.66171932 228.54508972]
[20.05304718 220.30421448]
[33.48794937 219.53517151]
[42.11382675 207.26348877]
[50.73970413 194.99180603]
[59.36558533 182.72012329]
[67.99146271 170.44844055]
[76.61734009 158.17675781]
[85.24321747 145.90507507]
[93.86909485 133.63339233]
[102.49497986 121.36170197]
[93.91805267 129.38269043]
[80.71830750 133.32849121]
[64.84746552 131.20198059]
[49.00059509 121.89681244]
[36.23194122 105.44459534]
[29.49741173 83.10482788]
[31.18518257 57.27893829]
[29.04166222 42.43288422]
[26.89814186 27.58683014]
[22.58245468 19.55970955]
[24.82475090 12.53341579]
[22.87493706 -2.33931804]
[9.17848110 -9.63224220]
[2.41477346 -23.59762383]
[5.18459654 -38.86548996]
[16.42289734 -49.56503296]
[31.80831909 -51.58205795]
[45.42485428 -44.14098358]
[52.03666687 -30.10305214]
[49.10137939 -14.86613274]
[37.74766922 -4.28913307]
[39.69748688 10.58360100]
[41.74419785 25.44331169]
[43.88771820 40.28936386]
[46.03123474 55.13541794]
[53.49541855 55.86750793]
[68.42378998 57.33168411]
[75.88796997 58.06377029]
[80.87510681 43.91709137]
[85.86223602 29.77041245]
[90.84936523 15.62373352]
[95.83649445 1.47705388]
[92.29497528 -14.53511906]
[104.57221985 -25.40716171]
[120.03844452 -19.95484924]
[122.78333282 -3.78705382]
[109.98316956 6.46418381]
[104.99604034 20.61086273]
[100.00891113 34.75754166]
[95.02178192 48.90422058]
[90.03465271 63.05089951]
[95.99717712 67.60043335]
[105.09625244 55.67538071]
[118.93878937 49.89748764]
[117.02130127 64.77445221]
[107.92223358 76.69950867]
[113.88476562 81.24903870]
[126.21240997 72.70333099]
[138.54005432 64.15761566]
[145.47357178 49.93661880]
[160.34144592 49.04455948]
[172.66908264 40.49884796]
[184.99673462 31.95313644]
[197.32437134 23.40742493]
[209.65202332 14.86171341]
[212.22267151 -0.73210931]
[225.11538696 -9.87285614]
[240.68116760 -7.13748312]
[249.68508911 5.85116053]
[246.78530884 21.38714409]
[233.70219421 30.25324249]
[218.19773865 27.18935776]
[205.87008667 35.73506927]
[193.54244995 44.28078079]
[181.21479797 52.82649231]
[168.88716125 61.37220383]
[162.83538818 74.98195648]
[147.08576965 76.48526001]
[134.75811768 85.03097534]
[122.43047333 93.57668304]
[127.23277283 107.78717041]
[142.21716309 107.10303497]
[157.20155334 106.41889954]
[172.18594360 105.73476410]
[187.17033386 105.05063629]
[202.15472412 104.36650085]
[217.13911438 103.68236542]
[232.12350464 102.99822998]
[247.67039490 96.23577881]
[258.47238159 109.30304718]
[248.90605164 123.30026245]
[232.80764771 117.98262024]
[217.82325745 118.66675568]
[202.83886719 119.35089111]
[187.85447693 120.03502655]
[172.87008667 120.71915436]
[157.88569641 121.40328979]
[142.90130615 122.08742523]
[127.91690826 122.77156067]
[114.76666260 129.98757935]
[106.14078522 142.25926208]
[97.51490021 154.53094482]
[88.88902283 166.80262756]
[80.26314545 179.07431030]
[71.63726807 191.34600830]
[63.01138687 203.61769104]
[54.38550949 215.88937378]
[45.75963211 228.16105652]
[49.07744217 245.34678650]
[39.12709427 259.33346558]
[22.47283363 261.73779297]
[14.00765324 274.12088013]
[5.54247189 286.50393677]
[-2.92270899 298.88702393]
[-11.38788986 311.27011108]
[-19.85307121 323.65319824]
[-17.14212227 338.99230957]
[-25.90342140 351.42993164]
[-40.54363251 353.91986084]
[-49.00881195 366.30294800]
[-57.39310455 378.74093628]
[-65.69615173 391.23333740]
[-73.99919128 403.72570801]
[-82.30223846 416.21807861]
[-90.60528564 428.71044922]
[-79.07051849 452.71353149]
[-89.53227997 479.73693848]
[-118.56155396 491.51211548]
[-120.70507050 506.35815430]
[-122.84859467 521.20422363]
[-124.99211121 536.05029297]
[-127.13562775 550.89630127]
[-120.05636597 561.66229248]
[-122.13428497 573.97253418]
[-131.72029114 581.32965088]
[-134.05715942 596.14654541]
[-136.39401245 610.96337891]
[-138.73088074 625.78021240]
[-141.06773376 640.59710693]
[-143.40460205 655.41394043]
[-136.52249146 663.80389404]
[-135.40548706 674.37719727]
[-140.18164062 683.63006592]
[-149.06555176 688.62847900]
[-151.78787231 703.37939453]
[-154.51017761 718.13024902]
[-157.23249817 732.88116455]
[-159.95481873 747.63208008]
[-162.67713928 762.38299561]
[-165.39944458 777.13385010]
[-152.19767761 784.54949951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 239]
[17 238]
[18 237]
[19 236]
[20 235]
[21 234]
[22 233]
[24 229]
[25 228]
[26 227]
[27 226]
[28 225]
[29 224]
[31 221]
[32 220]
[33 219]
[34 218]
[35 217]
[51 63]
[52 62]
[53 61]
[72 214]
[73 213]
[74 212]
[75 211]
[76 210]
[78 209]
[79 208]
[82 205]
[83 204]
[84 203]
[85 202]
[86 201]
[87 200]
[91 197]
[92 196]
[93 195]
[94 194]
[95 193]
[96 192]
[97 191]
[98 190]
[99 189]
[106 124]
[107 123]
[108 122]
[110 121]
[111 120]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[146 169]
[147 168]
[148 167]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
