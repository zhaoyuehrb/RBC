%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUGAGGGUUCUGUGCUCAAAUGUUUCUAUUAUUCUGUUCAAGGUAAAAUUCCUGCAUUCCUGCAAAGAUGUCCUGCCAGCAAAACCAGCAGCAGUGCCAGCCCCCUCCCAGUUGUCCCUCACCCAAGUGUCCCCCAAAGAGCCCAGCACAGUGUCUGCCUCCACCCU\
) } def
/len { sequence length } bind def

/coor [
[112.15868378 408.42840576]
[111.60765839 393.43850708]
[111.05662537 378.44863892]
[102.39867401 369.96667480]
[101.83854675 357.45751953]
[110.22379303 347.62426758]
[109.94822693 332.62680054]
[109.67266846 317.62933350]
[109.39710236 302.63186646]
[93.50041962 292.87677002]
[86.59835815 275.38894653]
[91.62686157 257.11831665]
[106.74165344 245.44229126]
[105.64033508 230.48277283]
[104.53901672 215.52325439]
[103.43769073 200.56373596]
[102.33637238 185.60423279]
[101.23505402 170.64471436]
[100.13372803 155.68519592]
[93.92825317 169.34141541]
[87.72278595 182.99761963]
[83.51792145 197.39619446]
[76.14225006 210.45758057]
[65.98397827 221.49430847]
[53.57773972 229.92552185]
[39.57649612 235.30744934]
[24.71715927 237.35685730]
[9.78179359 235.96586609]
[-4.44352674 231.20768738]
[-17.21010208 223.33274841]
[-27.84600830 212.75553894]
[-35.79145813 200.03273010]
[-40.62827301 185.83395386]
[-42.10188293 170.90650940]
[-40.13473129 156.03605652]
[-34.83034897 142.00524902]
[-26.46791840 129.55255127]
[-15.48756218 119.33336639]
[-2.46719599 111.88554382]
[11.90789795 107.60107422]
[26.88113594 106.70545959]
[41.65928650 109.24431610]
[56.25185013 105.77198792]
[70.84441376 102.29965973]
[56.37351227 98.35086823]
[41.90260696 94.40207672]
[29.15594482 103.46058655]
[13.57296848 102.15488434]
[2.51148248 91.10149384]
[1.19438326 75.51947784]
[10.24356461 62.76618576]
[25.38628006 58.86334229]
[39.47260284 65.65374756]
[45.85139847 79.93117523]
[60.32230377 83.87996674]
[74.79320526 87.82875824]
[85.44841003 77.27098083]
[81.63271332 62.76441574]
[77.81701660 48.25785065]
[74.00131989 33.75128555]
[70.18562317 19.24471855]
[59.19235611 7.86672449]
[63.43757248 -6.41008949]
[59.62187576 -20.91665459]
[55.80617523 -35.42322159]
[51.99047852 -49.92978668]
[36.00986481 -52.89146042]
[22.96183395 -62.48389816]
[15.42216015 -76.75066376]
[14.85179806 -92.81895447]
[21.31406593 -107.47805023]
[33.47209167 -117.82086945]
[29.39053917 -132.25488281]
[25.30898666 -146.68890381]
[10.97356606 -152.93627930]
[4.05405712 -166.95964050]
[7.81763887 -182.13757324]
[20.48726463 -191.30351257]
[36.08072281 -190.12960815]
[47.23526001 -179.17012024]
[48.68404388 -163.59979248]
[39.74300766 -150.77046204]
[43.82455826 -136.33644104]
[47.90610886 -121.90242004]
[61.69207764 -120.18066406]
[73.81533813 -113.30675507]
[82.42453003 -102.29237366]
[86.19043732 -88.78434753]
[84.51115417 -74.81842041]
[77.60801697 -62.51250839]
[66.49704742 -53.74548340]
[70.31274414 -39.23891830]
[74.12844086 -24.73235321]
[77.94413757 -10.22578716]
[88.66447449 0.11459961]
[84.69218445 15.42901993]
[88.50788116 29.93558502]
[92.32357788 44.44215012]
[96.13928223 58.94871902]
[99.95497894 73.45528412]
[114.27104950 77.93300629]
[125.67266846 68.18605042]
[137.07427979 58.43908691]
[148.47589111 48.69213104]
[146.28057861 33.42176056]
[152.71034241 19.39814377]
[165.71343994 11.09616375]
[181.14065552 11.16495323]
[194.06919861 19.58255959]
[200.37364197 33.66295624]
[198.04223633 48.91314316]
[187.81895447 60.46683502]
[172.96597290 64.63729858]
[158.22285461 60.09374237]
[146.82124329 69.84070587]
[135.41963196 79.58766174]
[124.01801300 89.33461761]
[126.71220398 96.33399963]
[138.36083984 86.88363647]
[150.94818115 95.04197693]
[147.07867432 109.53427887]
[132.10058594 110.33276367]
[134.79476929 117.33214569]
[149.78907776 116.91883087]
[164.78338623 116.50551605]
[178.46318054 107.46144104]
[193.01261902 115.02754211]
[193.46447754 131.42045593]
[179.35394287 139.77656555]
[165.19670105 131.49981689]
[150.20239258 131.91313171]
[135.20808411 132.32644653]
[130.17938232 137.89080811]
[143.53627014 144.71673584]
[156.89315796 151.54267883]
[171.88761902 151.13508606]
[185.11389160 158.21081543]
[193.09629822 170.91046143]
[193.73719788 185.89677429]
[186.86817932 199.23155212]
[174.29429626 207.41064453]
[159.31977844 208.28469849]
[145.87971497 201.62403870]
[137.50592041 189.17897034]
[136.39891052 174.21994019]
[128.26042175 161.61972046]
[120.12195587 149.01951599]
[115.09324646 154.58387756]
[116.19456482 169.54339600]
[117.29588318 184.50289917]
[118.39720917 199.46241760]
[119.49852753 214.42193604]
[120.59985352 229.38145447]
[121.70117188 244.34097290]
[132.40568542 248.62043762]
[140.69010925 256.56307983]
[145.37431335 266.98406982]
[145.81109619 278.34960938]
[141.97535706 289.00256348]
[134.46212769 297.40417480]
[124.39456940 302.35629272]
[124.67013550 317.35375977]
[124.94569397 332.35122681]
[125.22126007 347.34872437]
[135.08761597 362.87573242]
[126.04650116 377.89761353]
[126.59752655 392.88748169]
[127.14855957 407.87734985]
[133.77267456 423.48367310]
[120.60999298 434.16918945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[6 164]
[7 163]
[8 162]
[9 161]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[44 56]
[45 55]
[46 54]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[63 94]
[64 93]
[65 92]
[66 91]
[72 84]
[73 83]
[74 82]
[101 117]
[102 116]
[103 115]
[104 114]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
