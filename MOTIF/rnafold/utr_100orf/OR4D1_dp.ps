%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4D1)
} def

/sequence { (\
AUGGAACCACAGAACACCACACAGGUAUCAAUGUUUGUCCUCUUAGGGUUUUCACAGACCCAAGAGCUCCAGAAAUUCCUGUUCCUUCUGUUCCUGUUAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 91 0.003293955 ubox
1 97 0.127186063 ubox
2 9 0.025130736 ubox
2 11 0.031902061 ubox
2 19 0.003945695 ubox
2 90 0.003637827 ubox
2 96 0.132863869 ubox
2 99 0.029747693 ubox
3 8 0.044662168 ubox
3 10 0.035548222 ubox
3 18 0.004545700 ubox
3 40 0.003906685 ubox
3 85 0.012475190 ubox
3 89 0.004304434 ubox
3 93 0.016025777 ubox
3 94 0.944480656 ubox
3 95 0.050006574 ubox
3 98 0.026898223 ubox
4 17 0.004532174 ubox
4 39 0.004097367 ubox
4 84 0.012496736 ubox
4 88 0.004381879 ubox
4 92 0.015962212 ubox
4 93 0.946172433 ubox
4 94 0.048626546 ubox
4 97 0.022741810 ubox
4 98 0.019960873 ubox
5 38 0.003997333 ubox
5 83 0.012462289 ubox
5 87 0.004361621 ubox
5 91 0.011232463 ubox
5 92 0.942348942 ubox
5 97 0.017425579 ubox
5 98 0.058578096 ubox
6 82 0.010861502 ubox
6 86 0.003971785 ubox
6 91 0.587234283 ubox
6 97 0.060465955 ubox
7 81 0.009993268 ubox
7 90 0.443501252 ubox
7 96 0.059340428 ubox
8 33 0.008125249 ubox
8 37 0.003261596 ubox
8 90 0.043508696 ubox
8 96 0.027986588 ubox
9 32 0.008081670 ubox
9 34 0.016338565 ubox
9 38 0.016046965 ubox
9 82 0.013109723 ubox
9 89 0.045391333 ubox
9 91 0.743854738 ubox
9 95 0.028305302 ubox
9 97 0.270148524 ubox
10 33 0.017785402 ubox
10 37 0.017179210 ubox
10 81 0.013743789 ubox
10 90 0.842938881 ubox
10 96 0.289712382 ubox
11 32 0.017500916 ubox
11 36 0.016158533 ubox
11 80 0.013930062 ubox
11 86 0.065303335 ubox
11 87 0.011479936 ubox
11 89 0.939724350 ubox
11 95 0.289084614 ubox
12 29 0.014317447 ubox
12 35 0.014229885 ubox
12 36 0.008345514 ubox
12 78 0.004030367 ubox
12 79 0.013602515 ubox
12 83 0.003219491 ubox
12 84 0.121386455 ubox
12 85 0.055491766 ubox
12 86 0.006226146 ubox
12 87 0.007773769 ubox
12 88 0.943244501 ubox
12 93 0.217920733 ubox
12 94 0.205392868 ubox
13 28 0.014096661 ubox
13 34 0.011694237 ubox
13 35 0.011987038 ubox
13 77 0.004717055 ubox
13 83 0.127336708 ubox
13 86 0.013439150 ubox
13 87 0.939752036 ubox
13 92 0.298155433 ubox
13 98 0.003437814 ubox
14 34 0.015063460 ubox
14 38 0.006239893 ubox
14 76 0.003829139 ubox
14 82 0.109896053 ubox
14 86 0.869243179 ubox
14 91 0.299295322 ubox
14 97 0.003643770 ubox
15 33 0.017229377 ubox
15 37 0.007282487 ubox
15 81 0.104318595 ubox
15 90 0.299433413 ubox
15 96 0.003673952 ubox
16 26 0.092467526 ubox
16 32 0.012295039 ubox
16 36 0.006664659 ubox
16 38 0.009500085 ubox
16 80 0.066388955 ubox
16 82 0.026747061 ubox
16 89 0.288786215 ubox
16 95 0.003506846 ubox
17 25 0.105179430 ubox
17 37 0.008942767 ubox
17 81 0.020091758 ubox
18 24 0.105218538 ubox
18 37 0.045538902 ubox
18 81 0.008980274 ubox
19 26 0.011108055 ubox
19 34 0.005964274 ubox
19 36 0.045765140 ubox
19 38 0.011851644 ubox
19 80 0.006651949 ubox
19 82 0.067013523 ubox
19 91 0.003457672 ubox
20 25 0.011618759 ubox
20 33 0.006551279 ubox
20 37 0.012640271 ubox
20 81 0.058468422 ubox
20 90 0.003629308 ubox
21 32 0.005889505 ubox
21 34 0.051714769 ubox
21 36 0.009267704 ubox
21 38 0.026407949 ubox
21 80 0.040247686 ubox
21 82 0.957012566 ubox
21 97 0.004534890 ubox
22 33 0.054627147 ubox
22 37 0.028287046 ubox
22 81 0.988155070 ubox
22 96 0.004850569 ubox
23 32 0.054351959 ubox
23 36 0.028223002 ubox
23 41 0.003459500 ubox
23 80 0.989836242 ubox
23 86 0.026364591 ubox
23 95 0.004852534 ubox
24 35 0.027726952 ubox
24 39 0.003520052 ubox
24 40 0.004926747 ubox
24 70 0.003332457 ubox
24 77 0.005229662 ubox
24 78 0.005851374 ubox
24 79 0.991684073 ubox
24 80 0.003415694 ubox
24 85 0.030037996 ubox
24 94 0.004853838 ubox
25 32 0.006443849 ubox
25 34 0.025636786 ubox
25 38 0.003385083 ubox
25 39 0.005231877 ubox
25 69 0.003336367 ubox
25 76 0.006405867 ubox
25 77 0.005950870 ubox
25 78 0.990961173 ubox
25 79 0.004819093 ubox
25 84 0.029980515 ubox
25 93 0.004819263 ubox
26 31 0.007761527 ubox
26 33 0.019398575 ubox
26 37 0.008368126 ubox
26 75 0.016159096 ubox
26 81 0.006381390 ubox
27 32 0.017480626 ubox
27 34 0.006667790 ubox
27 36 0.010098355 ubox
27 38 0.007388840 ubox
27 76 0.247945247 ubox
27 80 0.010040679 ubox
27 82 0.019474314 ubox
28 33 0.007028739 ubox
28 37 0.005627467 ubox
28 73 0.064265766 ubox
28 75 0.250969096 ubox
28 81 0.019318642 ubox
29 37 0.034615189 ubox
29 72 0.065744334 ubox
29 81 0.010464874 ubox
30 36 0.034287502 ubox
30 77 0.744708668 ubox
30 80 0.009764320 ubox
31 35 0.026206337 ubox
31 38 0.008904046 ubox
31 76 0.757639364 ubox
32 37 0.008847400 ubox
32 71 0.315381073 ubox
32 75 0.719371196 ubox
33 67 0.020500525 ubox
33 70 0.316434247 ubox
33 76 0.031661423 ubox
34 66 0.011548852 ubox
34 72 0.052632633 ubox
34 73 0.881238632 ubox
34 74 0.085916286 ubox
34 75 0.033879532 ubox
35 65 0.004784975 ubox
35 71 0.048140548 ubox
35 72 0.911434733 ubox
35 73 0.087805312 ubox
35 74 0.033657601 ubox
35 75 0.007439447 ubox
36 71 0.918265567 ubox
36 72 0.084209401 ubox
36 73 0.030985717 ubox
36 74 0.007657989 ubox
37 67 0.180495694 ubox
37 70 0.915808941 ubox
38 65 0.005146543 ubox
38 66 0.096494705 ubox
38 73 0.023992093 ubox
39 64 0.004507921 ubox
39 72 0.024614924 ubox
40 64 0.006583387 ubox
40 66 0.990313344 ubox
41 63 0.006177746 ubox
41 65 0.999186036 ubox
42 64 0.999823644 ubox
42 66 0.011550934 ubox
43 63 0.997915480 ubox
43 64 0.005619818 ubox
43 65 0.011491744 ubox
44 62 0.984657913 ubox
44 63 0.033209579 ubox
44 64 0.010981142 ubox
46 60 0.012435725 ubox
46 61 0.999597140 ubox
47 59 0.011404378 ubox
47 60 0.999914315 ubox
48 59 0.999919680 ubox
49 57 0.016435061 ubox
49 58 0.998430361 ubox
50 56 0.020810860 ubox
50 57 0.978286259 ubox
50 58 0.034066266 ubox
51 56 0.770473233 ubox
51 57 0.047495900 ubox
51 58 0.006478472 ubox
52 56 0.044698478 ubox
52 57 0.010519925 ubox
52 58 0.010581044 ubox
53 57 0.013840598 ubox
66 85 0.003182478 ubox
67 81 0.003422579 ubox
70 81 0.073365661 ubox
70 90 0.010857398 ubox
71 80 0.075502453 ubox
71 86 0.005999802 ubox
71 89 0.013392719 ubox
72 78 0.015731730 ubox
72 79 0.075664426 ubox
72 84 0.010854658 ubox
72 85 0.007043088 ubox
72 88 0.013697282 ubox
73 77 0.014594253 ubox
73 83 0.010470086 ubox
73 87 0.013600716 ubox
74 82 0.009382529 ubox
74 83 0.011627593 ubox
74 86 0.012142391 ubox
75 82 0.013424983 ubox
76 81 0.013564485 ubox
89 99 0.003242731 ubox
90 98 0.003202912 ubox
94 100 0.008220261 ubox
95 99 0.013937273 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
9 91 0.9500000 lbox
10 90 0.9500000 lbox
11 89 0.9500000 lbox
12 88 0.9500000 lbox
13 87 0.9500000 lbox
14 86 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
25 78 0.9500000 lbox
30 77 0.9500000 lbox
31 76 0.9500000 lbox
32 75 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
showpage
end
%%EOF
