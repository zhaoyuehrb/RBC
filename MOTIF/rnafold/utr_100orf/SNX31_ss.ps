%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUCCCCGGCCGGCGAGAGCGGGCGCCGGGGUUCGCUCUGAGUCGCGUGGCAGGCCGCGCUGCGUCCACCGCUGCCGAGUUCAGAGCCGCGCACCGCCCGCCGCCGCAGGUCGGGUUCCCAGCGCUACUCCCAAGACACCGCUCAGCCAUGAAGAUGCAUUUCUGUAUCCCGGUGUCCCAGCAGCGGUCCGACGCGCUGGGGGGCCGCUACGUGCUGUACUCCGUGCACCUGGACGGGUUCCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[102.66477203 206.10319519]
[113.94347382 196.21426392]
[127.77244568 190.40397644]
[142.72950745 189.26983643]
[157.27647400 192.92851257]
[169.91682434 201.00331116]
[162.74301147 187.82998657]
[155.56921387 174.65666199]
[148.39540100 161.48333740]
[141.22158813 148.31001282]
[134.04777527 135.13668823]
[126.87397003 121.96336365]
[119.70015717 108.79003906]
[111.46852875 122.05651093]
[94.62501526 127.62969208]
[84.15145874 138.36769104]
[73.67790985 149.10569763]
[69.53562164 167.06042480]
[52.45207977 171.12413025]
[42.11320496 181.99185181]
[31.77432823 192.85958862]
[21.43545341 203.72732544]
[11.09657860 214.59506226]
[0.75770372 225.46279907]
[-9.58117104 236.33053589]
[-19.92004585 247.19827271]
[-30.25892067 258.06600952]
[-29.61440468 273.85714722]
[-40.38597107 285.42211914]
[-56.18304443 285.89965820]
[-67.63349915 275.00640869]
[-67.94398499 259.20516968]
[-56.93029404 247.87052917]
[-41.12665558 247.72712708]
[-30.78778076 236.85939026]
[-20.44890594 225.99165344]
[-10.11003113 215.12391663]
[0.22884387 204.25619507]
[10.56771851 193.38845825]
[20.90659332 182.52072144]
[31.24547005 171.65298462]
[41.58434296 160.78524780]
[41.59168243 148.70529175]
[50.09310532 139.56822205]
[62.93990707 138.63214111]
[73.41345978 127.89414215]
[83.88700867 117.15614319]
[76.79545593 103.93836212]
[62.05695724 106.72703552]
[47.31845856 109.51570892]
[32.57996368 112.30438232]
[17.84146500 115.09305573]
[3.10296774 117.88172913]
[-8.96741104 128.98298645]
[-24.53355217 123.82283020]
[-27.58234406 107.70957184]
[-14.97745132 97.21916199]
[0.31429365 103.14323425]
[15.05279064 100.35456085]
[29.79128838 97.56588745]
[44.52978516 94.77720642]
[59.26828384 91.98853302]
[74.00678253 89.19985962]
[95.21444702 75.60501862]
[115.31755066 84.81008148]
[117.36810303 69.95090485]
[119.41865540 55.09172058]
[121.46921539 40.23254013]
[123.51976776 25.37336159]
[116.19076538 8.46725368]
[127.52304077 -4.94693899]
[129.38819885 -19.83052635]
[131.25335693 -34.71411514]
[133.11849976 -49.59770203]
[134.98365784 -64.48129272]
[136.84881592 -79.36488342]
[138.71397400 -94.24846649]
[140.57913208 -109.13205719]
[130.42424011 -113.75888062]
[121.76335144 -120.76736450]
[115.14142609 -129.70498657]
[110.97225952 -139.99822998]
[109.51256561 -150.98933411]
[110.84628296 -161.97837830]
[114.87970734 -172.26785278]
[121.34808350 -181.20687866]
[129.83293152 -188.23242188]
[124.00640869 -202.05456543]
[118.17988586 -215.87670898]
[103.81632233 -221.90379333]
[98.10430145 -236.00440979]
[103.93872070 -249.66073608]
[98.11220551 -263.48287964]
[92.28568268 -277.30502319]
[86.45915985 -291.12716675]
[68.66850281 -294.73831177]
[56.72723389 -308.20144653]
[55.29125214 -325.98178101]
[64.74862671 -340.92041016]
[58.57931900 -354.59298706]
[52.41001129 -368.26556396]
[46.24070358 -381.93817139]
[40.07139969 -395.61074829]
[33.81698608 -409.24462891]
[27.47771263 -422.83923340]
[12.54268551 -428.00842285]
[5.71244049 -442.26055908]
[11.03924084 -457.14010620]
[25.36279106 -463.81927490]
[40.18518066 -458.33544922]
[46.71255112 -443.94210815]
[41.07233047 -429.17849731]
[47.41160202 -415.58389282]
[53.07171631 -410.86257935]
[53.74398804 -401.78005981]
[59.91329193 -388.10748291]
[66.08259583 -374.43487549]
[72.25190735 -360.76229858]
[78.42121124 -347.08972168]
[90.51274872 -346.41998291]
[101.24059296 -340.64779663]
[108.54767609 -330.81048584]
[111.00350952 -318.73129272]
[108.08388519 -306.68157959]
[100.28130341 -296.95367432]
[106.10782623 -283.13153076]
[111.93434906 -269.30938721]
[117.76086426 -255.48725891]
[131.61077881 -250.12858582]
[137.71661377 -236.19395447]
[132.00202942 -221.70323181]
[137.82855225 -207.88108826]
[143.65507507 -194.05894470]
[151.22406006 -195.11503601]
[158.86125183 -194.83502197]
[166.33258057 -193.22746277]
[173.40908813 -190.34162903]
[179.87390137 -186.26596069]
[190.86967468 -196.46855164]
[201.86546326 -206.67114258]
[212.86123657 -216.87373352]
[223.85700989 -227.07632446]
[234.85279846 -237.27891541]
[245.84857178 -247.48150635]
[239.89759827 -264.79577637]
[252.86227417 -285.15695190]
[261.46591187 -297.44424438]
[270.06958008 -309.73150635]
[270.95904541 -326.10650635]
[285.70535278 -333.28137207]
[299.13873291 -323.87521362]
[297.44009399 -307.56427002]
[282.35684204 -301.12786865]
[273.75320435 -288.84057617]
[265.14956665 -276.55331421]
[270.45285034 -271.25000000]
[286.36276245 -255.34010315]
[298.65002441 -263.94375610]
[310.93731689 -272.54739380]
[323.22460938 -281.15103149]
[335.51187134 -289.75469971]
[347.79916382 -298.35833740]
[354.23556519 -313.44158936]
[370.54650879 -315.14022827]
[379.95266724 -301.70681763]
[372.77780151 -286.96054077]
[356.40280151 -286.07104492]
[344.11553955 -277.46740723]
[331.82824707 -268.86376953]
[319.54095459 -260.26010132]
[307.25369263 -251.65646362]
[294.96640015 -243.05282593]
[273.74655151 -229.65661621]
[256.05114746 -236.48573303]
[245.05538940 -226.28312683]
[234.05960083 -216.08053589]
[223.06382751 -205.87794495]
[212.06805420 -195.67535400]
[201.07226562 -185.47276306]
[190.07649231 -175.27017212]
[197.20951843 -153.71377563]
[192.55635071 -131.40496826]
[177.28973389 -114.37396240]
[155.46272278 -107.26689911]
[153.59756470 -92.38330841]
[151.73240662 -77.49972534]
[149.86724854 -62.61613464]
[148.00209045 -47.73254776]
[146.13693237 -32.84896088]
[144.27178955 -17.96537209]
[142.40663147 -3.08178353]
[149.57405090 6.64207888]
[148.15959167 19.04206467]
[138.37895203 27.42391586]
[136.32839966 42.28309631]
[134.27783203 57.14227676]
[132.22727966 72.00145721]
[130.17672729 86.86063385]
[132.87347412 101.61622620]
[140.04728699 114.78955078]
[147.22109985 127.96287537]
[154.39491272 141.13619995]
[161.56872559 154.30952454]
[168.74252319 167.48284912]
[175.91633606 180.65617371]
[183.09014893 193.82949829]
[192.58175659 200.00936890]
[194.08219910 209.95185852]
[203.72401428 221.44253540]
[213.36582947 232.93319702]
[223.07907104 244.36354065]
[232.86338806 255.73310852]
[242.64768982 267.10269165]
[257.51403809 272.51589966]
[259.95120239 287.20974731]
[269.73553467 298.57931519]
[279.51983643 309.94888306]
[289.30413818 321.31848145]
[304.38015747 318.38427734]
[318.89822388 323.39636230]
[328.95309448 335.00650024]
[331.84002686 350.09164429]
[326.78244019 364.59393311]
[315.14083862 374.61233521]
[300.04672241 377.45196533]
[285.56036377 372.34896851]
[275.57849121 360.67602539]
[272.78619385 345.57308960]
[277.93457031 331.10278320]
[268.15026855 319.73321533]
[258.36593628 308.36361694]
[248.58163452 296.99404907]
[234.41514587 292.39407349]
[231.27812195 276.88699341]
[221.49380493 265.51742554]
[211.70950317 254.14784241]
[204.98220825 251.13598633]
[201.87515259 242.57501221]
[192.23333740 231.08433533]
[182.59152222 219.59367371]
[185.49011230 234.31095886]
[183.58106995 249.18898010]
[177.06072998 262.69769287]
[166.59962463 273.44781494]
[153.27362061 280.33386230]
[138.45314026 282.64761353]
[123.66234589 280.15112305]
[110.42232513 273.10116577]
[100.09469604 262.22274780]
[93.74155426 248.63461304]
[92.01626587 233.73416138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[15 47]
[16 46]
[17 45]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[65 198]
[66 197]
[67 196]
[68 195]
[69 194]
[71 191]
[72 190]
[73 189]
[74 188]
[75 187]
[76 186]
[77 185]
[78 184]
[87 133]
[88 132]
[89 131]
[92 128]
[93 127]
[94 126]
[95 125]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 113]
[105 112]
[138 180]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[146 155]
[147 154]
[148 153]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
[208 240]
[209 239]
[210 238]
[211 236]
[212 235]
[213 234]
[215 232]
[216 231]
[217 230]
[218 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
