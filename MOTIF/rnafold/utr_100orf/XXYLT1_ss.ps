%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCAUGGCCGCCGCCUGGCGCCGGGGCUAAGUGGCCGCCGGCGUCCGGGUACCCGAGGGCUCUCCCGCGUUGCUGGCACCGCUGGCGCCGCGGUCUCGUAGCGCAUGGGCCUCCUCCGAGGCGGGCUCCCAUGCGCUCGGGCCAUGGCGCGCCUGGGCGCUGUGCGCUCCCACUACUGCGCCCUGCUGCUGGCCGCGGCGCUGG\
) } def
/len { sequence length } bind def

/coor [
[86.63339233 837.54235840]
[73.44812775 845.72332764]
[57.97485352 844.55822754]
[46.16336823 834.49499512]
[42.55542374 819.40319824]
[48.53834915 805.08593750]
[61.81158447 797.04846191]
[62.93789291 782.09082031]
[53.06189346 771.00024414]
[53.99105072 755.81506348]
[65.69080353 745.53137207]
[66.81710815 730.57373047]
[67.94341278 715.61608887]
[69.06971741 700.65838623]
[70.19602203 685.70074463]
[63.43621445 672.42846680]
[72.18788147 659.24822998]
[73.31419373 644.29052734]
[74.44049835 629.33288574]
[71.80766296 622.42584229]
[75.69780731 614.15942383]
[77.04881287 599.22039795]
[78.39981842 584.28137207]
[79.75082397 569.34234619]
[73.19127655 555.96990967]
[82.14006805 542.92266846]
[83.49107361 527.98364258]
[84.84207916 513.04461670]
[86.19308472 498.10559082]
[87.54409027 483.16653442]
[88.89509583 468.22750854]
[90.13378906 453.27874756]
[91.26009369 438.32110596]
[92.16144562 423.34820557]
[92.83763123 408.36343384]
[93.51382446 393.37869263]
[94.19001007 378.39395142]
[94.86620331 363.40917969]
[84.73018646 346.94366455]
[95.84188843 330.12548828]
[96.06735229 315.12716675]
[96.29281616 300.12887573]
[96.40554810 285.12930298]
[96.40554810 270.12930298]
[96.40554810 255.12928772]
[96.40554810 240.12928772]
[96.40554810 225.12928772]
[96.40554810 210.12928772]
[96.40554810 195.12928772]
[96.40554810 180.12928772]
[96.40554810 165.12928772]
[96.40554810 150.12928772]
[96.40554810 135.12928772]
[96.40554810 120.12928772]
[91.25652313 134.21784973]
[77.98940277 141.21665955]
[63.45402527 137.51223755]
[55.15504456 125.01715851]
[57.37723541 110.18267822]
[68.97328186 100.66786194]
[83.95800018 101.38606262]
[70.13238525 95.56778717]
[56.30676651 89.74951172]
[40.11256790 92.33407593]
[29.98865318 79.43297577]
[36.34963608 64.31775665]
[52.65188599 62.53765869]
[62.12504196 75.92389679]
[75.95066071 81.74217224]
[89.77627563 87.56044769]
[98.16831970 75.12768555]
[87.60165405 64.48130035]
[77.03498077 53.83491898]
[61.82190704 49.49061966]
[58.34786987 35.00682449]
[47.78120041 24.36043930]
[31.82351303 20.58099365]
[27.37760544 4.79600191]
[39.01704788 -6.75628805]
[54.76818085 -2.19187164]
[58.42758560 13.79377079]
[68.99425507 24.44015694]
[83.45153046 28.02295303]
[87.68136597 43.26824951]
[98.24803925 53.91463470]
[108.81470490 64.56101990]
[116.24617767 63.54948044]
[131.10913086 61.52640915]
[138.54060364 60.51486969]
[145.87728882 47.43156433]
[153.21398926 34.34825897]
[160.55068970 21.26495171]
[167.88737488 8.18164444]
[175.22407532 -4.90166235]
[175.22528076 -20.72286797]
[188.19898987 -28.03944206]
[195.53569031 -41.12274933]
[202.87237549 -54.20605469]
[210.20907593 -67.28936005]
[211.67735291 -76.30662537]
[217.75564575 -80.51298523]
[225.28816223 -93.48453522]
[226.89181519 -102.47871399]
[233.03265381 -106.59323120]
[240.75929260 -119.45009613]
[248.48594666 -132.30696106]
[256.21258545 -145.16381836]
[263.93923950 -158.02069092]
[271.66586304 -170.87754822]
[279.39251709 -183.73442078]
[287.11917114 -196.59127808]
[294.84582520 -209.44815063]
[302.37832642 -222.41969299]
[309.71502686 -235.50300598]
[317.05172729 -248.58630371]
[324.38842773 -261.66961670]
[331.62658691 -274.80770874]
[338.76577759 -287.99978638]
[345.90499878 -301.19189453]
[348.12597656 -317.99975586]
[364.89181519 -320.51843262]
[371.95327759 -305.10507202]
[359.09710693 -294.05270386]
[351.95788574 -280.86059570]
[344.81866455 -267.66848755]
[344.39974976 -260.28854370]
[337.47171021 -254.33291626]
[330.13504028 -241.24961853]
[322.79833984 -228.16630554]
[315.46163940 -215.08300781]
[315.87063599 -210.32324219]
[313.29287720 -205.25625610]
[307.70266724 -201.72149658]
[299.97604370 -188.86463928]
[292.24938965 -176.00776672]
[284.52273560 -163.15090942]
[276.79608154 -150.29403687]
[269.06945801 -137.43717957]
[261.34280396 -124.58031464]
[253.61616516 -111.72344971]
[245.88951111 -98.86658478]
[238.25971985 -85.95201111]
[230.72720337 -72.98046112]
[223.29237366 -59.95266724]
[215.95568848 -46.86936188]
[208.61898804 -33.78605270]
[201.28230286 -20.70274734]
[201.80584717 -5.81734610]
[188.30737305 2.43503213]
[180.97068787 15.51833916]
[173.63398743 28.60164452]
[166.29728699 41.68495178]
[158.96060181 54.76825714]
[151.62390137 67.85156250]
[111.40554810 120.12928772]
[111.40554810 135.12928772]
[111.40554810 150.12928772]
[111.40554810 165.12928772]
[111.40554810 180.12928772]
[111.40554810 195.12928772]
[111.40554810 210.12928772]
[111.40554810 225.12928772]
[111.40554810 240.12928772]
[111.40554810 255.12928772]
[111.40554810 270.12930298]
[111.40554810 285.12930298]
[114.53535461 293.71249390]
[111.29112244 300.35433960]
[111.06565857 315.35263062]
[110.84019470 330.35095215]
[118.85472107 337.70745850]
[121.44335938 348.04769897]
[117.98545837 357.89816284]
[109.85095215 364.08538818]
[109.17476654 379.07012939]
[108.49857330 394.05487061]
[107.82238007 409.03964233]
[107.14619446 424.02438354]
[109.84748077 430.06158447]
[109.19167328 435.70864868]
[106.21775055 439.44738770]
[105.09144592 454.40505981]
[107.56792450 463.19903564]
[103.83413696 469.57852173]
[102.48313141 484.51754761]
[101.13212585 499.45660400]
[99.78112030 514.39562988]
[98.43010712 529.33465576]
[97.07910156 544.27368164]
[103.54201508 558.71466064]
[94.68985748 570.69329834]
[93.33885193 585.63238525]
[91.98784637 600.57141113]
[90.63684082 615.51043701]
[89.39814758 630.45922852]
[88.27184296 645.41687012]
[87.14553833 660.37451172]
[93.82478333 674.71667480]
[85.15367126 686.82708740]
[84.02736664 701.78472900]
[82.90106201 716.74237061]
[81.77475739 731.70001221]
[80.64845276 746.65771484]
[90.67630005 758.57739258]
[89.32099152 773.73059082]
[77.89554596 783.21710205]
[76.76924133 798.17480469]
[88.68920135 808.10925293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[17 197]
[18 196]
[19 195]
[21 194]
[22 193]
[23 192]
[24 191]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 182]
[33 181]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[40 170]
[41 169]
[42 168]
[43 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[61 70]
[62 69]
[63 68]
[71 86]
[72 85]
[73 84]
[75 82]
[76 81]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[96 147]
[97 146]
[98 145]
[99 144]
[101 143]
[102 142]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[113 130]
[114 129]
[115 128]
[116 127]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
