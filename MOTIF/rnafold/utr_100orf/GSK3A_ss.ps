%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAGCCAGAGCGGCGCGGCCUGGAAGAGGCCAGGGCCCGGGGGAGGCGGCGGCAGCGGCGGCGGCUGGGGCAGCCCGGGCAGCCCGAGCCCCGCAGCCUGGGCCUGUGCUCGGCGCCAUGAGCGGCGGCGGGCCUUCGGGAGGCGGCCCUGGGGGCUCGGGCAGGGCGCGGACUAGCUCGUUCGCGGAGCCCGGCGGCGGAGGCGGAGGAGGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[115.68783569 345.23513794]
[113.97796631 330.33291626]
[100.93942261 323.18206787]
[94.53599548 309.56372070]
[97.41304779 294.61123657]
[108.67305756 284.09848022]
[106.96318817 269.19625854]
[105.25331116 254.29402161]
[94.99993896 249.30828857]
[88.35529327 239.89636230]
[87.06284332 228.32740784]
[91.55821228 217.45971680]
[100.83258057 210.03448486]
[99.54895782 195.08950806]
[90.75090027 183.07104492]
[97.27886963 168.65937805]
[95.99524689 153.71440125]
[94.71161652 138.76942444]
[80.51341248 133.93093872]
[70.37078857 144.98205566]
[60.22816849 156.03317261]
[50.08554459 167.08428955]
[39.94292068 178.13540649]
[39.19067764 194.16081238]
[26.10856056 203.44723511]
[10.73205185 198.87094116]
[4.85669231 183.94244385]
[12.98955536 170.11363220]
[28.89180374 167.99278259]
[39.03442764 156.94166565]
[49.17705154 145.89054871]
[59.31967545 134.83943176]
[69.46229553 123.78830719]
[67.83253479 118.53230286]
[67.04384613 113.29924011]
[67.05652618 108.21700287]
[67.81217957 103.40267181]
[52.93588638 101.48017883]
[38.05959702 99.55768585]
[23.18330574 97.63519287]
[8.30701447 95.71269989]
[-6.56927633 93.79020691]
[-21.44556618 91.86771393]
[-29.26117706 100.81557465]
[-40.31142426 104.84139252]
[-51.81441498 103.05466461]
[-60.93313980 96.01303101]
[-65.47517395 85.55554199]
[-80.29049683 83.20903015]
[-92.99083710 92.22784424]
[-107.98226166 89.63709259]
[-116.50205994 77.47367859]
[-131.31738281 75.12715912]
[-146.13270569 72.78064728]
[-160.94802856 70.43412781]
[-175.78868103 75.91734314]
[-187.14888000 66.28432465]
[-201.96420288 63.93780518]
[-217.07188416 70.31668091]
[-229.98495483 60.20804596]
[-227.41957092 44.01079941]
[-212.01477051 38.38727951]
[-199.61769104 49.12247849]
[-184.80236816 51.46899796]
[-171.02140808 45.81793976]
[-158.60151672 55.61880493]
[-143.78619385 57.96532059]
[-128.97087097 60.31183624]
[-114.15554047 62.65835571]
[-102.29402924 53.72302246]
[-87.23575592 55.89167404]
[-77.94398499 68.39369965]
[-63.12865448 70.74021912]
[-48.98660660 59.10864258]
[-30.51756668 61.55668640]
[-19.52307320 76.99142456]
[-4.64678335 78.91391754]
[10.22950745 80.83641052]
[25.10579872 82.75890350]
[39.98209000 84.68139648]
[54.85837936 86.60388947]
[69.73467255 88.52638245]
[83.88317108 71.93076324]
[105.34822845 68.07774353]
[111.18727875 54.26088715]
[117.02633667 40.44403076]
[122.86538696 26.62717628]
[128.70443726 12.81032276]
[134.54348755 -1.00653243]
[140.38253784 -14.82338715]
[146.22158813 -28.64024162]
[152.06063843 -42.45709610]
[157.89968872 -56.27395248]
[163.73873901 -70.09080505]
[169.18086243 -84.06876373]
[174.22160339 -98.19643402]
[171.57180786 -113.79415894]
[183.13613892 -123.18115997]
[188.17687988 -137.30882263]
[193.21762085 -151.43649292]
[198.25836182 -165.56414795]
[197.32064819 -170.68563843]
[198.33560181 -175.20477295]
[200.74819946 -178.47967529]
[203.82937622 -180.18103027]
[209.47053528 -194.07984924]
[215.11169434 -207.97868347]
[220.75285339 -221.87750244]
[217.08645630 -241.70411682]
[232.85656738 -252.89959717]
[238.09852600 -266.95385742]
[243.34049988 -281.00808716]
[248.58245850 -295.06234741]
[253.82441711 -309.11657715]
[251.39762878 -324.75054932]
[263.09481812 -333.97146606]
[268.33676147 -348.02572632]
[273.57873535 -362.07995605]
[278.82070923 -376.13421631]
[272.02819824 -390.40435791]
[277.39437866 -405.26974487]
[291.73553467 -411.91101074]
[306.54336548 -406.38796997]
[313.03262329 -391.97738647]
[307.35333252 -377.22875977]
[292.87493896 -370.89224243]
[287.63299561 -356.83801270]
[282.39102173 -342.78375244]
[277.14904785 -328.72949219]
[279.95080566 -314.10076904]
[267.87866211 -303.87463379]
[262.63668823 -289.82037354]
[257.39474487 -275.76614380]
[252.15277100 -261.71188354]
[246.91081238 -247.65763855]
[251.97143555 -238.78988647]
[251.30516052 -228.38157654]
[244.89100647 -219.88085938]
[234.65167236 -216.23634338]
[229.01051331 -202.33752441]
[223.36935425 -188.43869019]
[217.72819519 -174.53987122]
[212.38601685 -160.52340698]
[207.34527588 -146.39575195]
[202.30453491 -132.26808167]
[197.26379395 -118.14041901]
[200.27413940 -103.55319214]
[188.34927368 -93.15569305]
[183.30853271 -79.02802277]
[184.38021851 -76.44455719]
[184.49659729 -73.28227234]
[183.43261719 -69.90165710]
[181.09727478 -66.73776245]
[177.55560303 -64.25175476]
[171.71655273 -50.43489838]
[165.87750244 -36.61804581]
[160.03845215 -22.80119133]
[154.19938660 -8.98433590]
[148.36033630 4.83251905]
[142.52128601 18.64937401]
[136.68223572 32.46622849]
[130.84318542 46.28308487]
[125.00413513 60.09993744]
[119.16508484 73.91679382]
[130.16180420 88.25693512]
[131.75651550 106.25762177]
[145.40100098 112.48884583]
[159.04547119 118.72006989]
[172.68995667 124.95130157]
[186.46476746 130.88885498]
[200.36358643 136.53001404]
[214.26242065 142.17117310]
[228.16123962 147.81233215]
[242.06007385 153.45349121]
[255.95889282 159.09465027]
[270.41720581 152.71241760]
[285.12329102 158.50090027]
[291.35229492 173.02587891]
[285.40866089 187.66993713]
[270.81863403 193.74504089]
[256.23822021 187.64691162]
[250.31773376 172.99346924]
[236.41891479 167.35231018]
[222.52008057 161.71115112]
[208.62126160 156.06999207]
[194.72242737 150.42883301]
[180.82360840 144.78767395]
[177.45613098 145.81153870]
[173.42614746 145.25929260]
[169.47799683 142.83760071]
[166.45872498 138.59577942]
[152.81425476 132.36454773]
[139.16976929 126.13333130]
[125.52529144 119.90209961]
[119.48601532 129.71990967]
[109.65659332 137.48579407]
[110.94022369 152.43077087]
[112.22384644 167.37574768]
[121.11371613 180.46318054]
[114.49393463 193.80587769]
[115.77755737 208.75085449]
[130.72727966 220.39628601]
[132.38209534 238.95321655]
[120.15554047 252.58415222]
[121.86540985 267.48638916]
[123.57527924 282.38861084]
[136.92376709 290.07781982]
[143.11273193 303.99005127]
[139.96023560 318.70486450]
[128.88018799 328.62304688]
[130.59005737 343.52526855]
[144.47961426 350.23971558]
[152.51464844 363.40945435]
[152.13121033 378.83206177]
[143.45166016 391.58621216]
[129.24560547 397.60214233]
[114.04613495 394.96020508]
[102.70336914 384.50335693]
[98.83673096 369.56842041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[6 206]
[7 205]
[8 204]
[13 201]
[14 200]
[16 198]
[17 197]
[18 196]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[48 73]
[49 72]
[52 69]
[53 68]
[54 67]
[55 66]
[57 64]
[58 63]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 149]
[96 148]
[98 146]
[99 145]
[100 144]
[101 143]
[105 142]
[106 141]
[107 140]
[108 139]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[116 129]
[117 128]
[118 127]
[119 126]
[166 194]
[167 193]
[168 192]
[169 191]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
