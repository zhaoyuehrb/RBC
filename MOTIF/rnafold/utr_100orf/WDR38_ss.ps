%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGAUUACCAUGGAGACCGCCUGUACACAGUUUCCUCUUUCCUCUGCCCAGUCCUGGGGUCCCGCGGCCGCCUAGGAGGGAGCCCGCCGGGGCGGGGCGGGGCCGGGUGCCCAUGAACAGCGGGGUCCCGGCCACGCUGGCCGUGCGGAGAGUGAAAUUCUUCGGCCAGCACGGCGGGGAGGUCAACUCUUCUGCCUUCUCCCCUGAUGGCC\
) } def
/len { sequence length } bind def

/coor [
[373.94793701 198.67749023]
[359.70928955 193.95932007]
[345.47064209 189.24114990]
[331.23202515 184.52297974]
[316.99337769 179.80480957]
[302.75473022 175.08663940]
[292.45989990 185.87933350]
[278.44238281 191.15362549]
[263.46359253 189.81327820]
[250.49925232 182.07078552]
[242.14823914 169.41584778]
[240.11163330 154.32897949]
[225.87300110 149.61080933]
[211.63435364 144.89263916]
[197.39572144 140.17446899]
[183.15707397 135.45628357]
[170.00347900 142.34965515]
[155.49626160 137.76759338]
[148.35505676 123.92415619]
[134.11640930 119.20598602]
[119.87777710 114.48781586]
[113.64794159 128.58485413]
[98.06014252 138.70593262]
[76.21573639 139.17892456]
[65.15657806 149.31277466]
[54.09741974 159.44662476]
[49.68482590 175.24096680]
[33.73514938 179.05407715]
[22.65604591 166.96334839]
[27.84474945 151.40670776]
[43.96356583 148.38746643]
[55.02272797 138.25361633]
[66.08188629 128.11976624]
[63.51673508 121.07206726]
[49.42134476 126.20236969]
[35.32595825 131.33267212]
[21.23056793 136.46296692]
[7.13517809 141.59327698]
[-6.96021128 146.72357178]
[-21.05560112 151.85388184]
[-32.87577820 161.08879089]
[-45.31131363 152.70085144]
[-41.17668152 138.28195190]
[-26.18590355 137.75849915]
[-12.09051323 132.62818909]
[2.00487590 127.49788666]
[16.10026550 122.36758423]
[30.19565392 117.23728180]
[44.29104233 112.10697937]
[58.38643265 106.97667694]
[55.82128143 99.92898560]
[40.83555984 99.27469635]
[25.84983635 98.62039948]
[11.56137943 106.66851044]
[-2.41302085 98.08666229]
[-1.69770002 81.70311737]
[12.97148132 74.37187195]
[26.50412560 83.63468170]
[41.48984909 84.28897095]
[56.47557449 84.94326019]
[63.10990143 71.49017334]
[53.46809006 59.99950409]
[43.82627487 48.50883484]
[34.18445969 37.01816940]
[24.54264641 25.52750206]
[14.90083218 14.03683662]
[5.25901842 2.54616976]
[-4.38279581 -8.94449711]
[-17.13796234 -10.84318733]
[-24.93219566 -20.60911942]
[-24.01463509 -32.66845322]
[-33.48831177 -44.29813385]
[-42.96198654 -55.92781448]
[-52.43566132 -67.55749512]
[-61.90933609 -79.18717957]
[-71.38301086 -90.81685638]
[-86.09772491 -96.62958527]
[-88.13716888 -111.38390350]
[-97.61084747 -123.01358795]
[-112.32556152 -128.82630920]
[-114.36500549 -143.58062744]
[-123.83868408 -155.21031189]
[-139.34973145 -160.53379822]
[-142.22898865 -176.67820740]
[-129.51454163 -187.03555298]
[-114.28589630 -180.95109558]
[-112.20899963 -164.68399048]
[-102.73532867 -153.05430603]
[-88.69823456 -148.07341003]
[-85.98116302 -132.48725891]
[-76.50749207 -120.85758209]
[-62.47039795 -115.87668610]
[-59.75333023 -100.29053497]
[-50.27965546 -88.66085052]
[-40.80598068 -77.03117371]
[-31.33230400 -65.40148926]
[-21.85862923 -53.77180862]
[-12.38495445 -42.14212799]
[4.33013058 -36.79151917]
[7.10787106 -18.58631134]
[16.74968529 -7.09564447]
[26.39149857 4.39502239]
[36.03331375 15.88568878]
[45.67512894 27.37635612]
[55.31694031 38.86702347]
[64.95875549 50.35768890]
[74.60057068 61.84835434]
[116.78345490 69.04155731]
[124.59594727 100.24917603]
[138.83457947 104.96734619]
[153.07322693 109.68551636]
[167.06808472 102.84580994]
[181.44088745 107.83354187]
[187.87524414 121.21765137]
[202.11389160 125.93582153]
[216.35252380 130.65399170]
[230.59117126 135.37216187]
[244.82980347 140.09033203]
[255.47267151 129.20498657]
[269.72821045 124.04103088]
[284.75070190 125.57236481]
[297.56594849 133.44195557]
[305.66012573 146.04328918]
[307.47290039 160.84799194]
[321.71154785 165.56616211]
[335.95019531 170.28434753]
[350.18881226 175.00251770]
[364.42745972 179.72068787]
[378.66610718 184.43885803]
[388.08343506 179.00570679]
[398.71740723 179.63717651]
[407.07373047 185.88404846]
[410.53948975 195.49171448]
[424.63488770 200.62202454]
[438.73028564 205.75231934]
[452.82568359 210.88262939]
[466.92105103 216.01292419]
[476.43066406 180.32722473]
[527.69494629 165.68142700]
[542.46704102 163.07670593]
[557.23919678 160.47198486]
[572.01129150 157.86726379]
[586.78338623 155.26254272]
[601.55554199 152.65782166]
[616.32763672 150.05310059]
[631.09979248 147.44837952]
[634.31866455 144.54684448]
[637.92987061 142.97618103]
[641.46746826 142.69648743]
[644.52636719 143.52085876]
[646.80474854 145.14793396]
[661.70330811 143.40653992]
[676.60186768 141.66514587]
[691.50042725 139.92375183]
[706.39904785 138.18235779]
[721.29760742 136.44096375]
[736.32769775 128.59669495]
[748.02612305 140.86790466]
[739.47296143 155.50619507]
[723.03900146 151.33953857]
[708.14044189 153.08093262]
[693.24182129 154.82232666]
[678.34326172 156.56372070]
[663.44470215 158.30511475]
[648.54614258 160.04650879]
[633.70446777 162.22048950]
[618.93237305 164.82521057]
[604.16027832 167.42993164]
[589.38812256 170.03465271]
[574.61602783 172.63937378]
[559.84393311 175.24409485]
[545.07177734 177.84883118]
[530.29968262 180.45355225]
[528.20092773 187.65391541]
[524.00354004 202.05467224]
[521.90478516 209.25503540]
[532.96398926 219.38890076]
[544.02313232 229.52275085]
[555.08227539 239.65660095]
[566.14141846 249.79045105]
[577.20062256 259.92431641]
[588.33319092 269.97747803]
[599.53851318 279.94940186]
[610.74389648 289.92135620]
[626.77899170 290.42770386]
[636.26495361 303.36587524]
[631.92504883 318.81076050]
[617.08837891 324.91439819]
[603.13647461 316.99456787]
[600.77197266 301.12670898]
[589.56658936 291.15478516]
[578.36120605 281.18283081]
[571.27746582 279.08514404]
[567.06677246 270.98345947]
[556.00756836 260.84960938]
[544.94842529 250.71575928]
[533.88928223 240.58190918]
[522.83013916 230.44805908]
[511.77096558 220.31420898]
[499.11950684 228.37406921]
[486.46920776 236.43319702]
[490.97979736 250.73895264]
[505.11233521 257.81332397]
[510.02386475 272.83505249]
[502.80047607 286.89199829]
[487.72766113 291.64443970]
[473.74786377 284.27282715]
[469.15502930 269.15060425]
[476.67404175 255.24952698]
[472.16345215 240.94377136]
[461.79077148 230.10832214]
[447.69537354 224.97801208]
[433.59997559 219.84771729]
[419.50457764 214.71740723]
[405.40921021 209.58711243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[12 118]
[13 117]
[14 116]
[15 115]
[16 114]
[19 111]
[20 110]
[21 109]
[24 33]
[25 32]
[26 31]
[51 60]
[52 59]
[53 58]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[78 91]
[79 90]
[81 88]
[82 87]
[133 215]
[134 214]
[135 213]
[136 212]
[137 211]
[139 173]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 192]
[183 191]
[184 190]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
