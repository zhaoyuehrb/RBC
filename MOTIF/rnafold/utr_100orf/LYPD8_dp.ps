%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LYPD8)
} def

/sequence { (\
GACAUUGAGUCUAAGAGUCUCGUGCUGAAAGGCUGUUCCAACGUCAGUAACGCCACCUGUCAGUUCCUGUCUGGUGAAAACAAGACUCUUGGAGGAGUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.016207660 ubox
1 19 0.004066448 ubox
1 99 0.980269454 ubox
2 10 0.018966419 ubox
2 18 0.004074053 ubox
2 98 0.980758411 ubox
3 9 0.021312259 ubox
3 17 0.004069797 ubox
3 24 0.019024513 ubox
3 27 0.004745911 ubox
3 97 0.978123478 ubox
4 10 0.003648926 ubox
4 23 0.018905055 ubox
4 26 0.004621087 ubox
4 98 0.066029564 ubox
5 9 0.004554635 ubox
5 22 0.013718782 ubox
5 93 0.005123092 ubox
5 94 0.079272456 ubox
5 95 0.465547286 ubox
5 96 0.577177302 ubox
5 97 0.073160870 ubox
6 22 0.015823555 ubox
6 93 0.026812745 ubox
6 94 0.452195266 ubox
6 95 0.545862459 ubox
6 96 0.141818650 ubox
6 100 0.101897458 ubox
7 19 0.005983493 ubox
7 21 0.022101994 ubox
7 99 0.129459401 ubox
8 18 0.005972636 ubox
8 20 0.022115038 ubox
8 98 0.126619230 ubox
9 19 0.022090757 ubox
10 16 0.006161580 ubox
10 92 0.014717139 ubox
10 93 0.976613005 ubox
10 95 0.007466775 ubox
10 96 0.113680621 ubox
11 15 0.006147852 ubox
11 17 0.021360500 ubox
11 91 0.015949477 ubox
11 92 0.993610563 ubox
11 94 0.009919669 ubox
11 95 0.105609650 ubox
12 16 0.019266996 ubox
12 91 0.994830539 ubox
12 93 0.010532038 ubox
12 94 0.089618764 ubox
13 90 0.998329765 ubox
14 89 0.999104725 ubox
14 90 0.003331527 ubox
15 88 0.999694569 ubox
16 26 0.003256496 ubox
16 87 0.999561810 ubox
17 25 0.003297764 ubox
17 86 0.999688845 ubox
18 24 0.003198146 ubox
18 85 0.999551255 ubox
19 84 0.999421698 ubox
20 28 0.008731657 ubox
20 77 0.005218862 ubox
20 83 0.954010318 ubox
21 27 0.012058289 ubox
21 31 0.006043233 ubox
21 35 0.025034959 ubox
21 43 0.012979962 ubox
21 52 0.789960520 ubox
21 69 0.010277229 ubox
21 76 0.005576274 ubox
22 26 0.007467887 ubox
22 33 0.007932643 ubox
22 34 0.024190175 ubox
22 36 0.003206034 ubox
22 42 0.013587426 ubox
22 51 0.829294890 ubox
22 53 0.076854714 ubox
22 56 0.003915541 ubox
22 68 0.009551795 ubox
22 75 0.003594076 ubox
22 81 0.467685142 ubox
23 32 0.007893041 ubox
23 35 0.003419586 ubox
23 41 0.013378044 ubox
23 49 0.653108092 ubox
23 50 0.594036485 ubox
23 52 0.073271571 ubox
23 55 0.003927345 ubox
23 80 0.417243703 ubox
23 82 0.024161039 ubox
24 33 0.183294580 ubox
24 36 0.006584824 ubox
24 39 0.004198404 ubox
24 48 0.944636142 ubox
24 51 0.052161386 ubox
24 53 0.060446448 ubox
24 54 0.003940596 ubox
24 64 0.142663179 ubox
24 75 0.010331447 ubox
24 81 0.024346311 ubox
25 31 0.026158827 ubox
25 32 0.183793527 ubox
25 35 0.006918214 ubox
25 47 0.963334482 ubox
25 52 0.060091343 ubox
25 63 0.151880826 ubox
25 74 0.010353015 ubox
26 30 0.023894147 ubox
26 31 0.179092667 ubox
26 40 0.008249363 ubox
26 46 0.963253858 ubox
26 49 0.011170396 ubox
26 52 0.015247463 ubox
26 62 0.151964909 ubox
26 73 0.009721335 ubox
26 82 0.005203338 ubox
27 38 0.019225329 ubox
27 39 0.008192217 ubox
27 42 0.003349780 ubox
27 45 0.962675833 ubox
27 48 0.009484444 ubox
27 51 0.038829754 ubox
27 61 0.152003213 ubox
27 71 0.009329710 ubox
27 81 0.005205196 ubox
28 37 0.019948322 ubox
28 44 0.953037383 ubox
28 60 0.145019217 ubox
28 70 0.008923604 ubox
29 36 0.019611935 ubox
29 37 0.032600632 ubox
30 36 0.032283031 ubox
30 37 0.012249509 ubox
30 58 0.137081781 ubox
30 68 0.009561448 ubox
30 72 0.004110435 ubox
31 36 0.015145562 ubox
31 37 0.013223378 ubox
31 38 0.137816788 ubox
31 39 0.877159961 ubox
31 45 0.051710852 ubox
31 54 0.065397632 ubox
31 57 0.140912391 ubox
31 58 0.004613656 ubox
31 67 0.009798730 ubox
31 71 0.004153285 ubox
31 99 0.022751815 ubox
32 36 0.010552222 ubox
32 37 0.098585330 ubox
32 38 0.872002850 ubox
32 44 0.080602609 ubox
32 48 0.098754652 ubox
32 53 0.069222939 ubox
32 56 0.140418172 ubox
32 57 0.004603909 ubox
32 64 0.004155724 ubox
32 66 0.009255474 ubox
32 70 0.004123337 ubox
32 98 0.022871523 ubox
33 43 0.098746135 ubox
33 47 0.102919671 ubox
33 52 0.068087309 ubox
33 63 0.009729423 ubox
33 69 0.004102254 ubox
33 97 0.022891597 ubox
34 40 0.131140329 ubox
34 43 0.220867880 ubox
34 46 0.104476544 ubox
34 49 0.003795665 ubox
34 52 0.103545616 ubox
34 55 0.080846902 ubox
34 62 0.009822450 ubox
34 82 0.015843587 ubox
34 96 0.022884667 ubox
35 39 0.134158994 ubox
35 42 0.240026632 ubox
35 45 0.104544880 ubox
35 48 0.003807361 ubox
35 51 0.138793368 ubox
35 53 0.076767148 ubox
35 54 0.079801635 ubox
35 61 0.009808195 ubox
35 81 0.017120058 ubox
36 41 0.222256921 ubox
36 43 0.024799124 ubox
36 47 0.004224454 ubox
36 50 0.138504875 ubox
36 52 0.076107677 ubox
36 59 0.003252046 ubox
36 78 0.004360575 ubox
36 80 0.016913379 ubox
36 94 0.022688465 ubox
37 46 0.005147802 ubox
37 49 0.134143763 ubox
37 77 0.005101711 ubox
37 79 0.015432593 ubox
37 93 0.022911500 ubox
38 74 0.009615264 ubox
38 76 0.004798588 ubox
38 92 0.022926380 ubox
39 73 0.009700374 ubox
39 76 0.005995161 ubox
39 91 0.022925359 ubox
40 65 0.004229543 ubox
40 72 0.009406649 ubox
40 75 0.005364775 ubox
40 90 0.022781960 ubox
41 48 0.178217807 ubox
41 64 0.004524700 ubox
41 75 0.006775066 ubox
41 89 0.021278703 ubox
42 47 0.181707442 ubox
42 52 0.126745957 ubox
42 63 0.004545661 ubox
42 73 0.005999981 ubox
42 74 0.006984866 ubox
43 51 0.129899490 ubox
43 53 0.018931006 ubox
43 72 0.005816121 ubox
43 86 0.022493195 ubox
44 50 0.125329084 ubox
44 52 0.018551729 ubox
44 85 0.022551951 ubox
45 59 0.005355560 ubox
45 69 0.014322792 ubox
45 84 0.022507569 ubox
46 58 0.005373918 ubox
46 68 0.014376277 ubox
47 53 0.023357453 ubox
47 57 0.005063490 ubox
47 67 0.014353360 ubox
47 81 0.013891820 ubox
48 52 0.021964089 ubox
48 80 0.013493060 ubox
49 65 0.013409473 ubox
50 60 0.004635304 ubox
50 64 0.014522842 ubox
51 59 0.005090105 ubox
51 63 0.014534745 ubox
51 76 0.120309997 ubox
52 58 0.004144793 ubox
52 60 0.005280059 ubox
52 75 0.122424881 ubox
53 59 0.005792072 ubox
53 74 0.122943502 ubox
54 73 0.122919812 ubox
54 76 0.976906464 ubox
55 64 0.004206725 ubox
55 70 0.004702567 ubox
55 72 0.118818720 ubox
55 75 0.979539530 ubox
56 63 0.005222426 ubox
56 69 0.006477093 ubox
56 74 0.980029217 ubox
57 63 0.003590345 ubox
57 73 0.979374187 ubox
57 74 0.006066264 ubox
58 62 0.003311955 ubox
58 69 0.009647211 ubox
58 73 0.007784677 ubox
58 76 0.005326434 ubox
58 82 0.014930051 ubox
59 68 0.010814301 ubox
59 70 0.118118620 ubox
59 72 0.045084165 ubox
59 75 0.006255987 ubox
59 81 0.016134874 ubox
60 69 0.007474453 ubox
60 74 0.013924632 ubox
60 77 0.007061518 ubox
60 80 0.015455026 ubox
61 69 0.980509814 ubox
61 73 0.026767309 ubox
61 76 0.007741535 ubox
62 68 0.979279211 ubox
62 72 0.038573208 ubox
62 75 0.007621358 ubox
63 67 0.957902162 ubox
63 71 0.038878445 ubox
63 81 0.004072577 ubox
64 69 0.010922242 ubox
64 77 0.012881820 ubox
64 78 0.027141149 ubox
64 79 0.003418450 ubox
64 80 0.004070089 ubox
65 74 0.007463522 ubox
65 76 0.019586233 ubox
65 77 0.054664000 ubox
65 78 0.006322788 ubox
65 79 0.005232394 ubox
66 73 0.010352739 ubox
66 74 0.117841213 ubox
66 76 0.056240444 ubox
67 73 0.119097014 ubox
67 74 0.057036325 ubox
68 73 0.053405007 ubox
68 82 0.010265318 ubox
69 81 0.011092379 ubox
70 77 0.043513738 ubox
70 80 0.009709791 ubox
71 76 0.046616195 ubox
72 82 0.013381243 ubox
73 81 0.014271515 ubox
74 81 0.023332520 ubox
75 80 0.023641088 ubox
75 82 0.017425103 ubox
76 81 0.022384221 ubox
84 99 0.006594883 ubox
85 98 0.006602589 ubox
86 97 0.006604562 ubox
87 96 0.006613414 ubox
88 95 0.006609877 ubox
89 94 0.006111800 ubox
92 99 0.008181200 ubox
93 98 0.008093019 ubox
1 99 0.9500000 lbox
2 98 0.9500000 lbox
3 97 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
13 90 0.9500000 lbox
14 89 0.9500000 lbox
15 88 0.9500000 lbox
16 87 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
63 67 0.9500000 lbox
showpage
end
%%EOF
