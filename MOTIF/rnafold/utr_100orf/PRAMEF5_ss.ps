%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAAAGUCUUCAAGCCUGGAGUUCCUGCUUGGUUCUUCCUGAGGACUGAGCACCUUCUAGACUACAUCCAGAUCUGUUUUCCCUGCAGAUUCGUGAAGAUGAGCAUCCGGACUCCACCCAGACUCCUGGAGCUUGCAGGGCGGAGCCUGCUGAGGGACCAAGCCUUGGCCAUGUCCACCCUGGAGGAGCUGCCCACAG\
) } def
/len { sequence length } bind def

/coor [
[105.21135712 343.57217407]
[97.86142731 356.72796631]
[87.67523956 367.83374023]
[75.20211029 376.29055786]
[61.11470413 381.64236450]
[46.17273712 383.60052490]
[31.18201447 382.05944824]
[16.95096207 377.10223389]
[4.24704456 368.99624634]
[-6.24463177 358.17861938]
[-13.95826435 345.23269653]
[-18.47786713 330.85668945]
[-19.55970192 315.82583618]
[-17.14542770 300.95074463]
[-11.36524391 287.03363037]
[-2.53086877 274.82501221]
[8.88127232 264.98327637]
[22.25573540 258.03918457]
[36.87125397 254.36721802]
[51.93963242 254.16540527]
[55.19576263 239.52307129]
[58.33736801 224.85575867]
[61.36425018 210.16432190]
[64.39113617 195.47290039]
[67.41802216 180.78147888]
[70.44490814 166.09005737]
[73.47179413 151.39863586]
[76.49868011 136.70719910]
[65.44612122 126.56615448]
[51.06882858 130.84323120]
[36.69153595 135.12033081]
[22.31424522 139.39741516]
[7.93695259 143.67449951]
[-6.44033957 147.95158386]
[-20.81763268 152.22866821]
[-35.19492340 156.50575256]
[-49.57221603 160.78285217]
[-63.94950867 165.05993652]
[-78.32679749 169.33702087]
[-91.78433990 179.64871216]
[-105.41846466 169.57165527]
[-99.50952148 153.68075562]
[-82.60388947 154.95973206]
[-68.22659302 150.68263245]
[-53.84930420 146.40554810]
[-39.47201157 142.12846375]
[-25.09471893 137.85137939]
[-10.71742630 133.57429504]
[3.65986586 129.29721069]
[18.03715706 125.02011871]
[32.41445160 120.74303436]
[46.79174042 116.46594238]
[61.16903305 112.18885803]
[61.12705231 99.42155457]
[64.99123383 87.85531616]
[72.01405334 78.59444427]
[62.31250381 67.15416718]
[52.61095428 55.71389008]
[42.90940475 44.27361298]
[27.39972115 42.82881165]
[17.72394180 31.08854103]
[19.19691849 16.31133270]
[9.49536991 4.87105465]
[10.49981403 19.83738708]
[3.97981501 33.34626007]
[-8.36243057 41.87086868]
[-23.30469513 43.18567276]
[-36.94595718 36.94740677]
[-45.72485733 24.78471947]
[-47.34945297 9.87295723]
[-41.39561081 -3.89482307]
[-29.41771889 -12.92422485]
[-14.54287910 -14.85791492]
[-0.65414542 -9.19078350]
[-8.45661259 -22.00177574]
[-16.25907898 -34.81276703]
[-24.06154633 -47.62376022]
[-31.86401367 -60.43474960]
[-39.66648102 -73.24574280]
[-55.15211487 -75.42038727]
[-65.57849121 -87.07477570]
[-66.02259827 -102.70604706]
[-56.27473068 -114.93360901]
[-40.93754578 -117.98397064]
[-27.25278473 -110.41684723]
[-21.68197823 -95.80519867]
[-26.85548782 -81.04821014]
[-19.05302048 -68.23722076]
[-11.25055408 -55.42622757]
[-3.44808722 -42.61523438]
[4.35437965 -29.80424309]
[12.15684605 -16.99324989]
[20.93564796 -4.83049440]
[30.63719559 6.60978365]
[45.45650482 7.57085943]
[55.45822525 19.03472519]
[54.34968185 34.57206345]
[64.05123138 46.01234055]
[73.75277710 57.45261765]
[83.45433044 68.89289856]
[93.02036285 65.46457672]
[103.16696930 64.90895844]
[113.05014038 67.27226257]
[121.44451141 54.84106827]
[129.83888245 42.40987778]
[138.23326111 29.97868538]
[140.44509888 21.10755539]
[146.85723877 17.42020988]
[155.44487000 5.12173271]
[164.03250122 -7.17674351]
[172.52375793 -19.54195595]
[180.91813660 -31.97314644]
[189.31251526 -44.40433884]
[190.62316895 -60.17116165]
[204.15792847 -66.38885498]
[212.55229187 -78.82004547]
[209.29910278 -94.28588867]
[218.00460815 -107.47640991]
[233.50396729 -110.56590271]
[246.60171509 -101.72143555]
[249.52717590 -86.19026184]
[240.54472351 -73.18675995]
[224.98348999 -70.42567444]
[216.58911133 -57.99448395]
[215.87887573 -43.11682129]
[201.74369812 -36.00996780]
[193.34933472 -23.57877541]
[184.95495605 -11.14758396]
[183.81613159 -3.83902264]
[176.33097839 1.41089165]
[167.74334717 13.70936775]
[159.15571594 26.00784492]
[150.66444397 38.37305450]
[142.27008057 50.80424881]
[133.87570190 63.23543930]
[125.48133087 75.66663361]
[133.35273743 88.64192200]
[135.03625488 103.72446442]
[149.27284241 108.44881439]
[163.50944519 113.17317200]
[177.74603271 117.89752197]
[191.98262024 122.62187195]
[207.51736450 119.62481689]
[217.15997314 130.97686768]
[231.39656067 135.70123291]
[245.63314819 140.42558289]
[257.13153076 130.33923340]
[272.03628540 127.38203430]
[286.32507324 132.24996948]
[296.19274902 143.54090881]
[299.06460571 158.15658569]
[313.30117798 162.88093567]
[327.53778076 167.60528564]
[341.77438354 172.32963562]
[356.01095581 177.05398560]
[370.24755859 181.77835083]
[384.48413086 186.50270081]
[397.70129395 178.14562988]
[413.19104004 180.29078674]
[423.63958740 191.92529297]
[424.11346436 207.55569458]
[414.38891602 219.80178833]
[399.05755615 222.88134766]
[385.35839844 215.34030151]
[379.75979614 200.73928833]
[365.52319336 196.01493835]
[351.28662109 191.29058838]
[337.05001831 186.56622314]
[322.81341553 181.84187317]
[308.57684326 177.11752319]
[294.34024048 172.39317322]
[283.30010986 182.39221191]
[268.63980103 185.54364014]
[254.27552795 180.90316772]
[244.09577942 169.62179565]
[240.90879822 154.66217041]
[226.67221069 149.93782043]
[212.43562317 145.21347046]
[197.91917419 148.54844666]
[187.25827026 136.85845947]
[173.02168274 132.13410950]
[158.78507996 127.40975952]
[144.54849243 122.68540192]
[130.31190491 117.96105194]
[115.09347534 134.83720398]
[91.19010162 139.73408508]
[88.16321564 154.42552185]
[85.13632965 169.11694336]
[82.10945129 183.80836487]
[79.08256531 198.49978638]
[76.05567932 213.19120789]
[73.02879333 227.88264465]
[74.36248016 236.92755127]
[69.83808899 242.77920532]
[66.58195496 257.42153931]
[80.14470673 263.99026489]
[91.82663727 273.51022339]
[100.99774933 285.46795654]
[107.16345978 299.21859741]
[109.99125671 314.02066040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 195]
[21 194]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 187]
[28 186]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[56 100]
[57 99]
[58 98]
[59 97]
[62 94]
[63 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[103 136]
[104 135]
[105 134]
[106 133]
[108 132]
[109 131]
[110 130]
[111 128]
[112 127]
[113 126]
[115 124]
[116 123]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[144 178]
[145 177]
[146 176]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
