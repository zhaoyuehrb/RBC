%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCUUGGAGUCCAGGCCGGGUUUUCAAGCAUCAAGACGGAAGUAACAGCGGAAAGGAAGUUCCAAGGCCCGCGCUGGGAAAAAGGUGGGGGGACCAGGGGAAGACUCGGAGUGCGAUGGCGGCGCAAAUUCCAAUUGUGGCCACCACUUCCACUCCCGGAAUAGUCCGGAACAGCAAGAAGAGGCCGGCCAGCCCUUCCCACAAUGGCAGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[-119.34521484 293.03121948]
[-128.82971191 304.65206909]
[-143.79623413 303.65045166]
[-151.64765930 290.86932373]
[-156.32402039 305.12173462]
[-161.00036621 319.37417603]
[-165.67672729 333.62658691]
[-170.35307312 347.87902832]
[-175.02943420 362.13146973]
[-174.22238159 379.06619263]
[-190.27188110 384.52969360]
[-199.96481323 370.61984253]
[-189.28186035 357.45510864]
[-184.60549927 343.20266724]
[-179.92915344 328.95025635]
[-175.25279236 314.69781494]
[-170.57644653 300.44537354]
[-165.90010071 286.19296265]
[-176.11776733 275.21118164]
[-190.66987610 278.84933472]
[-205.22198486 282.48748779]
[-219.77409363 286.12564087]
[-234.32620239 289.76379395]
[-248.87831116 293.40194702]
[-263.43041992 297.04010010]
[-277.98251343 300.67825317]
[-286.14080811 313.94775391]
[-300.95056152 317.43005371]
[-313.55072021 309.57058716]
[-328.10284424 313.20874023]
[-342.65493774 316.84689331]
[-354.16641235 327.70028687]
[-368.39028931 323.28094482]
[-382.94241333 326.91909790]
[-387.32714844 342.86422729]
[-399.08843994 354.35546875]
[-414.94891357 358.32302856]
[-430.55517578 353.77560425]
[-441.67272949 342.04571533]
[-456.17089844 345.89318848]
[-460.10418701 360.73992920]
[-470.94522095 371.61956787]
[-485.77786255 375.60562134]
[-500.61218262 371.62582397]
[-511.45779419 360.75070190]
[-515.39733887 345.90567017]
[-511.37106323 331.08389282]
[-500.46200562 320.27239990]
[-485.60467529 316.37942505]
[-470.79562378 320.45214844]
[-460.01837158 331.39501953]
[-445.52020264 327.54754639]
[-442.83163452 314.16052246]
[-434.59881592 303.18453979]
[-422.38220215 296.79498291]
[-408.53866577 296.28890991]
[-395.76669312 301.82192993]
[-386.58056641 312.36697388]
[-372.02844238 308.72885132]
[-361.55783081 298.13565063]
[-346.29309082 302.29476929]
[-331.74099731 298.65664673]
[-317.18887329 295.01849365]
[-309.76986694 282.15405273]
[-295.06378174 278.25714111]
[-281.62066650 286.12612915]
[-267.06857300 282.48797607]
[-252.51646423 278.84982300]
[-237.96435547 275.21166992]
[-223.41224670 271.57354736]
[-208.86013794 267.93539429]
[-194.30802917 264.29724121]
[-179.75592041 260.65908813]
[-144.85838318 260.41180420]
[-131.83212280 252.97430420]
[-118.80586243 245.53678894]
[-105.77960205 238.09927368]
[-92.75334167 230.66175842]
[-95.84455872 216.03283691]
[-94.26063538 201.14454651]
[-88.14416504 187.45626831]
[-78.08267975 176.31367493]
[-65.05217743 168.81643677]
[-50.32251358 165.70967102]
[-35.33360291 167.30996704]
[-21.55469513 173.47309875]
[-10.34034061 183.60697937]
[2.68591738 176.16946411]
[15.71217632 168.73196411]
[28.73843384 161.29444885]
[41.76469421 153.85693359]
[54.79095078 146.41941833]
[67.81720734 138.98190308]
[80.84346771 131.54440308]
[69.67941284 121.58980560]
[63.30646133 107.91693878]
[62.85434341 92.71097565]
[68.49747467 78.44642639]
[79.41017151 67.48446655]
[77.25599670 52.63994980]
[75.10182953 37.79544067]
[63.15803146 27.08445168]
[64.22918701 11.07719803]
[77.49360657 2.05307317]
[92.77595520 6.93461370]
[98.35292053 21.97711945]
[89.94634247 35.64126587]
[92.10050964 50.48577881]
[94.25468445 65.33029175]
[108.63595581 69.59397888]
[118.53291321 58.32231903]
[128.42987061 47.05066299]
[138.32682800 35.77900696]
[148.22378540 24.50734901]
[158.12074280 13.23569393]
[161.42886353 4.72707748]
[168.24244690 1.87423921]
[178.30081177 -9.25362682]
[188.19776917 -20.52528381]
[197.93125916 -31.93838882]
[207.66476440 -43.35149384]
[210.73258972 -58.87241745]
[224.87841797 -63.53553009]
[234.61192322 -74.94863892]
[244.34542847 -86.36174011]
[253.99642944 -97.84468842]
[263.56445312 -109.39687347]
[273.13247681 -120.94905853]
[282.70050049 -132.50123596]
[279.70867920 -147.84996033]
[287.32797241 -161.50573730]
[301.96078491 -167.02073669]
[316.69790649 -161.79095459]
[324.58096313 -148.28572083]
[321.88781738 -132.88179016]
[309.89004517 -122.85243988]
[294.25268555 -122.93321991]
[284.68466187 -111.38103485]
[275.11663818 -99.82884979]
[265.54861450 -88.27666473]
[263.70385742 -81.12400818]
[255.75852966 -76.62824249]
[246.02502441 -65.21513367]
[236.29153442 -53.80203247]
[233.91990662 -39.09745026]
[219.07786560 -33.61799622]
[209.34437561 -22.20488930]
[199.61087036 -10.79178429]
[199.08851624 -6.04932308]
[195.58482361 -1.58317173]
[189.42868042 0.80473244]
[179.37031555 11.93259907]
[169.39239502 23.13265038]
[159.49543762 34.40430832]
[149.59848022 45.67596436]
[139.70152283 56.94762039]
[129.80456543 68.21927643]
[119.90761566 79.49093628]
[125.89655304 93.24347687]
[140.89031982 93.67575073]
[155.88409424 94.10801697]
[170.87786865 94.54029083]
[185.04556274 86.28144073]
[199.14552307 94.65538025]
[198.67294312 111.04771423]
[184.11395264 118.59542084]
[170.44560242 109.53405762]
[155.45182800 109.10179138]
[140.45805359 108.66951752]
[125.46428680 108.23725128]
[122.51943970 115.13491821]
[136.31478882 121.02462006]
[150.11012268 126.91431427]
[163.90547180 132.80401611]
[177.70080566 138.69371033]
[191.49615479 144.58340454]
[205.29139709 150.47332764]
[199.40124512 164.26847839]
[185.60646057 158.37873840]
[171.81111145 152.48904419]
[158.01577759 146.59934998]
[144.22042847 140.70965576]
[130.42507935 134.81996155]
[116.62974548 128.93026733]
[113.68489838 135.82794189]
[124.36764526 146.35783386]
[135.05039978 156.88774109]
[150.85047913 156.52325439]
[162.22270203 167.49813843]
[162.42012024 183.30119324]
[151.32562256 194.55674744]
[135.52136230 194.58706665]
[124.38373566 183.37419128]
[124.52050018 167.57049561]
[113.83774567 157.04058838]
[103.15499115 146.51068115]
[88.28098297 144.57064819]
[75.25472260 152.00816345]
[62.22846222 159.44567871]
[49.20220566 166.88319397]
[36.17594528 174.32070923]
[23.14968872 181.75822449]
[10.12343025 189.19572449]
[-2.90282869 196.63323975]
[0.12406983 211.44186401]
[-1.57212806 226.44071960]
[-7.81280470 240.16230774]
[-17.97533607 251.26808167]
[-31.05519104 258.67889404]
[-45.76521301 261.67990112]
[-60.66229248 259.98959351]
[-74.28892517 253.78596497]
[-85.31583405 243.68801880]
[-98.34208679 251.12553406]
[-111.36834717 258.56304932]
[-124.39460754 266.00054932]
[-137.42086792 273.43807983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[19 73]
[20 72]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[29 63]
[30 62]
[31 61]
[33 59]
[34 58]
[39 52]
[40 51]
[74 217]
[75 216]
[76 215]
[77 214]
[78 213]
[87 204]
[88 203]
[89 202]
[90 201]
[91 200]
[92 199]
[93 198]
[94 197]
[99 109]
[100 108]
[101 107]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 153]
[117 152]
[118 151]
[119 148]
[120 147]
[121 146]
[123 144]
[124 143]
[125 142]
[126 140]
[127 139]
[128 138]
[129 137]
[159 170]
[160 169]
[161 168]
[162 167]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
