%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAAACAGAACCCCACCAGGUUCUCAGCCUGUUCUCCGGUUGGGCCACUUGCACUCCCACUGCCGCCCUCCUGGCCUGUCUGGACCGGGCCCCCCGCUGCCCCAUGCAGCACCCCAAACCGUUCUGUGCCCCUGCAGCUCCCCAGGAAGGUUUCAGCCCGCAGAGUCUGGAGGGGGCUGAGGUGCUGGGCAACCAGCCUGCUC\
) } def
/len { sequence length } bind def

/coor [
[-268.93194580 700.68640137]
[-276.16625977 713.82659912]
[-283.40057373 726.96679688]
[-290.63491821 740.10699463]
[-285.16409302 750.66723633]
[-285.46899414 762.43658447]
[-291.35806274 772.49249268]
[-301.26757812 778.39367676]
[-312.67492676 778.77264404]
[-320.30661011 791.68615723]
[-327.93829346 804.59960938]
[-335.56997681 817.51306152]
[-343.20166016 830.42651367]
[-350.83334351 843.33996582]
[-346.65606689 858.58221436]
[-354.55267334 872.27233887]
[-369.83822632 876.28820801]
[-383.44409180 868.24731445]
[-387.29815674 852.92016602]
[-379.11386108 839.40008545]
[-363.74682617 835.70825195]
[-356.11514282 822.79479980]
[-348.48345947 809.88134766]
[-340.85177612 796.96789551]
[-333.22009277 784.05444336]
[-325.58840942 771.14099121]
[-331.20697021 753.72137451]
[-322.15673828 737.44573975]
[-303.77508545 732.87268066]
[-296.54077148 719.73248291]
[-289.30645752 706.59228516]
[-282.07211304 693.45208740]
[-291.25170898 682.83459473]
[-296.26580811 669.69329834]
[-296.49295044 655.59985352]
[-291.88543701 642.24731445]
[-282.97756958 631.24670410]
[-270.82382202 623.93249512]
[-256.87399292 621.20111084]
[-242.80020142 623.40063477]
[-235.36633301 610.37231445]
[-227.93246460 597.34393311]
[-220.49859619 584.31561279]
[-213.06474304 571.28729248]
[-205.63087463 558.25891113]
[-198.39654541 545.11871338]
[-191.36344910 531.86975098]
[-184.33035278 518.62078857]
[-189.95997620 508.69210815]
[-190.09729004 497.15936279]
[-184.59243774 486.88809204]
[-174.71182251 480.48620605]
[-162.84858704 479.64215088]
[-155.41471863 466.61383057]
[-147.98085022 453.58547974]
[-140.54699707 440.55712891]
[-133.11312866 427.52880859]
[-135.99967957 415.77914429]
[-129.90974426 404.86312866]
[-117.63267517 400.90039062]
[-110.00099182 387.98693848]
[-110.30261993 383.21701050]
[-107.60829163 378.20761108]
[-101.93452454 374.80111694]
[-93.91258240 362.12640381]
[-85.89064026 349.45169067]
[-84.96939850 342.11566162]
[-77.64846802 336.64614868]
[-69.43417358 324.09524536]
[-61.21987152 311.54434204]
[-53.00557327 298.99340820]
[-44.79127502 286.44250488]
[-36.57697678 273.89160156]
[-36.08127975 259.00524902]
[-22.05001831 251.69537354]
[-13.83572006 239.14447021]
[-5.62142086 226.59355164]
[-5.98251629 223.08239746]
[-4.65841627 219.22195435]
[-1.50353122 215.80728149]
[3.26663232 213.66839600]
[12.04635620 201.50630188]
[20.82608032 189.34422302]
[29.60580444 177.18212891]
[29.40567017 173.65814209]
[30.90494537 169.86227417]
[34.21269989 166.59547424]
[39.07569504 164.67698669]
[48.40246964 152.92916870]
[57.72924423 141.18135071]
[67.05602264 129.43353271]
[76.38279724 117.68571472]
[70.10494995 109.61040497]
[66.70870209 99.31111908]
[66.96799469 87.85185242]
[71.25541687 76.55774689]
[79.45781708 66.86235809]
[90.95007324 60.12931061]
[91.86453247 45.15721130]
[92.77899170 30.18511391]
[93.69345093 15.21301365]
[94.60791016 0.24091446]
[85.09604645 -12.67822170]
[89.40505219 -28.13176537]
[104.22942352 -34.26507950]
[118.19717407 -26.37321281]
[120.59343719 -10.51012707]
[109.58000946 1.15537405]
[108.66555023 16.12747383]
[107.75109100 31.09957314]
[106.83663177 46.07167435]
[105.92217255 61.04377365]
[112.34961700 64.90873718]
[115.72901917 50.29437256]
[130.67240906 48.99247360]
[136.52818298 62.80224991]
[125.20450592 72.63866425]
[131.63195801 76.50363159]
[144.42752075 68.67590332]
[157.22309875 60.84817886]
[170.01867676 53.02045822]
[182.81425476 45.19273376]
[190.54862976 31.39092255]
[205.44317627 31.34943199]
[218.23875427 23.52170944]
[231.03433228 15.69398499]
[243.82989502 7.86626101]
[256.62548828 0.03853706]
[269.04965210 -8.36620617]
[281.07644653 -17.33037949]
[293.10324097 -26.29455376]
[299.08959961 -41.56201172]
[315.34301758 -43.74350739]
[325.14334106 -30.59490585]
[318.40884399 -15.64235878]
[302.06741333 -14.26776695]
[290.04061890 -5.30359316]
[278.01382446 3.66058016]
[292.65588379 6.91790724]
[300.82492065 19.49832535]
[297.84387207 34.19911957]
[285.41952515 42.60359192]
[270.66519165 39.89989471]
[262.02825928 27.63598824]
[264.45318604 12.83411217]
[251.65762329 20.66183662]
[238.86204529 28.48955917]
[226.06648254 36.31728363]
[213.27090454 44.14500809]
[206.45175171 57.38692474]
[190.64196777 57.98830795]
[177.84640503 65.81603241]
[165.05082703 73.64375305]
[152.25524902 81.47148132]
[139.45967102 89.29920197]
[132.81304932 117.29434967]
[110.97470856 131.43789673]
[88.13061523 127.01248932]
[78.80384064 138.76031494]
[69.47706604 150.50813293]
[60.15028763 162.25595093]
[50.82351303 174.00376892]
[41.76789474 185.96185303]
[32.98817062 198.12394714]
[24.20844650 210.28602600]
[15.42872238 222.44812012]
[6.92948723 234.80786133]
[-1.28481174 247.35876465]
[-9.49911118 259.90966797]
[-10.58235073 275.69375610]
[-24.02606773 282.10589600]
[-32.24036789 294.65679932]
[-40.45466614 307.20773315]
[-48.66896439 319.75863647]
[-56.88326263 332.30953979]
[-65.09756470 344.86044312]
[-73.21591949 357.47363281]
[-81.23786926 370.14834595]
[-89.25981140 382.82305908]
[-97.08753204 395.61862183]
[-104.71921539 408.53207397]
[-104.47739410 426.94284058]
[-120.08478546 434.96267700]
[-127.51865387 447.99099731]
[-134.95251465 461.01934814]
[-142.38638306 474.04766846]
[-149.82025146 487.07601929]
[-144.12882996 505.14273071]
[-153.28973389 521.35632324]
[-171.08137512 525.65386963]
[-178.11447144 538.90283203]
[-185.14756775 552.15185547]
[-185.29443359 558.76806641]
[-188.31008911 563.59082031]
[-192.60252380 565.69281006]
[-200.03639221 578.72113037]
[-207.47026062 591.74945068]
[-214.90412903 604.77783203]
[-222.33799744 617.80615234]
[-229.77186584 630.83447266]
[-219.83862305 643.47491455]
[-215.52618408 658.92205811]
[-217.46626282 674.80328369]
[-225.33250427 688.69091797]
[-237.89497375 698.47363281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[40 200]
[41 199]
[42 198]
[43 197]
[44 196]
[45 195]
[46 192]
[47 191]
[48 190]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[60 181]
[61 180]
[64 179]
[65 178]
[66 177]
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[75 169]
[76 168]
[77 167]
[81 166]
[82 165]
[83 164]
[84 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[118 155]
[119 154]
[120 153]
[121 152]
[122 151]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 138]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
