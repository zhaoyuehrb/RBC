%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PECAM1)
} def

/sequence { (\
GAUGCCGUGGAAAGCAGAUACUCUAGAACGGAAGGCUCCCUUGAUGGAACUUAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.022343963 ubox
1 38 0.126006049 ubox
1 52 0.025511802 ubox
2 19 0.012689750 ubox
2 22 0.022167920 ubox
2 37 0.124787978 ubox
2 45 0.007609907 ubox
2 51 0.023118064 ubox
3 16 0.161961523 ubox
3 18 0.008318734 ubox
3 20 0.005008701 ubox
3 30 0.013929414 ubox
3 44 0.007589495 ubox
3 53 0.013934306 ubox
4 15 0.180517519 ubox
4 19 0.004738355 ubox
4 29 0.019832568 ubox
4 36 0.201077198 ubox
4 52 0.012866202 ubox
5 14 0.180471741 ubox
5 31 0.922007632 ubox
5 35 0.200780145 ubox
5 47 0.251604475 ubox
6 30 0.925142478 ubox
6 34 0.200020914 ubox
6 43 0.014022724 ubox
6 46 0.252407787 ubox
7 15 0.045236605 ubox
7 19 0.006501459 ubox
7 21 0.042166675 ubox
7 29 0.925482529 ubox
7 42 0.013338526 ubox
7 45 0.251614706 ubox
7 50 0.005605407 ubox
8 14 0.044974320 ubox
8 16 0.041934996 ubox
8 18 0.006667793 ubox
8 20 0.042144879 ubox
8 25 0.236546297 ubox
8 28 0.889538152 ubox
8 30 0.048887820 ubox
8 44 0.249854634 ubox
8 49 0.005473357 ubox
9 15 0.060013056 ubox
9 19 0.041410927 ubox
9 22 0.045983694 ubox
9 23 0.042661972 ubox
9 24 0.477700657 ubox
9 29 0.057460570 ubox
9 39 0.049055137 ubox
9 40 0.054698307 ubox
9 41 0.067765878 ubox
9 42 0.009243599 ubox
10 21 0.047520397 ubox
10 22 0.034298749 ubox
10 23 0.481420551 ubox
10 38 0.049139991 ubox
10 39 0.054561457 ubox
10 40 0.071620127 ubox
10 41 0.006704961 ubox
10 42 0.220813175 ubox
11 22 0.454907119 ubox
11 37 0.037993136 ubox
11 41 0.215070440 ubox
11 42 0.011498812 ubox
12 41 0.013901599 ubox
12 42 0.042212144 ubox
12 52 0.005137848 ubox
13 22 0.421817970 ubox
13 24 0.488153807 ubox
13 37 0.221169283 ubox
13 41 0.056295933 ubox
13 51 0.005486750 ubox
14 21 0.452175642 ubox
14 23 0.502532832 ubox
14 36 0.227381205 ubox
14 40 0.062535820 ubox
14 41 0.005144001 ubox
14 50 0.005513117 ubox
15 35 0.227247862 ubox
15 43 0.003427059 ubox
16 22 0.407318562 ubox
16 24 0.264205026 ubox
16 37 0.040527240 ubox
16 41 0.004444935 ubox
16 42 0.003246908 ubox
16 51 0.008935897 ubox
17 21 0.400913883 ubox
17 23 0.274076600 ubox
17 36 0.042004018 ubox
17 38 0.081283064 ubox
17 40 0.005463884 ubox
17 50 0.010953752 ubox
17 51 0.004069452 ubox
17 52 0.018462950 ubox
18 22 0.238611071 ubox
18 37 0.081054196 ubox
18 51 0.018237449 ubox
19 25 0.019171560 ubox
19 46 0.003299386 ubox
19 53 0.018670835 ubox
20 24 0.017196955 ubox
20 45 0.003511818 ubox
20 52 0.019487264 ubox
21 31 0.072998117 ubox
21 34 0.118697338 ubox
21 35 0.008100603 ubox
21 47 0.009966009 ubox
21 54 0.009342096 ubox
22 30 0.062024196 ubox
22 31 0.061205434 ubox
22 32 0.178706404 ubox
22 33 0.085251948 ubox
22 34 0.004401312 ubox
22 35 0.015755759 ubox
22 44 0.012797940 ubox
22 46 0.008521914 ubox
22 47 0.014025983 ubox
22 48 0.155240541 ubox
22 53 0.008394416 ubox
23 30 0.076733032 ubox
23 31 0.200542187 ubox
23 34 0.033180985 ubox
23 43 0.013705647 ubox
23 46 0.017367093 ubox
23 47 0.162928802 ubox
23 54 0.015481324 ubox
24 30 0.194521513 ubox
24 33 0.033055760 ubox
24 43 0.005128002 ubox
24 46 0.162537068 ubox
24 53 0.015943978 ubox
25 41 0.014037748 ubox
25 42 0.006477700 ubox
25 45 0.159281230 ubox
25 51 0.010869449 ubox
25 52 0.014580697 ubox
26 40 0.015603918 ubox
26 41 0.006989842 ubox
26 42 0.014376094 ubox
26 50 0.012678992 ubox
26 51 0.011437948 ubox
27 41 0.014372966 ubox
27 42 0.099468871 ubox
28 41 0.103289249 ubox
29 43 0.014497251 ubox
29 46 0.022545182 ubox
30 37 0.004628894 ubox
30 38 0.003848720 ubox
30 39 0.162242576 ubox
30 40 0.048775155 ubox
30 41 0.009919431 ubox
30 42 0.009146933 ubox
30 45 0.021657312 ubox
31 36 0.005413394 ubox
31 37 0.003243365 ubox
31 38 0.162807495 ubox
31 39 0.047782478 ubox
31 40 0.010408550 ubox
31 41 0.003740547 ubox
31 42 0.007855968 ubox
31 52 0.006689166 ubox
32 37 0.152613066 ubox
32 41 0.006531503 ubox
32 42 0.187361656 ubox
32 51 0.010660750 ubox
32 52 0.504063545 ubox
33 41 0.197162431 ubox
33 42 0.015246463 ubox
33 51 0.532517940 ubox
33 52 0.619731489 ubox
34 40 0.198731219 ubox
34 41 0.015955419 ubox
34 50 0.534524308 ubox
34 51 0.687812669 ubox
34 52 0.025652101 ubox
35 39 0.195529950 ubox
35 40 0.015919426 ubox
35 50 0.696885890 ubox
35 51 0.018847570 ubox
36 47 0.028152165 ubox
36 54 0.006616929 ubox
37 44 0.013814419 ubox
37 46 0.027092755 ubox
37 47 0.035223575 ubox
37 48 0.877356931 ubox
37 53 0.005577624 ubox
38 43 0.014867143 ubox
38 46 0.035705974 ubox
38 47 0.890790288 ubox
39 46 0.883708027 ubox
39 47 0.258518336 ubox
40 46 0.274548277 ubox
40 47 0.034953390 ubox
40 54 0.006641595 ubox
41 46 0.034434258 ubox
41 48 0.009203263 ubox
41 49 0.006917248 ubox
41 53 0.006120562 ubox
41 54 0.010348715 ubox
42 47 0.009841983 ubox
42 48 0.008467514 ubox
42 53 0.019528392 ubox
43 52 0.023520682 ubox
44 51 0.022363856 ubox
45 53 0.011776904 ubox
46 52 0.012566093 ubox
47 51 0.008410097 ubox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
