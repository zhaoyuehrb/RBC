%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUUUGAGACACAGGUAAAGGGAGGGAGACAGAGAGAAAUACUUGCAGAGCCAGCAGGUAGCUGGGCAGCUCCUUCCCGGACGGACGGAUGGACAGACGCUGGGGACCCUCCACUCCAUAUGGAAAGAUGACAUGACCUUGUGGUAGAUCCCAGAACUGAGGCCCCAGGAUGACAGAACAGGAGACCCUGGCCCUACUGGAAGUGAAGAGGUCUGAUUCCCCAGAGAAGAGCUCACCCCAGGCCUUGGUUCCC\
AAUGGCCGGCAGCCAG\
) } def
/len { sequence length } bind def

/coor [
[339.19735718 146.76791382]
[339.42733765 137.57203674]
[324.82577515 134.13777161]
[312.33676147 142.17269897]
[297.47976685 138.89788818]
[289.13665771 125.74377441]
[274.53509521 122.30951691]
[265.29278564 131.91593933]
[252.40985107 135.74061584]
[239.21218872 132.68484497]
[229.16212463 123.44075012]
[224.95007324 110.33805847]
[210.38914490 106.73538208]
[195.82821655 103.13270569]
[181.26728821 99.53003693]
[166.68579102 96.01151276]
[152.08421326 92.57725525]
[137.48265076 89.14299774]
[133.59434509 112.66660309]
[117.62786865 127.63970947]
[97.78424072 129.57926941]
[82.55331421 120.00191498]
[68.69512177 125.74216461]
[54.83692551 131.48242188]
[40.97873306 137.22267151]
[27.12054062 142.96292114]
[13.26234818 148.70317078]
[-0.59584469 154.44342041]
[-14.45403767 160.18367004]
[-28.31223106 165.92391968]
[-28.37827301 181.09861755]
[-34.23327637 195.05433655]
[-44.95631027 205.67648315]
[-58.89144516 211.36856079]
[-73.90340424 211.29197693]
[-87.70476532 205.48957825]
[-98.20448303 194.87423706]
[-112.06267548 200.61450195]
[-115.61881256 210.84507751]
[-124.03209686 217.31263733]
[-134.39608765 218.08587646]
[-143.29260254 213.15066528]
[-157.27969360 218.56929016]
[-171.26676941 223.98791504]
[-185.25386047 229.40653992]
[-199.24093628 234.82516479]
[-213.22802734 240.24378967]
[-227.21510315 245.66241455]
[-232.08905029 260.52102661]
[-245.40084839 268.72653198]
[-260.86508179 266.40451050]
[-271.17999268 254.65136719]
[-271.47521973 239.01657104]
[-261.61135864 226.88240051]
[-246.24580383 223.97822571]
[-232.63372803 231.67532349]
[-218.64665222 226.25669861]
[-204.65956116 220.83807373]
[-190.67248535 215.41944885]
[-176.68539429 210.00082397]
[-162.69831848 204.58219910]
[-148.71122742 199.16357422]
[-137.67942810 183.25778198]
[-117.80292511 186.75630188]
[-103.94473267 181.01605225]
[-104.02648926 166.08546448]
[-98.37036896 152.22351074]
[-87.80945587 141.55430603]
[-73.93093109 135.72557068]
[-58.83760071 135.65423584]
[-44.82931137 141.38230896]
[-34.05248260 152.06573486]
[-20.19428825 146.32548523]
[-6.33609629 140.58523560]
[7.52209663 134.84498596]
[21.38028908 129.10472107]
[35.23848343 123.36447906]
[49.09667587 117.62422180]
[62.95486832 111.88397217]
[76.81306458 106.14372253]
[79.39882660 91.36827087]
[68.31369019 81.26284027]
[57.22855759 71.15740204]
[39.14064407 67.61792755]
[34.51293564 50.67407227]
[23.31182861 40.69734192]
[12.11071873 30.72061157]
[3.65430188 27.36700630]
[0.83870721 20.56338692]
[-10.24642658 10.45795155]
[-24.39855576 16.06853485]
[-39.52164078 14.98260975]
[-52.61994934 7.46898890]
[-61.12215805 -4.93558550]
[-63.38608170 -19.74045181]
[-59.01562881 -34.00104904]
[-70.10076141 -44.10648346]
[-81.18589783 -54.21191788]
[-96.96454620 -60.41437531]
[-95.37245178 -77.29340363]
[-78.71232605 -80.43610382]
[-71.08045959 -65.29705048]
[-59.99532700 -55.19161606]
[-48.91019440 -45.08618164]
[-35.11368179 -50.75379562]
[-20.16308212 -49.86555099]
[-7.02693987 -42.54415894]
[1.66318905 -30.19499588]
[4.13986349 -15.23661900]
[-0.14099191 -0.62718213]
[10.94414139 9.47825241]
[22.08745003 19.51950264]
[33.28855896 29.49623299]
[44.48966599 39.47296524]
[56.55702591 39.08239365]
[65.96720123 47.27072525]
[67.33399200 60.07227325]
[78.41912842 70.17770386]
[89.50425720 80.28314209]
[102.69260406 73.13558960]
[115.87978363 65.98868561]
[113.46485138 51.18435669]
[111.04991150 36.38003159]
[108.63497162 21.57570457]
[94.44251251 15.52776527]
[85.79172516 2.75406289]
[85.44305420 -12.66936016]
[93.50775146 -25.82094574]
[107.41239929 -32.50407028]
[122.72008514 -30.58617401]
[134.54617310 -20.67924881]
[139.11700439 -5.94456148]
[134.97404480 8.91610527]
[123.43930054 19.16076660]
[125.85424042 33.96509171]
[128.26918030 48.76941681]
[130.68411255 63.57374573]
[140.91690063 74.54142761]
[155.51847839 77.97568512]
[170.12004089 81.40994263]
[179.15272522 80.32904816]
[184.86994934 84.96910095]
[199.43089294 88.57177734]
[213.99182129 92.17445374]
[228.55274963 95.77712250]
[241.35896301 84.70082092]
[258.07873535 83.46602631]
[272.09210205 92.36251068]
[277.96936035 107.70794678]
[292.57092285 111.14220428]
[305.90264893 103.08596802]
[320.66180420 106.77679443]
[328.26004028 119.53620148]
[342.86160278 122.97045898]
[367.49676514 107.15566254]
[395.81307983 128.74758911]
[410.81207275 128.92083740]
[425.81106567 129.09408569]
[440.81005859 129.26733398]
[455.80908203 129.44058228]
[470.80807495 129.61383057]
[485.80706787 129.78706360]
[500.80606079 129.96031189]
[515.80505371 130.13356018]
[530.80407715 130.30680847]
[545.80303955 130.48005676]
[560.44335938 127.21466827]
[573.94708252 120.68412018]
[587.45086670 114.15357971]
[600.95465088 107.62303162]
[599.10687256 95.70750427]
[600.38476562 83.73190308]
[604.69506836 72.50141907]
[611.74078369 62.76922607]
[621.04168701 55.18599319]
[631.96716309 50.25635529]
[643.77899170 48.30535126]
[655.68084717 49.45700455]
[666.87249756 53.62645340]
[676.60333252 60.52616882]
[684.22265625 69.68576050]
[698.01367188 63.78583527]
[711.80462646 57.88590622]
[725.59558105 51.98598099]
[734.98944092 38.54396057]
[751.30187988 40.22763062]
[757.75213623 55.30497360]
[747.70471191 68.26571655]
[731.49548340 65.77694702]
[717.70452881 71.67687988]
[703.91357422 77.57680511]
[690.12261963 83.47673035]
[690.97143555 101.51401520]
[684.79180908 118.51731110]
[672.51367188 131.85087585]
[656.01428223 139.43699646]
[637.83172607 140.07984924]
[620.77386475 133.65374756]
[607.48522949 121.12680817]
[593.98144531 127.65734863]
[580.47766113 134.18789673]
[566.97387695 140.71844482]
[567.01721191 148.21832275]
[582.01696777 148.13169861]
[596.25579834 143.41415405]
[605.14245605 155.49832153]
[596.39587402 167.68424988]
[582.10357666 163.13143921]
[567.10382080 163.21806335]
[567.14715576 170.71794128]
[580.72540283 177.09208679]
[594.30371094 183.46623230]
[610.08386230 182.32656860]
[618.31689453 194.73889160]
[631.89520264 201.11303711]
[645.47351074 207.48718262]
[657.82366943 203.85099792]
[668.98980713 209.41131592]
[673.24694824 220.70956421]
[686.75073242 227.24011230]
[700.25445557 233.77066040]
[716.56134033 232.03315735]
[725.99951172 245.44409180]
[718.85980225 260.20745850]
[702.48693848 261.13595581]
[693.72393799 247.27444458]
[680.22015381 240.74389648]
[666.71636963 234.21334839]
[649.29138184 236.42202759]
[639.09936523 221.06547546]
[625.52105713 214.69132996]
[611.94274902 208.31718445]
[597.13385010 209.91278076]
[587.92956543 197.04454041]
[574.35125732 190.67039490]
[560.77301025 184.29624939]
[548.75311279 193.26968384]
[533.75897217 193.68812561]
[521.25732422 185.39900208]
[515.80633545 171.42451477]
[519.39331055 156.85971069]
[530.71057129 147.01489258]
[545.62982178 145.47904968]
[530.63079834 145.30580139]
[515.63183594 145.13256836]
[500.63281250 144.95932007]
[485.63381958 144.78607178]
[470.63482666 144.61282349]
[455.63583374 144.43957520]
[440.63684082 144.26632690]
[425.63781738 144.09309387]
[410.63882446 143.91984558]
[395.63983154 143.74659729]
[390.81524658 149.48883057]
[402.29956055 159.13819885]
[392.65002441 170.62237549]
[381.16604614 160.97331238]
[376.34146118 166.71554565]
[379.09768677 181.46014404]
[381.85394287 196.20474243]
[384.61019897 210.94934082]
[396.97979736 221.16560364]
[396.56066895 237.20318604]
[383.67434692 246.75941467]
[368.20605469 242.50358582]
[362.02178955 227.70039368]
[369.86560059 213.70558167]
[367.10934448 198.96098328]
[364.35311890 184.21638489]
[361.59686279 169.47178650]
[350.53488159 164.39335632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 154]
[3 153]
[6 150]
[7 149]
[12 145]
[13 144]
[14 143]
[15 142]
[16 140]
[17 139]
[18 138]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[37 65]
[38 64]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[81 119]
[82 118]
[83 117]
[85 114]
[86 113]
[87 112]
[89 111]
[90 110]
[96 104]
[97 103]
[98 102]
[121 137]
[122 136]
[123 135]
[124 134]
[156 253]
[157 252]
[158 251]
[159 250]
[160 249]
[161 248]
[162 247]
[163 246]
[164 245]
[165 244]
[166 243]
[167 202]
[168 201]
[169 200]
[170 199]
[181 192]
[182 191]
[183 190]
[184 189]
[210 236]
[211 235]
[212 234]
[214 232]
[215 231]
[216 230]
[219 228]
[220 227]
[221 226]
[258 270]
[259 269]
[260 268]
[261 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
