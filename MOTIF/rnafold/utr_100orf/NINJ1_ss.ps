%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGCUGGAGCCUGCGGCUGAGGCUCGGGCGCGCUCAGGCCCGGAUCCUGGCGGCCUGGGCGGCCGCACCAUGGACUCGGGAACCGAGGAGUACGAGCUCAACGGCGGCCUGCCUCCGGGCACACCCGGCUCCCCGGACGCCUCGCCGGCCCGCUGGGGCUGGAGGCACG\
) } def
/len { sequence length } bind def

/coor [
[102.04034424 123.78912354]
[96.24030304 126.60551453]
[87.29106140 138.64341736]
[84.66803741 147.43255615]
[78.06681061 150.81745911]
[68.89920044 162.68991089]
[59.73159790 174.56234741]
[57.42134094 190.21397400]
[43.51871872 195.55873108]
[34.35111618 207.43118286]
[25.18350983 219.30363464]
[16.01590347 231.17607117]
[6.84829760 243.04852295]
[-2.31930828 254.92097473]
[1.19533098 270.15847778]
[-5.95279169 284.06668091]
[-20.38854980 290.07858276]
[-35.29582214 285.35552979]
[-43.63584900 272.12759399]
[-41.47072601 256.64062500]
[-29.82275581 246.20707703]
[-14.19175529 245.75335693]
[-5.02414989 233.88092041]
[4.14345598 222.00846863]
[13.31106186 210.13601685]
[22.47866821 198.26358032]
[31.64627266 186.39112854]
[33.30080032 171.58869934]
[47.85914993 165.39474487]
[57.02675629 153.52230835]
[66.19435883 141.64985657]
[75.25315857 129.69418335]
[84.20240021 117.65627289]
[78.71620941 103.69554901]
[63.96572495 100.97100067]
[49.21524048 98.24644470]
[34.46475601 95.52189636]
[19.71426964 92.79734039]
[4.96378517 90.07279205]
[-9.78670025 87.34823608]
[-24.53718567 84.62368011]
[-39.28767014 81.89913177]
[-54.08545685 79.44443512]
[-68.92560577 77.26042175]
[-83.76575470 75.07640076]
[-100.31645203 78.75211334]
[-108.43019867 63.86576080]
[-96.37172699 51.94814682]
[-81.58174133 60.23625183]
[-66.74159241 62.42026901]
[-51.90143967 64.60428619]
[-47.57607269 62.50141525]
[-41.87996292 63.11935806]
[-36.56311798 67.14864349]
[-21.81263351 69.87319946]
[-7.06214762 72.59774780]
[7.68833780 75.32230377]
[22.43882370 78.04685974]
[37.18930817 80.77140808]
[51.93979263 83.49596405]
[66.69027710 86.22051239]
[81.44076538 88.94506836]
[93.14379120 79.56214905]
[93.69161987 64.57215881]
[94.23945618 49.58216476]
[94.78728485 34.59217453]
[95.33511353 19.60218048]
[95.88294220 4.61218834]
[84.67585754 0.97568756]
[74.80536652 -5.73619461]
[67.10728455 -15.05906487]
[62.26198196 -26.30395126]
[60.73488235 -38.60793686]
[62.73309708 -51.00028610]
[68.18214417 -62.47903824]
[76.72516632 -72.09198761]
[87.74524689 -79.01554108]
[86.10468292 -93.92556000]
[84.46411133 -108.83557129]
[82.82353973 -123.74559021]
[81.18297577 -138.65559387]
[73.44055939 -153.73841858]
[85.79062653 -165.35359192]
[100.37071228 -156.70158386]
[96.09298706 -140.29617310]
[97.73355865 -125.38615417]
[99.37412262 -110.47614288]
[101.01469421 -95.56612396]
[102.65526581 -80.65611267]
[117.54967499 -78.87944794]
[122.65135956 -92.98522186]
[127.75304413 -107.09098816]
[132.85473633 -121.19676208]
[129.44317627 -137.23712158]
[141.80818176 -148.00924683]
[157.22969055 -142.43170166]
[159.84336853 -126.24217987]
[146.96049500 -116.09507751]
[141.85881042 -101.98930359]
[136.75712585 -87.88352966]
[131.65544128 -73.77776337]
[145.17149353 -56.82882309]
[149.30357361 -36.02074432]
[143.54573059 -16.08512497]
[129.59315491 -1.35860002]
[110.87294006 5.16001844]
[110.32510376 20.15001106]
[109.77727509 35.14000320]
[109.22944641 50.12999725]
[108.68161774 65.11998749]
[108.13378906 80.10998535]
[116.06449890 92.84197998]
[129.76023865 98.95971680]
[143.45597839 105.07744598]
[157.15171814 111.19517517]
[170.84747314 117.31290436]
[184.54321289 123.43064117]
[198.23895264 129.54837036]
[211.93469238 135.66610718]
[221.08387756 136.31535339]
[225.82312012 142.02267456]
[239.40483093 148.38952637]
[244.67884827 147.93321228]
[249.14099121 149.41911316]
[252.18215942 152.20394897]
[253.54133606 155.49513245]
[266.75396729 162.59626770]
[279.96661377 169.69740295]
[293.17926025 176.79853821]
[306.39190674 183.89967346]
[319.60455322 191.00080872]
[333.53683472 184.42834473]
[348.49291992 187.28651428]
[358.77655029 198.27336121]
[360.59701538 213.03221130]
[373.80966187 220.13334656]
[387.02227783 227.23448181]
[400.23492432 234.33561707]
[409.31231689 235.65098572]
[413.62231445 241.68902588]
[426.70303345 249.03028870]
[443.47473145 251.50953674]
[445.73526001 268.31210327]
[430.21508789 275.13568115]
[419.36178589 262.11102295]
[406.28103638 254.76976013]
[393.13378906 247.54826355]
[379.92114258 240.44712830]
[366.70852661 233.34599304]
[353.49588013 226.24485779]
[340.18255615 232.87007141]
[325.34536743 230.35571289]
[314.70938110 219.45942688]
[312.50338745 204.21343994]
[299.29077148 197.11230469]
[286.07812500 190.01116943]
[272.86547852 182.91003418]
[259.65283203 175.80889893]
[246.44020081 168.70776367]
[233.03799438 161.97125244]
[219.45626831 155.60440063]
[205.81695557 149.36184692]
[192.12121582 143.24411011]
[178.42547607 137.12638855]
[164.72973633 131.00865173]
[151.03399658 124.89092255]
[137.33825684 118.77318573]
[123.64250946 112.65545654]
[109.94676208 106.53772736]
[110.29888153 110.76259613]
[109.15846252 115.36762238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 33]
[3 32]
[5 31]
[6 30]
[7 29]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 51]
[44 50]
[45 49]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[90 101]
[91 100]
[92 99]
[93 98]
[112 169]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[121 161]
[122 160]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[135 150]
[136 149]
[137 148]
[138 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
