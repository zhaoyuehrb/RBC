%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGCAGAGGAGAGCGCCAGGACGCUACAGCGGCUGAAGAGGCAGUGGCGCCCGCGGCCGCAGCGUCGGGGCUGGAGCGAUGGCGGCGACCGCGGUGGCGGCGGCUGUGGCGGGAACCGAGUCGGCCCAGGGUCCCCCGGGCCCGGCAGCGUCGCUGGAGCUGUGGCUCAACAAAGCCA\
) } def
/len { sequence length } bind def

/coor [
[132.23780823 360.06701660]
[129.68914795 374.84890747]
[137.72892761 388.73202515]
[131.75341797 403.62072754]
[116.34651184 408.09362793]
[103.32707977 398.71951294]
[102.68250275 382.68942261]
[114.90725708 372.30023193]
[117.45590973 357.51834106]
[113.59953308 349.11096191]
[112.05738068 340.39434814]
[112.73806000 331.96685791]
[115.40395355 324.36193848]
[119.69750977 318.01455688]
[125.17485809 313.23629761]
[131.34379578 310.20095825]
[137.70341492 308.94107056]
[137.44731140 293.94326782]
[137.19122314 278.94543457]
[129.23776245 266.35211182]
[136.73831177 252.42185974]
[136.48222351 237.42405701]
[136.22612000 222.42623901]
[135.97003174 207.42842102]
[135.58590698 192.43334961]
[135.07379150 177.44209290]
[134.56167603 162.45083618]
[134.04956055 147.45957947]
[133.53744507 132.46832275]
[133.02532959 117.47706604]
[115.50502014 131.49668884]
[94.46978760 132.37889099]
[78.14676666 121.40423584]
[71.98057556 104.18904877]
[57.08758545 102.40055847]
[42.19458771 100.61206818]
[27.30159378 98.82357788]
[12.40859890 97.03507996]
[-2.48439598 95.24658966]
[-17.37738991 93.45809937]
[-25.13856697 102.50122070]
[-36.19228745 106.62225342]
[-47.74184799 104.90236664]
[-56.92448044 97.88516235]
[-61.52092361 87.41259003]
[-76.34417725 85.11667633]
[-91.16742706 82.82076263]
[-103.77195740 92.35498810]
[-119.41471863 90.10122681]
[-128.81515503 77.39660645]
[-126.39613342 61.77854156]
[-113.59282684 52.51295853]
[-98.00121307 55.09696579]
[-88.87151337 67.99751282]
[-74.04826355 70.29342651]
[-59.22500992 72.58934021]
[-45.15296555 60.90765762]
[-26.69171906 63.23743439]
[-15.58889961 78.56510162]
[-0.69590425 80.35359955]
[14.19709110 82.14208984]
[29.09008598 83.93058014]
[43.98308182 85.71907043]
[58.87607574 87.50756073]
[73.76907349 89.29605865]
[82.91474915 73.72410583]
[101.04035950 65.66235352]
[122.22734833 69.96559906]
[122.22734833 54.96560287]
[122.22734833 39.96560287]
[122.22734833 24.96560287]
[122.22734833 9.96560287]
[114.49004364 -3.83456969]
[122.22734833 -16.56184196]
[122.22734833 -31.56184196]
[122.22734833 -46.56184006]
[122.22734833 -61.56184006]
[122.22734833 -76.56184387]
[111.33279419 -87.69496918]
[111.54647064 -102.90709686]
[122.22734833 -113.22478485]
[122.22734833 -128.22477722]
[114.49004364 -142.02494812]
[122.22734833 -154.75222778]
[122.22734833 -169.75222778]
[114.49004364 -183.55239868]
[122.22734833 -196.27966309]
[122.22734833 -211.27966309]
[122.22734833 -226.27966309]
[122.22734833 -241.27966309]
[116.18100739 -257.11880493]
[129.72734070 -267.31356812]
[143.27368164 -257.11880493]
[137.22734070 -241.27966309]
[137.22734070 -226.27966309]
[137.22734070 -211.27966309]
[137.22734070 -196.27966309]
[144.96464539 -183.55239868]
[137.22734070 -169.75222778]
[137.22734070 -154.75222778]
[144.96464539 -142.02494812]
[137.22734070 -128.22477722]
[137.22734070 -113.22478485]
[147.90821838 -102.90709686]
[148.12190247 -87.69496918]
[137.22734070 -76.56184387]
[137.22734070 -61.56184006]
[137.22734070 -46.56184006]
[137.22734070 -31.56184196]
[137.22734070 -16.56184196]
[144.96464539 -3.83456969]
[137.22734070 9.96560287]
[137.22734070 24.96560287]
[137.22734070 39.96560287]
[137.22734070 54.96560287]
[137.22734070 69.96559906]
[142.53065491 75.26890564]
[149.72203064 62.10516357]
[156.55921936 48.75402832]
[171.37693787 46.42269897]
[181.98348999 57.02934647]
[179.65203857 71.84704590]
[166.30099487 78.68412018]
[153.13725281 85.87550354]
[158.44055176 91.17880249]
[173.44055176 91.17880249]
[188.44055176 91.17880249]
[203.44055176 91.17880249]
[218.44055176 91.17880249]
[233.44000244 91.05075073]
[248.43782043 90.79465485]
[263.43563843 90.53855896]
[271.98629761 87.25668335]
[278.69119263 90.40832520]
[293.69119263 90.40832520]
[308.69119263 90.40832520]
[324.53030396 84.36198425]
[334.72506714 97.90832520]
[324.53030396 111.45466614]
[308.69119263 105.40832520]
[293.69119263 105.40832520]
[278.69119263 105.40832520]
[263.69171143 105.53637695]
[248.69390869 105.79247284]
[233.69610596 106.04856873]
[227.04600525 109.31422424]
[218.44055176 106.17880249]
[203.44055176 106.17880249]
[188.44055176 106.17880249]
[173.44055176 106.17880249]
[158.44055176 106.17880249]
[148.01658630 116.96495056]
[148.52870178 131.95620728]
[149.04081726 146.94746399]
[149.55293274 161.93872070]
[150.06504822 176.92997742]
[150.57716370 191.92121887]
[154.00454712 200.41462708]
[150.96784973 207.17233276]
[151.22393799 222.17013550]
[151.48004150 237.16795349]
[151.73612976 252.16577148]
[159.70791626 265.83181763]
[152.18904114 278.68933105]
[152.44512939 293.68716431]
[152.70123291 308.68496704]
[175.10435486 322.06735229]
[176.55680847 353.98236084]
[180.84977722 368.35491943]
[185.14273071 382.72747803]
[189.43569946 397.10003662]
[193.72865295 411.47259521]
[207.75221252 418.76065063]
[212.43519592 433.85516357]
[204.99929810 447.80090332]
[189.85609436 452.32403564]
[175.98977661 444.74111938]
[171.62698364 429.55093384]
[179.35609436 415.76556396]
[175.06314087 401.39300537]
[170.77017212 387.02044678]
[166.47721863 372.64788818]
[162.18424988 358.27532959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[17 166]
[18 165]
[19 164]
[21 162]
[22 161]
[23 160]
[24 159]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[45 56]
[46 55]
[47 54]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[81 103]
[82 102]
[84 100]
[85 99]
[87 97]
[88 96]
[89 95]
[90 94]
[125 151]
[126 150]
[127 149]
[128 148]
[129 147]
[130 145]
[131 144]
[132 143]
[134 142]
[135 141]
[136 140]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
