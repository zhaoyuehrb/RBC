%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUGCGUCGGCCGCGUAGCCCGCGCGCGGAGCGUACCCUGCUGCGGCCGUUGGCCGUUAGCGCGGCUUCGGCGGUUGUCUUGGAGAAGCAAGAUGGCGGCGACGGCGGCCGCAGUGGUGGCCGAGGAGGACACGGAGCUGCGGGACCUGCUGGUGCAGACGCUGGAGAACAGCGGGGUCCUGAACCGCAUCA\
) } def
/len { sequence length } bind def

/coor [
[39.93924332 374.73098755]
[29.25965881 380.83520508]
[17.24538612 383.35928345]
[5.06089640 382.07397461]
[-1.41655445 395.60330200]
[-7.89400530 409.13262939]
[-14.37145615 422.66195679]
[-20.84890747 436.19125366]
[-27.32635880 449.72058105]
[-33.80381012 463.24990845]
[-40.28126144 476.77923584]
[-36.32565308 492.32699585]
[-46.12954330 505.02593994]
[-62.17222977 505.13452148]
[-72.14713287 492.56945801]
[-68.40235901 476.96960449]
[-53.81058502 470.30178833]
[-47.33313370 456.77246094]
[-40.85568237 443.24313354]
[-34.37823105 429.71380615]
[-27.90078163 416.18447876]
[-21.42333031 402.65515137]
[-14.94587898 389.12585449]
[-8.46842861 375.59652710]
[-20.03350830 362.22134399]
[-24.60347939 345.08551025]
[-21.21448517 327.62368774]
[-10.50274849 313.35678101]
[5.41426134 305.18206787]
[23.35628128 304.78488159]
[29.17930412 290.96127319]
[35.00232697 277.13763428]
[40.82534790 263.31402588]
[34.98746872 249.65917969]
[40.69591904 235.55712891]
[55.05795670 229.52639771]
[60.88098145 215.70278931]
[57.75488663 198.43946838]
[72.50966644 187.43122864]
[78.11151123 173.51651001]
[83.71335602 159.60179138]
[89.31520081 145.68707275]
[64.33612823 117.93360901]
[69.79967499 86.90254211]
[55.00947189 84.40258026]
[40.21926498 81.90261841]
[25.42905807 79.40266418]
[10.61938763 77.02071381]
[-4.20880365 74.75692749]
[-19.03699493 72.49313354]
[-33.86518478 70.22934723]
[-48.69337845 67.96556091]
[-65.26360321 71.55221558]
[-73.29718018 56.62244797]
[-61.17479324 44.76985168]
[-46.42958832 53.13736725]
[-31.60139847 55.40115356]
[-16.77320671 57.66494370]
[-1.94501483 59.92873383]
[12.88317680 62.19252014]
[19.97806931 60.09177399]
[27.92901611 64.61245728]
[42.71922302 67.11241150]
[57.50942993 69.61237335]
[72.29963684 72.11233521]
[84.76336670 63.76635361]
[88.08451843 49.13864136]
[91.40567780 34.51092911]
[94.72682953 19.88321877]
[98.04798126 5.25550747]
[101.36914062 -9.37220383]
[104.69029236 -23.99991417]
[108.01144409 -38.62762451]
[111.33259583 -53.25533676]
[110.85426331 -68.24771118]
[106.60741425 -82.63396454]
[95.27954865 -93.67887115]
[99.09687805 -108.07599640]
[94.85002899 -122.46224976]
[90.60317993 -136.84849548]
[86.35633087 -151.23475647]
[82.10948181 -165.62100220]
[77.86263275 -180.00726318]
[73.61578369 -194.39350891]
[69.36893463 -208.77976990]
[65.12208557 -223.16601562]
[51.12197495 -230.49899292]
[46.48740768 -245.60847473]
[53.96799088 -259.53027344]
[69.12562561 -264.00482178]
[82.96755219 -256.37747192]
[87.28160858 -241.17338562]
[79.50833893 -227.41287231]
[83.75518799 -213.02661133]
[88.00203705 -198.64036560]
[92.24888611 -184.25410461]
[96.49573517 -169.86785889]
[100.74258423 -155.48159790]
[104.98943329 -141.09535217]
[109.23628235 -126.70909882]
[113.48313141 -112.32284546]
[124.50723267 -102.30693817]
[120.99366760 -86.88081360]
[125.24051666 -72.49456024]
[132.62541199 -71.18565369]
[130.55116272 -86.04154205]
[144.03906250 -92.60482788]
[154.44897461 -81.80511475]
[147.39521790 -68.56784058]
[154.78012085 -67.25894165]
[163.71261597 -79.30928040]
[172.64509583 -91.35961914]
[181.57759094 -103.40995789]
[190.51007080 -115.46029663]
[199.44256592 -127.51063538]
[208.37504578 -139.56097412]
[209.70661926 -155.90597534]
[224.64138794 -162.67979431]
[237.81575012 -152.91412354]
[235.67703247 -136.65502930]
[220.42538452 -130.62849426]
[211.49290466 -118.57814789]
[202.56040955 -106.52780914]
[193.62792969 -94.47747040]
[184.69543457 -82.42713165]
[175.76295471 -70.37679291]
[166.83045959 -58.32645416]
[180.44670105 -64.61915588]
[189.54487610 -52.69342041]
[192.02952576 -37.90063477]
[187.32690430 -23.65685463]
[176.52294922 -13.25134850]
[162.11259460 -9.08702660]
[147.42356873 -12.12554264]
[135.84796143 -21.66522217]
[130.05862427 -35.50491333]
[125.96031189 -49.93418503]
[122.63916016 -35.30647278]
[119.31800079 -20.67876053]
[115.99684906 -6.05104971]
[112.67569733 8.57666111]
[109.35453796 23.20437241]
[106.03338623 37.83208466]
[102.71223450 52.45979691]
[99.39107513 67.08750916]
[108.14840698 65.70292664]
[117.52315521 66.74944305]
[126.82165527 70.43439484]
[135.29020691 76.76456451]
[142.17314148 85.53074646]
[146.77445984 96.30890656]
[161.19410706 100.44091034]
[175.61376953 104.57291412]
[190.03343201 108.70491791]
[205.80509949 104.21195984]
[217.39204407 115.81690216]
[212.87461853 131.58157349]
[196.89996338 135.28863525]
[185.90142822 123.12458038]
[171.48176575 118.99256897]
[157.06210327 114.86056519]
[142.64245605 110.72856140]
[135.31541443 123.81804657]
[127.98902893 136.90635681]
[139.05043030 147.03776550]
[150.11184692 157.16917419]
[161.17324829 167.30056763]
[172.23464966 177.43197632]
[188.26080322 178.16795349]
[197.56051636 191.24064636]
[192.99981689 206.62178040]
[178.07730103 212.51229858]
[164.24023438 204.39346313]
[162.10324097 188.49337769]
[151.04183960 178.36198425]
[139.98043823 168.23057556]
[128.91903687 158.09916687]
[117.85762787 147.96777344]
[103.22991943 151.28892517]
[97.62807465 165.20364380]
[92.02622986 179.11834717]
[86.42438507 193.03306580]
[90.75262451 205.19136047]
[85.79163361 216.66993713]
[74.70459747 221.52580261]
[68.88157654 235.34942627]
[74.59982300 249.83871460]
[68.49752808 263.77487183]
[54.64896774 269.13705444]
[48.82594299 282.96066284]
[43.00292206 296.78430176]
[37.17989731 310.60791016]
[46.29407120 319.08602905]
[52.35189056 329.93228149]
[54.78087234 342.09088135]
[53.36095428 354.38354492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[30 192]
[31 191]
[32 190]
[33 189]
[36 186]
[37 185]
[39 182]
[40 181]
[41 180]
[42 179]
[44 65]
[45 64]
[46 63]
[47 62]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 104]
[76 103]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[151 162]
[152 161]
[153 160]
[154 159]
[164 178]
[165 177]
[166 176]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
