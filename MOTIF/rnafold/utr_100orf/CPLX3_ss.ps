%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGUCCGCGAAACCUAGUGCUGAAGUAGGCGCGGACGUGCCCGGUGCCUGGCGCGUGGUAGCAGGCGCCCGGUGCCCCGGCCGGCGAAGACCAUGGCGUUCAUGGUGAAGACCAUGGUGGGCGGCCAGCUGAAGAACCUCACUGGGAGCCUGGGAGGCGGCGAGGAUAAGGGAGAUGGGGACAAGUCGGCAG\
) } def
/len { sequence length } bind def

/coor [
[40.92219162 252.58734131]
[49.36045837 238.52577209]
[49.11880875 223.52770996]
[48.87715912 208.52966309]
[34.72748184 203.55104065]
[25.14751244 215.09332275]
[15.56754494 226.63560486]
[5.98757696 238.17788696]
[-3.59239078 249.72015381]
[-13.17235851 261.26245117]
[-22.75232697 272.80471802]
[-23.63250542 277.97686768]
[-26.16214180 281.89572144]
[-29.58412743 284.14181519]
[-33.08472061 284.65859985]
[-43.21114731 295.72454834]
[-53.33757401 306.79052734]
[-63.46400070 317.85647583]
[-59.42090988 332.74462891]
[-64.09056854 347.44830322]
[-75.98291016 357.27560425]
[-91.30313110 359.09066772]
[-105.16259766 352.31433105]
[-113.13880920 339.10891724]
[-112.68659210 323.68817139]
[-103.95023346 310.97283936]
[-89.71748352 305.02032471]
[-74.52996063 307.73004150]
[-64.40353394 296.66409302]
[-54.27710724 285.59814453]
[-44.15068054 274.53216553]
[-34.29460526 263.22476196]
[-24.71463776 251.68247986]
[-15.13467026 240.14019775]
[-5.55470276 228.59791565]
[4.02526522 217.05563354]
[13.60523319 205.51335144]
[23.18519974 193.97106934]
[55.23083496 179.77874756]
[61.77017975 166.27922058]
[60.35539246 151.45196533]
[73.33498383 142.40538025]
[79.87432861 128.90585327]
[86.41366577 115.40634155]
[81.20774841 101.33870697]
[67.45586395 95.34823608]
[53.70397949 89.35776520]
[39.95209885 83.36730194]
[26.20021439 77.37683105]
[12.44833088 71.38636017]
[-3.29356265 72.96855927]
[-11.87182236 60.79224014]
[-25.62370491 54.80176926]
[-39.37558746 48.81130219]
[-53.12747192 42.82083130]
[-66.87935638 36.83036423]
[-82.62124634 38.41255951]
[-91.19950867 26.23624229]
[-104.95139313 20.24577332]
[-121.17659760 22.62791443]
[-131.13862610 9.60139847]
[-124.58938599 -5.43321180]
[-108.26618195 -7.00959826]
[-98.96092224 6.49389029]
[-85.20903778 12.48435879]
[-70.45077515 10.47368431]
[-60.88888550 23.07848167]
[-47.13700104 29.06895065]
[-33.38512039 35.05941772]
[-19.63323593 41.04988861]
[-5.88135386 47.04035568]
[8.87691307 45.02968216]
[18.43880081 57.63447952]
[32.19068146 63.62494659]
[45.94256592 69.61541748]
[59.69445038 75.60588074]
[73.44633484 81.59635162]
[87.19821167 87.58682251]
[87.89332581 77.51734161]
[93.81674194 67.34177399]
[98.10592651 52.96809006]
[102.39511871 38.59440231]
[106.68430328 24.22071457]
[103.21616364 8.78430939]
[114.26970673 -1.19909835]
[118.55889130 -15.57278538]
[122.84807587 -29.94647408]
[111.37020874 -41.83938217]
[107.47463226 -57.80540466]
[112.13175964 -73.46824646]
[123.98091888 -84.58366394]
[139.72615051 -88.18951416]
[143.78321838 -102.63043976]
[147.84028625 -117.07135773]
[151.89735413 -131.51228333]
[155.95442200 -145.95320129]
[160.01148987 -160.39411926]
[164.06855774 -174.83503723]
[156.59124756 -188.49987793]
[160.91140747 -203.08723450]
[173.98481750 -210.13148499]
[178.04188538 -224.57240295]
[182.09895325 -239.01332092]
[186.15602112 -253.45423889]
[184.61907959 -270.33837891]
[200.41790771 -276.48925781]
[210.70195007 -263.01058960]
[200.59695435 -249.39717102]
[196.53988647 -234.95625305]
[192.48281860 -220.51533508]
[188.42575073 -206.07441711]
[195.91787720 -193.25242615]
[192.00915527 -178.54948425]
[178.50947571 -170.77796936]
[174.45240784 -156.33705139]
[170.39533997 -141.89613342]
[166.33827209 -127.45520782]
[162.28120422 -113.01428986]
[158.22413635 -98.57337189]
[154.16706848 -84.13244629]
[164.33464050 -75.00380707]
[169.59977722 -62.32297516]
[168.88131714 -48.54506302]
[162.26261902 -36.36430740]
[150.98640442 -28.18724060]
[137.22177124 -25.65728760]
[132.93258667 -11.28360081]
[128.64340210 3.09008694]
[132.41831970 17.49839020]
[121.05799103 28.50989914]
[116.76880646 42.88358688]
[112.47961426 57.25727463]
[108.19042969 71.63095856]
[111.99263000 78.09573364]
[121.93961334 66.86819458]
[135.69134521 72.85900879]
[134.24307251 87.78893280]
[119.59703064 91.02527618]
[123.39923096 97.49005127]
[138.04583740 100.72681427]
[152.69245911 103.96357727]
[167.33908081 107.20034027]
[182.48371887 102.62318420]
[193.24156189 112.92454529]
[207.88818359 116.16130829]
[212.00692749 114.69382477]
[215.97726440 114.62818146]
[219.37455750 115.74394226]
[221.89019775 117.70485687]
[223.35942078 120.10708618]
[237.76718140 124.28034973]
[252.17495728 128.45361328]
[266.58273315 132.62687683]
[283.47869873 131.22598267]
[289.50210571 147.07383728]
[275.94104004 157.24899292]
[262.40945435 147.03465271]
[248.00169373 142.86138916]
[233.59393311 138.68812561]
[219.18615723 134.51486206]
[204.65141296 130.80792236]
[190.00480652 127.57115936]
[175.90777588 132.37983704]
[164.10231018 121.84695435]
[149.45570374 118.61019135]
[134.80908203 115.37342834]
[120.16246796 112.13666534]
[131.46429443 121.99915314]
[145.21438599 127.99374390]
[154.32968140 139.90640259]
[156.52102661 154.74546814]
[151.23811340 168.78437805]
[139.80764771 178.49748230]
[125.10019684 181.44551086]
[110.80928802 176.88812256]
[100.52382660 165.96981812]
[96.82683563 151.43255615]
[100.64638519 136.92774963]
[99.91318512 121.94568634]
[93.37384796 135.44520569]
[86.83450317 148.94471741]
[87.78155518 164.73754883]
[75.26969910 172.81857300]
[68.73035431 186.31808472]
[83.11229706 182.05667114]
[95.95873260 189.80064392]
[98.90592194 204.50825500]
[90.03509521 216.60406494]
[75.12163544 218.21301270]
[63.87520981 208.28800964]
[64.11685944 223.28605652]
[64.35851288 238.28411865]
[73.24539948 252.06654358]
[65.51325226 266.52841187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[15 31]
[16 30]
[17 29]
[18 28]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[58 65]
[59 64]
[80 133]
[81 132]
[82 131]
[83 130]
[85 128]
[86 127]
[87 126]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[101 111]
[102 110]
[103 109]
[104 108]
[139 167]
[140 166]
[141 165]
[142 164]
[144 162]
[145 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
