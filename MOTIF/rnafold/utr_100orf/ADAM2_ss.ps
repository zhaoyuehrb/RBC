%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUACCUCUUCCAGGCUGCGUGGCCGGGGCGUCAUCUCGCGCUUCCAACUGCCCUGUAACCACCAACUGCCAUUAUUCCGGCUGGGACCCAGGACUUCAAGCCAUGUGGCGCGUCUUGUUUCUGCUCAGCGGGCUCGGCGGGCUGCGGAUGGACAGUAAUUUUGAUAGUUUACCUGUGCAAAUUACAGUUCCGGAGAAAAUAC\
) } def
/len { sequence length } bind def

/coor [
[95.26860809 152.43028259]
[91.18318176 166.86320496]
[87.09774780 181.29612732]
[83.01231384 195.72904968]
[93.30513000 207.22084045]
[95.72850800 222.45668030]
[89.50914001 236.57487488]
[76.63161469 245.07032776]
[61.20510101 245.23220825]
[48.15214157 237.00883484]
[41.63788986 223.02426147]
[43.74102020 207.74093628]
[53.79043198 196.03567505]
[68.57939148 191.64361572]
[72.66482544 177.21069336]
[76.75025940 162.77777100]
[80.83568573 148.34484863]
[70.18852997 137.77896118]
[55.78733444 141.97486877]
[48.41942978 147.38233948]
[41.13323212 146.12290955]
[26.66942978 150.09762573]
[12.20562744 154.07235718]
[-2.25817537 158.04707336]
[-15.75352669 173.01747131]
[-34.23345947 167.33654785]
[-48.56866455 171.75265503]
[-62.90386963 176.16874695]
[-77.23907471 180.58483887]
[-91.57427979 185.00094604]
[-105.90948486 189.41703796]
[-120.24468231 193.83312988]
[-120.45826721 208.95959473]
[-125.33764648 223.27905273]
[-134.40478516 235.38864136]
[-146.77139282 244.10197449]
[-161.22589111 248.56542969]
[-176.35220337 248.34172058]
[-190.66838074 243.45274353]
[-202.77189636 234.37748718]
[-211.47694397 222.00505066]
[-215.93072510 207.54756165]
[-215.69686890 192.42141724]
[-210.79830933 178.10850525]
[-201.71493530 166.01107788]
[-189.33666992 157.31431580]
[-174.87620544 152.87023926]
[-159.75021362 153.11422729]
[-145.44058228 158.02236938]
[-133.34924316 167.11384583]
[-124.66078186 179.49792480]
[-110.32557678 175.08183289]
[-95.99037170 170.66574097]
[-81.65516663 166.24963379]
[-67.31996155 161.83354187]
[-52.98476028 157.41744995]
[-38.64955521 153.00134277]
[-34.70040894 143.57075500]
[-26.02882004 137.75056458]
[-15.36582661 137.66476440]
[-6.23289776 143.58326721]
[8.23090458 139.60855103]
[22.69470787 135.63381958]
[37.15850830 131.65910339]
[51.59143066 127.57366943]
[65.99262238 123.37776947]
[68.82874298 87.74285889]
[94.40540314 74.89439392]
[95.55364227 59.93840790]
[96.70187378 44.98242188]
[97.85011292 30.02643394]
[98.99835205 15.07044601]
[89.10124969 9.26982594]
[82.11684418 0.23417234]
[79.02490234 -10.70635319]
[80.23569489 -21.95911980]
[85.53601837 -31.90085793]
[94.12552643 -39.11182404]
[104.73736572 -42.57851791]
[106.57174683 -57.46593094]
[100.58016968 -72.10873413]
[109.81583405 -83.79426575]
[111.65020752 -98.68167877]
[113.48458862 -113.56909180]
[115.31896973 -128.45649719]
[117.15334320 -143.34391785]
[118.98772430 -158.23132324]
[104.45448303 -170.67832947]
[100.38605499 -189.22206116]
[108.24832916 -206.33728027]
[124.70282745 -215.18969727]
[125.85106659 -230.14567566]
[126.99930573 -245.10166931]
[128.14753723 -260.05764771]
[129.29577637 -275.01364136]
[130.44401550 -289.96963501]
[121.69281006 -296.08660889]
[116.31343842 -305.21594238]
[115.21983337 -315.67446899]
[118.54282379 -325.56597900]
[125.61856079 -333.12503052]
[135.11985779 -337.03195190]
[136.95423889 -351.91934204]
[138.78862000 -366.80676270]
[131.89271545 -381.68554688]
[141.55017090 -394.93945312]
[157.82623291 -392.93395996]
[163.97747803 -377.73217773]
[153.67604065 -364.97238159]
[151.84165955 -350.08499146]
[150.00727844 -335.19757080]
[163.09043884 -320.76876831]
[161.32432556 -301.06552124]
[145.40000916 -288.82138062]
[144.25177002 -273.86538696]
[143.10353088 -258.90942383]
[141.95529175 -243.95343018]
[140.80705261 -228.99743652]
[139.65881348 -214.04145813]
[149.37466431 -208.54316711]
[156.36717224 -199.77488708]
[159.59512329 -188.98081970]
[158.55494690 -177.71099854]
[153.35894775 -167.59878540]
[144.72447205 -160.12413025]
[133.87513733 -156.39695740]
[132.04075623 -141.50953674]
[130.20637512 -126.62212372]
[128.37200928 -111.73471069]
[126.53762054 -96.84729767]
[124.70324707 -81.95988464]
[130.82603455 -68.38193512]
[121.45915222 -55.63155365]
[119.62477875 -40.74414062]
[134.00186157 -28.81035995]
[138.32138062 -10.47765732]
[130.66348267 6.89411497]
[113.95433807 16.21868515]
[112.80610657 31.17467117]
[111.65786743 46.13065720]
[110.50962830 61.08664703]
[109.36138916 76.04263306]
[132.63276672 92.45104218]
[130.37382507 127.93656921]
[143.44015503 135.30346680]
[159.26132202 135.34121704]
[166.54791260 148.33178711]
[179.61422729 155.69868469]
[192.68055725 163.06558228]
[205.74688721 170.43246460]
[210.97595215 170.37678528]
[215.27200317 172.15710449]
[218.09133911 175.10943604]
[219.23315430 178.45011902]
[231.94709778 186.40974426]
[247.74981689 187.17457581]
[254.43167114 200.48629761]
[267.14562988 208.44590759]
[279.85955811 216.40553284]
[292.57351685 224.36514282]
[305.28747559 232.32475281]
[318.00143433 240.28437805]
[330.71536255 248.24398804]
[345.93286133 244.91749573]
[358.71322632 253.17079163]
[361.79074097 267.69885254]
[374.50469971 275.65847778]
[387.21865845 283.61807251]
[399.93258667 291.57769775]
[415.82687378 289.39788818]
[427.34118652 300.56927490]
[425.64273071 316.52218628]
[412.03442383 325.01885986]
[396.95541382 319.54141235]
[391.97299194 304.29165649]
[379.25903320 296.33203125]
[366.54507446 288.37240601]
[353.83114624 280.41281128]
[339.41818237 283.99087524]
[326.41104126 276.09982300]
[322.75576782 260.95794678]
[310.04180908 252.99832153]
[297.32785034 245.03871155]
[284.61389160 237.07908630]
[271.89996338 229.11947632]
[259.18600464 221.15986633]
[246.47206116 213.20024109]
[231.57873535 213.00474548]
[223.98748779 199.12368774]
[211.27352905 191.16407776]
[198.37998962 183.49879456]
[185.31365967 176.13189697]
[172.24734497 168.76501465]
[159.18101501 161.39811707]
[144.29444885 161.88728333]
[136.07325745 148.36979675]
[123.00693512 141.00289917]
[116.07235718 143.85974121]
[124.00725555 156.58912659]
[134.64918518 167.16027832]
[131.73338318 181.87416077]
[117.86428833 187.58802795]
[105.43006897 179.19813538]
[105.53739929 164.19818115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[18 66]
[19 65]
[21 64]
[22 63]
[23 62]
[24 61]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[79 134]
[80 133]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[102 111]
[103 110]
[104 109]
[144 197]
[145 196]
[147 194]
[148 193]
[149 192]
[150 191]
[154 190]
[155 189]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[163 181]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
