%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGCGCGACGUGCUUUGCUGUAUAAAUGCGGUGGCGCCCGGCGUAGGGACACUUCGGUCCUGAGCGCUUGGGAGUUAGGUUGUUUGCCGGCGUAGCGGCCAGCGCCUGAGCCCGCCCUUGAUCUUCGCUGUGGCAUGGCGGACGAGGGGAAGUCGUACAGCGAACACGAUGAUGAACGCGUUAAUUUCCCUCAAAGAAAGAAGAAAGGCCGGGGUCCCUUCCGGUGGAAAUAUG\
) } def
/len { sequence length } bind def

/coor [
[334.19235229 388.64376831]
[336.61300659 380.69610596]
[327.22738647 368.99523926]
[317.84176636 357.29437256]
[308.45614624 345.59350586]
[299.07052612 333.89266968]
[289.68490601 322.19180298]
[279.91674805 310.80834961]
[269.77679443 299.75479126]
[255.47152710 295.60638428]
[251.84429932 280.20660400]
[241.70434570 269.15304565]
[231.56437683 258.09945679]
[221.42442322 247.04591370]
[214.59892273 244.24662781]
[211.22450256 235.77798462]
[201.23196411 224.59097290]
[191.23941040 213.40397644]
[181.24685669 202.21697998]
[171.25430298 191.02998352]
[161.26174927 179.84298706]
[151.26919556 168.65599060]
[141.27665710 157.46899414]
[131.28410339 146.28199768]
[121.29154968 135.09500122]
[111.74092102 139.33369446]
[101.42951965 141.02371216]
[91.02549744 140.05554199]
[81.20298767 136.49192810]
[72.59844971 130.56376648]
[60.71329880 139.71488953]
[48.82814407 148.86602783]
[43.08121872 164.22521973]
[26.86391258 166.66058350]
[16.85919952 153.66682434]
[23.35907173 138.61080933]
[39.67701721 136.98086548]
[51.56217194 127.82974243]
[63.44732285 118.67861176]
[56.95927811 109.08386993]
[53.14553070 97.35402679]
[52.67517853 84.27371979]
[37.73082352 85.56454468]
[22.78646851 86.85537720]
[7.84211254 88.14620209]
[-7.10224295 89.43703461]
[-21.96027565 100.32847595]
[-37.55215454 92.25840759]
[-52.47808838 93.74720764]
[-67.40402222 95.23601532]
[-82.32995605 96.72482300]
[-97.25588226 98.21363068]
[-107.07163239 110.60018158]
[-122.78041840 112.33499908]
[-135.06250000 102.38883972]
[-136.63113403 86.66259003]
[-126.55567932 74.48635864]
[-110.81372833 73.08407593]
[-98.74468994 83.28769684]
[-83.81876373 81.79889679]
[-68.89282990 80.31008911]
[-53.96689606 78.82128143]
[-39.04096222 77.33247375]
[-31.14823723 68.18037415]
[-18.73790741 66.80852509]
[-8.39307213 74.49267578]
[6.55128336 73.20185089]
[21.49563980 71.91101837]
[36.43999481 70.62019348]
[51.38434982 69.32936096]
[57.37622070 55.57809067]
[48.14652252 43.75385284]
[38.91682434 31.92961121]
[29.68712616 20.10536957]
[17.01574135 17.76061630]
[9.57071686 7.73715258]
[10.89988899 -4.27489662]
[1.82773495 -16.22043991]
[-7.24441910 -28.16598511]
[-16.31657219 -40.11153030]
[-25.38872719 -52.05707169]
[-34.46088028 -64.00261688]
[-42.12897491 -68.93262482]
[-43.57286835 -76.16716766]
[-52.48588181 -88.23191071]
[-61.39889908 -100.29666138]
[-75.82221222 -106.79885864]
[-77.16152954 -121.63312531]
[-86.07454681 -133.69787598]
[-94.98756409 -145.76261902]
[-103.90058136 -157.82737732]
[-119.56473541 -159.92733765]
[-129.08952332 -172.53898621]
[-126.82407379 -188.18006897]
[-114.11241913 -197.57098389]
[-98.49617004 -195.14028931]
[-89.24016571 -182.33006287]
[-91.83583069 -166.74038696]
[-82.92281342 -154.67564392]
[-74.00980377 -142.61088562]
[-65.09678650 -130.54614258]
[-51.31098938 -124.90689850]
[-49.33414841 -109.20967865]
[-40.42113495 -97.14492798]
[-31.50811958 -85.08017731]
[-22.51533699 -73.07476807]
[-13.44318295 -61.12922668]
[-4.37102890 -49.18368149]
[4.70112514 -37.23814011]
[13.77327919 -25.29259491]
[22.84543228 -13.34705067]
[39.37200165 -7.42207956]
[41.51136780 10.87567139]
[50.74106598 22.69991112]
[59.97076416 34.52415085]
[69.20046234 46.34839249]
[84.06887054 44.36585999]
[89.87793732 30.53637314]
[95.68700409 16.70688629]
[101.49607086 2.87739778]
[107.30513763 -10.95209026]
[113.11420441 -24.78157806]
[112.46312714 -29.92493439]
[113.71421814 -34.36552811]
[116.28524780 -37.49911499]
[119.43897247 -39.03805542]
[125.79325867 -52.62565994]
[132.14753723 -66.21326447]
[138.50183105 -79.80087280]
[144.85612488 -93.38848114]
[151.21040344 -106.97608185]
[157.56469727 -120.56369019]
[163.91897583 -134.15129089]
[165.15171814 -151.06036377]
[181.74124146 -154.55670166]
[189.69335938 -139.58338928]
[177.50659180 -127.79701233]
[171.15229797 -114.20940399]
[164.79800415 -100.62179565]
[158.44372559 -87.03418732]
[152.08943176 -73.44658661]
[145.73515320 -59.85897827]
[139.38085938 -46.27137375]
[133.02658081 -32.68376923]
[126.94369507 -18.97250938]
[121.13462830 -5.14302254]
[115.32556152 8.68646526]
[109.51649475 22.51595306]
[103.70742798 36.34543991]
[97.89836121 50.17493057]
[113.53923035 53.31435013]
[126.99601746 61.10066986]
[136.97636414 72.48728943]
[142.61944580 86.09977722]
[143.56700134 100.39870453]
[139.97662354 113.85272217]
[132.47854614 125.10244751]
[142.47109985 136.28944397]
[152.46365356 147.47644043]
[162.45620728 158.66343689]
[172.44874573 169.85043335]
[182.44129944 181.03742981]
[192.43385315 192.22442627]
[202.42640686 203.41143799]
[212.41896057 214.59843445]
[222.41149902 225.78543091]
[232.47798157 236.90594482]
[242.61793518 247.95951843]
[252.75790405 259.01306152]
[262.89785767 270.06661987]
[277.92837524 275.00564575]
[280.83035278 289.61480713]
[290.97030640 300.66836548]
[294.11376953 286.00146484]
[307.47949219 279.19281006]
[321.19186401 285.27319336]
[325.11911011 299.74996948]
[316.35952759 311.92657471]
[301.38574219 312.80618286]
[310.77136230 324.50704956]
[320.15698242 336.20788574]
[329.54260254 347.90875244]
[338.92825317 359.60961914]
[348.31387329 371.31048584]
[369.73071289 377.93133545]
[372.08737183 399.45169067]
[382.07992554 410.63870239]
[392.07247925 421.82568359]
[402.06503296 433.01269531]
[412.05758667 444.19970703]
[422.05014038 455.38668823]
[418.16531372 440.89849854]
[418.89169312 425.91607666]
[424.15991211 411.87167358]
[433.46633911 400.10772705]
[445.92138672 391.74877930]
[460.33447266 387.59387207]
[475.32785034 388.04019165]
[489.46826172 393.04504395]
[501.40405273 402.13000488]
[509.99426270 414.42666626]
[514.41778564 428.75961304]
[514.25170898 443.75866699]
[509.51199341 457.99014282]
[500.65164185 470.09362793]
[488.51766968 478.91213989]
[474.26989746 483.60272217]
[459.27032471 483.71697998]
[444.95278931 479.24401855]
[432.68496704 470.61053467]
[439.75042725 483.84228516]
[446.81588745 497.07403564]
[453.88137817 510.30578613]
[460.94683838 523.53753662]
[468.01229858 536.76928711]
[475.07778931 550.00103760]
[489.27871704 558.20257568]
[489.00585938 574.59942627]
[474.53991699 582.32397461]
[460.76217651 573.42980957]
[461.84603882 557.06652832]
[454.78054810 543.83477783]
[447.71508789 530.60302734]
[440.64962769 517.37127686]
[433.58413696 504.13952637]
[426.51867676 490.90777588]
[419.45321655 477.67602539]
[410.86312866 465.37924194]
[400.87057495 454.19223022]
[390.87805176 443.00524902]
[380.88549805 431.81823730]
[370.89294434 420.63125610]
[360.90039062 409.44424438]
[353.15948486 410.68179321]
[345.46624756 408.74618530]
[339.08349609 403.87902832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 173]
[9 172]
[11 170]
[12 169]
[13 168]
[14 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[30 39]
[31 38]
[32 37]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[71 116]
[72 115]
[73 114]
[74 113]
[77 111]
[78 110]
[79 109]
[80 108]
[81 107]
[82 106]
[84 105]
[85 104]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[117 150]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[186 233]
[187 232]
[188 231]
[189 230]
[190 229]
[191 228]
[210 227]
[211 226]
[212 225]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
