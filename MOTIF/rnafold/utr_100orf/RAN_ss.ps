%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUUGCAACCCCGCCCCGCGCCGGCCCCGCCCCUGCUCUCGCGCCGGCGUCGGCUGCGUCUCCGGCGUUUGAAUUGCGCUUCCGCCAUCUUUCCAGCCUCAGUCGGACGGGCGCGGAGACGCUUCUGGAAGGAACGCCGCGAUGGCUGCGCAGGGAGAGCCCCAGGUCCAGUUCAAACUUGUAUUGGUUGGUGAUGGUGGUACUGGAAAAACGACCUUCGUGAAACGUCAUUUGACUGGUG\
) } def
/len { sequence length } bind def

/coor [
[28.42670631 90.03674316]
[21.25734901 78.66066742]
[20.64476395 65.33616638]
[7.40458107 58.28651428]
[-5.83560085 51.23686600]
[-19.07578278 44.18721390]
[-32.31596375 37.13756180]
[-45.55614471 30.08791161]
[-35.68951416 41.38612366]
[-35.94617081 56.38392639]
[-46.19360733 67.33792114]
[-61.14104462 68.59254456]
[-73.07109070 59.50001907]
[-75.82424164 44.75484467]
[-67.97739410 31.96873856]
[-79.85807800 41.12567520]
[-91.73875427 50.28261185]
[-94.16019440 62.93679810]
[-104.22568512 70.32040405]
[-116.22721100 68.92166138]
[-128.22479248 77.92487335]
[-140.22238159 86.92808533]
[-152.21997070 95.93130493]
[-164.21755981 104.93451691]
[-176.21514893 113.93772888]
[-188.21273804 122.94094849]
[-200.21032715 131.94415283]
[-202.24279785 136.70460510]
[-205.55871582 139.90249634]
[-209.35382080 141.31095886]
[-212.84956360 141.05271912]
[-225.18588257 149.58592224]
[-223.85488892 164.88702393]
[-230.36730957 178.79687500]
[-242.97132874 187.57379150]
[-258.27655029 188.85681152]
[-272.16592407 182.30082703]
[-280.90325928 169.66935730]
[-282.13830566 154.36019897]
[-275.53881836 140.49143982]
[-262.88003540 131.79371643]
[-247.56707764 130.60667419]
[-233.71907043 137.24960327]
[-221.38276672 128.71641541]
[-209.21354675 119.94657135]
[-197.21595764 110.94335938]
[-185.21836853 101.94013977]
[-173.22077942 92.93692780]
[-161.22319031 83.93371582]
[-149.22560120 74.93050385]
[-137.22801208 65.92728424]
[-125.23042297 56.92407227]
[-119.20793152 40.43091583]
[-100.89569092 38.40193558]
[-89.01501465 29.24499702]
[-77.13433838 20.08806038]
[-70.22898102 13.86056995]
[-62.40882492 12.57137585]
[-68.94192505 -0.93116385]
[-75.56182098 -14.39136600]
[-82.26822662 -27.80867195]
[-88.97463226 -41.22597885]
[-95.76728058 -54.59983444]
[-102.64587402 -67.92967987]
[-109.61014557 -81.21497345]
[-116.65979767 -94.45515442]
[-123.70944977 -107.69533539]
[-130.75909424 -120.93551636]
[-137.80874634 -134.17570496]
[-144.85839844 -147.41587830]
[-151.90805054 -160.65606689]
[-158.95770264 -173.89624023]
[-177.59318542 -172.49760437]
[-194.90637207 -179.39546204]
[-207.40544128 -193.15028381]
[-212.59072876 -210.94453430]
[-209.45455933 -229.15969849]
[-198.67669678 -244.11216736]
[-206.39859009 -256.97189331]
[-214.12048340 -269.83160400]
[-227.85801697 -277.67959595]
[-227.77662659 -292.57397461]
[-235.49851990 -305.43368530]
[-243.22041321 -318.29342651]
[-250.94229126 -331.15313721]
[-258.66418457 -344.01284790]
[-266.38607788 -356.87255859]
[-278.67544556 -360.74084473]
[-284.84576416 -371.59252930]
[-282.06878662 -383.35183716]
[-289.62448120 -396.30990601]
[-297.18014526 -409.26797485]
[-310.81552124 -417.29217529]
[-310.54235840 -432.18429565]
[-318.09802246 -445.14236450]
[-325.65371704 -458.10043335]
[-339.28906250 -466.12463379]
[-339.01593018 -481.01672363]
[-346.57159424 -493.97479248]
[-361.06951904 -501.63916016]
[-361.41046143 -518.03479004]
[-347.24371338 -526.29522705]
[-333.14279175 -517.92285156]
[-333.61352539 -501.53048706]
[-326.05783081 -488.57241821]
[-312.96292114 -481.47506714]
[-312.69564819 -465.65609741]
[-305.13995361 -452.69802856]
[-297.58428955 -439.73995972]
[-284.48937988 -432.64260864]
[-284.22207642 -416.82366943]
[-276.66641235 -403.86560059]
[-269.11071777 -390.90750122]
[-253.42448425 -383.01849365]
[-253.52636719 -364.59445190]
[-245.80447388 -351.73474121]
[-238.08258057 -338.87503052]
[-230.36068726 -326.01531982]
[-222.63879395 -313.15557861]
[-214.91690063 -300.29586792]
[-201.73168945 -293.36770630]
[-201.26077271 -277.55349731]
[-193.53887939 -264.69378662]
[-185.81698608 -251.83406067]
[-174.56532288 -254.35954285]
[-163.03665161 -253.64456177]
[-152.14707947 -249.73521423]
[-142.76492310 -242.93182373]
[-135.64147949 -233.76593018]
[-131.35087585 -222.95880127]
[-130.24375916 -211.36460876]
[-132.41873169 -199.90299988]
[-137.71360779 -189.48608398]
[-145.71752930 -180.94589233]
[-138.66787720 -167.70571899]
[-131.61822510 -154.46553040]
[-124.56856537 -141.22535706]
[-117.51892090 -127.98516846]
[-110.46926880 -114.74498749]
[-103.41961670 -101.50480652]
[-96.36996460 -88.26462555]
[-90.46523285 -83.84745026]
[-89.31602478 -74.80828094]
[-82.43743134 -61.47843170]
[-76.59006500 -56.98559952]
[-75.55732727 -47.93238449]
[-68.85092163 -34.51507950]
[-62.14451218 -21.09777260]
[-56.35547638 -16.53002548]
[-55.43938828 -7.46426678]
[-48.90628433 6.03827238]
[-38.50649643 16.84772873]
[-25.26631355 23.89738083]
[-12.02613163 30.94703102]
[1.21405041 37.99668121]
[14.45423222 45.04633331]
[27.69441414 52.09598541]
[42.22623444 44.43871689]
[58.62178421 46.98542786]
[70.37958527 58.92701721]
[72.71772766 75.68958282]
[86.04757690 82.56818390]
[99.37742615 89.44678497]
[113.80636597 93.54626465]
[128.76162720 94.70389557]
[143.71688843 95.86152649]
[158.67214966 97.01915741]
[170.61286926 87.01630402]
[185.76313782 88.40335083]
[195.22573853 99.84864044]
[210.18101501 101.00627136]
[225.13627625 102.16390228]
[238.22509766 90.54197693]
[255.33180237 91.96512604]
[265.89553833 105.06394958]
[280.86447144 106.02893829]
[295.83337402 106.99392700]
[310.81350708 107.76610565]
[325.80230713 108.34535217]
[340.79110718 108.92459869]
[355.77993774 109.50385284]
[367.20675659 98.58583069]
[383.00482178 99.02913666]
[393.80142212 110.57076263]
[393.19113159 126.36325836]
[381.53598022 137.03723145]
[365.75082397 136.25999451]
[355.20068359 124.49266052]
[340.21188354 123.91341400]
[325.22305298 123.33416748]
[310.23425293 122.75491333]
[306.19702148 125.26884460]
[300.54162598 125.28826904]
[294.86840820 121.96285248]
[279.89947510 120.99786377]
[264.93054199 120.03287506]
[256.54797363 129.80184937]
[243.88192749 133.01364136]
[231.49386597 128.28076172]
[223.97863770 117.11916351]
[209.02337646 115.96153259]
[194.06811523 114.80390167]
[182.95690918 124.65664673]
[167.77365112 123.69568634]
[157.51452637 111.97442627]
[142.55926514 110.81678772]
[127.60399628 109.65915680]
[112.64873505 108.50152588]
[109.12390900 115.12162018]
[122.36398315 122.17147064]
[115.31391907 135.41143799]
[102.07425690 128.36180115]
[98.54943085 134.98188782]
[107.85857391 146.74368286]
[117.16771698 158.50547791]
[126.47686005 170.26728821]
[141.04782104 178.93464661]
[136.75283813 195.33554077]
[119.80391693 195.74861145]
[114.71505737 179.57643127]
[105.40591431 167.81462097]
[96.09677887 156.05282593]
[86.78763580 144.29103088]
[80.10070801 147.68736267]
[86.89334869 161.06120300]
[86.08905029 176.03962708]
[73.51949310 167.85385132]
[66.72685242 154.47999573]
[60.03992462 157.87632751]
[64.04643250 172.33134460]
[68.05294037 186.78637695]
[80.12093353 197.89022827]
[76.27515411 213.83206177]
[60.47180939 218.21228027]
[48.96802521 206.52490234]
[53.59790802 190.79289246]
[49.59140015 176.33786011]
[45.58489227 161.88282776]
[62.74525833 125.59803772]
[92.49882507 102.77663422]
[79.16897583 95.89803314]
[65.83912659 89.01943207]
[54.03252029 96.10827637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[15 56]
[16 55]
[17 54]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[31 44]
[32 43]
[58 151]
[59 150]
[60 148]
[61 147]
[62 146]
[63 144]
[64 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[78 124]
[79 123]
[80 122]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[90 113]
[91 112]
[92 111]
[94 109]
[95 108]
[96 107]
[98 105]
[99 104]
[161 242]
[162 241]
[163 240]
[164 208]
[165 207]
[166 206]
[167 205]
[170 202]
[171 201]
[172 200]
[175 196]
[176 195]
[177 194]
[178 191]
[179 190]
[180 189]
[181 188]
[213 223]
[214 222]
[215 221]
[216 220]
[229 238]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
