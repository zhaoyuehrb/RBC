%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUGACUGUAAAGGAACCAAUGUGAAGAGUGGUGUUUCCUGAGCAAACGGUGACUUAAAAAAAAAAAAAAAAAAGUGGUGGGGUGGAGGUCAGCAGUGCCACAGAACAAACUGGAGUUAAGAAAUGUCGUUCUUCAGAUUUAAAAAGAAAACCUUUACUGAAUCAGCUGAGUGUUAAUAAUACGAAUUUCCUUUUCUUGCCAAUUCUGAUCUGAACAGAAAAUCCAAGAACAGGGAUAUGUGUGGAUUACAGU\
UUUCUCUGCCUUGCCUACGACUGUUUCUGGUUGUUACCUGUUAUCUUUUAUUAUUACUCCACAAAGAAAUACUUGGAUGUUCGU\
) } def
/len { sequence length } bind def

/coor [
[31.33460808 1263.49267578]
[16.61842918 1258.86254883]
[6.75916910 1246.99670410]
[4.90287971 1231.68139648]
[11.64189720 1217.80383301]
[24.82582474 1209.79211426]
[25.10300827 1194.79467773]
[25.38019180 1179.79724121]
[12.55051613 1172.22985840]
[5.18219614 1159.16979980]
[5.34131622 1144.07543945]
[13.08527374 1131.00146484]
[26.42049217 1123.51025391]
[26.69767570 1108.51281738]
[26.97485924 1093.51538086]
[12.18744469 1088.02807617]
[0.15961631 1077.78308105]
[-7.63665628 1064.01013184]
[-10.23895836 1048.37170410]
[-7.31320477 1032.76330566]
[0.80359727 1019.08282471]
[13.14205551 1009.00030518]
[28.21613503 1003.75396729]
[28.35473251 988.75457764]
[28.49333000 973.75524902]
[28.63192749 958.75585938]
[26.02843094 954.81878662]
[25.82930374 949.21655273]
[28.91423416 943.48126221]
[29.32997894 928.48706055]
[29.74572563 913.49279785]
[30.16147041 898.49859619]
[30.57721710 883.50433350]
[30.99296188 868.51007080]
[31.40870857 853.51586914]
[31.82445526 838.52160645]
[20.47002029 833.13671875]
[11.94852257 823.83746338]
[7.54093218 811.96972656]
[7.92931271 799.26934814]
[13.09151936 787.60797119]
[22.29929733 778.71740723]
[34.22082138 773.93225098]
[34.91357422 758.94824219]
[35.60632706 743.96429443]
[25.41335678 733.16430664]
[25.90245438 717.95855713]
[37.29954910 707.34045410]
[37.99230194 692.35644531]
[38.68505096 677.37243652]
[39.30857086 662.38543701]
[39.86284256 647.39569092]
[40.41711426 632.40588379]
[40.97138977 617.41613770]
[41.52566147 602.42639160]
[42.07993317 587.43664551]
[31.16784286 597.72869873]
[17.92548943 604.77429199]
[3.29277158 608.07330322]
[-11.69173050 607.39160156]
[-25.96446800 602.77758789]
[-38.51240540 594.55877686]
[-48.44493866 583.31848145]
[-55.05708313 569.85443115]
[-57.87953568 555.12237549]
[-56.71196365 540.16790771]
[-51.63724136 526.05236816]
[-43.01555634 513.77777100]
[-31.45884132 504.21520996]
[-17.78735924 498.04345703]
[-2.97146225 495.70056152]
[11.93726444 497.35278320]
[25.88064957 502.88287354]
[37.86904144 511.89834595]
[47.05153656 523.75927734]
[52.77640152 537.62384033]
[54.63733292 552.50408936]
[56.02135849 537.56805420]
[57.33636475 522.62579346]
[58.58232498 507.67764282]
[59.82828522 492.72949219]
[61.07424545 477.78131104]
[62.32020569 462.83316040]
[63.56616592 447.88500977]
[64.81212616 432.93682861]
[66.05808258 417.98867798]
[67.30404663 403.04049683]
[68.55000305 388.09234619]
[69.79596710 373.14419556]
[71.04192352 358.19601440]
[72.28787994 343.24786377]
[64.73220062 333.85089111]
[65.60831451 321.42395020]
[74.99073792 312.63232422]
[76.37476349 297.69628906]
[77.75878906 282.76028442]
[71.22882080 269.37341309]
[80.20643616 256.34600830]
[81.59046173 241.40998840]
[82.97448730 226.47398376]
[84.22044373 211.52581787]
[85.32823181 196.56678772]
[86.43601990 181.60774231]
[87.54380798 166.64871216]
[88.65159607 151.68966675]
[75.75294495 150.33924866]
[62.93435287 145.68260193]
[51.05666733 137.70361328]
[40.98704529 126.61170197]
[33.53998566 112.84238434]
[29.41876030 97.04255676]
[29.16120529 80.04079437]
[33.09370804 62.80392075]
[41.29674149 46.38216019]
[30.40023613 36.07360840]
[19.50373268 25.76505852]
[8.60722923 15.45650864]
[-2.28927398 5.14795876]
[-15.57691479 8.67878819]
[-28.77336311 5.22586632]
[-38.47391129 -4.20983362]
[-42.23023224 -17.09822273]
[-39.16777420 -30.05788231]
[-49.96856308 -40.46667480]
[-66.00634766 -43.89035034]
[-70.80214691 -59.57257843]
[-59.42246246 -71.38082886]
[-43.57373047 -67.16778564]
[-39.55977249 -51.26746368]
[-28.75898170 -40.85866928]
[-12.66538715 -44.23482513]
[2.41110754 -37.26285172]
[10.42080498 -22.52120209]
[8.01927662 -5.74854517]
[18.91577911 4.56000519]
[29.81228256 14.86855602]
[40.70878601 25.17710495]
[51.60528946 35.48565674]
[64.24787903 27.41317749]
[59.48101044 13.19076824]
[54.71413803 -1.03164136]
[49.94726562 -15.25405121]
[45.18039703 -29.47646141]
[40.41352463 -43.69887161]
[26.33199883 -55.60845184]
[30.56447411 -72.66631317]
[25.66639328 -86.84407043]
[20.76831245 -101.02182770]
[15.87023163 -115.19958496]
[2.13067222 -123.48233795]
[0.18285945 -139.40670776]
[11.52098942 -150.75688171]
[27.44741821 -148.82597351]
[35.74475479 -135.09521484]
[30.04798889 -120.09766388]
[34.94607162 -105.91990662]
[39.84415054 -91.74214935]
[44.74223328 -77.56439209]
[55.44976044 -72.02000427]
[59.66779709 -60.29801941]
[54.63593292 -48.46574020]
[59.40280533 -34.24333191]
[64.16967773 -20.02092171]
[68.93654633 -5.79851246]
[73.70342255 8.42389679]
[78.47029114 22.64630699]
[85.94717407 22.05786324]
[84.77028656 7.10410357]
[83.59364319 -7.84967613]
[98.54744720 -9.02606583]
[99.72404480 5.92721701]
[100.90093231 20.88097763]
[108.37780762 20.29253387]
[110.86112213 5.49952269]
[113.34442902 -9.29348850]
[115.82773590 -24.08650017]
[118.31104279 -38.87951279]
[114.97036743 -55.50107193]
[130.01756287 -63.31249619]
[141.68919373 -51.01577377]
[133.10404968 -36.39620209]
[130.62074280 -21.60319138]
[128.13743591 -6.81018019]
[125.65412903 7.98283100]
[123.17082214 22.77584267]
[129.78930664 26.30367470]
[136.84518433 13.06680775]
[150.08193970 20.12288284]
[143.02629089 33.35934448]
[149.64477539 36.88717651]
[160.54127502 26.57862663]
[171.43778992 16.27007484]
[182.33428955 5.96152544]
[193.23078918 -4.34702492]
[197.93833923 -19.45164490]
[212.50122070 -22.57765770]
[223.39772034 -32.88620758]
[234.29421997 -43.19475937]
[245.19073486 -53.50330734]
[256.08721924 -63.81185913]
[266.98373413 -74.12040710]
[263.53598022 -89.02209473]
[267.98065186 -103.55280304]
[279.02838135 -113.83943176]
[293.64382935 -117.19264984]
[307.87948608 -112.80950165]
[318.77597046 -123.11805725]
[329.67248535 -133.42660522]
[340.56900024 -143.73515320]
[351.46548462 -154.04370117]
[350.35433960 -169.64175415]
[359.57119751 -182.27439880]
[374.76412964 -185.97688293]
[388.75952148 -179.00100708]
[394.94918823 -164.64057922]
[390.41052246 -149.67613220]
[377.28656006 -141.17343140]
[361.77404785 -143.14720154]
[350.87753296 -132.83865356]
[339.98104858 -122.53009796]
[329.08453369 -112.22154999]
[318.18801880 -101.91300201]
[321.77563477 -87.45634460]
[317.61770630 -73.04914093]
[306.73471069 -62.58841324]
[291.98004150 -58.95571899]
[277.29229736 -63.22390747]
[266.39578247 -52.91535568]
[255.49928284 -42.60680389]
[244.60276794 -32.29825592]
[233.70626831 -21.98970413]
[222.80976868 -11.68115425]
[218.88160706 2.68612862]
[203.53933716 6.54947853]
[192.64283752 16.85802841]
[181.74633789 27.16658020]
[170.84982300 37.47512817]
[159.95332336 47.78367996]
[171.44577026 80.01728058]
[167.86543274 111.72557068]
[151.91316223 136.66281128]
[128.53636169 150.76693726]
[103.61063385 152.79745483]
[102.50284576 167.75650024]
[101.39505768 182.71553040]
[100.28726959 197.67457581]
[99.17948151 212.63360596]
[101.66656494 218.65226746]
[100.90003967 224.20538330]
[97.91049957 227.85800171]
[96.52647400 242.79402161]
[95.14244843 257.73004150]
[101.57342529 272.18524170]
[92.69480133 284.14431763]
[91.31077576 299.08032227]
[89.92675018 314.01632690]
[97.99791718 330.59896851]
[87.23604584 344.49380493]
[85.99008942 359.44198608]
[84.74412537 374.39013672]
[83.49816895 389.33831787]
[82.25220490 404.28646851]
[81.00624847 419.23461914]
[79.76028442 434.18280029]
[78.51432800 449.13095093]
[77.26836395 464.07913208]
[76.02240753 479.02728271]
[74.77645111 493.97543335]
[73.53048706 508.92361450]
[72.28453064 523.87176514]
[74.67990875 532.62115479]
[70.95737457 538.95208740]
[69.57334900 553.88812256]
[76.81179047 567.02600098]
[90.17688751 573.83587646]
[103.54199219 580.64575195]
[116.90708923 587.45556641]
[131.85852051 582.33404541]
[146.01531982 589.35974121]
[150.97850037 604.36450195]
[143.80349731 618.44622803]
[128.74711609 623.25048828]
[114.74204254 615.92700195]
[110.09722900 600.82067871]
[96.73213196 594.01080322]
[83.36703491 587.20098877]
[70.00193787 580.39111328]
[57.06969070 587.99090576]
[56.51541519 602.98065186]
[55.96114349 617.97045898]
[55.40687180 632.96020508]
[54.85260010 647.94995117]
[54.29832840 662.93969727]
[57.09522629 671.56909180]
[53.66904831 678.06518555]
[52.97629547 693.04919434]
[52.28354263 708.03320312]
[62.65230560 719.65759277]
[61.73630142 734.84362793]
[50.59032059 744.65704346]
[49.89756775 759.64099121]
[49.20481873 774.62500000]
[64.25270081 783.80255127]
[72.50389099 799.27630615]
[71.74746704 816.70654297]
[62.28438950 831.25720215]
[46.81869125 838.93737793]
[46.40294647 853.93157959]
[45.98720169 868.92584229]
[45.57145309 883.92010498]
[45.15570831 898.91430664]
[44.73996353 913.90856934]
[44.32421875 928.90277100]
[43.90847015 943.89703369]
[43.63128662 958.89447021]
[43.49269104 973.89379883]
[43.35409164 988.89318848]
[43.21549606 1003.89257812]
[56.71796036 1008.59240723]
[68.09729767 1017.21234131]
[76.25338745 1028.90258789]
[80.40282440 1042.51708984]
[80.15417480 1056.72631836]
[75.54485321 1070.14672852]
[67.03618622 1081.47595215]
[55.46728516 1089.61853027]
[41.97229767 1093.79248047]
[41.69511414 1108.78991699]
[41.41793060 1123.78735352]
[54.46722794 1131.76635742]
[61.72279358 1145.11743164]
[61.32404327 1160.20739746]
[53.47816849 1172.98620605]
[40.37763214 1180.07434082]
[40.10044861 1195.07177734]
[39.82326508 1210.06921387]
[52.70214081 1218.56262207]
[58.92375565 1232.67980957]
[56.50281143 1247.91613770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 336]
[7 335]
[8 334]
[13 329]
[14 328]
[15 327]
[23 318]
[24 317]
[25 316]
[26 315]
[29 314]
[30 313]
[31 312]
[32 311]
[33 310]
[34 309]
[35 308]
[36 307]
[43 302]
[44 301]
[45 300]
[48 297]
[49 296]
[50 295]
[51 293]
[52 292]
[53 291]
[54 290]
[55 289]
[56 288]
[77 273]
[78 272]
[79 270]
[80 269]
[81 268]
[82 267]
[83 266]
[84 265]
[85 264]
[86 263]
[87 262]
[88 261]
[89 260]
[90 259]
[91 258]
[94 256]
[95 255]
[96 254]
[98 252]
[99 251]
[100 250]
[101 247]
[102 246]
[103 245]
[104 244]
[105 243]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[123 130]
[124 129]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[146 158]
[147 157]
[148 156]
[149 155]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
[190 238]
[191 237]
[192 236]
[193 235]
[194 234]
[196 232]
[197 231]
[198 230]
[199 229]
[200 228]
[201 227]
[206 222]
[207 221]
[208 220]
[209 219]
[210 218]
[274 287]
[275 286]
[276 285]
[277 284]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
