%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUGGCUCUCACGGCGUUCAGGUAGGAAAGGAGGUGUGUAUCCAGCUUGGGCUCCAGUUUUCUGCCCGCCUCCUUUUACGUUAUUGCGGAGCGACGGCGCCGGACAGUCAACGUCAUCUAGGAGCACCGAGCAGCUUGGCUAAAAGUAAGGGUGUCGUGCUGAUGGCCCUGUGCGCACUGACCCGCGCUCUGCGCUCUCUGAACCUGGCGCCCCCGACCGUCGCCGCCCCUGCCCCGAGUCUGUUCCCCGCCG\
CCCAGAUGA\
) } def
/len { sequence length } bind def

/coor [
[432.94628906 63.18442917]
[421.58438110 65.57000732]
[410.36331177 62.15470123]
[402.08996582 53.67240524]
[387.34246826 56.41322327]
[372.59500122 59.15404129]
[357.84753418 61.89485931]
[343.10006714 64.63567352]
[328.35260010 67.37649536]
[317.25335693 77.30907440]
[302.27175903 72.22361755]
[287.52426147 74.96443939]
[281.54226685 79.26203918]
[272.58578491 77.64924622]
[257.80685425 80.21504211]
[243.02793884 82.78083801]
[228.24900818 85.34664154]
[213.47009277 87.91243744]
[198.69116211 90.47823334]
[183.91223145 93.04402924]
[177.52464294 106.47298431]
[164.29791260 113.65055084]
[149.20451355 111.63994598]
[138.06033325 101.00446320]
[123.28140259 103.57025909]
[113.89441681 119.01882172]
[96.32328033 123.26482391]
[80.91782379 113.80728149]
[66.59802246 118.27308655]
[52.27823257 122.73889923]
[37.95843506 127.20471191]
[23.63864136 131.67051697]
[9.31884480 136.13633728]
[-5.00094986 140.60214233]
[-19.32074547 145.06794739]
[-33.64054108 149.53376770]
[-47.96033478 153.99957275]
[-62.28013229 158.46537781]
[-73.15095520 169.96041870]
[-87.60463715 166.36315918]
[-101.92443085 170.82896423]
[-116.24422455 175.29476929]
[-121.30225372 189.84545898]
[-133.81210327 198.52630615]
[-148.85685730 198.18043518]
[-160.67166138 189.15003967]
[-174.99145508 193.61584473]
[-189.31124878 198.08166504]
[-203.63105774 202.54747009]
[-210.86279297 208.07209778]
[-218.14714050 206.98025513]
[-232.51887512 211.27600098]
[-245.96301270 221.60513306]
[-259.61019897 211.54577637]
[-253.72189331 195.64723206]
[-236.81460571 196.90426636]
[-222.44287109 192.60852051]
[-208.09686279 188.22767639]
[-193.77706909 183.76185608]
[-179.45727539 179.29605103]
[-165.13748169 174.83024597]
[-160.55038452 160.68469238]
[-148.36929321 151.84811401]
[-133.14259338 151.87895203]
[-120.71003723 160.97497559]
[-106.39024353 156.50917053]
[-92.07044983 152.04336548]
[-82.22386932 140.86775208]
[-66.74594116 144.14558411]
[-52.42614746 139.67977905]
[-38.10634995 135.21397400]
[-23.78655624 130.74815369]
[-9.46676064 126.28234863]
[4.85303450 121.81653595]
[19.17283058 117.35072327]
[33.49262619 112.88491821]
[47.81241989 108.41910553]
[62.13221741 103.95329285]
[76.45201111 99.48748016]
[76.51632690 98.18680573]
[76.65243530 96.89167023]
[63.18789291 90.28060913]
[49.72335434 83.66954803]
[33.40642929 85.30966187]
[24.04851532 71.84260559]
[31.27623367 57.12214279]
[47.65432739 56.29141617]
[56.33441544 70.20500946]
[69.79895782 76.81607056]
[83.26349640 83.42713165]
[96.04773712 76.78039551]
[110.31106567 78.82330322]
[120.71560669 88.79133606]
[135.49453735 86.22554016]
[142.40173340 72.45612335]
[155.93418884 65.47572327]
[170.80622864 67.77501678]
[181.34643555 78.26510620]
[196.12536621 75.69930267]
[210.90429688 73.13350677]
[225.68321228 70.56771088]
[240.46214294 68.00191498]
[255.24107361 65.43611908]
[270.01998901 62.87031937]
[284.78344727 60.21696472]
[299.53091431 57.47614670]
[311.68499756 47.34752274]
[325.61178589 52.62902069]
[340.35925293 49.88820267]
[355.10671997 47.14738464]
[369.85418701 44.40656662]
[384.60165405 41.66575241]
[399.34912109 38.92493439]
[409.50045776 22.89879990]
[427.83383179 19.47508430]
[442.56970215 30.37647820]
[457.24804688 27.28679848]
[471.92639160 24.19712067]
[486.60476685 21.10744095]
[501.28311157 18.01776123]
[515.96142578 14.92808247]
[527.87194824 4.51415634]
[541.92004395 9.46399593]
[556.59838867 6.37431669]
[570.03894043 -6.23501158]
[586.49279785 -0.09238744]
[601.13348389 -3.35585833]
[607.38024902 -17.43721008]
[620.56658936 -25.05123520]
[635.53088379 -23.45950127]
[646.55651855 -13.48083973]
[661.19720459 -16.74431038]
[675.83789062 -20.00778198]
[690.47857666 -23.27125168]
[705.11926270 -26.53472328]
[719.75994873 -29.79819298]
[734.38104248 -33.14839172]
[748.98199463 -36.58519363]
[763.58294678 -40.02199936]
[778.18395996 -43.45880127]
[792.78491211 -46.89560699]
[795.18444824 -53.92287445]
[799.81292725 -59.64252853]
[806.06866455 -63.38531113]
[813.16369629 -64.73410797]
[820.22253418 -63.57001114]
[826.39062500 -60.08127594]
[830.93737793 -54.73469162]
[845.71630859 -57.30049133]
[860.49523926 -59.86628723]
[872.76855469 -69.85012054]
[886.63171387 -64.40389252]
[901.41064453 -66.96968842]
[916.18957520 -69.53548431]
[930.96850586 -72.10128021]
[945.74743652 -74.66707611]
[948.92828369 -77.51226044]
[952.48767090 -79.06158447]
[955.97784424 -79.35353088]
[959.00848389 -78.56613159]
[961.28649902 -76.98678589]
[976.17041016 -78.84914398]
[984.26538086 -83.00742340]
[991.24169922 -80.64427185]
[1006.14666748 -82.33004761]
[1021.05163574 -84.01583099]
[1035.95666504 -85.70160675]
[1050.86157227 -87.38738251]
[1053.08337402 -102.38830566]
[1060.34875488 -116.15287781]
[1072.06628418 -126.99508667]
[1087.08581543 -133.49079895]
[1103.80883789 -134.66090393]
[1120.35815430 -130.10917664]
[1134.78869629 -120.09660339]
[1148.68896484 -125.73401642]
[1162.58935547 -131.37142944]
[1176.48974609 -137.00885010]
[1180.09289551 -152.10177612]
[1191.90124512 -162.16867065]
[1207.37414551 -163.33863831]
[1220.56201172 -155.16177368]
[1226.39379883 -140.78225708]
[1222.62695312 -125.72930908]
[1210.71008301 -115.79109955]
[1195.22546387 -114.78905487]
[1182.12707520 -123.10850525]
[1168.22680664 -117.47109222]
[1154.32641602 -111.83367157]
[1140.42602539 -106.19625854]
[1141.44543457 -98.76585388]
[1155.33459473 -93.10101318]
[1143.48413086 -83.90503693]
[1144.50341797 -76.47463226]
[1159.40832520 -74.78885651]
[1174.31335449 -73.10307312]
[1189.21838379 -71.41729736]
[1204.12329102 -69.73152161]
[1213.18432617 -82.13288879]
[1227.23852539 -88.32762146]
[1242.50537109 -86.64935303]
[1254.87829590 -77.54953766]
[1261.02893066 -63.47597885]
[1259.30285645 -48.21438980]
[1250.16430664 -35.87006378]
[1236.07153320 -29.76356125]
[1220.81542969 -31.53750229]
[1208.49987793 -40.71470642]
[1202.43750000 -54.82654953]
[1187.53259277 -56.51232529]
[1172.62756348 -58.19810486]
[1157.72265625 -59.88388062]
[1142.81762695 -61.56966019]
[1131.36633301 -47.79579926]
[1116.28381348 -38.91227722]
[1099.48645020 -35.72903442]
[1083.00537109 -38.35139465]
[1068.74096680 -46.19885635]
[1058.24389648 -58.10489655]
[1052.54736328 -72.48241425]
[1037.64245605 -70.79663849]
[1022.73742676 -69.11085510]
[1007.83245850 -67.42507935]
[992.92749023 -65.73930359]
[978.03277588 -63.96520615]
[963.14880371 -62.10285187]
[948.31323242 -59.88815308]
[933.53430176 -57.32235336]
[918.75537109 -54.75655746]
[903.97644043 -52.19076157]
[889.19750977 -49.62496185]
[877.98132324 -39.82465744]
[863.06103516 -45.08736038]
[848.28210449 -42.52156448]
[833.50317383 -39.95576477]
[817.84027100 -23.87110138]
[796.22174072 -32.29463196]
[781.62072754 -28.85783005]
[767.01977539 -25.42102623]
[752.41882324 -21.98422241]
[737.81781006 -18.54741859]
[732.04626465 -13.97108269]
[723.02343750 -15.15750504]
[708.38275146 -11.89403439]
[693.74206543 -8.63056374]
[679.10131836 -5.36709261]
[664.46063232 -2.10362172]
[649.81994629 1.15984917]
[644.07611084 14.87649345]
[631.20452881 22.67297363]
[616.03277588 21.38009071]
[604.39697266 11.28483009]
[589.75628662 14.54830074]
[583.02252197 24.57230186]
[570.87701416 27.42540550]
[559.68804932 21.05266380]
[545.00970459 24.14234352]
[534.14910889 34.33527374]
[519.05114746 29.60643005]
[504.37277222 32.69610977]
[489.69442749 35.78578949]
[475.01608276 38.87546921]
[460.33773804 41.96514511]
[445.65939331 45.05482483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[11 106]
[12 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[24 94]
[25 93]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[40 67]
[41 66]
[42 65]
[46 61]
[47 60]
[48 59]
[49 58]
[51 57]
[52 56]
[81 90]
[82 89]
[83 88]
[116 264]
[117 263]
[118 262]
[119 261]
[120 260]
[121 259]
[123 257]
[124 256]
[126 253]
[127 252]
[131 248]
[132 247]
[133 246]
[134 245]
[135 244]
[136 243]
[137 241]
[138 240]
[139 239]
[140 238]
[141 237]
[148 235]
[149 234]
[150 233]
[152 231]
[153 230]
[154 229]
[155 228]
[156 227]
[161 226]
[162 225]
[164 224]
[165 223]
[166 222]
[167 221]
[168 220]
[175 190]
[176 189]
[177 188]
[178 187]
[194 213]
[195 212]
[196 211]
[197 210]
[198 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
