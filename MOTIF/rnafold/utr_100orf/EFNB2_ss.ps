%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUUGGGGGUCCCAGCCUGCGUCCCGUCAGUCCCUUCUUGGCCCGGAGUGCGCGGAGCUGGGAGUGGCUUCGCCAUGGCUGUGAGAAGGGACUCCGUGUGGAAGUACUGCUGGGGUGUUUUGAUGGUUUUAUGCAGAACUGCGAUUUCCAAAUCGAUAGUUUUAGAGCCUAUCU\
) } def
/len { sequence length } bind def

/coor [
[243.31251526 251.03872681]
[237.50248718 248.85659790]
[232.50984192 245.10218811]
[228.75247192 240.06123352]
[226.55276489 234.12820435]
[226.11018372 227.77548218]
[227.48326111 221.51571655]
[216.19470215 211.63804626]
[204.90612793 201.76037598]
[190.23286438 199.20219421]
[184.94235229 184.29174805]
[173.65379333 174.41407776]
[162.36523438 164.53640747]
[151.07667542 154.65873718]
[139.78811646 144.78106689]
[128.49954224 134.90339661]
[117.21098328 125.02572632]
[105.92242432 115.14805603]
[89.39859009 112.33486176]
[84.13389587 96.42153931]
[72.67179871 86.74577332]
[61.20970535 77.07000732]
[45.67349625 74.08057404]
[40.93903351 59.95845795]
[29.47694016 50.28269577]
[18.01484680 40.60692978]
[6.46733713 31.03326797]
[-5.16467905 21.56245995]
[-22.51562119 23.66997910]
[-35.77157974 12.80274868]
[-37.05598450 -3.95181775]
[-48.85425949 -13.21468639]
[-60.65253448 -22.47755623]
[-72.45080566 -31.74042511]
[-84.24907684 -41.00329590]
[-96.04735565 -50.26616287]
[-107.84562683 -59.52903366]
[-119.64389801 -68.79190063]
[-131.44216919 -78.05477142]
[-143.24044800 -87.31764221]
[-155.03872681 -96.58051300]
[-166.99952698 -105.63252258]
[-179.11912537 -114.47082520]
[-191.23870850 -123.30912781]
[-203.35829163 -132.14743042]
[-207.76081848 -132.45425415]
[-211.45349121 -134.00614929]
[-214.12893677 -136.42143250]
[-215.63763428 -139.25737000]
[-215.99403381 -142.06779480]
[-227.45611572 -151.74356079]
[-238.91821289 -161.41932678]
[-247.52331543 -164.57771301]
[-250.49589539 -171.36996460]
[-261.78445435 -181.24763489]
[-273.07302856 -191.12530518]
[-284.36157227 -201.00297546]
[-295.65014648 -210.88064575]
[-306.93872070 -220.75831604]
[-318.22726440 -230.63598633]
[-329.51583862 -240.51365662]
[-340.80438232 -250.39132690]
[-356.98818970 -253.04025269]
[-362.53213501 -268.47387695]
[-351.73312378 -280.81539917]
[-335.70022583 -277.36892700]
[-330.92672729 -261.67987061]
[-319.63815308 -251.80221558]
[-308.34960938 -241.92454529]
[-297.06103516 -232.04687500]
[-285.77246094 -222.16920471]
[-274.48391724 -212.29153442]
[-263.19534302 -202.41386414]
[-251.90678406 -192.53619385]
[-240.61822510 -182.65852356]
[-229.24244690 -172.88142395]
[-217.78034973 -163.20565796]
[-206.31826782 -153.52989197]
[-194.51998901 -144.26701355]
[-182.40040588 -135.42871094]
[-170.28082275 -126.59041595]
[-158.16122437 -117.75210571]
[-153.35934448 -117.59962463]
[-148.60961914 -114.40803528]
[-145.77584839 -108.37878418]
[-133.97756958 -99.11591339]
[-122.17930603 -89.85304260]
[-110.38102722 -80.59017181]
[-98.58275604 -71.32730865]
[-86.78448486 -62.06443787]
[-74.98621368 -52.80156708]
[-63.18793488 -43.53870010]
[-51.38966370 -34.27582932]
[-39.59138870 -25.01296043]
[-27.79311752 -15.75009060]
[-15.32291508 -19.06537628]
[-3.04023004 -14.51594162]
[4.48206234 -3.55613446]
[4.30612898 9.93044472]
[15.93814468 19.40125275]
[23.13290787 21.19181061]
[27.69061089 29.14483643]
[39.15270615 38.82059860]
[50.61479950 48.49636459]
[65.33116150 50.79372406]
[70.88546753 65.60791779]
[82.34756470 75.28367615]
[93.80965424 84.95944214]
[105.47248840 84.68364716]
[114.31987762 92.28768921]
[115.80009460 103.85949707]
[127.08865356 113.73716736]
[138.37721252 123.61483765]
[149.66578674 133.49250793]
[160.95434570 143.37017822]
[172.24290466 153.24784851]
[183.53146362 163.12551880]
[194.82002258 173.00318909]
[210.30073547 176.26789856]
[214.78379822 190.47181702]
[226.07237244 200.34948730]
[237.36093140 210.22715759]
[261.68945312 212.37701416]
[269.20095825 234.87811279]
[281.62658691 243.28071594]
[294.05221558 251.68331909]
[306.55194092 259.97531128]
[319.12472534 268.15606689]
[331.69754028 276.33682251]
[344.27032471 284.51754761]
[356.84313965 292.69830322]
[369.41595459 300.87905884]
[381.98873901 309.05978394]
[386.40136719 309.13186646]
[390.17138672 310.48504639]
[392.97158813 312.75448608]
[394.62908936 315.50613403]
[395.13455200 318.29360962]
[407.09536743 327.34561157]
[419.05618286 336.39761353]
[431.01699829 345.44964600]
[442.97781372 354.50164795]
[454.93862915 363.55364990]
[466.97930908 372.49917603]
[479.09887695 381.33746338]
[491.21847534 390.17578125]
[503.33807373 399.01406860]
[515.45764160 407.85238647]
[531.81250000 409.05654907]
[538.70251465 423.93807983]
[529.03985596 437.18814087]
[512.76458740 435.17620850]
[506.61935425 419.97198486]
[494.49975586 411.13366699]
[482.38015747 402.29537964]
[470.26058960 393.45706177]
[458.14099121 384.61874390]
[450.86114502 383.21365356]
[445.88662720 375.51446533]
[433.92581177 366.46246338]
[421.96499634 357.41046143]
[410.00418091 348.35842896]
[398.04336548 339.30642700]
[386.08255005 330.25442505]
[373.80801392 321.63259888]
[361.23519897 313.45184326]
[348.66238403 305.27111816]
[336.08959961 297.09036255]
[323.51678467 288.90960693]
[310.94400024 280.72888184]
[298.37118530 272.54812622]
[291.02685547 271.53247070]
[285.64962769 264.10894775]
[273.22399902 255.70634460]
[260.79837036 247.30374146]
[255.45021057 250.20611572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 122]
[8 121]
[9 120]
[11 118]
[12 117]
[13 116]
[14 115]
[15 114]
[16 113]
[17 112]
[18 111]
[20 108]
[21 107]
[22 106]
[24 104]
[25 103]
[26 102]
[27 100]
[28 99]
[31 95]
[32 94]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 82]
[43 81]
[44 80]
[45 79]
[50 78]
[51 77]
[52 76]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[124 175]
[125 174]
[126 173]
[127 171]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
