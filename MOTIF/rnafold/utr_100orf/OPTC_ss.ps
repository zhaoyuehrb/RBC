%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGCCUCCACCAGAGUCCCCACCUUUCUGGAAGCUGCAGGGCUCUCCAUCCAGGAUCCAGAAGCAUUGAAGGGGACCAGCCGCUGAAGGGAUUCUCAGUCCCAUCUGACUCCCCAUGAGGCUCCUGGCUUUCCUGAGUCUGCUGGCCUUGGUGCUGCAGGAGACAGGGACAGCUUCUCUCCCAAGGAAGGAGAGGAAGAGGAGAGAGGAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[148.47508240 273.07025146]
[136.07507324 263.74182129]
[131.55854797 248.89660645]
[136.66221619 234.24285889]
[149.42361450 225.41526794]
[149.64076233 210.41683960]
[146.59591675 203.68626404]
[149.97120667 195.20326233]
[150.40545654 180.20954895]
[150.83972168 165.21585083]
[142.74943542 150.47145081]
[154.00802612 135.88357544]
[140.63800049 129.08340454]
[127.26797485 122.28321838]
[113.89794922 115.48303986]
[97.14749908 120.60923767]
[82.41910553 111.12608337]
[67.70468903 114.03912354]
[52.99026489 116.95216370]
[38.27584457 119.86521149]
[23.56142426 122.77825165]
[8.84700298 125.69129181]
[1.42428756 144.26161194]
[-15.58828354 154.49729919]
[-35.18492126 152.38700867]
[-49.41804504 138.96217346]
[-63.93920135 142.72195435]
[-78.46035767 146.48175049]
[-92.98151398 150.24153137]
[-107.50267029 154.00132751]
[-122.02382660 157.76110840]
[-136.54498291 161.52090454]
[-151.06614685 165.28068542]
[-159.11311340 178.61799622]
[-173.89318848 182.22410583]
[-186.55870056 174.47035217]
[-201.07984924 178.23013306]
[-215.60101318 181.98991394]
[-221.36495972 196.27568054]
[-234.28457642 204.33401489]
[-249.29437256 203.25242615]
[-260.65316772 193.65473938]
[-275.17434692 197.41452026]
[-286.48205566 209.29168701]
[-302.35610962 205.17501831]
[-306.46658325 189.29937744]
[-294.58502197 177.99627686]
[-278.93411255 182.89337158]
[-264.41296387 179.13357544]
[-259.13922119 165.22941589]
[-246.54034424 156.99945068]
[-231.33338928 157.77529907]
[-219.36079407 167.46876526]
[-204.83964539 163.70896912]
[-190.31848145 159.94918823]
[-183.00735474 147.02313232]
[-168.33439636 143.00331116]
[-154.82592773 150.75953674]
[-140.30477905 146.99974060]
[-125.78361511 143.23995972]
[-111.26245880 139.48016357]
[-96.74130249 135.72038269]
[-82.22014618 131.96058655]
[-67.69898987 128.20080566]
[-53.17783356 124.44101715]
[-51.60211945 114.22991180]
[-46.70301819 105.08993530]
[-39.01554489 98.07301331]
[-29.39724350 93.99628448]
[-18.93255997 93.34700012]
[-8.81057453 96.22438049]
[-0.18989342 102.32547760]
[5.93396139 110.97687531]
[20.64838219 108.06382751]
[35.36280441 105.15078735]
[50.07722473 102.23774719]
[64.79164886 99.32470703]
[79.50606537 96.41165924]
[82.75315857 88.36282349]
[89.00147247 82.33903503]
[86.19501495 67.60391235]
[83.38856506 52.86878586]
[80.58210754 38.13366699]
[66.79926300 35.01716232]
[55.27967072 26.90811920]
[47.74303436 15.05745506]
[45.29902267 1.27154291]
[48.28402710 -12.36310005]
[56.21525574 -23.79560661]
[67.86850739 -31.31924248]
[65.27566528 -46.09344864]
[62.68282318 -60.86765671]
[60.08998489 -75.64186096]
[50.84358215 -81.35933685]
[46.36023712 -91.02165222]
[47.90012741 -101.33966064]
[54.71656418 -108.94471741]
[52.55253220 -123.78779602]
[50.38850403 -138.63087463]
[48.22447586 -153.47395325]
[35.40560532 -162.71798706]
[32.96032715 -178.33197021]
[42.33937454 -191.05238342]
[57.97832870 -193.33244324]
[70.59886932 -183.81942749]
[72.71346283 -168.15724182]
[63.06755066 -155.63798523]
[65.23158264 -140.79490662]
[67.39561462 -125.95182800]
[69.55963898 -111.10874939]
[82.61862946 -96.84516144]
[74.86418915 -78.23470306]
[77.45703125 -63.46049500]
[80.04987335 -48.68629074]
[82.64271545 -33.91208267]
[98.10381317 -29.86597252]
[110.29627228 -19.44367790]
[116.74542236 -4.69379139]
[116.11324310 11.45019436]
[108.47559357 25.75328255]
[95.31723022 35.32721329]
[98.12368774 50.06233597]
[100.93013763 64.79745483]
[103.73659515 79.53257751]
[116.63529205 87.50421906]
[120.69812775 102.11301422]
[134.06816101 108.91319275]
[147.43818665 115.71337891]
[160.80819702 122.51355743]
[175.05378723 127.21073151]
[189.84637451 129.69654846]
[204.63896179 132.18238831]
[219.43154907 134.66821289]
[234.22413635 137.15403748]
[249.01672363 139.63986206]
[263.80932617 142.12568665]
[269.17007446 132.45619202]
[277.72256470 125.01131439]
[288.56613159 120.82984161]
[300.46853638 120.59286499]
[312.00588989 124.52093506]
[321.73291016 132.32501221]
[328.36349487 143.21963501]
[343.27514648 141.59413147]
[358.18682861 139.96861267]
[373.09848022 138.34310913]
[385.97891235 129.15589905]
[399.46969604 135.46841431]
[414.38137817 133.84289551]
[429.29302979 132.21739197]
[444.20471191 130.59188843]
[459.11636353 128.96638489]
[466.88101196 115.66162109]
[480.82803345 109.55148315]
[495.52478027 112.78720856]
[505.38009644 123.92321014]
[520.29174805 122.29770660]
[535.38238525 114.57052612]
[546.98510742 126.93231964]
[538.31835938 141.50366211]
[521.91723633 137.20936584]
[507.00558472 138.83486938]
[499.78109741 151.83273315]
[486.12667847 158.15899658]
[471.19076538 155.19737244]
[460.74188232 143.87803650]
[445.83020020 145.50355530]
[430.91854858 147.12905884]
[416.00689697 148.75456238]
[401.09521484 150.38006592]
[389.28137207 159.45101929]
[374.72399902 153.25477600]
[359.81231689 154.88027954]
[344.90066528 156.50579834]
[329.98901367 158.13130188]
[325.60226440 172.47552490]
[337.05407715 182.16346741]
[348.50585938 191.85140991]
[359.95767212 201.53935242]
[371.40948486 211.22729492]
[382.86126709 220.91525269]
[394.31307983 230.60319519]
[405.76486206 240.29113770]
[421.14395142 237.45951843]
[434.71954346 245.22077942]
[440.08169556 259.91027832]
[434.69851685 274.59210205]
[421.11184692 282.33392334]
[405.73681641 279.48028564]
[395.83309937 267.37863159]
[396.07693481 251.74293518]
[384.62512207 242.05499268]
[373.17333984 232.36705017]
[361.72152710 222.67909241]
[350.26971436 212.99114990]
[338.81793213 203.30320740]
[327.36611938 193.61526489]
[315.91433716 183.92732239]
[290.89013672 189.96369934]
[269.35568237 178.51167297]
[261.32348633 156.91828918]
[246.53089905 154.43244934]
[231.73831177 151.94662476]
[216.94572449 149.46080017]
[202.15313721 146.97497559]
[187.36054993 144.48915100]
[172.56796265 142.00331116]
[174.51077271 156.04550171]
[165.83343506 165.65010071]
[165.39916992 180.64381409]
[164.96490479 195.63752747]
[164.63919067 210.63398743]
[164.42204285 225.63241577]
[176.92251587 234.82577515]
[181.59982300 249.62112427]
[176.65541077 264.32937622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 213]
[6 212]
[8 211]
[9 210]
[10 209]
[12 129]
[13 128]
[14 127]
[15 126]
[17 78]
[18 77]
[19 76]
[20 75]
[21 74]
[22 73]
[26 65]
[27 64]
[28 63]
[29 62]
[30 61]
[31 60]
[32 59]
[33 58]
[36 55]
[37 54]
[38 53]
[42 49]
[43 48]
[80 124]
[81 123]
[82 122]
[83 121]
[90 115]
[91 114]
[92 113]
[93 112]
[97 110]
[98 109]
[99 108]
[100 107]
[130 207]
[131 206]
[132 205]
[133 204]
[134 203]
[135 202]
[136 201]
[143 175]
[144 174]
[145 173]
[146 172]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[156 162]
[157 161]
[176 198]
[177 197]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
