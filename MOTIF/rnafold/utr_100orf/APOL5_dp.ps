%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOL5)
} def

/sequence { (\
AUGCCAUGUGGCAAACAAGGAAAUUUGCAAGUUCCCGGUUCCAAGGUGUUACCUGGCUUGGGAGAAGGUUGUAAAGAAAUGUGGCUUCGAAAGGUAAUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003319321 ubox
1 95 0.015123914 ubox
1 98 0.074886819 ubox
2 13 0.327402295 ubox
2 23 0.004848044 ubox
2 89 0.003999944 ubox
2 94 0.015233260 ubox
2 96 0.811869523 ubox
2 97 0.062736321 ubox
3 12 0.363581748 ubox
3 47 0.008290781 ubox
3 57 0.007405291 ubox
3 85 0.249472023 ubox
3 95 0.889980317 ubox
4 11 0.363655205 ubox
4 20 0.044409116 ubox
4 46 0.008515731 ubox
4 56 0.007435149 ubox
4 84 0.249986358 ubox
4 94 0.894912072 ubox
5 10 0.363131544 ubox
5 19 0.044531557 ubox
5 45 0.008501499 ubox
5 55 0.007436135 ubox
5 83 0.249994777 ubox
5 93 0.894326399 ubox
6 32 0.005760919 ubox
6 54 0.007374570 ubox
6 82 0.249180456 ubox
7 17 0.053938760 ubox
7 31 0.006085440 ubox
7 81 0.246175828 ubox
7 89 0.822921745 ubox
8 12 0.004089009 ubox
8 16 0.071167800 ubox
8 52 0.007411639 ubox
8 80 0.235048130 ubox
8 85 0.017542171 ubox
8 88 0.852225439 ubox
9 15 0.070912792 ubox
9 17 0.042625955 ubox
9 29 0.006589378 ubox
9 31 0.003288416 ubox
9 43 0.008493128 ubox
9 51 0.007425631 ubox
9 79 0.232206565 ubox
9 84 0.017596445 ubox
9 89 0.119968959 ubox
10 16 0.069700899 ubox
10 28 0.006800348 ubox
10 42 0.008762172 ubox
10 50 0.007413871 ubox
10 80 0.004371232 ubox
10 86 0.862218591 ubox
10 87 0.016629210 ubox
10 88 0.110080149 ubox
11 28 0.098417368 ubox
11 32 0.004019193 ubox
11 41 0.008742840 ubox
11 49 0.007424492 ubox
11 72 0.005482522 ubox
11 82 0.017919967 ubox
11 85 0.890679709 ubox
11 86 0.007458939 ubox
11 87 0.080714875 ubox
12 27 0.098877782 ubox
12 31 0.004312547 ubox
12 48 0.007428344 ubox
12 71 0.005818020 ubox
12 81 0.018069705 ubox
12 83 0.023626190 ubox
12 84 0.889442596 ubox
13 26 0.098737538 ubox
13 47 0.007349169 ubox
13 70 0.005620036 ubox
13 80 0.017349881 ubox
13 82 0.026535528 ubox
13 87 0.010079092 ubox
14 25 0.097964059 ubox
14 40 0.013874421 ubox
14 69 0.004374495 ubox
14 86 0.014583738 ubox
14 87 0.008062879 ubox
15 24 0.094009195 ubox
15 39 0.015560316 ubox
15 72 0.034651428 ubox
15 82 0.865232515 ubox
15 86 0.007677782 ubox
15 95 0.011928877 ubox
16 27 0.020203248 ubox
16 38 0.015814227 ubox
16 68 0.003222576 ubox
16 71 0.035736219 ubox
16 81 0.874948977 ubox
16 83 0.343642446 ubox
16 94 0.012318089 ubox
17 25 0.006176086 ubox
17 26 0.020740265 ubox
17 70 0.035482650 ubox
17 80 0.844145506 ubox
17 82 0.340866851 ubox
17 87 0.017587666 ubox
18 24 0.009709574 ubox
18 25 0.021149104 ubox
18 69 0.026072803 ubox
18 70 0.003504638 ubox
18 86 0.019941406 ubox
18 87 0.018015570 ubox
18 100 0.014368743 ubox
19 24 0.020231916 ubox
19 25 0.003763433 ubox
19 35 0.015976692 ubox
19 36 0.003631623 ubox
19 42 0.003994902 ubox
19 85 0.020175629 ubox
19 86 0.021325853 ubox
19 88 0.011120704 ubox
19 99 0.015844925 ubox
19 100 0.029784020 ubox
20 24 0.003359753 ubox
20 34 0.016028443 ubox
20 35 0.003606024 ubox
20 41 0.004001407 ubox
20 85 0.021735786 ubox
20 87 0.011015734 ubox
20 88 0.014254307 ubox
20 98 0.010184792 ubox
20 99 0.033074801 ubox
21 33 0.015155472 ubox
21 40 0.003898160 ubox
21 86 0.010545844 ubox
21 87 0.014064582 ubox
21 98 0.030831870 ubox
22 32 0.012744280 ubox
22 33 0.006108644 ubox
22 39 0.003421670 ubox
22 86 0.011061361 ubox
23 32 0.008200668 ubox
23 69 0.003623572 ubox
23 72 0.009526838 ubox
23 80 0.017424568 ubox
23 82 0.017346168 ubox
24 30 0.007586651 ubox
24 31 0.009530946 ubox
24 64 0.013634111 ubox
24 66 0.006646251 ubox
24 68 0.003785767 ubox
24 71 0.009703491 ubox
24 74 0.020412144 ubox
24 75 0.966932807 ubox
24 76 0.020260358 ubox
24 77 0.012062283 ubox
24 78 0.007565316 ubox
24 79 0.016952368 ubox
24 81 0.014501609 ubox
24 84 0.003196764 ubox
25 29 0.006669168 ubox
25 30 0.007795373 ubox
25 63 0.015409879 ubox
25 65 0.006690596 ubox
25 67 0.003604748 ubox
25 73 0.016151688 ubox
25 74 0.985997634 ubox
25 75 0.019444841 ubox
25 76 0.011014449 ubox
25 77 0.007204271 ubox
25 78 0.013893221 ubox
25 90 0.003352607 ubox
25 97 0.007893050 ubox
26 62 0.015530343 ubox
26 64 0.005808649 ubox
26 71 0.005096772 ubox
26 73 0.990172706 ubox
26 74 0.014393548 ubox
26 75 0.006456526 ubox
26 76 0.005857406 ubox
26 77 0.009696539 ubox
26 89 0.003393926 ubox
26 96 0.008616566 ubox
27 69 0.060758536 ubox
27 70 0.004469817 ubox
27 72 0.991932483 ubox
27 88 0.003373464 ubox
27 95 0.008747690 ubox
28 60 0.016054452 ubox
28 68 0.062846686 ubox
28 71 0.992258805 ubox
28 94 0.008754923 ubox
29 59 0.016051326 ubox
29 70 0.989100452 ubox
29 87 0.003572968 ubox
30 58 0.016047424 ubox
30 69 0.950067243 ubox
30 70 0.020614279 ubox
30 86 0.003632608 ubox
31 57 0.015978917 ubox
31 69 0.027956612 ubox
31 85 0.003637349 ubox
32 56 0.011484054 ubox
32 63 0.011844757 ubox
32 64 0.413630368 ubox
32 65 0.079484284 ubox
32 66 0.139079368 ubox
32 67 0.790440631 ubox
32 68 0.046719106 ubox
32 84 0.003445378 ubox
33 55 0.010179058 ubox
33 62 0.014565054 ubox
33 63 0.938669556 ubox
33 64 0.052109600 ubox
33 65 0.134380960 ubox
33 66 0.269626393 ubox
33 67 0.016746976 ubox
33 68 0.009895232 ubox
34 56 0.010188030 ubox
34 61 0.016808016 ubox
34 62 0.983358282 ubox
34 64 0.141733693 ubox
34 67 0.010722291 ubox
34 68 0.070591357 ubox
35 55 0.010815220 ubox
35 56 0.003768511 ubox
35 60 0.016866979 ubox
35 61 0.983879298 ubox
35 62 0.137260583 ubox
35 67 0.070421710 ubox
35 68 0.067789536 ubox
36 55 0.003999367 ubox
36 60 0.983782969 ubox
36 61 0.136932050 ubox
36 67 0.067963130 ubox
37 53 0.016765880 ubox
37 58 0.211358480 ubox
37 59 0.932817080 ubox
38 52 0.016808538 ubox
38 57 0.298624780 ubox
38 58 0.809470802 ubox
39 51 0.016749122 ubox
39 56 0.189247462 ubox
39 63 0.104394930 ubox
39 64 0.031406271 ubox
40 55 0.160800226 ubox
40 56 0.108880419 ubox
40 62 0.105396803 ubox
40 63 0.033292101 ubox
41 55 0.114038322 ubox
41 56 0.962791391 ubox
41 61 0.105883111 ubox
41 62 0.032906855 ubox
42 48 0.015620072 ubox
42 55 0.967120092 ubox
42 60 0.106063460 ubox
42 61 0.032326826 ubox
43 47 0.012671018 ubox
43 54 0.682388333 ubox
43 59 0.105098321 ubox
44 49 0.003236609 ubox
44 54 0.716295862 ubox
44 58 0.102578918 ubox
44 59 0.029607189 ubox
44 100 0.004164100 ubox
45 53 0.993134715 ubox
45 54 0.008708758 ubox
45 57 0.100366204 ubox
45 58 0.038043443 ubox
45 99 0.004600829 ubox
45 100 0.005547956 ubox
46 52 0.992774309 ubox
46 53 0.011923770 ubox
46 57 0.042565781 ubox
46 98 0.003667014 ubox
46 99 0.006156070 ubox
47 51 0.894375117 ubox
47 55 0.081370016 ubox
47 56 0.046330151 ubox
48 54 0.059649360 ubox
48 57 0.003912806 ubox
48 98 0.012118448 ubox
49 56 0.004543966 ubox
49 97 0.013111602 ubox
50 55 0.003889386 ubox
50 96 0.013911161 ubox
51 95 0.013998380 ubox
52 94 0.014010326 ubox
53 93 0.014008711 ubox
54 92 0.013853975 ubox
58 91 0.013574280 ubox
59 90 0.013997457 ubox
61 88 0.015406335 ubox
62 87 0.015460745 ubox
63 86 0.015522115 ubox
64 70 0.003205626 ubox
64 85 0.015529854 ubox
64 88 0.024414405 ubox
65 69 0.003493718 ubox
65 87 0.023804059 ubox
66 86 0.023066446 ubox
66 87 0.013950764 ubox
66 100 0.009719793 ubox
67 85 0.021825234 ubox
67 86 0.017089902 ubox
67 99 0.010791741 ubox
68 80 0.020212057 ubox
68 85 0.018912707 ubox
68 98 0.010804882 ubox
69 75 0.004902786 ubox
69 76 0.014205592 ubox
69 77 0.013995964 ubox
69 78 0.021163873 ubox
69 79 0.020638827 ubox
69 84 0.020280532 ubox
69 97 0.010800058 ubox
70 74 0.004704365 ubox
70 75 0.017082979 ubox
70 76 0.014955028 ubox
70 77 0.024069470 ubox
70 78 0.021706185 ubox
70 81 0.006864743 ubox
70 83 0.019547289 ubox
70 96 0.010666388 ubox
71 80 0.011835174 ubox
71 82 0.014885071 ubox
71 95 0.009869816 ubox
72 79 0.011921370 ubox
72 81 0.017749142 ubox
72 94 0.006202965 ubox
73 80 0.017038695 ubox
74 87 0.009276492 ubox
75 86 0.012968614 ubox
75 100 0.025786389 ubox
76 85 0.014370466 ubox
76 87 0.004306311 ubox
76 88 0.040383277 ubox
76 99 0.034435639 ubox
77 86 0.004699064 ubox
77 87 0.040158753 ubox
77 98 0.032285743 ubox
78 86 0.037883752 ubox
78 87 0.004260572 ubox
79 86 0.004716413 ubox
79 95 0.004229088 ubox
79 98 0.020940284 ubox
80 89 0.008509923 ubox
80 94 0.004252835 ubox
80 96 0.005785886 ubox
80 97 0.023091595 ubox
81 88 0.013824711 ubox
81 95 0.003916946 ubox
81 98 0.048610436 ubox
82 89 0.010581255 ubox
82 96 0.074861896 ubox
82 97 0.051748678 ubox
83 88 0.017183311 ubox
83 95 0.089085275 ubox
83 99 0.021870255 ubox
83 100 0.010152452 ubox
84 95 0.286674663 ubox
84 98 0.014892713 ubox
84 99 0.012845195 ubox
85 93 0.107496821 ubox
85 94 0.292587095 ubox
86 92 0.107146895 ubox
86 93 0.286948165 ubox
86 94 0.007900379 ubox
86 97 0.012655712 ubox
87 91 0.089581485 ubox
87 92 0.232773043 ubox
87 93 0.009867317 ubox
87 94 0.071655481 ubox
87 96 0.012447908 ubox
88 93 0.097902117 ubox
89 99 0.062383577 ubox
90 98 0.060268108 ubox
92 100 0.057485458 ubox
93 99 0.063688807 ubox
93 100 0.051636229 ubox
94 98 0.041359910 ubox
94 99 0.057662152 ubox
2 96 0.9500000 lbox
3 95 0.9500000 lbox
4 94 0.9500000 lbox
5 93 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
27 72 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
showpage
end
%%EOF
