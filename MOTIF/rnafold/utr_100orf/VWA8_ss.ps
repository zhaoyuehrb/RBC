%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGUGCCUGCACGGGACGCCGCUCGAUCCCCGAGCCCCCUCGCCGUCCCCGACAGCCCCCCCGGCGCCAUGCAAUCCCGGCUUCUACUCCUCGGGGCACCCGGAGGCCACGGCGGCCCGGCCUCGCGGCGCAUGCGGCUGCUCCUGCGGCAGGUGGUGCAGCGCAGGC\
) } def
/len { sequence length } bind def

/coor [
[80.29460144 245.29455566]
[71.09606934 257.94055176]
[55.90850449 261.66503906]
[41.90301132 254.70945740]
[35.69255447 240.35800171]
[40.20952225 225.38699341]
[53.32114029 216.86529541]
[54.97126389 201.95632935]
[56.62138748 187.04737854]
[58.27151108 172.13841248]
[59.92163467 157.22946167]
[61.57175827 142.32049561]
[66.61264801 104.29467010]
[91.48828125 94.45127106]
[82.27509308 82.61416626]
[73.06190491 70.77706146]
[63.84871292 58.93994904]
[49.26665497 52.80202484]
[47.55521774 38.00606918]
[38.34202576 26.16896248]
[29.12883759 14.33185387]
[19.91564560 2.49474645]
[5.27870035 -0.78547001]
[-8.10511303 5.98753023]
[-21.48892593 12.76053047]
[-34.87274170 19.53353119]
[-48.25655365 26.30653191]
[-54.60230255 41.04121780]
[-70.11618805 45.12767029]
[-82.89727020 35.43110657]
[-83.14101410 19.38990402]
[-70.66043091 9.30950069]
[-55.02955246 12.92271805]
[-41.64574051 6.14971733]
[-28.26192665 -0.62328285]
[-14.87811375 -7.39628315]
[-1.49429989 -14.16928387]
[-6.78022575 -28.20071983]
[-4.38021517 -42.06554794]
[4.13224173 -52.08710480]
[-2.01911736 -65.76777649]
[-8.17047691 -79.44844818]
[-14.32183552 -93.12911987]
[-29.37420845 -96.40513611]
[-39.49304199 -107.78329468]
[-40.95443726 -122.76088715]
[-33.40654373 -135.57366943]
[-39.55790329 -149.25433350]
[-45.83467102 -162.87792969]
[-52.23631668 -176.44328308]
[-58.63796616 -190.00865173]
[-65.03961182 -203.57400513]
[-71.44126129 -217.13935852]
[-77.84290314 -230.70471191]
[-102.17658234 -232.33872986]
[-120.34011841 -250.60133362]
[-122.02124786 -277.67562866]
[-133.42286682 -287.42257690]
[-144.82447815 -297.16955566]
[-160.86643982 -297.35668945]
[-170.60803223 -310.10348511]
[-166.57633972 -325.63168335]
[-151.86412048 -332.02938843]
[-137.75735474 -324.38882446]
[-135.07751465 -308.57116699]
[-123.67590332 -298.82418823]
[-112.27429199 -289.07723999]
[-100.02665710 -297.73724365]
[-105.41503906 -311.73599243]
[-110.80342102 -325.73477173]
[-125.98768616 -328.04418945]
[-137.97291565 -337.64886475]
[-143.53511047 -351.96520996]
[-141.17810059 -367.14218140]
[-131.53588867 -379.09722900]
[-117.20219421 -384.61453247]
[-102.03269958 -382.20996094]
[-90.10792542 -372.53033447]
[-84.63557434 -358.17938232]
[-87.08769226 -343.01751709]
[-96.80465698 -331.12313843]
[-91.41627502 -317.12438965]
[-86.02789307 -303.12561035]
[-76.34847260 -301.56140137]
[-67.49444580 -297.70114136]
[-59.99155426 -291.85287476]
[-54.26546097 -284.44000244]
[-50.61782455 -275.97128296]
[-49.21092987 -267.00613403]
[-50.06161499 -258.11788940]
[-53.04460526 -249.85708618]
[-57.90481949 -242.71745300]
[-64.27754974 -237.10636902]
[-57.87590027 -223.54100037]
[-51.47425461 -209.97564697]
[-45.07260513 -196.41029358]
[-38.67095947 -182.84494019]
[-32.26931381 -169.27957153]
[-26.54916382 -164.55444336]
[-25.87723160 -155.40570068]
[-19.72587204 -141.72502136]
[-5.13220596 -138.86795044]
[5.10180426 -127.83486176]
[6.89777088 -112.71441650]
[-0.64116359 -99.28047943]
[5.51019526 -85.59980774]
[11.66155434 -71.91913605]
[17.81291389 -58.23846436]
[31.75996780 -56.78556061]
[43.14826965 -47.60472488]
[47.90938187 -33.13405991]
[43.89293671 -17.81215096]
[31.75275421 -6.71844435]
[40.96594620 5.11866331]
[50.17913437 16.95577049]
[59.39232635 28.79287910]
[73.31539154 34.08413696]
[75.68582153 49.72676086]
[84.89900970 61.56386566]
[94.11219788 73.40097809]
[103.32539368 85.23808289]
[117.00606537 91.38944244]
[131.97506714 90.42558289]
[146.94406128 89.46172333]
[160.28237915 79.92121887]
[175.09994507 86.94773102]
[176.15371704 103.31298828]
[162.35966492 112.18181610]
[147.90792847 104.43072510]
[132.93891907 105.39458466]
[117.96992493 106.35844421]
[113.49220276 120.67451477]
[125.24417877 129.99604797]
[136.99615479 139.31758118]
[148.74813843 148.63912964]
[157.45198059 151.53637695]
[160.62831116 158.24143982]
[172.20706177 167.77729797]
[187.77842712 170.57785034]
[192.68403625 184.64143372]
[204.26278687 194.17727661]
[215.84153748 203.71313477]
[227.42028809 213.24899292]
[238.99903870 222.78485107]
[255.04173279 222.67726135]
[265.01583862 235.24295044]
[261.27008057 250.84260559]
[246.67790222 257.50949097]
[232.43313599 250.12934875]
[229.46318054 234.36360168]
[217.88442993 224.82774353]
[206.30567932 215.29188538]
[194.72692871 205.75602722]
[183.14817810 196.22018433]
[168.40499878 194.10169983]
[162.67120361 179.35604858]
[151.09245300 169.82019043]
[139.42660522 160.39109802]
[127.67462158 151.06956482]
[115.92264557 141.74803162]
[104.17066193 132.42649841]
[97.24817657 135.31253052]
[95.32447052 150.18865967]
[83.40320587 141.08457947]
[76.48072052 143.97061157]
[74.83059692 158.87957764]
[73.18047333 173.78854370]
[71.53034973 188.69749451]
[69.88022614 203.60646057]
[68.23010254 218.51541138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[14 121]
[15 120]
[16 119]
[17 118]
[19 116]
[20 115]
[21 114]
[22 113]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[40 108]
[41 107]
[42 106]
[43 105]
[47 101]
[48 100]
[49 98]
[50 97]
[51 96]
[52 95]
[53 94]
[54 93]
[57 67]
[58 66]
[59 65]
[68 83]
[69 82]
[70 81]
[122 131]
[123 130]
[124 129]
[132 161]
[133 160]
[134 159]
[135 158]
[137 157]
[138 156]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
