%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAUUUCAAACCACUCCUUUUCAAAGAUCUCUGAGGGAGACAUUGCACCUGGCCACUGCAGCCCAGAGCAGGUCUGGCCACGGCCAUGAGCAUGCUGAGCCAUCAUGCCCACCGUGGAUGACAUUCUGGAGCAGGUUGGGGAGUCUGGCUGGUUCCAGAAGCAAGCCUUCCUCAUCUUAUGCCUGCUGUCGGCUGCCUUUGCGC\
) } def
/len { sequence length } bind def

/coor [
[-4.73560905 261.76498413]
[-5.33384085 274.78533936]
[-8.10021305 287.51898193]
[-12.95571613 299.60760498]
[-19.76256371 310.71118164]
[-28.32810211 320.51760864]
[-38.41026306 328.75149536]
[-49.72440338 335.18179321]
[-61.95134354 339.62841797]
[-74.74636841 341.96722412]
[-87.74895477 342.13345337]
[-100.59291077 340.12356567]
[-112.91670990 335.99523926]
[-124.37365723 329.86584473]
[-134.64164734 321.90896606]
[-145.79901123 331.93457031]
[-156.95639038 341.96020508]
[-168.11375427 351.98583984]
[-179.27113342 362.01144409]
[-190.42849731 372.03707886]
[-201.58587646 382.06268311]
[-197.27113342 396.70324707]
[-199.74444580 411.76461792]
[-208.51475525 424.25640869]
[-221.84069824 431.69830322]
[-237.07640076 432.61276245]
[-251.19679260 426.81817627]
[-261.39828491 415.46511841]
[-265.65533447 400.80767822]
[-263.12271118 385.75613403]
[-254.30328369 373.29901123]
[-240.94815063 365.90963745]
[-225.70895386 365.05517578]
[-211.61149597 370.90530396]
[-200.45411682 360.87969971]
[-189.29675293 350.85406494]
[-178.13937378 340.82846069]
[-166.98200989 330.80282593]
[-155.82463074 320.77722168]
[-144.66726685 310.75158691]
[-153.23759460 295.99417114]
[-158.36805725 279.71163940]
[-159.80674744 262.69451904]
[-157.48106384 245.76960754]
[-151.50137329 229.75975037]
[-142.15574646 215.44396973]
[-129.89610291 203.51947021]
[-115.31638336 194.56768799]
[-99.12371063 189.02595520]
[-82.10417175 187.16615295]
[-65.08458710 189.08132935]
[-48.89237976 194.68110657]
[-34.31536102 203.69587708]
[-23.95414543 192.84944153]
[-28.26827812 178.59272766]
[-24.84429932 163.99366760]
[-14.50427628 152.99592590]
[0.04779480 148.62168884]
[14.93260288 152.14158630]
[25.29381752 141.29515076]
[35.65503311 130.44871521]
[46.01624680 119.60227203]
[56.37746048 108.75583649]
[66.73867798 97.90939331]
[71.02449036 83.53469849]
[68.29470825 68.78518677]
[65.56491852 54.03566742]
[62.83513641 39.28614807]
[60.10535431 24.53663063]
[50.79765320 18.89893341]
[46.22536850 9.26672935]
[47.68088913 -1.07404137]
[54.44408035 -8.74025059]
[52.16537094 -23.56615639]
[49.88666153 -38.39206314]
[38.17962265 -45.05715561]
[32.53240204 -57.07304382]
[34.80445099 -69.95638275]
[43.94531631 -79.04116058]
[41.89296341 -93.90009308]
[39.84061050 -108.75902557]
[37.78825760 -123.61795807]
[35.73590469 -138.47688293]
[33.68355179 -153.33581543]
[30.47309875 -157.46162415]
[29.28754044 -161.95692444]
[29.92807007 -165.98756409]
[31.89329720 -168.91954041]
[30.52267265 -183.85678101]
[21.55674934 -196.89222717]
[28.09872437 -210.27325439]
[26.72809982 -225.21049500]
[25.35747337 -240.14775085]
[23.98684692 -255.08499146]
[22.61622047 -270.02224731]
[13.65029812 -283.05767822]
[20.19227409 -296.43872070]
[18.82164764 -311.37597656]
[11.35330105 -326.59634399]
[23.91142464 -337.98623657]
[38.33264160 -329.07192993]
[33.75889587 -312.74658203]
[35.12952423 -297.80932617]
[43.99740982 -285.84231567]
[37.55347061 -271.39288330]
[38.92409515 -256.45562744]
[40.29471970 -241.51837158]
[41.66534805 -226.58113098]
[43.03597260 -211.64387512]
[51.90386200 -199.67684937]
[45.45991898 -185.22741699]
[46.83054733 -170.29016113]
[48.54248428 -155.38816833]
[50.59483719 -140.52923584]
[52.64719009 -125.67031097]
[54.69953918 -110.81137848]
[56.75189209 -95.95244598]
[58.80424500 -81.09351349]
[72.63228607 -71.52459717]
[75.31587219 -54.58203506]
[64.71257019 -40.67077255]
[66.99127960 -25.84486580]
[69.26998901 -11.01896095]
[82.44213867 3.13354611]
[74.85487366 21.80684662]
[77.58465576 36.55636215]
[80.31443787 51.30588150]
[83.04421997 66.05539703]
[85.77400970 80.80491638]
[107.19544220 79.73479462]
[118.52004242 95.25842285]
[133.34594727 97.53713226]
[148.17185974 99.81584167]
[162.99775696 102.09455109]
[177.82366943 104.37326813]
[192.64956665 106.65197754]
[207.47547913 108.93068695]
[222.39009094 110.52894592]
[237.36218262 111.44340515]
[252.33428955 112.35786438]
[267.30639648 113.27232361]
[282.27847290 114.18678284]
[297.25057983 115.10124207]
[312.22268677 116.01570129]
[316.89999390 113.68075562]
[321.54074097 113.40380859]
[325.36627197 114.82566833]
[327.85375977 117.32987976]
[342.76834106 118.92813873]
[357.68295288 120.52639008]
[372.59756470 122.12464905]
[387.14358521 115.90180969]
[398.97399902 124.95116425]
[413.88861084 126.54942322]
[428.80322266 128.14767456]
[442.14385986 119.23663330]
[457.38415527 124.24790192]
[462.83306885 139.33728027]
[454.31063843 152.92947388]
[438.35455322 154.59771729]
[427.20495605 143.06228638]
[412.29034424 141.46403503]
[397.37573242 139.86576843]
[383.89651489 146.20292664]
[370.99932861 137.03926086]
[356.08471680 135.44100952]
[341.17010498 133.84274292]
[326.25549316 132.24449158]
[311.30822754 130.98779297]
[296.33612061 130.07333374]
[281.36401367 129.15887451]
[266.39193726 128.24441528]
[251.41983032 127.32996368]
[236.44772339 126.41550446]
[221.47563171 125.50104523]
[230.55792236 137.43887329]
[228.67877197 152.32070923]
[216.91407776 161.62617493]
[201.99949646 160.02758789]
[192.47415161 148.44020081]
[193.79161072 133.49816895]
[205.19676208 123.75659180]
[190.37086487 121.47788239]
[175.54495239 119.19917297]
[160.71905518 116.92045593]
[145.89314270 114.64174652]
[131.06723022 112.36303711]
[116.24133301 110.08432770]
[108.96298981 118.22645569]
[97.82991791 121.39494324]
[86.09759521 117.94268036]
[77.58511353 108.27060699]
[67.22389984 119.11705017]
[56.86268616 129.96348572]
[46.50147247 140.80992126]
[36.14025497 151.65635681]
[25.77904129 162.50280762]
[29.97602654 177.21104431]
[26.27190208 191.94795227]
[15.75857449 202.78013611]
[1.33139539 206.86822510]
[-13.10770702 203.21064758]
[-23.46892166 214.05708313]
[-15.82285976 224.62956238]
[-10.05390167 236.32872009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[53 203]
[54 202]
[59 197]
[60 196]
[61 195]
[62 194]
[63 193]
[64 192]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[73 123]
[74 122]
[75 121]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[88 112]
[89 111]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[97 103]
[98 102]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[136 183]
[137 182]
[138 175]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[148 168]
[149 167]
[150 166]
[151 165]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
