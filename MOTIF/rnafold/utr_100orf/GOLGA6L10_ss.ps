%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUCCAUUGGUGCCCUGGUUACGCCACCUGUGGCUCAGUUGCACAGCUGCCUGGUAGGUGACUGGAGGCAUUGAGCAGUGCUCACUGGUAUUUCGCUGAUGUGGCCCCAACCCCGCCUCCCUCCCCACCCCGCGAUGUCAGAAAAAACACAACAGGGGAAAUUGGCCGCAGCCAAGAAAAAGUUAAAAGCAUAUUGGC\
) } def
/len { sequence length } bind def

/coor [
[78.67465973 108.00212097]
[63.67877960 108.35375977]
[48.68289948 108.70539856]
[35.61441422 123.95640564]
[15.84840012 124.68154907]
[2.12740731 110.86185455]
[-12.83550644 111.91600037]
[-27.79841995 112.97013855]
[-35.00481415 127.37000275]
[-50.25745773 135.01692200]
[-67.99891663 131.84732056]
[-80.97933960 117.99604034]
[-95.54130554 121.59453583]
[-110.10327148 125.19302368]
[-124.66523743 128.79151917]
[-139.22720337 132.38999939]
[-153.76060486 136.10218811]
[-168.26455688 139.92782593]
[-182.76849365 143.75346375]
[-197.27244568 147.57910156]
[-211.77639771 151.40473938]
[-216.74049377 155.79133606]
[-222.33486938 156.84764099]
[-226.79354858 155.11572266]
[-241.40997314 158.48617554]
[-256.02639771 161.85662842]
[-270.64282227 165.22709656]
[-285.23248291 168.71166992]
[-299.79443359 172.31016541]
[-314.35641479 175.90866089]
[-327.32418823 188.97694397]
[-343.97994995 183.46043396]
[-358.48391724 187.28607178]
[-372.98785400 191.11172485]
[-387.49179077 194.93736267]
[-401.99575806 198.76300049]
[-416.49969482 202.58863831]
[-421.15655518 217.29635620]
[-433.04037476 227.13398743]
[-448.35900879 228.96238708]
[-462.22436523 222.19810486]
[-470.21203613 208.99960327]
[-469.77322388 193.57847595]
[-461.04791260 180.85556030]
[-446.82034302 174.89067078]
[-431.63046265 177.58720398]
[-420.32531738 188.08470154]
[-405.82138062 184.25904846]
[-391.31744385 180.43341064]
[-376.81350708 176.60777283]
[-362.30953979 172.78213501]
[-347.80560303 168.95648193]
[-341.44366455 158.66206360]
[-329.38522339 155.35945129]
[-317.95489502 161.34667969]
[-303.39294434 157.74819946]
[-288.83096313 154.14970398]
[-283.08697510 149.48937988]
[-274.01327515 150.61067200]
[-259.39685059 147.24020386]
[-244.78042603 143.86975098]
[-230.16400146 140.49928284]
[-215.60203552 136.90080261]
[-201.09808350 133.07516479]
[-186.59414673 129.24951172]
[-172.09019470 125.42387390]
[-157.58624268 121.59823608]
[-151.91580200 116.84870148]
[-142.82569885 117.82803345]
[-128.26373291 114.22954559]
[-113.70175934 110.63105774]
[-99.13979340 107.03256989]
[-84.57782745 103.43407440]
[-79.52103424 89.31214905]
[-88.48885345 77.28808594]
[-97.45668030 65.26402283]
[-106.42449951 53.23995590]
[-115.39232635 41.21588898]
[-129.70860291 32.13400650]
[-124.94477844 15.86310005]
[-107.99098969 15.93651485]
[-103.36825562 32.24806595]
[-94.40043640 44.27213287]
[-85.43260956 56.29619598]
[-76.46479034 68.32025909]
[-67.49696350 80.34432983]
[-42.79343033 80.78038788]
[-28.85256195 98.00722504]
[-13.88964939 96.95308685]
[1.07326448 95.89894104]
[5.47404099 86.60973358]
[13.39820862 79.93653870]
[23.45643234 77.13711548]
[33.84835434 78.78222656]
[42.68481064 84.64073944]
[48.33126068 93.70951843]
[63.32714081 93.35787964]
[78.32302094 93.00624084]
[85.55791473 80.36222076]
[99.75299835 74.02534485]
[115.91169739 77.47879791]
[127.58969879 90.51563263]
[141.22531128 84.26502228]
[154.86091614 78.01441956]
[168.49653625 71.76380920]
[182.13214111 65.51320648]
[195.76776123 59.26259613]
[209.40336609 53.01199341]
[210.78031921 36.53870392]
[220.22087097 23.08335114]
[235.07225037 16.26206779]
[251.24363708 17.84963417]
[264.33285522 27.31878471]
[277.86911011 20.85582924]
[291.40536499 14.39287281]
[304.94161987 7.92991686]
[300.55804443 -6.44512892]
[298.36602783 -21.31296921]
[298.41452026 -36.34145355]
[300.70245361 -51.19483566]
[305.17871094 -65.54129028]
[311.74331665 -79.06031036]
[320.24957275 -91.44987488]
[330.50744629 -102.43319702]
[342.28781128 -111.76490021]
[355.32745361 -119.23652649]
[369.33511353 -124.68113708]
[383.99777222 -127.97711182]
[398.98794556 -129.05081177]
[413.97067261 -127.87825012]
[428.61129761 -124.48561859]
[442.58273315 -118.94872284]
[455.57281494 -111.39124298]
[467.29135132 -101.98202515]
[477.47656250 -90.93127441]
[485.90090942 -78.48587036]
[492.37615967 -64.92384338]
[496.75769043 -50.54816818]
[498.94760132 -35.68001556]
[498.89694214 -20.65154076]
[496.60690308 -5.79848337]
[492.12860107 8.54733276]
[485.56207275 22.06541634]
[477.05404663 34.45376968]
[466.79461670 45.43563080]
[455.01290894 54.76565933]
[441.97219849 62.23542404]
[427.96380615 67.67803955]
[413.30062866 70.97192383]
[398.31033325 72.04349518]
[383.32775879 70.86879730]
[368.68762207 67.47408295]
[354.71697998 61.93519211]
[341.72799683 54.37586594]
[330.01077271 44.96498108]
[319.82714844 33.91278076]
[311.40457153 21.46617126]
[297.86831665 27.92912865]
[284.33206177 34.39208221]
[270.79580688 40.85504150]
[270.62860107 54.51546097]
[264.56134033 66.82951355]
[253.72750854 75.36751556]
[240.20727539 78.41752625]
[226.62805176 75.32836914]
[215.65397644 66.64760590]
[202.01835632 72.89820862]
[188.38275146 79.14881897]
[174.74713135 85.39942169]
[161.11152649 91.65003204]
[147.47590637 97.90063477]
[133.84030151 104.15124512]
[128.78350830 118.27317047]
[135.35205078 131.75849915]
[141.92059326 145.24383545]
[148.48913574 158.72917175]
[155.05767822 172.21450806]
[170.03695679 170.09883118]
[184.93653870 172.71757507]
[198.29670715 179.81414795]
[208.80854797 190.69331360]
[215.44223022 204.28924561]
[217.54786682 219.26994324]
[214.91914368 234.16777039]
[207.81362915 247.52316284]
[196.92741394 258.02770996]
[183.32704163 264.65231323]
[168.34492493 266.74789429]
[153.44886780 264.10919189]
[140.09823608 256.99472046]
[129.60098267 246.10147095]
[122.98551941 232.49665833]
[120.89996338 217.51315308]
[123.54864502 202.61886597]
[130.67205811 189.27301025]
[141.57234192 178.78305054]
[135.00379944 165.29771423]
[128.43525696 151.81237793]
[121.86671448 138.32704163]
[115.29817200 124.84171295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 98]
[2 97]
[3 96]
[6 90]
[7 89]
[8 88]
[12 73]
[13 72]
[14 71]
[15 70]
[16 69]
[17 67]
[18 66]
[19 65]
[20 64]
[21 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 57]
[29 56]
[30 55]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[102 172]
[103 171]
[104 170]
[105 169]
[106 168]
[107 167]
[108 166]
[113 160]
[114 159]
[115 158]
[116 157]
[173 200]
[174 199]
[175 198]
[176 197]
[177 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
