%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCCCCGGCCCGGCCGGGCGGGACCAGUGCGCAGCCGGGGCUGGCGGGCGGCGGGGUCCGCGGGGCCGCAGGAGAUGACGGCCGGCGGCCAGGCCGAGGCCGAGGGCGCUGGCGGGGAGCCCGGCGCGGCGCGGCUGCCCUCGCGGGUGGCCCGGCUGCUGUCGGCGCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[78.39231110 111.70636749]
[63.65204620 114.48569489]
[48.91178513 117.26502991]
[34.17152405 120.04435730]
[19.43126297 122.82369232]
[10.50955486 135.59243774]
[-4.47875929 138.20109558]
[-16.59682655 129.61691284]
[-31.33708763 132.39625549]
[-46.07735062 135.17558289]
[-60.81761169 137.95491028]
[-75.55787659 140.73423767]
[-90.29813385 143.51358032]
[-102.42571259 153.67391968]
[-116.36623383 148.42881775]
[-131.10649109 151.20814514]
[-138.98889160 155.88694763]
[-146.13288879 153.90356445]
[-160.92016602 156.42083740]
[-175.70742798 158.93812561]
[-190.49470520 161.45539856]
[-195.90710449 175.76109314]
[-207.67568970 185.37345886]
[-222.57649231 187.78849792]
[-236.59169006 182.45649719]
[-245.99290466 170.90301514]
[-260.78018188 173.42030334]
[-268.74435425 177.95848083]
[-275.85205078 175.84860229]
[-290.68164062 178.10304260]
[-303.16220093 187.82655334]
[-316.90777588 182.08999634]
[-331.73739624 184.34443665]
[-346.56701660 186.59887695]
[-361.37603760 188.98483276]
[-376.16329956 191.50210571]
[-390.95056152 194.01939392]
[-403.22296143 204.89689636]
[-418.69161987 199.45146179]
[-421.44372559 183.28489685]
[-408.64810181 173.02795410]
[-393.46783447 179.23211670]
[-378.68057251 176.71484375]
[-363.89331055 174.19755554]
[-357.80795288 169.96209717]
[-348.82144165 171.76925659]
[-333.99182129 169.51481628]
[-319.16220093 167.26039124]
[-307.74240112 157.69812012]
[-292.93609619 163.27342224]
[-278.10647583 161.01898193]
[-263.29745483 158.63302612]
[-248.51017761 156.11575317]
[-243.46128845 142.10238647]
[-231.99975586 132.43341064]
[-217.13917542 129.78208923]
[-202.85296631 134.95906067]
[-193.01197815 146.66813660]
[-178.22471619 144.15084839]
[-163.43743896 141.63357544]
[-148.65017700 139.11628723]
[-133.88583374 136.46788025]
[-119.14556885 133.68855286]
[-108.07231140 123.72700500]
[-93.07746887 128.77331543]
[-78.33720398 125.99398041]
[-63.59694290 123.21465302]
[-48.85668182 120.43531799]
[-34.11642075 117.65599060]
[-19.37615776 114.87665558]
[-11.21618080 102.46898651]
[3.69294834 99.44036865]
[16.65193176 108.08342743]
[31.39219284 105.30410004]
[46.13245392 102.52476501]
[60.87271500 99.74543762]
[75.61297607 96.96610260]
[77.13681793 88.65248871]
[81.51072693 81.05270386]
[88.41303253 75.14522552]
[97.18721008 71.76752472]
[106.90226746 71.50241089]
[116.45117950 74.58968353]
[121.91358948 60.61964035]
[127.37599945 46.64959717]
[132.83840942 32.67955399]
[138.30081177 18.70951080]
[143.76322937 4.73946857]
[149.22563171 -9.23057365]
[147.04507446 -24.90079308]
[158.88587952 -33.93654251]
[164.34828186 -47.90658569]
[161.14830017 -66.02590942]
[175.24011230 -76.46244049]
[180.45372009 -90.52722931]
[185.66732788 -104.59201813]
[182.38333130 -120.65898132]
[194.83354187 -131.33251953]
[210.21023560 -125.63260651]
[212.69520569 -109.42282867]
[199.73211670 -99.37841034]
[194.51850891 -85.31362152]
[189.30490112 -71.24883270]
[194.06816101 -60.10828400]
[189.81538391 -48.33552551]
[178.31832886 -42.44417572]
[172.85592651 -28.47413445]
[175.42718506 -13.80314541]
[163.19567871 -3.76816535]
[157.73326111 10.20187759]
[152.27085876 24.17192078]
[146.80844116 38.14196396]
[141.34603882 52.11200714]
[135.88363647 66.08204651]
[130.42121887 80.05209351]
[135.88363647 94.02213287]
[149.37330627 100.58174133]
[162.86299133 107.14134979]
[176.35267639 113.70096588]
[189.84236145 120.26057434]
[203.33204651 126.82018280]
[216.82171631 133.37979126]
[230.36907959 139.81942749]
[243.97306824 146.13859558]
[257.57705688 152.45774841]
[271.18103027 158.77690125]
[284.78500366 165.09606934]
[298.44451904 171.29425049]
[312.15850830 177.37097168]
[325.87249756 183.44769287]
[339.58648682 189.52439880]
[353.30047607 195.60112000]
[367.89266968 190.15078735]
[381.71401978 196.50881958]
[386.82015991 210.45381165]
[400.53414917 216.53053284]
[414.24813843 222.60725403]
[427.96212769 228.68395996]
[441.67611694 234.76068115]
[455.39010620 240.83740234]
[469.10409546 246.91412354]
[482.81808472 252.99084473]
[499.05792236 250.71064758]
[508.93795776 263.79946899]
[502.29440308 278.79266357]
[485.96163940 280.26647949]
[476.74136353 266.70483398]
[463.02737427 260.62811279]
[449.31338501 254.55139160]
[435.59939575 248.47467041]
[421.88540649 242.39794922]
[408.17141724 236.32124329]
[394.45742798 230.24452209]
[380.74343872 224.16780090]
[366.98336792 229.75311279]
[352.98886108 223.78582764]
[347.22375488 209.31510925]
[333.50976562 203.23838806]
[319.79577637 197.16168213]
[306.08178711 191.08496094]
[292.36779785 185.00823975]
[284.95541382 185.17372131]
[278.46585083 178.70004272]
[264.86184692 172.38088989]
[251.25788879 166.06172180]
[237.65390015 159.74256897]
[224.04992676 153.42341614]
[216.63578796 153.45732117]
[210.26211548 146.86947632]
[196.77243042 140.30986023]
[183.28274536 133.75025940]
[169.79306030 127.19064331]
[156.30339050 120.63103485]
[142.81370544 114.07142639]
[129.32402039 107.51181793]
[114.14478302 124.59490967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 77]
[2 76]
[3 75]
[4 74]
[5 73]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[13 65]
[15 63]
[16 62]
[18 61]
[19 60]
[20 59]
[21 58]
[26 53]
[27 52]
[29 51]
[30 50]
[32 48]
[33 47]
[34 46]
[35 44]
[36 43]
[37 42]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[91 107]
[92 106]
[94 103]
[95 102]
[96 101]
[116 175]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 169]
[123 167]
[124 166]
[125 165]
[126 164]
[127 163]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
