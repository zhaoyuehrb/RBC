%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCUUGCUUGGCUCGCGGGCAGAGGAGCCGCCGCUCGCUGGACGCCGGACCGGGCAGGACGGCGCGGGGAGCCGGCGGCCAGAAUGUUCCUGGAGCCCCAGGAAACUAUGCCCCAGACGUCCGUUGUCUUCUCCAGCAUCCUUGGGCCCAGCUGUAGCGGACAGGUGCAGCCUGGCAUGGGGG\
) } def
/len { sequence length } bind def

/coor [
[205.55535889 507.67285156]
[213.86523438 497.05618286]
[210.35124207 482.47360229]
[206.83724976 467.89102173]
[203.32324219 453.30844116]
[199.80924988 438.72586060]
[196.29525757 424.14324951]
[192.78126526 409.56066895]
[188.14756775 403.78186035]
[189.33326721 394.70214844]
[186.06607056 380.06228638]
[175.74235535 369.32586670]
[180.28802490 354.17175293]
[177.02082825 339.53189087]
[173.75361633 324.89202881]
[159.65708923 311.67517090]
[165.92649841 292.53146362]
[162.16671753 278.01031494]
[158.28442383 263.52142334]
[154.27992249 249.06584167]
[150.27540588 234.61026001]
[146.27090454 220.15467834]
[133.11288452 208.55696106]
[137.84745789 190.77230835]
[133.59936523 176.38642883]
[129.35128784 162.00053406]
[125.10320282 147.61463928]
[120.85511780 133.22875977]
[65.59447479 112.48908997]
[51.20858383 108.24100494]
[36.82269669 103.99292755]
[22.43680763 99.74484253]
[8.05091858 95.49675751]
[-6.33497000 91.24868011]
[-20.72085953 87.00059509]
[-35.14210892 82.87415314]
[-49.59769440 78.86964417]
[-64.05327606 74.86514282]
[-79.41819000 78.63742828]
[-89.61792755 67.78318787]
[-104.07350922 63.77867889]
[-118.52909851 59.77417374]
[-125.04916382 61.06594086]
[-130.42689514 59.14484406]
[-133.40092468 55.38259506]
[-147.71301270 50.89214706]
[-162.02510071 46.40169907]
[-176.33718872 41.91125488]
[-190.64927673 37.42080688]
[-202.43634033 42.69308472]
[-214.27384949 38.64250183]
[-219.98098755 27.96136475]
[-234.21519470 23.22983551]
[-249.14492798 29.10203171]
[-262.97201538 20.96623993]
[-265.08950806 5.06354332]
[-253.87303162 -6.40687180]
[-237.92692566 -4.64588356]
[-229.48365784 8.99562836]
[-215.24945068 13.72715855]
[-198.28663635 9.26582146]
[-186.15882874 23.10871887]
[-171.84674072 27.59916496]
[-157.53465271 32.08961105]
[-143.22256470 36.58005905]
[-128.91047668 41.07050705]
[-114.52458954 45.31858826]
[-100.06900787 49.32309341]
[-85.61341858 53.32760239]
[-71.28247070 49.26888275]
[-60.04877090 60.40955734]
[-45.59318924 64.41406250]
[-31.13760376 68.41857147]
[-23.83617973 67.17159271]
[-16.47277641 72.61470795]
[-2.08688760 76.86279297]
[12.29900074 81.11087036]
[26.68489075 85.35895538]
[41.07077789 89.60704041]
[55.45666885 93.85511780]
[69.84255981 98.10320282]
[76.17366028 94.08235931]
[61.99160767 89.19672394]
[56.96882629 75.06266022]
[64.88747406 62.32315826]
[79.78479767 60.57108688]
[90.44307709 71.12575531]
[88.83586121 86.04067993]
[95.16696167 82.01984406]
[97.43837738 67.19281769]
[99.70979309 52.36579132]
[101.98120880 37.53876877]
[104.25263214 22.71174431]
[106.52404785 7.88471842]
[108.79546356 -6.94230652]
[102.34011841 -22.01746941]
[112.38318634 -34.98160172]
[128.59323120 -32.49831772]
[134.29473877 -17.12220192]
[123.62248993 -4.67088985]
[121.35106659 10.15613556]
[119.07965088 24.98316002]
[116.80823517 39.81018448]
[114.53681946 54.63721085]
[112.26540375 69.46423340]
[109.99398804 84.29125977]
[116.07646942 88.67913055]
[124.85240936 76.51430511]
[137.01708984 85.29044342]
[128.24143982 97.45486450]
[134.32392883 101.84272766]
[147.67750549 95.01030731]
[161.03108215 88.17788696]
[163.16754150 69.18095398]
[176.19992065 55.40042496]
[194.75291443 52.25801849]
[211.33042908 60.84067917]
[224.32081604 53.34067917]
[237.31118774 45.84067917]
[250.30157471 38.34067917]
[263.29196167 30.84068108]
[268.81637573 15.77879429]
[284.08157349 10.84392548]
[297.37741089 19.82168198]
[298.50445557 35.82509613]
[286.59814453 46.57772064]
[270.79196167 43.83106232]
[257.80157471 51.33106232]
[244.81118774 58.83106232]
[231.82081604 66.33106232]
[218.83042908 73.83106232]
[219.78103638 84.98306274]
[216.47645569 95.73030853]
[209.35964966 104.50144958]
[199.43383789 109.99905396]
[188.12121582 111.39147186]
[177.05921936 108.43843079]
[167.86349487 101.53146362]
[154.50991821 108.36388397]
[141.15634155 115.19630432]
[135.24101257 128.98066711]
[139.48908997 143.36656189]
[143.73716736 157.75245667]
[147.98526001 172.13833618]
[152.23333740 186.52423096]
[163.18009949 193.37258911]
[166.41426086 205.45869446]
[160.72648621 216.15017700]
[164.73100281 230.60575867]
[168.73550415 245.06134033]
[172.74000549 259.51693726]
[178.05798340 266.97122192]
[176.68786621 274.25051880]
[180.44766235 288.77169800]
[190.14784241 293.75311279]
[195.38655090 303.06536865]
[194.63861084 313.50341797]
[188.39347839 321.62484741]
[191.66067505 336.26467896]
[194.92788696 350.90454102]
[205.48527527 362.68807983]
[200.70591736 376.79507446]
[203.97312927 391.43493652]
[207.36384583 406.04666138]
[210.87783813 420.62927246]
[214.39183044 435.21185303]
[217.90583801 449.79443359]
[221.41983032 464.37701416]
[224.93382263 478.95959473]
[228.44783020 493.54220581]
[243.52986145 502.38449097]
[247.48344421 519.06787109]
[238.34025574 533.17138672]
[242.10003662 547.69256592]
[245.85983276 562.21374512]
[259.60494995 570.01416016]
[263.72787476 585.27117920]
[255.78253174 598.93310547]
[240.48277283 602.89447021]
[226.90563965 594.80517578]
[223.10624695 579.46435547]
[231.33866882 565.97351074]
[227.57888794 551.45233154]
[223.81909180 536.93121338]
[211.89903259 532.00482178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[10 163]
[11 162]
[13 160]
[14 159]
[15 158]
[17 154]
[18 153]
[19 151]
[20 150]
[21 149]
[22 148]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 81]
[30 80]
[31 79]
[32 78]
[33 77]
[34 76]
[35 75]
[36 73]
[37 72]
[38 71]
[40 69]
[41 68]
[42 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[52 60]
[53 59]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[111 140]
[112 139]
[113 138]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
