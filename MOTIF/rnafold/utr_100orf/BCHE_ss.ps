%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUUUGUCAGUAACAGUUGAUUGUUACAUUCAGUAACACUGAAUGUCAGUGCAGUCCAAUUUACAGGCUGGAGCAGCAGCUGCAUCCUGCAUUUCCCCGAAGUAUUACAUGAUUUUCACUCCUUGCAAACUUUGCCAUCUUUGUUGCAGAGAAUCGGAAAUCAAUAUGCAUAGCAAAGUCACAAUCAUAUGCAUCAGAUUUCUCUUUUGGUUUCUUUUGCUCUGCAUGCUUAUUGGGAAGUCACAUACUGAAG\
AUGACAUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.10454559 362.35614014]
[72.78982544 353.39691162]
[65.18942261 340.20019531]
[63.62017059 325.05233765]
[68.35394287 310.57781982]
[78.57057953 299.28445435]
[92.50000000 293.12887573]
[92.50000000 278.12887573]
[92.50000000 263.12887573]
[92.50000000 248.12887573]
[92.50000000 233.12887573]
[79.53267670 225.79988098]
[71.92427826 212.87826538]
[71.80444336 197.78349304]
[79.30548859 184.56869507]
[92.50000000 176.83227539]
[92.50000000 161.83227539]
[92.50000000 146.83227539]
[92.50000000 131.83227539]
[83.48439789 134.25492859]
[73.17623901 134.05842590]
[61.18730545 143.07316589]
[49.19837189 152.08790588]
[37.20943832 161.10263062]
[25.22050858 170.11737061]
[13.23157501 179.13211060]
[5.99088526 199.32424927]
[-14.61238956 200.81007385]
[-26.27695274 210.24076843]
[-37.94151688 219.67146301]
[-49.60607910 229.10215759]
[-61.27064133 238.53285217]
[-72.93520355 247.96354675]
[-84.59976959 257.39422607]
[-96.26432800 266.82492065]
[-107.92889404 276.25561523]
[-116.44458771 290.91574097]
[-132.88917542 286.79116821]
[-133.47810364 269.84747314]
[-117.35958862 264.59106445]
[-105.69502258 255.16036987]
[-94.03046417 245.72967529]
[-82.36589813 236.29898071]
[-70.70133209 226.86828613]
[-59.03677368 217.43759155]
[-47.37220764 208.00689697]
[-35.70764542 198.57620239]
[-24.04308319 189.14550781]
[-24.55909538 180.34191895]
[-20.92871475 172.15480042]
[-13.84397507 166.45468140]
[-4.80062532 164.60620117]
[4.21683741 167.14318848]
[16.20577049 158.12844849]
[28.19470215 149.11370850]
[40.18363571 140.09896851]
[52.17256546 131.08422852]
[64.16149902 122.06948853]
[62.76305008 114.70101929]
[48.02611160 117.49792480]
[34.87472916 124.71187592]
[23.94986534 114.43338776]
[30.34934616 100.86700439]
[45.22920990 102.76098633]
[59.96614838 99.96408081]
[58.56769943 92.59561157]
[44.10959244 88.60021973]
[29.65148735 84.60482788]
[15.19338131 80.60942841]
[-0.16914696 84.39140320]
[-10.37572479 73.54358673]
[-24.83382988 69.54819489]
[-40.19635773 73.33016205]
[-50.40293503 62.48234940]
[-64.86103821 58.48695374]
[-79.31914520 54.49156189]
[-95.04759979 59.13353729]
[-106.74382019 47.63874054]
[-102.37574768 31.83203125]
[-86.43688202 27.97399902]
[-75.32375336 40.03345490]
[-60.86564636 44.02885056]
[-46.40753937 48.02424622]
[-32.07915497 43.95649719]
[-20.83843422 55.09008789]
[-6.38032961 59.08548355]
[7.94805813 55.01773453]
[19.18877602 66.15132141]
[33.64688110 70.14672089]
[48.10498810 74.14211273]
[62.56309128 78.13751221]
[91.02505493 63.04575729]
[117.53034973 72.39147949]
[128.26055908 61.90993881]
[138.99075317 51.42839432]
[149.72096252 40.94685364]
[160.45117188 30.46531296]
[171.18136597 19.98377228]
[181.91157532 9.50222969]
[181.80592346 -8.00735092]
[194.16511536 -19.92854309]
[210.98353577 -19.21960449]
[221.59014893 -29.82620621]
[232.19674683 -40.43280792]
[242.80334473 -51.03940964]
[253.40994263 -61.64601135]
[264.01654053 -72.25261688]
[249.62330627 -68.02951813]
[237.49336243 -59.20542526]
[223.28672791 -54.39175797]
[208.29121399 -54.02487946]
[193.86616516 -58.13804626]
[181.31922913 -66.35839844]
[171.78776550 -77.94076538]
[166.13580322 -91.83520508]
[164.87570190 -106.78218079]
[168.12168884 -121.42675781]
[175.57949829 -134.44140625]
[186.57310486 -144.64633179]
[200.10592651 -151.11648560]
[214.95120239 -153.26533508]
[229.76322937 -150.89808655]
[243.19929504 -144.22932434]
[254.04139709 -133.86358643]
[261.30673218 -120.74051666]
[264.33676147 -106.04823303]
[272.13723755 -93.23603821]
[271.43417358 -108.21955109]
[270.73107910 -123.20306396]
[270.02798462 -138.18658447]
[263.24588013 -153.72489929]
[276.29949951 -164.54339600]
[290.30877686 -154.99479675]
[285.01150513 -138.88966370]
[285.71459961 -123.90615082]
[286.41769409 -108.92263794]
[287.12075806 -93.93912506]
[293.29507446 -89.68141937]
[299.86154175 -103.16777039]
[306.42800903 -116.65411377]
[310.93569946 -130.96076965]
[325.12182617 -135.83451843]
[337.47030640 -127.31890869]
[337.95675659 -112.32680511]
[326.18685913 -103.02870178]
[315.91525269 -92.09735870]
[305.64367676 -81.16601562]
[311.81796265 -76.90831757]
[326.07290649 -81.57700348]
[340.32785034 -86.24568939]
[354.58279419 -90.91437531]
[368.83773804 -95.58306885]
[383.09268188 -100.25175476]
[386.33807373 -115.19881439]
[396.56182861 -126.44033051]
[410.94412231 -131.02462769]
[425.59201050 -127.81594849]
[436.59298706 -117.77384186]
[450.84793091 -122.44252777]
[465.10287476 -127.11121368]
[479.35781860 -131.77990723]
[493.61276245 -136.44859314]
[507.86770630 -141.11727905]
[522.12261963 -145.78596497]
[536.37756348 -150.45465088]
[550.63250732 -155.12335205]
[554.46325684 -174.93608093]
[578.86230469 -185.46405029]
[592.39855957 -191.92700195]
[605.93481445 -198.38995361]
[619.47106934 -204.85292053]
[633.00732422 -211.31587219]
[646.54357910 -217.77882385]
[660.07983398 -224.24179077]
[658.90045166 -239.37365723]
[663.27069092 -253.90861511]
[672.59954834 -265.88095093]
[685.62536621 -273.67147827]
[700.58654785 -276.22659302]
[715.45959473 -273.20077515]
[728.23315430 -265.00320435]
[737.17968750 -252.74252319]
[741.08929443 -238.07693481]
[739.43310547 -222.98979187]
[732.43518066 -209.52154541]
[721.04199219 -199.49363708]
[706.79425049 -194.26228333]
[691.61895752 -194.53495789]
[677.56835938 -200.27479553]
[666.54278564 -210.70553589]
[653.00653076 -204.24256897]
[639.47027588 -197.77961731]
[625.93402100 -191.31666565]
[612.39776611 -184.85369873]
[598.86151123 -178.39074707]
[585.32525635 -171.92779541]
[588.38098145 -157.24165344]
[591.43640137 -142.55682373]
[606.42712402 -142.02943420]
[621.41784668 -141.50202942]
[635.63763428 -149.67082214]
[649.68420410 -141.20758057]
[649.10760498 -124.81857300]
[634.50103760 -117.36340332]
[620.89044189 -126.51130676]
[605.89971924 -127.03870392]
[590.90899658 -127.56610107]
[567.21386719 -127.16347504]
[555.30120850 -140.86840820]
[541.04626465 -136.19972229]
[526.79132080 -131.53102112]
[512.53637695 -126.86234283]
[498.28143311 -122.19364929]
[484.02648926 -117.52496338]
[469.77157593 -112.85627747]
[455.51663208 -108.18759155]
[441.26168823 -103.51889801]
[438.33273315 -88.91455078]
[428.42102051 -77.66226959]
[414.11334229 -72.85020447]
[399.22024536 -75.86560822]
[387.76135254 -85.99681091]
[373.50640869 -81.32812500]
[359.25146484 -76.65943909]
[344.99652100 -71.99074554]
[330.74157715 -67.32205963]
[316.48666382 -62.65337372]
[274.62313843 -61.64601135]
[264.01654053 -51.03940964]
[253.40994263 -40.43280792]
[242.80334473 -29.82620621]
[232.19674683 -19.21960449]
[221.59014893 -8.61300278]
[223.39485168 4.12493229]
[217.45426941 15.75509644]
[205.73243713 21.94095421]
[192.39311218 20.23243523]
[181.66291809 30.71397591]
[170.93270874 41.19551849]
[160.20249939 51.67705917]
[149.47230530 62.15859985]
[138.74209595 72.64014435]
[128.01188660 83.12168121]
[131.85255432 92.58659363]
[132.58595276 102.77468872]
[130.14056396 112.69210815]
[124.75493622 121.37139893]
[116.95442963 127.96588898]
[107.50000000 131.83227539]
[107.50000000 146.83227539]
[107.50000000 161.83227539]
[107.50000000 176.83227539]
[120.69451141 184.56869507]
[128.19555664 197.78349304]
[128.07571411 212.87826538]
[120.46732330 225.79988098]
[107.50000000 233.12887573]
[107.50000000 248.12887573]
[107.50000000 263.12887573]
[107.50000000 278.12887573]
[107.50000000 293.12887573]
[121.42942047 299.28445435]
[131.64605713 310.57781982]
[136.37983704 325.05233765]
[134.81057739 340.20019531]
[127.21017456 353.39691162]
[114.89545441 362.35614014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 261]
[8 260]
[9 259]
[10 258]
[11 257]
[16 252]
[17 251]
[18 250]
[19 249]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[66 91]
[67 90]
[68 89]
[69 88]
[71 86]
[72 85]
[74 83]
[75 82]
[76 81]
[93 243]
[94 242]
[95 241]
[96 240]
[97 239]
[98 238]
[99 237]
[102 233]
[103 232]
[104 231]
[105 230]
[106 229]
[107 228]
[127 137]
[128 136]
[129 135]
[130 134]
[148 227]
[149 226]
[150 225]
[151 224]
[152 223]
[153 222]
[158 217]
[159 216]
[160 215]
[161 214]
[162 213]
[163 212]
[164 211]
[165 210]
[166 209]
[168 196]
[169 195]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
