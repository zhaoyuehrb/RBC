%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCGGUCCCCACCCCGCCACCGGCACACAGGCGCGCAGACUUGGGCUGGAGCCGCCCUGGGUGUCAGCGGCUCGGCUCCCGCGCACGCUCCGGCCGUCGCGCAGCCUCGGCACCUGCAGGUCCGUGCGUCCCGCGGCUGGCGCCCCUGACUCCGUCCCGGCCAGGGAGGGCCAUGAUUUCCCUCCCGGGGCCCCUGGUGACCAACUUGCUGCGGUUUUUGUUCCUGGGGCUGAGUGCCCUCGCGCCCCCCUCGC\
GGGCCCAGCUGCAACUGC\
) } def
/len { sequence length } bind def

/coor [
[369.21569824 211.77305603]
[363.27194214 211.75210571]
[358.70214844 226.03906250]
[354.13238525 240.32601929]
[349.56259155 254.61297607]
[344.99282837 268.89993286]
[340.42303467 283.18688965]
[351.53878784 293.64648438]
[357.00744629 307.89627075]
[355.74322510 323.10696411]
[347.99713135 336.25842285]
[335.30718994 344.73944092]
[320.19293213 346.86611938]
[305.65536499 342.21615601]
[294.58093262 331.71286011]
[289.16842651 317.44165039]
[290.49252319 302.23608398]
[298.29034424 289.11523438]
[311.01361084 280.68423462]
[326.13607788 278.61712646]
[330.70587158 264.33016968]
[335.27563477 250.04319763]
[339.84542847 235.75624084]
[344.41522217 221.46928406]
[348.98498535 207.18232727]
[343.71063232 203.56585693]
[339.17712402 199.02005005]
[335.54684448 193.69473267]
[332.95223999 187.76782227]
[331.49096680 181.43946838]
[331.22222900 174.92518616]
[316.83425903 170.68420410]
[302.44625854 166.44320679]
[288.05828857 162.20222473]
[273.67031860 157.96122742]
[259.28231812 153.72024536]
[244.89434814 149.47926331]
[230.49877930 153.30245972]
[219.44924927 141.97908020]
[205.06126404 137.73809814]
[190.67329407 133.49711609]
[176.28530884 129.25611877]
[161.89732361 125.01513672]
[147.50933838 120.77414703]
[133.07368469 116.69840240]
[118.59223938 112.78843689]
[111.24577332 131.25689697]
[87.97939301 142.19201660]
[57.27455521 133.87258911]
[42.33761215 135.24653625]
[27.40066719 136.62048340]
[12.46372509 137.99444580]
[-2.47321749 139.36839294]
[-17.41016006 140.74234009]
[-32.33036804 142.28746033]
[-47.23188019 144.00355530]
[-62.13339233 145.71963501]
[-77.02481842 147.52111816]
[-91.90567780 149.40794373]
[-106.78653717 151.29476929]
[-117.71061707 163.04397583]
[-133.69601440 161.68507385]
[-142.48010254 148.26049805]
[-137.32447815 133.06842041]
[-122.18408966 127.76291656]
[-108.67335510 136.41390991]
[-93.79250336 134.52708435]
[-78.91164398 132.64025879]
[-72.69468689 128.69613647]
[-63.84947586 130.81811523]
[-48.94796371 129.10203552]
[-34.04645157 127.38595581]
[-30.44849586 124.29705048]
[-24.88235092 123.41154480]
[-18.78411102 125.80540466]
[-3.84716892 124.43144989]
[11.08977413 123.05750275]
[26.02671623 121.68354797]
[40.96365738 120.30959320]
[55.90060043 118.93564606]
[57.60541916 111.63197327]
[62.71986771 89.72096252]
[49.93476105 81.87615204]
[37.14965439 74.03134155]
[24.36454582 66.18653870]
[11.53467655 58.41514969]
[-1.33953416 50.71744156]
[-14.25766277 43.09366608]
[-27.21928596 35.54407501]
[-43.61145020 36.02251434]
[-51.99042130 21.92553329]
[-43.73662949 7.75489569]
[-27.34086800 8.08814049]
[-19.66969299 22.58245277]
[-6.70807028 30.13204575]
[0.62582397 30.78060532]
[6.35817289 37.84323120]
[19.23238373 45.54093933]
[26.55835915 46.27354050]
[32.20935440 53.40142822]
[44.99446487 61.24623871]
[57.77957153 69.09104919]
[70.56467438 76.93585968]
[80.61059570 65.79586029]
[90.65563202 54.65686035]
[81.53558350 42.74784088]
[66.19145203 36.96081161]
[63.79846191 20.73719788]
[76.81831360 10.76646519]
[91.85729980 17.30564690]
[93.44460297 33.62779617]
[102.56465149 45.53681564]
[126.87039948 72.36536407]
[122.50220490 98.30699921]
[136.98364258 102.21696472]
[143.40159607 100.90206146]
[148.73408508 102.72708893]
[151.75033569 106.38616943]
[166.13830566 110.62715149]
[180.52629089 114.86814117]
[194.91427612 119.10913086]
[209.30226135 123.35012054]
[223.69024658 127.59110260]
[239.11492920 124.07125092]
[249.13533020 135.09127808]
[263.52331543 139.33226013]
[277.91128540 143.57325745]
[292.29928589 147.81423950]
[306.68725586 152.05522156]
[321.07525635 156.29621887]
[335.46322632 160.53720093]
[356.00091553 144.07102966]
[382.00979614 146.49655151]
[398.88574219 166.16996765]
[413.78726196 164.45387268]
[428.68878174 162.73779297]
[443.59027100 161.02171326]
[458.49179077 159.30561829]
[473.39331055 157.58953857]
[488.29479980 155.87345886]
[503.19631958 154.15737915]
[511.32763672 150.08035278]
[518.27838135 152.50804138]
[533.19860840 150.96292114]
[548.11883545 149.41780090]
[563.03900146 147.87269592]
[575.96875000 138.75502014]
[589.42535400 145.14015198]
[604.34558105 143.59503174]
[619.26574707 142.04991150]
[620.48486328 124.92388153]
[630.55004883 108.56945038]
[648.73242188 97.56940460]
[671.97802734 95.86473846]
[695.40148926 105.61693573]
[707.61706543 96.91183472]
[719.83270264 88.20674133]
[731.99822998 79.43175507]
[744.11322021 70.58717346]
[756.07434082 61.53554535]
[767.87799072 52.27955627]
[779.68170166 43.02356720]
[791.48535156 33.76757812]
[797.97570801 16.51673126]
[815.45281982 14.76372147]
[827.14959717 5.37300682]
[838.84637451 -4.01770782]
[850.54315186 -13.40842247]
[862.23992920 -22.79913712]
[873.93670654 -32.18985367]
[885.63348389 -41.58056641]
[883.91009521 -56.91137314]
[890.76928711 -70.73003387]
[904.02221680 -78.62707520]
[919.43994141 -78.08256531]
[932.10278320 -69.27026367]
[937.96997070 -55.00214767]
[935.16943359 -39.83111191]
[924.59466553 -28.59818459]
[909.62017822 -24.88775063]
[895.02416992 -29.88379478]
[883.32739258 -20.49308014]
[871.63061523 -11.10236549]
[859.93383789 -1.71165097]
[848.23706055 7.67906380]
[836.54028320 17.06977844]
[824.84356689 26.46049309]
[823.22692871 38.42486572]
[813.59167480 46.34621429]
[800.74133301 45.57125092]
[788.93768311 54.82723999]
[777.13397217 64.08322906]
[765.33032227 73.33921814]
[764.53875732 76.73912048]
[762.08288574 79.93237305]
[758.07385254 82.15056610]
[752.95782471 82.70217896]
[740.84277344 91.54676056]
[737.30676270 98.00455475]
[728.53778076 100.42235565]
[716.32220459 109.12745667]
[704.10656738 117.83255005]
[705.22033691 125.24938965]
[720.05401611 123.02185822]
[734.88769531 120.79431915]
[749.72137451 118.56678772]
[763.14074707 111.86443329]
[773.66180420 122.55585480]
[766.74487305 135.86582947]
[751.94891357 133.40046692]
[737.11523438 135.62800598]
[722.28155518 137.85552979]
[707.44787598 140.08306885]
[708.56164551 147.49990845]
[722.79528809 152.23320007]
[735.33239746 143.08992004]
[750.84948730 143.09567261]
[763.37988281 152.24822998]
[768.10534668 167.02825928]
[763.20892334 181.75254822]
[750.57330322 190.75927734]
[735.05718994 190.58520508]
[722.62683105 181.29724121]
[718.06201172 166.46682739]
[703.82836914 161.73353577]
[696.20428467 174.65223694]
[688.58081055 187.56979370]
[699.60443115 197.74232483]
[710.62799072 207.91487122]
[721.65161133 218.08740234]
[732.67517090 228.25993347]
[743.75689697 238.36911011]
[754.89642334 248.41458130]
[766.03588867 258.46005249]
[777.17541504 268.50552368]
[793.31774902 271.39633179]
[798.63012695 286.91119385]
[787.64764404 299.08972168]
[771.66809082 295.40374756]
[767.12988281 279.64505005]
[755.99041748 269.59954834]
[744.85089111 259.55407715]
[733.71142578 249.50860596]
[726.66607666 247.37094116]
[722.50262451 239.28352356]
[711.47906494 229.11099243]
[700.45544434 218.93844604]
[689.43188477 208.76591492]
[678.40826416 198.59338379]
[647.48736572 195.92250061]
[626.76446533 178.86999512]
[620.81091309 156.97012329]
[605.89068604 158.51524353]
[590.97045898 160.06036377]
[579.10791016 169.06750488]
[564.58416748 162.79289246]
[549.66394043 164.33801270]
[534.74371338 165.88313293]
[519.82348633 167.42825317]
[504.91241455 169.05888367]
[490.01089478 170.77496338]
[475.10937500 172.49105835]
[460.20788574 174.20713806]
[445.30636597 175.92321777]
[430.40484619 177.63929749]
[415.50332642 179.35539246]
[400.60183716 181.07147217]
[399.47116089 186.90672302]
[397.35366821 192.46052551]
[394.31240845 197.56732178]
[390.43811035 202.07490540]
[385.84619141 205.84889221]
[380.67358398 208.77679443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 115]
[46 114]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[54 75]
[55 72]
[56 71]
[57 70]
[58 68]
[59 67]
[60 66]
[82 103]
[83 102]
[84 101]
[85 100]
[86 98]
[87 97]
[88 95]
[89 94]
[105 112]
[106 111]
[134 267]
[135 266]
[136 265]
[137 264]
[138 263]
[139 262]
[140 261]
[141 260]
[143 259]
[144 258]
[145 257]
[146 256]
[148 254]
[149 253]
[150 252]
[155 202]
[156 201]
[157 200]
[158 198]
[159 197]
[160 193]
[161 192]
[162 191]
[163 190]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[171 181]
[214 225]
[215 224]
[227 249]
[228 248]
[229 247]
[230 246]
[231 245]
[232 243]
[233 242]
[234 241]
[235 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
