%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAGAGUCUGUGCUUCACUUCCGUUCCAGCCUCAGCGGCAGCUGGAUCGCUCGACGGAGUGCCUCUGGUAGUUGGCCAAGACGCCGAAUAUCAAAAUCUUCAGCGGCAGCUCCCACCAGGACUUAUCCCAGAAAAUUGCUGACCGCCUGGGCCUGGAGCUAGGCAAGGUGGUGACUAAGA\
) } def
/len { sequence length } bind def

/coor [
[79.84649658 688.89129639]
[66.68811035 680.96966553]
[59.26748276 667.52239990]
[59.58071899 652.16668701]
[67.54357147 639.03320312]
[81.01406097 631.65472412]
[81.27297211 616.65698242]
[81.53188324 601.65924072]
[81.79078674 586.66143799]
[71.28959656 576.16094971]
[71.33851624 560.94738770]
[82.42361450 550.00396729]
[82.68252563 535.00622559]
[82.94143677 520.00842285]
[83.20034027 505.01068115]
[83.45925140 490.01290894]
[72.95806122 479.51239014]
[73.00698090 464.29885864]
[84.09207916 453.35543823]
[84.35099030 438.35766602]
[84.60990143 423.35989380]
[76.42597961 414.42999268]
[76.53456879 401.91653442]
[85.42370605 392.54724121]
[85.94145203 377.55618286]
[86.45919037 362.56512451]
[86.97693634 347.57406616]
[87.49467468 332.58300781]
[88.01242065 317.59191895]
[88.53015900 302.60086060]
[81.23676300 289.61413574]
[89.44578552 276.08923340]
[89.96352386 261.09817505]
[90.48126984 246.10711670]
[90.99900818 231.11604309]
[91.51675415 216.12498474]
[91.90509033 201.13002014]
[92.16400146 186.13224792]
[92.42291260 171.13447571]
[92.55237579 156.13504028]
[92.55237579 141.13504028]
[92.55237579 126.13504028]
[92.55237579 111.13504028]
[86.94960022 101.14076996]
[91.14286804 90.75345612]
[89.07806396 75.89624786]
[87.01325989 61.03904343]
[84.94845581 46.18183517]
[71.42037201 38.81317139]
[64.90135956 25.05250740]
[67.70201111 10.26669216]
[78.54236603 0.08706658]
[76.47756195 -14.77013969]
[59.24023056 -23.02586174]
[50.50244141 -39.85547638]
[53.61798096 -58.40878296]
[67.15657806 -71.25518036]
[64.32551575 -85.98559570]
[61.49444962 -100.71601105]
[58.66338730 -115.44641876]
[55.70529556 -130.15185547]
[52.62039566 -144.83120728]
[49.53549957 -159.51055908]
[46.45059967 -174.18991089]
[36.04055405 -186.10383606]
[40.99496841 -200.15029907]
[37.91006851 -214.82965088]
[34.82517242 -229.50900269]
[31.74027252 -244.18835449]
[26.90115547 -251.96691895]
[28.73112106 -259.14761353]
[25.90005684 -273.87802124]
[21.80976295 -288.30957031]
[16.49069023 -302.33480835]
[11.17161751 -316.36007690]
[5.85254383 -330.38531494]
[0.53347045 -344.41055298]
[-13.97950840 -350.66744995]
[-19.73970795 -365.38464355]
[-13.32970238 -379.83065796]
[1.44756413 -385.43493652]
[15.82500267 -378.87255859]
[21.27273369 -364.03686523]
[14.55871391 -349.72961426]
[19.87778664 -335.70437622]
[25.19686127 -321.67913818]
[30.51593399 -307.65390015]
[35.83500671 -293.62866211]
[40.06056976 -308.02117920]
[50.83699417 -318.45516968]
[65.35840607 -322.21395874]
[79.84384918 -318.31884766]
[90.52172852 -307.78402710]
[94.61182404 -293.35241699]
[91.04919434 -278.78161621]
[80.76144409 -267.86547852]
[66.42721558 -263.44622803]
[51.77872467 -266.67449951]
[40.63047028 -276.70910645]
[43.46153259 -261.97866821]
[46.41962433 -247.27325439]
[49.50452423 -232.59390259]
[52.58942413 -217.91455078]
[55.67432022 -203.23518372]
[65.86371613 -192.37123108]
[61.12995148 -177.27481079]
[64.21485138 -162.59545898]
[67.29975128 -147.91610718]
[70.38465118 -133.23675537]
[74.84881592 -127.32216644]
[73.39379883 -118.27748871]
[76.22486115 -103.54707336]
[79.05593109 -88.81665802]
[81.88699341 -74.08624268]
[92.74156952 -71.32920837]
[101.81745911 -64.68051147]
[107.77332306 -55.07509995]
[109.71116638 -43.88825607]
[107.31153870 -32.73870850]
[100.88548279 -23.25443649]
[91.33477020 -16.83494186]
[93.39957428 -1.97773612]
[106.60494995 4.86009741]
[113.33135223 18.32187653]
[110.81173706 33.33869553]
[99.80566406 44.11703110]
[101.87046814 58.97423935]
[103.93527222 73.83144379]
[106.00006866 88.68865204]
[114.70656586 76.47402954]
[128.48510742 70.54512787]
[143.34077454 72.62093353]
[154.96638489 82.09961700]
[159.99122620 96.23294067]
[156.95841980 110.92314911]
[146.74729919 121.91099548]
[132.31843567 126.01071930]
[117.85527039 122.03364563]
[107.55237579 111.13504028]
[107.55237579 126.13504028]
[107.55237579 141.13504028]
[107.55237579 156.13504028]
[110.68830109 164.74255371]
[107.42067719 171.39338684]
[107.16176605 186.39115906]
[106.90285492 201.38891602]
[109.88975525 210.04927063]
[106.50781250 216.64273071]
[105.99007416 231.63378906]
[105.47232819 246.62484741]
[104.95458984 261.61590576]
[104.43684387 276.60696411]
[111.69320679 290.66598511]
[103.52122498 303.11862183]
[103.00347900 318.10968018]
[102.48574066 333.10073853]
[101.96799469 348.09179688]
[101.45025635 363.08285522]
[100.93251038 378.07391357]
[100.41477203 393.06497192]
[109.44464111 409.09939575]
[99.60766602 423.61880493]
[99.34875488 438.61657715]
[99.08984375 453.61434937]
[109.79061127 464.93386841]
[109.31439209 480.14004517]
[98.45701599 490.27182007]
[98.19811249 505.26959229]
[97.93920135 520.26733398]
[97.68029022 535.26513672]
[97.42137909 550.26287842]
[108.12214661 561.58239746]
[107.64592743 576.78857422]
[96.78855133 586.92034912]
[96.52964783 601.91815186]
[96.27073669 616.91589355]
[96.01182556 631.91363525]
[109.21961212 639.75262451]
[116.72440338 653.15313721]
[116.50743103 668.51049805]
[108.62707520 681.69366455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 177]
[7 176]
[8 175]
[9 174]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[19 164]
[20 163]
[21 162]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 146]
[38 145]
[39 144]
[40 142]
[41 141]
[42 140]
[43 139]
[45 129]
[46 128]
[47 127]
[48 126]
[52 122]
[53 121]
[57 114]
[58 113]
[59 112]
[60 111]
[61 109]
[62 108]
[63 107]
[64 106]
[66 104]
[67 103]
[68 102]
[69 101]
[71 100]
[72 99]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
