%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGAGGGCGACGCAGUUCGCAGGCGCGUCGGCGCGCCUGUUCUGGGGCGCUUGGCUUCACCGCGCAGGCGCGGUCGCCGCUGUUGUUGUGGUCCCCAUGGAGCUGCCGUAGCGGACCCAGCACAGCCAGGAGCGUCCGGGAUGAGCUCAGCCGCGGCCGACCACUGGGCGUGGUUGCUGGUGCUCAGCUUCGUGUUUGGAUGCAAUGUUCUUAGGAUCCUCCUCCCGUCCUUCUCAUCCU\
) } def
/len { sequence length } bind def

/coor [
[77.60227966 195.75621033]
[75.06737518 180.53852844]
[81.18317413 166.37516785]
[93.99813080 157.78561401]
[93.60871887 142.79067993]
[93.21930695 127.79573059]
[80.39422607 120.01644135]
[66.91611481 126.59978485]
[53.43799973 133.18313599]
[39.95988464 139.76647949]
[26.48177147 146.34982300]
[13.00365639 152.93316650]
[11.58720112 173.83430481]
[-11.50946045 187.71258545]
[-21.90752602 198.52369690]
[-32.30559158 209.33480835]
[-31.46557045 220.15298462]
[-36.60176086 229.46139526]
[-45.81378937 234.31430054]
[-55.95878220 233.32810974]
[-66.63401031 243.86564636]
[-77.30922699 254.40316772]
[-87.98445129 264.94070435]
[-98.65967560 275.47824097]
[-109.33489990 286.01577759]
[-120.01012421 296.55331421]
[-130.68534851 307.09082031]
[-141.36058044 317.62835693]
[-145.18362427 333.57565308]
[-160.98069763 337.97842407]
[-172.50114441 326.30743408]
[-167.89369202 310.56884766]
[-151.89810181 306.95315552]
[-141.22288513 296.41561890]
[-130.54765320 285.87808228]
[-119.87243652 275.34054565]
[-109.19721222 264.80300903]
[-98.52198792 254.26547241]
[-87.84676361 243.72795105]
[-77.17153931 233.19041443]
[-66.49631500 222.65287781]
[-62.72402573 203.67607117]
[-43.11670685 198.93675232]
[-32.71864319 188.12564087]
[-22.32057762 177.31451416]
[-25.30276108 170.43290710]
[-31.26712608 156.66967773]
[-34.24930954 149.78807068]
[-49.24804688 149.98278809]
[-64.24678040 150.17750549]
[-79.24552155 150.37223816]
[-94.24425507 150.56695557]
[-109.24298859 150.76167297]
[-124.24172974 150.95639038]
[-139.23887634 151.24847412]
[-154.23382568 151.63787842]
[-164.93212891 163.27067566]
[-180.72587585 163.84797668]
[-192.24490356 153.02728271]
[-192.65519714 137.22831726]
[-181.71331787 125.82433319]
[-165.91090393 125.58110046]
[-154.62322998 136.64292908]
[-139.62829590 136.25352478]
[-133.03715515 132.94490051]
[-124.43644714 135.95765686]
[-109.43771362 135.76293945]
[-94.43897247 135.56822205]
[-79.44023895 135.37350464]
[-64.44150543 135.17877197]
[-49.44276810 134.98405457]
[-34.44403076 134.78933716]
[-9.73322296 127.54721832]
[6.42031145 139.45504761]
[19.89842606 132.87170410]
[33.37654114 126.28836060]
[46.85465622 119.70501709]
[60.33277130 113.12167358]
[73.81088257 106.53833008]
[78.68622589 92.35273743]
[72.10287476 78.87461853]
[65.51953125 65.39650726]
[58.93618774 51.91838837]
[52.35284424 38.44027710]
[45.78837967 32.11914444]
[45.77279663 24.74419403]
[39.36497116 11.18175316]
[32.95714569 -2.38068652]
[26.54932213 -15.94312668]
[20.06746864 -22.34893990]
[20.14762497 -29.72347260]
[13.91639900 -43.36795425]
[7.68517351 -57.01243210]
[1.45394850 -70.65691376]
[-4.77727652 -84.30139160]
[-21.28434372 -90.12237549]
[-28.32598114 -105.77681732]
[-21.98472023 -121.36342621]
[-28.39254570 -134.92587280]
[-34.80036926 -148.48831177]
[-41.20819473 -162.05075073]
[-55.76550674 -168.79347229]
[-59.43004608 -184.41238403]
[-49.39068985 -196.92601013]
[-33.34877396 -196.73497009]
[-23.61028290 -183.98579407]
[-27.64575577 -168.45857239]
[-21.23793030 -154.89613342]
[-14.83010483 -141.33369446]
[-8.42228031 -127.77125549]
[4.18543243 -125.17060852]
[13.13154030 -115.64540863]
[14.99202347 -102.51448059]
[8.86720276 -90.53261566]
[15.09842873 -76.88813782]
[21.32965279 -63.24365616]
[27.56087875 -49.59917831]
[33.79210281 -35.95469666]
[40.11176300 -22.35095215]
[46.51958847 -8.78851128]
[52.92741013 4.77392864]
[59.33523560 18.33636856]
[65.83095551 31.85693169]
[72.41430664 45.33504486]
[78.99765015 58.81315994]
[85.58099365 72.29127502]
[92.16433716 85.76938629]
[94.30748749 76.54799652]
[100.86666870 67.99098969]
[111.49844360 61.78386307]
[125.28565979 59.43997192]
[140.81370544 62.11929703]
[156.30094910 70.47765350]
[170.45460510 65.51034546]
[184.60824585 60.54302979]
[198.76190186 55.57571793]
[212.91554260 50.60840607]
[227.06919861 45.64109421]
[241.22285461 40.67378235]
[255.37649536 35.70647049]
[269.53015137 30.73915672]
[283.65124512 25.68008041]
[297.73922729 20.52945137]
[311.82720947 15.37882328]
[325.91519165 10.22819519]
[339.96942139 4.98623276]
[353.98934937 -0.34684354]
[368.00927734 -5.67991972]
[378.15686035 -17.81816864]
[392.80346680 -15.11144543]
[406.82339478 -20.44452095]
[420.84332275 -25.77759743]
[427.37557983 -39.91857147]
[441.66976929 -45.12734985]
[455.11074829 -38.81268311]
[469.13067627 -44.14575577]
[483.15060425 -49.47883224]
[497.17053223 -54.81190872]
[504.06127930 -60.77566147]
[511.40722656 -60.12192154]
[525.49517822 -65.27255249]
[539.58319092 -70.42317963]
[553.67114258 -75.57380676]
[567.75909424 -80.72443390]
[581.84710693 -85.87506104]
[589.88305664 -99.76042938]
[605.77008057 -101.99246979]
[617.32098389 -90.85895538]
[615.67498779 -74.90056610]
[602.09466553 -66.35921478]
[586.99774170 -71.78708649]
[572.90972900 -66.63645935]
[558.82177734 -61.48583221]
[544.73382568 -56.33520508]
[530.64581299 -51.18457413]
[516.55786133 -46.03394699]
[502.50360107 -40.79198456]
[488.48367310 -35.45890808]
[474.46374512 -30.12583160]
[460.44384766 -24.79275703]
[454.59774780 -11.14142227]
[440.45553589 -5.53320503]
[426.17639160 -11.75767231]
[412.15646362 -6.42459631]
[398.13653564 -1.09152031]
[388.99176025 10.66527176]
[373.34234619 8.34000492]
[359.32241821 13.67308140]
[345.30249023 19.00615692]
[340.17892456 24.31078720]
[331.06579590 24.31616974]
[316.97784424 29.46679878]
[302.88986206 34.61742783]
[288.80187988 39.76805496]
[283.60986328 45.00572586]
[274.49746704 44.89280701]
[260.34381104 49.86011887]
[246.19015503 54.82743073]
[232.03651428 59.79474258]
[217.88285828 64.76205444]
[203.72921753 69.72937012]
[189.57556152 74.69667816]
[175.42190552 79.66399384]
[161.26826477 84.63130951]
[158.55627441 91.62380981]
[173.35873413 94.05020905]
[188.15615845 91.59339142]
[199.84242249 100.99717712]
[200.60832214 115.97761536]
[189.94206238 126.52420807]
[174.97122192 125.58934784]
[165.69985962 113.79764557]
[153.13230896 105.60882568]
[150.42033386 112.60133362]
[157.52345276 125.81290436]
[164.62658691 139.02447510]
[171.72972107 152.23603821]
[178.83285522 165.44760132]
[194.22109985 166.54550171]
[206.55924988 175.80690002]
[211.91023254 190.27653503]
[208.56658936 205.33720398]
[197.59524536 216.18309021]
[182.49713135 219.35331726]
[168.08998108 213.83627319]
[158.97108459 201.39242554]
[158.05023193 185.99256897]
[165.62127686 172.55073547]
[158.51815796 159.33917236]
[151.41502380 146.12759399]
[144.31188965 132.91603088]
[137.20875549 119.70446014]
[129.96012878 121.62992859]
[108.21425629 127.40631866]
[108.60366821 142.40126038]
[108.99307251 157.39620972]
[122.23658752 165.30903625]
[129.07926941 179.13586426]
[127.33764648 194.46461487]
[117.56745911 206.40391541]
[102.88634491 211.14399719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 236]
[5 235]
[6 234]
[7 79]
[8 78]
[9 77]
[10 76]
[11 75]
[12 74]
[14 45]
[15 44]
[16 43]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 64]
[56 63]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[86 122]
[87 121]
[88 120]
[89 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[98 110]
[99 109]
[100 108]
[101 107]
[133 204]
[134 203]
[135 202]
[136 201]
[137 200]
[138 199]
[139 198]
[140 197]
[141 196]
[142 194]
[143 193]
[144 192]
[145 191]
[146 189]
[147 188]
[148 187]
[150 185]
[151 184]
[152 183]
[155 180]
[156 179]
[157 178]
[158 177]
[160 176]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
[214 232]
[215 231]
[216 230]
[217 229]
[218 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
