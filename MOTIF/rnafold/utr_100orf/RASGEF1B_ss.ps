%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCUGCCGUAGUUUCAGUAUAAACAAGGAACCCGACUGGUUAGACAGAUUUUGUUUUUCUUCUUCCCGCGCGCUUUAGCUCCCUGUCCUUUGGUCGCAUUUGUGGGCGCGCGGCACGCAGCCGGGAGGCCGAGGACUCGGAGUUCACCUGCAGGAAAGUAUGCCUCAGACUCCUCCCUUUUCAGCAAUGUUUGACAGCAGUGGUUACAAUCGAAACCUCUAUCAGUCUGCAGAGGACAGCUGUGGAGGG\
UUGUAUUACC\
) } def
/len { sequence length } bind def

/coor [
[315.93435669 114.34502411]
[300.95111084 113.63665771]
[285.96783447 112.92829132]
[273.15939331 126.04100037]
[254.51429749 125.58512878]
[241.93699646 111.38259125]
[226.94117737 111.02830505]
[211.94537354 110.67402649]
[196.94955444 110.31974030]
[181.95373535 109.96546173]
[166.95791626 109.61117554]
[151.96211243 109.25689697]
[145.22377014 112.23062134]
[136.79156494 108.80883789]
[121.80097961 108.27747345]
[114.08049011 130.85296631]
[84.66943359 141.78512573]
[76.76409149 154.53289795]
[68.85875702 167.28067017]
[60.95341110 180.02842712]
[64.80468750 195.35629272]
[56.61793518 208.87489319]
[41.25021744 212.56390381]
[27.81892204 204.23468018]
[24.29260254 188.82881165]
[32.76335907 175.48632812]
[48.20564651 172.12309265]
[56.11098480 159.37532043]
[64.01632690 146.62754822]
[71.92166901 133.87979126]
[62.09267044 122.54882050]
[48.35607147 128.57424927]
[34.61947250 134.59968567]
[20.88287163 140.62510681]
[7.14627218 146.65054321]
[-6.59032774 152.67597961]
[-12.40945435 167.12504578]
[-26.42615509 173.04000854]
[-40.16527176 167.40330505]
[-53.90187073 173.42874146]
[-67.63846588 179.45417786]
[-81.26617432 185.72200012]
[-94.78070831 192.23025513]
[-108.29524231 198.73851013]
[-113.27783966 213.73681641]
[-127.44371796 220.74420166]
[-142.38850403 215.60331726]
[-149.24572754 201.36413574]
[-143.94712830 186.47453308]
[-129.63624573 179.76824951]
[-114.80349731 185.22398376]
[-101.28896332 178.71572876]
[-87.77442932 172.20747375]
[-86.27181244 169.05267334]
[-83.18412781 166.45785522]
[-78.78595734 165.15231323]
[-73.66390228 165.71757507]
[-59.92729950 159.69213867]
[-46.19070053 153.66671753]
[-41.03250122 139.74089050]
[-27.18746948 133.43455505]
[-12.61575890 138.93937683]
[1.12084067 132.91394043]
[14.85744095 126.88851166]
[28.59403992 120.86308289]
[42.33063889 114.83765411]
[56.06724167 108.81221771]
[57.08276749 101.38128662]
[42.22094345 99.34999084]
[44.25248718 84.48819733]
[59.11381912 86.51943207]
[60.12934494 79.08850098]
[48.51314545 69.59830475]
[36.89694595 60.10810471]
[25.28074265 50.61790466]
[13.66454220 41.12770844]
[2.04834127 31.63750839]
[-9.56785965 22.14731026]
[-21.18406105 12.65711117]
[-32.80026245 3.16691232]
[-44.41646194 -6.32328653]
[-65.19730377 -2.91072488]
[-81.45978546 -15.81979275]
[-82.81240082 -36.24237442]
[-94.86381531 -45.17341614]
[-110.29512024 -43.04912949]
[-122.38973236 -52.27815247]
[-124.31982422 -67.00263214]
[-136.37123108 -75.93367767]
[-151.13253784 -71.14999390]
[-165.87599182 -75.98839569]
[-174.93244934 -88.58840942]
[-174.81950378 -104.10507202]
[-165.58058167 -116.57191467]
[-150.76826477 -121.19518280]
[-136.07815552 -116.19712830]
[-127.15892792 -103.49961090]
[-127.44019318 -87.98508453]
[-115.38877869 -79.05404663]
[-100.73985291 -81.49217224]
[-88.39077759 -72.60649872]
[-85.93276978 -57.22482681]
[-73.88136292 -48.29378510]
[-65.56914520 -52.42012024]
[-56.26910782 -53.25911331]
[-47.24163818 -50.65505600]
[-39.72542572 -44.92171478]
[-34.76749802 -36.80514908]
[-33.07748032 -27.38680267]
[-34.92626572 -17.93948746]
[-23.31006241 -8.44928837]
[-11.69386196 1.04091012]
[-0.07766095 10.53110886]
[11.53853989 20.02130699]
[23.15474129 29.51150703]
[34.77094269 39.00170517]
[46.38714218 48.49190521]
[58.00334549 57.98210144]
[69.61954498 67.47230530]
[108.84166718 67.25872803]
[122.33234406 93.28688812]
[137.32292175 93.81825256]
[152.31639099 94.26107788]
[167.31221008 94.61536407]
[182.30801392 94.96964264]
[197.30383301 95.32392883]
[212.29965210 95.67820740]
[227.29547119 96.03249359]
[242.29127502 96.38677216]
[249.10592651 86.69425964]
[259.63821411 81.53345490]
[271.23458862 82.07633972]
[281.03454590 88.07367706]
[286.67620850 97.94503021]
[301.65948486 98.65339661]
[316.64273071 99.36176300]
[330.27044678 93.09393311]
[339.48364258 81.25682831]
[348.69683838 69.41971588]
[357.91000366 57.58261108]
[354.18023682 46.33658981]
[356.30487061 34.80189896]
[363.64553833 25.80828476]
[374.29888916 21.50557137]
[385.58886719 22.85033798]
[395.07907104 11.23413754]
[404.56927490 -0.38206336]
[414.05947876 -11.99826431]
[423.54965210 -23.61446571]
[424.09082031 -27.84658241]
[425.76602173 -31.34744072]
[428.21200562 -33.85315704]
[431.01739502 -35.24269485]
[433.77270508 -35.54125977]
[443.80087280 -46.69633102]
[453.82907104 -57.85140228]
[457.22293091 -66.29488373]
[464.04214478 -69.07810211]
[474.20138550 -80.11396790]
[484.36059570 -91.14982605]
[481.17001343 -106.33533478]
[487.54531860 -120.48225403]
[501.03503418 -128.15080261]
[516.45214844 -126.39226532]
[527.86840820 -115.88283539]
[530.89410400 -100.66360474]
[524.36572266 -86.58667755]
[510.79357910 -79.06491852]
[495.39645386 -80.99060059]
[485.23724365 -69.95474243]
[475.07800293 -58.91888046]
[464.98413086 -47.82322311]
[454.95596313 -36.66815186]
[444.92776489 -25.51308060]
[435.16586304 -14.12426662]
[425.67565918 -2.50806546]
[416.18545532 9.10813522]
[406.69528198 20.72433662]
[397.20507812 32.34053802]
[400.11398315 50.43853760]
[388.64639282 65.14709473]
[369.74713135 66.79579926]
[360.53393555 78.63291168]
[351.32073975 90.47001648]
[342.10754395 102.30712128]
[343.29830933 109.71199799]
[358.10809326 107.33073425]
[360.48910522 122.14055634]
[345.67980957 124.52173615]
[346.87057495 131.92660522]
[359.33029175 140.27856445]
[371.79000854 148.63052368]
[384.24975586 156.98248291]
[396.70947266 165.33444214]
[412.48068237 166.59135437]
[418.74444580 180.10484314]
[431.20419312 188.45680237]
[443.66390991 196.80874634]
[459.43511963 198.06567383]
[465.69888306 211.57916260]
[478.15863037 219.93112183]
[490.61834717 228.28306580]
[503.07806396 236.63502502]
[515.53778076 244.98698425]
[528.81329346 251.96989441]
[542.75469971 257.50494385]
[558.43609619 255.40597534]
[567.41009521 267.29364014]
[581.35150146 272.82867432]
[595.29290771 278.36373901]
[609.23437500 283.89877319]
[622.27117920 275.48324585]
[637.76281738 276.37136841]
[649.75244141 286.22167969]
[653.62976074 301.24652100]
[647.90393066 315.66854858]
[634.77661133 323.94216919]
[619.29547119 322.88601685]
[607.41345215 312.90621948]
[603.69934082 297.84020996]
[589.75787354 292.30514526]
[575.81646729 286.77011108]
[561.87506104 281.23507690]
[547.19085693 283.72991943]
[537.21966553 271.44635010]
[523.27825928 265.91131592]
[518.84838867 271.96328735]
[530.95220947 280.82321167]
[522.09210205 292.92687988]
[509.98867798 284.06723022]
[505.55880737 290.11920166]
[515.04901123 301.73541260]
[524.53924561 313.35159302]
[534.02941895 324.96780396]
[549.78332520 327.99981689]
[557.10736084 342.27352905]
[550.38305664 356.83935547]
[534.76879883 360.52365112]
[522.24249268 350.50015259]
[522.41320801 334.45800781]
[512.92303467 322.84179688]
[503.43283081 311.22558594]
[493.94262695 299.60940552]
[492.94406128 272.61492920]
[507.18585205 257.44671631]
[494.72610474 249.09475708]
[482.26638794 240.74279785]
[469.80667114 232.39083862]
[457.34692383 224.03887939]
[442.46694946 223.37934875]
[435.31195068 209.26847839]
[422.85223389 200.91651917]
[410.39248657 192.56455994]
[395.51251221 191.90502930]
[388.35751343 177.79415894]
[375.89779663 169.44219971]
[363.43804932 161.09025574]
[350.97833252 152.73829651]
[338.51861572 144.38633728]
[331.95373535 157.87345886]
[319.04061890 165.50572205]
[304.05950928 164.75331116]
[291.97610474 155.86560059]
[286.79562378 141.78857422]
[290.23526001 127.18826294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 136]
[2 135]
[3 134]
[6 129]
[7 128]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[14 122]
[15 121]
[17 30]
[18 29]
[19 28]
[20 27]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[39 59]
[40 58]
[41 57]
[42 53]
[43 52]
[44 51]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[84 103]
[85 102]
[88 99]
[89 98]
[137 185]
[138 184]
[139 183]
[140 182]
[145 179]
[146 178]
[147 177]
[148 176]
[149 175]
[154 174]
[155 173]
[156 172]
[158 171]
[159 170]
[160 169]
[190 259]
[191 258]
[192 257]
[193 256]
[194 255]
[196 253]
[197 252]
[198 251]
[200 249]
[201 248]
[202 247]
[203 246]
[204 245]
[205 226]
[206 225]
[208 223]
[209 222]
[210 221]
[211 220]
[231 243]
[232 242]
[233 241]
[234 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
