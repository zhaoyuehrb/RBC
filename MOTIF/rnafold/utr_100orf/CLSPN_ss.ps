%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGCGGGAGCCGCUGCUCUCCGGCUGAGGGAAUCAGAGACAGCUCCGUCCCUAGUGGAGCGCAGGGGAGGCAGAAGUCAUGACAGGCGAGGUGGGUUCUGAGGUUCACCUAGAAAUCAAUGACCCAAACGUCAUUUCACAAGAGGAAGCAGAUAGUCCUUCAGAUAGUGGACAGGGCA\
) } def
/len { sequence length } bind def

/coor [
[150.37701416 296.31912231]
[149.20689392 281.36532593]
[141.72975159 281.95050049]
[137.36770630 296.30224609]
[133.00564575 310.65399170]
[128.64358521 325.00573730]
[132.88377380 340.84722900]
[121.09503937 352.24713135]
[105.40461731 347.47817993]
[101.95347595 331.44628906]
[114.29184723 320.64367676]
[118.65390015 306.29193115]
[123.01596069 291.94018555]
[127.37801361 277.58843994]
[127.89861298 262.59750366]
[124.54267120 247.97772217]
[121.18672943 233.35795593]
[117.83078766 218.73818970]
[114.47484589 204.11840820]
[109.90151978 198.28681946]
[111.18986511 189.21582031]
[108.08816528 174.54000854]
[104.98647308 159.86419678]
[83.79470062 157.84440613]
[64.63800812 148.56044006]
[49.92211914 133.17820740]
[36.48104477 139.83685303]
[23.03997040 146.49548340]
[9.59889698 153.15412903]
[3.12774825 167.83418274]
[-12.42040920 171.78820801]
[-25.11836052 161.98303223]
[-25.22532272 145.94032288]
[-12.65924454 135.96670532]
[2.94025421 139.71305847]
[16.38132858 133.05441284]
[29.82240295 126.39577484]
[43.26347733 119.73712921]
[39.94884109 98.43619537]
[44.36763382 77.33664703]
[31.29134178 69.98746490]
[18.21504784 62.63827896]
[3.17197394 66.68100739]
[-9.98455524 59.04161072]
[-13.74597645 44.67542648]
[-26.82226944 37.32624054]
[-39.96184921 30.09081078]
[-53.16372681 22.96968269]
[-68.98282623 23.22795677]
[-76.51119995 10.37599564]
[-89.71307373 3.25486851]
[-102.91494751 -3.86625886]
[-116.11682892 -10.98738575]
[-129.31871033 -18.10851288]
[-138.38418579 -19.43510818]
[-142.68634033 -25.46952629]
[-155.76263428 -32.81871033]
[-168.83892822 -40.16790009]
[-185.60911560 -42.65729904]
[-187.85945129 -59.46123886]
[-172.33517456 -66.27542114]
[-161.48974609 -53.24419403]
[-148.41345215 -45.89500427]
[-135.33715820 -38.54581833]
[-122.19757843 -31.31039047]
[-108.99569702 -24.18926239]
[-95.79382324 -17.06813622]
[-82.59194946 -9.94700813]
[-69.39006805 -2.82588077]
[-54.51525879 -3.59350491]
[-46.04259872 9.76780605]
[-32.84072113 16.88893318]
[-25.44104576 17.29823685]
[-19.47308350 24.24994659]
[-6.39679003 31.59913254]
[7.83072710 27.34315491]
[21.19664001 34.60999680]
[25.56423378 49.56198502]
[38.64052963 56.91117096]
[51.71682358 64.26035309]
[60.43850327 54.79518509]
[70.97630310 47.40520477]
[82.84648132 42.42965698]
[95.50411224 40.09695816]
[108.36814117 40.51419067]
[120.84800720 43.66219711]
[132.37081909 49.39647293]
[141.96824646 37.86870193]
[151.56567383 26.34093094]
[161.16308594 14.81315994]
[158.40129089 1.61383891]
[163.67686462 -10.58465195]
[174.85386658 -17.40891838]
[187.72639465 -16.55397797]
[197.52244568 -27.91343880]
[207.31849670 -39.27289963]
[217.11454773 -50.63236237]
[226.91059875 -61.99182129]
[236.70664978 -73.35128021]
[239.71458435 -91.50548553]
[256.47766113 -96.65946960]
[266.07507324 -108.18724060]
[275.67251587 -119.71500397]
[275.28125000 -132.62487793]
[283.53472900 -142.03205872]
[295.58755493 -143.24238586]
[305.38360596 -154.60183716]
[315.17965698 -165.96130371]
[315.43600464 -182.00230408]
[328.22473145 -191.68882751]
[343.73538208 -187.59017944]
[350.06954956 -172.85050964]
[342.36819458 -158.77682495]
[326.53912354 -156.16525269]
[316.74307251 -144.80578613]
[306.94702148 -133.44633484]
[304.61450195 -116.06462097]
[287.20028687 -110.11758423]
[277.60284424 -98.58981323]
[268.00543213 -87.06204224]
[268.78991699 -74.97402954]
[260.86511230 -65.28834534]
[248.06611633 -63.55523300]
[238.27006531 -52.19577026]
[228.47401428 -40.83630753]
[218.67796326 -29.47684860]
[208.88189697 -18.11738586]
[199.08584595 -6.75792551]
[201.04740906 9.93286514]
[190.12561035 23.14648819]
[172.69085693 24.41058159]
[163.09344482 35.93835449]
[153.49601746 47.46612167]
[143.89859009 58.99389267]
[150.06175232 66.79747009]
[154.85314941 75.51084900]
[158.14149475 84.89526367]
[159.83668518 94.69356537]
[159.89225769 104.63727570]
[158.30670166 114.45391846]
[155.12345886 123.87449646]
[150.42974854 132.64088440]
[144.35420227 140.51286316]
[137.06327820 147.27473450]
[128.75677490 152.74121094]
[119.66228485 156.76249695]
[122.76397705 171.43832397]
[125.86567688 186.11413574]
[129.09461975 200.76246643]
[132.45056152 215.38224792]
[135.80650330 230.00201416]
[139.16244507 244.62178040]
[142.51838684 259.24154663]
[151.45004272 255.12420654]
[162.98840332 255.49153137]
[175.03541565 261.41928101]
[185.13664246 273.06796265]
[191.67839050 286.56631470]
[198.22013855 300.06466675]
[204.76188660 313.56301880]
[211.30363464 327.06137085]
[217.96228027 340.50247192]
[224.73730469 353.88525391]
[240.07780457 356.21948242]
[251.09280396 367.14880371]
[253.54681396 382.47058105]
[246.49621582 396.29333496]
[232.65209961 403.30194092]
[217.33782959 400.80139160]
[206.44203186 389.75326538]
[204.15438843 374.40573120]
[211.35452271 360.66027832]
[204.57949829 347.27749634]
[198.73738098 342.71762085]
[197.80528259 333.60311890]
[191.26353455 320.10476685]
[184.72178650 306.60641479]
[178.18003845 293.10806274]
[171.63829041 279.60971069]
[164.16116333 280.19491577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[21 148]
[22 147]
[23 146]
[26 38]
[27 37]
[28 36]
[29 35]
[40 80]
[41 79]
[42 78]
[45 75]
[46 74]
[47 72]
[48 71]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[56 64]
[57 63]
[58 62]
[87 134]
[88 133]
[89 132]
[90 131]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[101 120]
[102 119]
[103 118]
[106 116]
[107 115]
[108 114]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
