%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAUCGCGCUGAUGUGGCCCCAACCCCGCCUCCCUCCCCGCCCCGCGAUGUCGGAAGAAACCCGACAGAGCAAAUUGGCCGCAGCGAAGAAAAAGUUGAGAGAAUAUCAGC\
) } def
/len { sequence length } bind def

/coor [
[183.79881287 354.10086060]
[171.31271362 344.32168579]
[163.49179077 330.48028564]
[161.54841614 314.66268921]
[165.80661011 299.26577759]
[175.64839172 286.63397217]
[168.14839172 273.64358521]
[160.64839172 260.65319824]
[153.14839172 247.66282654]
[146.09066772 260.89868164]
[131.39602661 263.90994263]
[119.70114899 254.51684570]
[119.47134399 239.51861572]
[130.87295532 229.77165222]
[145.65341187 232.33158875]
[140.00877380 218.43418884]
[134.36413574 204.53677368]
[128.71949768 190.63935852]
[123.07485199 176.74195862]
[117.43021393 162.84454346]
[111.78557587 148.94712830]
[100.15705872 150.34576416]
[88.52004242 149.01971436]
[77.50431824 145.04071045]
[67.70605469 138.62411499]
[59.65553284 130.11718750]
[53.78844833 119.98033142]
[50.42232132 108.76214600]
[49.73933029 97.06974792]
[51.77643585 85.53593445]
[38.21107864 79.13428497]
[25.63537407 87.95172882]
[10.33437538 89.28401184]
[-3.57602715 82.77277374]
[-12.35400391 70.16948700]
[-13.63832283 54.86439133]
[-7.08350992 40.97446442]
[5.54722452 32.23603821]
[20.85627556 30.99969864]
[34.72558594 37.59801865]
[43.42437744 50.25608063]
[44.61272430 65.56893158]
[58.17808151 71.97058105]
[66.37689209 62.52724075]
[76.65030670 55.39604187]
[88.36444092 51.01699448]
[100.79650879 49.66028595]
[103.26542664 34.86486816]
[94.35191345 22.09039879]
[97.06651306 7.12090969]
[109.29994965 -1.29803848]
[111.76886749 -16.09345818]
[114.23778534 -30.88887787]
[116.70670319 -45.68429565]
[119.17562103 -60.47971725]
[121.64453888 -75.27513885]
[111.34643555 -87.04301453]
[111.07356262 -102.67822266]
[120.95477295 -114.79827881]
[136.32444763 -117.68047333]
[149.92550659 -109.96392059]
[155.33593750 -95.29213715]
[150.00111389 -80.59269714]
[136.43995667 -72.80622101]
[133.97103882 -58.01079941]
[131.50212097 -43.21537781]
[129.03320312 -28.41995811]
[126.56428528 -13.62453938]
[124.09536743 1.17088032]
[132.93232727 13.10585594]
[130.63926697 28.14568710]
[118.06084442 37.33378601]
[115.59192657 52.12920380]
[132.30924988 61.38868713]
[144.37139893 76.21134949]
[150.04045105 94.46152496]
[148.49958801 113.50968933]
[139.97080994 130.61135864]
[125.68298340 143.30249023]
[131.32762146 157.19990540]
[136.97225952 171.09730530]
[142.61691284 184.99472046]
[148.26155090 198.89213562]
[153.90618896 212.78955078]
[159.55082703 226.68695068]
[166.13877869 240.16282654]
[173.63877869 253.15319824]
[181.13877869 266.14358521]
[188.63877869 279.13397217]
[202.77098083 276.86132812]
[216.79637146 279.56594849]
[229.01869202 286.89981079]
[237.96696472 297.95626831]
[242.57247925 311.38211060]
[242.29640198 325.54324341]
[237.19276428 338.72344971]
[227.89939880 349.33248901]
[235.03862000 362.52459717]
[242.17782593 375.71670532]
[249.31703186 388.90881348]
[256.45623779 402.10092163]
[271.81088257 405.06219482]
[281.62954712 417.23297119]
[281.27618408 432.86657715]
[270.91763306 444.58126831]
[255.44488525 446.84576416]
[242.16369629 438.59082031]
[237.34504700 423.71420288]
[243.26414490 409.24014282]
[236.12493896 396.04803467]
[228.98571777 382.85592651]
[221.84651184 369.66381836]
[214.70730591 356.47171021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 89]
[7 88]
[8 87]
[9 86]
[15 85]
[16 84]
[17 83]
[18 82]
[19 81]
[20 80]
[21 79]
[30 43]
[31 42]
[47 73]
[48 72]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
