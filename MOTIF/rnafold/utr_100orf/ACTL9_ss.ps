%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGUCAUAGAUUGCGGGCCCACCCCUCCCCCUGUCUGCCUGCCCUCCCCACUGGCCGGGCCUCAACCUCUUCUCCCCACAACCCCAACCCCAGAGGAAAAGCCCCCUCACCUGGCGUCCCGCAACCAUGGAUGCAAGUCGCCCCAAGUCCUCGGAAUCCCAGUCCUCCCUGGAGGCCCCCAGGCCCGGCCCAAACCCCAGUCCCAACGUGGUGAACAAGCCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[22.12895203 470.41897583]
[35.87516785 464.41552734]
[50.70013428 466.70034790]
[62.00066757 476.56365967]
[59.14970779 461.83709717]
[56.29874420 447.11050415]
[53.44778442 432.38394165]
[40.88645554 427.88317871]
[32.11642456 417.68368530]
[29.50727081 404.37738037]
[33.84470749 391.41595459]
[44.09822845 382.21560669]
[41.44867706 367.45144653]
[38.79912949 352.68731689]
[36.14957809 337.92315674]
[21.94837379 333.09350586]
[10.84701633 343.18109131]
[-0.25434250 353.26870728]
[-11.35570049 363.35632324]
[-22.45705986 373.44393921]
[-33.55841827 383.53152466]
[-34.47127151 399.08160400]
[-45.87332916 409.15371704]
[-60.69231415 408.18762207]
[-71.79367065 418.27523804]
[-68.45364380 433.26657104]
[-73.07207489 447.91461182]
[-84.40660858 458.27917480]
[-99.40833282 461.57217407]
[-114.04184723 456.90786743]
[-124.37081146 445.54089355]
[-127.61679077 430.52893066]
[-122.90662384 415.91009521]
[-111.50733185 405.61682129]
[-96.48526764 402.41790771]
[-81.88127899 407.17388916]
[-70.77992249 397.08627319]
[-70.32686615 382.24273682]
[-59.21221161 371.85433960]
[-43.64602661 372.43017578]
[-32.54466629 362.34255981]
[-21.44330978 352.25497437]
[-10.34195042 342.16735840]
[0.75940758 332.07974243]
[11.86076641 321.99212646]
[4.19729710 312.83978271]
[-1.15631163 302.25509644]
[-3.95153618 290.80535889]
[-4.07592916 279.09558105]
[-1.55725312 267.73660278]
[3.43974614 257.31314087]
[10.62366676 248.35386658]
[19.59324837 241.30445862]
[29.85967636 236.50549316]
[40.87317657 234.17617798]
[52.05242157 234.40444946]
[55.90171051 219.90675354]
[59.75100327 205.40907288]
[63.60029602 190.91137695]
[67.44958496 176.41369629]
[71.29887390 161.91600037]
[75.14817047 147.41831970]
[78.99745941 132.92062378]
[82.84674835 118.42294312]
[86.69604492 103.92525482]
[76.36740875 114.80272675]
[71.06976318 128.83607483]
[63.13209915 141.56373596]
[52.86043549 152.49502563]
[40.65078354 161.20848083]
[26.97386551 167.36817932]
[12.35697746 170.73664856]
[-2.63634968 171.18402100]
[-17.42807198 168.69303894]
[-31.44791412 163.35975647]
[-44.15536499 155.38977051]
[-55.06050873 145.09036255]
[-63.74291229 132.85859680]
[-69.86784363 119.16607666]
[-73.19915771 104.54067993]
[-73.60842133 89.54626465]
[-71.07986450 74.76091766]
[-65.71096039 60.75467300]
[-57.70870590 48.06751633]
[-47.38161850 37.18858337]
[-35.12783813 28.53729057]
[-21.41979027 22.44717789]
[-6.78597069 19.15304184]
[8.20943642 18.78188324]
[22.98830605 21.34800720]
[36.98086166 26.75248528]
[49.64764404 34.78695297]
[60.50029755 45.14165497]
[69.12042236 57.41738129]
[75.17423248 71.13645172]
[86.08145905 81.43364716]
[81.44620514 67.16780090]
[76.81095123 52.90195465]
[72.17569733 38.63610458]
[57.37702179 33.96932220]
[48.17479706 21.47537422]
[48.10746384 5.95844555]
[57.20091248 -6.61489105]
[71.95852661 -11.40993118]
[86.70570374 -6.58288336]
[95.77185059 6.01015377]
[95.67085266 21.52689934]
[86.44154358 34.00085068]
[91.07679749 48.26669693]
[95.71205139 62.53254700]
[100.34730530 76.79839325]
[107.84712982 76.84961700]
[122.84678650 76.95205688]
[130.34660339 77.00328064]
[135.17628479 62.80207443]
[132.29437256 47.24555969]
[143.71754456 37.68729401]
[148.54722595 23.48608780]
[153.37689209 9.28488255]
[158.20657349 -4.91632271]
[163.03623962 -19.11752892]
[167.86592102 -33.31873322]
[158.18397522 -45.32970428]
[156.55534363 -60.67086029]
[163.49971008 -74.44689941]
[176.80117798 -82.26193237]
[192.21527100 -81.62220764]
[204.82342529 -72.73187256]
[210.60240173 -58.42778778]
[207.70817566 -43.27433777]
[197.06427002 -32.10693741]
[182.06712341 -28.48905945]
[177.23745728 -14.28785324]
[172.40777588 -0.08664751]
[167.57809448 14.11455822]
[162.74842834 28.31576347]
[157.91874695 42.51696777]
[161.14611816 57.05772018]
[149.37748718 67.63175201]
[144.54782104 81.83295441]
[149.81477356 87.17234802]
[160.34869385 97.85114288]
[165.61564636 103.19053650]
[179.88150024 98.55528259]
[194.14733887 93.92002869]
[208.38119507 89.18745422]
[222.58241272 84.35778046]
[236.78361511 79.52809906]
[250.88288879 74.40850067]
[264.87432861 69.00111389]
[271.33148193 54.82567978]
[285.59780884 49.54113770]
[299.07211304 55.78440475]
[313.06356812 50.37701797]
[319.92877197 44.37239456]
[327.28320312 44.99276352]
[341.34719849 39.77698517]
[351.38961792 26.81234550]
[367.59976196 29.29480934]
[373.30206299 44.67063522]
[362.63043213 57.12248993]
[346.56295776 53.84097290]
[332.49899292 59.05674744]
[318.47094727 64.36845398]
[304.47952271 69.77584076]
[298.70593262 83.45799255]
[284.59365845 89.14116669]
[270.28170776 82.99254608]
[256.29028320 88.39993286]
[254.53819275 91.44519043]
[251.23078918 93.79811859]
[246.70715332 94.73992157]
[241.61328125 93.72930908]
[227.41207886 98.55898285]
[213.21087646 103.38865662]
[207.89747620 108.51116943]
[198.78259277 108.18587494]
[184.51675415 112.82112885]
[170.25090027 117.45638275]
[152.80134583 127.39046478]
[135.21669006 130.48527527]
[119.62918854 127.36152649]
[107.84521484 119.23133850]
[101.19373322 107.77454376]
[97.34443665 122.27223206]
[93.49514771 136.76992798]
[89.64585876 151.26760864]
[85.79656219 165.76528931]
[81.94727325 180.26298523]
[78.09798431 194.76066589]
[74.24868774 209.25836182]
[70.39939880 223.75604248]
[66.55010986 238.25373840]
[78.94913483 245.57260132]
[88.76653290 256.26635742]
[95.10409546 269.45864868]
[97.35263824 284.04077148]
[95.24988556 298.76464844]
[88.90898895 312.34979248]
[78.81466675 323.59457397]
[65.78672028 331.48245239]
[50.91372299 335.27362061]
[53.56327057 350.03775024]
[56.21282196 364.80191040]
[58.86236954 379.56604004]
[74.19081116 386.73202515]
[82.14419556 401.47845459]
[79.75979614 417.89437866]
[68.17436218 429.53295898]
[71.02532196 444.25955200]
[73.87628174 458.98611450]
[76.72724152 473.71270752]
[80.47743225 488.23632812]
[85.11268616 502.50219727]
[89.74794006 516.76800537]
[103.94168091 523.71881104]
[108.98411560 538.69708252]
[101.88365936 552.81658936]
[86.85289001 557.70037842]
[72.80928802 550.45104980]
[68.08468628 535.36944580]
[75.48209381 521.40325928]
[70.84683990 507.13745117]
[66.21158600 492.87158203]
[61.09877777 506.97332764]
[49.23315430 516.14978027]
[34.29881668 517.55175781]
[20.93266106 510.74395752]
[13.28468990 497.84014893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 212]
[5 211]
[6 210]
[7 209]
[12 205]
[13 204]
[14 203]
[15 202]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[24 37]
[25 36]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[96 111]
[97 110]
[98 109]
[99 108]
[114 140]
[115 139]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[143 179]
[144 178]
[145 177]
[146 175]
[147 174]
[148 173]
[149 169]
[150 168]
[153 165]
[154 164]
[156 163]
[157 162]
[213 224]
[214 223]
[215 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
