%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUUCCUGCGCGUGCGCGCUUGGCCUCCCUAGUGCGGGCUGGCAGUGCGGGCAGAGCCCGGCUGAGAGGGGCGGCCCUGGAGGAGACGGAGGCCGCGGGUGGGCCCGAGGCGCAAGAGGAAGAUGAGGACGAAGAAGAGGCGCUGCCGCACUCCGAGGCCAUGGACGUGUUCCAGGAGGGUCUGGCUAUGGUGGUGCAGGACCCGCUGCUCUGCGAUCUGCCGAUCCAGGUUACUCUGGAAGAAGUCAACUCCC\
AAAUAG\
) } def
/len { sequence length } bind def

/coor [
[345.77828979 408.35137939]
[335.27194214 397.64544678]
[328.68832397 384.16748047]
[326.70248413 369.29949951]
[329.51773071 354.56710815]
[327.24252319 339.74066162]
[324.96734619 324.91421509]
[322.69216919 310.08776855]
[320.41699219 295.26132202]
[315.30548096 309.36352539]
[310.19396973 323.46575928]
[305.08242798 337.56796265]
[308.48281860 353.61068726]
[296.11029053 364.37420654]
[280.69268799 358.78588867]
[278.09027100 342.59457397]
[290.98022461 332.45645142]
[296.09173584 318.35421753]
[301.20327759 304.25201416]
[306.31478882 290.14981079]
[290.20242310 273.21511841]
[291.67120361 252.70787048]
[279.59970093 243.80401611]
[267.52819824 234.90016174]
[255.45668030 225.99630737]
[243.38517761 217.09245300]
[231.31367493 208.18858337]
[219.24215698 199.28472900]
[206.91477966 202.97138977]
[194.52671814 198.83227539]
[186.66067505 188.16281128]
[186.36137390 174.71609497]
[174.39750671 165.66813660]
[162.43362427 156.62017822]
[150.46974182 147.57221985]
[138.50585938 138.52424622]
[126.54198456 129.47628784]
[114.57810211 120.42832947]
[90.41662598 142.80967712]
[45.34579849 130.60923767]
[30.86469650 134.52047729]
[22.95744705 147.94110107]
[8.21583557 151.70135498]
[-4.52994871 144.08029175]
[-19.01104927 147.99153137]
[-33.49214935 151.90275574]
[-47.97324753 155.81399536]
[-55.41364288 161.05686951]
[-62.65145493 159.68418884]
[-77.17841339 163.42150879]
[-91.70536804 167.15882874]
[-106.23232269 170.89613342]
[-120.75927734 174.63345337]
[-134.59243774 184.43550110]
[-147.84082031 173.85643005]
[-141.34269714 158.19723511]
[-124.49659729 160.10650635]
[-109.96964264 156.36918640]
[-95.44268036 152.63186646]
[-80.91572571 148.89454651]
[-66.38877106 145.15724182]
[-51.88448334 141.33288574]
[-37.40338135 137.42166138]
[-22.92228127 133.51042175]
[-8.44118214 129.59919739]
[-1.26544940 116.59748077]
[13.36472797 112.42464447]
[26.95346451 120.03936768]
[41.43456268 116.12813568]
[42.15290833 108.66262054]
[43.58959961 93.73157501]
[44.30794525 86.26605988]
[30.83832359 79.66535950]
[17.36870193 73.06465149]
[3.89908004 66.46395111]
[-9.57054234 59.86324692]
[-23.04016495 53.26254654]
[-36.54911804 46.74271774]
[-50.09692001 40.30399704]
[-63.64471817 33.86527634]
[-77.78901672 40.53407669]
[-92.89754486 36.50092697]
[-101.83652496 23.67015648]
[-100.38523865 8.10006332]
[-89.22894287 -2.85763049]
[-73.63529968 -4.02903700]
[-60.96714401 5.13894558]
[-57.20599747 20.31747627]
[-43.65819931 26.75619698]
[-30.11039734 33.19491577]
[-22.74364281 33.22751999]
[-16.43946266 39.79292297]
[-2.96983957 46.39362717]
[10.49978256 52.99432755]
[23.96940422 59.59503174]
[37.43902588 66.19573212]
[50.90864944 72.79644012]
[60.24089432 61.05296326]
[50.76850891 49.42222977]
[41.29612732 37.79149628]
[25.78567123 32.46628952]
[22.90819931 16.32156181]
[35.62380600 5.96562767]
[50.85176468 12.05178261]
[52.92685699 28.31911278]
[62.39924240 39.94984436]
[71.87162781 51.58057785]
[78.82625580 48.77288055]
[92.73551178 43.15748978]
[99.69013214 40.34979248]
[98.43257904 25.40259933]
[97.17501831 10.45540810]
[95.91746521 -4.49178410]
[94.65990448 -19.43897629]
[79.74254608 -21.54136848]
[65.66720581 -26.91096306]
[53.13990021 -35.27842331]
[42.78899384 -46.22403717]
[35.13368225 -59.19878006]
[30.55795670 -73.55184174]
[29.29133224 -88.56328583]
[31.39733887 -103.48014069]
[36.77034378 -117.55417633]
[45.14083862 -130.07945251]
[56.08895874 -140.42770386]
[69.06555939 -148.07987976]
[83.41973114 -152.65213013]
[98.43148041 -153.91511536]
[113.34782410 -151.80549622]
[127.42055511 -146.42907715]
[139.94380188 -138.05554199]
[150.28941345 -127.10491943]
[157.93843079 -114.12646484]
[162.50720215 -99.77118683]
[163.76655579 -84.75913239]
[161.65332031 -69.84329987]
[156.27348328 -55.77186966]
[147.89692688 -43.25064850]
[136.94378662 -32.90769958]
[123.96348572 -25.26182556]
[109.60710144 -20.69653320]
[110.86465454 -5.74934149]
[112.12221527 9.19785023]
[113.37976837 24.14504242]
[114.63732910 39.09223557]
[138.59387207 79.14281464]
[123.62606049 108.46445465]
[135.58993530 117.51241302]
[147.55381775 126.56037140]
[159.51770020 135.60833740]
[171.48158264 144.65629578]
[183.44546509 153.70425415]
[195.40933228 162.75221252]
[212.70605469 160.03717041]
[226.33660889 170.47871399]
[228.14601135 187.21322632]
[240.21752930 196.11708069]
[252.28903198 205.02093506]
[264.36053467 213.92478943]
[276.43206787 222.82864380]
[288.50357056 231.73251343]
[300.57507324 240.63636780]
[320.14126587 234.49163818]
[339.37060547 246.08091736]
[343.81512451 270.06930542]
[358.38586426 273.63217163]
[372.95657349 277.19503784]
[384.79684448 267.34039307]
[399.99191284 266.35873413]
[412.70104980 274.41738892]
[418.16253662 288.24887085]
[432.73324585 291.81173706]
[447.30398560 295.37460327]
[461.87469482 298.93746948]
[476.44543457 302.50033569]
[491.01614380 306.06317139]
[505.58688354 309.62603760]
[527.80566406 300.97540283]
[543.86706543 317.59121704]
[558.65618896 320.09747314]
[573.44531250 322.60372925]
[588.23449707 325.10998535]
[603.02362061 327.61624146]
[611.97503662 325.96728516]
[617.97460938 330.24224854]
[632.73266602 332.92565918]
[647.49066162 335.60906982]
[664.69744873 329.01013184]
[677.61291504 340.91091919]
[692.40209961 343.41717529]
[707.30102539 338.09442139]
[718.55664062 347.84948730]
[733.34576416 350.35574341]
[748.13488770 352.86199951]
[762.92401123 355.36825562]
[777.82299805 350.04553223]
[789.07855225 359.80056763]
[803.86773682 362.30682373]
[818.65686035 364.81311035]
[833.44598389 367.31936646]
[846.18469238 357.96514893]
[861.79388428 360.44091797]
[871.01287842 373.27780151]
[868.37219238 388.85992432]
[855.43859863 397.94268799]
[839.88525391 395.13745117]
[830.93975830 382.10848999]
[816.15057373 379.60223389]
[801.36145020 377.09597778]
[786.57232666 374.58972168]
[772.73120117 380.09173584]
[760.41778564 370.15740967]
[745.62866211 367.65115356]
[730.83947754 365.14489746]
[716.05035400 362.63861084]
[702.20922852 368.14062500]
[689.89581299 358.20629883]
[675.10668945 355.70004272]
[665.08551025 362.43972778]
[652.76104736 360.49459839]
[644.80725098 350.36709595]
[630.04925537 347.68368530]
[615.29119873 345.00027466]
[600.51733398 342.40539551]
[585.72821045 339.89913940]
[570.93908691 337.39288330]
[556.14996338 334.88662720]
[541.36077881 332.38034058]
[537.38159180 337.38638306]
[532.01715088 340.96081543]
[525.76605225 342.73364258]
[519.22106934 342.50405884]
[513.01293945 340.26269531]
[507.74948120 336.19555664]
[503.95623779 330.66900635]
[502.02401733 324.19677734]
[487.45327759 320.63391113]
[472.88256836 317.07104492]
[458.31182861 313.50817871]
[443.74111938 309.94531250]
[429.17037964 306.38247681]
[414.59967041 302.81961060]
[403.37185669 312.57019043]
[388.37805176 313.85488892]
[375.35052490 305.97216797]
[369.39370728 291.76574707]
[354.82299805 288.20288086]
[340.25225830 284.64004517]
[351.33114624 294.75231934]
[362.41003418 304.86459351]
[373.48892212 314.97686768]
[384.56781006 325.08917236]
[398.39105225 330.91311646]
[409.66467285 340.80783081]
[417.23263550 353.75872803]
[420.31896973 368.43777466]
[418.60717773 383.33978271]
[412.27276611 396.93667603]
[401.96530151 407.83419800]
[388.74169922 414.91491699]
[373.95794678 417.45272827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 20]
[10 19]
[11 18]
[12 17]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[40 69]
[41 68]
[44 65]
[45 64]
[46 63]
[47 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[78 90]
[79 89]
[80 88]
[98 107]
[99 106]
[100 105]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[165 248]
[166 247]
[167 246]
[171 242]
[172 241]
[173 240]
[174 239]
[175 238]
[176 237]
[177 236]
[179 228]
[180 227]
[181 226]
[182 225]
[183 224]
[185 223]
[186 222]
[187 221]
[189 218]
[190 217]
[192 215]
[193 214]
[194 213]
[195 212]
[197 210]
[198 209]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
