%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGUCACUUCCUGCCCGGCCCGGUGAAGGCCCUGCCGGGCGGCGGCGGCGGCGACAGCGUGCGAGCCAUGGUCGCGCUGGAGAACCCCGAGUGCGGCCCGGAGGCGGCGGAGGGCACCCCGGGCGGGCGGCGGCUGCUGCCCCUUCCCAGCUGCCUGCCUGCCCUAG\
) } def
/len { sequence length } bind def

/coor [
[232.81855774 219.74804688]
[234.25370789 207.75515747]
[221.31004333 200.17481995]
[208.36639404 192.59446716]
[195.42272949 185.01411438]
[182.47906494 177.43376160]
[167.58647156 177.67855835]
[159.58825684 164.02793884]
[146.64459229 156.44760132]
[133.70094299 148.86724854]
[120.75728607 141.28689575]
[107.81362152 133.70654297]
[92.81427002 133.84596252]
[80.01375580 141.66560364]
[67.21323395 149.48524475]
[54.41271973 157.30488586]
[41.61220169 165.12452698]
[28.81168556 172.94416809]
[16.01116943 180.76380920]
[3.21065235 188.58343506]
[-0.61056590 203.68431091]
[-13.70350456 211.43218994]
[-28.07631874 207.69616699]
[-40.87683487 215.51580811]
[-53.67735291 223.33544922]
[-61.04301071 237.98738098]
[-77.42818451 238.66424561]
[-85.97721100 224.66973877]
[-77.89558411 210.40022278]
[-61.49699402 210.53494263]
[-48.69647598 202.71530151]
[-35.89595795 194.89566040]
[-32.65922165 180.40223694]
[-19.78907013 172.28967285]
[-4.60898733 175.78292847]
[8.19153023 167.96328735]
[20.99204636 160.14364624]
[33.79256439 152.32400513]
[46.59308243 144.50436401]
[59.39359665 136.68472290]
[72.19411469 128.86508179]
[84.99462891 121.04544830]
[76.02484894 116.07251740]
[68.95664215 107.26013184]
[65.40142059 95.43839264]
[52.45775986 87.85803986]
[39.51410294 80.27769470]
[21.12159920 80.60793304]
[13.01034069 65.06539917]
[-0.07198729 57.72695923]
[-13.15431499 50.38851929]
[-26.30428505 43.17198944]
[-39.52075958 36.07799530]
[-55.88635254 37.12654495]
[-64.75077820 23.32966423]
[-56.99508286 8.88040161]
[-40.59765625 8.64291954]
[-32.42676544 22.86152077]
[-19.21029091 29.95551491]
[-11.79961777 30.34985733]
[-5.81587505 37.30619431]
[7.26645279 44.64463425]
[20.34877968 51.98307419]
[32.10073853 49.01132202]
[43.07093048 55.05167770]
[47.09445190 67.33403778]
[60.03810883 74.91438293]
[72.98176575 82.49473572]
[79.52293396 78.82551575]
[92.60526276 71.48707581]
[99.14642334 67.81785583]
[99.42524719 52.82044601]
[99.70407104 37.82303619]
[99.98289490 22.82562828]
[100.26171875 7.82821989]
[100.54054260 -7.16918850]
[100.81936646 -22.16659737]
[101.09819031 -37.16400528]
[101.37701416 -52.16141510]
[101.51643372 -67.16076660]
[101.51643372 -82.16076660]
[90.16529083 -93.15745544]
[89.99819946 -108.96086121]
[101.11428833 -120.19509888]
[116.91857147 -120.19509888]
[128.03466797 -108.96086121]
[127.86756897 -93.15745544]
[116.51643372 -82.16076660]
[116.51643372 -67.16076660]
[119.67372894 -60.44473648]
[116.37442017 -51.88259125]
[116.09559631 -36.88518143]
[115.81677246 -21.88777351]
[115.53794861 -6.89036512]
[115.25912476 8.10704327]
[114.98030090 23.10445213]
[114.70147705 38.10186005]
[114.42265320 53.09926987]
[114.14382935 68.09667969]
[130.18782043 96.65535736]
[115.39397430 120.76288605]
[128.33763123 128.34323120]
[141.28129578 135.92358398]
[154.22494507 143.50393677]
[167.16860962 151.08428955]
[182.98701477 151.38169861]
[190.05941772 164.49011230]
[203.00308228 172.07044983]
[215.94673157 179.65080261]
[228.89039612 187.23115540]
[241.83406067 194.81150818]
[264.99737549 184.38929749]
[289.76794434 197.53584290]
[303.79318237 192.21676636]
[317.81842041 186.89770508]
[330.48422241 175.62763977]
[344.82006836 184.67857361]
[340.09140015 200.95973206]
[323.13751221 200.92294312]
[309.11227417 206.24201965]
[295.08700562 211.56109619]
[293.14065552 226.43428040]
[305.32489014 235.18324280]
[317.50912476 243.93220520]
[329.69335938 252.68116760]
[341.87759399 261.43014526]
[354.06182861 270.17910767]
[366.24606323 278.92807007]
[378.43029785 287.67703247]
[390.69531250 296.31237793]
[403.04006958 304.83334351]
[415.38482666 313.35430908]
[427.72958374 321.87530518]
[440.07434082 330.39627075]
[452.41909790 338.91723633]
[464.76385498 347.43820190]
[477.10861206 355.95916748]
[490.63122559 348.78994751]
[505.93664551 348.73776245]
[519.50781250 355.81460571]
[528.22619629 368.39431763]
[530.08831787 383.58612061]
[524.66632080 397.89907837]
[513.20617676 408.04415894]
[498.34124756 411.69012451]
[483.48745728 407.99911499]
[472.05807495 397.81936646]
[466.67947388 383.49002075]
[468.58764648 368.30392456]
[456.24288940 359.78295898]
[443.89813232 351.26199341]
[431.55337524 342.74102783]
[419.20861816 334.22006226]
[406.86386108 325.69906616]
[394.51910400 317.17810059]
[382.17434692 308.65713501]
[374.85360718 307.44039917]
[369.68133545 299.86126709]
[357.49710083 291.11230469]
[345.31286621 282.36334229]
[333.12863159 273.61437988]
[320.94439697 264.86541748]
[308.76016235 256.11645508]
[296.57592773 247.36747742]
[284.39169312 238.61851501]
[271.80718994 245.32531738]
[258.00378418 246.07229614]
[245.57989502 241.08592224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[23 32]
[24 31]
[25 30]
[45 68]
[46 67]
[47 66]
[49 63]
[50 62]
[51 61]
[52 59]
[53 58]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 89]
[81 88]
[113 121]
[114 120]
[115 119]
[122 165]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[128 159]
[129 158]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
