%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGAGGCCGCGCCGGGAGCGCGGUGGGGCUAGGCGUGGGGCGCUCCCGGCAUGUCCCUGUACCGCAGCGUCGUGUGGUUCGCCAAGGGGCUGCGCGAGUACACCAAGAGUGGCUAUGAAUCUGCAUGUAAAGACUUUGUCCCUCAUGACUUGGAGGUCCAGAUUCCUGGAAGAGUCUUUUUGGUCACUGGAGGAAACAGCGGCAUUGGCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[83.02877045 286.67239380]
[87.27873993 271.74865723]
[99.50972748 262.19970703]
[98.86143494 247.21371460]
[90.58129883 234.83274841]
[97.71493530 220.71105957]
[97.06664276 205.72508240]
[88.78650665 193.34410095]
[95.92013550 179.22242737]
[95.27184296 164.23643494]
[94.62355804 149.25045776]
[93.97526550 134.26446533]
[93.32697296 119.27848816]
[79.89385986 112.60379791]
[67.55855560 121.13845062]
[55.22324753 129.67309570]
[42.88794327 138.20774841]
[30.55263901 146.74240112]
[18.21733475 155.27705383]
[5.88203049 163.81170654]
[-6.45327377 172.34634399]
[-18.78857803 180.88099670]
[-31.12388229 189.41564941]
[-43.45918655 197.95030212]
[-40.72556686 211.81378174]
[-43.47305298 225.63037109]
[-51.25460052 237.32121277]
[-62.86829758 245.14016724]
[-76.54290009 247.93450928]
[-90.20794678 245.31483459]
[-101.80722809 237.70896912]
[-114.26424408 246.06497192]
[-124.04991150 259.90972900]
[-140.06254578 254.33908081]
[-139.14234924 237.41012573]
[-122.62025452 233.60795593]
[-110.16323853 225.25195312]
[-112.72776031 209.47695923]
[-108.13825989 194.10725403]
[-97.26523590 182.23548889]
[-82.24878693 176.27351379]
[-66.07754517 177.46250916]
[-51.99383926 185.61500549]
[-39.65853500 177.08035278]
[-27.32322884 168.54570007]
[-14.98792458 160.01104736]
[-2.65261984 151.47639465]
[9.68268490 142.94174194]
[22.01799011 134.40708923]
[34.35329437 125.87244415]
[46.68859863 117.33779144]
[59.02390289 108.80314636]
[71.35920715 100.26849365]
[72.16825104 92.81225586]
[59.50043488 100.84509277]
[45.32180405 95.94953156]
[40.30893326 81.81195831]
[48.23653412 69.07801819]
[63.13508606 67.33643341]
[73.78633118 77.89978790]
[74.59536743 70.44355011]
[64.37769318 59.46178436]
[54.16002274 48.48001862]
[43.94234848 37.49825287]
[33.72467804 26.51648903]
[23.27202225 15.75814247]
[12.58927059 5.22824144]
[1.90651929 -5.30166006]
[-8.77623177 -15.83156109]
[-19.45898438 -26.36146164]
[-30.14173508 -36.89136505]
[-45.40152359 -41.06861877]
[-49.03414154 -55.51345444]
[-59.71689224 -66.04335785]
[-70.56427765 -65.33639526]
[-79.82085419 -70.60491943]
[-84.55259705 -79.90139008]
[-83.41355896 -90.04955292]
[-93.78842926 -100.88293457]
[-104.16329193 -111.71631622]
[-120.05094147 -115.78012848]
[-124.21425629 -131.64199829]
[-112.37037659 -142.98458862]
[-96.70326233 -138.13963318]
[-93.32991028 -122.09118652]
[-82.95503998 -111.25779724]
[-72.58017731 -100.42441559]
[-53.66785431 -96.38371277]
[-49.18699265 -76.72610474]
[-38.50424194 -66.19620514]
[-24.00855446 -62.77212143]
[-19.61183357 -47.57411575]
[-8.92908192 -37.04421234]
[1.75366914 -26.51431274]
[12.43642044 -15.98441124]
[23.11917114 -5.45451021]
[33.80192184 5.07539129]
[37.30630493 5.41744423]
[40.81982040 7.47068119]
[43.54145050 11.22127533]
[44.70643997 16.29881668]
[54.92411423 27.28058052]
[65.14178467 38.26234436]
[75.35945892 49.24411011]
[85.57713318 60.22587585]
[115.42403412 85.81784821]
[129.46104431 80.52988434]
[133.66754150 65.71058655]
[145.65342712 56.31953430]
[160.69294739 55.79315567]
[173.01110840 64.12387085]
[187.04811096 58.83590317]
[201.08511353 53.54793930]
[215.12211609 48.25997162]
[229.15911865 42.97200775]
[243.19612122 37.68404388]
[257.23312378 32.39607620]
[271.27011108 27.10811234]
[256.68298340 23.61311531]
[244.65309143 14.65308189]
[237.12701416 1.67779648]
[235.32247925 -13.21326256]
[239.53147888 -27.61063576]
[249.07296753 -39.18474197]
[262.40307617 -46.06282043]
[277.36492920 -47.13196182]
[291.53759766 -42.21916962]
[302.62786865 -32.11936569]
[308.84124756 -18.46675301]
[309.17239380 -3.47040844]
[303.56774902 10.44317150]
[292.93194580 21.02411079]
[307.66949463 18.23037910]
[322.40704346 15.43664932]
[337.14456177 12.64291763]
[351.88211060 9.84918690]
[366.61965942 7.05545616]
[381.35717773 4.26172495]
[396.09472656 1.46799397]
[410.83227539 -1.32573700]
[409.01376343 -8.21424580]
[410.17126465 -16.34032631]
[414.78897095 -24.48330498]
[422.87713623 -31.27417564]
[436.98886108 -36.35931015]
[451.10061646 -41.44444656]
[465.21237183 -46.52958298]
[469.40771484 -61.46875381]
[481.60366821 -71.06239319]
[497.11065674 -71.62156677]
[509.96594238 -62.93124390]
[515.22637939 -48.33304214]
[510.86920166 -33.44026566]
[498.56988525 -23.97948837]
[483.05773926 -23.58857346]
[470.29751587 -32.41783905]
[456.18576050 -27.33270073]
[442.07400513 -22.24756432]
[427.96224976 -17.16242790]
[429.90228271 -2.28841543]
[444.84625244 -0.99304312]
[459.79022217 0.30232915]
[474.73419189 1.59770143]
[489.67813110 2.89307380]
[504.29809570 -4.53582859]
[517.89221191 4.63652897]
[516.47601318 20.97441101]
[501.50637817 27.67080688]
[488.38278198 17.83703613]
[473.43881226 16.54166412]
[458.49484253 15.24629116]
[443.55087280 13.95091915]
[428.60693359 12.65554714]
[413.62600708 13.41180229]
[398.88845825 16.20553398]
[384.15090942 18.99926376]
[369.41339111 21.79299545]
[354.67584229 24.58672714]
[339.93829346 27.38045692]
[325.20077515 30.17418861]
[310.46322632 32.96791840]
[295.72567749 35.76165009]
[288.06124878 42.65392303]
[276.55807495 41.14511490]
[262.52108765 46.43307877]
[248.48408508 51.72104263]
[234.44708252 57.00901031]
[220.41007996 62.29697418]
[206.37307739 67.58493805]
[192.33607483 72.87290192]
[178.29907227 78.16087341]
[174.53924561 92.54842377]
[162.89059448 102.07590485]
[147.68768311 102.92731476]
[134.74900818 94.56688690]
[120.71200562 99.85485077]
[135.66629028 101.02497101]
[144.88865662 112.85494232]
[142.37481689 127.64279175]
[129.76142883 135.76083374]
[115.26050568 131.92378235]
[108.31295776 118.63019562]
[108.96125031 133.61618042]
[109.60953522 148.60215759]
[110.25782776 163.58815002]
[110.90612030 178.57412720]
[119.23262787 192.02700806]
[112.05262756 205.07678223]
[112.70091248 220.06277466]
[121.02742004 233.51565552]
[113.84741974 246.56542969]
[114.49571228 261.55142212]
[127.50563049 270.00845337]
[133.02851868 284.50939941]
[128.94068909 299.47833252]
[116.81400299 309.15942383]
[101.31143188 309.83004761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[6 209]
[7 208]
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 53]
[15 52]
[16 51]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[31 37]
[32 36]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[73 90]
[74 89]
[78 87]
[79 86]
[80 85]
[106 196]
[107 195]
[111 191]
[112 190]
[113 189]
[114 188]
[115 187]
[116 186]
[117 185]
[118 184]
[132 182]
[133 181]
[134 180]
[135 179]
[136 178]
[137 177]
[138 176]
[139 175]
[140 174]
[144 159]
[145 158]
[146 157]
[147 156]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
