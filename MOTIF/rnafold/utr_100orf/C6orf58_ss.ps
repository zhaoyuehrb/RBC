%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCUGGCACAAUGGCUUUUCUUCCUUCCUGGGUUUGUGUACUAGUUGGUUCCUUUUCUGCUUCCUUAGCAGGGACUUCCAAUCUCUCAGAGACAGAGCCCCCUCUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[90.85730743 195.90753174]
[103.31944275 187.55918884]
[118.08286285 190.21652222]
[111.25443268 176.86091614]
[104.42600250 163.50529480]
[97.59757233 150.14967346]
[90.76914215 136.79405212]
[77.22886658 130.33952332]
[62.55377197 133.44459534]
[47.87867355 136.54968262]
[33.20357513 139.65475464]
[18.52847862 142.75982666]
[3.85338092 145.86491394]
[-1.48993325 150.13705444]
[-7.30852890 150.84986877]
[-11.72272491 148.71072388]
[-26.54770660 150.99543762]
[-41.37268829 153.28015137]
[-56.19766998 155.56486511]
[-60.59894943 170.17964172]
[-70.91181183 181.43164062]
[-85.08862305 187.08680725]
[-100.31456757 186.02226257]
[-113.56653595 178.44940186]
[-122.21332550 165.87181091]
[-124.53810883 150.78677368]
[-120.07931519 136.18945312]
[-109.72222137 124.97814941]
[-95.52325439 119.37886810]
[-80.30161285 120.50335693]
[-67.07957458 128.12834167]
[-58.48238373 140.73988342]
[-43.65740204 138.45516968]
[-28.83242035 136.17045593]
[-14.00743771 133.88574219]
[0.74830395 131.18980408]
[15.42340183 128.08473206]
[30.09849930 124.97966003]
[44.77359772 121.87458038]
[59.44869614 118.76950073]
[74.12379456 115.66442871]
[70.85729980 102.54335022]
[73.65612793 89.77465820]
[81.55088043 79.92617798]
[92.59027863 74.79734039]
[104.30968475 75.09551239]
[111.13811493 61.73989868]
[117.96654510 48.38427734]
[124.79497528 35.02865982]
[131.62339783 21.67304039]
[124.46704865 11.22815609]
[122.49881744 -1.20562863]
[126.03822327 -13.21062660]
[134.33995056 -22.47959518]
[145.74977112 -27.25913620]
[158.03392029 -26.68120956]
[165.59402466 -39.63669968]
[173.15414429 -52.59218979]
[180.71424866 -65.54767609]
[188.27436829 -78.50316620]
[195.83447266 -91.45865631]
[203.39459229 -104.41414642]
[210.95469666 -117.36963654]
[208.28131104 -133.18838501]
[219.08898926 -145.04475403]
[235.08700562 -143.84356689]
[244.00306702 -130.50627136]
[238.99751282 -115.26409149]
[223.91018677 -109.80952454]
[216.35008240 -96.85403442]
[208.78996277 -83.89854431]
[201.22985840 -70.94305420]
[193.66973877 -57.98756790]
[186.10963440 -45.03207779]
[178.54951477 -32.07658768]
[170.98941040 -19.12109947]
[178.85243225 -3.43415999]
[175.80320740 14.00394440]
[162.85823059 26.30593872]
[144.97901917 28.50147057]
[138.15058899 41.85709000]
[131.32215881 55.21270752]
[124.49373627 68.56832886]
[117.66530609 81.92394257]
[124.67028809 90.97476196]
[127.13989258 102.59890747]
[124.21381378 114.56876373]
[116.10418701 124.42172241]
[104.12476349 129.96562195]
[110.95319366 143.32124329]
[117.78162384 156.67686462]
[124.61005402 170.03248596]
[131.43847656 183.38809204]
[139.35580444 196.12841797]
[148.30699158 208.16488647]
[157.25817871 220.20133972]
[166.20936584 232.23779297]
[175.16053772 244.27426147]
[184.11172485 256.31072998]
[199.37271118 262.31356812]
[201.53666687 278.56933594]
[188.37748718 288.35543823]
[173.43222046 281.60479736]
[172.07527161 265.26190186]
[163.12408447 253.22543335]
[154.17289734 241.18898010]
[145.22172546 229.15252686]
[136.27053833 217.11607361]
[127.31935120 205.07960510]
[123.16505432 219.49285889]
[110.16171265 226.97036743]
[95.61489868 223.31109619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 93]
[4 92]
[5 91]
[6 90]
[7 89]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[16 35]
[17 34]
[18 33]
[19 32]
[46 84]
[47 83]
[48 82]
[49 81]
[50 80]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
