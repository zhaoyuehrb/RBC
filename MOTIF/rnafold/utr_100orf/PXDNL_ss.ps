%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGCAGCCACCAUCACCACCACUGCGGUUGCUGCUGCAGCUGCAGCUGCUGCUCUCCCUCCGGCUGCUUCUUCGCGUGGCCAGCAGCGAAUGGAGCGAUGGAGCCCAGACUGUUCUGCUGGACCACUCUCUUUCUCCUGGCCGGGUGGUGCCUGCCAGGGUUGCCCUGCCCCAGCCGGUGCCUUUGCUUUAAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[80.09703827 124.08025360]
[68.04457855 133.00988770]
[65.58477020 148.39128113]
[53.23466492 157.27549744]
[38.58602142 154.83566284]
[26.53356552 163.76528931]
[14.48111153 172.69493103]
[2.42865729 181.62455750]
[-9.62379742 190.55419922]
[-21.67625046 199.48382568]
[-33.72870636 208.41345215]
[-18.82502937 206.71627808]
[-4.29560280 210.44396973]
[7.95012140 219.10667419]
[16.30281258 231.56590271]
[19.66476059 246.18429565]
[17.59414101 261.04067993]
[10.36307240 274.18267822]
[-1.07813823 283.88311768]
[-15.22589016 288.86721802]
[-30.22089005 288.47991943]
[-44.09249878 282.77215576]
[-55.01770782 272.49404907]
[-61.56073761 258.99630737]
[-62.86169815 244.05282593]
[-58.74961853 229.62747192]
[-49.76661301 217.61759949]
[-63.55690765 223.51910400]
[-77.34720612 229.42060852]
[-91.13749695 235.32211304]
[-104.92779541 241.22361755]
[-118.71809387 247.12512207]
[-132.50839233 253.02662659]
[-146.29867554 258.92813110]
[-160.08897400 264.82962036]
[-169.48127747 278.27273560]
[-185.79396057 276.59091187]
[-192.24592590 261.51431274]
[-182.19996643 248.55242920]
[-165.99047852 251.03933716]
[-152.20018005 245.13783264]
[-138.40989685 239.23632812]
[-124.61959076 233.33482361]
[-110.82929993 227.43331909]
[-97.03900146 221.53181458]
[-83.24871063 215.63031006]
[-69.45841217 209.72880554]
[-55.66811752 203.82730103]
[-42.65834045 196.36100769]
[-30.60588455 187.43136597]
[-18.55343056 178.50173950]
[-6.50097561 169.57211304]
[5.55147839 160.64247131]
[17.60393333 151.71284485]
[29.65638733 142.78320312]
[31.58819580 128.05894470]
[43.68389130 118.83134460]
[59.11494827 120.95743561]
[71.16740417 112.02780151]
[68.84601593 97.67278290]
[73.27439117 83.82196808]
[83.49308777 73.47626495]
[97.28814697 68.87713623]
[99.61161804 54.05818176]
[101.93508911 39.23922348]
[104.25856018 24.42026901]
[106.58203125 9.60131168]
[108.90550995 -5.21764517]
[111.22898102 -20.03660202]
[106.30625916 -34.20582199]
[95.29538727 -44.39211655]
[79.51477051 -43.52741623]
[67.80067444 -54.13663483]
[67.10286713 -69.92551422]
[77.83534241 -81.52678680]
[93.63071442 -82.05762482]
[105.11786652 -71.20309448]
[105.48167419 -55.40299606]
[116.49255371 -45.21670151]
[130.58351135 -50.35918045]
[132.44499207 -65.24322510]
[134.30647278 -80.12727356]
[136.16795349 -95.01132202]
[137.91363525 -109.90940094]
[139.54341125 -124.82059479]
[141.17320251 -139.73179626]
[142.80297852 -154.64299011]
[144.43276978 -169.55418396]
[146.06254578 -184.46539307]
[147.69232178 -199.37658691]
[132.44331360 -209.76846313]
[124.61038208 -226.38284302]
[126.28105927 -244.58955383]
[136.90754700 -259.36285400]
[153.48187256 -266.66876221]
[154.41441345 -281.63977051]
[155.34695435 -296.61074829]
[152.75575256 -305.37765503]
[156.41220093 -311.80673218]
[157.57746887 -326.76141357]
[147.11489868 -338.60665894]
[148.17597961 -354.37530518]
[160.13117981 -364.71203613]
[175.88771057 -363.48431396]
[186.09748840 -351.42047119]
[184.70323181 -335.67779541]
[172.53213501 -325.59616089]
[171.36688232 -310.64147949]
[170.31794739 -295.67819214]
[169.38539124 -280.70721436]
[168.45285034 -265.73623657]
[179.08885193 -260.65292358]
[187.41003418 -252.25413513]
[192.42366028 -241.50865173]
[193.52043152 -229.66714478]
[190.54838562 -218.11656189]
[183.83355713 -208.21772766]
[174.14431763 -201.14494324]
[162.60353088 -197.74679565]
[160.97373962 -182.83560181]
[159.34396362 -167.92440796]
[157.71417236 -153.01321411]
[156.08439636 -138.10200500]
[154.45462036 -123.19081116]
[152.82482910 -108.27961731]
[155.22489929 -101.28374481]
[151.05200195 -93.14984131]
[149.19052124 -78.26579285]
[147.32904053 -63.38174820]
[145.46755981 -48.49769974]
[159.81573486 -52.87147903]
[174.72668457 -51.23945999]
[187.78906250 -43.86556244]
[196.89044189 -31.94227600]
[200.55899048 -17.39780235]
[198.20143127 -2.58422947]
[190.19903564 10.10283089]
[177.84590149 18.61166382]
[163.13977051 21.56624413]
[148.45886230 18.48876572]
[136.17732239 9.87691021]
[128.28131104 -2.87663770]
[126.04793549 -17.71312904]
[123.72446442 -2.89417243]
[121.40099335 11.92478371]
[119.07752228 26.74374008]
[116.75404358 41.56269836]
[114.43057251 56.38165283]
[112.10710144 71.20060730]
[128.22183228 86.60167694]
[129.96875000 108.82386780]
[142.92007446 116.39111328]
[155.87139893 123.95835876]
[168.82272339 131.52560425]
[181.77404785 139.09284973]
[194.72537231 146.66007996]
[210.54408264 146.94148254]
[217.62974548 160.04272461]
[230.58106995 167.60997009]
[245.68977356 163.81983948]
[258.71646118 171.67860413]
[262.23666382 186.10578918]
[275.18798828 193.67303467]
[288.13931274 201.24028015]
[301.09063721 208.80752563]
[316.31185913 204.55435181]
[330.04116821 212.38261414]
[334.13317871 227.64797974]
[326.16018677 241.29374695]
[310.85241699 245.22412109]
[297.29171753 237.10731506]
[293.52337646 221.75885010]
[280.57205200 214.19160461]
[267.62072754 206.62435913]
[254.66940308 199.05711365]
[240.37258911 203.07412720]
[227.13029480 195.58436584]
[223.01383972 180.56129456]
[210.06250000 172.99404907]
[195.17016602 173.25392151]
[187.15814209 159.61140442]
[174.20681763 152.04417419]
[161.25547791 144.47692871]
[148.30415344 136.90968323]
[135.35282898 129.34243774]
[122.40150452 121.77519226]
[119.80004120 124.16495514]
[116.94541168 126.24575806]
[113.87413025 127.99098206]
[117.11439514 142.63682556]
[120.35466003 157.28266907]
[123.59493256 171.92851257]
[126.83519745 186.57435608]
[136.16030884 200.73339844]
[125.13606262 213.61369324]
[109.70730591 206.58589172]
[112.18935394 189.81462097]
[108.94908905 175.16877747]
[105.70882416 160.52293396]
[102.46855164 145.87709045]
[99.22828674 131.23124695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[11 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 79]
[71 78]
[80 130]
[81 129]
[82 128]
[83 127]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[95 111]
[96 110]
[97 109]
[99 108]
[100 107]
[151 186]
[152 185]
[153 184]
[154 183]
[155 182]
[156 181]
[158 179]
[159 178]
[162 175]
[163 174]
[164 173]
[165 172]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
