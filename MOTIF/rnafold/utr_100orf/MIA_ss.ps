%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUGGUUUCAUAGCAACUUCUAGGUGGUGUGGGCGAAGUUUGGGACUGGUUUAGGGCGGGGACAAGACCAAGAACACAAGUUUCCUUGUACUACGGGAGAGAGGGAGGGGAGGAAAUUGGAGACCCCAGCACCCCCUUGCUCACUCUCUUGCUCACAGUCCACGAUGGCCCGGUCCCUGGUGUGCCUUGGUGUCAUCAUCUUGCUGUCUGCCUUCUCCGGACCUGGUGUCAGGGGUGGUCCUAUGCCCAAGCU\
GGCUGACCGGA\
) } def
/len { sequence length } bind def

/coor [
[-56.88039780 846.86590576]
[-70.18309784 836.35522461]
[-63.76573181 820.66278076]
[-63.41277695 805.66693115]
[-63.05982208 790.67108154]
[-62.70686722 775.67523193]
[-62.35391235 760.67938232]
[-62.00095749 745.68353271]
[-61.64800262 730.68768311]
[-68.87503052 728.68267822]
[-90.55612946 722.66766357]
[-97.97957611 735.70196533]
[-105.40302277 748.73626709]
[-112.82646942 761.77050781]
[-112.93278503 777.59136963]
[-125.95480347 784.82159424]
[-133.37825012 797.85589600]
[-134.89660645 806.82781982]
[-140.96649170 810.99908447]
[-148.54278564 823.94512939]
[-148.09814453 840.33825684]
[-162.21237183 848.68817139]
[-176.36595154 840.40515137]
[-175.99891663 824.01013184]
[-161.48883057 816.36883545]
[-153.91253662 803.42279053]
[-146.41253662 790.43243408]
[-138.98908997 777.39813232]
[-139.41374207 762.50958252]
[-125.86074829 754.34710693]
[-118.43730164 741.31280518]
[-111.01385498 728.27850342]
[-103.59040833 715.24426270]
[-58.49593735 711.72607422]
[-53.97834015 697.42254639]
[-49.46073914 683.11901855]
[-54.75696182 672.26727295]
[-51.13618469 660.32879639]
[-40.01315689 653.84295654]
[-35.32757568 639.59356689]
[-30.64199257 625.34417725]
[-25.95640945 611.09478760]
[-21.27082634 596.84539795]
[-16.58524513 582.59600830]
[-11.89966202 568.34661865]
[-7.21407938 554.09722900]
[8.90968990 528.75201416]
[30.33196831 527.59936523]
[32.96565628 512.83233643]
[35.59934235 498.06539917]
[38.23302841 483.29840088]
[31.39188194 467.12207031]
[43.41545105 453.15447998]
[45.87520599 438.35751343]
[48.33496475 423.56057739]
[50.79471970 408.76364136]
[53.25447464 393.96667480]
[46.22347260 377.87197876]
[58.08186722 363.76385498]
[60.36735153 348.93899536]
[62.65283585 334.11413574]
[64.93832397 319.28927612]
[67.22380829 304.46441650]
[69.50929260 289.63955688]
[57.82141113 275.51843262]
[60.24308395 257.02529907]
[75.69461823 246.01780701]
[77.63063812 231.14326477]
[79.56665039 216.26873779]
[81.50267029 201.39419556]
[83.26354218 186.49790955]
[84.84902191 171.58193970]
[86.43449402 156.66596985]
[88.01997375 141.74998474]
[89.60545349 126.83401489]
[71.39581299 120.59892273]
[58.32432175 101.96004486]
[58.42068100 75.63123322]
[44.71032715 69.54631042]
[30.99997711 63.46139145]
[17.28962708 57.37646866]
[3.57927537 51.29154587]
[-12.66193676 53.56202316]
[-22.53411865 40.46728897]
[-15.88161755 25.47808647]
[0.45204574 24.01401901]
[9.66419697 37.58119583]
[23.37454796 43.66611862]
[37.08489990 49.75104141]
[50.79524994 55.83596420]
[64.50559998 61.92088318]
[70.32585907 57.19070053]
[60.86567307 45.55004501]
[72.50647736 36.09003830]
[81.96636963 47.73033524]
[87.78662109 43.00015259]
[84.63343048 28.33531952]
[81.48023224 13.67048454]
[78.32704163 -0.99434960]
[75.17384338 -15.65918350]
[72.02065277 -30.32401848]
[68.86745453 -44.98885345]
[65.71426392 -59.65368652]
[55.24887466 -71.51902008]
[60.13785172 -85.58839417]
[56.98465729 -100.25322723]
[53.83146286 -114.91806030]
[50.59204865 -129.56408691]
[47.26652527 -144.19081116]
[43.94100571 -158.81753540]
[40.61548233 -173.44424438]
[37.28995895 -188.07096863]
[32.35178375 -195.71400452]
[34.01243210 -202.88932800]
[30.85923576 -217.55415344]
[18.79635429 -223.49984741]
[12.44340801 -235.13227844]
[13.91748142 -248.10862732]
[22.45968056 -257.72891235]
[19.47925186 -272.42984009]
[16.49882126 -287.13076782]
[13.51839161 -301.83169556]
[0.99465042 -311.85842896]
[1.16952980 -327.90051270]
[13.90887737 -337.65185547]
[29.44015694 -333.63204956]
[35.84909821 -318.92474365]
[28.21931076 -304.81210327]
[31.19974136 -290.11120605]
[34.18017197 -275.41027832]
[37.16059875 -260.70935059]
[51.57045364 -252.00816345]
[55.28569031 -235.24349976]
[45.52407074 -220.70735168]
[48.67726517 -206.04251099]
[51.91667938 -191.39648438]
[55.24220276 -176.76977539]
[58.56772232 -162.14305115]
[61.89324570 -147.51632690]
[65.21876526 -132.88961792]
[69.75055695 -127.08393860]
[68.49629974 -118.07125854]
[71.64949036 -103.40641785]
[74.80268860 -88.74158478]
[85.04254150 -77.92517853]
[80.37909698 -62.80688095]
[83.53229523 -48.14204788]
[86.68548584 -33.47721100]
[89.83868408 -18.81237793]
[92.99187469 -4.14754391]
[96.14506531 10.51729107]
[99.29826355 25.18212509]
[102.45145416 39.84695816]
[109.13600922 43.24795532]
[113.39951324 28.86663055]
[117.66302490 14.48530674]
[116.20469666 -0.44363403]
[124.86608887 -12.69027233]
[139.42800903 -16.28893471]
[152.79695129 -9.48661423]
[158.46052551 4.40309286]
[153.65985107 18.61412811]
[140.73451233 26.22372246]
[131.61981201 38.13683701]
[122.50511169 50.04994965]
[129.18966675 53.45094681]
[142.90000916 47.36602402]
[156.61036682 41.28110123]
[170.32070923 35.19618225]
[184.03106689 29.11125946]
[197.74140930 23.02633667]
[211.41572571 16.86086082]
[225.05354309 10.61504459]
[238.61691284 4.20919752]
[252.10397339 -2.35579205]
[265.59103394 -8.92078209]
[267.30813599 -24.25229073]
[277.05917358 -36.20722198]
[291.73269653 -40.97080231]
[306.64639282 -37.02298737]
[317.04135132 -25.62351418]
[319.60061646 -10.40991020]
[313.50750732 3.76321793]
[300.70632935 12.37327576]
[285.28186035 12.67282581]
[272.15603638 4.56628275]
[258.66897583 11.13127232]
[245.18190002 17.69626236]
[242.81243896 21.80726814]
[237.85156250 24.49097061]
[231.29936218 24.25285149]
[217.66154480 30.49866676]
[212.90507507 36.12173843]
[203.82633972 36.73668671]
[190.11598206 42.82160950]
[176.40563965 48.90653229]
[162.69528198 54.99145508]
[148.98493958 61.07637405]
[135.27458191 67.16130066]
[136.38787842 112.53232574]
[104.52143097 128.41949463]
[102.93595123 143.33546448]
[101.35047150 158.25143433]
[99.76499176 173.16741943]
[98.17951202 188.08338928]
[100.48858643 194.21986389]
[99.52149200 199.77659607]
[96.37720490 203.33021545]
[94.44119263 218.20474243]
[92.50517273 233.07928467]
[90.56915283 247.95382690]
[99.48736572 255.75357056]
[103.50705719 266.77136230]
[101.74308777 278.24505615]
[94.74523163 287.35681152]
[84.33415222 291.92501831]
[82.04866791 306.74987793]
[79.76318359 321.57473755]
[77.47769928 336.39962769]
[75.19221497 351.22448730]
[72.90673065 366.04934692]
[79.87929535 376.87390137]
[77.69268799 389.15625000]
[68.05142212 396.42645264]
[65.59166718 411.22338867]
[63.13190842 426.02032471]
[60.67215347 440.81729126]
[58.21239853 455.61422729]
[65.05711365 466.52005005]
[62.72614670 478.77584839]
[53.00000763 485.93209839]
[50.36632156 500.69906616]
[47.73263550 515.46606445]
[45.09894943 530.23303223]
[48.59634018 544.81964111]
[57.63999939 556.78674316]
[66.68366241 568.75384521]
[81.99044800 574.63897705]
[84.27958679 590.87756348]
[71.19620514 600.76477051]
[56.19936752 594.12951660]
[54.71653366 577.79754639]
[45.67287064 565.83038330]
[36.62920761 553.86328125]
[29.23073578 555.09313965]
[23.96250343 569.13757324]
[14.43379021 557.55291748]
[7.03531790 558.78277588]
[2.34973526 573.03216553]
[-2.33584738 587.28155518]
[-7.02143002 601.53100586]
[-11.70701313 615.78039551]
[-16.39259529 630.02978516]
[-21.07817841 644.27917480]
[-25.76376152 658.52856445]
[-21.59224319 676.48016357]
[-35.15719986 687.63659668]
[-39.67479706 701.94012451]
[-44.19239807 716.24371338]
[-46.65215302 731.04064941]
[-47.00510788 746.03649902]
[-47.35806656 761.03234863]
[-47.71102142 776.02819824]
[-48.06397629 791.02404785]
[-48.41693115 806.01983643]
[-48.76988602 821.01568604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 266]
[4 265]
[5 264]
[6 263]
[7 262]
[8 261]
[9 260]
[11 33]
[12 32]
[13 31]
[14 30]
[16 28]
[17 27]
[19 26]
[20 25]
[34 259]
[35 258]
[36 257]
[39 255]
[40 254]
[41 253]
[42 252]
[43 251]
[44 250]
[45 249]
[46 248]
[48 234]
[49 233]
[50 232]
[51 231]
[53 228]
[54 227]
[55 226]
[56 225]
[57 224]
[59 221]
[60 220]
[61 219]
[62 218]
[63 217]
[64 216]
[67 211]
[68 210]
[69 209]
[70 208]
[71 205]
[72 204]
[73 203]
[74 202]
[75 201]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[96 153]
[97 152]
[98 151]
[99 150]
[100 149]
[101 148]
[102 147]
[103 146]
[105 144]
[106 143]
[107 142]
[108 140]
[109 139]
[110 138]
[111 137]
[112 136]
[114 135]
[115 134]
[119 131]
[120 130]
[121 129]
[122 128]
[166 199]
[167 198]
[168 197]
[169 196]
[170 195]
[171 194]
[172 192]
[173 191]
[174 188]
[175 187]
[176 186]
[235 244]
[236 243]
[237 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
