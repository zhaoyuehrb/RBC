%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAGAGGGGCAGGCUGGUCCCCUGACAGGUUGAAGCAAGUAGACGCCCAGGAGCCCCGGGAGGGGGCUGCAGUUUCCUUCCUUCCUUCUCGGCAGCGCUCCGCGCCCCCAUCGCCCCUCCUGCGCUAGCGGAGGUGAUCGCCGCGGCGAUGCCGGAGGAGGGUUCGGGCUGCUCGGUGCGGCGCAGGCCCUAUGGGUGCGUCCUGCGGGCUGCUUUGGUCCCAUUGGUCGCGGGCUUGGUGAUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-150.52787781 623.06695557]
[-156.37635803 636.87982178]
[-148.60614014 654.18005371]
[-155.84967041 671.36041260]
[-173.05941772 677.65502930]
[-178.56033325 691.60992432]
[-178.79267883 700.71490479]
[-184.21841431 705.70440674]
[-189.89355469 719.58935547]
[-195.56869507 733.47436523]
[-201.24383545 747.35931396]
[-206.91899109 761.24432373]
[-200.57214355 775.71820068]
[-206.39657593 790.41009521]
[-220.93675232 796.60351562]
[-235.56623840 790.62408447]
[-241.60562134 776.01928711]
[-235.47184753 761.45379639]
[-220.80397034 755.56915283]
[-215.12882996 741.68420410]
[-209.45367432 727.79919434]
[-203.77853394 713.91424561]
[-198.10339355 700.02923584]
[-192.51525879 686.10900879]
[-187.01434326 672.15411377]
[-193.70654297 662.95129395]
[-195.15191650 651.54400635]
[-190.87843323 640.74035645]
[-181.83627319 633.25585938]
[-170.18922424 631.03131104]
[-164.34074402 617.21844482]
[-169.50765991 611.92791748]
[-173.09690857 605.43157959]
[-174.83822632 598.18914795]
[-174.59265137 590.71752930]
[-172.36357117 583.55377197]
[-168.29747009 577.21667480]
[-162.67436218 572.16912842]
[-155.88859558 568.78424072]
[-148.42120361 567.31793213]
[-140.80574036 567.88946533]
[-133.77104187 554.64135742]
[-126.73633575 541.39318848]
[-119.70162964 528.14508057]
[-112.66693115 514.89697266]
[-105.71527100 501.60504150]
[-98.84693146 488.26992798]
[-91.97859192 474.93478394]
[-85.11024475 461.59963989]
[-85.81548309 458.16979980]
[-84.91053009 454.22933960]
[-82.17385864 450.53152466]
[-77.72553253 447.90002441]
[-70.36143494 434.83212280]
[-62.99733353 421.76422119]
[-55.63323212 408.69631958]
[-48.26912689 395.62844849]
[-40.90502548 382.56054688]
[-33.62284851 369.44680786]
[-26.42288399 356.28775024]
[-19.22291565 343.12872314]
[-27.50650024 327.50912476]
[-24.71154404 309.89166260]
[-11.77377796 297.38372803]
[6.24083996 295.14648438]
[13.10918045 281.81134033]
[19.97752190 268.47619629]
[26.84586143 255.14106750]
[33.71420288 241.80592346]
[40.58254242 228.47079468]
[47.19932938 215.00906372]
[53.56222534 201.42549133]
[59.92512131 187.84190369]
[66.28801727 174.25833130]
[72.65091705 160.67475891]
[79.01380920 147.09118652]
[85.37670898 133.50759888]
[83.53117371 81.13034821]
[82.78050995 66.14914703]
[69.59002686 54.63988113]
[68.83250427 37.48898697]
[80.48872375 25.34965515]
[79.55061340 10.37901878]
[78.61250305 -4.59161806]
[77.67439270 -19.56225395]
[76.73628235 -34.53289032]
[75.79817200 -49.50352478]
[72.14631653 -57.84727097]
[74.94319916 -64.66718292]
[74.19252777 -79.64839172]
[70.64539337 -88.03719330]
[73.52741241 -94.82156372]
[72.96430969 -109.81098938]
[72.40121460 -124.80041504]
[71.83811188 -139.78984070]
[71.27500916 -154.77926636]
[63.02510071 -168.27925110]
[70.27916718 -181.28800964]
[69.71606445 -196.27745056]
[69.15296173 -211.26687622]
[68.58985901 -226.25630188]
[60.33995438 -239.75628662]
[67.59401703 -252.76504517]
[67.03091431 -267.75445557]
[63.58905411 -276.18701172]
[66.55575562 -282.93478394]
[66.18030548 -297.93008423]
[58.58098602 -303.43374634]
[54.41394043 -311.68710327]
[54.49501801 -320.79510498]
[58.68033218 -328.73004150]
[65.92625427 -333.78298950]
[66.11399078 -348.78179932]
[66.30172729 -363.78063965]
[66.48947144 -378.77944946]
[66.67720795 -393.77828979]
[66.86495209 -408.77709961]
[63.98794556 -414.68334961]
[64.43881226 -420.31585693]
[67.24980164 -424.14776611]
[67.81289673 -439.13717651]
[68.37599945 -454.12661743]
[65.57650757 -462.79360962]
[69.04111481 -469.29977417]
[69.79178619 -484.28100586]
[61.83574295 -498.62091064]
[70.50730133 -512.53985596]
[86.88590240 -511.71914673]
[94.12264252 -497.00311279]
[84.77298737 -483.53033447]
[84.02232361 -468.54913330]
[83.36542511 -453.56350708]
[82.80232239 -438.57409668]
[82.23922729 -423.58465576]
[81.86377716 -408.58935547]
[81.67603302 -393.59054565]
[81.48829651 -378.59170532]
[81.30055237 -363.59289551]
[81.11281586 -348.59405518]
[80.92507935 -333.59524536]
[92.52006531 -316.50500488]
[81.17560577 -298.30554199]
[81.55105591 -283.31024170]
[82.02034760 -268.31756592]
[82.58344269 -253.32814026]
[90.79307556 -240.90029907]
[83.57928467 -226.81939697]
[84.14238739 -211.82997131]
[84.70549011 -196.84054565]
[85.26859283 -181.85112000]
[93.47821808 -169.42327881]
[86.26443481 -155.34237671]
[86.82753754 -140.35295105]
[87.39064026 -125.36351776]
[87.95374298 -110.37409210]
[88.51683807 -95.38466644]
[89.17373657 -80.39905548]
[89.92440033 -65.41785431]
[90.76880646 -50.44163513]
[91.70691681 -35.47100067]
[92.64502716 -20.50036430]
[93.58313751 -5.52972794]
[94.52124786 9.44090843]
[95.45935822 24.41154480]
[106.20948029 31.48801804]
[110.99998474 43.64266586]
[107.87726593 56.52874756]
[97.76171875 65.39848328]
[98.51238251 80.37968445]
[110.72441864 89.08980560]
[125.13352203 84.92116547]
[139.54263306 80.75253296]
[153.95175171 76.58389282]
[168.36085510 72.41525269]
[177.33355713 59.11599731]
[193.33654785 57.98286438]
[204.09368896 69.88510132]
[201.35304260 85.69232941]
[187.21699524 93.27859497]
[172.52949524 86.82436371]
[158.12037659 90.99300385]
[143.71127319 95.16163635]
[129.30216980 99.33027649]
[114.89305115 103.49891663]
[115.45615387 118.48834229]
[130.13742065 121.56415558]
[144.81867981 124.63996887]
[159.49993896 127.71578217]
[174.18119812 130.79159546]
[188.95149231 133.40658569]
[203.79637146 135.55819702]
[218.64126587 137.70980835]
[235.18388367 133.99798584]
[243.33012390 148.86657715]
[231.29768372 160.81048584]
[216.48963928 152.55470276]
[201.64476013 150.40307617]
[186.79988098 148.25146484]
[193.68026733 161.58039856]
[187.66676331 175.32221985]
[173.20729065 179.31268311]
[160.99693298 170.60021973]
[160.06715393 155.62907410]
[171.10537720 145.47285461]
[156.42411804 142.39703369]
[141.74285889 139.32122803]
[127.06159973 136.24540710]
[112.38034058 133.16960144]
[98.96028137 139.87049866]
[92.59738922 153.45407104]
[86.23448944 167.03765869]
[79.87159729 180.62123108]
[73.50869751 194.20480347]
[67.14579773 207.78837585]
[60.78290558 221.37196350]
[61.22354126 226.52154541]
[59.80212784 230.89678955]
[57.11954880 233.92167664]
[53.91767883 235.33912659]
[47.04933929 248.67427063]
[40.18099976 262.00939941]
[33.31266022 275.34454346]
[26.44431877 288.67968750]
[19.57597733 302.01483154]
[26.61065292 312.31243896]
[28.59836006 324.55108643]
[25.22368813 336.40707397]
[17.18348885 345.65567017]
[6.04402637 350.58840942]
[-6.06387091 350.32867432]
[-13.26383781 363.48773193]
[-20.46380424 376.64675903]
[-21.83096313 385.65148926]
[-27.83712769 389.92462158]
[-35.20122910 402.99252319]
[-42.56533051 416.06042480]
[-49.92943192 429.12832642]
[-57.29353333 442.19622803]
[-64.65763855 455.26412964]
[-71.77510834 468.46798706]
[-78.64344788 481.80313110]
[-85.51179504 495.13824463]
[-92.38013458 508.47338867]
[-93.52147675 517.50952148]
[-99.41880035 521.93164062]
[-106.45350647 535.17980957]
[-113.48821259 548.42791748]
[-120.52291107 561.67602539]
[-127.55761719 574.92419434]
[-118.89188385 596.31750488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[5 25]
[6 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[41 249]
[42 248]
[43 247]
[44 246]
[45 245]
[46 243]
[47 242]
[48 241]
[49 240]
[53 239]
[54 238]
[55 237]
[56 236]
[57 235]
[58 234]
[59 232]
[60 231]
[61 230]
[65 224]
[66 223]
[67 222]
[68 221]
[69 220]
[70 219]
[71 215]
[72 214]
[73 213]
[74 212]
[75 211]
[76 210]
[77 209]
[78 169]
[79 168]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[89 158]
[90 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
[98 150]
[99 149]
[100 148]
[101 147]
[103 145]
[104 144]
[106 143]
[107 142]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[120 134]
[121 133]
[122 132]
[124 131]
[125 130]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
[185 208]
[186 207]
[187 206]
[188 205]
[189 204]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
