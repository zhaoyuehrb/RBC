%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCGUGCGCGCUGAGGAGGAGCCGCUGCCGCCGUCGCCGUCGCCGCCACCGCCGCCACCGCUACCGAGGCCGAGCGGAGCCGUUAGCGCCGCGCCGCCGCCGCCUCCCGCCCGCCCCGGAGCAGCCCCGGGCCCGCCCGCCCGCAUCCAGAUUUUUGAAAAAUACAAUGUCUAAUGGUUAUGAAGACCACAUGGCCGAAGACUGCAGGGGUGACAUCGGGAGAACGAAUUUGAUCGUCAACUACCUCCCUCAGA\
ACAUGACCCAGG\
) } def
/len { sequence length } bind def

/coor [
[94.80967712 435.19931030]
[94.10659027 420.21578979]
[93.40351105 405.23226929]
[92.70042419 390.24874878]
[91.99733734 375.26525879]
[91.29425812 360.28173828]
[90.59117126 345.29821777]
[80.72270966 339.65377808]
[74.72891235 329.85296631]
[74.18912506 318.25759888]
[79.35178375 307.72747803]
[89.04462433 300.91531372]
[88.69298553 285.91943359]
[88.34134674 270.92355347]
[87.98970795 255.92767334]
[87.63806915 240.93179321]
[87.28643036 225.93591309]
[86.84690857 210.94235229]
[86.31951141 195.95162964]
[85.79211426 180.96090698]
[85.17685699 165.97352600]
[84.47377777 150.99000549]
[71.83341217 142.91404724]
[57.94181442 148.57296753]
[44.05021286 154.23190308]
[30.15861511 159.89082336]
[16.26701546 165.54975891]
[2.44270444 171.37113953]
[-11.31241798 177.35417175]
[-25.06753922 183.33718872]
[-28.52800369 198.34823608]
[-40.02947235 208.32669067]
[-55.02387238 209.60420227]
[-67.74307251 201.89964294]
[-81.49819183 207.88267517]
[-91.06689453 220.48229980]
[-105.82407379 218.46363831]
[-119.57919312 224.44667053]
[-129.14790344 237.04629517]
[-143.90507507 235.02763367]
[-157.66020203 241.01065063]
[-167.22889709 253.61027527]
[-181.98608398 251.59161377]
[-195.74119568 257.57464600]
[-205.30990601 270.17425537]
[-220.06707764 268.15560913]
[-233.82220459 274.13864136]
[-243.13476562 287.63708496]
[-259.45712280 286.05187988]
[-265.99822998 271.01373291]
[-256.02914429 257.99258423]
[-239.80523682 260.38351440]
[-226.05010986 254.40048218]
[-217.46527100 242.22880554]
[-201.72422791 243.81951904]
[-187.96911621 237.83650208]
[-179.38426208 225.66482544]
[-163.64323425 227.25553894]
[-149.88810730 221.27250671]
[-141.30325317 209.10083008]
[-125.56222534 210.69154358]
[-111.80709839 204.70851135]
[-103.22225189 192.53684998]
[-87.48121643 194.12754822]
[-73.72609711 188.14453125]
[-70.69016266 173.58702087]
[-59.53232956 163.48916626]
[-44.39098740 161.87886047]
[-31.05056763 169.58207703]
[-17.29544449 163.59904480]
[-3.54032326 157.61601257]
[-0.99758732 153.61038208]
[4.07274103 151.14108276]
[10.60808659 151.65815735]
[24.49968719 145.99923706]
[38.39128494 140.34030151]
[52.28288651 134.68138123]
[66.17448425 129.02244568]
[59.03717041 110.26268768]
[61.05751419 91.36708832]
[47.23320389 85.54570770]
[31.89296532 90.24216461]
[18.73860168 81.05835724]
[17.86101341 65.03932953]
[29.93341064 54.47349548]
[45.69488525 57.46606827]
[53.05458069 71.72139740]
[66.87889099 77.54277802]
[74.65631104 64.71656799]
[63.10309982 55.14978790]
[47.53927612 52.30762100]
[42.67128372 38.23097610]
[31.11807060 28.66419792]
[19.56485558 19.09741974]
[3.31496263 16.88993073]
[-2.64699030 1.61291766]
[7.81214333 -11.01793957]
[23.93290329 -8.00909710]
[29.13163376 7.54420567]
[40.68484879 17.11098480]
[52.23806381 26.67776299]
[66.97552490 28.83564949]
[72.66987610 43.59657288]
[84.22309113 53.16335297]
[99.16516113 51.84628296]
[108.86670685 40.40600586]
[118.56825256 28.96572876]
[128.26980591 17.52545166]
[137.97135925 6.08517361]
[147.67289734 -5.35510397]
[145.42025757 -24.19268227]
[157.47293091 -38.42670059]
[175.78404236 -39.27984238]
[185.21473694 -50.94440460]
[194.64543152 -62.60896683]
[204.07612610 -74.27352905]
[213.50682068 -85.93809509]
[222.93750000 -97.60266113]
[221.17253113 -108.29131317]
[225.47473145 -117.99459076]
[234.21258545 -123.62561035]
[244.38821411 -123.53824615]
[254.08976746 -134.97853088]
[263.79132080 -146.41880798]
[273.49285889 -157.85908508]
[259.73504639 -174.85794067]
[256.03860474 -199.16613770]
[265.99298096 -224.61077881]
[289.40750122 -243.47618103]
[290.28619385 -258.45040894]
[291.16485596 -273.42465210]
[292.04351807 -288.39889526]
[292.92221069 -303.37313843]
[282.23471069 -315.01589966]
[282.99365234 -330.80194092]
[294.74874878 -341.36572266]
[310.52587891 -340.43994141]
[320.96481323 -328.57382202]
[319.87225342 -312.80734253]
[307.89645386 -302.49447632]
[307.01776123 -287.52023315]
[306.13909912 -272.54598999]
[305.26043701 -257.57174683]
[304.38174438 -242.59750366]
[311.42272949 -240.01400757]
[316.58975220 -254.09597778]
[328.10528564 -263.70806885]
[330.67172241 -248.92898560]
[325.50473022 -234.84700012]
[332.54571533 -232.26350403]
[341.56045532 -244.25242615]
[350.57519531 -256.24136353]
[359.58990479 -268.23028564]
[358.55477905 -281.06414795]
[366.28143311 -290.85848999]
[378.21270752 -292.71508789]
[387.36734009 -304.59750366]
[396.52200317 -316.47994995]
[392.99075317 -331.71362305]
[400.12368774 -345.62960815]
[414.55288696 -351.65722656]
[429.46530151 -346.95043945]
[437.81976318 -333.73162842]
[435.67150879 -318.24230957]
[424.03494263 -307.79605103]
[408.40444946 -307.32528687]
[399.24978638 -295.44287109]
[390.09512329 -283.56042480]
[388.69378662 -266.05276489]
[371.57885742 -259.21554565]
[362.56411743 -247.22662354]
[353.54937744 -235.23770142]
[344.53463745 -223.24876404]
[348.93591309 -217.17597961]
[363.85552979 -218.72671509]
[357.73846436 -205.03039551]
[362.13973999 -198.95759583]
[376.33895874 -203.79306030]
[390.53820801 -208.62852478]
[404.73742676 -213.46398926]
[418.93667603 -218.29945374]
[433.13589478 -223.13491821]
[447.33514404 -227.97038269]
[452.81948853 -242.61470032]
[466.45928955 -250.26258850]
[481.81423950 -247.30293274]
[491.63418579 -235.13320923]
[491.28250122 -219.49957275]
[480.92520142 -207.78376770]
[465.45266724 -205.51762390]
[452.17062378 -213.77114868]
[437.97137451 -208.93568420]
[423.77212524 -204.10021973]
[409.57290649 -199.26475525]
[395.37365723 -194.42929077]
[381.17443848 -189.59382629]
[366.97518921 -184.75836182]
[360.21588135 -164.28311157]
[347.43423462 -148.55886841]
[331.00195312 -139.08360291]
[313.54010010 -136.33746338]
[297.52282715 -139.80795288]
[284.93313599 -148.15753174]
[275.23159790 -136.71725464]
[265.53005981 -125.27697754]
[255.82849121 -113.83670044]
[253.73367310 -94.59442902]
[234.60206604 -88.17196655]
[225.17137146 -76.50740051]
[215.74069214 -64.84284210]
[206.30999756 -53.17827606]
[196.87930298 -41.51371384]
[187.44860840 -29.84914970]
[191.07286072 -19.07366371]
[189.03976440 -7.76669359]
[181.73835754 1.25736845]
[170.88327026 5.69622517]
[159.11317444 4.34644461]
[149.41163635 15.78672218]
[139.71008301 27.22699928]
[130.00852966 38.66727829]
[120.30698395 50.10755539]
[110.60543823 61.54783249]
[139.79576111 85.87293243]
[136.28855896 125.87679291]
[147.61433411 135.71177673]
[158.94009399 145.54676819]
[170.26586914 155.38174438]
[186.01148987 154.02120972]
[198.05342102 164.25680542]
[199.24742126 180.01591492]
[188.88508606 191.94897461]
[173.11421204 192.97627258]
[161.29139709 182.48835754]
[160.43087769 166.70751953]
[149.10511780 156.87252808]
[137.77934265 147.03755188]
[126.45357513 137.20256042]
[119.70450592 140.47364807]
[118.62143707 155.43449402]
[106.20635986 147.01583862]
[99.45729065 150.28692627]
[100.16036987 165.27044678]
[103.67826080 173.66192627]
[100.78283691 180.43350220]
[101.31023407 195.42422485]
[101.83763123 210.41496277]
[105.25691223 218.84710693]
[102.28231049 225.58427429]
[102.63394928 240.58015442]
[102.98558807 255.57603455]
[103.33722687 270.57189941]
[103.68886566 285.56777954]
[104.04050446 300.56365967]
[118.24096680 313.14443970]
[118.69194031 331.79034424]
[105.57468414 344.59512329]
[106.27777100 359.57864380]
[106.98085022 374.56216431]
[107.68393707 389.54568481]
[108.38702393 404.52917480]
[109.09010315 419.51269531]
[109.79319000 434.49621582]
[120.64089966 446.31597900]
[118.02101898 462.14367676]
[103.94329071 469.83764648]
[89.20694733 463.49572754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 263]
[2 262]
[3 261]
[4 260]
[5 259]
[6 258]
[7 257]
[12 254]
[13 253]
[14 252]
[15 251]
[16 250]
[17 249]
[18 247]
[19 246]
[20 245]
[21 243]
[22 242]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[28 71]
[29 70]
[30 69]
[34 65]
[35 64]
[37 62]
[38 61]
[40 59]
[41 58]
[43 56]
[44 55]
[46 53]
[47 52]
[80 88]
[81 87]
[89 104]
[90 103]
[92 101]
[93 100]
[94 99]
[105 223]
[106 222]
[107 221]
[108 220]
[109 219]
[110 218]
[113 213]
[114 212]
[115 211]
[116 210]
[117 209]
[118 208]
[122 206]
[123 205]
[124 204]
[125 203]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[150 173]
[151 172]
[152 171]
[153 170]
[156 168]
[157 167]
[158 166]
[177 197]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
[183 191]
[225 238]
[226 237]
[227 236]
[228 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
