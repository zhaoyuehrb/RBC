%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUCUCUCCUCUGAGCCACAACUAAAUGAUGUUUCUACUUUUCCCUUUCUACUUUCCUAGACCCUGGAUUUUGUAUGCAGAAGCCCCAGCUCUUGGUCCCUAUCAUAGCCACUUCAAAUGGAAAUCUGGUCCACGCAGCAUACUUCCUUUUGGUGGGUAUCCCUGGCCUGGGGC\
) } def
/len { sequence length } bind def

/coor [
[124.32254791 122.06309509]
[117.63276672 128.85974121]
[109.04232788 133.60647583]
[99.18511200 135.77403259]
[88.84093475 135.03048706]
[78.87386322 131.28077698]
[72.91909027 145.04815674]
[66.96431732 158.81553650]
[73.01715088 173.41481018]
[66.89679718 187.98590088]
[52.23435211 193.88404846]
[37.72877884 187.60998535]
[31.98598099 172.88600159]
[38.41305542 158.44757080]
[53.19693756 152.86076355]
[59.15171432 139.09338379]
[65.10649109 125.32600403]
[53.28025055 134.55314636]
[41.45401001 143.78028870]
[34.14231873 156.87757874]
[21.82978630 165.44505310]
[7.00780010 167.74911499]
[-7.32448435 163.32354736]
[-18.26699638 153.06384277]
[-23.60557175 139.04602051]
[-22.25997353 124.10649109]
[-14.50247860 111.26821899]
[-1.90277874 103.12895966]
[12.98963737 101.33565521]
[27.16280174 106.25207520]
[42.13098145 105.27556610]
[57.09916306 104.29905701]
[43.49518204 97.97989655]
[29.89120483 91.66073608]
[19.87128067 95.99285126]
[9.34082508 94.11630249]
[1.75302017 86.89273834]
[-0.54019475 76.89597321]
[-13.91133118 70.09797668]
[-27.28246689 63.29998398]
[-42.22423935 71.19525909]
[-58.76536179 68.66544342]
[-70.43048096 56.90084076]
[-72.77230072 40.66742325]
[-86.26198578 34.10781479]
[-99.75166321 27.54820442]
[-114.55095673 35.70742416]
[-131.13436890 33.47157669]
[-143.00645447 21.91586685]
[-145.63601685 5.72656918]
[-159.24000549 -0.59259033]
[-172.84397888 -6.91174984]
[-186.44795227 -13.23090935]
[-201.20318604 -7.56885529]
[-215.60618591 -14.07492924]
[-221.11192322 -28.88919258]
[-214.45393372 -43.22260666]
[-199.58229065 -48.57141113]
[-185.32006836 -41.76225281]
[-180.12879944 -26.83488655]
[-166.52481079 -20.51572800]
[-152.92083740 -14.19656849]
[-139.31686401 -7.87740946]
[-128.28590393 -15.42865467]
[-114.85581970 -16.54424858]
[-102.53356934 -10.82534599]
[-94.59005737 0.32812309]
[-93.19205475 14.05852222]
[-79.70236969 20.61813164]
[-66.21269226 27.17774200]
[-55.04945374 19.82346535]
[-41.60168457 18.94640732]
[-29.38287163 24.88310623]
[-21.63856316 36.17580032]
[-20.48447227 49.92884827]
[-7.11333704 56.72684479]
[6.25779915 63.52483749]
[25.41734314 61.05532455]
[36.21036530 78.05675507]
[49.81434250 84.37591553]
[63.41831970 90.69507599]
[77.34822083 71.98276520]
[98.69374847 65.71396637]
[118.50389099 73.16876221]
[129.25662231 90.13427734]
[144.20880127 88.93748474]
[159.16098022 87.74069214]
[174.11315918 86.54389954]
[189.06533813 85.34710693]
[204.01751709 84.15032196]
[218.96971130 82.95352936]
[232.10855103 74.13983154]
[245.41258240 80.83700562]
[260.36474609 79.64021301]
[270.59317017 67.89212036]
[285.77383423 66.89140320]
[296.91082764 76.71501923]
[311.86300659 75.51822662]
[299.97665405 66.36863708]
[295.60693359 52.01922989]
[300.37622070 37.79762650]
[312.51376343 28.98400116]
[327.51318359 28.85066414]
[339.80548096 37.44711685]
[344.82684326 51.58168793]
[340.71289062 66.00651550]
[328.99041748 75.36622620]
[343.96148682 76.29745483]
[358.93255615 77.22868347]
[373.18646240 70.36305237]
[385.40884399 78.87555695]
[400.37991333 79.80678558]
[415.35095215 80.73802185]
[430.32202148 81.66925049]
[436.44845581 79.05213928]
[442.11798096 79.82833862]
[445.80496216 82.90852356]
[460.73355103 84.37049866]
[475.66213989 85.83247375]
[490.59069824 87.29444885]
[505.07928467 80.93902588]
[516.99188232 89.87995148]
[531.92047119 91.34192657]
[546.84899902 92.80390930]
[561.77758789 94.26588440]
[576.72979736 95.46267700]
[591.70086670 96.39390564]
[606.67956543 97.19223785]
[621.66485596 97.85761261]
[636.65008545 98.52298737]
[647.08917236 86.88000488]
[662.57714844 84.72227478]
[675.80108643 93.06862640]
[680.51702881 107.97814941]
[674.49822998 122.41103363]
[660.58660889 129.55250549]
[645.35083008 126.03059387]
[635.98468018 113.50821686]
[620.99945068 112.84284210]
[606.01422119 112.17747498]
[599.17108154 115.03089142]
[590.76965332 111.36496735]
[575.79858398 110.43373871]
[571.66857910 112.88824463]
[565.94775391 112.75273895]
[560.31561279 109.19446564]
[545.38702393 107.73249054]
[530.45843506 106.27051544]
[515.52990723 104.80854034]
[502.10910034 111.26853180]
[489.12872314 102.22303772]
[474.20016479 100.76105499]
[459.27157593 99.29907990]
[444.34298706 97.83710480]
[429.39080811 96.64031219]
[414.41973877 95.70908356]
[399.44866943 94.77785492]
[384.47760010 93.84662628]
[371.29452515 100.77886963]
[358.00134277 92.19975281]
[343.03027344 91.26852417]
[328.05920410 90.33729553]
[313.05978394 90.47040558]
[298.10760498 91.66719818]
[288.67501831 103.13722992]
[273.52841187 104.56394958]
[261.56155396 94.59239197]
[246.60937500 95.78918457]
[234.54000854 104.51728058]
[220.16648865 97.90570831]
[205.21430969 99.10250092]
[190.26213074 100.29929352]
[175.30995178 101.49607849]
[160.35777283 102.69287109]
[145.40559387 103.88966370]
[130.45341492 105.08645630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[32 81]
[33 80]
[34 79]
[38 77]
[39 76]
[40 75]
[44 70]
[45 69]
[46 68]
[50 63]
[51 62]
[52 61]
[53 60]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[93 168]
[94 167]
[97 164]
[98 163]
[107 162]
[108 161]
[109 160]
[111 158]
[112 157]
[113 156]
[114 155]
[117 154]
[118 153]
[119 152]
[120 151]
[122 149]
[123 148]
[124 147]
[125 146]
[126 143]
[127 142]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
