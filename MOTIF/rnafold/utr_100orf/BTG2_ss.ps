%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGUAACGCUGUCUUGUGGACCCGCACUUCCCACCCGAGACCUCUCACUGAGCCCGAGCCGCGCGCGACAUGAGCCACGGGAAGGGAACCGACAUGCUCCCGGAGAUCGCCGCCGCCGUGGGCUUCCUCUCCAGCCUCCUGAGGACCCGGGGCUGCGUGAGCGAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[113.74733734 184.62919617]
[100.13877106 178.31993103]
[94.81906128 164.29595947]
[87.47779083 177.37670898]
[80.13652802 190.45744324]
[72.79525757 203.53819275]
[75.52753448 216.16830444]
[69.11428070 226.92211914]
[57.47391510 230.29672241]
[49.89496613 243.24121094]
[42.31601334 256.18569946]
[46.55542755 271.41076660]
[38.71474075 285.13296509]
[23.44569397 289.21118164]
[9.80714321 281.22586060]
[5.89059734 265.91455078]
[14.01967430 252.36117554]
[29.37153625 248.60673523]
[36.95048904 235.66226196]
[44.52943802 222.71777344]
[43.67390442 205.20538330]
[59.71451569 196.19691467]
[67.05578613 183.11618042]
[74.39704895 170.03543091]
[81.73831940 156.95469666]
[88.35216522 143.49151611]
[94.21873474 129.68632507]
[76.65531158 119.66952515]
[69.19847870 100.67374420]
[75.37009430 81.02533722]
[63.17074966 72.29745483]
[50.97140121 63.56957245]
[38.77205658 54.84169006]
[26.57271004 46.11380386]
[8.22506332 44.76565170]
[1.56645083 28.54594994]
[-10.79026699 20.04233170]
[-23.14698410 11.53871250]
[-35.50370407 3.03509426]
[-45.53916168 8.70470238]
[-56.91674423 10.19543934]
[-67.97450256 7.32841158]
[-77.11173248 0.55845594]
[-83.02068329 -9.09753609]
[-84.87369537 -20.21321297]
[-82.43890381 -31.16341782]
[-94.31135559 -40.33102417]
[-106.18379974 -49.49863052]
[-118.05625153 -58.66623688]
[-126.79601288 -61.44934845]
[-130.05978394 -68.11129761]
[-141.76281738 -77.49421692]
[-160.00909424 -79.84520721]
[-165.76939392 -96.40524292]
[-177.64184570 -105.57284546]
[-193.29345703 -107.88310242]
[-198.63821411 -121.78572845]
[-210.51066589 -130.95333862]
[-226.54206848 -130.34208679]
[-236.90580750 -142.58840942]
[-233.65170288 -158.29797363]
[-219.27603149 -165.41973877]
[-204.80656433 -158.49050903]
[-201.34306335 -142.82577515]
[-189.47061157 -133.65817261]
[-174.66818237 -132.00364685]
[-168.47422791 -117.44529724]
[-156.60179138 -108.27768707]
[-144.54437256 -109.50446320]
[-134.57273865 -101.93210602]
[-132.37989807 -89.19724274]
[-120.67687225 -79.81433105]
[-108.88864136 -70.53868103]
[-97.01619720 -61.37107849]
[-85.14374542 -52.20347214]
[-73.27130127 -43.03586578]
[-55.71443558 -49.33404922]
[-37.75311279 -43.77543259]
[-26.64776039 -28.41901398]
[-27.00008392 -9.32162380]
[-14.64336681 -0.81800520]
[-2.28664851 7.68561316]
[10.07006931 16.18923187]
[22.04219246 14.30394077]
[32.41359329 21.31880760]
[35.30059433 33.91445923]
[47.49993896 42.64234161]
[59.69928741 51.37022781]
[71.89863586 60.09811020]
[84.09797668 68.82599640]
[98.61023712 65.03199005]
[104.97708130 51.45026779]
[111.34393311 37.86854553]
[103.04611206 24.86278915]
[103.11983490 9.43560314]
[111.54157257 -3.49025655]
[125.62398529 -9.79019356]
[140.87342834 -7.45392036]
[152.42384338 2.77306628]
[156.58955383 17.62737274]
[152.04129028 32.36904144]
[140.23039246 42.29406357]
[124.92565918 44.23539734]
[118.55880737 57.81711960]
[112.19195557 71.39884186]
[122.68061066 79.04450226]
[129.07276917 90.23884583]
[130.30960083 102.98107147]
[126.24634552 115.02766418]
[140.52902222 119.61077881]
[154.81170654 124.19388580]
[169.09439087 128.77699280]
[183.49726868 132.96713257]
[198.00952148 136.76112366]
[212.52178955 140.55513000]
[227.83024597 136.55993652]
[238.18666077 147.26480103]
[252.69891357 151.05880737]
[267.21115112 154.85279846]
[282.51962280 150.85762024]
[292.87603760 161.56248474]
[307.38830566 165.35647583]
[321.90054321 169.15048218]
[336.41281128 172.94448853]
[342.93719482 171.55294800]
[348.35702515 173.41117859]
[351.38082886 177.15115356]
[365.74484253 181.47264099]
[380.10885620 185.79412842]
[394.47286987 190.11561584]
[408.83685303 194.43710327]
[419.50689697 183.46398926]
[434.05780029 178.71742249]
[449.14587402 181.28811646]
[461.30398560 190.58535767]
[467.73831177 204.47268677]
[466.97030640 219.75891113]
[459.17639160 232.93136597]
[446.14758301 240.96311951]
[430.87783813 242.00852966]
[416.87597656 235.82737732]
[407.35955811 223.84002686]
[404.51538086 208.80110168]
[390.15136719 204.47961426]
[375.78735352 200.15812683]
[361.42333984 195.83663940]
[347.05935669 191.51515198]
[332.61880493 187.45674133]
[318.10653687 183.66273499]
[303.59429932 179.86874390]
[289.08203125 176.07473755]
[274.81158447 180.34129333]
[263.41717529 169.36506653]
[248.90490723 165.57106018]
[234.39265442 161.77705383]
[220.12220764 166.04362488]
[208.72778320 155.06738281]
[194.21553040 151.27337646]
[179.70327759 147.47938538]
[176.46707153 148.96469116]
[172.34359741 148.93402100]
[168.06362915 146.98451233]
[164.51129150 143.05967712]
[150.22860718 138.47657776]
[135.94592285 133.89346313]
[121.66323090 129.31034851]
[108.02393341 135.55290222]
[102.15735626 149.35809326]
[116.50959015 144.99763489]
[129.82019043 151.91340637]
[134.50280762 166.16378784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[9 20]
[10 19]
[11 18]
[26 168]
[27 167]
[30 90]
[31 89]
[32 88]
[33 87]
[34 86]
[36 83]
[37 82]
[38 81]
[39 80]
[46 76]
[47 75]
[48 74]
[49 73]
[51 72]
[52 71]
[54 68]
[55 67]
[57 65]
[58 64]
[91 105]
[92 104]
[93 103]
[109 166]
[110 165]
[111 164]
[112 163]
[113 159]
[114 158]
[115 157]
[117 155]
[118 154]
[119 153]
[121 151]
[122 150]
[123 149]
[124 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
