%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGACCCCGCCUGGCGCGCCGGCCCCUUCGCUUGCAGCCGCACUCGGAGGCGGCCGGCUGAAGUGCAGUGGCAUGAUCUCAGAUCACUACAACCUCCACCUCUUGGGUUCCAGUAAUUCUCCUGCCUGGCCUUCCUGAGUAACUGGGAUUAUGGGCACCCACCACCAUGCCCAGCUAAUUUUUGUAUUUUUAGUAGAGAUGAGGUUUCACCAUGUUGAUCAGGCUGGUCUCGAACUCCUGACCUCAAGCA\
) } def
/len { sequence length } bind def

/coor [
[117.03041077 300.63568115]
[130.31115723 293.43859863]
[127.15590668 278.77420044]
[123.90931702 264.12976074]
[120.57150269 249.50582886]
[117.23368835 234.88191223]
[113.89587402 220.25799561]
[103.83494568 213.57196045]
[100.92304993 201.43600464]
[107.24709320 190.21446228]
[104.09184265 175.55007935]
[100.93659210 160.88568115]
[97.78134918 146.22128296]
[94.62609863 131.55690002]
[80.84053802 125.64433289]
[68.04117584 133.46586609]
[55.24181366 141.28738403]
[42.44245148 149.10891724]
[29.84206200 157.24711609]
[17.44848061 165.69691467]
[5.05489922 174.14671326]
[-7.33868217 182.59651184]
[-19.73226357 191.04631042]
[-32.12584686 199.49610901]
[-44.51942825 207.94590759]
[-56.86009979 216.47280884]
[-69.14737701 225.07644653]
[-81.43466187 233.68009949]
[-93.72193909 242.28373718]
[-106.00922394 250.88739014]
[-118.29650116 259.49102783]
[-121.16736603 274.80102539]
[-133.75097656 283.35131836]
[-148.32902527 280.52001953]
[-160.61630249 289.12368774]
[-172.90357971 297.72732544]
[-179.33999634 312.81057739]
[-195.65093994 314.50921631]
[-205.05709839 301.07583618]
[-197.88223267 286.32952881]
[-181.50723267 285.44003296]
[-169.21995544 276.83639526]
[-156.93266296 268.23275757]
[-154.60722351 253.56552124]
[-142.26872253 244.66516113]
[-126.90014648 247.20375061]
[-114.61286926 238.60011292]
[-102.32558441 229.99645996]
[-90.03830719 221.39282227]
[-77.75102234 212.78916931]
[-65.46374512 204.18551636]
[-61.79701996 197.79154968]
[-52.96922684 195.55233765]
[-40.57564545 187.10253906]
[-28.18206406 178.65272522]
[-15.78848362 170.20292664]
[-3.39490151 161.75312805]
[8.99868011 153.30332947]
[21.39226151 144.85353088]
[22.05367470 142.15521240]
[23.80960274 139.55255127]
[26.63018990 137.45858765]
[30.33853149 136.26846313]
[34.62092209 136.30955505]
[47.42028809 128.48802185]
[60.21965027 120.66649628]
[73.01901245 112.84497070]
[75.25489807 85.30593109]
[98.48552704 72.36584473]
[84.81293488 66.19654083]
[71.14035034 60.02723312]
[57.46776199 53.85792923]
[50.90469742 54.13330078]
[45.92276382 51.46854401]
[43.53419495 47.36059952]
[30.01966286 40.85234451]
[16.50513077 34.34408569]
[2.99059701 27.83583069]
[-10.52393627 21.32757568]
[-27.41790962 19.90279579]
[-30.72552872 3.27462816]
[-15.66283703 -4.50686407]
[-4.01567984 7.81304169]
[9.49885273 14.32129765]
[23.01338577 20.82955360]
[36.52791977 27.33781052]
[50.04245377 33.84606552]
[63.63706970 40.18534088]
[77.30965424 46.35464478]
[90.98224640 52.52395248]
[104.65483093 58.69326019]
[119.06859589 54.54072571]
[127.36323547 42.04277039]
[135.65788269 29.54481506]
[143.95251465 17.04685783]
[152.24716187 4.54890156]
[160.54180908 -7.94905519]
[156.37300110 -20.74001884]
[160.26713562 -33.41399384]
[170.59162903 -41.41903687]
[183.44769287 -42.01525497]
[191.89749146 -54.40883636]
[200.34729004 -66.80242157]
[208.79708862 -79.19599915]
[180.68118286 -82.78597260]
[172.73481750 -106.70001984]
[188.64173889 -121.98356628]
[189.76269531 -136.94161987]
[190.88365173 -151.89968872]
[192.00459290 -166.85774231]
[193.12554932 -181.81579590]
[194.24650574 -196.77384949]
[195.36744690 -211.73191833]
[196.48840332 -226.68997192]
[197.60935974 -241.64802551]
[190.92497253 -255.98782349]
[199.59175110 -268.10128784]
[200.71270752 -283.05935669]
[201.83364868 -298.01739502]
[202.95460510 -312.97546387]
[189.03219604 -318.92904663]
[177.79895020 -329.08251953]
[170.47335815 -342.33447266]
[167.85003662 -357.24746704]
[170.21356201 -372.20379639]
[177.30754089 -385.58117676]
[188.36248779 -395.92849731]
[202.17924500 -402.12335205]
[217.25904846 -403.49377441]
[231.96617126 -399.89114380]
[244.70530701 -391.70617676]
[254.09458923 -379.82678223]
[259.11553955 -365.54153442]
[259.22354126 -350.39996338]
[254.40686035 -336.04452515]
[245.18798828 -324.03240967]
[232.56690979 -315.66659546]
[217.91265869 -311.85452271]
[216.79171753 -296.89645386]
[215.67076111 -281.93838501]
[214.54980469 -266.98034668]
[221.31436157 -253.71044922]
[212.56741333 -240.52706909]
[211.44645691 -225.56901550]
[210.32550049 -210.61096191]
[209.20455933 -195.65290833]
[208.08360291 -180.69483948]
[206.96264648 -165.73678589]
[205.84170532 -150.77873230]
[204.72074890 -135.82067871]
[203.59979248 -120.86261749]
[210.61206055 -121.45035553]
[218.29275513 -119.39897919]
[230.36172485 -128.30628967]
[242.43069458 -137.21359253]
[254.49964905 -146.12089539]
[266.56863403 -155.02819824]
[278.63757324 -163.93550110]
[276.83822632 -179.18862915]
[282.92123413 -193.29154968]
[295.25030518 -202.45066833]
[310.50900269 -204.20219421]
[324.59280396 -198.07501221]
[333.71322632 -185.71728516]
[335.41693115 -170.45317078]
[329.24563599 -156.38865662]
[316.85937500 -147.30702209]
[301.58999634 -145.65116882]
[287.54489136 -151.86653137]
[275.47592163 -142.95922852]
[263.40695190 -134.05192566]
[251.33799744 -125.14462280]
[239.26902771 -116.23731995]
[227.20005798 -107.33001709]
[232.59303284 -93.33302307]
[247.51849365 -94.82653809]
[262.44393921 -96.32005310]
[277.36941528 -97.81357574]
[292.29486084 -99.30709076]
[297.96377563 -113.52405548]
[309.59783936 -123.46926880]
[324.52362061 -126.85739899]
[339.31130981 -122.90986633]
[350.56277466 -112.53379822]
[355.69256592 -98.11353302]
[353.52182007 -82.96273804]
[344.54940796 -70.56296539]
[330.83712769 -63.76358032]
[315.53591919 -64.12704468]
[302.16192627 -71.56982422]
[293.78839111 -84.38162994]
[278.86294556 -82.88811493]
[263.93746948 -81.39459229]
[249.01200867 -79.90107727]
[234.08654785 -78.40756226]
[221.19067383 -70.74620056]
[212.74087524 -58.35261917]
[204.29107666 -45.95903778]
[195.84126282 -33.56545639]
[199.66612244 -17.17614365]
[190.25798035 -2.81569648]
[173.03976440 0.34558696]
[164.74511719 12.84354305]
[156.45046997 25.34149933]
[148.15583801 37.83945465]
[139.86119080 50.33741379]
[131.56654358 62.83536911]
[134.35522461 77.57386780]
[146.64250183 86.17751312]
[158.92977905 94.78115845]
[174.44848633 91.79029083]
[187.48973083 100.71788025]
[190.31634521 116.26734161]
[181.25138855 129.21345520]
[165.67289734 131.87551880]
[152.82334900 122.67419434]
[150.32614136 107.06844330]
[138.03886414 98.46479034]
[125.75157928 89.86114502]
[126.04051208 112.25264740]
[109.29048920 128.40164185]
[112.44573975 143.06604004]
[115.60098267 157.73043823]
[118.75623322 172.39482117]
[121.91148376 187.05921936]
[134.58071899 200.43910217]
[128.51979065 216.92018127]
[131.85760498 231.54409790]
[135.19541931 246.16801453]
[138.53323364 260.79193115]
[143.48141479 268.43783569]
[141.82029724 275.61895752]
[144.97555542 290.28332520]
[160.04110718 291.38134766]
[174.18658447 296.68063354]
[186.26524353 305.75158691]
[195.29795837 317.85888672]
[200.55245972 332.02105713]
[201.60279846 347.08999634]
[198.36383057 361.84417725]
[191.09812927 375.08752441]
[180.39468384 385.74645996]
[167.12117004 392.95690918]
[152.35362244 396.13436890]
[137.28916931 395.02120972]
[123.14903259 389.70773315]
[111.07947540 380.62463379]
[102.05893707 368.50827026]
[96.81866455 354.34082031]
[95.78345490 339.27081299]
[99.03724670 324.51989746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 233]
[3 232]
[4 230]
[5 229]
[6 228]
[7 227]
[10 225]
[11 224]
[12 223]
[13 222]
[14 221]
[15 67]
[16 66]
[17 65]
[18 64]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[25 53]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[34 43]
[35 42]
[36 41]
[69 91]
[70 90]
[71 89]
[72 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[92 207]
[93 206]
[94 205]
[95 204]
[96 203]
[97 202]
[101 199]
[102 198]
[103 197]
[104 196]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[115 143]
[117 141]
[118 140]
[119 139]
[120 138]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[208 219]
[209 218]
[210 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
