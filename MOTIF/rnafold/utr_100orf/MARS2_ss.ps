%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUUUCCGGCCGGAAGCUGCGGCGCGACCCGGCUGCGCAUGCGCCUCUCACACGUGCUGUCAGAACGCCGCCUCCUCCGCUUGCGGCCGGUCUGCACCAUGCUGCGAACGUCCGUCCUCCGCCUGCUAGGACGCACGGGGGCUAGUAGGCUGUCUCUCCUGGAGGACUUCGGCCCACGCUACUACAGUUCGGGCUCCC\
) } def
/len { sequence length } bind def

/coor [
[78.65574646 134.45988464]
[72.10012054 128.79432678]
[66.96511078 121.93301392]
[63.45625687 114.21789551]
[61.69937134 106.02304077]
[46.71059418 105.44284058]
[37.07769394 117.46421814]
[22.38504791 121.46164703]
[8.32219982 116.10437775]
[0.20763457 103.64276886]
[-14.78114033 103.06256866]
[-29.76991463 102.48236847]
[-44.75868988 101.90216827]
[-59.74746323 101.32196808]
[-74.73623657 100.74177551]
[-89.72501373 100.16157532]
[-103.81414032 107.35929108]
[-116.23260498 99.13549805]
[-131.22137451 98.55529785]
[-146.21015930 97.97509766]
[-161.19892883 97.39489746]
[-181.16506958 110.43973541]
[-200.42025757 97.63306427]
[-215.39825439 98.44515228]
[-230.37625122 99.25723267]
[-245.35426331 100.06931305]
[-260.33224487 100.88140106]
[-275.31027222 101.69348145]
[-280.03509521 113.72004700]
[-288.92687988 123.03098297]
[-300.63787842 128.26626587]
[-313.41238403 128.67976379]
[-325.34979248 124.24531555]
[-334.68750000 115.65544891]
[-340.06097412 104.21340179]
[-355.05694580 104.56157684]
[-370.05291748 104.90975189]
[-383.66976929 112.96529388]
[-396.57321167 105.52549744]
[-411.56915283 105.87367249]
[-426.56512451 106.22184753]
[-441.56106567 106.57002258]
[-455.17794800 114.62556458]
[-468.08139038 107.18576813]
[-483.07733154 107.53394318]
[-491.02655029 120.75564575]
[-504.87213135 127.56027985]
[-520.19604492 125.77651215]
[-532.10845947 115.97353363]
[-536.80810547 101.27943420]
[-532.79547119 86.38305664]
[-521.35089111 76.03778076]
[-506.12628174 73.54473877]
[-491.97979736 79.69945526]
[-483.42550659 92.53798676]
[-468.42956543 92.18981171]
[-455.88531494 84.15917206]
[-441.90924072 91.57406616]
[-426.91329956 91.22589111]
[-411.91732788 90.87771606]
[-396.92138672 90.52954102]
[-384.37713623 82.49890137]
[-370.40109253 89.91379547]
[-355.40512085 89.56562042]
[-340.40914917 89.21744537]
[-332.70730591 73.82463837]
[-318.19772339 64.40117645]
[-300.82525635 63.61657715]
[-285.36782837 71.77684784]
[-276.12234497 86.71548462]
[-261.14434814 85.90339661]
[-246.16633606 85.09131622]
[-231.18833923 84.27922821]
[-216.21034241 83.46714783]
[-201.23233032 82.65506744]
[-198.40814209 76.79495239]
[-193.87335205 72.05930328]
[-188.05021667 68.93514252]
[-181.49534607 67.75731659]
[-174.84666443 68.67284393]
[-168.76129150 71.62345886]
[-163.85057068 76.34817505]
[-160.61872864 82.40612030]
[-145.62995911 82.98632050]
[-130.64118958 83.56652069]
[-115.65240479 84.14672089]
[-102.63538361 76.90750122]
[-89.14481354 85.17279816]
[-74.15604401 85.75299835]
[-59.16726685 86.33319855]
[-44.17848969 86.91339874]
[-29.18971634 87.49359131]
[-14.20094109 88.07379150]
[0.78783327 88.65399170]
[9.84142494 76.85694122]
[24.27631950 72.60278320]
[38.61599350 77.72402191]
[47.29079437 90.45407104]
[62.27956772 91.03427124]
[65.90328217 80.63489532]
[72.36425018 71.56364441]
[81.20291138 64.58551025]
[91.75623322 60.31245422]
[103.20730591 59.15018463]
[114.64852142 61.26065445]
[125.15346527 66.54361725]
[133.85197449 74.63922119]
[140.00207520 84.95182037]
[143.05294800 96.69347382]
[157.30438232 92.01408386]
[171.55581665 87.33469391]
[185.80725098 82.65531158]
[173.82545471 73.63109589]
[173.25143433 58.64208603]
[184.50798035 48.72794342]
[199.30444336 51.19061661]
[206.74295044 64.21630096]
[201.34468079 78.21158600]
[215.91519165 74.64786530]
[230.48571777 71.08413696]
[245.05622864 67.52041626]
[259.62673950 63.95669556]
[274.19726562 60.39297104]
[288.76776123 56.82925034]
[303.01919556 52.14986038]
[316.86627197 46.38281250]
[330.71331787 40.61576462]
[344.56039429 34.84871292]
[358.40744019 29.08166504]
[372.25451660 23.31461716]
[386.10156250 17.54756737]
[399.94863892 11.78051853]
[413.79571533 6.01346922]
[414.57058716 -9.22996616]
[421.89013672 -22.62350273]
[434.30105591 -31.50784492]
[449.33917236 -34.11899948]
[464.01861572 -29.93852043]
[475.42480469 -19.79644585]
[481.29302979 -5.70648909]
[480.45812988 9.53377628]
[473.08587646 22.89838600]
[460.64004517 31.73378563]
[445.59179688 34.28570175]
[430.92889404 30.04744720]
[419.56274414 19.86053085]
[405.71569824 25.62758064]
[391.86862183 31.39463043]
[378.02157593 37.16167831]
[364.17449951 42.92873001]
[350.32742310 48.69577789]
[336.48037720 54.46282578]
[322.63330078 60.22987366]
[308.78625488 65.99692535]
[323.35421753 69.57098389]
[334.25430298 79.87574768]
[338.64007568 94.22026062]
[335.36624146 108.85863495]
[325.28771973 119.96825409]
[311.03640747 124.64797211]
[296.33383179 121.67575073]
[285.01937866 111.82775116]
[280.04766846 97.67563629]
[282.71704102 82.91506195]
[292.33148193 71.39976501]
[277.76098633 74.96348572]
[263.19046021 78.52720642]
[248.61994934 82.09093475]
[234.04943848 85.65465546]
[219.47891235 89.21837616]
[204.90840149 92.78209686]
[190.48663330 96.90673828]
[176.23521423 101.58612823]
[161.98377991 106.26551819]
[147.73234558 110.94490051]
[142.18026733 124.87955475]
[149.30873108 138.07746887]
[156.43719482 151.27539062]
[163.56565857 164.47331238]
[178.44215393 169.09147644]
[185.48342896 182.57759094]
[180.98901367 196.73159790]
[188.11747742 209.92951965]
[195.24594116 223.12744141]
[210.14505005 229.07690430]
[214.64488220 244.47596741]
[205.29356384 257.51177979]
[189.26460266 258.18435669]
[178.85408020 245.97779846]
[182.04803467 230.25590515]
[174.91957092 217.05798340]
[167.79110718 203.86006165]
[153.49014282 199.85781860]
[146.07286072 186.57479858]
[150.36773682 171.60177612]
[143.23927307 158.40385437]
[136.11080933 145.20593262]
[128.98234558 132.00801086]
[121.26448822 137.07337952]
[112.73007965 140.33695984]
[103.78857422 141.68540955]
[94.85990143 141.09617615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 99]
[6 98]
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[18 86]
[19 85]
[20 84]
[21 83]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[35 65]
[36 64]
[37 63]
[39 61]
[40 60]
[41 59]
[42 58]
[44 56]
[45 55]
[109 175]
[110 174]
[111 173]
[112 172]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
[125 154]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
[176 198]
[177 197]
[178 196]
[179 195]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
