%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUGUGCACCCGGCCACAGAGAAGUGGGUGACUUAGGAGUAUCCUCUCCGCUUCUCACCCUUACUUUCGUCUGUGCACAACUCGCUCAAAAUGGGCAACUCACUAAGCGUAUUUUGUUCCUGGUUCCGCCGCAGGUCCUGGCCAUGCCAUCGGCCACCUGCUCGUCUUGUCCGUGAGGCCUUCCCAGCUG\
) } def
/len { sequence length } bind def

/coor [
[-237.47755432 183.83038330]
[-243.87921143 177.63768005]
[-258.63690186 180.32293701]
[-273.39459229 183.00817871]
[-288.12982178 185.81408691]
[-302.84158325 188.74043274]
[-317.55337524 191.66679382]
[-332.26513672 194.59313965]
[-346.97692871 197.51950073]
[-361.68872070 200.44586182]
[-369.49841309 210.72413635]
[-381.82379150 212.85171509]
[-391.95550537 206.22454834]
[-406.71319580 208.90980530]
[-421.47085571 211.59506226]
[-427.14566040 220.89811707]
[-436.80871582 225.44052124]
[-447.15783691 223.93730164]
[-454.80090332 217.12567139]
[-469.63854980 219.32662964]
[-484.47619629 221.52758789]
[-499.31387329 223.72854614]
[-504.77001953 236.39631653]
[-515.68896484 244.64512634]
[-529.15087891 246.40332031]
[-541.62152100 241.31729126]
[-549.88024902 230.81619263]
[-564.75189209 232.77407837]
[-579.62359619 234.73197937]
[-594.49523926 236.68986511]
[-609.36694336 238.64776611]
[-624.23858643 240.60565186]
[-630.40307617 255.93989563]
[-643.38226318 266.01901245]
[-659.57934570 268.16964722]
[-674.56585693 261.89920044]
[-684.29223633 249.00459290]
[-699.12988281 251.20555115]
[-713.96752930 253.40650940]
[-728.80517578 255.60746765]
[-738.01727295 268.44931030]
[-753.62512207 270.93341064]
[-766.36883545 261.58605957]
[-768.68780518 245.95281982]
[-759.20623779 233.30863953]
[-743.54937744 231.15509033]
[-731.00610352 240.76982117]
[-716.16845703 238.56886292]
[-701.33081055 236.36790466]
[-686.49316406 234.16694641]
[-682.31805420 221.15464783]
[-672.89599609 211.16510010]
[-660.02636719 206.18913269]
[-646.20288086 207.25210571]
[-634.13055420 214.20324707]
[-626.19647217 225.73397827]
[-611.32482910 223.77609253]
[-596.45312500 221.81819153]
[-581.58148193 219.86030579]
[-566.70977783 217.90240479]
[-551.83813477 215.94451904]
[-544.47772217 201.27960205]
[-529.68096924 193.81156921]
[-513.18402100 196.65707397]
[-501.51480103 208.89089966]
[-486.67715454 206.68994141]
[-471.83950806 204.48898315]
[-457.00186157 202.28802490]
[-442.79446411 189.18548584]
[-424.15612793 196.83737183]
[-409.39843750 194.15211487]
[-394.64074707 191.46685791]
[-381.90057373 179.40805054]
[-364.61505127 185.73406982]
[-349.90328979 182.80772400]
[-335.19149780 179.88136292]
[-320.47973633 176.95501709]
[-305.76794434 174.02865601]
[-291.05615234 171.10231018]
[-285.09960938 166.70678711]
[-276.07983398 168.25048828]
[-261.32214355 165.56524658]
[-246.56445312 162.87998962]
[-232.07559204 148.19374084]
[-212.00447083 155.67166138]
[-197.39631653 152.26550293]
[-182.78816223 148.85935974]
[-180.43771362 136.42807007]
[-173.53015137 125.77291107]
[-163.06425476 118.49956512]
[-150.57807922 115.72004700]
[-137.92297363 117.88273621]
[-126.98910522 124.70054626]
[-119.42315674 135.18841553]
[-104.71138000 132.26205444]
[-89.99960327 129.33570862]
[-75.28781891 126.40934753]
[-71.92934418 122.99326324]
[-66.38388824 121.66074371]
[-60.04721069 123.63623047]
[-45.24755859 121.19279480]
[-30.44790840 118.74935913]
[-15.64825916 116.30593109]
[-0.84860933 113.86249542]
[13.88661861 111.05660248]
[28.54854774 107.88993073]
[43.21047592 104.72325134]
[57.87240601 101.55657959]
[72.50794220 98.27006531]
[87.11609650 94.86392212]
[72.28838348 92.59699249]
[59.77922821 84.31924438]
[51.89619827 71.55767059]
[50.09347534 56.66638947]
[54.70360184 42.39240265]
[64.87615204 31.36882782]
[78.73459625 25.62918282]
[93.72247314 26.23226166]
[107.07495880 33.06681061]
[116.32892609 44.87206268]
[119.77730560 59.47030640]
[116.78396606 74.16860199]
[107.90338135 86.25354004]
[120.64141846 78.33252716]
[133.37945557 70.41150665]
[143.63719177 56.91280365]
[159.44799805 63.03286362]
[157.94396973 79.91996765]
[141.30046082 83.14953613]
[128.56243896 91.07055664]
[115.82440186 98.99157715]
[119.23054504 113.59973145]
[134.15830994 115.06998444]
[149.08609009 116.54024506]
[164.01385498 118.01049805]
[178.94163513 119.48075867]
[193.86940002 120.95101166]
[198.65184021 118.78033447]
[203.31970215 118.68196869]
[207.09938049 120.26244354]
[209.48728943 122.87729645]
[224.32493591 125.07825470]
[239.16258240 127.27921295]
[254.00022888 129.48016357]
[264.76766968 118.30688477]
[280.05203247 115.62959290]
[293.97616577 122.47776794]
[301.18600464 136.21815491]
[298.90917969 151.56727600]
[288.02117920 162.62309265]
[272.70867920 165.13442993]
[258.85961914 158.13560486]
[251.79928589 144.31781006]
[236.96162415 142.11686707]
[222.12397766 139.91590881]
[207.28633118 137.71495056]
[192.39913940 135.87878418]
[177.47137451 134.40852356]
[162.54359436 132.93827820]
[147.61582947 131.46801758]
[132.68806458 129.99775696]
[117.76028442 128.52749634]
[97.31665802 123.34822083]
[90.52223969 109.47207642]
[75.91408539 112.87821960]
[68.25251007 117.88215637]
[61.03908157 116.21851349]
[46.37715149 119.38518524]
[31.71522141 122.55185699]
[17.05329132 125.71852875]
[13.16411972 129.24810791]
[8.75011921 130.76968384]
[4.66815519 130.42118835]
[1.59482276 128.66215515]
[-13.20482731 131.10557556]
[-28.00447655 133.54901123]
[-42.80412674 135.99244690]
[-57.60377884 138.43588257]
[-72.36146545 141.12112427]
[-87.07324982 144.04748535]
[-101.78502655 146.97384644]
[-116.49680328 149.90019226]
[-121.74450684 166.65769958]
[-134.68406677 178.39671326]
[-151.69767761 181.95663452]
[-168.08958435 176.44689941]
[-179.38201904 163.46751404]
[-193.99017334 166.87365723]
[-208.59832764 170.27981567]
[-212.47962952 178.90438843]
[-219.79199219 184.68287659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 79]
[6 78]
[7 77]
[8 76]
[9 75]
[10 74]
[13 72]
[14 71]
[15 70]
[19 68]
[20 67]
[21 66]
[22 65]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[37 50]
[38 49]
[39 48]
[40 47]
[85 189]
[86 188]
[87 187]
[94 182]
[95 181]
[96 180]
[97 179]
[100 178]
[101 177]
[102 176]
[103 175]
[104 174]
[105 170]
[106 169]
[107 168]
[108 167]
[109 165]
[110 164]
[123 131]
[124 130]
[125 129]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[141 156]
[142 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
