%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCUUCCGCAAUCGGAGCCCUCACAGAGGCCAAACUGAUAUAAAUCUGCUUAGGAGGCCUGAUUCACAGACGCUACAGGAUGGAGCGGGGCGCAGGAGCCAAGCUGCUGCCGCUGCUGCUGCUUCUGCGGGCGACUGGUUUCACAUGUGCACAGACAGAUGGCCGGAACGGCUACACGG\
) } def
/len { sequence length } bind def

/coor [
[225.98857117 530.23083496]
[237.80177307 520.16961670]
[236.51580811 505.22482300]
[235.22985840 490.28005981]
[233.94389343 475.33529663]
[225.14396667 463.31820679]
[231.66969299 448.90551758]
[230.38372803 433.96072388]
[229.09777832 419.01596069]
[227.81181335 404.07116699]
[226.39762878 389.13800049]
[224.85531616 374.21749878]
[220.66302490 359.81524658]
[213.95661926 346.39794922]
[207.25021362 332.98062134]
[200.54380798 319.56332397]
[193.83740234 306.14602661]
[187.13099670 292.72872925]
[171.99079895 283.87603760]
[173.21745300 265.51431274]
[166.28170776 252.21409607]
[159.34596252 238.91389465]
[152.41021729 225.61369324]
[142.39765930 223.42657471]
[135.09828186 215.92260742]
[133.10643005 205.42141724]
[137.32061768 195.36000061]
[130.84552002 181.82954407]
[124.37042999 168.29908752]
[117.89533234 154.76863098]
[111.42024231 141.23817444]
[104.94515228 127.70772552]
[98.47005463 114.17727661]
[88.00089264 103.43498993]
[74.64164734 96.61366272]
[59.77194595 101.25368500]
[46.32094193 94.14558411]
[41.98902893 79.94100189]
[28.62977982 73.11967468]
[15.27053165 66.29834747]
[6.17949486 65.17719269]
[1.74200296 59.24354172]
[-11.49817944 52.19388962]
[-23.42036057 59.13943863]
[-37.10910797 59.27945709]
[-48.98146057 52.68441772]
[-55.98282623 41.17366028]
[-56.37268448 27.81486511]
[-69.48989868 20.53896713]
[-82.60711670 13.26307011]
[-95.72432709 5.98717213]
[-117.06906891 7.69770908]
[-127.01091003 -10.37379551]
[-140.48529053 -16.96478844]
[-153.95967102 -23.55578041]
[-167.43403625 -30.14677429]
[-180.90841675 -36.73776627]
[-197.79333496 -38.26609802]
[-200.99894714 -54.91423035]
[-185.88882446 -62.60322571]
[-174.31742859 -50.21214294]
[-160.84304810 -43.62115097]
[-147.36866760 -37.03015900]
[-133.89430237 -30.43916512]
[-120.41992188 -23.84817123]
[-112.56351471 -28.07664299]
[-103.50452423 -28.20330811]
[-95.28662872 -24.07246971]
[-89.82236481 -16.50321770]
[-88.44843292 -7.13004255]
[-75.33121490 0.14585535]
[-62.21400070 7.42175293]
[-49.09678650 14.69765091]
[-34.45935822 7.29162121]
[-18.12672615 10.08873844]
[-6.55830526 22.18339539]
[-4.44852781 38.95370865]
[8.79165363 46.00335693]
[22.09185791 52.93910217]
[35.45110703 59.76042938]
[48.81035233 66.58175659]
[62.85663223 61.76121521]
[76.50198364 68.48870087]
[81.46297455 83.25441742]
[94.82221985 90.07574463]
[96.43370819 87.88575745]
[98.71195221 85.99633026]
[105.41836548 72.57901764]
[112.12477112 59.16171646]
[118.83117676 45.74440765]
[125.53758240 32.32710266]
[132.12857056 18.85272598]
[138.60366821 5.32227230]
[145.07876587 -8.20818138]
[151.55384827 -21.73863411]
[157.91256714 -35.32416916]
[164.15443420 -48.96378326]
[170.39631653 -62.60339355]
[169.10331726 -78.37168121]
[181.43504333 -86.72499847]
[187.67691040 -100.36461639]
[193.91877747 -114.00422668]
[195.01185608 -130.92289734]
[211.57192993 -134.55610657]
[219.64743042 -119.64897156]
[207.55839539 -107.76235962]
[201.31651306 -94.12274170]
[195.07464600 -80.48313141]
[196.81410217 -65.69044495]
[184.03591919 -56.36152649]
[177.79405212 -42.72191238]
[171.55218506 -29.08229828]
[171.62796021 -21.67326164]
[165.08430481 -15.26354218]
[158.60922241 -1.73308825]
[152.13412476 11.79736519]
[145.65902710 25.32781792]
[145.60762024 32.73706436]
[138.95489502 39.03350830]
[132.24848938 52.45081711]
[125.54207611 65.86811829]
[118.83567047 79.28543091]
[112.12926483 92.70273590]
[112.00051117 107.70217896]
[118.47560120 121.23263550]
[124.95069885 134.76309204]
[131.42578125 148.29354858]
[137.90087891 161.82398987]
[144.37597656 175.35444641]
[150.85105896 188.88490295]
[167.97561646 199.48944092]
[165.71043396 218.67794800]
[172.64617920 231.97814941]
[179.58192444 245.27835083]
[186.51766968 258.57855225]
[198.57894897 263.19464111]
[204.07672119 274.43548584]
[200.54829407 286.02230835]
[207.25469971 299.43960571]
[213.96110535 312.85693359]
[220.66752625 326.27423096]
[227.37393188 339.69152832]
[234.08033752 353.10882568]
[239.32620239 349.95236206]
[246.08851624 348.56188965]
[253.75865173 349.47549438]
[261.56213379 353.02481079]
[273.71249390 361.82073975]
[285.86285400 370.61666870]
[301.57846069 372.44161987]
[307.35076904 386.17224121]
[319.50112915 394.96817017]
[335.06497192 392.22189331]
[347.96411133 401.35357666]
[350.54571533 416.94558716]
[341.27813721 429.74746704]
[325.65969849 432.16406250]
[312.95654297 422.76165771]
[310.70520020 407.11856079]
[298.55484009 398.32263184]
[283.70831299 397.12680054]
[277.06692505 382.76705933]
[264.91656494 373.97109985]
[252.76618958 365.17517090]
[239.77580261 372.67517090]
[241.31813049 387.59567261]
[245.32209778 395.83413696]
[242.75659180 402.78521729]
[244.04254150 417.73001099]
[245.32850647 432.67477417]
[246.61445618 447.61953735]
[255.50637817 460.70559692]
[248.88867188 474.04931641]
[250.17463684 488.99411011]
[251.46058655 503.93887329]
[252.74655151 518.88366699]
[266.10485840 526.77893066]
[272.24032593 541.03149414]
[268.79373169 556.16094971]
[257.09036255 566.34973145]
[241.63041687 567.67999268]
[228.35855103 559.64031982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[7 171]
[8 170]
[9 169]
[10 168]
[11 166]
[12 165]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[20 135]
[21 134]
[22 133]
[23 132]
[27 130]
[28 129]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[34 85]
[35 84]
[38 81]
[39 80]
[40 79]
[42 78]
[43 77]
[48 73]
[49 72]
[50 71]
[51 70]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 117]
[93 116]
[94 115]
[95 114]
[96 112]
[97 111]
[98 110]
[100 108]
[101 107]
[102 106]
[147 164]
[148 163]
[149 162]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
