%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4A15)
} def

/sequence { (\
AUGGAGCUUCUGACAAAUAAUCUCAAAUUUAUCACUGACCCUUUUGUUUGUAGGCUCCGACACCUGAGUCCAACACCUUCAGAAGAACACAUGAAAAAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.168685145 ubox
1 99 0.027206278 ubox
2 25 0.003879070 ubox
2 59 0.515488722 ubox
2 62 0.012047743 ubox
2 72 0.005033535 ubox
2 75 0.004101419 ubox
2 89 0.043189271 ubox
2 91 0.180138488 ubox
2 93 0.004268512 ubox
2 98 0.027854169 ubox
2 100 0.006192415 ubox
3 11 0.005462236 ubox
3 14 0.003215078 ubox
3 23 0.003955828 ubox
3 24 0.004144382 ubox
3 40 0.003534921 ubox
3 58 0.978774716 ubox
3 61 0.006837429 ubox
3 71 0.003511739 ubox
3 88 0.049189854 ubox
3 90 0.183105367 ubox
4 10 0.005783496 ubox
4 22 0.005651518 ubox
4 24 0.008936319 ubox
4 39 0.003541853 ubox
4 57 0.979621034 ubox
5 9 0.005034003 ubox
5 21 0.005602539 ubox
5 23 0.008999918 ubox
5 56 0.979486619 ubox
6 22 0.008946419 ubox
6 55 0.979608622 ubox
7 53 0.040864947 ubox
7 54 0.977472568 ubox
7 85 0.199579735 ubox
8 20 0.005735225 ubox
8 52 0.057066439 ubox
8 53 0.927138802 ubox
8 54 0.010243199 ubox
8 84 0.199746946 ubox
9 19 0.005369785 ubox
9 38 0.004544794 ubox
9 52 0.849335058 ubox
9 53 0.033783054 ubox
9 54 0.038419184 ubox
9 83 0.199841032 ubox
10 37 0.004813927 ubox
10 53 0.270888037 ubox
10 54 0.016349583 ubox
10 82 0.199912732 ubox
11 25 0.005811009 ubox
11 34 0.011764473 ubox
11 50 0.111966536 ubox
11 52 0.292302519 ubox
11 53 0.033387358 ubox
11 81 0.199817161 ubox
12 24 0.006321768 ubox
12 33 0.016021662 ubox
12 48 0.490787604 ubox
12 49 0.112442985 ubox
12 51 0.218007206 ubox
12 80 0.199417006 ubox
13 23 0.005976102 ubox
13 32 0.015885015 ubox
13 47 0.511684737 ubox
13 48 0.080265933 ubox
13 51 0.808495188 ubox
13 78 0.005339171 ubox
13 79 0.116028201 ubox
14 37 0.014018156 ubox
14 46 0.520118038 ubox
14 50 0.850904543 ubox
15 30 0.021941126 ubox
15 36 0.013906958 ubox
15 44 0.016393514 ubox
15 45 0.519125845 ubox
15 49 0.850655904 ubox
16 29 0.024060024 ubox
16 43 0.022852202 ubox
16 44 0.515553209 ubox
16 45 0.017264619 ubox
16 47 0.003325543 ubox
16 48 0.850121215 ubox
16 78 0.003447310 ubox
17 28 0.024520061 ubox
17 29 0.003352506 ubox
17 32 0.061156170 ubox
17 42 0.025879001 ubox
17 43 0.498147692 ubox
17 44 0.022269076 ubox
17 47 0.850594977 ubox
17 51 0.008856367 ubox
18 27 0.024544030 ubox
18 31 0.074704401 ubox
18 37 0.006049788 ubox
18 46 0.849597799 ubox
18 50 0.009045746 ubox
18 52 0.003759868 ubox
19 29 0.010191635 ubox
19 30 0.075295137 ubox
19 36 0.005821514 ubox
19 43 0.034355790 ubox
19 44 0.059112291 ubox
19 45 0.843430741 ubox
19 49 0.009113416 ubox
19 51 0.003990197 ubox
20 28 0.013332487 ubox
20 29 0.075188974 ubox
20 32 0.004810368 ubox
20 42 0.046475491 ubox
20 43 0.080841404 ubox
20 44 0.818844453 ubox
20 47 0.003529257 ubox
20 48 0.008670030 ubox
21 27 0.014382000 ubox
21 31 0.005637769 ubox
21 38 0.313568803 ubox
22 37 0.317337115 ubox
22 53 0.006195577 ubox
22 68 0.010298164 ubox
23 38 0.714125517 ubox
23 52 0.006707419 ubox
23 67 0.010312654 ubox
24 37 0.728797674 ubox
24 46 0.039206965 ubox
24 50 0.012751712 ubox
24 66 0.010309237 ubox
25 36 0.688397559 ubox
25 43 0.033299174 ubox
25 44 0.025074300 ubox
25 45 0.041072512 ubox
25 49 0.012947424 ubox
25 65 0.009603005 ubox
26 42 0.031481103 ubox
26 43 0.034994878 ubox
26 44 0.042907393 ubox
26 45 0.004329013 ubox
26 48 0.013053617 ubox
27 42 0.032947123 ubox
27 43 0.043672603 ubox
27 44 0.006038496 ubox
27 47 0.013021023 ubox
27 99 0.013995130 ubox
28 38 0.087875919 ubox
28 46 0.012835800 ubox
28 98 0.014577628 ubox
29 37 0.090297032 ubox
29 38 0.110388353 ubox
29 97 0.014799038 ubox
30 37 0.114966736 ubox
30 96 0.014056901 ubox
31 36 0.103048476 ubox
32 38 0.044672210 ubox
32 60 0.008697674 ubox
32 94 0.015807211 ubox
33 37 0.045571944 ubox
33 46 0.004835502 ubox
33 50 0.004657787 ubox
33 53 0.003284629 ubox
33 59 0.008893141 ubox
33 93 0.016101516 ubox
34 45 0.004563080 ubox
34 47 0.013771407 ubox
34 49 0.004484862 ubox
34 51 0.029659255 ubox
34 92 0.015732173 ubox
35 46 0.014786775 ubox
35 50 0.031585076 ubox
36 89 0.005838776 ubox
36 91 0.011034281 ubox
37 43 0.013685306 ubox
37 44 0.011594046 ubox
37 45 0.005490514 ubox
37 48 0.037750781 ubox
37 57 0.011463186 ubox
37 88 0.006030741 ubox
37 90 0.011135235 ubox
38 42 0.011940509 ubox
38 43 0.012196953 ubox
38 44 0.005931979 ubox
38 47 0.041770048 ubox
38 56 0.011321325 ubox
39 46 0.041905797 ubox
40 54 0.011897772 ubox
41 53 0.011963863 ubox
41 85 0.018133184 ubox
42 52 0.011758136 ubox
42 84 0.018195801 ubox
43 83 0.018205831 ubox
44 82 0.018199504 ubox
45 75 0.016381853 ubox
45 81 0.018200371 ubox
46 74 0.018556847 ubox
46 76 0.007034099 ubox
46 80 0.018193953 ubox
47 73 0.016302421 ubox
47 75 0.006340836 ubox
48 72 0.013129893 ubox
48 73 0.015493248 ubox
49 72 0.019498913 ubox
49 75 0.064119273 ubox
50 71 0.021450437 ubox
50 74 0.073103016 ubox
50 76 0.006127177 ubox
51 66 0.013444255 ubox
51 73 0.072115291 ubox
51 75 0.006279702 ubox
52 65 0.018455754 ubox
52 78 0.037966011 ubox
53 64 0.019104412 ubox
53 70 0.156399095 ubox
53 71 0.112946027 ubox
53 77 0.041038500 ubox
54 63 0.019091086 ubox
54 69 0.158827380 ubox
54 70 0.112343292 ubox
54 76 0.040940926 ubox
55 68 0.194757847 ubox
56 67 0.194727489 ubox
57 66 0.193468314 ubox
58 66 0.021259647 ubox
59 65 0.026161105 ubox
59 70 0.511712577 ubox
59 80 0.008502861 ubox
60 69 0.513557653 ubox
60 79 0.008101527 ubox
61 68 0.513215040 ubox
61 93 0.024811042 ubox
62 69 0.023576829 ubox
62 92 0.024096875 ubox
63 68 0.025322812 ubox
64 82 0.814350844 ubox
64 85 0.021108190 ubox
65 72 0.044405784 ubox
65 75 0.018651972 ubox
65 81 0.816798504 ubox
65 84 0.019678781 ubox
65 89 0.010973313 ubox
65 91 0.010136228 ubox
66 71 0.047873609 ubox
66 74 0.020906686 ubox
66 79 0.061508686 ubox
66 80 0.815716904 ubox
66 88 0.011339676 ubox
66 90 0.011099000 ubox
67 78 0.317590206 ubox
67 79 0.744683256 ubox
68 74 0.097857459 ubox
68 76 0.227917671 ubox
68 77 0.441785751 ubox
68 78 0.542641521 ubox
68 88 0.012882179 ubox
68 90 0.006019351 ubox
68 99 0.003363494 ubox
69 73 0.089847212 ubox
69 75 0.228426321 ubox
69 83 0.009408273 ubox
69 86 0.009455970 ubox
69 87 0.010979478 ubox
69 89 0.005710780 ubox
69 94 0.010307776 ubox
69 98 0.003318398 ubox
70 82 0.009806076 ubox
70 85 0.011239594 ubox
70 93 0.010708243 ubox
71 93 0.075075627 ubox
72 79 0.015163628 ubox
72 92 0.072438889 ubox
73 78 0.017549396 ubox
74 93 0.045326027 ubox
75 92 0.043828128 ubox
77 85 0.093012592 ubox
78 84 0.092198382 ubox
78 85 0.009306900 ubox
78 86 0.014606898 ubox
78 87 0.164251021 ubox
78 94 0.009722075 ubox
78 95 0.386277207 ubox
78 96 0.025386418 ubox
78 97 0.010210117 ubox
78 98 0.006321581 ubox
79 83 0.076817858 ubox
79 84 0.009197542 ubox
79 85 0.014093454 ubox
79 86 0.189332343 ubox
79 93 0.004566416 ubox
79 94 0.429212880 ubox
79 95 0.019989827 ubox
79 96 0.005349856 ubox
79 97 0.003761409 ubox
80 85 0.191402659 ubox
80 93 0.434089738 ubox
81 92 0.425902008 ubox
91 99 0.090420685 ubox
92 98 0.095272375 ubox
92 100 0.015747024 ubox
93 99 0.016868829 ubox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
66 80 0.9500000 lbox
67 79 0.9500000 lbox
68 78 0.9500000 lbox
showpage
end
%%EOF
