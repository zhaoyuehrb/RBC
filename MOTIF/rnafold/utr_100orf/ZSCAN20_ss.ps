%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUCCCCGCACGAGCCCGGGAGCACUUCCGCCCUGUUGUGAAGUGGGUGUCUCGAGCCUUGGGGAGCAGUCCCUUUUCUAGGAGCCUCUUGAAGGACUCACCGUAGAUGCAGGAAGACAUUGGAUGAGGUCAGCAUAGCUGAAGUGAGGUGUCUGGGUUAGACAAUGGCUAUGGCCCUGGAAUUGCAAGCCCAGGCAUCUCCGCAGCCAGAGCCUGAAGAACUCCUGAUUGUGAAACUGGAAGAGGACUCUU\
GGGGAUCAGAAU\
) } def
/len { sequence length } bind def

/coor [
[-154.80508423 365.36318970]
[-160.29528809 363.27484131]
[-171.50500488 373.24191284]
[-173.92579651 379.33438110]
[-178.37962341 382.79400635]
[-183.09629822 383.30749512]
[-194.53657532 393.00903320]
[-205.97685242 402.71057129]
[-217.41712952 412.41213989]
[-228.85740662 422.11367798]
[-240.29768372 431.81521606]
[-238.50074768 442.27041626]
[-241.16728210 452.45504761]
[-247.75558472 460.56314087]
[-257.03479004 465.18551636]
[-267.31439209 465.55450439]
[-276.75210571 461.67059326]
[-288.52639771 470.96389771]
[-294.56524658 485.58728027]
[-309.34924316 487.39907837]
[-321.12353516 496.69238281]
[-332.89785767 505.98571777]
[-344.67214966 515.27899170]
[-356.44647217 524.57232666]
[-361.22216797 532.31738281]
[-368.41369629 533.90460205]
[-380.29614258 543.05926514]
[-392.17858887 552.21392822]
[-395.02154541 558.12115479]
[-399.70748901 561.25927734]
[-404.44857788 561.44000244]
[-416.54235840 570.31359863]
[-428.63613892 579.18713379]
[-440.72991943 588.06072998]
[-438.38439941 603.18548584]
[-443.34732056 617.66400146]
[-454.47827148 628.16925049]
[-469.21939087 632.28729248]
[-484.18328857 629.07171631]
[-495.93139648 619.26147461]
[-501.76406860 605.11090088]
[-500.34100342 589.87170410]
[-491.98919678 577.04571533]
[-478.62786865 569.58026123]
[-463.32730103 569.19085693]
[-449.60351562 575.96697998]
[-437.50973511 567.09338379]
[-425.41595459 558.21978760]
[-413.32217407 549.34619141]
[-401.33322144 540.33148193]
[-389.45080566 531.17681885]
[-377.56835938 522.02215576]
[-365.73977661 512.79803467]
[-353.96548462 503.50469971]
[-342.19116211 494.21139526]
[-330.41683960 484.91809082]
[-318.64254761 475.62478638]
[-313.44589233 461.66610718]
[-297.81973267 459.18957520]
[-286.04541016 449.89627075]
[-285.15301514 430.40686035]
[-269.94445801 417.70260620]
[-249.99922180 420.37493896]
[-238.55894470 410.67340088]
[-227.11866760 400.97186279]
[-215.67839050 391.27029419]
[-204.23811340 381.56875610]
[-192.79783630 371.86721802]
[-181.47207642 362.03222656]
[-170.26235962 352.06515503]
[-165.48298645 328.88772583]
[-141.54136658 324.25790405]
[-131.18632507 313.40554810]
[-120.83128357 302.55322266]
[-110.47624207 291.70089722]
[-100.12120056 280.84857178]
[-89.76615906 269.99621582]
[-104.62324524 267.93051147]
[-112.37483978 255.08868408]
[-107.28089905 240.98011780]
[-93.11347961 236.05221558]
[-80.36356354 243.95410156]
[-78.47235870 258.83404541]
[-67.49938965 248.60693359]
[-56.52642059 238.37980652]
[-45.55344772 228.15269470]
[-34.58047867 217.92556763]
[-23.66764069 207.63432312]
[-12.81530762 197.27928162]
[-1.96297467 186.92424011]
[8.88935852 176.56919861]
[19.74169159 166.21415710]
[30.59402466 155.85911560]
[30.68535995 141.00895691]
[41.54365921 130.35287476]
[57.11925125 130.54936218]
[67.97158813 120.19432831]
[62.21057129 102.36413574]
[65.70442200 83.95495605]
[77.59746552 69.47531128]
[71.29363251 55.86422348]
[64.98979187 42.25313950]
[58.68595123 28.64205551]
[52.30244446 15.06815338]
[45.83948898 1.53189874]
[41.59405136 -1.38557327]
[39.11771393 -5.24585581]
[38.47463989 -9.22623730]
[39.39666748 -12.59582806]
[33.41363907 -26.35095024]
[27.43061256 -40.10607147]
[21.44758606 -53.86119461]
[6.26933002 -57.08612823]
[-4.08952665 -68.63920593]
[-5.64579248 -84.07804871]
[2.19894791 -97.46608734]
[16.42823219 -103.65535736]
[31.57061005 -100.26596069]
[41.80352783 -88.60118866]
[43.19221878 -73.14637756]
[35.20270538 -59.84422302]
[41.18573380 -46.08909988]
[47.16876221 -32.33397675]
[53.15179062 -18.57885551]
[59.37574387 -4.93105745]
[65.83869934 8.60519791]
[71.53678131 13.27098656]
[72.29703522 22.33821678]
[78.60087585 35.94930267]
[84.90471649 49.56038666]
[91.20855713 63.17147064]
[94.03304291 62.60982132]
[96.89204407 62.26446152]
[98.64636993 47.36740494]
[100.40070343 32.47034836]
[102.15502930 17.57328987]
[103.90936279 2.67623258]
[99.75698853 -13.76134968]
[114.40269470 -22.30182266]
[126.66373444 -10.59271717]
[118.80641937 4.43056250]
[117.05208588 19.32761955]
[115.29776001 34.22467804]
[113.54342651 49.12173462]
[111.78910065 64.01879120]
[118.47492981 65.46355438]
[124.99855804 68.17200470]
[131.11846924 72.12793732]
[136.59458923 77.26872253]
[149.18740845 69.11881256]
[161.78021240 60.96889877]
[174.37303162 52.81898499]
[186.96583557 44.66907120]
[199.55865479 36.51915741]
[212.15145874 28.36924553]
[224.74427795 20.21933174]
[237.33708191 12.06941891]
[249.92990112 3.91950536]
[262.52270508 -4.23040771]
[275.11550903 -12.38032150]
[287.70834351 -20.53023338]
[300.30114746 -28.68014717]
[301.58132935 -42.06736755]
[310.20358276 -52.13327789]
[322.85870361 -55.35815811]
[334.88336182 -50.78437042]
[347.57083130 -58.78610992]
[360.25830078 -66.78784943]
[372.94580078 -74.78958893]
[385.39337158 -83.15965271]
[397.59033203 -91.89086151]
[409.78729248 -100.62207031]
[416.06619263 -115.77157593]
[432.35855103 -117.64007568]
[441.90417480 -104.30541992]
[434.88336182 -89.48515320]
[418.51849365 -88.42510986]
[406.32153320 -79.69390106]
[394.12457275 -70.96269226]
[408.33590698 -66.16294861]
[413.55709839 -52.10096741]
[405.92178345 -39.18964386]
[391.08398438 -36.98982620]
[380.03106689 -47.13047791]
[380.94754028 -62.10210800]
[368.26004028 -54.10036850]
[355.57257080 -46.09862900]
[342.88510132 -38.09688950]
[339.86154175 -21.53730011]
[325.50479126 -12.11662960]
[308.45104980 -16.08733559]
[295.85824585 -7.93742228]
[283.26544189 0.21249102]
[270.67263794 8.36240387]
[258.07980347 16.51231766]
[245.48699951 24.66223145]
[232.89418030 32.81214523]
[220.30137634 40.96205521]
[207.70855713 49.11196899]
[195.11575317 57.26188278]
[182.52293396 65.41179657]
[169.93013000 73.56170654]
[157.33731079 81.71162415]
[144.74450684 89.86153412]
[145.62316895 104.83577728]
[159.08274841 111.45696259]
[172.54231262 118.07814789]
[186.00187683 124.69933319]
[199.46144104 131.32052612]
[215.25973511 130.46937561]
[223.26463318 143.03005981]
[236.72419739 149.65124512]
[250.18376160 156.27243042]
[263.68191528 162.81462097]
[277.21817017 169.27757263]
[290.28240967 161.07214355]
[305.70867920 161.25520325]
[318.57452393 169.76835632]
[324.77447510 183.89506531]
[322.33016968 199.12756348]
[312.02157593 210.60520935]
[297.13812256 214.66552734]
[282.42907715 210.01289368]
[272.58801270 198.13192749]
[270.75518799 182.81382751]
[257.21893311 176.35087585]
[249.85446167 176.30503845]
[243.56257629 169.73199463]
[230.10301208 163.11080933]
[216.64344788 156.48962402]
[201.80786133 157.81436157]
[192.84025574 144.78009033]
[179.38069153 138.15890503]
[165.92112732 131.53771973]
[152.46156311 124.91652679]
[139.00198364 118.29534149]
[126.80952454 132.03842163]
[110.45803070 139.09704590]
[93.21778870 138.57577515]
[78.32662964 131.04666138]
[67.47429657 141.40170288]
[66.94050598 156.96939087]
[55.78718567 167.31626892]
[40.94906616 166.71144104]
[30.09673119 177.06648254]
[19.24439812 187.42152405]
[8.39206600 197.77656555]
[-2.46026683 208.13160706]
[-13.31259918 218.48664856]
[-17.34204674 226.64485168]
[-24.35336113 228.89854431]
[-35.32633209 239.12565613]
[-46.29930115 249.35278320]
[-57.27227402 259.57989502]
[-68.24523926 269.80700684]
[-78.91382599 280.35125732]
[-89.26886749 291.20361328]
[-99.62390900 302.05593872]
[-109.97895050 312.90826416]
[-120.33399200 323.76058960]
[-130.68902588 334.61294556]
[-128.83993530 340.52606201]
[-128.69581604 346.67971802]
[-130.24571228 352.59518433]
[-133.34773254 357.81842041]
[-137.74177551 361.95489502]
[-143.07118225 364.69937134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 70]
[3 69]
[6 68]
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[17 60]
[18 59]
[20 57]
[21 56]
[22 55]
[23 54]
[24 53]
[26 52]
[27 51]
[28 50]
[31 49]
[32 48]
[33 47]
[34 46]
[72 261]
[73 260]
[74 259]
[75 258]
[76 257]
[77 256]
[83 255]
[84 254]
[85 253]
[86 252]
[87 251]
[88 249]
[89 248]
[90 247]
[91 246]
[92 245]
[93 244]
[96 241]
[97 240]
[100 131]
[101 130]
[102 129]
[103 128]
[104 126]
[105 125]
[109 124]
[110 123]
[111 122]
[112 121]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
[149 204]
[150 203]
[151 202]
[152 201]
[153 200]
[154 199]
[155 198]
[156 197]
[157 196]
[158 195]
[159 194]
[160 193]
[161 192]
[162 191]
[166 188]
[167 187]
[168 186]
[169 185]
[170 179]
[171 178]
[172 177]
[205 236]
[206 235]
[207 234]
[208 233]
[209 232]
[211 230]
[212 229]
[213 228]
[214 226]
[215 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
