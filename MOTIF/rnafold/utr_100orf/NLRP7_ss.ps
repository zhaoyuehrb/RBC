%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACACAGGCUGGAAGCAAGACCUGACCUGAGGGAGUUCUUCAGCCUUAACCUAAGGUCUCAUACUCGGAGCACUAUGACAUCGCCCCAGCUAGAGUGGACUCUGCAGACCCUUCUGGAGCAGCUGAACGAGGAUGAAUUAAAGAGUUUCAAAUCCCUUUUAUGGGCUUUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.16857910 195.66319275]
[130.72894287 182.11582947]
[124.28930664 168.56846619]
[117.84967041 155.02110291]
[111.41003418 141.47373962]
[95.96614838 142.82507324]
[81.04624176 138.61366272]
[68.58834076 129.38650513]
[56.01553726 137.56726074]
[43.44273376 145.74800110]
[30.86992836 153.92875671]
[18.29712677 162.10949707]
[5.72432232 170.29023743]
[-6.84848118 178.47099304]
[-19.42128372 186.65173340]
[-31.92099380 194.94374084]
[-44.34662247 203.34634399]
[-56.77225113 211.74894714]
[-56.71525192 223.67454529]
[-62.37720871 234.03390503]
[-72.24283600 240.29672241]
[-83.78711700 240.99765015]
[-94.12114716 236.07762146]
[-106.83716583 244.03393555]
[-119.55317688 251.99024963]
[-122.85456848 267.44589233]
[-136.16304016 275.97000122]
[-151.58288574 272.50537109]
[-159.96582031 259.10754395]
[-156.33836365 243.72517395]
[-142.85264587 235.48435974]
[-127.50949097 239.27423096]
[-114.79347992 231.31793213]
[-102.07746124 223.36161804]
[-99.07589722 205.32612610]
[-83.59706879 195.00894165]
[-65.17485809 199.32331848]
[-52.74922562 190.92071533]
[-40.32359695 182.51811218]
[-36.53220749 176.14660645]
[-27.60203171 174.07893372]
[-15.02922726 165.89819336]
[-2.45642424 157.71743774]
[10.11637974 149.53669739]
[22.68918228 141.35594177]
[35.26198578 133.17520142]
[47.83478928 124.99445343]
[60.40759277 116.81370544]
[57.83378220 108.50115967]
[56.98565292 99.84069061]
[57.89790726 91.18674469]
[43.97689056 85.60057831]
[30.05587578 80.01441193]
[13.10436153 79.72714996]
[8.68774891 63.35858536]
[23.19398308 54.58330536]
[35.64204407 66.09339142]
[49.56306076 71.67955780]
[63.48407745 77.26573181]
[83.27486420 60.37009430]
[109.18653870 57.97777939]
[114.89602661 44.10688400]
[120.60552216 30.23599052]
[114.76866913 15.79407406]
[120.75650024 1.80834842]
[134.56063843 -3.66719341]
[140.27012634 -17.53808784]
[145.97961426 -31.40898132]
[151.68910217 -45.27987671]
[148.08726501 -65.09312439]
[163.84030151 -76.27473450]
[169.05390930 -90.33952332]
[174.26751709 -104.40431213]
[161.41670227 -96.66761017]
[146.46127319 -95.51211548]
[132.57455444 -101.18299103]
[122.70307922 -112.47697449]
[118.94144440 -126.99765778]
[122.08780670 -141.66395569]
[131.47454834 -153.36392212]
[145.10995483 -159.61497498]
[160.10078430 -159.09075928]
[173.26623535 -151.90249634]
[181.81277466 -139.57542419]
[183.92697144 -124.72535706]
[191.54196167 -137.64866638]
[191.88172913 -153.46623230]
[205.00903320 -160.50349426]
[212.62402344 -173.42680359]
[220.23901367 -186.35012817]
[227.85400391 -199.27343750]
[227.89582825 -204.55564880]
[229.78800964 -208.85113525]
[232.83702087 -211.61656189]
[236.23391724 -212.66645813]
[244.52590942 -225.16616821]
[252.81791687 -237.66587830]
[254.96475220 -246.57736206]
[261.36965942 -250.31205750]
[269.88220215 -262.66262817]
[271.34317017 -278.41622925]
[284.93658447 -284.50457764]
[293.44912720 -296.85513306]
[294.21749878 -313.23626709]
[308.91033936 -320.51998901]
[322.41290283 -311.21343994]
[320.83496094 -294.89038086]
[305.79971313 -288.34259033]
[297.28717041 -275.99203491]
[296.43508911 -261.12179565]
[282.23275757 -254.15008545]
[273.72021484 -241.79951477]
[265.31762695 -229.37388611]
[257.02563477 -216.87417603]
[248.73362732 -204.37446594]
[240.77731323 -191.65844727]
[233.16232300 -178.73513794]
[225.54733276 -165.81182861]
[217.93234253 -152.88851929]
[218.13725281 -137.99531555]
[204.46527100 -130.03369141]
[196.85028076 -117.11037445]
[196.98533630 -106.84743500]
[188.33230591 -99.19071198]
[183.11869812 -85.12592316]
[177.90509033 -71.06112671]
[183.00102234 -62.16024780]
[182.32553101 -51.70566177]
[175.86091614 -43.18388748]
[165.55999756 -39.57038498]
[159.85050964 -25.69949150]
[154.14102173 -11.82859707]
[148.43153381 2.04229760]
[154.38116455 15.64881897]
[148.78852844 29.79721260]
[134.47640991 35.94548035]
[128.76692200 49.81637573]
[123.05743408 63.68727112]
[130.34797668 69.51623535]
[136.20942688 76.78067780]
[140.36578369 85.13852692]
[142.62130737 94.19619751]
[142.86978149 103.52717590]
[141.09953308 112.69205475]
[137.39389038 121.25926208]
[131.92736816 128.82537842]
[124.95739746 135.03410339]
[131.39703369 148.58146667]
[137.83666992 162.12882996]
[144.27630615 175.67619324]
[150.71594238 189.22355652]
[157.86747742 202.40898132]
[165.71063232 215.19509888]
[173.55378723 227.98123169]
[187.36491394 235.69895935]
[187.42437744 250.59344482]
[195.26751709 263.37957764]
[203.11067200 276.16567993]
[218.53639221 279.60409546]
[226.94206238 292.98770142]
[223.34074402 308.37619019]
[209.86903381 316.63989258]
[194.51947021 312.87606812]
[186.39866638 299.31774902]
[190.32455444 284.00885010]
[182.48139954 271.22271729]
[174.63824463 258.43658447]
[161.38810730 251.63342285]
[160.76765442 235.82438660]
[152.92451477 223.03825378]
[145.08135986 210.25213623]
[140.34471130 224.48463440]
[127.00589752 231.34584045]
[112.67297363 226.92234802]
[105.52100372 213.73715210]
[109.62923431 199.31069946]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[8 48]
[9 47]
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 39]
[17 38]
[18 37]
[23 34]
[24 33]
[25 32]
[51 59]
[52 58]
[53 57]
[61 138]
[62 137]
[63 136]
[66 133]
[67 132]
[68 131]
[69 130]
[71 126]
[72 125]
[73 124]
[85 122]
[86 121]
[88 119]
[89 118]
[90 117]
[91 116]
[95 115]
[96 114]
[97 113]
[99 112]
[100 111]
[102 109]
[103 108]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
