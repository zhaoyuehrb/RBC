%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAUUGGUUGGCAGUUCAGCCAAUGAGCGGGCCUGUUACUAGUUUGCGGCAUCCUGUGGUAUAGGGGAAGCGCUCCGGGCCUGGAAUCCCUACGCGUCCCUUUGGGUUUAGCACGAUGAGCUCAAUCGGCACUGGGUAUGACCUGUCAGCCUCUACAUUCUCUCCUGACGGAAGAGUUUUUCAAGUUGAAUAUGCUAUGAAGGCUGUGGAAAAUA\
) } def
/len { sequence length } bind def

/coor [
[214.48536682 280.68859863]
[207.51463318 267.40667725]
[206.91300964 252.41874695]
[212.79675293 238.62086487]
[224.02894592 228.67916870]
[238.43925476 224.51463318]
[253.24035645 226.93086243]
[242.07382202 216.91543579]
[230.90730286 206.90000916]
[219.74078369 196.88458252]
[208.57424927 186.86917114]
[197.40773010 176.85374451]
[186.24119568 166.83831787]
[175.07467651 156.82289124]
[163.90814209 146.80747986]
[149.26736450 144.06945801]
[144.16018677 129.09523010]
[132.99366760 119.07981110]
[121.82713318 109.06439209]
[74.64701843 134.43830872]
[59.73535538 136.06381226]
[44.82369232 137.68933105]
[37.65448761 149.08865356]
[25.40825081 154.20425415]
[12.64058113 151.37588501]
[3.96273756 141.85446167]
[-10.97089577 143.26393127]
[-25.90452957 144.67340088]
[-40.83816528 146.08285522]
[-55.77179718 147.49232483]
[-67.28874207 162.53912354]
[-85.82912445 164.35366821]
[-99.56520844 152.24769592]
[-114.45177460 154.08891296]
[-129.33834839 155.93011475]
[-139.05000305 168.10885620]
[-154.17332458 169.76403809]
[-165.72402954 160.43040466]
[-180.61061096 162.27160645]
[-195.49717712 164.11282349]
[-210.38374329 165.95404053]
[-200.32183838 177.07868958]
[-202.59896851 191.90483093]
[-215.53561401 199.49716187]
[-229.59007263 194.25578308]
[-234.39622498 180.04660034]
[-226.40866089 167.34954834]
[-241.38940430 168.10928345]
[-256.37014771 168.86901855]
[-271.35089111 169.62875366]
[-284.81802368 178.98657227]
[-299.53845215 171.75874329]
[-300.36904907 155.38063049]
[-286.45538330 146.70065308]
[-272.11065674 154.64801025]
[-257.12988281 153.88827515]
[-242.14915466 153.12852478]
[-227.16839600 152.36878967]
[-212.22496033 151.06747437]
[-197.33837891 149.22625732]
[-182.45181274 147.38504028]
[-167.56524658 145.54383850]
[-158.63664246 133.67726135]
[-143.56576538 131.59794617]
[-131.17955017 141.04354858]
[-116.29298401 139.20234680]
[-101.40641785 137.36112976]
[-96.50991058 127.06206512]
[-87.15410614 120.33428955]
[-75.59419250 118.94190216]
[-64.68616486 123.34535217]
[-57.18125916 132.55868530]
[-42.24762726 131.14921570]
[-27.31399345 129.73976135]
[-12.38035870 128.33029175]
[2.55327487 126.92083740]
[12.71409988 113.51693726]
[29.76131248 111.57297516]
[43.19818497 122.77766418]
[58.10984802 121.15215302]
[73.02151489 119.52664948]
[76.12814331 112.70030975]
[82.34140778 99.04764557]
[85.44803619 92.22130585]
[76.87901306 79.90985870]
[61.81393814 73.43100739]
[60.16122437 57.11534882]
[73.62104797 47.74703979]
[88.34709167 54.96338654]
[89.19046783 71.34083557]
[97.75949097 83.65228271]
[112.45243835 80.63280487]
[115.47191620 65.93985748]
[118.49139404 51.24690628]
[113.69042969 36.17171860]
[123.83132935 25.26248169]
[126.85080719 10.56953335]
[119.63839722 -8.25762177]
[133.10485840 -22.13716316]
[135.69769287 -36.91136932]
[126.89157104 -49.76009750]
[129.73153687 -64.70630646]
[142.03511047 -73.02242279]
[144.62794495 -87.79663086]
[147.22079468 -102.57083893]
[149.81362915 -117.34504700]
[152.40647888 -132.11924744]
[154.99931335 -146.89346313]
[157.59214783 -161.66766357]
[160.18499756 -176.44187927]
[162.77783203 -191.21607971]
[153.49841309 -204.00935364]
[156.06555176 -219.60374451]
[168.95620728 -228.74740601]
[184.52259827 -226.01553345]
[193.52944946 -213.02891541]
[190.63316345 -197.49227905]
[177.55204773 -188.62324524]
[174.95919800 -173.84902954]
[172.36636353 -159.07482910]
[169.77351379 -144.30061340]
[167.18067932 -129.52641296]
[164.58784485 -114.75220490]
[161.99499512 -99.97799683]
[159.40216064 -85.20378876]
[156.80931091 -70.42958832]
[165.54592896 -58.42096329]
[163.12689209 -43.40087891]
[150.47190857 -34.31853104]
[147.87905884 -19.54432297]
[154.47247314 -11.74510860]
[155.71299744 -1.38684762]
[150.95181274 8.14162159]
[141.54376221 13.58901119]
[138.52427673 28.28195953]
[143.54121399 42.30620956]
[133.18434143 54.26638412]
[130.16487122 68.95933533]
[127.14538574 83.65228271]
[131.84255981 97.89786530]
[143.00907898 107.91329193]
[154.17561340 117.92871094]
[169.61509705 121.38309479]
[173.92356873 135.64094543]
[185.09008789 145.65637207]
[196.25662231 155.67179871]
[207.42314148 165.68721008]
[218.58967590 175.70263672]
[229.75619507 185.71806335]
[240.92272949 195.73348999]
[252.08924866 205.74890137]
[263.25576782 215.76432800]
[275.24908447 224.77323914]
[287.97875977 232.70770264]
[300.70840454 240.64216614]
[313.43807983 248.57661438]
[326.16775513 256.51107788]
[338.89739990 264.44552612]
[349.84695435 255.52493286]
[366.54269409 254.69012451]
[382.83139038 265.12237549]
[397.58642578 267.82208252]
[412.34149170 270.52182007]
[427.09652710 273.22152710]
[441.87072754 275.81436157]
[456.66333008 278.30020142]
[471.83035278 272.06378174]
[484.64773560 282.29345703]
[481.93005371 298.46585083]
[466.47299194 303.94415283]
[454.17749023 293.09277344]
[439.38491821 290.60696411]
[432.27087402 292.59750366]
[424.39682007 287.97659302]
[409.64175415 285.27685547]
[394.88671875 282.57714844]
[380.13165283 279.87741089]
[376.49188232 286.43502808]
[365.57260132 306.10781860]
[375.66857910 317.20156860]
[385.76458740 328.29528809]
[395.86056519 339.38903809]
[405.95657349 350.48275757]
[416.05255127 361.57650757]
[426.22857666 372.59686279]
[436.48413086 383.54327393]
[446.73965454 394.48968506]
[462.34292603 393.45425415]
[474.93066406 402.73233032]
[478.55935669 417.94305420]
[471.51562500 431.90444946]
[457.12533569 438.02429199]
[442.18307495 433.41305542]
[433.74420166 420.24798584]
[435.79324341 404.74523926]
[425.53768921 393.79882812]
[415.28216553 382.85238647]
[408.41818237 380.12155151]
[404.95883179 371.67248535]
[394.86282349 360.57876587]
[384.76684570 349.48501587]
[374.67083740 338.39129639]
[364.57485962 327.29754639]
[354.47885132 316.20382690]
[330.65795898 299.90881348]
[330.96295166 277.17520142]
[318.23327637 269.24075317]
[305.50363159 261.30627441]
[292.77395630 253.37182617]
[280.04428101 245.43736267]
[267.31463623 237.50289917]
[273.75909424 251.04797363]
[273.77239990 266.04797363]
[267.35202026 279.60449219]
[255.73855591 289.09799194]
[241.17599487 292.69415283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[15 144]
[17 142]
[18 141]
[19 140]
[20 81]
[21 80]
[22 79]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[33 67]
[34 66]
[35 65]
[38 62]
[39 61]
[40 60]
[41 59]
[47 58]
[48 57]
[49 56]
[50 55]
[84 91]
[85 90]
[92 139]
[93 138]
[94 137]
[96 135]
[97 134]
[99 130]
[100 129]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[153 211]
[154 210]
[155 209]
[156 208]
[157 207]
[158 206]
[161 177]
[162 176]
[163 175]
[164 174]
[165 172]
[166 171]
[179 204]
[180 203]
[181 202]
[182 201]
[183 200]
[184 199]
[185 197]
[186 196]
[187 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
