%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCACAGAGGGAAAGGCAGCAAGAGGAGAGGCAUAAAUUUAGGAUCUCACCCUUCAUUCCACAGACACACACAGCCUCUCUGCCCACCUCUGCUUCCUCUAGGAACACAGGAGUUCCAGAUCACAUCGAGUUCACCAUGAAUUCACUCAGUGAAGCCAACACCAAGUUCAUGUUCGAUCUGUUCCAACAGUUCAGAAAAUCAAAAGAGAACAACAUCUUCUAUUCCCCUAUCAGCA\
) } def
/len { sequence length } bind def

/coor [
[47.74805832 340.55059814]
[36.86540985 329.93756104]
[30.87717819 315.96582031]
[30.69652748 300.76596069]
[36.35100174 286.65585327]
[46.97834015 275.78717041]
[60.95794678 269.81732178]
[60.75995255 254.81863403]
[57.53488541 248.18420410]
[60.65964508 239.62095642]
[60.65964508 224.62095642]
[60.65964508 209.62095642]
[60.65964508 194.62095642]
[60.65964508 179.62095642]
[44.02016068 87.96865845]
[29.05281830 88.95793915]
[14.08547592 89.94721985]
[0.82563925 98.57781982]
[-12.38421249 91.69675446]
[-27.35155487 92.68603516]
[-42.31889725 93.67531586]
[-57.28623962 94.66459656]
[-65.62475586 98.34731293]
[-72.45743561 95.56681824]
[-87.43653107 96.35845184]
[-102.41562653 97.15008545]
[-117.39472198 97.94171143]
[-132.32127380 99.42428589]
[-147.16343689 101.59463501]
[-162.00558472 103.76498413]
[-176.84774780 105.93533325]
[-191.68989563 108.10568237]
[-206.53205872 110.27603149]
[-208.26098633 125.54930878]
[-214.33064270 139.81048584]
[-224.30267334 151.84265137]
[-237.40258789 160.59661865]
[-252.57966614 165.28216553]
[-268.59106445 165.43896484]
[-284.10357666 160.98075867]
[-297.80468750 152.20855713]
[-308.51345825 139.79150391]
[-322.82745361 144.27584839]
[-337.14144897 148.76020813]
[-342.98474121 163.26502991]
[-356.80871582 170.57472229]
[-372.08612061 167.23785400]
[-381.60345459 154.83001709]
[-380.86688232 139.20979309]
[-370.22421265 127.75257111]
[-354.70059204 125.86811829]
[-341.62579346 134.44619751]
[-327.31179810 129.96185303]
[-312.99780273 125.47750092]
[-315.07015991 110.62133789]
[-330.06491089 110.22538757]
[-339.40664673 122.61537170]
[-354.25671387 127.11593628]
[-368.90496826 121.99652863]
[-377.71884155 109.22566223]
[-377.30923462 93.71399689]
[-367.83364868 81.42607880]
[-352.93563843 77.08686829]
[-338.34378052 82.36488342]
[-329.66897583 95.23061371]
[-314.67419434 95.62656403]
[-307.81582642 80.82363892]
[-297.11758423 68.67604828]
[-283.51620483 60.13772202]
[-268.17196655 55.85144806]
[-252.36991882 56.10091782]
[-237.41220093 60.79307938]
[-224.51084900 69.47175598]
[-214.68949890 81.36096954]
[-208.70240784 95.43387604]
[-193.86024475 93.26352692]
[-179.01809692 91.09317780]
[-164.17593384 88.92282867]
[-149.33378601 86.75247955]
[-134.49162292 84.58213043]
[-146.65481567 75.80392456]
[-150.43774414 61.28878021]
[-144.10629272 47.69051743]
[-130.56283569 41.24266052]
[-116.01576996 44.90094757]
[-107.13356018 56.98839569]
[-107.98786163 71.96405029]
[-118.18634796 82.96261597]
[-103.20725250 82.17098236]
[-88.22815704 81.37935638]
[-73.24906158 80.58772278]
[-58.27551651 79.69725037]
[-43.30817413 78.70796967]
[-28.34083366 77.71869659]
[-13.37349224 76.72941589]
[-1.18421984 68.16957092]
[13.09619713 74.97988129]
[28.06353951 73.99060059]
[43.03087997 73.00131989]
[51.91160965 60.91278458]
[48.38105774 46.33419800]
[43.32855225 38.74700546]
[44.90146637 31.53989029]
[41.56365204 16.91596985]
[38.22583771 2.29205203]
[34.88802719 -12.33186626]
[31.55021095 -26.95578575]
[18.03667641 -35.15089798]
[14.35718441 -50.52090073]
[22.69471359 -63.94703674]
[38.10275650 -67.46382141]
[51.43999100 -58.98480988]
[54.79367828 -43.54044724]
[46.17412949 -30.29360008]
[49.51194382 -15.66968060]
[52.84975815 -1.04576206]
[56.18757248 13.57815647]
[59.52538681 28.20207596]
[62.95964432 42.80364609]
[66.49019623 57.38223267]
[73.93733215 58.27113724]
[75.71514130 43.37686157]
[77.49295044 28.48258781]
[79.27098846 13.58834171]
[94.16520691 15.36660862]
[92.38722229 30.26039505]
[90.60941315 45.15467072]
[88.83161163 60.04894257]
[96.27874756 60.93784714]
[103.14147186 47.59982300]
[110.00420380 34.26179504]
[116.86693573 20.92376900]
[123.72966766 7.58574247]
[130.59239197 -5.75228357]
[137.45512390 -19.09030914]
[139.32534790 -35.94078827]
[156.03503418 -38.80832291]
[163.41621399 -23.54547119]
[150.79315186 -12.22758007]
[143.93041992 1.11044610]
[137.06768799 14.44847202]
[130.20495605 27.78649902]
[123.34223175 41.12452316]
[116.47949982 54.46255112]
[109.61676788 67.80057526]
[120.70190430 77.90601349]
[133.34982300 69.84188080]
[145.99774170 61.77774811]
[149.52812195 46.60625458]
[162.46977234 38.60825348]
[176.91172791 42.06742859]
[189.55963135 34.00329590]
[202.20755005 25.93916321]
[204.06346130 10.41210175]
[215.50106812 -0.25161466]
[231.11991882 -1.01690459]
[243.54524231 8.47757816]
[246.91020203 23.74882889]
[239.62594604 37.58623123]
[225.13189697 43.45618439]
[210.27168274 38.58707809]
[197.62376404 46.65121078]
[184.97586060 54.71534348]
[182.01817322 69.26827240]
[169.30625916 77.62662506]
[154.06187439 74.42565918]
[141.41395569 82.48979187]
[128.76603699 90.55392456]
[130.14416504 97.92622375]
[143.31546021 90.74871826]
[154.21171570 101.05754089]
[147.77439880 114.60600281]
[132.90040588 112.67082214]
[134.27851868 120.04312134]
[148.98545837 122.99374390]
[163.69238281 125.94437408]
[178.41847229 128.79786682]
[193.16307068 131.55410767]
[208.14999390 126.48432922]
[219.23883057 136.42851257]
[233.98342896 139.18475342]
[248.72802734 141.94099426]
[263.47262573 144.69725037]
[278.75128174 138.73954773]
[291.37924194 149.20220947]
[288.36590576 165.32212830]
[272.81115723 170.51652527]
[260.71636963 159.44183350]
[245.97178650 156.68559265]
[231.22718811 153.92935181]
[216.48258972 151.17311096]
[202.55029297 156.44003296]
[190.40682983 146.29870605]
[175.66223145 143.54246521]
[168.52302551 145.39947510]
[160.74176025 140.65130615]
[146.03483582 137.70068359]
[131.32789612 134.75004578]
[127.42182922 141.15260315]
[140.22692871 148.96473694]
[153.03189087 156.77708435]
[145.21932983 169.58192444]
[132.41477966 161.76983643]
[119.60968781 153.95768738]
[115.70362091 160.36024475]
[125.05596924 172.08770752]
[134.40830994 183.81518555]
[143.76066589 195.54266357]
[159.25547791 194.71199036]
[172.26098633 203.17582703]
[177.77629089 217.67965698]
[173.68063354 232.64645386]
[161.54888916 242.32119751]
[146.04597473 242.98373413]
[133.13305664 234.37930298]
[127.77541351 219.81649780]
[132.03318787 204.89500427]
[122.68083954 193.16752625]
[113.32849121 181.44006348]
[103.97614288 169.71258545]
[96.89701843 172.18968201]
[94.10865021 186.92823792]
[82.73876953 177.14387512]
[75.65964508 179.62095642]
[75.65964508 194.62095642]
[75.65964508 209.62095642]
[75.65964508 224.62095642]
[75.65964508 239.62095642]
[75.75864410 254.62063599]
[75.95664215 269.61932373]
[90.08895874 275.21807861]
[100.99948883 285.80242920]
[107.02445984 299.75836182]
[107.24510193 314.95770264]
[101.62776947 329.08264160]
[91.02906036 339.97924805]
[77.06520844 345.98587036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 230]
[8 229]
[10 228]
[11 227]
[12 226]
[13 225]
[14 224]
[15 99]
[16 98]
[17 97]
[19 95]
[20 94]
[21 93]
[22 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 80]
[29 79]
[30 78]
[31 77]
[32 76]
[33 75]
[42 54]
[43 53]
[44 52]
[55 66]
[56 65]
[100 120]
[101 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[146 168]
[147 167]
[148 166]
[151 163]
[152 162]
[153 161]
[174 198]
[175 197]
[176 196]
[177 194]
[178 193]
[180 191]
[181 190]
[182 189]
[183 188]
[205 220]
[206 219]
[207 218]
[208 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
