%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACUUUGCGCCCAGUCCGCAGGGCGGGCCGCGCCUUUACCGCCCAGCUGCCUCCCGGAGCCCCCGCGCCCUCCCGACGCGCAGAGCCAUGGCCUCCCACCUGCGCCCGCCGUCCCCGCUCCUCGUGCGGGUGUACAAGUCCGGCCCCCGAGUACGAAGGAAGCUGGAGAGCUACUUCCAGAGCUCUA\
) } def
/len { sequence length } bind def

/coor [
[81.77650452 141.54539490]
[72.58808899 136.14833069]
[64.91210938 128.75683594]
[59.17208481 119.77868652]
[55.68470383 109.70925903]
[40.70315552 110.45301819]
[25.72160721 111.19677734]
[10.74005699 111.94052887]
[-4.24149275 112.68428802]
[-19.22304153 113.42803955]
[-34.20458984 114.17179871]
[-49.18614197 114.91555786]
[-53.59990311 117.76895905]
[-58.20560455 118.55310059]
[-62.17867279 117.54392242]
[-64.92528534 115.30599976]
[-79.92528534 115.30599976]
[-94.92528534 115.30599976]
[-104.08599091 127.69097900]
[-118.61302185 132.25372314]
[-132.87255859 127.44441986]
[-141.46307373 115.30599976]
[-156.46307373 115.30599976]
[-171.46307373 115.30599976]
[-186.46307373 115.30599976]
[-201.46307373 115.30599976]
[-216.46307373 115.30599976]
[-231.46255493 115.43000793]
[-246.46051025 115.67801666]
[-257.41198730 126.75515747]
[-272.62557983 126.79302216]
[-283.11843872 116.28420258]
[-298.11639404 116.53221130]
[-311.78674316 124.49662018]
[-324.64019775 116.97080994]
[-339.63815308 117.21881866]
[-345.06954956 130.27696228]
[-355.03985596 140.24610901]
[-368.01861572 145.64266968]
[-382.03118896 145.68144226]
[-394.95941162 140.38961792]
[-404.86145020 130.59767151]
[-410.26382446 117.80931854]
[-425.26382446 117.80931854]
[-436.26052856 129.16046143]
[-452.06393433 129.32754517]
[-463.29815674 118.21146393]
[-463.29815674 102.40717316]
[-452.06393433 91.29108429]
[-436.26052856 91.45817566]
[-425.26382446 102.80931854]
[-410.26382446 102.80931854]
[-403.61315918 88.28845978]
[-391.25363159 78.08115387]
[-375.62442017 74.26762390]
[-359.83886719 77.65968323]
[-347.06420898 87.62860107]
[-339.88616943 102.22087097]
[-324.88821411 101.97286224]
[-312.29061890 94.02618408]
[-298.36441040 101.53425598]
[-283.36645508 101.28624725]
[-273.22677612 90.43624878]
[-258.02026367 89.97107697]
[-246.70851135 100.68006897]
[-231.71057129 100.43206024]
[-225.06265259 97.17206573]
[-216.46307373 100.30599976]
[-201.46307373 100.30599976]
[-186.46307373 100.30599976]
[-171.46307373 100.30599976]
[-156.46307373 100.30599976]
[-141.46307373 100.30599976]
[-132.87255859 88.16757965]
[-118.61302185 83.35826874]
[-104.08599091 87.92102051]
[-94.92528534 100.30599976]
[-79.92528534 100.30599976]
[-64.92528534 100.30599976]
[-49.92989731 99.93400574]
[-34.94834900 99.19024658]
[-19.96679878 98.44649506]
[-4.98524904 97.70273590]
[9.99630070 96.95898438]
[24.97784996 96.21522522]
[39.95940018 95.47146606]
[54.94094849 94.72771454]
[60.99965286 76.82483673]
[73.82752991 62.94440842]
[91.19808197 55.49560547]
[110.09635162 55.77128983]
[127.24223328 63.72361755]
[138.10861206 53.38331604]
[148.97499084 43.04301453]
[159.84136963 32.70271301]
[153.83500671 18.80490685]
[152.94760132 3.71900344]
[157.26699829 -10.73309422]
[166.25335693 -22.81263733]
[178.80661011 -31.07322121]
[193.40104675 -34.53397369]
[208.27076721 -32.79597855]
[221.62332153 -26.08817673]
[232.48970032 -36.42847824]
[243.35607910 -46.76877975]
[254.22245789 -57.10908127]
[265.08883667 -67.44937897]
[275.95520020 -77.78968048]
[286.82159424 -88.12998199]
[297.68795776 -98.47028351]
[308.55435181 -108.81058502]
[319.33486938 -119.24037170]
[330.02880859 -129.75892639]
[325.53530884 -144.38995361]
[328.36730957 -159.43118286]
[337.87402344 -171.42622375]
[351.87084961 -177.61872864]
[367.14144897 -176.58567810]
[380.17675781 -168.56448364]
[387.98132324 -155.39834595]
[388.76174927 -140.11274719]
[382.33868408 -126.22020721]
[370.18807983 -116.91313171]
[355.10208130 -114.33021545]
[340.54736328 -119.06499481]
[329.85342407 -108.54644012]
[327.28479004 -101.60205841]
[318.89465332 -97.94420624]
[308.02825928 -87.60390472]
[297.16189575 -77.26360321]
[286.29550171 -66.92330170]
[275.42913818 -56.58300400]
[264.56277466 -46.24270248]
[253.69638062 -35.90240097]
[242.83000183 -25.56209946]
[231.96362305 -15.22179890]
[238.00111389 -1.55307138]
[238.99966431 13.38453102]
[234.81951904 27.78942299]
[225.94667053 39.91764832]
[213.43640137 48.29400635]
[198.78790283 51.89149094]
[183.76455688 50.25716782]
[170.18167114 43.56909180]
[159.31529236 53.90939331]
[148.44891357 64.24969482]
[137.58253479 74.58999634]
[143.74311829 87.97277069]
[145.29051208 102.62395477]
[142.06149292 116.99841309]
[134.39660645 129.58020020]
[143.99613953 141.10621643]
[153.59567261 152.63223267]
[163.19519043 164.15824890]
[182.10049438 165.14515686]
[194.08993530 179.38116455]
[191.92240906 197.54547119]
[201.89778137 208.74780273]
[211.87315369 219.95011902]
[221.84851074 231.15245056]
[234.66775513 232.68000793]
[242.74555969 242.23094177]
[242.16194153 254.32469177]
[251.95072937 265.69042969]
[261.73953247 277.05615234]
[271.52832031 288.42187500]
[287.17941284 293.31832886]
[290.49996948 309.37777710]
[278.07409668 320.07962036]
[262.68444824 314.41473389]
[260.16259766 298.21063232]
[250.37379456 286.84490967]
[240.58500671 275.47918701]
[230.79621887 264.11346436]
[213.94682312 259.23532104]
[210.64619446 241.12780762]
[200.67082214 229.92549133]
[190.69546509 218.72317505]
[180.72009277 207.52084351]
[169.43672180 209.34587097]
[158.56381226 205.44946289]
[150.84916687 196.69317627]
[148.30169678 185.18173218]
[151.66917419 173.75778198]
[142.06965637 162.23176575]
[132.47012329 150.70574951]
[122.87059784 139.17971802]
[113.10034943 143.43380737]
[102.60729218 145.29147339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 87]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[16 79]
[17 78]
[18 77]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[28 66]
[29 65]
[32 62]
[33 61]
[35 59]
[36 58]
[43 52]
[44 51]
[92 147]
[93 146]
[94 145]
[95 144]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 126]
[113 125]
[151 187]
[152 186]
[153 185]
[154 184]
[157 179]
[158 178]
[159 177]
[160 176]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
