%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAAUCACAGGAACACACACUUGGAAACCUCAGCCCUGCAUUCCUCGCUCCAAGGGGCAGACAGGACAGGCUGAAAAUAGCAACUGGUUCCAAAAAGAUAAAGGGGAUGACUCCAGCAGAGCACCUCACUCCUUUGAAGAGCACAGAGGAAGAUGUCAGCCCAGUCCCUUCCUGCAGCAACACCCCCCACGCAGAAGCCCCCUCGGAUCAUCCGCCCCCGCCCUCCUUCUCGUUCCAGGGCUGCCCAGUCCC\
) } def
/len { sequence length } bind def

/coor [
[80.64569855 375.04855347]
[86.64807892 388.86105347]
[89.54040527 403.64108276]
[89.18740082 418.69726562]
[85.60556030 433.32550049]
[78.96242523 446.84152222]
[69.56871033 458.61315918]
[57.86376190 468.08990479]
[44.39505386 474.82843018]
[29.79253578 478.51364136]
[14.73919964 478.97308350]
[-0.06088703 476.18536377]
[-13.91549587 470.28079224]
[-26.17662239 461.53558350]
[-36.27079010 450.35873413]
[-43.72587967 437.27301025]
[-48.19319916 422.89050293]
[-49.46380615 407.88385010]
[-47.47827148 392.95495605]
[-42.32946014 378.80206299]
[-34.25819778 366.08715820]
[-23.64198494 355.40493774]
[-10.97736359 347.25500488]
[3.14331770 342.01855469]
[18.05961037 339.94049072]
[33.07385254 341.11804199]
[37.42812347 326.76394653]
[41.78239059 312.40985107]
[30.73119545 302.39303589]
[25.10185432 288.51428223]
[26.06055641 273.50619507]
[33.47060013 260.34902954]
[45.90891266 251.67864990]
[60.93906403 249.25875854]
[65.29333496 234.90464783]
[69.64760590 220.55055237]
[74.00187683 206.19644165]
[78.35614777 191.84233093]
[82.71041870 177.48823547]
[87.06468201 163.13412476]
[91.41895294 148.78001404]
[83.08345795 146.03512573]
[75.44359589 141.89430237]
[68.72783661 136.51597595]
[63.13076401 130.09498596]
[58.80747223 122.85558319]
[55.86938477 115.04368591]
[54.38150024 106.91857147]
[54.36123657 98.74430084]
[55.77881241 90.78111267]
[58.55913925 83.27716827]
[62.58516693 76.46080780]
[67.70249939 70.53359222]
[73.72512817 65.66442108]
[80.44209290 61.98472977]
[87.62477112 59.58506775]
[95.03466797 58.51304245]
[95.95447540 43.54127121]
[96.87429047 28.56949806]
[97.79409790 13.59772587]
[98.71391296 -1.37404573]
[84.40802002 -23.18220329]
[103.42079926 -45.53499222]
[99.95492554 -60.12908936]
[86.78278351 -68.44367981]
[83.47579956 -83.29354095]
[91.48365784 -95.79992676]
[88.01778412 -110.39402771]
[84.55191803 -124.98812866]
[81.08604431 -139.58222961]
[68.13555908 -152.69145203]
[73.84779358 -169.29756165]
[70.20309448 -183.84803772]
[66.55839539 -198.39849854]
[62.91368866 -212.94897461]
[59.26898575 -227.49943542]
[55.62428284 -242.04991150]
[40.54236221 -242.69461060]
[26.26760101 -247.55809021]
[13.95410252 -256.23809814]
[4.59486008 -268.02423096]
[-1.05832434 -281.95599365]
[-2.55522275 -296.90106201]
[0.21697168 -311.64743042]
[7.02519321 -325.00161743]
[17.31007195 -335.88522339]
[30.23188210 -343.42205811]
[26.58717918 -357.97253418]
[22.94247627 -372.52301025]
[19.20856285 -387.05084229]
[15.38557720 -401.55548096]
[11.56259251 -416.06011963]
[7.73960733 -430.56475830]
[-6.57112312 -436.26644897]
[-14.68563747 -449.15084839]
[-13.66941547 -464.16522217]
[-4.12127638 -475.56570435]
[-7.94426107 -490.07037354]
[-11.76724625 -504.57501221]
[-15.59023094 -519.07965088]
[-29.24451828 -522.04412842]
[-40.24077606 -530.55694580]
[-46.47213364 -542.91491699]
[-46.77573395 -556.68566895]
[-41.14934158 -569.18572998]
[-30.74069023 -578.00390625]
[-34.38539124 -592.55438232]
[-38.03009415 -607.10485840]
[-41.67479706 -621.65533447]
[-46.78168106 -629.19348145]
[-45.27378464 -636.40667725]
[-48.73965454 -651.00079346]
[-53.75364685 -658.60107422]
[-52.15734482 -665.79522705]
[-55.44386292 -680.43078613]
[-58.73038483 -695.06628418]
[-71.46060944 -704.82952881]
[-71.62049103 -720.87182617]
[-59.08737946 -730.88684082]
[-43.47560501 -727.19195557]
[-36.76118851 -712.62158203]
[-44.09485245 -698.35284424]
[-40.80833435 -683.71728516]
[-37.52181244 -669.08178711]
[-34.14555359 -654.46667480]
[-30.67968369 -639.87255859]
[-27.12433052 -625.30004883]
[-23.47962761 -610.74957275]
[-19.83492470 -596.19909668]
[-16.19022179 -581.64862061]
[-0.53705686 -577.58477783]
[10.99134636 -566.10949707]
[15.17557812 -550.29351807]
[10.77972794 -534.43750000]
[-1.08558404 -522.90264893]
[2.73740077 -508.39801025]
[6.56038570 -493.89334106]
[10.38337040 -479.38870239]
[24.31035995 -474.17553711]
[32.59511948 -461.61264038]
[31.88548660 -446.40243530]
[22.24425507 -434.38775635]
[26.06723976 -419.88311768]
[29.89022446 -405.37844849]
[33.71321106 -390.87380981]
[38.44334030 -385.22314453]
[37.49294662 -376.16769409]
[41.13764954 -361.61721802]
[44.78234863 -347.06677246]
[59.73121643 -346.51113892]
[73.93215942 -341.76092529]
[86.23159027 -333.19299316]
[95.62783813 -321.49462891]
[101.35275269 -307.60861206]
[102.93447113 -292.65704346]
[100.23629761 -277.85067749]
[93.46849823 -264.39105225]
[83.17191315 -253.37275696]
[70.17475128 -245.69461060]
[73.81945801 -231.14414978]
[77.46415710 -216.59367371]
[81.10886383 -202.04319763]
[84.75356293 -187.49273682]
[88.39826965 -172.94226074]
[98.59668732 -166.47038269]
[101.76411438 -154.40000916]
[95.68014526 -143.04809570]
[99.14601898 -128.45399475]
[102.61188507 -113.85990143]
[106.07775879 -99.26580048]
[118.85359192 -91.69522095]
[122.57637787 -76.94409943]
[114.54902649 -63.59496307]
[118.01490021 -49.00086212]
[130.43557739 -40.59093857]
[145.27322388 -42.79189682]
[160.11087036 -44.99285507]
[174.94851685 -47.19380951]
[178.26673889 -62.00440979]
[186.71435547 -74.61402130]
[199.14886475 -83.31730652]
[213.88864136 -86.93721008]
[228.94021606 -84.98417664]
[242.26800537 -77.72232819]
[252.06953430 -66.13378143]
[257.01922607 -51.78578568]
[256.44766235 -36.61878967]
[250.43217468 -22.68400764]
[239.78627014 -11.86600113]
[225.94975281 -5.62781906]
[210.79386902 -4.81312370]
[196.36834717 -9.53209591]
[184.62411499 -19.14653397]
[177.14947510 -32.35616302]
[162.31182861 -30.15520668]
[147.47418213 -27.95424843]
[132.63653564 -25.75329208]
[130.61979675 -13.53554249]
[123.48519135 -4.52167368]
[113.68568420 -0.45423466]
[112.76586914 14.51753712]
[111.84606171 29.48930931]
[110.92624664 44.46107864]
[110.00643921 59.43285370]
[134.43508911 72.02713013]
[146.91749573 98.33486938]
[140.56039429 128.42497253]
[153.78921509 135.49592590]
[167.01803589 142.56686401]
[180.24685669 149.63781738]
[197.06594849 151.77194214]
[199.67121887 168.52452087]
[184.29454041 175.66555786]
[173.17590332 162.86663818]
[159.94708252 155.79568481]
[146.71826172 148.72473145]
[133.48944092 141.65379333]
[126.56034851 144.52391052]
[134.77973938 157.07148743]
[142.99913025 169.61906433]
[151.21850586 182.16664124]
[159.43789673 194.71421814]
[167.65728760 207.26179504]
[180.09584045 215.64523315]
[187.26962280 228.81858826]
[187.56335449 243.81570435]
[180.91090393 257.25985718]
[168.81013489 266.12390137]
[153.98568726 268.41204834]
[139.77542114 263.60906982]
[129.37895203 252.79641724]
[125.13716125 238.40867615]
[128.00462341 223.68646240]
[124.94412994 209.00201416]
[121.88363647 194.31755066]
[118.82314301 179.63308716]
[115.76264954 164.94862366]
[112.70215607 150.26416016]
[105.77306366 153.13429260]
[101.41879272 167.48838806]
[97.06452179 181.84249878]
[92.71025085 196.19660950]
[88.35597992 210.55070496]
[84.00170898 224.90481567]
[79.64743805 239.25892639]
[75.29316711 253.61302185]
[86.44586182 263.97540283]
[91.97093964 278.09490967]
[90.82242584 293.15151978]
[83.28152466 306.16287231]
[70.89027405 314.57516479]
[56.13649750 316.76409912]
[51.78222656 331.11822510]
[47.42795563 345.47232056]
[60.56605148 352.83468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 254]
[27 253]
[28 252]
[34 246]
[35 245]
[36 244]
[37 243]
[38 242]
[39 241]
[40 240]
[41 239]
[57 204]
[58 203]
[59 202]
[60 201]
[61 200]
[63 174]
[64 173]
[67 170]
[68 169]
[69 168]
[70 167]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[87 149]
[88 148]
[89 147]
[90 145]
[91 144]
[92 143]
[93 142]
[97 138]
[98 137]
[99 136]
[100 135]
[106 130]
[107 129]
[108 128]
[109 127]
[111 126]
[112 125]
[114 124]
[115 123]
[116 122]
[175 197]
[176 196]
[177 195]
[178 194]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
