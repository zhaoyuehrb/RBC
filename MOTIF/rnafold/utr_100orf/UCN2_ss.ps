%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUGCCUGGCCCCAGCCCCAGGCAGCCACAGCAGGCUGCCUUACCCCAGAAGCAGCUGGUGGCGCCUGACCUCACGAUGACCAGGUGUGCUCUGCUGUUGCUGAUGGUCCUGAUGUUGGGCAGAGUCCUGGUUGUCCCAGUGACCCCUAUCCCAACCUUCCAGCUCCGCCCUCAGA\
) } def
/len { sequence length } bind def

/coor [
[213.86145020 124.69743347]
[199.02806091 122.46799469]
[184.19467163 120.23856354]
[169.36126709 118.00912476]
[155.62536621 123.76884460]
[143.12846375 114.06637573]
[128.29507446 111.83694458]
[123.87152100 125.01409912]
[113.17668152 136.15614319]
[97.32828522 142.30364990]
[90.01907349 155.40232849]
[82.70986176 168.50100708]
[83.49060059 184.88156128]
[69.55058289 193.51914978]
[55.23010254 185.52815247]
[55.26084518 169.12904358]
[69.61118317 161.19180298]
[76.92039490 148.09310913]
[84.22960663 134.99443054]
[79.13980865 129.48590088]
[68.96022034 118.46882629]
[63.87041855 112.96029663]
[50.23590088 119.21327972]
[36.60137939 125.46627045]
[22.96685791 131.71925354]
[9.33233738 137.97224426]
[-4.30218315 144.22523499]
[-17.93670273 150.47821045]
[-31.57122421 156.73120117]
[-36.83496094 171.63317871]
[-51.13009644 178.37295532]
[-65.97557831 172.95195007]
[-72.56385040 158.58636475]
[-66.98619843 143.79902649]
[-52.55175400 137.36300659]
[-37.82421112 143.09667969]
[-24.18969154 136.84370422]
[-10.55517006 130.59071350]
[3.07935023 124.33772278]
[16.71387100 118.08473206]
[30.34839058 111.83174896]
[43.98291016 105.57875824]
[57.61743164 99.32577515]
[59.34018707 97.71221924]
[61.12144089 96.23622894]
[62.95290756 94.89979553]
[48.91335297 89.61861420]
[34.82799530 84.46083832]
[20.69791985 79.42685699]
[6.56784344 74.39288330]
[-7.56223345 69.35890198]
[-21.73059654 76.36125946]
[-36.67356110 71.21506500]
[-43.52573013 56.97345734]
[-38.22183609 42.08573532]
[-23.90858078 35.38451767]
[-9.07776833 40.84552002]
[-2.52825522 55.22882462]
[11.60182095 60.26280212]
[25.73189735 65.29678345]
[39.86197281 70.33075714]
[47.23958969 69.61154175]
[54.19453812 75.57906342]
[68.23409271 80.86024475]
[78.41368866 69.84317017]
[72.04129791 56.26404953]
[65.66889954 42.68492508]
[59.29650879 29.10580254]
[52.92411423 15.52667809]
[46.55171967 1.94755471]
[36.09094238 -1.16351342]
[29.22314262 -9.36031246]
[28.04151344 -19.76715660]
[32.69735336 -28.90296936]
[26.80543709 -42.69736481]
[20.91352081 -56.49176025]
[9.13162422 -68.68286896]
[17.58475113 -83.37916565]
[34.04676437 -79.32472992]
[34.70791626 -62.38367462]
[40.59983063 -48.58928299]
[46.49174881 -34.79488754]
[62.77011490 -24.39055061]
[60.13084412 -4.42483854]
[66.50323486 9.15428543]
[72.87563324 22.73340797]
[79.24802399 36.31253433]
[85.62041473 49.89165497]
[91.99281311 63.47077942]
[120.01177216 72.47122955]
[130.52450562 97.00354767]
[145.35789490 99.23297882]
[160.15478516 93.63272858]
[171.59069824 103.17572784]
[186.42410278 105.40516663]
[201.25749207 107.63460541]
[216.09089661 109.86403656]
[222.85443115 101.54761505]
[232.39427185 96.83897400]
[242.94752502 96.53309631]
[252.59504700 100.61820221]
[259.61041260 108.29011536]
[262.76885986 118.10958099]
[277.46438599 121.11657715]
[292.15988159 124.12358093]
[306.85540771 127.13057709]
[321.62496948 129.74971008]
[336.45837402 131.97914124]
[351.29174805 134.20857239]
[363.92047119 125.08972931]
[378.93188477 127.56200409]
[387.54748535 139.65774536]
[402.38088989 141.88719177]
[417.21426392 144.11662292]
[431.98251343 132.28637695]
[450.39718628 134.93202209]
[460.87231445 149.91926575]
[475.77481079 151.62675476]
[490.67730713 153.33425903]
[505.57980347 155.04174805]
[520.48229980 156.74923706]
[535.38482666 158.45674133]
[552.08422852 150.72911072]
[565.77709961 161.68524170]
[580.70727539 163.13093567]
[597.26855469 155.11143494]
[611.15161133 165.82557678]
[626.10485840 167.00901794]
[641.05810547 168.19245911]
[656.02111816 169.24464417]
[670.99285889 170.16548157]
[685.96453857 171.08631897]
[700.93627930 172.00715637]
[713.85943604 162.50080872]
[729.31115723 166.81639099]
[735.43817139 181.64337158]
[727.54034424 195.60775757]
[711.67626953 197.99726868]
[700.01544189 186.97886658]
[685.04370117 186.05802917]
[670.07202148 185.13719177]
[655.10028076 184.21635437]
[648.21099854 186.95201111]
[639.87463379 183.14570618]
[624.92138672 181.96226501]
[609.96813965 180.77880859]
[600.54858398 188.39718628]
[588.06378174 187.51496887]
[579.26159668 178.06111145]
[564.33142090 176.61541748]
[554.77960205 184.06729126]
[542.31219482 182.96611023]
[533.67730713 173.35923767]
[518.77478027 171.65173340]
[503.87231445 169.94424438]
[488.96981812 168.23675537]
[474.06732178 166.52926636]
[459.16482544 164.82176208]
[451.95706177 173.70938110]
[441.23828125 178.04650879]
[429.63983154 176.64321899]
[420.06997681 169.73440552]
[414.98483276 158.95001221]
[400.15142822 156.72058105]
[385.31805420 154.49114990]
[373.52746582 163.51988220]
[358.45254517 161.47023010]
[349.06231689 149.04197693]
[334.22891235 146.81253052]
[319.39553833 144.58309937]
[316.34020996 146.39741516]
[312.24694824 146.80514526]
[307.79428101 145.33145142]
[303.84838867 141.82608032]
[289.15289307 138.81909180]
[274.45736694 135.81208801]
[259.76187134 132.80508423]
[244.37565613 144.71403503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 97]
[2 96]
[3 95]
[4 94]
[6 92]
[7 91]
[10 19]
[11 18]
[12 17]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[46 64]
[47 63]
[48 61]
[49 60]
[50 59]
[51 58]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[74 82]
[75 81]
[76 80]
[103 177]
[104 176]
[105 175]
[106 174]
[107 170]
[108 169]
[109 168]
[112 165]
[113 164]
[114 163]
[117 158]
[118 157]
[119 156]
[120 155]
[121 154]
[122 153]
[124 150]
[125 149]
[127 146]
[128 145]
[129 144]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
