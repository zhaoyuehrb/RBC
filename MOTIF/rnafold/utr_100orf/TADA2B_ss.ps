%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCUGGGGCCGCGGUGGCGGCAGCCGCGGCGGCGGGCGGCGGUUGCUCGUGCGCGGCGGCGGCGGCGGGUCCCGCGGGCGGCGGGGCGCUGACGGCCGGGGGCGCGGCGGCUGCGGCGGGCCGGGCGGCGGGCGGCGAGCGGGGGAAGAUGGCGGAGCUGGGGAAGAAGUACUGCGUGUACUGCCUGGCCGAGGUGAGCCCGCUGCGCUUCCGCUGCACCGAGUGCCAGGACAUCGAGCUGUGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[205.95240784 91.03147125]
[197.90098572 91.93163300]
[190.05500793 89.56451416]
[183.70115662 84.24134827]
[169.26179504 88.30395508]
[154.82243347 92.36656189]
[140.38307190 96.42916870]
[125.94370270 100.49177551]
[121.64865875 114.30570221]
[110.62506104 123.67330933]
[96.29911804 125.68309021]
[89.95983887 139.27770996]
[83.62056732 152.87231445]
[77.28129578 166.46693420]
[70.94201660 180.06155396]
[72.90954590 196.34223938]
[59.63317871 205.96878052]
[44.77050400 199.03819275]
[43.61096573 182.68009949]
[57.34740067 173.72227478]
[63.68667603 160.12767029]
[70.02594757 146.53305054]
[76.36522675 132.93843079]
[82.70449829 119.34381104]
[81.53772736 118.23353577]
[80.44207764 117.05300903]
[66.76949310 123.22232056]
[53.09690475 129.39163208]
[39.42431641 135.56092834]
[25.75172806 141.73023987]
[16.35504150 154.45866394]
[1.57180738 152.64064026]
[-12.10078049 158.80993652]
[-21.49746704 171.53836060]
[-36.28070068 169.72033691]
[-49.95328903 175.88964844]
[-63.62587738 182.05894470]
[-73.02256012 194.78738403]
[-87.80579376 192.96934509]
[-101.47838593 199.13865662]
[-115.15097046 205.30795288]
[-128.78483582 211.56236267]
[-142.37945557 217.90164185]
[-151.33726501 231.63807678]
[-167.69537354 230.47854614]
[-174.62594604 215.61587524]
[-164.99942017 202.33949280]
[-148.71873474 204.30702209]
[-135.12411499 197.96775818]
[-130.40278625 192.30764771]
[-121.32028198 191.63537598]
[-107.64768982 185.46606445]
[-93.97510529 179.29675293]
[-85.55637360 167.00959778]
[-69.79518127 168.38636780]
[-56.12259674 162.21705627]
[-42.45000839 156.04774475]
[-34.03127670 143.76058960]
[-18.27008629 145.13735962]
[-4.59749889 138.96804810]
[3.82123184 126.68089294]
[19.58242226 128.05764771]
[33.25500870 121.88834381]
[46.92759705 115.71903992]
[60.60018539 109.54972839]
[74.27277374 103.38042450]
[74.06417084 100.80640411]
[74.11245728 98.22438812]
[74.41716003 95.65996552]
[60.98481369 88.98374176]
[47.55246353 82.30751038]
[34.07876205 75.71514130]
[20.56422806 69.20688629]
[7.04969549 62.69863129]
[-6.46483755 56.19037628]
[-19.97937012 49.68212128]
[-33.49390411 43.17386246]
[-47.00843811 36.66560745]
[-62.56516266 40.58578491]
[-75.24174500 30.75298882]
[-75.31378937 14.71009731]
[-62.72603226 4.76384497]
[-47.13472366 8.54414463]
[-40.50017929 23.15107536]
[-26.98564720 29.65933037]
[-13.47111511 36.16758728]
[0.04341833 42.67584229]
[13.55795097 49.18410110]
[27.07248497 55.69235611]
[40.58701706 62.20061111]
[47.95741653 62.27098846]
[54.22869110 68.87516785]
[67.66104126 75.55139160]
[81.09339142 82.22761536]
[102.42263031 74.16497803]
[121.88109589 86.05241394]
[136.32046509 81.98980713]
[150.75982666 77.92720032]
[165.19918823 73.86459351]
[179.63854980 69.80198669]
[194.12561035 52.68995667]
[214.84275818 58.98236084]
[229.06166077 54.20505905]
[243.28057861 49.42776108]
[257.49948120 44.65045929]
[271.71838379 39.87316132]
[285.93731689 35.09585953]
[300.15621948 30.31855965]
[314.37512207 25.54126167]
[328.59402466 20.76396179]
[342.81295776 15.98666096]
[356.44680786 9.73224926]
[369.34268188 2.07089019]
[375.10290527 -4.98347187]
[382.44741821 -5.60444355]
[395.43780518 -13.10444355]
[408.42819214 -20.60444450]
[421.41857910 -28.10444450]
[434.40896606 -35.60444260]
[447.39932251 -43.10444260]
[460.38970947 -50.60444260]
[473.38009644 -58.10444260]
[486.37048340 -65.60444641]
[489.97802734 -71.09399414]
[495.04983521 -73.58348083]
[499.77954102 -73.12486267]
[512.95288086 -80.29866791]
[526.08123779 -87.55445099]
[539.16406250 -94.89192963]
[552.24694824 -102.22940063]
[565.32983398 -109.56687927]
[578.41265869 -116.90435791]
[591.49554443 -124.24182892]
[604.57843018 -131.57929993]
[617.66131592 -138.91677856]
[630.74414062 -146.25425720]
[635.16058350 -166.83839417]
[653.10656738 -177.26899719]
[672.61474609 -171.09608459]
[685.31561279 -179.07656860]
[690.89819336 -186.27233887]
[698.22497559 -187.07623291]
[711.02429199 -194.89775085]
[718.76538086 -208.69581604]
[733.65991211 -208.73010254]
[746.45928955 -216.55162048]
[759.25866699 -224.37315369]
[756.01947021 -239.98529053]
[758.32281494 -255.73553467]
[765.87158203 -269.71899414]
[777.73535156 -280.25085449]
[792.46496582 -286.06933594]
[808.26977539 -286.48687744]
[823.23516846 -281.47134399]
[835.55444336 -271.64761353]
[848.25531006 -279.62808228]
[860.95611572 -287.60855103]
[873.65698242 -295.58905029]
[881.22546387 -309.48254395]
[896.11840820 -309.70248413]
[908.81927490 -317.68298340]
[921.52014160 -325.66345215]
[922.42956543 -341.15386963]
[932.29632568 -353.12994385]
[947.32647705 -356.98663330]
[961.74066162 -351.24099731]
[969.99621582 -338.10232544]
[968.91882324 -322.62268066]
[958.92272949 -310.75436401]
[943.85162354 -307.06091309]
[929.50067139 -312.96258545]
[916.79980469 -304.98211670]
[904.09893799 -297.00164795]
[897.43890381 -283.67895508]
[881.63751221 -282.88818359]
[868.93664551 -274.90771484]
[856.23577881 -266.92721558]
[843.53491211 -258.94674683]
[846.92962646 -245.21672058]
[845.92034912 -231.08782959]
[840.59246826 -217.94000244]
[831.45367432 -207.06144714]
[819.38580322 -199.52243042]
[805.55969238 -196.07000732]
[791.32159424 -197.05395508]
[778.06207275 -202.39144897]
[767.08020020 -211.57379150]
[754.28082275 -203.75225830]
[741.48144531 -195.93074036]
[734.65588379 -182.69212341]
[718.84582520 -182.09838867]
[706.04644775 -174.27685547]
[693.29614258 -166.37570190]
[680.59527588 -158.39521790]
[681.41851807 -149.13578796]
[678.81066895 -140.15293884]
[673.08666992 -132.68217468]
[664.99304199 -127.76676178]
[655.61077881 -126.11215210]
[646.21069336 -127.98504639]
[638.08166504 -133.17138672]
[624.99877930 -125.83390808]
[611.91589355 -118.49643707]
[598.83300781 -111.15895844]
[585.75018311 -103.82148743]
[572.66729736 -96.48400879]
[559.58441162 -89.14653778]
[546.50152588 -81.80905914]
[533.41870117 -74.47158813]
[529.13354492 -68.47447205]
[520.12664795 -67.12535095]
[506.95333862 -59.95153809]
[493.87048340 -52.61406326]
[480.88009644 -45.11406326]
[467.88970947 -37.61406326]
[454.89932251 -30.11406326]
[441.90896606 -22.61406326]
[428.91857910 -15.11406231]
[415.92819214 -7.61406279]
[402.93780518 -0.11406261]
[389.94741821 7.38593721]
[377.00405884 14.96676445]
[364.10818481 22.62812424]
[360.31628418 37.14093018]
[367.81628418 50.13130951]
[375.39709473 63.07468796]
[383.05847168 75.97056580]
[398.43395996 79.62701416]
[406.64932251 93.12825012]
[402.83050537 108.46423340]
[389.24316406 116.53639221]
[373.94842529 112.55565643]
[366.02038574 98.88372803]
[370.16259766 83.63191986]
[362.50122070 70.73604584]
[356.39913940 66.60175323]
[354.82589722 57.63130951]
[347.32589722 44.64093018]
[346.43716431 39.57999420]
[346.54632568 34.71489334]
[347.59024048 30.20557213]
[333.37133789 34.98287201]
[319.15243530 39.76016998]
[304.93353271 44.53747177]
[290.71459961 49.31476974]
[276.49569702 54.09207153]
[262.27679443 58.86936951]
[248.05787659 63.64667130]
[233.83897400 68.42397308]
[219.62005615 73.20127106]
[217.71292114 80.78559875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[32 60]
[33 59]
[35 57]
[36 56]
[37 55]
[39 53]
[40 52]
[41 51]
[42 49]
[43 48]
[69 94]
[70 93]
[71 92]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[102 250]
[103 249]
[104 248]
[105 247]
[106 246]
[107 245]
[108 244]
[109 243]
[110 242]
[111 241]
[112 223]
[113 222]
[115 221]
[116 220]
[117 219]
[118 218]
[119 217]
[120 216]
[121 215]
[122 214]
[123 213]
[126 212]
[127 211]
[128 209]
[129 208]
[130 207]
[131 206]
[132 205]
[133 204]
[134 203]
[135 202]
[136 201]
[139 194]
[140 193]
[142 192]
[143 191]
[145 189]
[146 188]
[147 187]
[155 178]
[156 177]
[157 176]
[158 175]
[160 173]
[161 172]
[162 171]
[224 238]
[225 237]
[226 235]
[227 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
