%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGAUUCCGCGGGAGAGCGGCAGAGAUACCGCGAUAUUUGGGAGCGGCCCCGAGACGCGCCUGGCGCGGAUCCUAAAUCCCGACAGCUUUAUAGAGCCCAGGCCUGGCAGGCUCCCAGAACUUGAAGCCACCAGACCCCACAUGGAACCAAAGGCCUCCUGUCCAGCUGCUGCACCCUUGAUGGAGAGAAAAUUCCAUGUUCUUGUGGGUGUCACGGGGAGUGUCGCAGCCCUGAAGUUGC\
) } def
/len { sequence length } bind def

/coor [
[-52.85388947 513.70953369]
[-68.75892639 519.20587158]
[-74.74260712 532.96075439]
[-80.72629547 546.71557617]
[-71.84184265 557.50378418]
[-68.48356628 571.00183105]
[-71.25057983 584.56591797]
[-79.54795837 595.56445312]
[-91.71351624 601.88867188]
[-105.35055542 602.35687256]
[-111.51011658 616.03381348]
[-117.66968536 629.71081543]
[-123.82924652 643.38781738]
[-117.99494934 658.07574463]
[-124.33206940 672.55389404]
[-139.08090210 678.23260498]
[-153.49122620 671.74273682]
[-159.01365662 656.93469238]
[-152.37184143 642.59381104]
[-137.50622559 637.22821045]
[-131.34666443 623.55126953]
[-125.18709564 609.87426758]
[-119.02753448 596.19726562]
[-128.79055786 583.30810547]
[-130.72596741 567.16040039]
[-124.21060181 552.15667725]
[-110.93837738 542.43597412]
[-94.48113251 540.73187256]
[-88.49744415 526.97705078]
[-82.51375580 513.22222900]
[-88.86137390 502.02401733]
[-87.58818817 489.01959229]
[-78.93555450 478.97036743]
[-65.88738251 475.68469238]
[-59.72782135 462.00772095]
[-53.56825638 448.33074951]
[-47.40869141 434.65374756]
[-41.24912643 420.97677612]
[-43.07768631 406.19485474]
[-30.35595703 396.78909302]
[-24.19639206 383.11212158]
[-26.02495575 368.33016968]
[-13.30322456 358.92443848]
[-7.14366007 345.24743652]
[-0.98409504 331.57046509]
[-3.67311478 314.21902466]
[11.38425636 303.60110474]
[17.36794281 289.84625244]
[23.35162735 276.09143066]
[29.33531380 262.33660889]
[34.96431732 248.43284607]
[40.23493958 234.38932800]
[45.50556183 220.34579468]
[50.77618408 206.30227661]
[56.04680634 192.25875854]
[53.27492142 177.62434387]
[65.36788177 167.42283630]
[70.63850403 153.37931824]
[75.90912628 139.33578491]
[81.17974854 125.29226685]
[86.45037079 111.24874115]
[81.81511688 96.98289490]
[69.29651642 88.71943665]
[56.77791977 80.45598602]
[44.25932312 72.19252777]
[31.74072266 63.92907333]
[19.22212410 55.66561890]
[-18.30218315 81.39746094]
[-32.16955948 75.67943573]
[-41.27318192 75.30452728]
[-46.17733383 69.79814911]
[-59.97024918 63.90277481]
[-73.76316833 58.00740051]
[-87.55608368 52.11202240]
[-102.92127228 56.72620392]
[-116.02622986 47.47204208]
[-116.81796265 31.44853592]
[-104.68911743 20.94754982]
[-88.94390869 24.02454185]
[-81.66070557 38.31910706]
[-67.86779022 44.21448135]
[-54.07487488 50.10985947]
[-40.28195953 56.00523376]
[-26.45152855 61.81205750]
[-12.58415222 67.53009033]
[-8.21475506 61.43432236]
[-14.40381908 47.77066422]
[0.52403855 49.24278641]
[4.89343548 43.14702225]
[-4.97564554 31.85095024]
[-14.84472656 20.55487823]
[-24.71380806 9.25880527]
[-40.39920425 4.47337198]
[-43.83348465 -11.56214333]
[-31.48375320 -22.35177803]
[-16.05435753 -16.79607964]
[-13.41773510 -0.61027551]
[-3.54865432 10.68579674]
[6.32042646 21.98186874]
[16.18950844 33.27793884]
[27.48558044 43.14702225]
[40.00417709 51.41047668]
[52.52277756 59.67393112]
[65.04137421 67.93738556]
[77.55997467 76.20084381]
[90.07857513 84.46429443]
[103.24166107 77.27172089]
[103.04932404 62.27295685]
[102.85698700 47.27418900]
[102.66464996 32.27542496]
[93.99741364 22.74331093]
[94.13350677 10.26116276]
[102.45558929 1.50174963]
[102.45558929 -13.49825001]
[102.45558929 -28.49825096]
[102.45558929 -43.49824905]
[93.91129303 -53.14071274]
[94.20742798 -65.62009430]
[102.64114380 -74.27207184]
[102.83348083 -89.27084351]
[92.71046448 -101.71689606]
[96.27022552 -117.36003113]
[110.78201294 -124.20017242]
[125.11362457 -116.99015045]
[128.27108765 -101.26087952]
[117.83224487 -89.07850647]
[117.63990784 -74.07973480]
[127.02741241 -59.24134445]
[117.45558929 -43.49824905]
[117.45558929 -28.49825096]
[117.45558929 -13.49825001]
[117.45558929 1.50174963]
[127.03258514 16.21855164]
[117.66342163 32.08308792]
[117.85575867 47.08185196]
[118.04809570 62.08061981]
[118.24043274 77.07938385]
[124.07406616 81.79306030]
[138.07191467 76.40229034]
[135.74133301 91.22040558]
[141.57496643 95.93407440]
[156.27966309 92.97235870]
[170.98437500 90.01064301]
[185.68907166 87.04891968]
[200.39376831 84.08720398]
[208.16763306 79.33499146]
[215.30595398 81.18305969]
[230.04742432 78.41013336]
[244.78889465 75.63720703]
[259.53036499 72.86428833]
[274.27182007 70.09136200]
[275.44793701 55.05633926]
[280.47198486 40.84913635]
[288.99575806 28.43621063]
[300.43334961 18.66030884]
[314.00115967 12.18325615]
[328.77172852 9.44114971]
[343.73712158 10.61500549]
[357.87762451 15.61881828]
[370.23138428 24.10583305]
[379.95965576 35.49256516]
[386.40386963 48.99892426]
[401.14532471 46.22600174]
[413.27731323 36.07093430]
[427.21554565 41.32209778]
[441.95703125 38.54917145]
[456.69848633 35.77624893]
[471.43997192 33.00332642]
[486.01986694 29.47827148]
[500.39990234 25.21035767]
[511.28314209 12.94303894]
[527.29205322 16.49916649]
[531.95806885 32.22050095]
[520.48120117 43.93428421]
[504.66781616 39.59037781]
[490.28778076 43.85829163]
[503.99877930 49.94176483]
[511.60125732 62.87244797]
[510.25021362 77.81148529]
[500.45126343 89.16844177]
[485.87130737 92.69338989]
[471.96643066 87.06722260]
[463.94000244 74.39533997]
[464.79565430 59.41976547]
[474.21289062 47.74479675]
[459.47140503 50.51771927]
[444.72994995 53.29064178]
[429.98849487 56.06356430]
[418.91088867 66.02029419]
[403.91824341 60.96746826]
[389.17678833 63.74039459]
[388.08056641 78.66513062]
[383.15457153 92.80838013]
[374.72894287 105.20407104]
[363.37304688 115.00385284]
[349.85702515 121.53516388]
[335.09963989 124.34737396]
[320.10571289 123.24288177]
[305.89776611 118.29100037]
[293.44631958 109.82359314]
[283.60348511 98.41290283]
[277.04473877 84.83283234]
[262.30328369 87.60575867]
[247.56181335 90.37867737]
[232.82034302 93.15160370]
[218.07887268 95.92452240]
[203.35548401 98.79190826]
[188.65078735 101.75362396]
[173.94609070 104.71533966]
[159.24139404 107.67705536]
[144.53668213 110.63877869]
[100.49389648 116.51936340]
[95.22327423 130.56288147]
[89.95265198 144.60641479]
[84.68202972 158.64993286]
[79.41140747 172.69345093]
[81.80630493 188.33235168]
[70.09033203 197.52937317]
[64.81970978 211.57289124]
[59.54908752 225.61642456]
[54.27846527 239.65994263]
[49.00784302 253.70346069]
[49.85721588 257.90988159]
[49.38451385 261.78317261]
[47.85366058 264.95175171]
[45.62146378 267.16647339]
[43.09014893 268.32028198]
[37.10646439 282.07510376]
[31.12277794 295.82995605]
[25.13909149 309.58477783]
[29.12762070 321.83523560]
[23.87789154 333.16058350]
[12.69288445 337.73004150]
[6.53331947 351.40701294]
[0.37375432 365.08398438]
[1.76174355 380.84420776]
[-10.51941299 389.27166748]
[-16.67897797 402.94866943]
[-15.29098892 418.70886230]
[-27.57214546 427.13635254]
[-33.73171234 440.81332397]
[-39.89127731 454.49029541]
[-46.05084229 468.16726685]
[-52.21040726 481.84426880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[10 23]
[11 22]
[12 21]
[13 20]
[34 244]
[35 243]
[36 242]
[37 241]
[38 240]
[40 238]
[41 237]
[43 235]
[44 234]
[45 233]
[47 230]
[48 229]
[49 228]
[50 227]
[51 222]
[52 221]
[53 220]
[54 219]
[55 218]
[57 216]
[58 215]
[59 214]
[60 213]
[61 212]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[67 101]
[68 85]
[69 84]
[71 83]
[72 82]
[73 81]
[74 80]
[89 100]
[90 99]
[91 98]
[92 97]
[107 137]
[108 136]
[109 135]
[110 134]
[113 132]
[114 131]
[115 130]
[116 129]
[119 127]
[120 126]
[141 211]
[142 210]
[143 209]
[144 208]
[145 207]
[147 206]
[148 205]
[149 204]
[150 203]
[151 202]
[162 191]
[163 190]
[165 188]
[166 187]
[167 186]
[168 185]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
