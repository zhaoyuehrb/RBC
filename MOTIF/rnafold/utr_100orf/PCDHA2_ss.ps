%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCGGAGGAAUAAGAGAAGCAGCAGGACUUUAACAGAGACUAGAAUAUUUAAAUUUUUGCAAAACAUGCUCUUCUAAUUUGAUCAAAACAUUGAGGAUUGGUAAUGGCGUCUUCUAUCAGAAGGGGCCGAGGGGCCUGGACACGGCUGCUCUCGCUUCUGCUCCUCGCAGCCUGGGAGGUGGGGAGCGGCCAGCUCCGCUACU\
) } def
/len { sequence length } bind def

/coor [
[-3.63501906 284.59921265]
[-11.38656044 271.01806641]
[-8.54394054 255.64102173]
[3.55064201 245.72863770]
[3.55064201 230.72863770]
[3.55064201 215.72863770]
[3.55064201 200.72863770]
[3.55064201 185.72863770]
[3.55064201 170.72863770]
[3.55064201 155.72863770]
[-7.79237509 145.91355896]
[-22.63673782 148.06875610]
[-37.48109818 150.22396851]
[-52.32546234 152.37916565]
[-64.87075043 162.01901245]
[-78.57765961 156.19064331]
[-93.42201996 158.34585571]
[-108.26638794 160.50105286]
[-123.11074829 162.65626526]
[-135.65603638 172.29609680]
[-149.36294556 166.46772766]
[-164.20730591 168.62294006]
[-179.05166626 170.77815247]
[-193.89602661 172.93334961]
[-208.62692261 175.76196289]
[-223.21379089 179.25810242]
[-237.80067444 182.75425720]
[-252.38754272 186.25039673]
[-266.97442627 189.74653625]
[-281.56130981 193.24269104]
[-293.17800903 203.98338318]
[-307.35812378 199.42561340]
[-321.94500732 202.92175293]
[-336.53189087 206.41790771]
[-351.11877441 209.91404724]
[-365.70565796 213.41020203]
[-367.70971680 228.45506287]
[-375.01669312 241.75816345]
[-386.63842773 251.52032471]
[-401.00311279 256.42132568]
[-416.16809082 255.79835510]
[-430.08239746 249.73562622]
[-440.86425781 239.05311584]
[-447.05548096 225.19551086]
[-447.81875610 210.03695679]
[-443.05090332 195.62751770]
[-433.39669800 183.91595459]
[-420.16180420 176.48616028]
[-405.13610840 174.34294128]
[-390.35174561 177.77618408]
[-377.80816650 186.32153320]
[-369.20178223 198.82331848]
[-354.61489868 195.32717896]
[-340.02804565 191.83102417]
[-325.44116211 188.33488464]
[-310.85427856 184.83872986]
[-300.28091431 174.34809875]
[-285.05743408 178.65580750]
[-270.47058105 175.15966797]
[-255.88369751 171.66351318]
[-241.29681396 168.16737366]
[-226.70994568 164.67123413]
[-212.12306213 161.17507935]
[-224.29785156 152.41296387]
[-226.84957886 137.63160706]
[-218.31715393 125.29476166]
[-203.58619690 122.46649170]
[-191.09164429 130.76623535]
[-187.98780823 145.44160461]
[-196.05123901 158.08898926]
[-181.20687866 155.93377686]
[-166.36251831 153.77857971]
[-151.51815796 151.62336731]
[-140.03463745 142.13769531]
[-125.26595306 147.81190491]
[-110.42159271 145.65669250]
[-95.57723236 143.50149536]
[-80.73286438 141.34628296]
[-69.24935150 131.86061096]
[-54.48066711 137.53480530]
[-39.63630676 135.37960815]
[-24.79194260 133.22439575]
[-9.94758034 131.06919861]
[-19.42906189 116.24618530]
[-18.41837692 99.84665680]
[-8.66212559 88.10461426]
[-14.00575161 74.08870697]
[-19.34937668 60.07279968]
[-24.69300270 46.05689240]
[-37.74855423 36.13294983]
[-35.41379929 19.90085220]
[-20.09053612 14.05879211]
[-7.54202414 24.61657906]
[-10.67709541 40.71326828]
[-5.33346939 54.72917557]
[0.01015618 68.74507904]
[5.35378170 82.76099396]
[20.24204445 85.46215057]
[31.27885437 97.06055450]
[33.47478104 113.80710602]
[24.96512032 129.40670776]
[39.65138245 126.35487366]
[54.33764267 123.30303192]
[69.02390289 120.25119019]
[83.71016693 117.19934845]
[75.47380829 105.26947021]
[75.49879456 89.94918823]
[84.70755768 76.68912506]
[100.59484100 70.73001862]
[107.79719543 57.57228088]
[114.99954987 44.41454315]
[114.83876801 28.59415436]
[127.73688507 21.14513206]
[134.93923950 7.98739195]
[142.14158630 -5.17034674]
[149.34394836 -18.32808685]
[156.54629517 -31.48582458]
[163.74865723 -44.64356232]
[166.05018616 -61.44056702]
[182.82788086 -63.87886047]
[189.81541443 -48.43182755]
[176.90638733 -37.44121170]
[169.70404053 -24.28347015]
[162.50167847 -11.12573147]
[155.29933167 2.03200722]
[148.09698486 15.18974590]
[140.89462280 28.34748459]
[141.57055664 43.22674561]
[128.15728760 51.61689758]
[120.95493317 64.77463531]
[113.75257874 77.93237305]
[123.65345764 89.20058441]
[137.62841797 83.75075531]
[151.60336304 78.30092621]
[161.64935303 66.07846069]
[176.31802368 68.66292572]
[190.29298401 63.21309662]
[204.26792908 57.76326752]
[218.24288940 52.31343842]
[223.08366394 37.44397354]
[236.37710571 29.20879173]
[251.84648132 31.49629211]
[262.18759155 43.22638702]
[262.51773071 58.86048508]
[252.68096924 71.01663971]
[237.32194519 73.95509338]
[223.69271851 66.28839111]
[209.71775818 71.73822021]
[195.74281311 77.18804932]
[181.76785278 82.63787842]
[172.72145081 94.47054291]
[157.05319214 92.27588654]
[143.07824707 97.72571564]
[129.10328674 103.17554474]
[121.31803894 115.71205902]
[109.42491150 121.73355865]
[122.18169403 129.62434387]
[134.93847656 137.51513672]
[147.69525146 145.40592957]
[160.45202637 153.29670715]
[173.20881653 161.18750000]
[185.96559143 169.07829285]
[198.63456726 164.49980164]
[211.44012451 168.00372314]
[219.76533508 178.09437561]
[220.74290466 190.94430542]
[233.37846375 199.02778625]
[246.01402283 207.11126709]
[258.64956665 215.19474792]
[274.44406128 216.11396790]
[280.99551392 229.49035645]
[293.63107300 237.57383728]
[310.23187256 241.01626587]
[311.51953125 257.92123413]
[295.63165283 263.83834839]
[285.54760742 250.20939636]
[272.91204834 242.12591553]
[258.02133179 241.78488159]
[250.56610107 227.83030701]
[237.93054199 219.74682617]
[225.29498291 211.66334534]
[212.65942383 203.57986450]
[196.40419006 207.88786316]
[181.77388000 198.93138123]
[178.07479858 181.83506775]
[165.31802368 173.94427490]
[152.56124878 166.05349731]
[139.80445862 158.16270447]
[127.04768372 150.27191162]
[114.29090118 142.38111877]
[101.53412628 134.49034119]
[86.76200867 131.88562012]
[72.07574463 134.93745422]
[57.38948441 137.98928833]
[42.70322418 141.04113770]
[28.01696205 144.09297180]
[18.55064201 155.72863770]
[18.55064201 170.72863770]
[18.55064201 185.72863770]
[18.55064201 200.72863770]
[18.55064201 215.72863770]
[18.55064201 230.72863770]
[18.55064201 245.72863770]
[30.64522362 255.64102173]
[33.48784256 271.01806641]
[25.73630333 284.59921265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 83]
[12 82]
[13 81]
[14 80]
[16 78]
[17 77]
[18 76]
[19 75]
[21 73]
[22 72]
[23 71]
[24 70]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[86 97]
[87 96]
[88 95]
[89 94]
[101 196]
[102 195]
[103 194]
[104 193]
[105 192]
[109 131]
[110 130]
[111 129]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
[132 154]
[133 153]
[134 152]
[136 150]
[137 149]
[138 148]
[139 147]
[156 191]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[162 185]
[166 182]
[167 181]
[168 180]
[169 179]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
