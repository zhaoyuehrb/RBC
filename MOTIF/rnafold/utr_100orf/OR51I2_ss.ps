%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCCUCCAGCAAGUGCAACUGUUAGAAUUCUCCAAGUCAGAAGAUCUGACUCUGAAAAGUACCCUAAGUUUGUUUUGCUAUGGGGUUGUUCAAUGUCACUCACCCUGCAUUCUUCCUCCUGACUGGUAUCCCUGGUCUGGAGAGCUCUCACUCCUGGCUGUCAGGGCCCCUCUGCGUGA\
) } def
/len { sequence length } bind def

/coor [
[137.63725281 510.68179321]
[146.95088196 498.69760132]
[159.96678162 490.89050293]
[157.39039612 476.11340332]
[154.81401062 461.33633423]
[152.23762512 446.55923462]
[149.66123962 431.78216553]
[137.69613647 418.95965576]
[144.13627625 401.72119141]
[141.30520630 386.99078369]
[138.47415161 372.26034546]
[135.64308167 357.52993774]
[120.80619812 343.20294189]
[128.04417419 323.05084229]
[124.45444489 308.48672485]
[120.86470795 293.92257690]
[117.27497101 279.35845947]
[110.19850922 292.58432007]
[96.75830078 299.24472046]
[81.94829559 296.86483765]
[71.27142334 286.32897949]
[68.69486237 271.55194092]
[75.17598724 258.02435303]
[88.30661011 250.77268982]
[103.20781708 252.49140930]
[114.34309387 262.54238892]
[112.79232788 247.62277222]
[111.24156952 232.70315552]
[102.22993469 220.84399414]
[108.49906158 206.31785583]
[106.94830322 191.39822388]
[105.39754486 176.47860718]
[103.84678650 161.55899048]
[102.29602814 146.63935852]
[100.74526215 131.71974182]
[99.19450378 116.80011749]
[87.96684265 106.85327148]
[72.96907806 107.11218262]
[57.97131348 107.37109375]
[42.97354889 107.63000488]
[27.97578430 107.88891602]
[12.97801876 108.14781952]
[-2.01974654 108.40673065]
[-17.75215530 114.72556305]
[-28.17921066 101.35720825]
[-18.21979332 87.63692474]
[-2.27865624 93.40896606]
[12.71910954 93.15005493]
[27.71687508 92.89115143]
[42.71464157 92.63224030]
[57.71240616 92.37332916]
[72.71016693 92.11441803]
[87.70793915 91.85550690]
[73.53354645 80.48940277]
[60.50285721 67.71080017]
[52.41305923 55.07928467]
[44.32325745 42.44777298]
[36.23345566 29.81625748]
[24.31647301 29.57630157]
[14.10557938 23.66337967]
[8.08944416 13.65274239]
[7.66917801 2.10108709]
[12.83363247 -8.10602760]
[5.18464375 -21.00924301]
[-2.46434546 -33.91245651]
[-10.11333466 -46.81567383]
[-17.76232338 -59.71888733]
[-25.41131210 -72.62210083]
[-33.17137909 -85.45882416]
[-41.04194641 -98.22808838]
[-48.91251373 -110.99736023]
[-64.40950775 -113.08952332]
[-74.89778900 -124.68822479]
[-75.42511749 -140.31690979]
[-65.74249268 -152.59620667]
[-50.42176819 -155.72817993]
[-36.69691086 -148.23402405]
[-31.04838371 -133.65225220]
[-36.14324951 -118.86792755]
[-28.27268028 -106.09865570]
[-20.40211296 -93.32939148]
[-14.19977188 -89.27451324]
[-12.50809765 -80.27109528]
[-4.85910797 -67.36788177]
[2.78988099 -54.46466446]
[10.43887043 -41.56144714]
[18.08785820 -28.65823174]
[25.73684883 -15.75501633]
[43.69826889 -12.31740379]
[53.63554764 3.41277361]
[48.86497116 21.72645760]
[56.95476913 34.35797119]
[65.04457092 46.98948288]
[73.13436890 59.62099838]
[88.09863281 58.58612823]
[94.37265015 44.96127319]
[100.64666748 31.33641815]
[106.92068481 17.71156120]
[97.98557281 5.21918583]
[96.50970459 -10.06863213]
[102.89007568 -24.03954697]
[115.41039276 -32.93545151]
[130.70275879 -34.36339569]
[144.65361023 -27.93926430]
[153.51022339 -15.39112091]
[154.89022827 -0.09435107]
[148.42240906 13.83629036]
[135.84655762 22.65353203]
[120.54553986 23.98557854]
[114.27152252 37.61043549]
[107.99750519 51.23529053]
[101.72348785 64.86014557]
[106.34887695 70.76402283]
[118.15663147 61.51324081]
[129.96438599 52.26245880]
[141.77214050 43.01167297]
[153.58004761 33.76108551]
[162.83042908 45.56914520]
[151.02291870 54.81942749]
[139.21516418 64.07020569]
[127.40741730 73.32099152]
[115.59966278 82.57177734]
[120.22505188 88.47565460]
[134.95545959 85.64458466]
[149.68588257 82.81352234]
[164.41629028 79.98246002]
[179.14671326 77.15139771]
[193.87712097 74.32033539]
[204.03045654 61.89900589]
[220.06994629 62.23670197]
[229.69148254 75.07436371]
[225.51423645 90.56404114]
[210.74263000 96.82337952]
[196.70819092 89.05074310]
[181.97776794 91.88180542]
[167.24736023 94.71287537]
[152.51693726 97.54393768]
[137.78652954 100.37500000]
[123.05611420 103.20606232]
[114.11412811 115.24935913]
[115.66488647 130.16897583]
[117.21564484 145.08860779]
[118.76640320 160.00822449]
[120.31716919 174.92784119]
[121.86792755 189.84747314]
[123.41868591 204.76708984]
[132.54124451 217.69340515]
[126.16119385 231.15238953]
[127.71195221 246.07200623]
[129.26271057 260.99163818]
[131.83909607 275.76870728]
[135.42883301 290.33285522]
[139.01856995 304.89697266]
[142.60830688 319.46109009]
[151.29698181 323.24075317]
[157.17317200 330.49722290]
[159.00866699 339.51174927]
[156.51351929 348.22314453]
[150.37350464 354.69888306]
[153.20455933 369.42929077]
[156.03562927 384.15969849]
[158.86668396 398.89013672]
[169.09848022 406.77114868]
[171.14195251 419.11712646]
[164.43832397 429.20578003]
[167.01470947 443.98284912]
[169.59109497 458.75994873]
[172.16748047 473.53701782]
[174.74386597 488.31411743]
[189.63381958 491.25582886]
[202.45352173 499.38107300]
[211.46923828 511.59094238]
[215.46162415 526.23419189]
[213.89077759 541.33050537]
[206.96913147 554.83807373]
[195.63278198 564.93023682]
[181.41487122 570.24206543]
[166.23825073 570.05517578]
[152.15545654 564.39483643]
[141.07104492 554.02661133]
[134.48411560 540.35266113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[9 162]
[10 161]
[11 160]
[12 159]
[14 154]
[15 153]
[16 152]
[17 151]
[26 150]
[27 149]
[28 148]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[55 94]
[56 93]
[57 92]
[58 91]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[69 81]
[70 80]
[71 79]
[95 112]
[96 111]
[97 110]
[98 109]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
