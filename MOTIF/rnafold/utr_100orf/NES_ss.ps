%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUACUCCCACCCCGCCCCGCCCCGUCAUUGUCCCCGUCGGUCUCUUUUCUCUUCCGUCCUAAAAGCUCUGCGAGCCGCUCCCUUCUCCCGGUGCCCCGCGUCUGUCCAUCCUCAGUGGGUCAGACGAGCAGGAUGGAGGGCUGCAUGGGGGAGGAGUCGUUUCAGAUGUGGGAGCUCAAUCGGCGCCUGGAGGCCUACCUGGCCCGGGUCAAGGCGCUGGAGGAGCAGAAUG\
) } def
/len { sequence length } bind def

/coor [
[445.76217651 659.22723389]
[446.98461914 644.27709961]
[454.50503540 631.29852295]
[466.86773682 622.80364990]
[481.67984009 620.43676758]
[496.07708740 624.65759277]
[486.13024902 613.42993164]
[476.18338013 602.20227051]
[466.23654175 590.97460938]
[456.28970337 579.74694824]
[446.34286499 568.51928711]
[433.34613037 574.11126709]
[419.23657227 575.42041016]
[405.39102173 572.30554199]
[393.16464233 565.05798340]
[383.75836182 554.37426758]
[378.10070801 541.28906250]
[376.75650024 527.07513428]
[379.87011719 513.11944580]
[387.15045166 500.78793335]
[377.35522461 489.42773438]
[364.22015381 491.76773071]
[351.54095459 487.27963257]
[342.66137695 477.03363037]
[339.97885132 463.63302612]
[344.29800415 450.55303955]
[334.65618896 439.06234741]
[323.36404419 440.55511475]
[312.63980103 436.37490845]
[305.18307495 427.45010376]
[302.93032837 415.91842651]
[306.55313110 404.61538696]
[297.22326660 392.86999512]
[287.89343262 381.12460327]
[278.56359863 369.37921143]
[269.23376465 357.63381958]
[259.90393066 345.88842773]
[250.57409668 334.14303589]
[241.16561890 322.46054077]
[231.67893982 310.84146118]
[222.19226074 299.22241211]
[212.70558167 287.60333252]
[203.21890259 275.98425293]
[193.73222351 264.36517334]
[194.09611511 279.36077881]
[186.37712097 292.22222900]
[172.97285461 298.95462036]
[158.04681396 297.46682739]
[146.23522949 288.22094727]
[141.20690918 274.08886719]
[144.52369690 259.46014404]
[155.15538025 248.87869263]
[169.79962158 245.63119507]
[183.90560913 250.72482300]
[175.88862610 238.04696655]
[167.87164307 225.36911011]
[159.85464478 212.69126892]
[151.83766174 200.01341248]
[143.82067871 187.33555603]
[135.80369568 174.65771484]
[127.78670502 161.97985840]
[125.10173035 161.22857666]
[122.55001068 159.37699890]
[120.54900360 156.46969604]
[119.49268341 152.70031738]
[119.70092773 148.39927673]
[112.37600708 135.30937195]
[105.05107880 122.21947479]
[97.72615051 109.12957764]
[84.90626526 114.63649750]
[68.09863281 106.91102600]
[56.87097168 96.96417999]
[45.64331055 87.01734161]
[34.16209412 90.02821350]
[22.76794624 87.15972900]
[14.25627232 79.23468781]
[10.65773201 68.30152893]
[12.75445747 57.10578918]
[1.79789662 46.86109543]
[-13.56668377 43.08747482]
[-17.57874107 28.74339104]
[-28.53530312 18.49869728]
[-43.74515533 21.57115746]
[-57.84209442 15.08610153]
[-65.40555573 1.53716683]
[-63.52724075 -13.86580563]
[-52.92939377 -25.20005798]
[-37.68710709 -28.10733986]
[-23.66134834 -21.46973991]
[-16.24530983 -7.83955383]
[-18.29060745 7.54213619]
[-7.33404684 17.78683090]
[7.24684715 20.82768440]
[12.04259109 35.90453339]
[22.99915314 46.14923096]
[41.23731613 44.44451904]
[55.15779877 56.83718491]
[55.59014893 75.78968048]
[66.81781006 85.73651886]
[78.04547119 95.68336487]
[91.41970062 88.89145660]
[90.01208496 73.95764923]
[88.60446930 59.02383804]
[87.19685364 44.09003067]
[85.78923798 29.15622139]
[84.28141022 14.23219967]
[82.67343140 -0.68136513]
[81.06545258 -15.59492970]
[79.45748138 -30.50849342]
[77.84950256 -45.42205811]
[66.30680847 -56.56412888]
[67.96465302 -72.52129364]
[81.55129242 -81.05258179]
[96.64421082 -75.61351776]
[101.66541290 -60.37648773]
[92.76306152 -47.03003693]
[94.37104034 -32.11647034]
[95.97901917 -17.20290756]
[97.58699799 -2.28934264]
[99.19497681 12.62422180]
[103.03082275 18.92741394]
[100.72304535 27.74860764]
[102.13066101 42.68241501]
[103.53827667 57.61622238]
[104.94589233 72.55003357]
[106.35350800 87.48384094]
[110.81605530 101.80464935]
[118.14097595 114.89455414]
[125.46590424 127.98445129]
[132.79083252 141.07435608]
[140.46455383 153.96287537]
[148.48153687 166.64071655]
[156.49853516 179.31857300]
[164.51551819 191.99642944]
[172.53250122 204.67427063]
[180.54948425 217.35212708]
[188.56648254 230.02998352]
[196.58346558 242.70782471]
[205.35128784 254.87849426]
[214.83798218 266.49755859]
[224.32466125 278.11663818]
[233.81134033 289.73571777]
[243.29801941 301.35479736]
[252.78469849 312.97387695]
[260.62298584 317.63226318]
[262.31948853 324.81320190]
[271.64932251 336.55859375]
[280.97915649 348.30398560]
[290.30899048 360.04937744]
[299.63882446 371.79476929]
[308.96865845 383.54016113]
[318.29849243 395.28552246]
[337.20046997 396.73455811]
[348.82806396 411.30017090]
[346.14685059 429.42056274]
[355.78866577 440.91122437]
[372.65209961 439.50451660]
[386.88659668 448.34371948]
[392.98104858 463.77307129]
[388.71542358 479.63253784]
[398.51065063 490.99270630]
[413.38513184 485.26333618]
[429.29547119 484.97705078]
[444.31570435 490.15008545]
[456.63388062 500.13894653]
[464.77072144 513.72039795]
[467.75720215 529.24121094]
[465.24993896 544.81939697]
[457.57052612 558.57244873]
[467.51736450 569.80010986]
[477.46420288 581.02777100]
[487.41104126 592.25543213]
[497.35791016 603.48309326]
[507.30474854 614.71075439]
[518.12280273 625.10162354]
[529.74182129 634.58825684]
[541.36090088 644.07495117]
[552.97998047 653.56164551]
[568.49395752 652.16375732]
[580.14221191 661.95013428]
[581.37927246 676.74896240]
[592.99835205 686.23565674]
[604.61743164 695.72229004]
[616.23651123 705.20898438]
[627.85559082 714.69567871]
[639.47467041 724.18237305]
[651.09375000 733.66900635]
[662.71282959 743.15570068]
[674.33190918 752.64239502]
[689.91497803 755.37689209]
[694.88018799 769.41955566]
[706.49926758 778.90625000]
[718.36883545 788.07757568]
[730.48034668 796.92687988]
[742.59191895 805.77618408]
[754.70343018 814.62554932]
[770.71301270 813.58911133]
[781.39801025 825.55609131]
[778.56195068 841.34649658]
[764.38031006 848.84722900]
[749.73205566 842.30438232]
[745.85412598 826.73706055]
[733.74255371 817.88775635]
[721.63104248 809.03839111]
[709.51953125 800.18908691]
[706.74621582 800.47595215]
[703.69293213 799.69049072]
[700.76428223 797.72082520]
[698.39788818 794.60247803]
[697.01257324 790.52532959]
[685.39349365 781.03863525]
[670.64147949 778.98266602]
[664.84521484 764.26147461]
[653.22613525 754.77478027]
[641.60705566 745.28808594]
[629.98797607 735.80145264]
[618.36889648 726.31475830]
[606.74981689 716.82806396]
[595.13073730 707.34136963]
[583.51165771 697.85467529]
[571.89263916 688.36804199]
[557.14538574 690.11608887]
[545.22686768 680.66076660]
[543.49328613 665.18072510]
[531.87426758 655.69403076]
[520.25518799 646.20733643]
[508.63607788 636.72070312]
[513.43286133 650.93304443]
[511.66574097 665.82855225]
[503.67678833 678.52410889]
[491.01229858 686.56219482]
[476.12371826 688.38708496]
[461.89288330 683.64538574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[20 161]
[21 160]
[26 156]
[27 155]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 144]
[40 143]
[41 142]
[42 141]
[43 140]
[44 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[66 130]
[67 129]
[68 128]
[69 127]
[71 100]
[72 99]
[73 98]
[78 95]
[79 94]
[81 92]
[82 91]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[175 227]
[176 226]
[177 225]
[178 224]
[181 221]
[182 220]
[183 219]
[184 218]
[185 217]
[186 216]
[187 215]
[188 214]
[189 213]
[191 211]
[192 210]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
