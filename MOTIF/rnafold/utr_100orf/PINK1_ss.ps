%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGGCACCGCCCCAAGUUUGUUGUGACCGGCGGGGGACGCCGGUGGUGGCGGCAGCGGCGGCUGCGGGGGCACCGGGCCGCGGCGCCACCAUGGCGGUGCGACAGGCGCUGGGCCGCGGCCUGCAGCUGGGUCGAGCGCUGCUGCUGCGCUUCACGGGCAAGCCCGGCCGGGCCUACGGCUUGGGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[-63.98043060 1172.21020508]
[-72.87065887 1177.28076172]
[-75.51503754 1192.04589844]
[-69.44168091 1207.27893066]
[-79.80829620 1219.98583984]
[-95.95059967 1217.09472656]
[-101.26277161 1201.57983398]
[-90.28010559 1189.40148926]
[-87.63572693 1174.63635254]
[-95.52294922 1156.99035645]
[-82.32141876 1141.76770020]
[-80.15408325 1126.92517090]
[-77.98674774 1112.08251953]
[-75.81941223 1097.23986816]
[-73.65207672 1082.39733887]
[-71.48474121 1067.55468750]
[-69.31740570 1052.71215820]
[-67.15007019 1037.86950684]
[-64.98273468 1023.02691650]
[-62.81539917 1008.18432617]
[-60.64805984 993.34173584]
[-58.48072433 978.49914551]
[-60.62798691 971.41680908]
[-56.15705872 963.43566895]
[-53.75088882 948.62988281]
[-64.88117981 940.70349121]
[-71.53991699 928.69573975]
[-72.37653351 914.92449951]
[-67.17066193 902.07623291]
[-56.88629150 892.68212891]
[-43.49380493 888.61926270]
[-40.84942627 873.85418701]
[-38.20504761 859.08911133]
[-35.56066895 844.32403564]
[-32.91629028 829.55895996]
[-38.28869629 815.66699219]
[-28.23971939 803.44702148]
[-25.59534073 788.68194580]
[-22.95096207 773.91687012]
[-33.38483047 763.32098389]
[-35.60497665 748.43695068]
[-28.55268860 734.94183350]
[-14.74672890 728.10797119]
[-12.10235023 713.34289551]
[-9.45797253 698.57781982]
[-14.83037567 684.68585205]
[-4.78139925 672.46582031]
[-2.13702106 657.70080566]
[0.50735712 642.93572998]
[3.15173531 628.17065430]
[-7.03803730 614.79882812]
[-4.35754108 597.86022949]
[10.01798058 587.90325928]
[12.42414951 573.09753418]
[14.83031940 558.29174805]
[17.23648834 543.48602295]
[19.64265823 528.68023682]
[22.04882622 513.87451172]
[24.45499611 499.06872559]
[26.86116600 484.26296997]
[29.26733398 469.45721436]
[31.67350388 454.65148926]
[34.07967377 439.84573364]
[36.48584366 425.03997803]
[34.45295715 417.92391968]
[39.05188370 410.01586914]
[41.69626236 395.25079346]
[39.77827835 388.10293579]
[44.50400543 380.26998901]
[47.38590622 365.54943848]
[50.26780701 350.82888794]
[42.66588593 333.05813599]
[56.11094284 318.05007935]
[58.51711273 303.24432373]
[60.92328262 288.43856812]
[52.03579712 276.54116821]
[54.26507950 261.49176025]
[66.80442810 252.25041199]
[69.21060181 237.44465637]
[71.61676788 222.63890076]
[74.02294159 207.83314514]
[76.42910767 193.02738953]
[78.83527374 178.22163391]
[81.24144745 163.41587830]
[83.64761353 148.61012268]
[86.05378723 133.80438232]
[88.45995331 118.99861908]
[90.86612701 104.19287109]
[91.22857666 89.19725037]
[89.54053497 74.29253387]
[87.85249329 59.38782120]
[86.16445160 44.48310471]
[78.37404633 29.42502022]
[90.68704987 17.77057266]
[105.29461670 26.37611389]
[101.06916046 42.79506302]
[102.75720978 57.69977570]
[104.44525146 72.60449219]
[106.13329315 87.50920105]
[121.06327057 88.95691681]
[125.58345795 74.65419006]
[130.10365295 60.35146713]
[134.62384033 46.04874420]
[139.14402771 31.74602127]
[133.05134583 16.90490150]
[140.98146057 2.95882750]
[156.85104370 0.60603511]
[168.48632812 11.65138435]
[166.96171570 27.62182808]
[153.44674683 36.26620865]
[148.92655945 50.56893158]
[144.40637207 64.87165833]
[139.88618469 79.17437744]
[135.36599731 93.47710419]
[126.50899506 104.42349243]
[115.49805450 108.73171234]
[105.67187500 106.59903717]
[103.26570892 121.40479279]
[100.85954285 136.21054077]
[98.45336914 151.01629639]
[96.04720306 165.82205200]
[93.64102936 180.62780762]
[91.23486328 195.43356323]
[88.82868958 210.23931885]
[86.42252350 225.04507446]
[84.01635742 239.85083008]
[81.61018372 254.65657043]
[90.57778168 267.39312744]
[87.92666626 282.37399292]
[75.72903442 290.84472656]
[73.32286835 305.65048218]
[70.91669464 320.45623779]
[77.78350830 328.91329956]
[78.83320618 339.53558350]
[73.95912170 348.78414917]
[64.98835754 353.71078491]
[62.10646057 368.43133545]
[59.22455978 383.15188599]
[56.46133041 397.89517212]
[53.81695175 412.66024780]
[51.29159546 427.44613647]
[48.88542557 442.25189209]
[46.47925949 457.05764771]
[44.07308960 471.86340332]
[41.66691971 486.66915894]
[39.26074982 501.47491455]
[36.85457993 516.28063965]
[34.44841003 531.08642578]
[32.04224396 545.89215088]
[29.63607407 560.69793701]
[27.22990417 575.50366211]
[24.82373428 590.30944824]
[33.90660477 600.26593018]
[35.56818008 613.44390869]
[29.42373657 624.99957275]
[17.91680527 630.81500244]
[15.27242661 645.58007812]
[12.62804794 660.34515381]
[9.98367023 675.11022949]
[15.16693020 690.05828857]
[5.30709696 701.22216797]
[2.66271877 715.98724365]
[0.01834058 730.75231934]
[10.59438515 741.95294189]
[12.52467632 757.05682373]
[5.27684832 770.24517822]
[-8.18589306 776.56121826]
[-10.83027172 791.32629395]
[-13.47464943 806.09136963]
[-8.29138947 821.03942871]
[-18.15122223 832.20336914]
[-20.79560089 846.96844482]
[-23.43997955 861.73345947]
[-26.08435631 876.49853516]
[-28.72873497 891.26361084]
[-15.98539066 901.78930664]
[-10.31781101 917.21551514]
[-13.18271732 933.30297852]
[-23.70571709 945.68121338]
[-38.94513321 951.03607178]
[-41.35130310 965.84185791]
[-43.63813019 980.66650391]
[-45.80546570 995.50909424]
[-47.97280121 1010.35168457]
[-50.14013672 1025.19433594]
[-52.30747223 1040.03686523]
[-54.47480774 1054.87951660]
[-56.64214325 1069.72204590]
[-58.80947876 1084.56469727]
[-60.97681427 1099.40722656]
[-63.14414978 1114.24987793]
[-65.31148529 1129.09240723]
[-67.47882080 1143.93505859]
[-60.47665787 1152.28039551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[24 181]
[25 180]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[37 169]
[38 168]
[39 167]
[43 163]
[44 162]
[45 161]
[47 159]
[48 158]
[49 157]
[50 156]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[66 140]
[67 139]
[69 138]
[70 137]
[71 136]
[73 132]
[74 131]
[75 130]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 99]
[90 98]
[91 97]
[92 96]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
