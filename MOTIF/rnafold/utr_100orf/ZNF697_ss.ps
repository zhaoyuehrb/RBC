%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGACCACCGAAGGGGGCAUCAGAGACCCUCGGAGAAACCAAGCCCAGGGAGGAGCUUGGAAGGCAAGGAGAAGGGAUUCCUGGUCACCUCCCUUGCUCUUUUCUUCCUGGAUGAAACAAGAAGAUAAUCAGGGUGUCUGUGCACACCAGGACUCAGAAGACAAAGGGAUGGGUUCUGAUUUUGAGGACUCUGAGGACAGGGAAGGGGACC\
) } def
/len { sequence length } bind def

/coor [
[271.17825317 555.99157715]
[270.52090454 541.00598145]
[267.08843994 534.46331787]
[269.96508789 525.79693604]
[269.52676392 510.80334473]
[256.81005859 499.79565430]
[255.97427368 482.65899658]
[268.02465820 469.97601318]
[267.36730957 454.99041748]
[255.81132507 439.48513794]
[265.39767456 421.74975586]
[264.30276489 406.78976440]
[252.89723206 397.27926636]
[251.57369995 382.12332153]
[261.62652588 370.22463989]
[260.53158569 355.26464844]
[259.43667603 340.30468750]
[258.34173584 325.34469604]
[232.82983398 303.09152222]
[238.67660522 274.95407104]
[228.83111572 263.63742065]
[218.98564148 252.32077026]
[212.22586060 249.33857727]
[209.08045959 240.76608276]
[199.40138245 229.30677795]
[189.72230530 217.84748840]
[180.04322815 206.38818359]
[165.91975403 201.65780640]
[162.92582703 186.12246704]
[153.24674988 174.66316223]
[143.56767273 163.20387268]
[133.88859558 151.74456787]
[124.20952606 140.28526306]
[114.30526733 145.28929138]
[103.39360046 147.86952209]
[92.06509399 147.83074951]
[80.94593811 145.12107849]
[70.66331482 139.83770752]
[61.81004715 132.22447205]
[54.91049576 122.66099548]
[50.38965225 111.64395905]
[48.54724884 99.76140594]
[33.55725479 100.30923462]
[18.56726265 100.85707092]
[3.57727051 101.40489960]
[-11.41272259 101.95272827]
[-26.40271568 102.50055695]
[-41.38830566 103.15789032]
[-56.36869431 103.92469025]
[-68.14221191 114.82257080]
[-83.98090363 112.27001953]
[-91.73467255 98.22514343]
[-85.45549774 83.46195984]
[-69.96022034 79.30552673]
[-57.13549042 88.94429779]
[-42.15510559 88.17750549]
[-35.63771057 84.69731140]
[-26.95054626 87.51056671]
[-11.96055222 86.96273804]
[3.02944016 86.41490173]
[18.01943207 85.86707306]
[33.00942612 85.31924438]
[47.99942017 84.77141571]
[54.16714096 71.09811401]
[44.65653610 59.49861145]
[35.14593124 47.89910889]
[25.55083656 36.36940384]
[15.87176132 24.91010475]
[6.19268703 13.45080566]
[-3.48638797 1.99150813]
[-13.16546249 -9.46778965]
[-22.84453773 -20.92708778]
[-30.77022171 -25.46192932]
[-32.57983398 -32.62526703]
[-42.09043884 -44.22476578]
[-49.94901657 -48.87493134]
[-51.65377045 -56.06394577]
[-60.99387360 -67.80117035]
[-70.41947937 -79.46984863]
[-79.93007660 -91.06935120]
[-89.44068146 -102.66884613]
[-98.95128632 -114.26834869]
[-113.66957092 -122.68312836]
[-109.65806580 -139.15565491]
[-92.71879578 -139.86097717]
[-87.35178375 -123.77895355]
[-77.84117889 -112.17945099]
[-68.33058167 -100.57994843]
[-58.81997681 -88.98045349]
[-52.15021896 -85.80201721]
[-49.25664520 -77.14127350]
[-39.91654205 -65.40404510]
[-30.49093819 -53.73537064]
[-20.98033524 -42.13586807]
[-11.38523960 -30.60616302]
[-1.70616484 -19.14686394]
[7.97290993 -7.68756676]
[17.65198517 3.77173114]
[27.33106041 15.23102951]
[37.01013565 26.69032669]
[43.72562027 29.77096558]
[46.74543381 38.38850403]
[56.25603485 49.98800659]
[65.76663971 61.58750534]
[85.20431519 53.04946136]
[105.50372314 53.32331467]
[109.61486816 38.89769363]
[113.72601318 24.47207451]
[117.83715820 10.04645634]
[121.94830322 -4.37916327]
[118.28958130 -19.77150917]
[129.21884155 -29.89081764]
[133.32998657 -44.31643677]
[124.41528320 -57.16408157]
[125.89599609 -72.73139954]
[137.07298279 -83.66798401]
[152.66882324 -84.80991364]
[165.31962585 -75.61800385]
[169.05206299 -60.43238831]
[162.10382080 -46.42325974]
[147.75561523 -40.20529175]
[143.64447021 -25.77967262]
[147.59724426 -11.41914272]
[136.37391663 -0.26801828]
[132.26277161 14.15760136]
[128.15162659 28.58321953]
[124.04048920 43.00883865]
[119.92934418 57.43445969]
[131.86123657 65.44763184]
[140.81353760 76.69207001]
[145.94905090 90.11621094]
[146.78750610 104.46466064]
[143.25050354 118.39558411]
[135.66882324 130.60620117]
[145.34790039 142.06549072]
[155.02697754 153.52479553]
[164.70603943 164.98408508]
[174.38511658 176.44338989]
[189.20091248 181.99340820]
[191.50253296 196.70910645]
[201.18161011 208.16841125]
[210.86067200 219.62771606]
[220.53974915 231.08700562]
[230.30229187 242.47528076]
[240.14776611 253.79193115]
[249.99325562 265.10858154]
[260.02130127 260.71237183]
[271.78622437 260.70202637]
[283.32723999 265.71380615]
[292.48095703 275.50143433]
[297.27630615 288.88961792]
[312.13201904 290.96514893]
[326.98773193 293.04067993]
[341.84344482 295.11624146]
[356.69915771 297.19177246]
[371.55487061 299.26730347]
[386.41058350 301.34283447]
[401.26626587 303.41836548]
[416.12197876 305.49392700]
[424.14575195 292.55023193]
[436.74417114 283.99453735]
[451.73443604 281.30911255]
[466.51943970 284.95925903]
[478.53756714 294.31259155]
[485.70663452 307.74853516]
[486.78451538 322.93923950]
[481.58447266 337.25286865]
[471.00747681 348.20944214]
[456.88601685 353.91070557]
[441.66674805 353.36886597]
[427.98648071 346.67782593]
[418.21542358 334.99679565]
[414.04644775 320.34963989]
[399.19073486 318.27407837]
[384.33502197 316.19854736]
[369.47930908 314.12301636]
[354.62359619 312.04748535]
[339.76791382 309.97195435]
[324.91220093 307.89639282]
[310.05648804 305.82086182]
[295.20077515 303.74533081]
[289.72601318 308.87142944]
[301.76806641 317.81509399]
[316.61788940 319.93231201]
[326.04998779 331.59573364]
[325.01370239 346.55987549]
[314.06396484 356.81185913]
[299.06402588 356.86193848]
[288.04605103 346.68331909]
[286.90957642 331.72732544]
[278.77648926 319.12365723]
[273.30172729 324.24975586]
[274.39666748 339.20974731]
[275.49157715 354.16973877]
[276.58651733 369.12973022]
[288.26467896 379.43789673]
[289.16195679 394.62503052]
[279.26272583 405.69485474]
[280.35766602 420.65484619]
[288.98403931 427.27386475]
[292.47332764 437.33987427]
[289.90213013 447.45220947]
[282.35290527 454.33309937]
[283.01022339 469.31869507]
[293.92245483 477.21105957]
[298.23468018 489.76364136]
[294.58489990 502.32208252]
[284.52038574 510.36505127]
[284.95867920 525.35864258]
[285.50650024 540.34863281]
[286.16384888 555.33422852]
[295.42938232 568.86499023]
[288.10110474 583.53564453]
[271.71771240 584.25433350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[4 209]
[5 208]
[8 204]
[9 203]
[11 199]
[12 198]
[15 195]
[16 194]
[17 193]
[18 192]
[20 146]
[21 145]
[22 144]
[24 143]
[25 142]
[26 141]
[27 140]
[29 138]
[30 137]
[31 136]
[32 135]
[33 134]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 56]
[49 55]
[64 104]
[65 103]
[66 102]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[74 94]
[75 93]
[77 92]
[78 91]
[79 89]
[80 88]
[81 87]
[82 86]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[112 122]
[113 121]
[151 181]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
