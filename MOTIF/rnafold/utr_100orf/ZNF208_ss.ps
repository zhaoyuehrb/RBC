%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUGUCUCUCGCUGCAGCCGGAGGUCAAGGUCUCGUCCUUACUGCUGUGUGUCCUCUGCUCCUAGAGUCCCAGCCUCUGUGGCCCUAUGACCUGCAGGUAUUGGGAGAUCCACAACUAAGUCGCCAGGACCCCCUGGAAGCCUAGAAAUGGGAUCAUUGACAUUUAGGGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAAUGCCUGGACACUGCACAGCAGAAUUUAUAUAGAAAUGUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-35.91372299 743.19866943]
[-43.39581680 742.68072510]
[-49.61145020 756.33233643]
[-55.82708359 769.98394775]
[-62.04271698 783.63549805]
[-68.25835419 797.28710938]
[-74.38808441 810.97747803]
[-80.43168640 824.70611572]
[-86.47528076 838.43469238]
[-92.51887512 852.16333008]
[-98.56247711 865.89196777]
[-97.04115295 881.63983154]
[-109.25054932 890.17095947]
[-115.29415131 903.89959717]
[-112.97476196 920.13385010]
[-126.03969574 930.04547119]
[-141.04887390 923.43811035]
[-142.56213379 907.10894775]
[-129.02276611 897.85595703]
[-122.97917175 884.12738037]
[-124.93276215 869.36145020]
[-112.29109192 859.84832764]
[-106.24749756 846.11975098]
[-100.20389557 832.39111328]
[-94.16030121 818.66247559]
[-88.11670685 804.93389893]
[-88.29776001 797.56457520]
[-81.90994263 791.07147217]
[-75.69430542 777.41986084]
[-69.47867584 763.76831055]
[-63.26303864 750.11669922]
[-57.04740524 736.46508789]
[-64.29979706 728.35949707]
[-69.59084320 719.02630615]
[-72.73319244 708.92285156]
[-73.64297485 698.52960205]
[-72.34092712 688.32714844]
[-68.94866180 678.77410889]
[-63.68031311 670.28662109]
[-56.83009720 663.22003174]
[-48.75646591 657.85418701]
[-39.86367416 654.38269043]
[-30.58174515 652.90625000]
[-21.34572792 653.43078613]
[-17.43310547 638.95007324]
[-13.52048206 624.46929932]
[-9.60785961 609.98858643]
[-5.69523716 595.50787354]
[-1.78261459 581.02716064]
[2.13000798 566.54644775]
[6.04263067 552.06573486]
[9.95525360 537.58496094]
[13.59424114 523.03308105]
[16.95830345 508.41519165]
[20.32236481 493.79727173]
[23.68642616 479.17938232]
[15.26246452 459.94311523]
[29.47420883 443.48196411]
[30.97963333 428.55770874]
[24.55872917 415.11816406]
[33.64197540 402.16421509]
[35.14739990 387.23992920]
[36.65282440 372.31567383]
[38.15824890 357.39141846]
[35.70880890 350.43872070]
[39.77751541 342.28948975]
[41.47035980 327.38531494]
[43.16320419 312.48114014]
[44.85605240 297.57696533]
[33.89915466 292.22851562]
[25.08701706 283.76675415]
[19.27547455 272.99282837]
[17.03526878 260.93334961]
[18.59601784 248.74266052]
[23.82278252 237.59233093]
[32.22758865 228.55853271]
[43.01495361 222.51820374]
[55.15715408 220.06391907]
[57.41053772 205.23414612]
[59.66392136 190.40435791]
[61.91730499 175.57458496]
[64.17068481 160.74481201]
[66.42407227 145.91503906]
[68.67745209 131.08526611]
[70.93083954 116.25548553]
[66.74597168 101.85107422]
[56.89718628 90.53730774]
[47.04840088 79.22353363]
[37.19961548 67.90976715]
[21.67253113 66.66580200]
[11.84562969 55.05172729]
[13.12724972 40.25669098]
[3.27846360 28.94292259]
[-6.57032251 17.62915039]
[-22.24710274 12.81556702]
[-25.65258980 -3.22608805]
[-13.28351021 -13.99353504]
[2.13588691 -8.41014671]
[4.74344826 7.78036451]
[14.59223461 19.09413528]
[24.44102097 30.40790558]
[39.27152634 31.17712212]
[49.42076492 42.51059723]
[48.51338577 58.06097794]
[58.36217117 69.37474823]
[68.21096039 80.68852234]
[78.05974579 92.00228882]
[79.75222015 79.55974579]
[88.59518433 67.76851654]
[91.59083557 53.07069016]
[94.58648682 38.37286377]
[97.58213806 23.67503929]
[100.57778931 8.97721386]
[99.22647095 -0.03046381]
[103.70452881 -5.88595724]
[106.88463593 -20.54497910]
[99.89373779 -39.46992493]
[113.55634308 -53.17332458]
[116.36706543 -67.90763092]
[119.17778778 -82.64193726]
[114.16342926 -97.64749908]
[124.14853668 -108.69950867]
[126.95925140 -123.43382263]
[118.34381104 -136.41117859]
[121.40417480 -151.31382751]
[133.82920837 -159.44735718]
[136.63992310 -174.18167114]
[139.45063782 -188.91596985]
[142.26136780 -203.65028381]
[145.07208252 -218.38459778]
[139.17089844 -233.68518066]
[149.68014526 -246.27436829]
[165.78883362 -243.20147705]
[170.92568970 -227.62762451]
[159.80639648 -215.57386780]
[156.99566650 -200.83956909]
[154.18495178 -186.10525513]
[151.37423706 -171.37094116]
[148.56350708 -156.63664246]
[157.12185669 -144.50032043]
[154.48127747 -129.51759338]
[141.69355774 -120.62310028]
[138.88284302 -105.88879395]
[144.09823608 -91.93712616]
[133.91209412 -79.83122253]
[131.10137939 -65.09690857]
[128.29064941 -50.36260223]
[134.75471497 -42.48882675]
[135.85437012 -32.14057922]
[130.98889160 -22.69421196]
[121.54365540 -17.36487198]
[118.36354828 -2.70585036]
[115.27561188 11.97286320]
[112.27996063 26.67068863]
[109.28430939 41.36851501]
[106.28866577 56.06634140]
[103.29301453 70.76416779]
[109.27647400 75.28614044]
[118.32060242 63.31936264]
[130.28723145 72.36367035]
[121.24338531 84.33007812]
[127.22684479 88.85205078]
[140.54888916 81.95835114]
[153.87094116 75.06465912]
[167.19299316 68.17095947]
[180.51502991 61.27725983]
[188.89961243 47.18361282]
[205.29158020 47.66856766]
[212.82830811 62.23324966]
[203.75663757 75.89476013]
[187.40873718 74.59930420]
[174.08668518 81.49300385]
[160.76463318 88.38670349]
[147.44259644 95.28040314]
[134.12054443 102.17410278]
[111.88137054 126.20323944]
[85.76061249 118.50886536]
[83.50723267 133.33863831]
[81.25384521 148.16841125]
[79.00046539 162.99819946]
[76.74707794 177.82797241]
[74.49369812 192.65774536]
[72.24031067 207.48751831]
[69.98693085 222.31730652]
[85.10713959 232.06480408]
[94.39415741 247.41003418]
[96.00679016 265.22070312]
[89.66484833 281.88507080]
[76.69644928 294.04437256]
[59.76021957 299.26980591]
[58.06737518 314.17398071]
[56.37453079 329.07815552]
[54.68168259 343.98233032]
[53.08251572 358.89682007]
[51.57709122 373.82110596]
[50.07166290 388.74536133]
[48.56623840 403.66961670]
[54.87946320 418.17666626]
[45.90390015 430.06314087]
[44.39847183 444.98739624]
[52.42404556 453.57760620]
[54.29737091 464.77496338]
[67.70499420 471.50070190]
[81.11260986 478.22644043]
[97.98136139 479.92398071]
[101.01990509 496.60342407]
[85.83345795 504.14053345]
[74.38686371 491.63406372]
[60.97924042 484.90832520]
[47.57162094 478.18258667]
[43.23180771 480.98742676]
[38.30432892 482.54342651]
[34.94026566 497.16134644]
[31.57620621 511.77923584]
[28.21214485 526.39715576]
[29.72622490 531.33990479]
[29.25631714 535.91711426]
[27.26902008 539.43884277]
[24.43597794 541.49761963]
[20.52335548 555.97833252]
[16.61073303 570.45904541]
[12.69810963 584.93975830]
[8.78548717 599.42053223]
[4.87286472 613.90124512]
[0.96024215 628.38195801]
[-2.95238042 642.86267090]
[-6.86500311 657.34338379]
[12.33082867 671.20690918]
[21.96287537 694.05273438]
[18.16816521 719.68176270]
[0.91038579 740.47723389]
[5.18567467 754.85510254]
[9.46096325 769.23291016]
[13.73625278 783.61071777]
[18.01154137 797.98858643]
[22.28683090 812.36639404]
[34.55973053 823.24334717]
[31.01181412 839.25408936]
[15.29287434 843.92816162]
[3.57320786 832.45727539]
[7.90900373 816.64166260]
[3.63371468 802.26385498]
[-0.64157426 787.88604736]
[-4.91686296 773.50817871]
[-9.19215202 759.13037109]
[-13.46744061 744.75256348]
[-20.94953537 744.23461914]
[-17.31056976 758.78649902]
[-30.02576447 766.74414062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[13 20]
[14 19]
[44 227]
[45 226]
[46 225]
[47 224]
[48 223]
[49 222]
[50 221]
[51 220]
[52 219]
[53 215]
[54 214]
[55 213]
[56 212]
[58 200]
[59 199]
[61 197]
[62 196]
[63 195]
[64 194]
[66 193]
[67 192]
[68 191]
[69 190]
[78 184]
[79 183]
[80 182]
[81 181]
[82 180]
[83 179]
[84 178]
[85 177]
[86 107]
[87 106]
[88 105]
[89 104]
[92 101]
[93 100]
[94 99]
[109 157]
[110 156]
[111 155]
[112 154]
[113 153]
[115 152]
[116 151]
[118 147]
[119 146]
[120 145]
[122 143]
[123 142]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
[202 210]
[203 209]
[204 208]
[231 246]
[232 245]
[233 244]
[234 243]
[235 242]
[236 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
