%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAACCACCUGUCGCUCCCAAGCCAAAGACUACCAGUCCACUGACGCCAGUGACCGCGCCCAAAUUCCCUUCCUCAGCCAGGCCCGAGAGUCUUCACAGUCCAAACUCCAUGUUCAGGGGUCCGAAGCCCCCCAUUGCCCCCAAGCCCAGGCUGACUGCCCCAAACGAGUGGAGAGCCAGUGUGUACCUGAAUGACAGCUUGAACAAAU\
) } def
/len { sequence length } bind def

/coor [
[113.87802887 316.41787720]
[101.89083099 307.24130249]
[92.82489014 295.17019653]
[87.35295105 281.10037231]
[85.88106537 266.07583618]
[88.51847076 251.21157837]
[95.06944275 237.61056519]
[105.04786682 226.28211975]
[117.71326447 218.06687927]
[132.12577820 213.57444763]
[131.67916870 198.58110046]
[131.23257446 183.58775330]
[130.78596497 168.59440613]
[130.33935547 153.60105896]
[115.90480804 149.52139282]
[107.67599487 162.06278992]
[99.44718933 174.60418701]
[99.05243683 190.99858093]
[84.52944183 198.61532593]
[70.81822205 189.61895752]
[72.02370453 173.26419067]
[86.90579224 166.37538147]
[95.13459778 153.83398438]
[103.36340332 141.29258728]
[98.11965179 135.93038940]
[87.39511108 146.41772461]
[76.90794373 135.69302368]
[87.63215637 125.20600891]
[82.38840485 119.84381866]
[69.66636658 127.79050446]
[56.94432831 135.73718262]
[44.22229385 143.68386841]
[33.99178314 157.20323181]
[18.16868019 151.11506653]
[19.63865089 134.22496033]
[36.27560806 130.96183777]
[48.99764633 123.01515198]
[61.71968079 115.06846619]
[74.44171906 107.12178802]
[68.98635864 93.14898682]
[54.24539948 95.92459869]
[39.50443649 98.70021057]
[24.76347160 101.47582245]
[10.02250957 104.25143433]
[-2.05770350 115.34198761]
[-17.61926651 110.16802979]
[-20.65377617 94.05208588]
[-8.03958988 83.57285309]
[7.24689865 89.51046753]
[21.98786163 86.73485565]
[36.72882462 83.95924377]
[51.46978760 81.18363190]
[66.21074677 78.40802765]
[67.59855652 71.03754425]
[70.37416840 56.29658127]
[71.76197052 48.92609787]
[59.03993607 40.97941589]
[43.23645782 40.23065567]
[36.54106140 26.92573166]
[23.81902504 18.97904778]
[11.09698868 11.03236389]
[-0.18168883 21.08065224]
[-13.83502102 27.54309654]
[-28.75619316 29.89581680]
[-43.73561478 27.94808578]
[-57.55896759 21.85779953]
[-69.10565948 12.11867046]
[-77.43964386 -0.47979629]
[-81.88533020 -14.91629791]
[-82.08232117 -30.02053070]
[-78.01464844 -44.56806564]
[-70.01206207 -57.37959290]
[-58.72329330 -67.41654968]
[-45.06347656 -73.86527252]
[-30.13994789 -76.20300293]
[-15.16249275 -74.24022675]
[-1.34526491 -68.13605499]
[10.19163418 -58.38533020]
[18.51296043 -45.77849579]
[22.94413948 -31.33753586]
[23.12595749 -16.23311234]
[19.04367256 -1.68967283]
[31.76570892 6.25701141]
[44.48774719 14.20369625]
[59.38125992 14.38405609]
[66.98661804 28.25737762]
[79.70865631 36.20406342]
[94.70823669 36.09239578]
[107.31055450 27.95718002]
[112.82322693 20.67375946]
[120.16160583 19.79628181]
[132.88365173 11.84959793]
[134.71559143 1.12800062]
[141.99586487 -6.65517759]
[152.14450073 -9.09517860]
[161.75404358 -5.62107086]
[174.70704651 -13.18544960]
[187.66004944 -20.74982834]
[200.61305237 -28.31420708]
[198.27229309 -42.36312103]
[200.86213684 -56.33787918]
[208.05145264 -68.56353760]
[218.95907593 -77.58188629]
[232.26177979 -82.32534027]
[246.35478210 -82.24331665]
[259.54534912 -77.36605835]
[270.25607300 -68.29854584]
[283.32025146 -75.66923523]
[296.38442993 -83.03992462]
[309.44863892 -90.41061401]
[322.51281738 -97.78130341]
[335.57699585 -105.15199280]
[334.39175415 -121.37941742]
[340.38043213 -136.44525146]
[352.29687500 -147.35205078]
[367.72116089 -151.95368958]
[383.55078125 -149.37751770]
[396.62478638 -140.18940735]
[409.57778931 -147.75378418]
[422.53079224 -155.31816101]
[435.48376465 -162.88253784]
[448.43676758 -170.44691467]
[448.46353149 -185.74223328]
[456.09225464 -198.88375854]
[469.18753052 -206.39244080]
[484.18261719 -206.33860779]
[497.05078125 -198.83685303]
[510.00375366 -206.40122986]
[522.95678711 -213.96560669]
[535.90979004 -221.52998352]
[534.77807617 -236.71157837]
[540.32757568 -250.82151794]
[551.40759277 -261.08078003]
[565.78417969 -265.49380493]
[580.59008789 -263.23651123]
[592.89666748 -254.80957031]
[605.84967041 -262.37396240]
[618.80267334 -269.93832397]
[626.45727539 -284.44137573]
[642.85266113 -284.79333496]
[651.12261963 -270.63214111]
[642.75976562 -256.52560425]
[626.36706543 -256.98532104]
[613.41406250 -249.42095947]
[600.46105957 -241.85656738]
[601.75323486 -226.99737549]
[596.44390869 -212.99307251]
[585.53607178 -202.64033508]
[571.15631104 -198.03140259]
[556.14038086 -200.13143921]
[543.47412109 -208.57698059]
[530.52111816 -201.01260376]
[517.56817627 -193.44822693]
[504.61514282 -185.88385010]
[504.82562256 -170.99018860]
[497.50424194 -157.90380859]
[484.52984619 -150.18815613]
[469.33569336 -150.00143433]
[456.00115967 -157.49392700]
[443.04815674 -149.92955017]
[430.09515381 -142.36515808]
[417.14215088 -134.80078125]
[404.18914795 -127.23640442]
[405.97341919 -113.47833252]
[402.36779785 -100.03692627]
[393.88473511 -88.95012665]
[381.77880859 -81.91186523]
[367.86117554 -80.01331329]
[354.22860718 -83.57383728]
[342.94769287 -92.08781433]
[329.88348389 -84.71712494]
[316.81930542 -77.34643555]
[303.75512695 -69.97574615]
[290.69094849 -62.60505295]
[277.62677002 -55.23436356]
[279.78079224 -39.53448486]
[275.73526001 -24.17275238]
[266.08105469 -11.50896740]
[252.27297974 -3.50020242]
[236.41050720 -1.39838362]
[220.91870117 -5.55467367]
[208.17742920 -15.36120892]
[195.22442627 -7.79683018]
[182.27142334 -0.23245113]
[169.31843567 7.33192778]
[160.98767090 24.78144073]
[140.83032227 24.57163429]
[128.10829163 32.51831818]
[115.44577026 40.55949020]
[102.84345245 48.69470596]
[127.91004944 52.51574326]
[149.69062805 68.61075592]
[162.23139954 94.54822540]
[161.23088074 125.07156372]
[145.33270264 153.15444946]
[145.77931213 168.14779663]
[146.22592163 183.14114380]
[146.67253113 198.13450623]
[147.11912537 213.12785339]
[161.77349854 216.75445557]
[174.90541077 224.20127869]
[185.54042053 234.91571045]
[192.88932800 248.10269165]
[196.40679932 262.78363037]
[195.83180237 277.86911011]
[191.20701599 292.23971558]
[182.87562561 304.82901001]
[171.45588684 314.70281982]
[157.79519653 321.12841797]
[142.90730286 323.62899780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 24]
[16 23]
[17 22]
[29 39]
[30 38]
[31 37]
[32 36]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[56 87]
[57 86]
[59 84]
[60 83]
[61 82]
[88 190]
[89 189]
[91 188]
[92 187]
[96 185]
[97 184]
[98 183]
[99 182]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[127 154]
[128 153]
[129 152]
[130 151]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
