%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGCGAACAUGGCCGAAGUCGGCGAGGACAGCGGCGCCCGCGCCCUGCUCGCGCUGCGCUCGGCGCCCUGCAGCCCAGUGCUGUGCGCCGCAGCCGCCGCCGCCGCCU\
) } def
/len { sequence length } bind def

/coor [
[-3.29363799 200.90087891]
[-14.55372238 210.81100464]
[-19.80129051 225.73660278]
[-34.46714020 228.33700562]
[-45.72722626 238.24713135]
[-56.98730850 248.15725708]
[-58.14688110 263.69085693]
[-69.70738220 273.58074951]
[-84.50916290 272.37951660]
[-95.76924896 282.28964233]
[-93.35428619 297.52682495]
[-99.58144379 311.64157104]
[-112.46366119 320.12991333]
[-127.89025879 320.28329468]
[-140.93867493 312.05270386]
[-147.44520569 298.06454468]
[-145.33363342 282.78237915]
[-135.27777100 271.08267212]
[-120.48638916 266.69876099]
[-105.67936707 271.02957153]
[-94.41928101 261.11944580]
[-93.73066711 246.28497314]
[-82.45251465 236.07431030]
[-66.89743042 236.89717102]
[-55.63734436 226.98704529]
[-44.37726212 217.07693481]
[-39.93508911 202.86016846]
[-24.46384430 199.55091858]
[-13.20375919 189.64079285]
[-14.77464867 174.85328674]
[-7.24779558 161.82215881]
[6.67174006 155.64964294]
[21.73086929 158.89445496]
[32.99095535 148.98432922]
[44.25103760 139.07421875]
[55.51112366 129.16409302]
[66.77120972 119.25397491]
[78.03129578 109.34384918]
[76.72036743 94.70942688]
[84.22755432 82.07901764]
[97.70920563 76.23692322]
[112.05858612 79.39606476]
[123.31867218 69.48594666]
[134.57875061 59.57582474]
[136.20852661 46.68464279]
[145.91450500 38.66423035]
[158.07780457 39.44289017]
[169.61381531 29.85538673]
[181.14984131 20.26788330]
[192.68586731 10.68037796]
[198.58155823 -6.69246101]
[215.89595032 -9.13725471]
[227.15603638 -19.04737663]
[238.41612244 -28.95749664]
[249.67620850 -38.86761856]
[260.93627930 -48.77773666]
[266.18386841 -63.70334244]
[280.84970093 -66.30374908]
[292.10980225 -76.21387482]
[303.36987305 -86.12399292]
[314.62997437 -96.03411102]
[325.89004517 -105.94423676]
[331.13760376 -120.86983490]
[345.80346680 -123.47024536]
[357.06353760 -133.38037109]
[368.32363892 -143.29048157]
[366.74243164 -158.72679138]
[374.56555176 -172.12748718]
[388.78482056 -178.33972168]
[403.93264771 -174.97477722]
[414.18438721 -163.32653809]
[415.59805298 -147.87399292]
[407.63000488 -134.55895996]
[393.34417725 -128.50132751]
[378.23376465 -132.03039551]
[366.97366333 -122.12028503]
[355.71359253 -112.21015930]
[351.27142334 -97.99340057]
[335.80017090 -94.68415070]
[324.54006958 -84.77402496]
[313.27999878 -74.86390686]
[302.01992798 -64.95378876]
[290.75982666 -55.04366684]
[286.31765747 -40.82690048]
[270.84640503 -37.51765442]
[259.58633423 -27.60753250]
[248.32624817 -17.69741249]
[237.06616211 -7.78729153]
[225.80607605 2.12282944]
[224.68955994 14.25977898]
[215.26135254 22.60493660]
[202.27336121 22.21639824]
[190.73735046 31.80390358]
[179.20132446 41.39140701]
[167.66529846 50.97891235]
[162.56570435 67.70492554]
[144.48887634 70.83590698]
[133.22879028 80.74602509]
[121.96870422 90.65615082]
[123.27963257 105.29057312]
[115.77244568 117.92098236]
[102.29079437 123.76307678]
[87.94141388 120.60393524]
[76.68132782 130.51405334]
[65.42124176 140.42417908]
[54.16115952 150.33430481]
[42.90107346 160.24441528]
[31.64099121 170.15454102]
[32.94674301 185.50384521]
[25.05619621 198.52662659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 26]
[5 25]
[6 24]
[9 21]
[10 20]
[33 108]
[34 107]
[35 106]
[36 105]
[37 104]
[38 103]
[42 99]
[43 98]
[44 97]
[47 95]
[48 94]
[49 93]
[50 92]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[64 77]
[65 76]
[66 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
