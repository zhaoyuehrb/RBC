%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCCGGAAGCGACGGCUUCGCUGCCCCGGAAGUGGACGGCACGCCGCGGCGGGGUGGGUGCAAGAUGCCGCUGCCGGUUCAGGUGUUUAACUUGCAGGGGGCCGUGGAGCCCAUGCAGAUCGACGUGGACCCCCAGGAAGACCCGCAGAAUGCACCUGACGUCA\
) } def
/len { sequence length } bind def

/coor [
[81.25019073 115.15945435]
[67.18704987 120.37751770]
[53.12391281 125.59558105]
[39.06077576 130.81364441]
[24.99763870 136.03170776]
[10.93450260 141.24977112]
[18.60213089 150.27310181]
[21.49431992 163.77180481]
[17.76736641 179.44520569]
[9.55078793 191.99461365]
[1.33421075 204.54403687]
[-6.88236666 217.09344482]
[-15.09894466 229.64286804]
[-15.47771740 246.03764343]
[-29.99327660 253.66853333]
[-43.71325684 244.68554688]
[-42.52372360 228.32958984]
[-27.64836121 221.42628479]
[-19.43178368 208.87687683]
[-11.21520519 196.32745361]
[-2.99862814 183.77803040]
[5.21794939 171.22862244]
[1.65159047 164.63081360]
[-13.34251785 164.21043396]
[-5.48112774 151.43519592]
[-9.04748631 144.83738708]
[-24.04748726 144.83738708]
[-39.04748535 144.83738708]
[-54.04748535 144.83738708]
[-69.04748535 144.83738708]
[-84.04748535 144.83738708]
[-92.43111420 155.41099548]
[-105.19145966 159.15789795]
[-117.59201050 154.92143250]
[-125.16378021 144.46577454]
[-140.16114807 144.18528748]
[-155.15853882 143.90480042]
[-170.15591431 143.62432861]
[-178.83631897 146.60241699]
[-185.43038940 143.19575500]
[-200.41990662 142.63488770]
[-216.47404480 148.08476257]
[-226.15515137 134.16670227]
[-215.46101379 121.01102448]
[-199.85903931 127.64538574]
[-184.86952209 128.20625305]
[-169.87542725 128.62693787]
[-154.87805176 128.90742493]
[-139.88067627 129.18791199]
[-124.88329315 129.46839905]
[-113.30255890 117.29900360]
[-96.16637421 117.24947357]
[-84.04748535 129.83738708]
[-69.04748535 129.83738708]
[-54.04748535 129.83738708]
[-39.04748535 129.83738708]
[-24.04748726 129.83738708]
[-9.04748631 129.83738708]
[5.71643972 127.18663788]
[19.77957726 121.96857452]
[33.84271240 116.75051117]
[47.90584946 111.53244781]
[61.96898651 106.31438446]
[76.03212738 101.09632111]
[61.05627823 101.94723511]
[50.32725143 91.46448517]
[50.83022690 76.47292328]
[62.23773575 66.73286438]
[77.12287140 68.58562469]
[85.79450989 80.82452393]
[81.10593414 66.57611084]
[76.41735840 52.32769775]
[71.72877502 38.07928467]
[59.14699173 27.56117439]
[62.23121643 11.45466709]
[77.80867004 6.32875633]
[89.85460663 17.45653915]
[85.97718811 33.39070892]
[90.66576385 47.63911819]
[95.35434723 61.88753128]
[100.04292297 76.13594818]
[112.81784821 83.99732208]
[127.65030670 81.76168823]
[142.48277283 79.52605438]
[157.31523132 77.29042053]
[172.14768982 75.05478668]
[186.98016357 72.81915283]
[201.81262207 70.58351898]
[216.64508057 68.34788513]
[220.91136169 56.54717255]
[229.75079346 47.74305725]
[241.43223572 43.57269287]
[253.70477295 44.77419281]
[264.23138428 51.05677795]
[271.03390503 61.16802979]
[285.93960571 59.48855972]
[300.84527588 57.80909348]
[315.75094604 56.12962723]
[323.96838379 52.04399109]
[330.95071411 54.56080246]
[345.88519287 53.16034698]
[360.81967163 51.75989151]
[372.29977417 36.73022461]
[390.79904175 34.85314178]
[404.58389282 46.85272980]
[419.45556641 44.89483643]
[427.59515381 40.65625763]
[434.62332153 43.04206848]
[449.52899170 41.36259842]
[464.43466187 39.68313217]
[472.56408691 24.87311363]
[487.76181030 17.88210869]
[503.97253418 21.27816200]
[514.86584473 33.53327179]
[529.73748779 31.57537842]
[544.60919189 29.61748505]
[559.48083496 27.65959358]
[574.35253906 25.70170021]
[581.63800049 12.00128555]
[595.59973145 5.22999334]
[610.86907959 7.99152327]
[621.57470703 19.22401047]
[623.60009766 34.60833359]
[616.16644287 48.22890854]
[602.13208008 54.84834671]
[586.89355469 51.92133713]
[576.31042480 40.57337189]
[561.43872070 42.53126526]
[546.56707764 44.48915863]
[531.69537354 46.44705200]
[516.82373047 48.40494537]
[511.55606079 60.69755554]
[500.80969238 68.83895874]
[487.33517456 70.61077118]
[474.64865112 65.44250488]
[466.11413574 54.58881760]
[451.20846558 56.26828384]
[436.30276489 57.94775009]
[421.41345215 59.76651001]
[406.54177856 61.72440338]
[401.69680786 72.10720062]
[392.33352661 78.91688538]
[380.72460938 80.35675812]
[369.75842285 75.95140076]
[362.22012329 66.69437408]
[347.28564453 68.09482574]
[332.35116577 69.49528503]
[317.43041992 71.03530884]
[302.52474976 72.71477509]
[287.61904907 74.39424133]
[272.71337891 76.07371521]
[264.75457764 91.80169678]
[248.82173157 99.70143890]
[231.17675781 96.45870209]
[218.88072205 83.18035126]
[204.04824829 85.41598511]
[189.21578979 87.65161896]
[174.38333130 89.88725281]
[159.55087280 92.12288666]
[144.71839905 94.35852051]
[129.88594055 96.59415436]
[115.05348206 98.82978821]
[115.72462463 104.60984802]
[114.09210968 110.66677094]
[110.07400513 116.06395721]
[103.97062683 119.85584259]
[96.45446014 121.24261475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[35 50]
[36 49]
[37 48]
[38 47]
[40 46]
[41 45]
[70 81]
[71 80]
[72 79]
[73 78]
[82 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[95 151]
[96 150]
[97 149]
[98 148]
[100 147]
[101 146]
[102 145]
[105 140]
[106 139]
[108 138]
[109 137]
[110 136]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
