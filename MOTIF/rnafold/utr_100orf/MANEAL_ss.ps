%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:38:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGCGCGCGGCCGGGCGGGCGGCCAUGGCGCGGCACGCUGGGAGGUAGCGCGGCGGCUGCAGGAGCGCACAGUCGGCCAUGGCCCGGCGGCGGCGCCGCGCCUGCAUCGCUCUGUUCCUGGUGCUGCUCUUCGCCUUCGGCACCCUCAUGGGUCUGCGCACGCUCAAGGCUCCGGACG\
) } def
/len { sequence length } bind def

/coor [
[319.53204346 300.46121216]
[308.30438232 290.51437378]
[297.07672119 280.56753540]
[282.41943359 277.91925049]
[277.22064209 262.97659302]
[265.99298096 253.02973938]
[254.76531982 243.08290100]
[243.53764343 233.13606262]
[232.30998230 223.18922424]
[217.50436401 224.34207153]
[205.97622681 214.41450500]
[204.86738586 198.87719727]
[193.63972473 188.93035889]
[176.29034424 186.36543274]
[170.57742310 168.87248230]
[159.17974854 159.12092590]
[147.78207397 149.36936951]
[136.30065918 139.71653748]
[124.73635864 130.16316223]
[113.17205811 120.60977936]
[101.60776520 111.05640411]
[89.96144104 101.60318756]
[78.23397064 92.25084686]
[66.42621613 83.00006104]
[54.53906631 73.85153198]
[42.65191269 64.70300293]
[29.76721954 65.58889008]
[20.05076027 57.70288086]
[18.37849045 45.70608139]
[6.65101862 36.35373306]
[-5.07645369 27.00138664]
[-16.80392647 17.64903831]
[-28.53139877 8.29669189]
[-40.25886917 -1.05565524]
[-55.87240601 -3.61065698]
[-60.99886322 -17.59524536]
[-72.72633362 -26.94759369]
[-81.41117859 -29.86251640]
[-84.57368469 -36.56398392]
[-96.13797760 -46.11735916]
[-107.70227814 -55.67073822]
[-119.26657867 -65.22411346]
[-130.83087158 -74.77748871]
[-142.39517212 -84.33087158]
[-153.95947266 -93.88424683]
[-169.48123169 -92.57565308]
[-181.07298279 -102.42887115]
[-182.22488403 -117.23457336]
[-193.78916931 -126.78794861]
[-209.35629272 -129.61207581]
[-214.24060059 -143.68305969]
[-225.80488586 -153.23643494]
[-234.43812561 -156.30084229]
[-237.48449707 -163.05589294]
[-248.88217163 -172.80744934]
[-260.27984619 -182.55900574]
[-271.67752075 -192.31057739]
[-284.91213989 -189.72651672]
[-297.03823853 -195.16496277]
[-303.71194458 -206.43179321]
[-302.68511963 -219.29115295]
[-313.91278076 -229.23799133]
[-325.14044189 -239.18482971]
[-340.89877319 -237.98052979]
[-352.83859253 -248.33505249]
[-353.87622070 -264.10525513]
[-343.39602661 -275.93493652]
[-327.61575317 -276.80575562]
[-315.89755249 -266.20108032]
[-315.19360352 -250.41249084]
[-303.96594238 -240.46565247]
[-292.73828125 -230.51881409]
[-276.02227783 -232.25709534]
[-262.95584106 -221.15890503]
[-261.92596436 -203.70825195]
[-250.52828979 -193.95669556]
[-239.13059998 -184.20512390]
[-227.73292542 -174.45356750]
[-216.25151062 -164.80073547]
[-204.68721008 -155.24736023]
[-189.94726562 -153.10656738]
[-184.23579407 -138.35224915]
[-172.67149353 -128.79887390]
[-157.91448975 -130.46208191]
[-146.05055237 -120.93833160]
[-144.40609741 -105.44854736]
[-132.84179688 -95.89516449]
[-121.27749634 -86.34178925]
[-109.71319580 -76.78841400]
[-98.14890289 -67.23503113]
[-86.58460236 -57.68165588]
[-75.02030182 -48.12828064]
[-63.37398529 -38.67506409]
[-51.64651489 -29.32271767]
[-36.87180328 -27.43665886]
[-30.90652275 -12.78312778]
[-19.17905045 -3.43078041]
[-7.45157909 5.92156649]
[4.27589321 15.27391338]
[16.00336456 24.62626076]
[27.73083687 33.97860718]
[45.18972778 35.64206314]
[51.80044556 52.81584930]
[63.68759537 61.96437836]
[75.57475281 71.11290741]
[82.81192017 72.70491028]
[87.58631897 80.52336884]
[99.31378937 89.87571716]
[107.09954834 92.04801178]
[111.16114044 99.49211121]
[122.72544098 109.04548645]
[134.28973389 118.59886169]
[145.85403442 128.15223694]
[154.48727417 131.21662903]
[157.53363037 137.97169495]
[168.93130493 147.72325134]
[180.32897949 157.47480774]
[193.24226379 157.25703430]
[202.53750610 165.63542175]
[203.58656311 177.70269775]
[214.81422424 187.64953613]
[230.37191772 186.87747192]
[241.61666870 197.12492371]
[242.25683594 211.96156311]
[253.48449707 221.90840149]
[264.71215820 231.85523987]
[275.93981934 241.80207825]
[287.16748047 251.74891663]
[302.62783813 255.10867310]
[307.02355957 269.33987427]
[318.25122070 279.28671265]
[329.47888184 289.23355103]
[349.93569946 283.14599609]
[369.80969238 290.55285645]
[381.14834595 308.31820679]
[379.51834106 329.19607544]
[391.71417236 337.92883301]
[403.91003418 346.66162109]
[416.10586548 355.39440918]
[428.30169678 364.12719727]
[444.02655029 365.87057495]
[449.86999512 379.57107544]
[462.06585693 388.30386353]
[474.26168823 397.03665161]
[487.03094482 404.90719604]
[500.31280518 411.87805176]
[513.59460449 418.84890747]
[526.87646484 425.81973267]
[543.23162842 424.61914062]
[552.22387695 438.33303833]
[544.60284424 452.85375977]
[528.20831299 453.24362183]
[519.90563965 439.10159302]
[506.62377930 432.13073730]
[493.34194946 425.15988159]
[480.06011963 418.18905640]
[485.26724243 432.25622559]
[481.34011841 446.73303223]
[469.73791504 456.24032593]
[454.77163696 457.24551392]
[442.00225830 449.37509155]
[436.17449951 435.55346680]
[439.45376587 420.91632080]
[450.62158203 410.90231323]
[465.52890015 409.23248291]
[453.33306885 400.49969482]
[441.13723755 391.76690674]
[426.28469849 390.64813232]
[419.56890869 376.32302856]
[407.37307739 367.59024048]
[395.17724609 358.85748291]
[382.98138428 350.12469482]
[370.78555298 341.39190674]
[363.16854858 346.47952271]
[354.42230225 349.27893066]
[345.21981812 349.56118774]
[336.27291870 347.29147339]
[328.27722168 342.63293457]
[321.85812378 335.93493652]
[317.52172852 327.70693970]
[315.61514282 318.57968140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[5 128]
[6 127]
[7 126]
[8 125]
[9 124]
[12 121]
[13 120]
[15 117]
[16 116]
[17 115]
[18 113]
[19 112]
[20 111]
[21 110]
[22 108]
[23 107]
[24 105]
[25 104]
[26 103]
[29 101]
[30 100]
[31 99]
[32 98]
[33 97]
[34 96]
[36 94]
[37 93]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[48 83]
[49 82]
[51 80]
[52 79]
[54 78]
[55 77]
[56 76]
[57 75]
[61 72]
[62 71]
[63 70]
[136 173]
[137 172]
[138 171]
[139 170]
[140 169]
[142 167]
[143 166]
[144 165]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
