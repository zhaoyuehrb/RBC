%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCGCGGACGCCUGCUCAGUGCGCGCCGGCCGGGCAACCCUAUGCUGGCGUAAUCGGGUUCCUCCGAGCCGCCGUAGGACUGGUUCCGGCGGGCUGGUGAGGAAUGGAGCCGGUAGGCUGCUGCGGCGAGUGCCGCGGCUCCUCCGUAGACCCGCGGAGCACCUUCGUGUUGAGUAACCUGGCGGAGGUGGUGGAGCGUGUGC\
) } def
/len { sequence length } bind def

/coor [
[90.89765930 325.86691284]
[78.95806122 336.22171021]
[63.19969940 335.01776123]
[52.97171783 322.96936035]
[54.34220505 307.22460938]
[66.49806976 297.12457275]
[67.64074707 282.16815186]
[68.78341675 267.21176147]
[62.03814697 253.93203735]
[70.80423737 240.76138306]
[71.94691467 225.80497742]
[73.08959198 210.84855652]
[74.23226166 195.89215088]
[75.26086426 180.92745972]
[76.17532349 165.95535278]
[77.08978271 150.98326111]
[78.00424194 136.01115417]
[78.91870117 121.03905487]
[68.64049530 110.11392975]
[53.64049149 110.11392975]
[38.64049149 110.11392975]
[23.64049339 110.11392975]
[11.50148010 122.70748901]
[-5.65211630 122.62886047]
[-17.21064949 110.41496277]
[-32.20890427 110.64370728]
[-47.20716095 110.87245941]
[-60.88773727 118.81931305]
[-73.73152161 111.27700043]
[-88.72977448 111.50574493]
[-103.72803497 111.73449707]
[-118.72628784 111.96324158]
[-133.72236633 112.30635071]
[-148.71539307 112.76378632]
[-163.70840454 113.22122955]
[-178.70143127 113.67867279]
[-194.12884521 123.72901154]
[-209.25221252 114.83003235]
[-224.23652649 115.51606750]
[-239.22082520 116.20209503]
[-254.20512390 116.88813019]
[-269.18942261 117.57415771]
[-280.73977661 130.70971680]
[-297.87902832 131.41571045]
[-309.98406982 119.74322510]
[-324.95614624 120.65768433]
[-339.92825317 121.57214355]
[-353.29797363 131.06857300]
[-368.09228516 123.99320984]
[-369.09204102 107.62456512]
[-355.26879883 98.80130768]
[-340.84271240 106.60004425]
[-325.87060547 105.68558502]
[-310.89852905 104.77112579]
[-303.79208374 94.01998138]
[-291.60861206 89.25493622]
[-278.71582031 92.42488861]
[-269.87545776 102.58985901]
[-254.89115906 101.90382385]
[-239.90686035 101.21779633]
[-224.92254639 100.53176117]
[-209.93824768 99.84573364]
[-201.55374146 91.12297821]
[-189.07302856 90.43101501]
[-179.15887451 98.68565369]
[-164.16584778 98.22821045]
[-149.17282104 97.77076721]
[-134.17980957 97.31332397]
[-127.58735657 93.96587372]
[-118.95503235 96.96498871]
[-103.95677948 96.73623657]
[-88.95852661 96.50749207]
[-73.96026611 96.27873993]
[-61.35247040 88.34825134]
[-47.43590927 95.87420654]
[-32.43765259 95.64545441]
[-17.43939781 95.41670990]
[-9.84868526 85.00183105]
[2.53997254 80.79899597]
[15.27429104 84.55528259]
[23.64049339 95.11392975]
[38.64049149 95.11392975]
[53.64049149 95.11392975]
[68.64049530 95.11392975]
[103.04081726 80.69204712]
[111.82054138 68.52996063]
[120.60026550 56.36787033]
[129.37998962 44.20577621]
[138.15971375 32.04368591]
[146.93943787 19.88159752]
[149.42655945 11.08808422]
[155.94694519 7.60235786]
[164.91111755 -4.42442846]
[173.87528992 -16.45121574]
[182.83946228 -28.47800255]
[191.71166992 -40.57279205]
[200.49139404 -52.73488235]
[209.27111816 -64.89697266]
[206.95413208 -80.30052185]
[216.03128052 -92.50954437]
[230.73048401 -94.62350464]
[239.51020813 -106.78559875]
[248.28993225 -118.94768524]
[257.06967163 -131.10977173]
[265.84939575 -143.27186584]
[261.02362061 -145.77619934]
[256.74588013 -150.06575012]
[253.56953430 -155.98376465]
[251.99739075 -163.21743774]
[252.44035339 -171.31434631]
[258.02172852 -185.23728943]
[263.60308838 -199.16023254]
[269.18444824 -213.08317566]
[266.32379150 -229.23088074]
[279.05014038 -239.57359314]
[294.27175903 -233.47160339]
[296.32995605 -217.20213318]
[283.10739136 -207.50180054]
[277.52603149 -193.57885742]
[271.94467163 -179.65591431]
[266.36328125 -165.73297119]
[278.52539062 -156.95324707]
[289.98330688 -166.63395691]
[301.44122314 -176.31465149]
[312.89913940 -185.99534607]
[324.35708618 -195.67605591]
[335.81500244 -205.35675049]
[347.27291870 -215.03746033]
[358.73086548 -224.71815491]
[363.77532959 -240.32217407]
[379.86550903 -243.49047852]
[390.44918823 -230.96380615]
[384.63879395 -215.62850952]
[368.41156006 -213.26022339]
[356.95361328 -203.57952881]
[345.49569702 -193.89883423]
[334.03778076 -184.21812439]
[322.57986450 -174.53742981]
[311.12191772 -164.85671997]
[299.66400146 -155.17602539]
[288.20608521 -145.49533081]
[278.01147461 -134.49214172]
[269.23175049 -122.33005524]
[260.45202637 -110.16796112]
[251.67230225 -98.00587463]
[242.89257812 -85.84378052]
[245.51359558 -71.22647095]
[236.78297424 -58.76730728]
[221.43321228 -56.11724854]
[212.65348816 -43.95515823]
[203.87376404 -31.79306793]
[202.50700378 -24.52686119]
[194.86625671 -19.51382828]
[185.90208435 -7.48704195]
[176.93791199 4.53974485]
[167.97373962 16.56653214]
[159.10153198 28.66132164]
[150.32180786 40.82341003]
[141.54208374 52.98550415]
[132.76235962 65.14759064]
[123.98262787 77.30968475]
[115.20290375 89.47177124]
[117.14189911 104.34592438]
[128.74612427 113.85076904]
[140.35034180 123.35560608]
[151.95455933 132.86045837]
[163.55879211 142.36529541]
[175.16300964 151.87013245]
[186.76722717 161.37498474]
[198.37144470 170.87982178]
[211.95996094 164.00434875]
[227.17051697 163.25671387]
[241.36778259 168.76644897]
[252.09202576 179.57897949]
[257.48516846 193.82095337]
[256.61285400 209.02487183]
[249.62617493 222.55654907]
[237.73565674 232.07154846]
[223.00137329 235.92134094]
[207.97615051 233.43893433]
[195.26318359 225.05439758]
[187.06506348 212.22042847]
[184.80220032 197.16056824]
[188.86660767 182.48403931]
[177.26239014 172.97920227]
[165.65815735 163.47436523]
[154.05393982 153.96951294]
[142.44972229 144.46467590]
[130.84550476 134.95982361]
[119.24127960 125.45498657]
[107.63705444 115.95014191]
[93.89080048 121.95351410]
[92.97634125 136.92561340]
[92.06188202 151.89772034]
[91.14742279 166.86981201]
[90.23296356 181.84191895]
[92.83412933 190.60237122]
[89.18867493 197.03482056]
[88.04600525 211.99124146]
[86.90332794 226.94764709]
[85.76065063 241.90406799]
[92.42419434 256.25354004]
[83.73983002 268.35443115]
[82.59716034 283.31082153]
[81.45448303 298.26724243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[10 201]
[11 200]
[12 199]
[13 198]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 84]
[20 83]
[21 82]
[22 81]
[25 77]
[26 76]
[27 75]
[29 73]
[30 72]
[31 71]
[32 70]
[33 68]
[34 67]
[35 66]
[36 65]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[45 54]
[46 53]
[47 52]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 151]
[97 150]
[98 149]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[110 121]
[111 120]
[112 119]
[113 118]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
