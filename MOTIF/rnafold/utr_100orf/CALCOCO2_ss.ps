%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCGGGACGGGCUCUCCCUUGGGUGCUUAGCCCCGCCCCCGUCCCACUCUGCCCUGUUGCUGUCGCGCCGCUGCUGGUUGCUGUCCCUGGACCCCUACCAUGGAGGAGACCAUCAAAGAUCCCCCCACAUCAGCUGUCUUGCUGGAUCACUGUCAUUUCUCUCAGGUCAUCUUUAACAGUGUGGAGAAGUUCUACAUCC\
) } def
/len { sequence length } bind def

/coor [
[-13.06991100 391.42147827]
[-24.34431267 381.52764893]
[-32.29150772 368.80593872]
[-36.23801804 354.33441162]
[-35.84940338 339.33944702]
[-31.15685081 325.08825684]
[-42.16772842 335.27456665]
[-53.17860794 345.46084595]
[-64.18948364 355.64715576]
[-75.20036316 365.83343506]
[-86.21124268 376.01974487]
[-97.22212219 386.20602417]
[-108.23299408 396.39233398]
[-105.68162537 404.28372192]
[-105.56046295 412.54266357]
[-107.86038208 420.44070435]
[-112.35955811 427.28695679]
[-118.64474487 432.48873901]
[-126.14913940 435.60266113]
[-134.20347595 436.37246704]
[-142.09571838 434.75003052]
[-149.13398743 430.89782715]
[-161.04611206 440.01379395]
[-172.95823669 449.12979126]
[-184.87036133 458.24578857]
[-189.78819275 465.95217896]
[-197.03938293 467.40921021]
[-209.09182739 476.33883667]
[-218.21908569 490.62622070]
[-234.47479248 485.81082153]
[-234.34759521 468.85733032]
[-218.02146912 464.28637695]
[-205.96900940 455.35675049]
[-193.98635864 446.33367920]
[-182.07423401 437.21768188]
[-170.16210938 428.10168457]
[-158.24998474 418.98568726]
[-157.58647156 397.06756592]
[-140.72814941 382.61746216]
[-118.41928864 385.38143921]
[-107.40840912 375.19515991]
[-96.39753723 365.00885010]
[-85.38665771 354.82257080]
[-74.37577820 344.63626099]
[-63.36490250 334.44998169]
[-52.35402298 324.26367188]
[-41.34314346 314.07739258]
[-38.89008713 305.08511353]
[-29.76585770 299.88623047]
[-21.99811172 287.05416870]
[-14.23036861 274.22207642]
[-6.46262407 261.39001465]
[1.30512047 248.55793762]
[9.07286453 235.72586060]
[9.04463673 220.83128357]
[22.81009102 213.03237915]
[30.57783699 200.20031738]
[38.34558105 187.36824036]
[46.11332321 174.53616333]
[53.88106918 161.70408630]
[61.64881516 148.87200928]
[49.64849472 137.40341187]
[41.01525116 123.03936768]
[36.43233490 106.75353241]
[36.30508423 89.67607117]
[40.72655487 73.01530457]
[49.46499634 57.97215652]
[37.55287170 48.85616684]
[21.92148399 51.18753052]
[9.26979446 41.71598053]
[7.10382509 26.06081772]
[16.70860863 13.50997257]
[32.38579559 11.50964069]
[44.83439255 21.24658203]
[46.66886139 36.94404221]
[58.58098602 46.06003189]
[71.41306305 38.29228973]
[68.85940552 23.51125908]
[66.30575562 8.73022842]
[63.75210190 -6.05080175]
[61.19844818 -20.83183289]
[51.22470856 -33.11332321]
[56.68232346 -46.97203064]
[54.12866974 -61.75305939]
[49.58094406 -69.68347931]
[51.65210724 -76.78368378]
[49.32863235 -91.60263824]
[47.00516129 -106.42159271]
[37.22362518 -118.85671234]
[42.89610672 -132.62886047]
[40.57263565 -147.44781494]
[38.24916077 -162.26676941]
[24.76514816 -170.18608093]
[19.57496071 -184.93721008]
[25.12924957 -199.55514526]
[38.80544662 -207.13772583]
[54.14607239 -204.10470581]
[63.90775299 -191.88818359]
[63.48131561 -176.25640869]
[53.06811905 -164.59025574]
[55.39159012 -149.77128601]
[57.71506500 -134.95233154]
[67.33041382 -123.57717133]
[61.82411575 -108.74506378]
[64.14759064 -93.92610931]
[66.47106171 -79.10715485]
[68.90969849 -64.30670929]
[71.46335602 -49.52568054]
[81.25444031 -38.30142975]
[75.97947693 -23.38548470]
[78.53313446 -8.60445499]
[81.08678436 6.17657518]
[83.64044189 20.95760536]
[86.19409180 35.73863602]
[98.68047333 34.88645554]
[110.98655701 36.41603088]
[122.66636658 40.22798157]
[133.30502319 46.14102936]
[142.53341675 53.90013885]
[150.04109192 63.18727875]
[163.10853577 55.82236481]
[176.17597961 48.45745468]
[189.24342346 41.09254456]
[202.31086731 33.72763443]
[187.50556946 31.31860352]
[176.27897644 21.37056160]
[172.10601807 6.96270275]
[176.27833557 -7.44534111]
[187.50450134 -17.39387894]
[202.30967712 -19.80356407]
[216.11126709 -13.92852974]
[224.63729858 -1.58726394]
[225.24871826 13.40026951]
[217.75646973 26.39482498]
[231.72363281 20.92505264]
[245.69079590 15.45527935]
[251.79109192 0.87577409]
[266.44540405 -5.04254913]
[280.95959473 1.21154618]
[286.72265625 15.92761612]
[280.31546021 30.37487793]
[265.53927612 35.98202515]
[251.16056824 29.42243958]
[237.19340515 34.89221191]
[223.22624207 40.36198425]
[209.67578125 46.79507828]
[196.60833740 54.15998840]
[183.54089355 61.52489853]
[170.47344971 68.88980865]
[157.40600586 76.25472260]
[161.58113098 91.81148529]
[161.61639404 107.91872406]
[176.15438843 111.61290741]
[190.69236755 115.30709076]
[201.35346985 104.25102997]
[216.11871338 100.02217865]
[231.01632690 103.75807190]
[242.03890991 114.45377350]
[246.22146606 129.23219299]
[242.43888855 144.11802673]
[231.70869446 155.10702515]
[216.91722107 159.24324036]
[202.04333496 155.41403198]
[191.08801270 144.64942932]
[186.99818420 129.84507751]
[172.46020508 126.15089417]
[157.92221069 122.45671082]
[152.95066833 132.48866272]
[146.25918579 141.46533203]
[138.06512451 149.09513855]
[128.63464355 155.13024902]
[118.27406311 159.37461853]
[107.31990051 161.69039917]
[96.12797546 162.00238037]
[85.06182098 160.30039978]
[74.48088837 156.63975525]
[66.71314240 169.47183228]
[58.94540024 182.30390930]
[51.17765427 195.13598633]
[43.40991211 207.96806335]
[35.64216614 220.80012512]
[35.11479568 236.61254883]
[21.90493965 243.49360657]
[14.13719559 256.32568359]
[6.36945105 269.15774536]
[-1.39829338 281.98983765]
[-9.16603756 294.82189941]
[-16.93378258 307.65399170]
[-3.91882849 300.19671631]
[10.69240761 296.80380249]
[25.66172028 297.76281738]
[39.72055817 302.99243164]
[51.67752457 312.04953003]
[60.51934433 324.16656494]
[65.49673462 338.31668091]
[66.18788910 353.30075073]
[62.53424454 367.84896851]
[54.84541702 380.72848511]
[43.77298737 390.84783936]
[30.25526810 397.34945679]
[15.43780041 399.68240356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[22 37]
[23 36]
[24 35]
[25 34]
[27 33]
[28 32]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[54 183]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[67 76]
[68 75]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[83 108]
[84 107]
[86 106]
[87 105]
[88 104]
[90 102]
[91 101]
[92 100]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[134 145]
[135 144]
[136 143]
[152 167]
[153 166]
[154 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
