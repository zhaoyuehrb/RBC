%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCGGGUGUCCGGCGGAGGGGGCGGUGCCCUCGGCGUCUCCGUGACUGCGCCUCUGCGCCCGCGUCUUGCCGCGGCUCCCGGGAUGCGCGGAGGCGGUGGCGAUGGCGAUGAUGCCUCUAGUCCUGCAUCAUCCAGAGCGGCAGGCGGAGCUGGGGUCCGGACUGCGAGAUGGAGGAGGGGCGGCGCUGCGGCCACCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[88.04772186 372.13128662]
[80.30313110 357.67608643]
[89.17816925 343.88601685]
[89.40691376 328.88775635]
[89.63565826 313.88949585]
[86.59322357 307.15084839]
[89.98400116 298.66473389]
[90.44144440 283.67169189]
[90.89888763 268.67868042]
[91.35633087 253.68565369]
[91.81376648 238.69262695]
[92.15687561 223.69656372]
[92.38562012 208.69830322]
[92.50000000 193.69874573]
[92.50000000 178.69874573]
[92.50000000 163.69874573]
[92.50000000 148.69874573]
[92.50000000 133.69874573]
[87.91359711 132.33842468]
[83.55927277 130.35716248]
[79.52062988 127.79299164]
[68.21166992 137.64730835]
[56.90270615 147.50160217]
[45.59374619 157.35591125]
[34.28478241 167.21022034]
[22.97581863 177.06452942]
[15.00637341 192.02862549]
[-1.57908583 188.51310730]
[-2.79226446 171.60261536]
[13.12151146 165.75556946]
[24.43047523 155.90126038]
[35.73943710 146.04695129]
[47.04840088 136.19264221]
[58.35736465 126.33834076]
[69.66632843 116.48403168]
[65.89468384 105.35561371]
[66.07387543 93.60679626]
[70.18313599 82.59857178]
[59.17995071 72.40396881]
[48.17676544 62.20936966]
[37.17358398 52.01476288]
[21.79194641 48.31127548]
[17.71449089 33.98564529]
[6.71130705 23.79104424]
[-4.29187727 13.59644032]
[-15.29506207 3.40183759]
[-30.86609268 3.82697010]
[-41.87966156 -6.66855145]
[-42.18899918 -21.51576996]
[-53.19218445 -31.71037292]
[-64.19536591 -41.90497589]
[-75.19855499 -52.09957886]
[-86.27915192 -62.20998383]
[-97.43652344 -72.23560333]
[-108.59389496 -82.26122284]
[-119.75126648 -92.28684998]
[-130.90864563 -102.31246948]
[-142.06600952 -112.33808899]
[-153.22337341 -122.36370850]
[-164.38075256 -132.38932800]
[-175.53811646 -142.41494751]
[-186.69549561 -152.44056702]
[-198.58418274 -161.58711243]
[-211.13508606 -169.80140686]
[-223.68598938 -178.01570129]
[-236.23690796 -186.23001099]
[-248.78781128 -194.44430542]
[-264.20513916 -190.96850586]
[-277.51980591 -199.48295593]
[-280.83239746 -214.93618774]
[-272.17764282 -228.16006470]
[-256.69027710 -231.30909729]
[-243.55863953 -222.51502991]
[-240.57351685 -206.99520874]
[-228.02259827 -198.78091431]
[-215.47169495 -190.56661987]
[-202.92079163 -182.35231018]
[-190.36988831 -174.13801575]
[-195.62138367 -188.18870544]
[-193.24388123 -202.99908447]
[-183.85848999 -214.70013428]
[-169.91702271 -220.23507690]
[-155.06153870 -218.15797424]
[-143.17283630 -209.01144409]
[-137.35671997 -195.18492126]
[-139.13256836 -180.29042053]
[-148.03648376 -168.21894836]
[-161.74240112 -162.12403870]
[-176.66987610 -163.59794617]
[-165.51249695 -153.57232666]
[-154.35513306 -143.54670715]
[-143.19775391 -133.52108765]
[-132.04039001 -123.49546051]
[-120.88301849 -113.46984100]
[-109.72564697 -103.44422150]
[-98.56827545 -93.41859436]
[-87.41090393 -83.39297485]
[-76.25353241 -73.36735535]
[-69.17431641 -71.23416138]
[-65.00395203 -63.10276413]
[-54.00076675 -52.90816116]
[-42.99758148 -42.71355820]
[-31.99439812 -32.51895523]
[-17.16675758 -33.34154892]
[-5.86273718 -23.15951729]
[-5.10045862 -7.60134697]
[5.90272570 2.59325624]
[16.90591049 12.78785896]
[27.90909386 22.98246193]
[42.50370789 25.95676613]
[47.36818695 41.01158142]
[58.37136841 51.20618439]
[69.37455750 61.40078735]
[80.37773895 71.59539032]
[100.41410065 65.47923279]
[120.29798889 72.07426453]
[132.70777893 88.95207977]
[147.62237549 87.35382080]
[162.53698730 85.75556183]
[177.45159912 84.15730286]
[192.36621094 82.55905151]
[196.58801270 79.47590637]
[201.11737061 78.42799377]
[205.12660217 79.19113922]
[207.99726868 81.24487305]
[222.96937561 80.33041382]
[237.94146729 79.41595459]
[252.91357422 78.50149536]
[266.21636963 69.93727112]
[279.39166260 76.88426971]
[294.36376953 75.96981049]
[309.33587646 75.05535126]
[324.30798340 74.14089203]
[332.68673706 70.49290466]
[339.51504517 73.32842255]
[354.49932861 72.64238739]
[369.47796631 71.84212494]
[384.45007324 70.92766571]
[399.42218018 70.01320648]
[409.87042236 58.46019363]
[425.06729126 57.74608612]
[436.01693726 67.77808380]
[450.98901367 66.86362457]
[465.96112061 65.94916534]
[480.89837646 64.57853699]
[495.78686523 62.75302124]
[510.67538452 60.92750549]
[520.20886230 48.32243347]
[535.87445068 46.23328781]
[548.37805176 55.89952850]
[550.30145264 71.58634186]
[540.50354004 83.98701477]
[524.79730225 85.74446106]
[512.50091553 75.81600952]
[497.61239624 77.64152527]
[482.72387695 79.46704102]
[480.89263916 81.59440613]
[478.10671997 83.12309265]
[474.59048462 83.68521881]
[470.69738770 83.00105286]
[466.87557983 80.92126465]
[451.90347290 81.83572388]
[436.93139648 82.75018311]
[427.28402710 94.04019928]
[412.11322021 95.18087006]
[400.33663940 84.98530579]
[385.36453247 85.89976501]
[370.39242554 86.81422424]
[363.90515137 90.36116028]
[355.18536377 87.62669373]
[340.20108032 88.31272888]
[325.22244263 89.11299133]
[310.25033569 90.02745056]
[295.27822876 90.94190979]
[280.30612183 91.85636902]
[268.07421875 100.35518646]
[253.82803345 93.47359467]
[238.85592651 94.38805389]
[223.88383484 95.30251312]
[208.91172791 96.21697235]
[193.96446228 97.47365570]
[179.04986572 99.07191467]
[164.13525391 100.67017365]
[149.22064209 102.26843262]
[134.30603027 103.86668396]
[129.86640930 117.31626129]
[120.39996338 127.85132599]
[107.50000000 133.69874573]
[107.50000000 148.69874573]
[107.50000000 163.69874573]
[107.50000000 178.69874573]
[107.50000000 193.69874573]
[110.63040161 202.28431702]
[107.38388062 208.92704773]
[107.15512848 223.92530823]
[110.15424347 232.55763245]
[106.80679321 239.15007019]
[106.34934998 254.14309692]
[105.89190674 269.13610840]
[105.43446350 284.12915039]
[104.97702026 299.12216187]
[104.63391876 314.11825562]
[104.40516663 329.11651611]
[104.17642212 344.11474609]
[112.62677765 358.16906738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 195]
[13 194]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[38 114]
[39 113]
[40 112]
[41 111]
[43 109]
[44 108]
[45 107]
[46 106]
[49 103]
[50 102]
[51 101]
[52 100]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[117 185]
[118 184]
[119 183]
[120 182]
[121 181]
[125 180]
[126 179]
[127 178]
[128 177]
[130 175]
[131 174]
[132 173]
[133 172]
[135 171]
[136 170]
[137 168]
[138 167]
[139 166]
[142 163]
[143 162]
[144 161]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
