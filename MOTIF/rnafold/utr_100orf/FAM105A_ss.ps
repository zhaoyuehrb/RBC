%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCAGCCCGCCUCAGGGAAGCGAGCCCGGGCGCCGGCGGGCGGCCGUCGCGUCUGACAGACCACUGCAGACCACGGGCCGAGGCCCAGCGCCCGUCCGCAGCGCGGCCGGCAUGGCGGCGACAAGGAGCCCCACGCGGGCAAGGGAGCGGGAGCGGUCUGGCGCUCCCGCCGCAGGAAGUGACCAAGUUCACUCCUGGAUGCUAGCUACAA\
) } def
/len { sequence length } bind def

/coor [
[429.72039795 294.07754517]
[417.48245239 285.40390015]
[405.24447632 276.73025513]
[393.00653076 268.05657959]
[378.41253662 270.80459595]
[365.87796021 262.18261719]
[363.09454346 246.85647583]
[350.85656738 238.18281555]
[338.61862183 229.50917053]
[326.38064575 220.83551025]
[314.14270020 212.16186523]
[301.90472412 203.48820496]
[291.34332275 207.79661560]
[279.89498901 206.45890808]
[270.41625977 199.69244385]
[265.32833862 189.08348083]
[265.99896240 177.21662903]
[254.02090454 168.18743896]
[242.04284668 159.15826416]
[237.27484131 158.92280579]
[232.60359192 155.69111633]
[229.85087585 149.68399048]
[218.14305115 140.30706787]
[215.58891296 143.72431946]
[211.34039307 146.12242126]
[205.87033081 146.74005127]
[199.96774292 145.04681396]
[194.62614441 140.86569214]
[190.88766479 134.44325256]
[176.40832520 130.52552795]
[161.92897034 126.60780334]
[147.44963074 122.69007874]
[132.97027588 118.77235413]
[118.49093628 114.85462952]
[104.01158905 110.93690491]
[89.01320648 111.15710449]
[74.65511322 115.49819946]
[60.29701996 119.83930206]
[45.93892670 124.18039703]
[31.58083153 128.52149963]
[17.22273827 132.86259460]
[6.40211868 145.18518066]
[-9.62472057 141.71063232]
[-14.37074089 126.01327515]
[-2.95364404 114.24118805]
[12.88164043 118.50450134]
[27.23973465 114.16339874]
[41.59782791 109.82230377]
[55.95592117 105.48120880]
[70.31401825 101.14010620]
[84.67211151 96.79901123]
[84.61705780 89.29920959]
[84.45190430 66.79981995]
[70.03163147 62.66996002]
[55.61136246 58.54010391]
[41.19108582 54.41024780]
[26.77081299 50.28039169]
[17.66158104 50.92619705]
[12.17000008 45.98262024]
[-2.18809390 41.64152527]
[-16.54618835 37.30042648]
[-32.38147354 41.56373596]
[-43.79856873 29.79165268]
[-39.05254745 14.09428692]
[-23.02570915 10.61974144]
[-12.20508957 22.94233131]
[2.15300417 27.28343010]
[16.51109886 31.62452698]
[30.90066910 35.86011887]
[45.32094193 39.98997498]
[59.74121857 44.11983109]
[74.16149139 48.24968719]
[88.58176422 52.37954330]
[92.59860229 46.04590607]
[85.64523315 32.75490570]
[100.63228607 33.37862778]
[104.64913177 27.04498672]
[94.76584625 15.76134300]
[84.88255310 4.47769833]
[74.99926758 -6.80594635]
[59.30786133 -11.57163906]
[55.85340881 -27.60281944]
[68.18955231 -38.40798569]
[83.62592316 -32.87170792]
[86.28291321 -16.68923378]
[96.16619873 -5.40558910]
[106.04948425 5.87805557]
[115.93277740 17.16170120]
[128.90072632 63.54569244]
[107.92931366 96.45755768]
[122.40866089 100.37528229]
[136.88800049 104.29300690]
[151.36735535 108.21073151]
[165.84669495 112.12845612]
[180.32604980 116.04618073]
[194.80538940 119.96390533]
[207.47267151 111.93022156]
[210.10148621 97.16237640]
[212.73030090 82.39453125]
[201.09584045 72.46545410]
[196.02684021 58.14057541]
[198.79023743 43.30042648]
[208.54545593 31.91219711]
[222.59651184 26.96921158]
[225.22532654 12.20136356]
[227.85414124 -2.56648397]
[222.65513611 -17.50906944]
[232.50320435 -28.68336868]
[235.13201904 -43.45121765]
[237.76083374 -58.21906281]
[229.79647827 -72.14561462]
[235.85267639 -87.00165558]
[251.28363037 -91.39090729]
[264.25201416 -81.94631195]
[264.80960083 -65.91294861]
[252.52867126 -55.59024811]
[249.89985657 -40.82240295]
[247.27104187 -26.05455399]
[252.65808105 -12.16826344]
[242.62199402 0.06233075]
[239.99317932 14.83017826]
[237.36436462 29.59802628]
[248.84655762 39.08617020]
[254.07263184 53.14120865]
[251.54518127 68.02336121]
[241.84428406 79.71905518]
[227.49813843 85.02334595]
[224.86932373 99.79119110]
[222.24050903 114.55903625]
[227.51997375 128.59924316]
[239.22779846 137.97616577]
[251.07202148 147.18020630]
[263.05007935 156.20938110]
[275.02813721 165.23857117]
[293.67709351 161.89228821]
[308.59259033 173.05044556]
[310.57836914 191.25024414]
[322.81634521 199.92388916]
[335.05432129 208.59754944]
[347.29226685 217.27120972]
[359.53024292 225.94485474]
[371.76818848 234.61851501]
[387.15103149 232.16769409]
[399.43847656 241.13835144]
[401.68017578 255.81861877]
[413.91812134 264.49227905]
[426.15609741 273.16592407]
[438.39407349 281.83959961]
[452.68688965 286.39099121]
[467.68688965 286.39099121]
[482.68688965 286.39099121]
[497.68688965 286.39099121]
[512.68688965 286.39099121]
[527.68688965 286.39099121]
[542.68688965 286.39099121]
[557.68688965 286.39099121]
[572.68688965 286.39099121]
[583.68359375 275.03985596]
[599.48699951 274.87277222]
[610.72119141 285.98886108]
[610.72119141 301.79312134]
[599.48699951 312.90921021]
[583.68359375 312.74212646]
[572.68688965 301.39099121]
[557.68688965 301.39099121]
[542.68688965 301.39099121]
[527.68688965 301.39099121]
[512.68688965 301.39099121]
[497.68688965 301.39099121]
[482.68688965 301.39099121]
[467.68688965 301.39099121]
[452.68688965 301.39099121]
[449.84219360 308.33056641]
[444.15286255 322.20974731]
[441.30816650 329.14932251]
[451.99234009 339.67779541]
[462.67651367 350.20623779]
[473.36068726 360.73471069]
[484.04486084 371.26318359]
[492.35186768 375.05642700]
[494.80715942 382.02548218]
[505.33563232 392.70965576]
[515.86407471 403.39382935]
[526.39257812 414.07800293]
[542.19628906 413.94335938]
[553.40765381 425.08248901]
[553.37518311 440.88674927]
[542.11816406 451.97973633]
[526.31512451 451.78018188]
[515.34173584 440.40649414]
[515.70837402 424.60644531]
[505.17993164 413.92227173]
[494.65145874 403.23812866]
[484.12298584 392.55395508]
[473.51638794 381.94735718]
[462.83221436 371.41888428]
[452.14804077 360.89041138]
[441.46386719 350.36196899]
[430.77972412 339.83349609]
[435.10833740 354.19534302]
[425.96844482 366.08914185]
[413.43643188 374.33224487]
[398.89550781 378.01483154]
[383.95059204 376.73046875]
[370.25122070 370.62088013]
[359.30941772 360.36041260]
[352.33285522 347.08157349]
[350.09158325 332.24996948]
[352.83297729 317.50259399]
[360.25445557 304.46719360]
[371.53686523 294.58251953]
[385.43496704 288.93954468]
[400.41476440 288.16116333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[17 134]
[18 133]
[19 132]
[22 131]
[23 130]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[59 68]
[60 67]
[61 66]
[77 88]
[78 87]
[79 86]
[80 85]
[97 129]
[98 128]
[99 127]
[104 122]
[105 121]
[106 120]
[108 118]
[109 117]
[110 116]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[181 194]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
