%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUCCCCUGCAGCAAGGGGCGGGGCCACCCCAACGCCGCUUCUGCGGCCAAAGUAGGUUGGGAGUGGAAGGUGGUGGCUGCUGCUCCGCAGUGUCGGGAAGAUGGCGCCGCCGGUGGCAGAGAGGGGGCUAAAGAGCGUCGUGUGGCAGAAGAUAAAAGCAACAGUGUUUGAUGACUGCAAGAAAGAAGGCGAAUGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[109.78941345 343.90069580]
[121.25084686 333.26257324]
[120.32743073 318.29101562]
[119.40401459 303.31945801]
[118.48060608 288.34790039]
[117.55718994 273.37637329]
[109.05106354 261.14953613]
[115.92413330 246.89923096]
[115.00072479 231.92767334]
[114.07730865 216.95613098]
[112.23398590 202.06982422]
[109.47773743 187.32522583]
[106.72149658 172.58062744]
[103.96525574 157.83602905]
[101.09556580 143.11309814]
[98.11258698 128.41268921]
[62.80377960 103.56533051]
[88.22193146 55.26647568]
[73.26637268 54.11261749]
[58.31082153 52.95876312]
[43.35526657 51.80490494]
[28.39971161 50.65105057]
[13.44415760 49.49719238]
[-1.51139736 48.34333801]
[-16.47539330 47.30467224]
[-31.44694328 46.38125992]
[-46.41849136 45.45784378]
[-61.39004135 44.53443146]
[-76.36159515 43.61101913]
[-91.33314514 42.68760300]
[-106.30469513 41.76419067]
[-121.28290558 40.95608521]
[-136.26690674 40.26333237]
[-143.33012390 49.83443069]
[-154.02809143 54.75479507]
[-165.65251160 53.90620041]
[-175.32147217 47.61508942]
[-180.69390869 37.54276657]
[-195.64945984 36.38890839]
[-210.60502625 35.23505402]
[-225.56057739 34.08119583]
[-240.51612854 32.92734146]
[-255.47167969 31.77348328]
[-270.42724609 30.61962700]
[-276.55355835 33.12944031]
[-282.18142700 32.29047394]
[-285.82327271 29.19297600]
[-300.73617554 27.57910919]
[-315.64910889 25.96524239]
[-330.56204224 24.35137749]
[-345.47497559 22.73751068]
[-357.62911987 32.83961105]
[-373.35876465 31.30542946]
[-383.33178711 19.04516602]
[-381.63140869 3.33261681]
[-369.26638794 -6.51023960]
[-353.57269287 -4.64381170]
[-343.86111450 7.82458210]
[-328.94818115 9.43844891]
[-314.03524780 11.05231476]
[-299.12231445 12.66618061]
[-284.20938110 14.28004742]
[-269.27337646 15.66407299]
[-254.31782532 16.81792831]
[-239.36227417 17.97178459]
[-224.40672302 19.12564087]
[-209.45117188 20.27949715]
[-194.49560547 21.43335342]
[-179.54005432 22.58720970]
[-166.38591003 9.86177921]
[-147.78828430 10.80298328]
[-135.57415771 25.27933693]
[-120.59015656 25.97208977]
[-113.75946808 23.13912773]
[-105.38127899 26.79264069]
[-90.40972900 27.71605492]
[-75.43817902 28.63946724]
[-60.46662903 29.56288147]
[-45.49507904 30.48629570]
[-30.52352905 31.40970802]
[-15.55198002 32.33312225]
[-8.67847443 29.60568428]
[-0.35754105 33.38778305]
[14.59801388 34.54164124]
[29.55356789 35.69549561]
[44.50912476 36.84935379]
[59.46467590 38.00320816]
[74.42023468 39.15706635]
[89.37578583 40.31092072]
[100.30398560 30.03598022]
[100.07299805 15.03775978]
[92.12409973 1.35837281]
[99.66448975 -11.48653984]
[99.43350220 -26.48476028]
[99.20251465 -41.48298264]
[98.97151947 -56.48120499]
[98.74053192 -71.47942352]
[98.50954437 -86.47764587]
[86.99040985 -97.29823303]
[86.57997131 -113.09719086]
[97.52174377 -124.50128174]
[113.32415771 -124.74465942]
[124.61192322 -113.68292999]
[124.68821716 -97.87882233]
[113.50776672 -86.70863342]
[113.73875427 -71.71041870]
[113.96974182 -56.71219254]
[114.20073700 -41.71397400]
[114.43172455 -26.71575165]
[114.66271210 -11.71752930]
[122.59509277 0.88908362]
[115.07122040 14.80676937]
[115.30220795 29.80499077]
[121.96366119 33.25101852]
[134.59362793 25.15881920]
[135.28656006 40.14307404]
[141.94799805 43.58910370]
[154.32296753 35.11205673]
[161.33544922 20.92982483]
[176.20803833 20.12043190]
[188.58300781 11.64338589]
[187.27915955 -0.79555422]
[191.36607361 -12.53964138]
[200.00955200 -21.37855721]
[211.52404785 -25.67649460]
[223.70120239 -24.67469215]
[234.23326111 -18.62461853]
[246.86340332 -26.71655655]
[254.30929565 -40.67611313]
[269.19976807 -41.02711868]
[281.82989502 -49.11905670]
[294.46005249 -57.21099472]
[301.51028442 -72.01728821]
[317.87719727 -73.04484558]
[326.72393799 -59.23660278]
[318.94970703 -44.79729843]
[302.55200195 -44.58085251]
[289.92184448 -36.48891449]
[277.29168701 -28.39697456]
[270.74920654 -15.01620674]
[254.95533752 -14.08641243]
[242.32519531 -5.99447441]
[242.11589050 11.65978622]
[231.25872803 25.78118515]
[213.94827271 30.60457230]
[197.06004333 24.01834869]
[184.68508911 32.49539566]
[178.55775452 46.07129288]
[162.80000305 47.48701859]
[150.42504883 55.96406555]
[151.00198364 63.44184113]
[165.92614746 61.93540955]
[180.85029602 60.42897415]
[195.77445984 58.92253876]
[209.96617126 54.06499481]
[219.45486450 65.68241882]
[211.86128235 78.61831665]
[197.09169006 75.99549103]
[182.11306763 76.79612732]
[167.13444519 77.59676361]
[152.15583801 78.39739990]
[152.73275757 85.87517548]
[166.26158142 92.35368347]
[179.79040527 98.83219147]
[194.61111450 93.34383392]
[208.93670654 100.01863098]
[214.26806641 114.89653778]
[207.44218445 129.15075684]
[192.50872803 134.32452393]
[178.32746887 127.34832001]
[173.31188965 112.36100769]
[159.78306580 105.88249969]
[146.25425720 99.40399170]
[131.94183350 119.39044952]
[112.81299591 125.42971802]
[115.79596710 140.13012695]
[120.57194519 147.92321777]
[118.70985413 155.07978821]
[121.46609497 169.82438660]
[124.22233582 184.56898499]
[126.97857666 199.31358337]
[134.65071106 186.42410278]
[148.38636780 180.39654541]
[163.06661987 183.47721863]
[173.22045898 194.51802063]
[175.06381226 209.40432739]
[167.90968323 222.58834839]
[154.42427063 229.15673828]
[139.63325500 226.66157532]
[129.04885864 216.03271484]
[129.97227478 231.00427246]
[130.89569092 245.97581482]
[139.46786499 259.27349854]
[132.52873230 272.45294189]
[133.45214844 287.42449951]
[134.37556458 302.39605713]
[135.29898071 317.36758423]
[136.22239685 332.33914185]
[148.90425110 341.48815918]
[152.68811035 356.66104126]
[145.78733826 370.69363403]
[131.46026611 376.96014404]
[116.47171783 372.50177002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[8 192]
[9 191]
[10 190]
[11 181]
[12 180]
[13 179]
[14 178]
[15 176]
[16 175]
[18 89]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[31 75]
[32 73]
[33 72]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[90 113]
[91 112]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[117 150]
[118 149]
[120 147]
[121 146]
[127 142]
[128 141]
[130 139]
[131 138]
[132 137]
[162 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
