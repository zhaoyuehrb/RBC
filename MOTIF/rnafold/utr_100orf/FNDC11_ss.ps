%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGGCCCCAGCACUGACCUCCGUGGGGGUGGAGAUGAGGAGGAUGGAAAGGGUGUCUUCCUCCAGCAUCUUCCUGAAGCUCCCGGAUAAUGAGCACCCAUGUGGCAGGCCUGGGCCUGGACAAGAUGAAGCUGGGCAAUCCCCAGUCCUUCCUGGACCAGGAGGAGGCAGAUGACCAGCAGCUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[74.24069977 162.63511658]
[56.84840012 151.04093933]
[44.02946854 134.88055420]
[36.89118195 115.82154846]
[35.96573639 95.76626587]
[41.17398071 76.66217041]
[27.98493385 69.51731110]
[14.79588699 62.37244797]
[1.60684001 55.22758484]
[-11.58220673 48.08272552]
[-24.77125359 40.93786240]
[-39.74961090 45.21413803]
[-53.02339935 37.78034973]
[-57.00786972 23.47442245]
[-70.19691467 16.32956123]
[-79.24823761 14.98966026]
[-83.54110718 8.95954990]
[-96.61210632 1.60095799]
[-109.68311310 -5.75763416]
[-118.71142578 -7.24468565]
[-122.90557098 -13.34387207]
[-135.85507202 -20.91424561]
[-148.51684570 -18.40458870]
[-159.15054321 -24.98872375]
[-162.33572388 -36.66824722]
[-175.16029358 -44.44839478]
[-187.98484802 -52.22854614]
[-200.80940247 -60.00869370]
[-213.63395691 -67.78884125]
[-226.45851135 -75.56899261]
[-242.27041626 -76.11165619]
[-249.13870239 -89.32815552]
[-261.96325684 -97.10830688]
[-275.37786865 -103.82008362]
[-289.29376221 -109.41905212]
[-303.20962524 -115.01802063]
[-317.12548828 -120.61699677]
[-331.32540894 -111.44016266]
[-348.03164673 -112.51903534]
[-360.67971802 -123.23138428]
[-364.41793823 -139.20872498]
[-378.42309570 -144.58044434]
[-392.42828369 -149.95216370]
[-406.43344116 -155.32388306]
[-420.43859863 -160.69560242]
[-434.44375610 -166.06732178]
[-448.44891357 -171.43904114]
[-462.45410156 -176.81076050]
[-476.45925903 -182.18247986]
[-490.50790405 -172.77574158]
[-507.22949219 -173.58253479]
[-520.05023193 -184.08760071]
[-524.04803467 -200.00196838]
[-538.13879395 -205.14501953]
[-552.22955322 -210.28805542]
[-566.32031250 -215.43110657]
[-581.41430664 -209.99510193]
[-594.99920654 -218.52915955]
[-596.65380859 -234.48664856]
[-585.10888672 -245.62637329]
[-569.22064209 -243.40289307]
[-561.17724609 -229.52185059]
[-547.08648682 -224.37879944]
[-532.99572754 -219.23576355]
[-518.90502930 -214.09271240]
[-508.56201172 -222.54779053]
[-495.28463745 -224.80235291]
[-482.52688599 -220.16133118]
[-473.66125488 -209.73768616]
[-471.08752441 -196.18765259]
[-457.08236694 -190.81591797]
[-443.07720947 -185.44419861]
[-429.07205200 -180.07247925]
[-415.06686401 -174.70075989]
[-401.06170654 -169.32904053]
[-387.05654907 -163.95732117]
[-373.05139160 -158.58560181]
[-359.04623413 -153.21388245]
[-348.56695557 -161.49949646]
[-335.25466919 -163.53764343]
[-322.57412720 -158.68957520]
[-313.87936401 -148.12300110]
[-311.52651978 -134.53286743]
[-297.61065674 -128.93389893]
[-283.69479370 -123.33493042]
[-269.77890015 -117.73596191]
[-277.58447266 -130.54505920]
[-278.04772949 -145.53790283]
[-271.04788208 -158.80448914]
[-258.41040039 -166.88497925]
[-243.43107605 -167.67205811]
[-230.01635742 -160.96047974]
[-221.66471863 -148.50053406]
[-220.55416870 -133.54170227]
[-226.97436523 -119.98511505]
[-239.25094604 -111.36621094]
[-254.18310547 -109.93286896]
[-241.35855103 -102.15271759]
[-226.46395874 -102.16654205]
[-218.67837524 -88.39355469]
[-205.85380554 -80.61340332]
[-193.02925110 -72.83325195]
[-180.20469666 -65.05310059]
[-167.38014221 -57.27295303]
[-154.55557251 -49.49280548]
[-137.02236938 -50.06486893]
[-128.28469849 -33.86374283]
[-115.33519745 -26.29336739]
[-102.32452393 -18.82863808]
[-89.25351715 -11.47004509]
[-76.18251801 -4.11145258]
[-63.05205536 3.14051414]
[-49.86300659 10.28537560]
[-35.70342636 5.80856705]
[-22.22607422 12.86658955]
[-17.62639236 27.74881554]
[-4.43734550 34.89367676]
[8.75170135 42.03853989]
[21.94074821 49.18339920]
[35.12979507 56.32826233]
[48.31884384 63.47312164]
[55.61686707 54.88578415]
[64.32228088 47.72901917]
[74.15904236 42.22976685]
[84.81521606 38.56241226]
[95.95289612 36.84324265]
[107.21891785 37.12677765]
[118.25601959 39.40402222]
[128.71423340 43.60276794]
[138.26190186 49.58986664]
[146.59629822 57.17547607]
[153.45312500 66.11904907]
[158.61494446 76.13699341]
[161.91809082 86.91162872]
[176.85801697 85.57051086]
[191.79794312 84.22940063]
[206.73786926 82.88828278]
[221.67779541 81.54716492]
[236.61772156 80.20604706]
[247.96435547 68.86437988]
[263.88934326 70.80722809]
[272.17636108 84.54420471]
[266.46835327 99.53748322]
[251.14401245 104.28549194]
[237.95883179 95.14598083]
[223.01890564 96.48709106]
[208.07897949 97.82820892]
[193.13905334 99.16932678]
[178.19912720 100.51043701]
[163.25920105 101.85155487]
[164.20693970 116.89874268]
[161.47097778 132.42947388]
[174.66003418 139.57434082]
[187.84907532 146.71920776]
[201.03811646 153.86405945]
[214.22717285 161.00892639]
[227.41621399 168.15377808]
[240.60525513 175.29864502]
[257.41213989 177.52684021]
[259.92364502 194.29373169]
[244.50724792 201.34861755]
[233.46040344 188.48768616]
[220.27134705 181.34283447]
[207.08230591 174.19796753]
[193.89326477 167.05311584]
[180.70420837 159.90824890]
[167.51516724 152.76338196]
[154.32612610 145.61853027]
[148.39772034 150.21243286]
[157.58552551 162.06924438]
[166.77334595 173.92605591]
[175.96116638 185.78286743]
[185.14878845 197.63984680]
[173.29167175 206.82727051]
[164.10435486 194.97068787]
[154.91653442 183.11387634]
[145.72871399 171.25706482]
[136.54089355 159.40025330]
[130.61248779 163.99415588]
[134.23869324 178.54925537]
[137.86488342 193.10433960]
[141.49108887 207.65943909]
[145.11727905 222.21452332]
[156.89004517 233.63092041]
[152.62767029 249.46646118]
[136.71493530 253.43089294]
[125.52148438 241.44595337]
[130.56217957 225.84072876]
[126.93598938 211.28562927]
[123.30979156 196.73054504]
[119.68359375 182.17544556]
[116.05740356 167.62036133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[14 113]
[15 112]
[17 111]
[18 110]
[19 109]
[21 108]
[22 107]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[30 100]
[32 98]
[33 97]
[34 86]
[35 85]
[36 84]
[37 83]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[53 65]
[54 64]
[55 63]
[56 62]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
