%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGGGGUAUACACAGGGAGGCCAGGCAGCCUGGAGUUAGUCGACCGUUGCGAGACGUUGAGCUGCGGCAGAUGAGUCCAAAGCCGAGAGCCUCGGGACCUCCGGCCAAGGCCAAGGAGACAGGAAAGAGGAAGUCCUCCUCUCAGCCGAGCCCCAGUGGCCCGAAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[67.48068237 459.30572510]
[60.92098618 445.59298706]
[60.11323929 430.41354370]
[65.18061829 416.08209229]
[75.35038757 404.78411865]
[89.07173157 398.24246216]
[88.25495148 383.26470947]
[87.43817902 368.28698730]
[86.62140656 353.30923462]
[84.22026825 350.68130493]
[82.99116516 346.74673462]
[83.54013062 342.07772827]
[86.19062042 337.49801636]
[86.19062042 322.49801636]
[86.19062042 307.49801636]
[77.85080719 298.70504761]
[77.74920654 286.18524170]
[86.48720551 276.66616821]
[86.75958252 261.66864014]
[83.72631073 254.89958191]
[87.17554474 246.40191650]
[87.72020721 231.41180420]
[88.26486969 216.42169189]
[77.96569061 205.72297668]
[78.30451965 190.51312256]
[89.59613800 179.78292847]
[90.14080811 164.79283142]
[90.68547058 149.80271912]
[74.28884125 143.65783691]
[60.96312714 132.29850769]
[52.29994965 117.08146667]
[49.33403397 99.82421875]
[52.41962051 82.58797455]
[39.25147247 75.40467072]
[26.08332062 68.22137451]
[12.91516972 61.03807449]
[-2.90497065 61.22174835]
[-10.37265587 48.33443069]
[-23.54080582 41.15113068]
[-36.70895767 33.96783066]
[-45.77682877 32.59624863]
[-50.04927444 26.53265572]
[-63.08481598 19.11142540]
[-78.14997101 23.07108688]
[-91.26414490 15.35920715]
[-94.94623566 0.97248447]
[-107.98177338 -6.44874573]
[-121.01731873 -13.86997604]
[-134.05285645 -21.29120636]
[-149.87371826 -21.39482880]
[-157.10617065 -34.41562271]
[-170.14170837 -41.83685303]
[-183.35545349 -34.00789642]
[-198.71353149 -33.85073853]
[-212.08471680 -41.40765762]
[-219.87222290 -54.64587402]
[-219.98123169 -70.00437927]
[-212.38244629 -83.35181427]
[-199.11988831 -91.09777832]
[-183.76110840 -91.15865326]
[-170.43756104 -83.51805878]
[-162.73320007 -70.23128510]
[-162.72047424 -54.87239456]
[-149.68493652 -47.45116425]
[-134.79646301 -47.87835693]
[-126.63162994 -34.32674789]
[-113.59608459 -26.90551758]
[-100.56054688 -19.48428726]
[-87.52500153 -12.06305695]
[-73.27421570 -16.24046135]
[-59.94860458 -8.89997482]
[-55.66358566 6.07588387]
[-42.62804413 13.49711418]
[-29.52565575 20.79968071]
[-16.35750580 27.98298073]
[-3.18935513 35.16628265]
[11.68891048 34.46880722]
[20.09847069 47.86992264]
[33.26662064 55.05322266]
[46.43477249 62.23652267]
[59.60292053 69.41982269]
[67.81112671 60.87267685]
[77.78018188 54.46593857]
[88.96474457 50.55008316]
[100.75297546 49.33932495]
[103.19360352 34.53921127]
[105.63423920 19.73910141]
[108.07487488 4.93898869]
[110.51550293 -9.86112309]
[107.12690735 -26.47297859]
[122.15150452 -34.32777023]
[133.85855103 -22.06476021]
[125.31561279 -7.42049074]
[122.87498474 7.37962103]
[120.43434906 22.17973328]
[117.99372101 36.97984314]
[115.55308533 51.77995682]
[122.36627197 52.47729111]
[129.24267578 54.15237427]
[136.04078674 56.83084488]
[142.61384583 60.51779938]
[154.09478760 50.86439896]
[165.57571411 41.21099472]
[177.05665588 31.55759430]
[188.36039734 21.69730759]
[199.48324585 11.63338757]
[210.60607910 1.56946766]
[215.11816406 -14.19673252]
[231.09156799 -17.90919495]
[242.09422302 -5.74885893]
[236.80752563 9.77476597]
[220.66999817 12.69230556]
[209.54716492 22.75622559]
[198.42431641 32.82014465]
[197.29652405 37.49441528]
[193.19863892 41.49668884]
[186.71005249 43.03852844]
[175.22912598 52.69192886]
[163.74818420 62.34532928]
[152.26725769 71.99873352]
[154.02140808 79.29071045]
[168.60536194 75.78240967]
[181.39149475 67.93928528]
[192.80177307 77.67610931]
[187.06729126 91.53669739]
[172.11366272 90.36637115]
[157.52970886 93.87467194]
[159.28385925 101.16664886]
[173.89906311 104.54238892]
[188.51428223 107.91812897]
[203.12948608 111.29386902]
[217.74470520 114.66960907]
[232.35990906 118.04534912]
[246.67312622 110.79886627]
[261.20227051 117.60204315]
[264.80184937 133.23606873]
[254.71055603 145.70785522]
[238.66957092 145.45010376]
[228.98416138 132.66055298]
[214.36895752 129.28482056]
[199.75375366 125.90908051]
[185.13853455 122.53334045]
[170.52333069 119.15760040]
[155.90811157 115.78186035]
[143.60801697 134.52000427]
[125.79069519 146.46388245]
[105.67557526 150.34738159]
[105.13091278 165.33749390]
[104.58625031 180.32759094]
[115.06935883 191.84896851]
[114.30345154 207.04331970]
[103.25498199 216.96635437]
[102.71031189 231.95646667]
[102.16564941 246.94657898]
[101.75711060 261.94100952]
[101.48473358 276.93853760]
[110.77709961 292.81698608]
[101.19062042 307.49801636]
[101.19062042 322.49801636]
[101.19062042 337.49801636]
[101.59915161 352.49246216]
[102.41593170 367.47021484]
[103.23270416 382.44793701]
[104.04947662 397.42568970]
[118.40079498 402.43646240]
[129.73881531 412.56158447]
[136.33457947 426.25698853]
[137.18225098 441.43426514]
[132.15258789 455.77899170]
[122.01258850 467.10369873]
[108.30850220 473.68142700]
[93.13011932 474.50912476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 164]
[7 163]
[8 162]
[9 161]
[13 160]
[14 159]
[15 158]
[18 156]
[19 155]
[21 154]
[22 153]
[23 152]
[26 149]
[27 148]
[28 147]
[33 81]
[34 80]
[35 79]
[36 78]
[38 76]
[39 75]
[40 74]
[42 73]
[43 72]
[46 69]
[47 68]
[48 67]
[49 66]
[51 64]
[52 63]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[101 120]
[102 119]
[103 118]
[104 117]
[105 114]
[106 113]
[107 112]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
