%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGAGGCAGCGUGAAGCUGGGGCCUGCUCCCCGCAGCCUCUGGAGCGCAUCUCAGACCUUCUGAGACCUAUGUUGCUGGCCCCCCAGAACCCGCAACAUGGCAGAUGGGGCAAAGGCCAACCCCAAAGGGUUCAAAAAGAAGGUGCUGGAUAGAUGCUUCUCUGGGUGGAGGGGCCCACGCUUCGGGGCCUCCUGUC\
) } def
/len { sequence length } bind def

/coor [
[61.29922485 724.56054688]
[58.67899323 709.35736084]
[64.71523285 695.15991211]
[77.48179626 686.49859619]
[77.00827026 671.50604248]
[76.53474426 656.51354980]
[76.06121826 641.52099609]
[75.58768463 626.52850342]
[65.76581573 620.70111084]
[59.92001343 610.75085449]
[59.60463333 599.09478760]
[65.01392365 588.62988281]
[74.90491486 582.01300049]
[74.90491486 567.01300049]
[74.90491486 552.01300049]
[74.90491486 537.01300049]
[74.90491486 522.01300049]
[74.90491486 507.01300049]
[64.22404480 496.69531250]
[64.01036835 481.48318481]
[74.90491486 470.35006714]
[74.90491486 455.35006714]
[74.90491486 440.35006714]
[74.90491486 425.35006714]
[74.90491486 410.35006714]
[74.90491486 395.35006714]
[71.75807190 388.65466309]
[75.02518463 380.11373901]
[75.26197815 365.11560059]
[75.49877167 350.11746216]
[75.73556519 335.11935425]
[75.85396576 320.11981201]
[75.85396576 305.11981201]
[72.70712280 298.42440796]
[75.97423553 289.88348389]
[76.21102905 274.88534546]
[76.44783020 259.88720703]
[63.99144745 268.24417114]
[49.64318466 263.87069702]
[43.96610641 249.98649597]
[51.13963699 236.81301880]
[65.88267517 234.04846191]
[77.34159088 243.72821045]
[78.76028442 228.79545593]
[80.17898560 213.86268616]
[81.59767914 198.92993164]
[79.09819031 191.96690369]
[83.15846252 183.77328491]
[84.81271362 168.86477661]
[86.46696472 153.95626831]
[88.12121582 139.04777527]
[89.77546692 124.13926697]
[91.42971802 109.23076630]
[92.73050690 94.28727722]
[93.67708588 79.31716919]
[94.62367249 64.34706879]
[95.45206451 49.36996078]
[96.16220856 34.38677979]
[96.87235260 19.40359879]
[97.58249664 4.42041874]
[98.29264069 -10.56276131]
[99.00278473 -25.54594231]
[99.71293640 -40.52912140]
[99.94972992 -55.52725220]
[99.71293640 -70.52538300]
[88.64398956 -81.48513794]
[88.61750031 -96.69874573]
[99.13416290 -107.18375397]
[98.89736938 -122.18188477]
[98.66057587 -137.18002319]
[90.70639038 -150.85632324]
[98.24180603 -163.70416260]
[98.00501251 -178.70228577]
[84.69001770 -186.22944641]
[76.98130035 -199.32418823]
[76.86283112 -214.41897583]
[84.26629639 -227.45909119]
[97.11630249 -234.99188232]
[96.87950897 -249.99000549]
[96.64271545 -264.98812866]
[96.40592194 -279.98626709]
[96.16912842 -294.98440552]
[95.45898438 -309.96759033]
[94.27619171 -324.92086792]
[93.09340668 -339.87417603]
[91.91062164 -354.82745361]
[90.72782898 -369.78076172]
[76.96437073 -376.45266724]
[68.44465637 -389.03485107]
[67.37386322 -404.09207153]
[73.93966675 -417.57339478]
[86.28869629 -425.90206909]
[85.10591125 -440.85537720]
[83.92312622 -455.80865479]
[72.70227814 -467.27481079]
[74.81370544 -483.17831421]
[88.63769531 -491.31936646]
[103.56966400 -485.45288086]
[108.15508270 -470.07907104]
[98.87641907 -456.99145508]
[100.05920410 -442.03814697]
[101.24199677 -427.08486938]
[114.74684906 -420.80120850]
[123.35045624 -408.51974487]
[124.66017914 -393.48144531]
[118.22451782 -379.71630859]
[105.68112183 -370.96356201]
[106.86391449 -356.01025391]
[108.04669952 -341.05694580]
[109.22949219 -326.10366821]
[110.41227722 -311.15036011]
[112.46514130 -309.22784424]
[113.87628937 -306.37234497]
[114.28507233 -302.82562256]
[113.42544556 -298.95590210]
[111.16725922 -295.22119141]
[111.40405273 -280.22305298]
[111.64084625 -265.22494507]
[111.87763977 -250.22680664]
[112.11443329 -235.22866821]
[125.19583893 -228.10530090]
[133.00726318 -215.30538940]
[133.36537170 -200.21440125]
[126.07388306 -186.88282776]
[113.00314331 -178.93908691]
[113.23993683 -163.94094849]
[121.17719269 -151.33740234]
[113.65870667 -137.41680908]
[113.89550018 -122.41867828]
[114.13229370 -107.42054749]
[124.97471619 -97.27276611]
[125.42851257 -82.06590271]
[114.71106720 -70.76217651]
[114.94786072 -55.76404572]
[116.87530518 -53.71579361]
[118.10344696 -50.77693939]
[118.28759766 -47.21149826]
[117.18548584 -43.40373611]
[114.69611359 -39.81897736]
[113.98596954 -24.83579636]
[113.27582550 -9.85261631]
[112.56568146 5.13056374]
[111.85553741 20.11374474]
[111.14538574 35.09692383]
[110.43524170 50.08010483]
[113.26158142 56.91698456]
[109.59377289 65.29365540]
[108.64719391 80.26375580]
[107.70060730 95.23385620]
[109.82229614 98.46733093]
[110.50372314 102.62214661]
[109.36478424 107.03192139]
[106.33822632 110.88501740]
[104.68397522 125.79351807]
[103.02971649 140.70202637]
[101.37546539 155.61051941]
[99.72121429 170.51902771]
[98.06696320 185.42753601]
[96.53044128 200.34863281]
[95.11174011 215.28138733]
[93.69304657 230.21414185]
[92.27434540 245.14691162]
[91.44596100 260.12402344]
[91.20915985 275.12213135]
[90.97236633 290.12026978]
[90.85396576 305.11981201]
[90.85396576 320.11981201]
[93.98584747 328.71124268]
[90.73370361 335.35614014]
[90.49690247 350.35427856]
[90.26010895 365.35238647]
[90.02331543 380.35052490]
[89.90491486 395.35006714]
[89.90491486 410.35006714]
[89.90491486 425.35006714]
[89.90491486 440.35006714]
[89.90491486 455.35006714]
[89.90491486 470.35006714]
[100.79946899 481.48318481]
[100.58579254 496.69531250]
[89.90491486 507.01300049]
[89.90491486 522.01300049]
[89.90491486 537.01300049]
[89.90491486 552.01300049]
[89.90491486 567.01300049]
[89.90491486 582.01300049]
[103.80120850 594.87841797]
[103.88960266 613.49645996]
[90.58020782 626.05499268]
[91.05374146 641.04748535]
[91.52726746 656.04003906]
[92.00079346 671.03253174]
[92.47432709 686.02508545]
[105.76202393 693.86346436]
[112.68216705 707.65167236]
[111.02656555 722.98999023]
[101.32351685 734.98388672]
[86.66922760 739.80627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 167]
[33 166]
[35 165]
[36 164]
[37 163]
[43 162]
[44 161]
[45 160]
[46 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[54 149]
[55 148]
[56 147]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 134]
[65 133]
[68 130]
[69 129]
[70 128]
[72 126]
[73 125]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[92 102]
[93 101]
[94 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
