%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUAGGCCGCGUCACGUGACGGGCUCAGCGCUCCGCAGUCACGUGACGCUCGUCCGCAACCUCUGCUGUCCUCCGCGGCGCCCCCUUCCGCCUGACGCGCCCCCGGCGGCGGCCGCGCAGCCCUGGCUCCUCGCGGGCUCGGGCGGCGGCUGCGGCGGGGCUAUGGCGAGCGGCGGUGGCGGGGGUAACACUGGCGCGGGUGGGGGGCCGGGGAUGGGCCUGAGCCUGGGCCUGGGUCUGGGUCUGAGCCUAGG\
CAUGAGUG\
) } def
/len { sequence length } bind def

/coor [
[103.46552277 228.09487915]
[118.46546936 228.13513184]
[131.47535706 235.60148621]
[125.08220673 222.03211975]
[118.68905640 208.46275330]
[112.29590607 194.89338684]
[105.90275574 181.32402039]
[99.50960541 167.75466919]
[93.11645508 154.18530273]
[78.25669861 152.13896179]
[68.43378448 163.47520447]
[58.61087799 174.81144714]
[48.78796387 186.14768982]
[38.96505356 197.48393250]
[29.14214325 208.82017517]
[19.31923294 220.15641785]
[9.49632168 231.49266052]
[-0.32658976 242.82890320]
[-10.14950085 254.16514587]
[-19.97241211 265.50140381]
[-29.79532242 276.83764648]
[-39.34567642 288.40441895]
[-48.61806107 300.19522095]
[-57.89044571 311.98602295]
[-67.16282654 323.77682495]
[-66.69358063 339.81301880]
[-79.03120422 350.06790161]
[-94.71133423 346.67480469]
[-101.70551300 332.23660278]
[-94.64840698 317.82910156]
[-78.95362854 314.50442505]
[-69.68124390 302.71365356]
[-60.40885544 290.92285156]
[-51.13647079 279.13204956]
[-51.31489182 276.36541748]
[-50.42619324 273.36230469]
[-48.37526703 270.52224731]
[-45.21101761 268.27185059]
[-41.13156509 267.01470947]
[-31.30865479 255.67848206]
[-21.48574448 244.34223938]
[-11.66283321 233.00599670]
[-1.83992243 221.66975403]
[7.98298883 210.33351135]
[17.80590057 198.99726868]
[27.62881088 187.66102600]
[37.45172119 176.32476807]
[47.27463150 164.98852539]
[57.09754181 153.65228271]
[66.92045593 142.31604004]
[63.48375702 135.64978027]
[50.15122223 142.52317810]
[36.81858444 149.39636230]
[29.94560051 136.06362915]
[43.27782440 129.19064331]
[56.61035919 122.31724548]
[53.17366028 115.65097809]
[38.24158096 117.07682037]
[23.30950165 118.50266266]
[12.02738476 129.90850830]
[-3.90835714 128.05603027]
[-12.27318668 114.36627960]
[-6.65032244 99.34087372]
[8.64685535 94.50600433]
[21.88366127 103.57058716]
[36.81573868 102.14474487]
[51.74781799 100.71890259]
[55.96297455 88.40386200]
[63.05253601 78.35872650]
[72.12686920 71.17176056]
[82.20451355 67.12740326]
[92.30759430 66.20338440]
[101.55123138 68.09600830]
[105.77721405 53.70361328]
[110.00320435 39.31121826]
[106.46727753 23.89019966]
[117.47685242 13.85832119]
[121.70284271 -0.53407335]
[125.92882538 -14.92646790]
[130.15481567 -29.31886292]
[126.61888885 -44.73987961]
[137.62846375 -54.77175903]
[141.85444641 -69.16415405]
[146.08044434 -83.55654907]
[150.30642700 -97.94894409]
[154.44670105 -112.36622620]
[158.50112915 -126.80789185]
[162.55555725 -141.24955750]
[158.83636475 -156.62741089]
[169.72578430 -166.78958130]
[173.78021240 -181.23124695]
[177.83464050 -195.67291260]
[181.88905334 -210.11457825]
[170.00177002 -219.54685974]
[162.65115356 -232.77604675]
[160.93013000 -247.77110291]
[165.06999207 -262.24346924]
[174.40995789 -273.99633789]
[187.50238037 -281.25811768]
[202.33709717 -282.94949341]
[206.39152527 -297.39114380]
[210.44593811 -311.83282471]
[214.50036621 -326.27447510]
[218.55479431 -340.71615601]
[222.60922241 -355.15780640]
[221.91499329 -364.23233032]
[226.79876709 -369.74664307]
[231.02474976 -384.13903809]
[227.48883057 -399.56005859]
[238.49839783 -409.59194946]
[242.72438049 -423.98434448]
[239.18846130 -439.40536499]
[250.19802856 -449.43722534]
[254.42401123 -463.82962036]
[258.64999390 -478.22201538]
[262.87600708 -492.61441040]
[267.10198975 -507.00680542]
[259.33728027 -517.98852539]
[259.30499268 -531.24353027]
[266.79333496 -541.94427490]
[278.89196777 -546.32196045]
[283.28890991 -560.66302490]
[287.68585205 -575.00415039]
[284.33367920 -590.46612549]
[295.46185303 -600.36627197]
[299.85882568 -614.70739746]
[304.25576782 -629.04846191]
[308.65270996 -643.38952637]
[313.04968262 -657.73065186]
[317.44662476 -672.07171631]
[321.84359741 -686.41278076]
[326.15512085 -700.77978516]
[330.38113403 -715.17218018]
[334.60711670 -729.56457520]
[338.83309937 -743.95697021]
[343.05908203 -758.34936523]
[342.47290039 -767.43151855]
[347.42193604 -772.88732910]
[351.81890869 -787.22845459]
[351.34082031 -796.31689453]
[356.35443115 -801.71343994]
[360.92172241 -816.00122070]
[354.87799072 -830.86230469]
[362.85403442 -844.78216553]
[378.73129272 -847.08264160]
[390.33010864 -835.99902344]
[388.75286865 -820.03369141]
[375.20947266 -811.43389893]
[370.64218140 -797.14617920]
[366.15997314 -782.83148193]
[361.76303101 -768.49041748]
[357.45147705 -754.12341309]
[353.22549438 -739.73101807]
[348.99951172 -725.33862305]
[344.77352905 -710.94622803]
[340.54751587 -696.55383301]
[341.67474365 -689.27447510]
[336.18466187 -682.01586914]
[331.78771973 -667.67474365]
[327.39077759 -653.33367920]
[322.99380493 -638.99261475]
[318.59686279 -624.65148926]
[314.19989014 -610.31042480]
[309.80294800 -595.96936035]
[313.46963501 -581.53308105]
[302.02694702 -570.60717773]
[297.63000488 -556.26605225]
[293.23303223 -541.92498779]
[301.74331665 -527.40234375]
[297.00845337 -510.89730835]
[281.49438477 -502.78082275]
[277.26840210 -488.38842773]
[273.04238892 -473.99603271]
[268.81640625 -459.60363770]
[264.59042358 -445.21124268]
[268.42861938 -430.81967163]
[257.11679077 -419.75836182]
[252.89079285 -405.36596680]
[256.72900391 -390.97439575]
[245.41714478 -379.91305542]
[241.19116211 -365.52066040]
[237.05087280 -351.10339355]
[232.99645996 -336.66171265]
[228.94203186 -322.22006226]
[224.88760376 -307.77838135]
[220.83317566 -293.33673096]
[216.77876282 -278.89508057]
[228.56553650 -269.72985840]
[235.96539307 -256.71496582]
[237.82362366 -241.81825256]
[233.82618713 -227.30590820]
[224.55216980 -215.39765930]
[211.39025879 -207.92724609]
[196.33071899 -206.06015015]
[192.27630615 -191.61848450]
[188.22187805 -177.17681885]
[184.16744995 -162.73515320]
[188.17663574 -148.39027405]
[176.99722290 -137.19512939]
[172.94279480 -122.75346375]
[168.88836670 -108.31180573]
[170.10212708 -101.04640961]
[164.69882202 -93.72295380]
[160.47282410 -79.33055878]
[156.24684143 -64.93816376]
[152.02085876 -50.54576874]
[155.85905457 -36.15419388]
[144.54721069 -25.09287453]
[140.32122803 -10.70047951]
[136.09523010 3.69191504]
[131.86924744 18.08430862]
[135.70744324 32.47588730]
[124.39559937 43.53720474]
[120.16960907 57.92959976]
[115.94362640 72.32199860]
[136.46690369 91.78710175]
[135.21517944 124.35880280]
[106.68582153 147.79214478]
[113.07897186 161.36151123]
[119.47212219 174.93087769]
[125.86527252 188.50024414]
[132.25842285 202.06961060]
[138.65156555 215.63897705]
[145.04472351 229.20832825]
[152.23345947 242.37351990]
[160.19233704 255.08793640]
[168.15121460 267.80233765]
[176.11009216 280.51675415]
[184.06896973 293.23117065]
[192.02784729 305.94558716]
[199.98672485 318.66000366]
[207.94560242 331.37438965]
[221.82620239 338.96646118]
[222.02084351 353.85980225]
[229.97972107 366.57418823]
[237.93859863 379.28860474]
[245.89747620 392.00302124]
[261.35375977 395.30130005]
[269.88055420 408.60803223]
[266.41906738 424.02859497]
[253.02290344 432.41421509]
[237.63981628 428.78988647]
[229.39628601 415.30581665]
[233.18307495 399.96191406]
[225.22419739 387.24749756]
[217.26531982 374.53308105]
[209.30644226 361.81866455]
[195.99510193 355.13601685]
[195.23118591 339.33328247]
[187.27230835 326.61886597]
[179.31343079 313.90444946]
[171.35455322 301.19003296]
[163.39567566 288.47564697]
[155.43679810 275.76123047]
[147.47792053 263.04681396]
[139.51904297 250.33239746]
[138.76649475 265.31350708]
[130.69082642 277.95407104]
[117.41348267 284.93344116]
[102.42233276 284.41824341]
[89.65548706 276.54373169]
[82.46672058 263.37857056]
[82.74449921 248.38114929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 224]
[4 223]
[5 222]
[6 221]
[7 220]
[8 219]
[9 218]
[10 50]
[11 49]
[12 48]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 34]
[23 33]
[24 32]
[25 31]
[57 67]
[58 66]
[59 65]
[73 215]
[74 214]
[75 213]
[77 211]
[78 210]
[79 209]
[80 208]
[82 206]
[83 205]
[84 204]
[85 203]
[86 201]
[87 200]
[88 199]
[90 197]
[91 196]
[92 195]
[93 194]
[100 187]
[101 186]
[102 185]
[103 184]
[104 183]
[105 182]
[107 181]
[108 180]
[110 178]
[111 177]
[113 175]
[114 174]
[115 173]
[116 172]
[117 171]
[121 168]
[122 167]
[123 166]
[125 164]
[126 163]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
[138 151]
[139 150]
[141 149]
[142 148]
[225 256]
[226 255]
[227 254]
[228 253]
[229 252]
[230 251]
[231 250]
[232 249]
[234 247]
[235 246]
[236 245]
[237 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
