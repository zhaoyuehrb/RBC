%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGUCCACAUCUUUGAGUGCCGGGAGUUUAAAAGUUAGGCAGUCCUUAUAGGUAUGGAAGCCGAGCUAAUUUCCUUCUGAGCCCCCCAAAUGCCUCCUCCACAUGGCGGGUCCGCAAAUGGGGGGAUCUGCAGAGGAUCACCCCCCACGAAAAAGACAUGCAGCAGAAAAGCAAAAAAAGAAAACAGUUAUAUAUACAAAAU\
) } def
/len { sequence length } bind def

/coor [
[276.25720215 384.79248047]
[267.44039917 372.65722656]
[258.62362671 360.52197266]
[249.80685425 348.38671875]
[240.99008179 336.25146484]
[232.17329407 324.11621094]
[223.35652161 311.98095703]
[216.27343750 312.66012573]
[209.32890320 310.82205200]
[203.39782715 306.64944458]
[199.24427795 300.62213135]
[197.42317200 293.46212769]
[198.20652771 286.04733276]
[201.54399109 279.30383301]
[193.68202209 266.52926636]
[185.82005310 253.75469971]
[171.31600952 250.56594849]
[163.16087341 237.72273254]
[166.60388184 222.53115845]
[158.74191284 209.75659180]
[150.87994385 196.98204041]
[136.37590027 193.79328918]
[128.22076416 180.95005798]
[131.66377258 165.75849915]
[123.80180359 152.98393250]
[115.93984222 140.20936584]
[107.64829254 142.57199097]
[99.05286407 143.24319458]
[90.49506378 142.19630432]
[82.31491089 139.47288513]
[74.83740997 135.18118286]
[68.35964203 129.49166870]
[63.13898087 122.63043213]
[59.38285446 114.87006378]
[57.24049377 106.51888275]
[42.24445724 106.17410278]
[27.24841881 105.82933044]
[12.25238228 105.48455048]
[-1.72198749 112.90260315]
[-14.26805305 104.87480927]
[-29.26408958 104.53002930]
[-44.26012802 104.18524933]
[-54.11245346 112.51440430]
[-66.59851074 111.91577148]
[-75.04813385 103.25536346]
[-90.03712463 102.68082428]
[-105.02612305 102.10628510]
[-113.14139557 115.14614105]
[-126.69690704 122.36719513]
[-142.04629517 121.82701874]
[-155.06065369 113.67091370]
[-162.23918152 100.09283447]
[-161.65089417 84.74521637]
[-153.45404053 71.75648499]
[-139.85351562 64.62055206]
[-124.50782013 65.25694275]
[-111.54484558 73.49447632]
[-104.45158386 87.11729431]
[-89.46258545 87.69183350]
[-74.47359467 88.26637268]
[-59.41733932 79.25498962]
[-43.91534805 89.18921661]
[-28.91931152 89.53399658]
[-13.92327499 89.87876892]
[-1.02152145 82.43605804]
[12.59716129 90.48851013]
[27.59319878 90.83329010]
[42.58923721 91.17807007]
[57.58527374 91.52285004]
[61.27397919 80.73431396]
[67.65359497 71.28447723]
[76.28082275 63.82995987]
[86.55619812 58.88874435]
[97.76572418 56.80417633]
[99.60010529 41.91676331]
[101.43448639 27.02935028]
[103.26885986 12.14193726]
[101.21179962 3.23714423]
[105.24711609 -2.95890570]
[107.30941772 -17.81645966]
[109.37171936 -32.67401505]
[111.32011414 -47.54693222]
[113.15448761 -62.43434525]
[114.76051331 -77.34812164]
[116.13780975 -92.28475952]
[117.51509857 -107.22138977]
[118.89239502 -122.15802765]
[120.26968384 -137.09466553]
[121.64698029 -152.03129578]
[123.02427673 -166.96792603]
[113.19798279 -179.05435181]
[114.80753326 -194.18261719]
[126.39064789 -203.47599792]
[127.76794434 -218.41262817]
[129.14523315 -233.34925842]
[119.89094543 -251.25444031]
[131.71975708 -266.54693604]
[132.63867188 -281.51876831]
[133.55758667 -296.49057007]
[126.68022919 -310.73883057]
[135.18267822 -322.96820068]
[136.10159302 -337.94003296]
[128.30714417 -352.36843872]
[137.13452148 -366.18905640]
[153.50286865 -365.18441772]
[160.57383728 -350.38803101]
[151.07342529 -337.02111816]
[150.15451050 -322.04928589]
[157.09759521 -308.87191772]
[148.52940369 -295.57165527]
[147.61048889 -280.59985352]
[146.69157410 -265.62802124]
[154.12551880 -258.60888672]
[156.51647949 -248.44253540]
[152.83914185 -238.43333435]
[144.08186340 -231.97196960]
[142.70457458 -217.03533936]
[141.32728577 -202.09869385]
[151.01567078 -190.84388733]
[149.83168030 -175.67640686]
[137.96090698 -165.59063721]
[136.58361816 -150.65400696]
[135.20632935 -135.71736145]
[133.82902527 -120.78073120]
[132.45173645 -105.84410095]
[131.07444763 -90.90746307]
[129.69714355 -75.97082520]
[132.00988770 -71.78733826]
[131.71585083 -66.10591125]
[128.04190063 -60.59996796]
[126.20752716 -45.71255493]
[128.51066589 -38.68614960]
[124.22927094 -30.61171341]
[122.16696930 -15.75415897]
[120.10466766 -0.89660501]
[118.15627289 13.97631550]
[116.32189178 28.86372757]
[114.48751831 43.75114059]
[112.65313721 58.63855362]
[131.81762695 70.69965363]
[142.26188660 90.79106903]
[141.12347412 113.40637207]
[128.71440125 132.34739685]
[136.57637024 145.12196350]
[144.43833923 157.89653015]
[159.55175781 161.66773987]
[167.34292603 174.73497009]
[163.65451050 189.12007141]
[171.51647949 201.89463806]
[179.37844849 214.66920471]
[194.49186707 218.44041443]
[202.28303528 231.50764465]
[198.59461975 245.89274597]
[206.45658875 258.66729736]
[214.31855774 271.44186401]
[235.57931519 280.71322632]
[235.49177551 303.16418457]
[244.30854797 315.29943848]
[253.12533569 327.43469238]
[261.94210815 339.56994629]
[270.75888062 351.70520020]
[279.57565308 363.84045410]
[288.39245605 375.97570801]
[296.43496704 379.38470459]
[300.24508667 386.21719360]
[313.53103638 393.18023682]
[328.54034424 388.23086548]
[342.61544800 395.41882324]
[347.40585327 410.47961426]
[340.06948853 424.47793579]
[324.95889282 429.10885620]
[311.03890991 421.62487793]
[306.56802368 406.46618652]
[293.28207397 399.50314331]
[302.04028320 411.68075562]
[308.37442017 425.27777100]
[312.06234741 439.81732178]
[312.97476196 454.78955078]
[311.07965088 469.66937256]
[306.44345093 483.93490601]
[299.22875977 497.08587646]
[289.68862915 508.66110229]
[278.15759277 518.25463867]
[265.04010010 525.52996826]
[250.79612732 530.23205566]
[235.92524719 532.19592285]
[220.94895935 531.35266113]
[206.39250183 527.73193359]
[192.76637268 521.46069336]
[180.54844666 512.75885010]
[170.16719055 501.93161011]
[161.98669434 489.35864258]
[156.29382324 475.48089600]
[153.28826904 460.78509521]
[153.07539368 445.78662109]
[155.66270447 431.01144409]
[160.95942688 416.97775269]
[168.77983093 404.17767334]
[178.84962463 393.06018066]
[190.81568909 384.01510620]
[204.25836182 377.35968018]
[218.70620728 373.32730103]
[233.65252686 372.05941772]
[248.57315063 373.60046387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[14 155]
[15 154]
[16 153]
[19 150]
[20 149]
[21 148]
[24 145]
[25 144]
[26 143]
[35 69]
[36 68]
[37 67]
[38 66]
[40 64]
[41 63]
[42 62]
[45 60]
[46 59]
[47 58]
[74 139]
[75 138]
[76 137]
[77 136]
[79 135]
[80 134]
[81 133]
[82 131]
[83 130]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[93 118]
[94 117]
[95 116]
[97 112]
[98 111]
[99 110]
[101 108]
[102 107]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
