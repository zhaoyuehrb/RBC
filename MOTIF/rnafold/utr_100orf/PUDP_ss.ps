%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGUGCGCGUGCGCGGGGCGGGCGGGUGCGCGCGCACUUCCUCCUCGCCCCCACCCAGACCCAGAAGGCGCCACCAUGGCGGCGCCCCCGCAGCCCGUCACCCACCUCAUCUUUGACAUGGACGGACUUCUUCUGGGUUAUACAGGAAGCAUAGUGGCAGCUGCUUCGGGGGAGU\
) } def
/len { sequence length } bind def

/coor [
[-49.44023132 429.59201050]
[-65.41168213 433.67080688]
[-81.78997803 432.04873657]
[-96.60490417 424.93853760]
[-107.11750031 435.63830566]
[-117.63008881 446.33810425]
[-128.14266968 457.03790283]
[-138.65527344 467.73767090]
[-149.16786194 478.43746948]
[-159.68045044 489.13726807]
[-170.19303894 499.83703613]
[-180.70562744 510.53683472]
[-191.21821594 521.23663330]
[-201.73080444 531.93640137]
[-212.24339294 542.63616943]
[-222.75598145 553.33599854]
[-218.01309204 567.88806152]
[-220.58760071 582.97552490]
[-229.88790894 595.13128662]
[-243.77687073 601.56207275]
[-259.06289673 600.79022217]
[-272.23339844 592.99298096]
[-280.26184082 579.96215820]
[-281.30340576 564.69213867]
[-275.11871338 550.69183350]
[-263.12896729 541.17846680]
[-248.08930969 538.33807373]
[-233.45578003 542.82336426]
[-222.94317627 532.12359619]
[-212.43058777 521.42382812]
[-201.91799927 510.72402954]
[-191.40541077 500.02423096]
[-180.89282227 489.32446289]
[-170.38023376 478.62466431]
[-159.86764526 467.92486572]
[-149.35505676 457.22509766]
[-138.84246826 446.52529907]
[-128.32987976 435.82550049]
[-117.81728363 425.12573242]
[-107.30469513 414.42593384]
[-113.73347473 402.55584717]
[-116.55506897 389.33761597]
[-115.53087616 375.84353638]
[-110.73465729 363.17111206]
[-102.54733276 352.35357666]
[-91.62674713 344.27587891]
[-78.85480499 339.60217285]
[-65.26626587 338.72122192]
[-51.96492004 341.71411133]
[-40.03390503 348.34689331]
[-29.15025139 338.02474976]
[-18.26659966 327.70263672]
[-7.38294697 317.38052368]
[3.50070548 307.05841064]
[-6.98440218 294.77816772]
[-10.95146179 279.44696045]
[-7.86210203 264.23266602]
[1.39207625 252.15753174]
[14.72334862 245.49795532]
[29.31345558 245.35737610]
[35.23664093 231.57638550]
[41.15982437 217.79537964]
[47.08301163 204.01438904]
[53.00619507 190.23339844]
[58.92938232 176.45239258]
[64.85256195 162.67140198]
[70.77574921 148.89039612]
[76.69893646 135.10940552]
[82.62211609 121.32840729]
[88.54530334 107.54740906]
[88.41293335 92.54798889]
[82.24745941 78.87368011]
[76.08198547 65.19936371]
[69.91651154 51.52504730]
[63.75103378 37.85073090]
[51.72867584 25.89668083]
[59.88743591 11.03495312]
[76.42693329 14.76073074]
[77.42534637 31.68525314]
[83.59082031 45.35956955]
[89.75630188 59.03388596]
[95.92177582 72.70819855]
[102.08724976 86.38251495]
[116.72368622 83.10003662]
[116.45896149 68.10237122]
[116.19423676 53.10470581]
[107.28614807 39.33597183]
[114.99604034 24.86221695]
[131.39262390 24.57279587]
[139.60852051 38.76544189]
[131.19189453 52.83997726]
[131.45661926 67.83764648]
[131.72135925 82.83530426]
[145.55407715 88.63665009]
[156.43772888 78.31452942]
[161.12646484 63.20405960]
[175.68544006 60.05990601]
[186.56909180 49.73778915]
[197.45274353 39.41566849]
[208.33639526 29.09355164]
[209.83280945 24.02984047]
[212.83462524 20.42376328]
[216.52629089 18.60604286]
[220.07992554 18.53212357]
[231.49461365 8.80047226]
[242.90930176 -0.93117923]
[244.31323242 -16.44461632]
[256.02798462 -26.15128708]
[270.80902100 -24.71724319]
[282.22369385 -34.44889450]
[293.63836670 -44.18054581]
[298.61328125 -59.80687714]
[314.68917847 -63.04684448]
[325.32858276 -50.56744003]
[319.58654785 -35.20640945]
[303.37002563 -32.76586151]
[291.95535278 -23.03421211]
[280.54067993 -13.30256081]
[279.61862183 1.51922894]
[268.18115234 11.55111408]
[252.64094543 10.48350239]
[241.22627258 20.21515465]
[229.81158447 29.94680595]
[218.65850830 39.97720337]
[207.77485657 50.29932404]
[196.89120483 60.62144089]
[186.00755310 70.94355774]
[182.09729004 85.31571960]
[166.75985718 89.19818115]
[155.87620544 99.52030182]
[102.32630157 113.47059631]
[96.40311432 127.25158691]
[90.47993469 141.03259277]
[84.55674744 154.81358337]
[78.63356018 168.59457397]
[72.71038055 182.37557983]
[66.78719330 196.15657043]
[60.86400986 209.93757629]
[54.94082260 223.71856689]
[49.01763916 237.49957275]
[43.09445190 251.28056335]
[50.12307739 257.48956299]
[55.16687393 265.59875488]
[57.71917343 274.97900391]
[57.47119522 284.86868286]
[54.34580994 294.43539429]
[48.51209641 302.84606934]
[40.37886429 309.33938599]
[49.90755081 320.92404175]
[59.43623352 332.50869751]
[68.96492004 344.09335327]
[78.49359894 355.67800903]
[88.02228546 367.26263428]
[94.11278534 369.95791626]
[97.41131592 374.63232422]
[97.67409515 379.42843628]
[106.78800964 391.34216309]
[122.12915039 397.13708496]
[124.51378632 413.36193848]
[111.48879242 423.32595825]
[96.45317841 416.77902222]
[94.87429047 400.45605469]
[85.76038361 388.54235840]
[76.43762970 376.79132080]
[66.90895081 365.20666504]
[57.38026428 353.62203979]
[47.85158157 342.03738403]
[38.32289886 330.45272827]
[28.79421234 318.86807251]
[13.82282352 317.94204712]
[2.93917084 328.26419067]
[-7.94448137 338.58630371]
[-18.82813454 348.90841675]
[-29.71178627 359.23052979]
[-22.89262962 374.37854004]
[-21.66232491 390.91934204]
[-26.15153885 406.86019897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[84 93]
[85 92]
[86 91]
[94 130]
[95 129]
[97 127]
[98 126]
[99 125]
[100 124]
[104 123]
[105 122]
[106 121]
[109 118]
[110 117]
[111 116]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
