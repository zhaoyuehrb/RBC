%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAGCCCCGGCCCCCAAGUCCCGCGCGGGCCGGCCAGGGGCGGGGCGUCGGGCCAGCUGAGCUAUCCCGUCAGACCGCGCCAGUUUGAAUGAAAGCUCUACAAGAUGGCGGCGGUCGGGGCCGAGGCGCGAGGAGCUUGGUGUGUGCCUUGCCUAGUUUCACUUGAUACUCUUCAGGAAUUAUGUAGAAAAGAAAAGCUCACAU\
) } def
/len { sequence length } bind def

/coor [
[180.48799133 168.49763489]
[193.14689636 160.45075989]
[207.35815430 155.65074158]
[222.30371094 154.37388611]
[237.12548828 156.69432068]
[252.12188721 156.36537170]
[238.80360413 149.46438599]
[225.48532104 142.56341553]
[210.62530518 143.57788086]
[201.93199158 130.35906982]
[188.61372375 123.45809174]
[175.29544067 116.55711365]
[161.97715759 109.65614319]
[148.65888977 102.75516510]
[135.34060669 95.85418701]
[122.02233124 88.95321655]
[129.68449402 102.85900116]
[127.71931458 121.37901306]
[113.88923645 137.71397400]
[90.62590790 144.39553833]
[77.75084686 152.09182739]
[64.87578583 159.78810120]
[52.00072098 167.48439026]
[39.12565613 175.18066406]
[26.25059319 182.87695312]
[13.37552929 190.57322693]
[12.09308052 207.43740845]
[1.12129211 220.08935547]
[-15.06715012 223.67373657]
[-30.05086136 216.97158813]
[-42.80764389 224.86238098]
[-50.09160614 239.55509949]
[-66.47275543 240.32318115]
[-75.09957123 226.37649536]
[-67.09751892 212.06219482]
[-50.69843292 212.10560608]
[-37.94165039 204.21481323]
[-38.18907547 190.86463928]
[-31.75524902 179.04104614]
[-20.22713470 171.88424683]
[-6.56014347 171.35488892]
[5.67924881 177.69816589]
[18.55431175 170.00187683]
[31.42937660 162.30560303]
[44.30443954 154.60932922]
[57.17950439 146.91304016]
[70.05456543 139.21676636]
[82.92963409 131.52047729]
[81.96479034 124.08280182]
[80.03511810 109.20743561]
[79.07027435 101.76976013]
[64.65764618 97.61331940]
[50.24501038 93.45687866]
[35.83237457 89.30044556]
[22.11636353 96.68344879]
[7.55911255 92.26290894]
[0.60507423 79.14128876]
[-13.80755997 74.98485565]
[-28.22019386 70.82841492]
[-45.11451721 72.24903107]
[-51.15643311 56.40821457]
[-37.60724640 46.21724319]
[-24.06375504 56.41577911]
[-9.65112114 60.57221985]
[4.76151323 64.72866058]
[17.63480377 57.32501221]
[32.31047440 61.33491898]
[39.98881531 74.88780975]
[54.40144730 79.04425049]
[68.81407928 83.20068359]
[83.22671509 87.35712433]
[88.70798492 82.23797607]
[85.32232666 67.62506104]
[99.67052460 71.99967957]
[105.15179443 66.88053131]
[101.98860168 52.21784973]
[98.82540131 37.55517197]
[95.66220856 22.89249039]
[92.49900818 8.22980976]
[89.33581543 -6.43286991]
[86.06144714 -21.07112503]
[82.67608643 -35.68411255]
[79.29073334 -50.29709625]
[75.90538025 -64.91007996]
[65.25313568 -76.60796356]
[69.91838837 -90.75309753]
[66.53303528 -105.36608124]
[63.14767456 -119.97906494]
[59.76232147 -134.59205627]
[47.58832550 -140.35913086]
[41.05486679 -151.91653442]
[42.35262299 -164.93368530]
[50.78469849 -174.67929077]
[47.62150192 -189.34196472]
[36.21638107 -201.12565613]
[40.97835922 -216.81819153]
[57.00872040 -220.27642822]
[67.81680298 -207.94284058]
[62.28417969 -192.50515747]
[65.44738007 -177.84248352]
[79.95561218 -169.33941650]
[83.90430450 -152.64591980]
[74.37530518 -137.97741699]
[77.76066589 -123.36442566]
[81.14601898 -108.75143433]
[84.53137207 -94.13845062]
[94.94146729 -83.48578644]
[90.51836395 -68.29544067]
[93.90371704 -53.68245316]
[97.28907776 -39.06946564]
[100.67443085 -24.45648003]
[105.24794769 -18.64788628]
[103.99849701 -9.59606647]
[107.16168976 5.06661367]
[110.32489014 19.72929382]
[113.48808289 34.39197540]
[116.65127563 49.05465317]
[119.81447601 63.71733475]
[128.92330933 75.63493347]
[142.24157715 82.53591156]
[155.55986023 89.43688965]
[168.87814331 96.33786011]
[182.19641113 103.23883820]
[195.51469421 110.13981628]
[208.83297729 117.04078674]
[224.64559937 116.51993561]
[232.38630676 129.24513245]
[245.70457458 136.14611816]
[259.02285767 143.04708862]
[274.01205444 143.61608887]
[287.81518555 137.74464417]
[301.61831665 131.87319946]
[315.42141724 126.00175476]
[329.22454834 120.13031006]
[343.02767944 114.25886536]
[352.69808960 101.73714447]
[367.43844604 103.87524414]
[381.24154663 98.00379944]
[385.62881470 82.99427032]
[398.66622925 74.35944366]
[414.19787598 76.17640686]
[424.89025879 87.58725739]
[425.69470215 103.20413971]
[416.23138428 115.65322876]
[400.96862793 119.05645752]
[387.11300659 111.80692291]
[373.30987549 117.67836761]
[364.62673950 129.78012085]
[348.89910889 128.06199646]
[335.09597778 133.93342590]
[321.29287720 139.80487061]
[307.48974609 145.67631531]
[293.68661499 151.54776001]
[279.88351440 157.41920471]
[279.08709717 172.39804077]
[292.18978882 179.70004272]
[305.29251099 187.00202942]
[317.83236694 176.94154358]
[333.23562622 172.47355652]
[349.13592529 174.25370789]
[363.10235596 181.98007202]
[373.01101685 194.44390869]
[377.36810303 209.71868896]
[375.53500366 225.45782471]
[388.74703979 232.56011963]
[401.95904541 239.66242981]
[415.17105103 246.76472473]
[428.38308716 253.86701965]
[443.44357300 249.07571411]
[457.44235229 256.41125488]
[462.07415771 271.52157593]
[454.59103394 285.44201660]
[439.43258667 289.91378784]
[425.59204102 282.28393555]
[421.28076172 267.07904053]
[408.06875610 259.97674561]
[394.85675049 252.87443542]
[381.64474487 245.77214050]
[368.43270874 238.66983032]
[357.90808105 247.95510864]
[344.81811523 253.10066223]
[330.72808838 253.46931458]
[317.33032227 248.99636841]
[306.24093628 240.19990540]
[298.80496216 228.12078857]
[295.93313599 214.19956970]
[297.99050903 200.10473633]
[284.88781738 192.80274963]
[271.78509521 185.50074768]
[279.78305054 198.19062805]
[282.51144409 212.94039917]
[281.64801025 227.91552734]
[277.24249268 242.25399780]
[269.54846191 255.13040161]
[259.00881958 265.80355835]
[246.23028564 273.65905762]
[231.94842529 278.24472046]
[216.98535156 279.29656982]
[202.20239258 276.75408936]
[188.45053101 270.76358032]
[176.52134705 261.66992188]
[167.10154724 249.99655151]
[160.73336792 236.41545105]
[157.78338623 221.70838928]
[158.42140198 206.72196960]
[162.61070251 192.31884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 129]
[7 128]
[8 127]
[10 125]
[11 124]
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[30 37]
[31 36]
[51 71]
[52 70]
[53 69]
[54 68]
[57 65]
[58 64]
[59 63]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 111]
[82 110]
[83 109]
[84 108]
[86 106]
[87 105]
[88 104]
[89 103]
[93 100]
[94 99]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[155 189]
[156 188]
[157 187]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
