%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAGGAGGGCCCCGCCUUCCCCAGCUGCAUAUAAAGGUCUCUGGGGUUGGAGGCAGCCACAGCACGCUCUCAGCCUUCCUGAGCACCUUUCCUUCUUUCAGCCAACUGCUCACUCGCUCACCUCCCUCCUUGGCACCAUGACCACCUGCAGCCGCCAGUUCACCUCCUCCAGCUCCAUGAAGGGCUCCUGCGGCAUCGGAGGCGGCAUCGGGGGCGGCUCCAGCCGCAUCUCCUCCG\
) } def
/len { sequence length } bind def

/coor [
[65.87799835 346.77667236]
[50.93127823 351.37338257]
[36.54692459 345.23950195]
[29.51679039 331.27130127]
[33.16028595 316.06408691]
[45.75706863 306.79827881]
[46.54210663 291.81884766]
[47.32714462 276.83938599]
[48.11218643 261.85995483]
[48.89722443 246.88050842]
[49.68226242 231.90106201]
[88.08082581 208.28100586]
[85.54058075 193.49766541]
[83.00034332 178.71432495]
[80.46009827 163.93098450]
[77.91985321 149.14764404]
[63.91614914 143.77212524]
[52.13639450 153.05853271]
[50.13811493 168.50666809]
[38.05947876 177.75659180]
[23.34436607 175.75634766]
[11.56461334 185.04275513]
[-0.21514091 194.32916260]
[-11.99489498 203.61557007]
[-23.77464867 212.90197754]
[-35.55440140 222.18838501]
[-37.55268097 237.63652039]
[-49.63131714 246.88644409]
[-64.34642792 244.88618469]
[-76.12618256 254.17260742]
[-75.38244629 269.67184448]
[-83.91911316 282.62966919]
[-98.45365906 288.06350708]
[-113.39724731 283.88394165]
[-123.00377655 271.69812012]
[-123.57933044 256.19174194]
[-114.90260315 243.32728577]
[-100.30996704 238.05143738]
[-85.41259003 242.39285278]
[-73.63283539 233.10644531]
[-72.14265442 218.33094788]
[-60.32859421 208.74540710]
[-44.84081268 210.40863037]
[-33.06105804 201.12222290]
[-21.28130341 191.83581543]
[-9.50154972 182.54940796]
[2.27820373 173.26300049]
[14.05795765 163.97659302]
[15.54814434 149.20111084]
[27.36220169 139.61555481]
[42.84998322 141.27877808]
[54.62973785 131.99237061]
[50.74745178 117.50348663]
[35.90268326 115.35109711]
[21.05791092 113.19870758]
[6.21314096 111.04631805]
[-8.68288612 109.28325653]
[-23.61996078 107.91073608]
[-38.55703354 106.53820801]
[-48.68651962 118.29291534]
[-63.79837036 121.81593323]
[-78.08176422 115.75258636]
[-86.04445648 102.43435669]
[-84.62461853 86.98237610]
[-74.36820984 75.33824921]
[-59.21903229 71.97937012]
[-45.00225067 78.19731140]
[-37.18450928 91.60113525]
[-22.24743652 92.97366333]
[-7.31036186 94.34618378]
[-5.07970095 92.67935181]
[-2.06075597 91.78680420]
[1.45802891 91.97082520]
[5.08499098 93.42494202]
[8.36553001 96.20154572]
[23.21030045 98.35393524]
[38.05507278 100.50632477]
[52.89984131 102.65871429]
[55.97868729 93.12336731]
[60.84690475 84.98008728]
[67.06379700 78.53150940]
[74.14616394 73.95917511]
[65.97658539 61.37911987]
[57.80699539 48.79906082]
[49.63740921 36.21900177]
[41.46782684 23.63894463]
[33.29824066 11.05888557]
[18.89211464 15.57177162]
[3.80261111 16.02942848]
[-10.85053062 12.39789677]
[-23.97994804 4.94665861]
[-34.61135483 -5.77135372]
[-41.95582581 -18.96079254]
[-45.46835709 -33.64291382]
[-44.88829041 -48.72821045]
[-40.25867462 -63.09724808]
[-31.92305374 -75.68374634]
[-20.49999046 -85.55371094]
[-6.83715057 -91.97472382]
[8.05159283 -94.47029877]
[23.06139565 -92.85525513]
[37.07843018 -87.24942780]
[49.06254196 -78.06881714]
[58.12443161 -65.99467468]
[63.59164047 -51.92299652]
[65.05847168 -36.89798355]
[62.41606903 -22.03459549]
[55.86052322 -8.43579388]
[45.87829971 2.88929963]
[54.04788589 15.46935844]
[62.21746826 28.04941750]
[70.38705444 40.62947464]
[78.55664062 53.20953369]
[86.72622681 65.78958893]
[98.25335693 63.34629059]
[109.96058655 64.68241882]
[120.64076996 69.66019440]
[129.19264221 77.76635742]
[142.73141479 71.30869293]
[156.27020264 64.85102844]
[161.29603577 52.98627472]
[172.68959045 47.88174057]
[184.13040161 51.77227402]
[197.75254822 45.49237823]
[211.37469482 39.21248245]
[224.99684143 32.93258667]
[238.61898804 26.65268898]
[238.00032043 13.47880268]
[241.94331360 0.93956751]
[249.93672180 -9.43993855]
[260.97869873 -16.40823746]
[273.70211792 -19.13831139]
[286.54403687 -17.32566833]
[293.87335205 -30.41310883]
[301.20266724 -43.50054932]
[308.44616699 -56.63567734]
[315.60354614 -69.81793213]
[317.84768677 -86.62269592]
[334.61697388 -89.11827087]
[341.65719604 -73.69519043]
[328.78579712 -62.66055298]
[321.62841797 -49.47829819]
[321.19976807 -42.11490631]
[314.29010010 -36.17123032]
[306.96078491 -23.08378983]
[299.63146973 -9.99634933]
[305.03558350 -4.18188143]
[309.07574463 2.65109205]
[323.70590210 -0.65936941]
[338.33602905 -3.96983099]
[352.96615601 -7.28029251]
[367.59628296 -10.59075356]
[382.22644043 -13.90121555]
[390.68063354 -26.98418617]
[405.56481934 -30.13305283]
[417.98535156 -21.99263191]
[432.61547852 -25.30309296]
[447.24560547 -28.61355591]
[454.76605225 -39.07656097]
[467.00521851 -41.54070282]
[477.30529785 -35.22114182]
[491.97750854 -38.33981705]
[506.64971924 -41.45849228]
[521.32196045 -44.57716751]
[523.71343994 -59.56533051]
[531.36120605 -72.67549133]
[543.23089600 -82.13460541]
[557.71728516 -86.66340637]
[572.86114502 -85.64940643]
[586.61437988 -79.22974396]
[597.11706543 -68.27262878]
[602.94873047 -54.25992203]
[603.32073975 -39.08671951]
[598.18267822 -24.80507660]
[588.22955322 -13.34646797]
[574.80743408 -6.26057625]
[559.73144531 -4.50570965]
[545.04058838 -8.31920052]
[532.72161865 -17.18530464]
[524.44061279 -29.90495300]
[509.76840210 -26.78627777]
[495.09619141 -23.66760254]
[480.42398071 -20.54892731]
[468.02178955 -8.12131786]
[450.55609131 -13.98342037]
[435.92593384 -10.67295933]
[421.29580688 -7.36249733]
[413.58978271 5.33209515]
[398.79989624 8.89778614]
[385.53689575 0.72891933]
[370.90676880 4.03938103]
[356.27661133 7.34984255]
[341.64648438 10.66030407]
[327.01635742 13.97076511]
[312.38623047 17.28122711]
[308.21954346 35.36426926]
[295.76458740 49.22178650]
[278.08471680 55.33641815]
[259.58148193 52.10873795]
[244.89889526 40.27483749]
[231.27674866 46.55473328]
[217.65460205 52.83462906]
[204.03244019 59.11452484]
[190.41029358 65.39442444]
[181.05667114 80.25272369]
[162.72785950 78.38980865]
[149.18908691 84.84747314]
[135.65031433 91.30513763]
[136.76290894 116.23609924]
[120.93482208 138.33847046]
[92.70319366 146.60740662]
[95.24343872 161.39074707]
[97.78368378 176.17408752]
[100.32392120 190.95742798]
[102.86416626 205.74076843]
[107.49942017 220.00662231]
[114.13375092 233.45970154]
[120.76808167 246.91279602]
[127.40241241 260.36587524]
[134.03674316 273.81896973]
[147.96531677 282.47500610]
[147.16291809 298.85452271]
[132.45495605 306.10766602]
[118.97175598 296.77304077]
[120.58364868 280.45330811]
[113.94931793 267.00021362]
[107.31498718 253.54713440]
[100.68065643 240.09403992]
[94.04632568 226.64094543]
[86.70017242 228.15223694]
[81.97194672 242.38754272]
[72.00786591 231.17481995]
[64.66170502 232.68611145]
[63.87666702 247.66554260]
[63.09162903 262.64498901]
[62.30658722 277.62445068]
[61.52154922 292.60388184]
[60.73651123 307.58331299]
[72.29574585 318.11508179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 238]
[7 237]
[8 236]
[9 235]
[10 234]
[11 233]
[12 215]
[13 214]
[14 213]
[15 212]
[16 211]
[17 52]
[18 51]
[21 48]
[22 47]
[23 46]
[24 45]
[25 44]
[26 43]
[29 40]
[30 39]
[53 78]
[54 77]
[55 76]
[56 75]
[57 70]
[58 69]
[59 68]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[118 208]
[119 207]
[120 206]
[123 204]
[124 203]
[125 202]
[126 201]
[127 200]
[133 146]
[134 145]
[135 144]
[136 142]
[137 141]
[148 195]
[149 194]
[150 193]
[151 192]
[152 191]
[153 190]
[156 187]
[157 186]
[158 185]
[161 183]
[162 182]
[163 181]
[164 180]
[216 229]
[217 228]
[218 227]
[219 226]
[220 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
