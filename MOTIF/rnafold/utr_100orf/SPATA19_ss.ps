%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCUUCAAUGACCUUCCUGUCCCAUAGGAGUUCUCAGGCAGCUUCAAUGGAAGGAGGGAGCCAAGAAGGGGGCCUGGUAUACAUUCAAAGAUGAUAAUUACGACAUGGAUUGUGUAUAUUCUUGCUCGGAAAGGUGUAGGGCUUCCCUUCCUACCAAUAACCAGUUCGGACAUUGACGUUGUGGAAAGUG\
) } def
/len { sequence length } bind def

/coor [
[88.09696198 280.33120728]
[99.52097321 269.65292358]
[98.54499817 254.68470764]
[97.56903076 239.71649170]
[89.30024719 233.68165588]
[85.64920044 223.88322449]
[88.05133820 213.48065186]
[95.94719696 205.97200012]
[95.45895386 190.97993469]
[94.97071075 175.98788452]
[94.48246765 160.99583435]
[93.99422455 146.00378418]
[74.34264374 138.65382385]
[59.93843460 123.39847565]
[45.93326950 128.77020264]
[31.92810631 134.14192200]
[17.92294121 139.51364136]
[3.91777778 144.88536072]
[-10.08738613 150.25708008]
[-24.09255028 155.62879944]
[-27.94588852 165.82077026]
[-36.59934235 172.07388306]
[-47.04661942 172.51423645]
[-55.81877518 167.23776245]
[-69.99136353 172.15077209]
[-84.16395569 177.06378174]
[-98.33654785 181.97679138]
[-108.84126282 193.80732727]
[-123.40071869 190.66543579]
[-137.57331848 195.57844543]
[-151.74589539 200.49145508]
[-165.91848755 205.40446472]
[-180.09107971 210.31747437]
[-194.26367188 215.23048401]
[-199.66787720 229.90455627]
[-213.26567078 237.62689209]
[-228.63656616 234.75122070]
[-238.52291870 222.63534546]
[-238.25666809 207.00003052]
[-227.96356201 195.22778320]
[-212.50367737 192.87709045]
[-199.17668152 201.05789185]
[-185.00408936 196.14488220]
[-170.83149719 191.23187256]
[-156.65890503 186.31886292]
[-142.48632812 181.40585327]
[-128.31373596 176.49284363]
[-118.82273102 165.01371765]
[-103.24955750 167.80419922]
[-89.07696533 162.89118958]
[-74.90437317 157.97817993]
[-60.73178482 153.06517029]
[-49.19802856 137.55644226]
[-29.46426964 141.62362671]
[-15.45910645 136.25190735]
[-1.45394218 130.88018799]
[12.55122185 125.50846863]
[26.55638695 120.13674927]
[40.56155014 114.76502991]
[54.56671524 109.39331055]
[53.78095627 95.97286987]
[56.87593460 82.89056396]
[63.59178543 71.24483490]
[73.36460876 62.01350403]
[85.37385559 55.97167206]
[98.61116791 53.62663651]
[111.96509552 55.17529297]
[118.12556458 41.49872208]
[124.28604126 27.82215309]
[130.44651794 14.14558411]
[136.60697937 0.46901402]
[142.76745605 -13.20755577]
[148.92793274 -26.88412666]
[154.97689819 -40.61038208]
[160.91394043 -54.38541412]
[166.85098267 -68.16044617]
[172.78802490 -81.93547821]
[172.39747620 -88.55995178]
[175.02569580 -93.62026978]
[179.14904785 -96.05727386]
[185.53131104 -109.63175964]
[191.91358948 -123.20623779]
[198.29585266 -136.78073120]
[204.67813110 -150.35520935]
[202.70018005 -168.65579224]
[217.47248840 -178.11726379]
[223.63296509 -191.79382324]
[229.79344177 -205.47039795]
[224.43244934 -220.09564209]
[230.87487793 -233.87786865]
[244.85084534 -238.89862061]
[251.01130676 -252.57518005]
[239.85348511 -262.77127075]
[232.40356445 -275.89916992]
[229.38018799 -290.66693115]
[231.06710815 -305.62585449]
[237.28663635 -319.31234741]
[247.41821289 -330.39126587]
[260.46032715 -337.78610229]
[275.12951660 -340.78356934]
[289.98666382 -339.10250854]
[296.14715576 -352.77908325]
[302.30761719 -366.45562744]
[302.98150635 -375.58074951]
[308.68127441 -380.30340576]
[315.06356812 -393.87789917]
[321.44583130 -407.45239258]
[317.38113403 -422.97198486]
[327.09558105 -435.73947144]
[343.13711548 -435.96072388]
[353.20001221 -423.46603394]
[349.56491089 -407.84024048]
[335.02032471 -401.07012939]
[328.63803101 -387.49563599]
[322.25576782 -373.92114258]
[315.98419189 -360.29516602]
[309.82373047 -346.61859131]
[303.66323853 -332.94201660]
[314.76739502 -322.92910767]
[322.24310303 -309.95666504]
[325.34732056 -295.28887939]
[323.76376343 -280.35958862]
[317.63500977 -266.63223267]
[307.54974365 -255.45625305]
[294.48629761 -247.93461609]
[279.71777344 -244.81481934]
[264.68789673 -246.41471863]
[258.52740479 -232.73814392]
[264.02847290 -218.94415283]
[257.97570801 -204.98641968]
[243.47000122 -199.30992126]
[237.30952454 -185.63336182]
[231.14906311 -171.95678711]
[235.14097595 -160.52781677]
[230.10830688 -149.07797241]
[218.25260925 -143.97294617]
[211.87034607 -130.39845276]
[205.48806763 -116.82397461]
[199.10580444 -103.24948883]
[192.72352600 -89.67500305]
[186.56306458 -75.99843597]
[180.62600708 -62.22340012]
[174.68896484 -48.44836807]
[168.75192261 -34.67333603]
[168.99197388 -27.27513885]
[162.60450745 -20.72365189]
[156.44403076 -7.04708242]
[150.28355408 6.62948751]
[144.12307739 20.30605698]
[137.96261597 33.98262787]
[131.80213928 47.65919876]
[125.64166260 61.33576584]
[136.19798279 70.98062897]
[143.31584167 83.38205719]
[146.31909180 97.36203003]
[144.92248535 111.59258270]
[139.25866699 124.72195435]
[150.49255371 134.66175842]
[161.72644043 144.60157776]
[172.96032715 154.54138184]
[188.51753235 153.75958252]
[199.76869202 163.99998474]
[200.41813660 178.83621216]
[211.65202332 188.77603149]
[227.68847656 189.23648071]
[237.21147156 202.14741516]
[232.91578674 217.60466003]
[218.09669495 223.75074768]
[204.12216187 215.87092590]
[201.71221924 200.00991821]
[190.47833252 190.07009888]
[175.67343140 191.23223877]
[164.13908386 181.31188965]
[163.02050781 165.77526855]
[151.78662109 155.83546448]
[140.55274963 145.89564514]
[129.31886292 135.95584106]
[119.74000549 141.98512268]
[108.98627472 145.51554871]
[109.47451782 160.50759888]
[109.96276093 175.49964905]
[110.45100403 190.49169922]
[110.93925476 205.48374939]
[122.35019684 222.08956909]
[112.53724670 238.74052429]
[113.51321411 253.70874023]
[114.48918915 268.67694092]
[127.20308685 277.78137207]
[131.04019165 292.94088745]
[124.18872833 306.99761963]
[109.88375092 313.31439209]
[94.87963867 308.90866089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[24 52]
[25 51]
[26 50]
[27 49]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[74 144]
[75 143]
[76 142]
[77 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[86 133]
[87 132]
[88 131]
[91 128]
[92 127]
[101 118]
[102 117]
[103 116]
[105 115]
[106 114]
[107 113]
[157 177]
[158 176]
[159 175]
[160 174]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
