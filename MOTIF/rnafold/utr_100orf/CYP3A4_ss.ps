%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCACUGCUGUGCAGGGCAGGAAAGCUCCAUGCACAUAGCCCAGCAAAGAGCAACACAGAGCUGAAAGGAAGACUCAGAGGAGAGAGAUAAGUAAGGAAAGUAGUGAUGGCUCUCAUCCCAGACUUGGCCAUGGAAACCUGGCUUCUCCUGGCUGUCAGCCUGGUGCUCCUCUAUCUAUAUGGAACCCAUUCACAUGGACUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[72.20146179 200.52239990]
[66.96426392 186.46636963]
[70.12964630 171.80416870]
[80.69687653 161.16188049]
[85.35276031 146.90274048]
[90.00865173 132.64361572]
[82.53002930 132.07775879]
[71.60791016 142.35917664]
[60.68579865 152.64059448]
[49.76368332 162.92199707]
[38.84156799 173.20341492]
[34.09645462 188.29626465]
[19.52585030 191.38604736]
[8.60373592 201.66746521]
[11.43403053 219.57492065]
[3.02365279 235.45812988]
[-13.09412289 243.04768372]
[-30.38724518 239.47634888]
[-40.99384689 250.08294678]
[-51.60044861 260.68954468]
[-62.12664795 271.37594604]
[-72.57184601 282.14154053]
[-83.01704407 292.90713501]
[-86.49485016 308.93325806]
[-102.19317627 313.67608643]
[-113.96294403 302.25659180]
[-109.69641113 286.42218018]
[-93.78263092 282.46191406]
[-83.33743286 271.69635010]
[-72.89223480 260.93075562]
[-70.49008942 253.93949890]
[-62.20705032 250.08294678]
[-51.60044861 239.47634888]
[-40.99384689 228.86975098]
[-44.65005112 217.29083252]
[-43.02578735 205.18466187]
[-36.36856461 194.85763550]
[-25.89057922 188.30345154]
[-13.54839516 186.81840515]
[-1.67767501 190.74534607]
[9.24443913 180.46392822]
[13.20832920 166.10646057]
[28.56015778 162.28129578]
[39.48227310 151.99987793]
[50.40438461 141.71847534]
[61.32649994 131.43705750]
[72.24861145 121.15564728]
[69.03137207 98.76055145]
[79.83663177 81.90647888]
[96.57814789 77.06474304]
[99.28197479 62.31044006]
[101.98579407 47.55614090]
[104.68962097 32.80184555]
[103.15819550 23.79426765]
[107.54730988 17.84585571]
[110.47367096 3.13407660]
[109.07846069 -5.89560175]
[113.55691528 -11.77704525]
[116.70513153 -26.44294930]
[119.85334778 -41.10885239]
[118.59468079 -50.15857315]
[123.16145325 -55.97170639]
[126.53080750 -70.58838654]
[129.90017700 -85.20507050]
[133.26953125 -99.82175446]
[136.63888550 -114.43843842]
[132.19915771 -129.62393188]
[142.59759521 -140.28799438]
[145.96694946 -154.90466309]
[140.05184937 -159.13964844]
[135.37602234 -164.68409729]
[132.21920776 -171.18951416]
[130.76612854 -178.25047302]
[131.09567261 -185.42987061]
[133.17674255 -192.28596497]
[136.87080383 -198.39961243]
[141.94102478 -203.39979553]
[148.06753540 -206.98623657]
[154.86746216 -208.94737244]
[161.91897583 -209.17279053]
[167.02561951 -223.27676392]
[172.13224792 -237.38075256]
[177.23889160 -251.48472595]
[182.34553528 -265.58871460]
[187.45217896 -279.69268799]
[192.55880737 -293.79666138]
[186.24302673 -297.62423706]
[181.30328369 -304.28625488]
[178.94338989 -313.19430542]
[180.09315491 -323.27566528]
[182.35012817 -338.10488892]
[184.60710144 -352.93411255]
[186.86405945 -367.76336670]
[189.12103271 -382.59259033]
[178.49722290 -396.48916626]
[181.15730286 -413.43618774]
[194.97302246 -423.02416992]
[197.00576782 -437.88577271]
[199.03851318 -452.74740601]
[191.68321228 -469.62762451]
[202.96650696 -483.06707764]
[204.77455139 -497.95770264]
[202.70205688 -506.85638428]
[206.72401428 -513.05895996]
[208.75674438 -527.92059326]
[210.78948975 -542.78222656]
[204.09260559 -557.75164795]
[213.92594910 -570.87554932]
[230.17381287 -568.65319824]
[236.12179565 -553.37078857]
[225.65112305 -540.74945068]
[223.61837769 -525.88781738]
[221.58563232 -511.02621460]
[219.66519165 -496.14965820]
[217.85713196 -481.25903320]
[225.06851196 -471.54522705]
[223.68251038 -459.12344360]
[213.90013123 -450.71466064]
[211.86738586 -435.85302734]
[209.83465576 -420.99142456]
[218.98698425 -411.91952515]
[221.27659607 -399.04025269]
[215.64677429 -387.01724243]
[203.95025635 -380.33563232]
[201.69329834 -365.50637817]
[199.43632507 -350.67715454]
[197.17936707 -335.84793091]
[194.92239380 -321.01870728]
[207.58001709 -312.96981812]
[220.05206299 -321.30337524]
[232.52410889 -329.63693237]
[244.99615479 -337.97048950]
[250.39454651 -345.34197998]
[257.72009277 -346.33404541]
[270.31658936 -354.47827148]
[280.33489990 -368.15563965]
[296.25106812 -362.31512451]
[295.04483032 -345.40414429]
[278.46081543 -341.88180542]
[265.86431885 -333.73757935]
[253.32971191 -325.49844360]
[240.85766602 -317.16488647]
[228.38562012 -308.83132935]
[215.91357422 -300.49777222]
[206.66279602 -288.69003296]
[201.55615234 -274.58605957]
[196.44950867 -260.48205566]
[191.34288025 -246.37808228]
[186.23623657 -232.27410889]
[181.12959290 -218.17013550]
[176.02294922 -204.06614685]
[188.13868713 -184.43920898]
[181.71936035 -162.01222229]
[160.58363342 -151.53530884]
[157.21427917 -136.91862488]
[161.89500427 -122.77861023]
[151.25556946 -111.06907654]
[147.88621521 -96.45239258]
[144.51684570 -81.83571625]
[141.14749146 -67.21903229]
[137.77813721 -52.60234833]
[134.51925659 -37.96063614]
[131.37103271 -23.29473305]
[128.22282410 -8.62882900]
[125.18544769 6.06043148]
[122.25909424 20.77221107]
[119.44392395 35.50566864]
[116.74009705 50.25996780]
[114.03627014 65.01426697]
[111.33244324 79.76856232]
[128.80137634 96.26653290]
[124.25227356 125.09040070]
[133.50305176 136.89814758]
[142.75384521 148.70590210]
[152.00462341 160.51365662]
[161.25540161 172.32141113]
[176.41310120 170.27407837]
[190.46762085 176.05052185]
[199.68251038 188.00679016]
[201.66232300 202.87071228]
[195.97457886 216.63716125]
[205.22537231 228.44491577]
[214.47615051 240.25267029]
[223.72692871 252.06042480]
[238.25480652 260.79983521]
[233.87864685 277.17926025]
[216.92790222 277.50839233]
[211.91918945 261.31121826]
[202.66839600 249.50344849]
[193.41761780 237.69570923]
[184.16683960 225.88795471]
[169.43923950 228.11587524]
[155.48103333 222.63642883]
[146.07746887 210.82798767]
[143.83235168 195.79946899]
[149.44764709 181.57218933]
[140.19686890 169.76443481]
[130.94609070 157.95668030]
[121.69530487 146.14894104]
[112.44451904 134.34118652]
[104.96589661 133.77532959]
[107.42328644 148.57266235]
[109.88067627 163.37001038]
[118.72720337 175.48359680]
[119.64894104 190.45524597]
[112.35514832 203.56251526]
[99.14647675 210.67103577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[13 41]
[14 40]
[18 34]
[19 33]
[20 32]
[21 30]
[22 29]
[23 28]
[50 170]
[51 169]
[52 168]
[53 167]
[55 166]
[56 165]
[58 164]
[59 163]
[60 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[68 155]
[69 154]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[97 120]
[98 119]
[99 118]
[101 115]
[102 114]
[104 113]
[105 112]
[106 111]
[129 144]
[130 143]
[131 142]
[132 141]
[134 140]
[135 139]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
