%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACUGGGUGCUGUGACAUCAGGGCAAUUAGCCCAGGACCCACAGCCCUGGCGCUCCGCACGCACCUCGGUAACAUCACAGCAGGUCCAGGCCAAUGAUAACCUUAUAAGAGGCCAUGUCGAAGCGCGACAUCGUCCUCACCAAUGUCACCGUUGUCCAGUUGCUGCGACAGCCGUGCCCGGUGACCAGAGCACCGCCCCCACCUGAGCCUAAGG\
) } def
/len { sequence length } bind def

/coor [
[274.79586792 384.31268311]
[268.68157959 370.61538696]
[262.56732178 356.91809082]
[256.45303345 343.22082520]
[250.33877563 329.52352905]
[244.22450256 315.82623291]
[238.11022949 302.12896729]
[231.99595642 288.43167114]
[225.88168335 274.73437500]
[219.76741028 261.03707886]
[213.65313721 247.33979797]
[207.53886414 233.64251709]
[190.34385681 225.18429565]
[188.49111938 205.42213440]
[178.23558044 194.47572327]
[167.98004150 183.52931213]
[157.72451782 172.58290100]
[147.46897888 161.63647461]
[137.21343994 150.69006348]
[126.95790863 139.74365234]
[108.11129761 147.33384705]
[87.81283569 146.45169067]
[69.69577026 137.25506592]
[58.52924347 147.27049255]
[47.36271667 157.28591919]
[36.19618988 167.30133057]
[33.89339066 183.17825317]
[19.97236061 191.15225220]
[5.11212635 185.10633850]
[0.71218646 169.67843628]
[10.14779854 156.70350647]
[26.18076897 156.13481140]
[37.34729385 146.11938477]
[48.51382065 136.10395813]
[59.68034744 126.08853912]
[53.33985901 111.36298370]
[52.19980621 95.37098694]
[37.67864990 91.61119843]
[23.15749168 87.85140991]
[8.63633537 84.09162140]
[-5.88482189 80.33184052]
[-19.91389656 96.70493317]
[-40.23548126 103.69136047]
[-61.22486496 99.43492889]
[-77.11168671 85.18062592]
[-83.56632233 64.91170502]
[-98.42467499 62.85517120]
[-113.28302765 60.79864120]
[-125.80468750 70.06394196]
[-140.84387207 67.76667023]
[-149.59976196 55.77207947]
[-164.45811462 53.71554947]
[-179.18876648 59.48775864]
[-190.73506165 50.07858658]
[-205.59341431 48.02205658]
[-217.07037354 58.64342499]
[-232.69194031 59.35097885]
[-245.08209229 49.81063080]
[-248.39057922 34.52704620]
[-241.05522156 20.71666527]
[-226.53956604 14.90032482]
[-211.69746399 19.82432556]
[-203.53688049 33.16370392]
[-188.67852783 35.22023392]
[-175.01063538 29.30093002]
[-162.40158081 38.85719681]
[-147.54322815 40.91372681]
[-135.85861206 31.74828911]
[-120.76083374 33.62223816]
[-111.22650146 45.94028854]
[-96.36814880 47.99681854]
[-81.50979614 50.05334854]
[-77.77581787 41.89466095]
[-72.32904053 34.74970627]
[-65.43297577 28.97272110]
[-57.42318726 24.85155106]
[-48.69088745 22.59331322]
[-39.66387558 22.31399155]
[-30.78557968 24.03248596]
[-22.49324989 27.66943741]
[-15.19644833 33.05087280]
[-9.25680733 39.91651917]
[-4.97011185 47.93239594]
[-2.55157495 56.70705032]
[-2.12503386 65.81067657]
[12.39612293 69.57046509]
[26.91728020 73.33025360]
[41.43843460 77.09004211]
[55.95959473 80.84983063]
[67.16391754 61.79392242]
[86.48053741 49.03094482]
[84.31650543 34.18786621]
[82.15247345 19.34478951]
[79.98844910 4.50171137]
[65.81584930 -1.25021732]
[56.48679352 -13.24461460]
[54.42767334 -28.19875717]
[60.09228897 -42.08285141]
[71.86660767 -51.20595169]
[69.70258331 -66.04903412]
[67.53855133 -80.89211273]
[56.95671463 -93.42034912]
[62.76937485 -108.75479126]
[78.99696350 -111.12067413]
[88.94593048 -98.08418274]
[82.38162994 -83.05613708]
[84.54566193 -68.21305847]
[86.70968628 -53.36998367]
[100.59870148 -47.98843765]
[109.99168396 -36.29964828]
[112.28797150 -21.38008308]
[106.77188110 -7.22135544]
[94.83152771 2.33768153]
[96.99555206 17.18075943]
[99.15958405 32.02383804]
[101.32361603 46.86691666]
[116.11620331 49.35274506]
[123.01298523 36.03229523]
[129.90977478 22.71184540]
[136.80654907 9.39139557]
[143.70333862 -3.92905378]
[150.60012817 -17.24950409]
[147.13195801 -32.91320038]
[157.32763672 -45.29980087]
[173.36589050 -44.90736008]
[182.94354248 -32.03693008]
[178.71345520 -16.56159973]
[163.92057800 -10.35271931]
[157.02378845 2.96772981]
[150.12699890 16.28817940]
[143.23022461 29.60862923]
[136.33343506 42.92907715]
[129.43664551 56.24952698]
[134.86051941 60.95971298]
[139.55479431 66.32649231]
[143.44241333 72.23962402]
[146.46263123 78.58020020]
[148.57196045 85.22302246]
[149.74470520 92.03905487]
[149.97323608 98.89796448]
[149.26780701 105.67055511]
[147.65617371 112.23126221]
[145.18269348 118.46043396]
[141.90736389 124.24652863]
[137.90432739 129.48811340]
[148.15985107 140.43452454]
[158.41539001 151.38095093]
[168.67092896 162.32736206]
[178.92646790 173.27377319]
[189.18199158 184.22018433]
[199.43753052 195.16659546]
[215.03192139 196.00135803]
[225.06860352 207.25262451]
[240.06506348 207.57833862]
[255.06152344 207.90405273]
[270.05798340 208.22976685]
[285.05444336 208.55548096]
[300.05090332 208.88121033]
[315.04934692 209.09835815]
[330.04895020 209.20693970]
[345.04855347 209.31552124]
[360.93103027 203.38398743]
[371.02746582 217.00376892]
[360.73492432 230.47595215]
[344.93997192 224.31512451]
[329.94036865 224.20654297]
[314.94076538 224.09796143]
[308.23239136 227.19145203]
[299.72518921 223.87767029]
[284.72872925 223.55195618]
[269.73226929 223.22624207]
[254.73580933 222.90052795]
[239.73934937 222.57479858]
[224.74288940 222.24908447]
[223.20790100 225.03373718]
[221.23616028 227.52824402]
[227.35043335 241.22552490]
[233.46470642 254.92282104]
[239.57896423 268.62011719]
[245.69323730 282.31738281]
[251.80751038 296.01467896]
[257.92178345 309.71197510]
[264.03607178 323.40924072]
[270.15032959 337.10653687]
[276.26461792 350.80383301]
[282.37887573 364.50112915]
[288.49316406 378.19839478]
[290.20886230 363.29684448]
[296.78854370 349.81692505]
[307.48123169 339.29714966]
[321.06658936 332.93804932]
[335.99414062 331.46548462]
[350.56018066 335.04745483]
[363.10229492 343.27517700]
[372.18905640 355.20962524]
[376.78338623 369.48870850]
[376.36093140 384.48275757]
[370.96994019 398.48049927]
[361.22564697 409.88439941]
[348.24017334 417.39291382]
[333.49557495 420.14907837]
[318.67462158 417.83837891]
[305.46884155 410.72448730]
[295.38403320 399.61721802]
[298.40353394 414.31015015]
[301.42300415 429.00311279]
[315.26535034 436.27795410]
[321.14517212 450.76800537]
[316.28616333 465.63153076]
[302.98263550 473.85040283]
[287.51608276 471.54394531]
[277.18933105 459.80117798]
[276.87838745 444.16668701]
[286.73004150 432.02258301]
[283.71057129 417.32965088]
[280.69110107 402.63668823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[23 35]
[24 34]
[25 33]
[26 32]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[46 72]
[47 71]
[48 70]
[51 67]
[52 66]
[54 64]
[55 63]
[91 116]
[92 115]
[93 114]
[94 113]
[99 108]
[100 107]
[101 106]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 167]
[160 166]
[161 165]
[204 216]
[205 215]
[206 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
