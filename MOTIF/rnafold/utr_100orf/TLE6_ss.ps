%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGCCCCCGGUGGGGGAAGGAGGAGUUUCCUCUUGGCCUGAACUUGGCUGACCUCCGCAGCUUCCGCCCGACUCUGGCUAAAGUCUUGGAGGCUACUGCCUUGAAGAUGACCUCUAGGGACCAGCCCAGACCCAAGGGCCCCCCGAAAAGCACUUCGCCUUGUCCUGGGAUCUCGAACUCUGAGAGCUCUCCGACGCUGAAUUAUC\
) } def
/len { sequence length } bind def

/coor [
[124.87627411 233.34101868]
[110.24079895 236.62777710]
[95.27883911 235.56016541]
[81.25832367 230.22863770]
[69.36740875 221.08499146]
[60.61375809 208.90412903]
[55.73919296 194.71826172]
[55.15680313 179.72956848]
[58.91593933 165.20825195]
[66.69803619 152.38487244]
[77.84362030 142.34614563]
[91.41191101 135.94165039]
[77.21699524 140.78979492]
[63.02208710 145.63793945]
[48.82717514 150.48608398]
[34.63226700 155.33422852]
[20.43735504 160.18237305]
[6.24244452 165.03051758]
[-7.95246601 169.87866211]
[-15.64420700 187.19134521]
[-33.24576950 193.28038025]
[-49.42646790 184.71998596]
[-63.46998978 189.99061584]
[-77.51351166 195.26123047]
[-91.55703735 200.53186035]
[-105.60056305 205.80247498]
[-91.32276917 210.40080261]
[-81.71525574 221.92016602]
[-79.75473785 236.79148865]
[-86.04865265 250.40716553]
[-98.64693451 258.54861450]
[-113.64624023 258.69335938]
[-126.39929199 250.79653931]
[-132.95478821 237.30485535]
[-131.28161621 222.39846802]
[-121.89962769 210.69686890]
[-136.52354431 214.03468323]
[-151.14746094 217.37249756]
[-165.77139282 220.71031189]
[-180.39530945 224.04812622]
[-195.01922607 227.38594055]
[-201.99177551 241.38299561]
[-216.35073853 247.57604980]
[-231.31626892 243.04095459]
[-239.82208252 229.91902161]
[-237.85200500 214.40603638]
[-226.33624268 203.82675171]
[-210.71218872 203.17637634]
[-198.35704041 212.76202393]
[-183.73312378 209.42420959]
[-169.10920715 206.08639526]
[-154.48527527 202.74858093]
[-139.86135864 199.41076660]
[-125.23744202 196.07295227]
[-110.87118530 191.75895691]
[-96.82765961 186.48834229]
[-82.78413391 181.21771240]
[-68.74061584 175.94708252]
[-54.69709015 170.67646790]
[-52.34209442 159.51220703]
[-44.81201172 150.78096008]
[-33.89018250 146.72770691]
[-22.24999237 148.46795654]
[-12.80061150 155.68376160]
[1.39429975 150.83561707]
[15.58921051 145.98747253]
[29.78412056 141.13932800]
[43.97903061 136.29118347]
[58.17394257 131.44303894]
[72.36885071 126.59488678]
[86.56376648 121.74674225]
[78.77557373 111.91979218]
[76.87813568 100.14028168]
[80.77468872 89.50772095]
[88.91656494 82.53872681]
[86.01772308 67.82150269]
[83.11888885 53.10427475]
[80.22004700 38.38704681]
[77.32121277 23.66982269]
[74.42237091 8.95259666]
[59.70906830 5.04361486]
[48.19892883 -4.82571363]
[42.14005280 -18.65720558]
[42.68511963 -33.68597412]
[49.67249298 -46.93309021]
[61.66888809 -55.79604340]
[58.77005005 -70.51326752]
[55.87121201 -85.23049164]
[52.97237396 -99.94772339]
[50.07353592 -114.66494751]
[39.81512833 -126.70968628]
[44.94694901 -140.69230652]
[42.04811096 -155.40953064]
[39.14927292 -170.12675476]
[36.25043106 -184.84397888]
[33.35159302 -199.56120300]
[22.16035843 -211.54821777]
[27.20394325 -227.15251160]
[43.29394150 -230.32174683]
[53.87834167 -217.79566956]
[48.06882095 -202.46005249]
[50.96765900 -187.74282837]
[53.86649704 -173.02558899]
[56.76533508 -158.30836487]
[59.66417313 -143.59114075]
[69.71523285 -132.59907532]
[64.79075623 -117.56378174]
[67.68959808 -102.84655762]
[70.58843994 -88.12933350]
[73.48727417 -73.41210938]
[76.38611603 -58.69488144]
[90.84748840 -55.04329300]
[102.33657837 -45.43547058]
[108.54022217 -31.73598862]
[108.17917633 -16.63996887]
[101.27149200 -3.14289832]
[89.13959503 6.05375767]
[92.03843689 20.77098274]
[94.93727112 35.48820877]
[97.83611298 50.20543671]
[100.73495483 64.92266083]
[103.63378906 79.63988495]
[117.89111328 86.67367554]
[123.78101349 102.71746063]
[116.52735138 119.50128174]
[131.28628540 122.17963409]
[146.04524231 124.85798645]
[160.80418396 127.53634644]
[171.92385864 113.05429840]
[192.69026184 109.50190735]
[212.79806519 122.40276337]
[227.69076538 120.61184692]
[242.58346558 118.82093811]
[257.46237183 116.91867828]
[272.32659912 114.90517426]
[287.19085693 112.89167786]
[302.05511475 110.87818146]
[310.13973999 106.62485504]
[317.15658569 108.94746399]
[332.04928589 107.15654755]
[346.94198608 105.36563873]
[361.83468628 103.57472229]
[367.94042969 89.55091095]
[380.16513062 80.52574921]
[395.16622925 78.84249878]
[408.90380859 84.85370636]
[417.72860718 96.85323334]
[432.62130737 95.06231689]
[447.51400757 93.27140808]
[462.40670776 91.48049164]
[471.96948242 78.89760590]
[487.63989258 76.84487915]
[500.12097168 86.54014587]
[502.00790405 102.23138428]
[492.18124390 114.60926056]
[476.47091675 116.33020020]
[464.19763184 106.37319946]
[449.30493164 108.16410828]
[434.41223145 109.95502472]
[419.51953125 111.74593353]
[413.79116821 125.49554443]
[401.87039185 134.59228516]
[386.89788818 136.51348877]
[372.88201904 130.64387512]
[363.62561035 118.46743011]
[348.73291016 120.25833893]
[333.84020996 122.04925537]
[318.94747925 123.84016418]
[304.06860352 125.74242401]
[289.20434570 127.75592804]
[274.34011841 129.76942444]
[259.47586060 131.78292847]
[253.26907349 135.79617310]
[244.37438965 133.71363831]
[229.48167419 135.50454712]
[214.58897400 137.29547119]
[211.53845215 144.14706421]
[226.45628357 145.71501160]
[229.57490540 160.38723755]
[216.58448792 167.88717651]
[205.43740845 157.85023499]
[202.38687134 164.70182800]
[211.02113342 176.96762085]
[225.29168701 183.79856873]
[226.29078674 198.65962219]
[234.92503357 210.92541504]
[243.55929565 223.19120789]
[258.65853882 229.58999634]
[260.39785767 245.89665222]
[246.98794556 255.33627319]
[232.22380066 248.19819641]
[231.29350281 231.82546997]
[222.65924072 219.55967712]
[214.02499390 207.29388428]
[200.37200928 201.34027100]
[198.75534058 185.60188293]
[190.12107849 173.33609009]
[164.94404602 163.43455505]
[158.12582397 142.29528809]
[143.36688232 139.61692810]
[128.60794067 136.93858337]
[113.84899139 134.26022339]
[128.21673584 138.56929016]
[140.73464966 146.83377075]
[150.34193420 158.35333252]
[156.22441101 172.15174866]
[157.88360596 187.05970764]
[155.17890930 201.81384277]
[148.33950806 215.16384888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[22 59]
[23 58]
[24 57]
[25 56]
[26 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[125 202]
[126 201]
[127 200]
[128 199]
[131 176]
[132 175]
[133 174]
[134 172]
[135 171]
[136 170]
[137 169]
[139 168]
[140 167]
[141 166]
[142 165]
[147 160]
[148 159]
[149 158]
[150 157]
[182 197]
[183 196]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
