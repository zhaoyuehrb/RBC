%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUGUGAGCAGAUAAAAAGUACAUAUACAGUUCAUACAAUAAUCUUAUGUAUGUAAAACCCCGUUACGAUGUCGGCGACGGGGCCCAUCAGUAACUAUUACGUGGACUCGCUCAUCUCUCACGACAAUGAAGACCUCCUAGCGUCCAGGUUUCCGGCCACCGGGGCUC\
) } def
/len { sequence length } bind def

/coor [
[214.79811096 296.20629883]
[213.36352539 283.50119019]
[214.89755249 270.88815308]
[219.28031921 259.04708862]
[226.23937988 248.60766602]
[215.97920227 237.66558838]
[205.71903992 226.72351074]
[195.45887756 215.78144836]
[185.19869995 204.83937073]
[174.93853760 193.89730835]
[168.04322815 191.15838623]
[164.59266663 182.65869141]
[154.53524780 171.52998352]
[144.47782898 160.40127563]
[134.42041016 149.27255249]
[119.65772247 156.79896545]
[103.40089417 160.00819397]
[86.88556671 158.65629578]
[71.36704254 152.84602356]
[58.02486420 143.01902771]
[47.87314224 129.92222595]
[41.68349457 114.55108643]
[26.79032135 116.33808899]
[11.89714718 118.12509918]
[-2.99602604 119.91210175]
[-17.88920021 121.69910431]
[-32.78237152 123.48610687]
[-47.67554474 125.27311707]
[-62.56871796 127.06011963]
[-77.02130127 138.44241333]
[-92.87855530 130.96272278]
[-107.73638916 133.02302551]
[-111.92037201 147.66590881]
[-121.70340729 159.33691406]
[-135.39051819 166.01393127]
[-150.61035156 166.54016113]
[-164.72595215 160.82441711]
[-175.29171753 149.85699463]
[-180.47706604 135.53805542]
[-179.38360596 120.34844208]
[-172.20077515 106.91986084]
[-160.17306519 97.57888031]
[-145.38432312 93.94388580]
[-130.39680481 96.64466095]
[-117.80718231 105.21328735]
[-109.79669189 118.16519165]
[-94.93885803 116.10488892]
[-87.37351227 106.63550568]
[-74.98465729 104.81638336]
[-64.35572815 112.16694641]
[-49.46255112 110.37994385]
[-34.56937790 108.59293365]
[-19.67620468 106.80593109]
[-4.78303099 105.01892853]
[10.11014271 103.23192596]
[25.00331688 101.44491577]
[39.89648819 99.65791321]
[41.77692032 85.07946777]
[47.13968277 71.39342499]
[55.66402817 59.41834641]
[66.84011078 49.87046051]
[60.19033813 36.42499542]
[53.54056549 22.97953033]
[46.89079285 9.53406620]
[40.24102020 -3.91139865]
[33.59124374 -17.35686302]
[26.94147301 -30.80232811]
[11.39218903 -40.63358307]
[13.15761185 -58.07725525]
[6.26195574 -71.39828491]
[-7.83292580 -79.78079224]
[-7.35037899 -96.17283630]
[7.21319342 -103.71169281]
[20.87603760 -94.64203644]
[19.58298874 -78.29394531]
[26.47864532 -64.97290802]
[37.92842102 -60.99718857]
[43.77359772 -49.92348480]
[40.38693619 -37.45210266]
[47.03670883 -24.00663567]
[53.68648529 -10.56117153]
[60.33625793 2.88429236]
[66.98603058 16.32975769]
[73.63580322 29.77522087]
[80.28557587 43.22068405]
[98.89582825 39.90565872]
[117.61530304 42.53479004]
[123.76665497 28.85411835]
[129.91801453 15.17344761]
[136.06938171 1.49277556]
[135.78057861 -5.17399597]
[138.51445007 -10.21089268]
[142.70623779 -12.57099628]
[149.35600281 -26.01646042]
[156.00578308 -39.46192551]
[162.65554810 -52.90739059]
[164.25759888 -69.78547668]
[180.91958618 -72.91835022]
[188.54251099 -57.77479553]
[176.10101318 -46.25761795]
[169.45124817 -32.81215286]
[162.80146790 -19.36668777]
[156.15168762 -5.92122269]
[149.75004578 7.64413452]
[143.59869385 21.32480621]
[137.44732666 35.00547791]
[131.29597473 48.68614960]
[140.54205322 55.62781525]
[148.28794861 64.21141052]
[154.24700928 74.11930084]
[158.19876099 84.98487091]
[159.99693298 96.40605164]
[159.57502747 107.96022034]
[156.94863892 119.21983337]
[152.21495056 129.76824951]
[145.54911804 139.21513367]
[155.60653687 150.34384155]
[165.66397095 161.47256470]
[175.72138977 172.60127258]
[185.88061523 183.63713074]
[196.14077759 194.57920837]
[206.40093994 205.52127075]
[216.66111755 216.46334839]
[226.92127991 227.40542603]
[237.18145752 238.34748840]
[253.06890869 230.21539307]
[270.89501953 227.69252014]
[288.72143555 231.15596008]
[304.57617188 240.32626343]
[316.67163086 254.28709412]
[323.60617065 271.57595825]
[324.52578735 290.33718872]
[319.22808838 308.52090454]
[331.93417358 316.49307251]
[344.64028931 324.46520996]
[357.34637451 332.43734741]
[370.05245972 340.40948486]
[382.75857544 348.38165283]
[396.29516602 341.12518311]
[411.64590454 341.62524414]
[424.68154907 349.74731445]
[431.89553833 363.30661011]
[431.34735107 378.65570068]
[423.18444824 391.66580200]
[409.60263062 398.83724976]
[394.25534058 398.24096680]
[381.27087402 390.03735352]
[374.14202881 376.43310547]
[374.78640747 361.08773804]
[362.08032227 353.11560059]
[349.37423706 345.14343262]
[336.66812134 337.17129517]
[323.96203613 329.19915771]
[311.25595093 321.22702026]
[299.85433960 330.97396851]
[305.75332642 344.76535034]
[311.65231323 358.55670166]
[317.55130005 372.34808350]
[329.33947754 384.53314209]
[320.89389038 399.23376465]
[304.42977905 395.18777466]
[303.75994873 378.24707031]
[297.86096191 364.45568848]
[291.96194458 350.66433716]
[286.06295776 336.87295532]
[272.92401123 339.20755005]
[259.68112183 338.44384766]
[247.05061340 334.66018677]
[235.70716858 328.09719849]
[226.24774170 319.14288330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 125]
[6 124]
[7 123]
[8 122]
[9 121]
[10 120]
[12 119]
[13 118]
[14 117]
[15 116]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[31 47]
[32 46]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[69 76]
[70 75]
[87 107]
[88 106]
[89 105]
[90 104]
[93 103]
[94 102]
[95 101]
[96 100]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
