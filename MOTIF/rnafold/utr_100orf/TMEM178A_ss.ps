%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGAGAGCUGGGGCCAAGUGCAUUGUGUCUGGCGGCGGCGCGCGAGCCCACCGGCGGCUGCGGCGGGGCGGGAAGCCAUGGAGCCGCGGGCGCUCGUCACGGCGCUCAGCCUCGGCCUCAGCCUGUGCUCCCUGGGGCUGCUCGUCACGGCCAUCUUCACCGACCACUGGUACGAGA\
) } def
/len { sequence length } bind def

/coor [
[78.46324921 90.03198242]
[67.53942108 79.75239563]
[56.61559296 69.47280884]
[45.69176102 59.19321823]
[34.76793289 48.91363144]
[19.41546440 45.09102249]
[15.44917870 30.73421669]
[4.52534866 20.45462990]
[-3.89312577 16.83909035]
[-6.49690580 9.90056896]
[-17.24067879 -0.56706458]
[-27.98444939 -11.03469849]
[-38.72822189 -21.50233269]
[-49.47199631 -31.96996689]
[-60.21576691 -42.43759918]
[-70.95954132 -52.90523529]
[-81.70330811 -63.37286758]
[-92.44708252 -73.84049988]
[-107.73088837 -77.92899323]
[-111.44740295 -92.35247040]
[-122.19117737 -102.82010651]
[-130.54563904 -106.58121490]
[-133.02859497 -113.56388092]
[-143.58906555 -124.21640778]
[-158.83392334 -122.00263214]
[-172.30174255 -129.10694885]
[-178.92549133 -142.61953735]
[-176.35314941 -157.26606750]
[-186.91363525 -167.91859436]
[-197.47410583 -178.57112122]
[-208.03459167 -189.22364807]
[-218.59506226 -199.87617493]
[-229.24758911 -210.43666077]
[-239.99136353 -220.90428162]
[-250.73513794 -231.37191772]
[-261.47891235 -241.83955383]
[-272.22268677 -252.30718994]
[-283.05688477 -262.68118286]
[-293.98071289 -272.96078491]
[-302.39920044 -276.57632446]
[-305.00299072 -283.51483154]
[-315.74673462 -293.98248291]
[-331.03054810 -298.07095337]
[-334.74707031 -312.49444580]
[-345.49084473 -322.96206665]
[-356.23461914 -333.42971802]
[-366.97839355 -343.89733887]
[-375.33285522 -347.65844727]
[-377.81579590 -354.64111328]
[-388.37628174 -365.29364014]
[-399.02880859 -375.85412598]
[-409.77258301 -386.32174683]
[-420.51635742 -396.78939819]
[-433.41738892 -397.40661621]
[-442.15191650 -406.36895752]
[-442.41809082 -418.47949219]
[-452.97857666 -429.13201904]
[-463.53906250 -439.78454590]
[-481.01776123 -439.53271484]
[-493.04373169 -451.74996948]
[-492.53625488 -468.54794312]
[-503.28002930 -479.01559448]
[-514.02380371 -489.48321533]
[-524.76757812 -499.95086670]
[-540.56524658 -499.49453735]
[-552.00109863 -510.40313721]
[-552.29034424 -526.20477295]
[-541.26147461 -537.52465820]
[-525.45764160 -537.64678955]
[-514.25500488 -526.49884033]
[-514.29992676 -510.69464111]
[-503.55615234 -500.22698975]
[-492.81237793 -489.75936890]
[-482.06860352 -479.29171753]
[-469.31863403 -481.25918579]
[-457.59219360 -475.42935181]
[-451.27917480 -463.73403931]
[-452.88653564 -450.34503174]
[-442.32604980 -439.69250488]
[-431.76556396 -429.03997803]
[-414.61886597 -425.35833740]
[-410.04870605 -407.53317261]
[-399.30493164 -397.06552124]
[-388.56118774 -386.59790039]
[-381.55722046 -384.17562866]
[-377.72375488 -375.85412598]
[-367.16326904 -365.20159912]
[-356.51074219 -354.64111328]
[-345.76696777 -344.17349243]
[-335.02319336 -333.70584106]
[-324.27944946 -323.23822021]
[-309.76409912 -319.89843750]
[-305.27911377 -304.72625732]
[-294.53533936 -294.25860596]
[-283.70114136 -283.88461304]
[-272.77731323 -273.60501099]
[-265.73236084 -271.30468750]
[-261.75503540 -263.05096436]
[-251.01127625 -252.58332825]
[-240.26750183 -242.11569214]
[-229.52372742 -231.64805603]
[-218.77995300 -221.18041992]
[-211.77600098 -218.75814819]
[-207.94253540 -210.43666077]
[-197.38206482 -199.78413391]
[-186.82157898 -189.13160706]
[-176.26110840 -178.47908020]
[-165.70063782 -167.82655334]
[-151.03231812 -170.27168274]
[-137.57772827 -163.53091431]
[-130.59056091 -150.00193787]
[-132.93653870 -134.77688599]
[-122.37606812 -124.12435913]
[-111.72354126 -113.56388092]
[-100.97976685 -103.09624481]
[-86.46442413 -99.75646973]
[-81.97944641 -84.58427429]
[-71.23567963 -74.11663818]
[-60.49190521 -63.64900589]
[-49.74813080 -53.18137360]
[-39.00436020 -42.71373749]
[-28.26058769 -32.24610519]
[-17.51681709 -21.77847099]
[-6.77304411 -11.31083679]
[3.97072816 -0.84320283]
[14.80493736 9.53079891]
[25.72876740 19.81038666]
[40.29988861 22.89773178]
[45.04751968 37.98979950]
[55.97135162 48.26939011]
[66.89517975 58.54897690]
[77.81900787 68.82856750]
[88.74284363 79.10815430]
[96.72226715 76.49575806]
[105.11196899 76.82543182]
[112.86180115 80.05590820]
[119.00170135 85.78282166]
[122.76312256 93.28932190]
[123.67523956 101.63581085]
[137.54585266 107.34597778]
[151.41647339 113.05615234]
[165.28707886 118.76631927]
[179.15769958 124.47649384]
[192.92788696 117.06596375]
[208.22927856 120.29107666]
[217.83703613 132.62902832]
[217.21464539 148.25422668]
[206.65600586 159.78890991]
[191.14657593 161.78677368]
[178.00942993 153.30448914]
[173.44752502 138.34710693]
[159.57691956 132.63693237]
[145.70629883 126.92676544]
[131.83567810 121.21659088]
[117.96506500 115.50642395]
[117.14093781 116.41283417]
[116.27112579 117.27551270]
[122.57760620 130.88537598]
[128.88409424 144.49522400]
[135.19058228 158.10508728]
[150.48703003 168.33450317]
[148.26651001 185.73088074]
[154.80825806 199.22923279]
[161.35000610 212.72758484]
[167.89175415 226.22593689]
[182.51509094 232.82424927]
[186.33403015 248.40612793]
[176.41902161 261.01849365]
[160.37600708 260.98623657]
[150.51181030 248.33409119]
[154.39340210 232.76768494]
[147.85165405 219.26933289]
[141.30990601 205.77098083]
[134.76815796 192.27262878]
[123.43309021 188.00042725]
[117.87935638 176.78564453]
[121.58071899 164.41157532]
[115.27423096 150.80171204]
[108.96775055 137.19184875]
[102.66127014 123.58199310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 133]
[2 132]
[3 131]
[4 130]
[5 129]
[7 127]
[8 126]
[10 125]
[11 124]
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[17 118]
[18 117]
[20 115]
[21 114]
[23 113]
[24 112]
[28 108]
[29 107]
[30 106]
[31 105]
[32 104]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 96]
[39 95]
[41 94]
[42 93]
[44 91]
[45 90]
[46 89]
[47 88]
[49 87]
[50 86]
[51 84]
[52 83]
[53 82]
[56 80]
[57 79]
[58 78]
[61 74]
[62 73]
[63 72]
[64 71]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[157 180]
[158 179]
[159 178]
[160 177]
[162 174]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
