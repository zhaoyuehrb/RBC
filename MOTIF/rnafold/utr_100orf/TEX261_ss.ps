%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGUCCGCGGGGCGGGGACGCGGCGGCGGCGGCGGCGGUGGCGGCUGUGUGUCGCCGGAGCCGAAGCGCGCAGGCCCGUCCCGGUGGCCGGGGAGCGGGCGGGUGGGGGCGCCAUGUGGUUCAUGUACCUGCUGAGCUGGCUGUCGCUCUUCAUCCAGGUGGCCUUCAUCACGCUGGCUGUCGCGGCUGGACUCUAUUACCUGGCAGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[81.59419250 275.80401611]
[73.74879456 262.60000610]
[73.57251740 247.24214172]
[81.11277771 233.86155701]
[94.34129333 226.05757141]
[94.12211609 211.05917358]
[86.19967651 198.44631958]
[93.73451233 184.53456116]
[93.51533508 169.53616333]
[85.59289551 156.92330933]
[93.12773132 143.01155090]
[92.90856171 128.01315308]
[92.68938446 113.01475525]
[87.03105927 108.09201813]
[75.71440887 98.24653625]
[70.05609131 93.32379913]
[55.17163849 95.18205261]
[40.28718567 97.04030609]
[25.40273285 98.89855194]
[10.51828194 100.75680542]
[-4.36616993 102.61505890]
[-12.49112511 106.78234863]
[-19.48148346 104.39007568]
[-34.39149857 106.03063965]
[-49.30151367 107.67121124]
[-63.89102936 118.90859985]
[-79.66940308 111.22388458]
[-94.55385590 113.08213806]
[-109.43830872 114.94038391]
[-124.30878448 116.90733337]
[-139.16450500 118.98287201]
[-148.68305969 131.31311035]
[-163.77842712 133.20637512]
[-175.47476196 124.05589294]
[-190.33047485 126.13143158]
[-205.18618774 128.20697021]
[-220.04190063 130.28250122]
[-229.56045532 142.61274719]
[-244.65583801 144.50601196]
[-256.35217285 135.35552979]
[-271.20788574 137.43106079]
[-286.06359863 139.50660706]
[-300.91931152 141.58213806]
[-315.77502441 143.65766907]
[-330.63073730 145.73321533]
[-345.48641968 147.80874634]
[-356.26052856 159.69566345]
[-372.26187134 158.53976440]
[-381.21563721 145.22773743]
[-376.25323486 129.97146606]
[-361.18142700 124.47422028]
[-347.56198120 132.95303345]
[-332.70626831 130.87750244]
[-317.85055542 128.80197144]
[-302.99484253 126.72642517]
[-288.13912964 124.65089417]
[-273.28341675 122.57535553]
[-258.42770386 120.49981689]
[-249.68717957 108.49403381]
[-234.65093994 106.17752075]
[-222.11743164 115.42679596]
[-207.26173401 113.35125732]
[-192.40602112 111.27571869]
[-177.55030823 109.20018005]
[-168.80976868 97.19440460]
[-153.77354431 94.87788391]
[-141.24003601 104.12715912]
[-126.38432312 102.05162048]
[-120.19669342 98.01413727]
[-111.29656219 100.05593872]
[-96.41210938 98.19768524]
[-81.52765656 96.33943176]
[-73.85626221 86.98901367]
[-61.47315216 85.31752014]
[-50.94208145 92.76119995]
[-36.03206635 91.12062836]
[-21.12205124 89.48006439]
[-6.22442150 87.73060608]
[8.66003036 85.87235260]
[23.54448128 84.01409912]
[38.42893219 82.15585327]
[53.31338501 80.29759979]
[68.19783783 78.43934631]
[108.45409393 80.62561035]
[120.39320374 71.54499054]
[132.33230591 62.46436691]
[144.13746643 53.21026611]
[155.80613708 43.78466415]
[167.47480774 34.35905838]
[179.14349365 24.93345451]
[190.81216431 15.50785065]
[202.41166687 5.99724674]
[213.94137573 -3.59784842]
[219.59948730 -18.37269974]
[234.33161926 -20.56673813]
[245.86132812 -30.16183472]
[257.39102173 -39.75693130]
[263.04916382 -54.53178024]
[277.78128052 -56.72581863]
[289.31097412 -66.32091522]
[300.84069824 -75.91600800]
[312.37039185 -85.51110840]
[323.82968140 -95.19017792]
[335.21795654 -104.95272064]
[346.60626221 -114.71525574]
[357.99453735 -124.47779083]
[369.38281250 -134.24032593]
[380.77108765 -144.00286865]
[392.15936279 -153.76541138]
[403.54763794 -163.52793884]
[414.93591309 -173.29048157]
[408.66049194 -178.75590515]
[404.78903198 -187.65937805]
[404.77865601 -198.88548279]
[410.13714600 -212.89572144]
[415.49560547 -226.90596008]
[420.85406494 -240.91619873]
[415.65008545 -256.09179688]
[424.39141846 -269.54425049]
[440.37240601 -270.95404053]
[451.33383179 -259.23965454]
[448.86700439 -243.38739014]
[434.86428833 -235.55773926]
[429.50582886 -221.54750061]
[424.14736938 -207.53726196]
[418.78890991 -193.52702332]
[430.03332520 -183.59912109]
[443.27182007 -190.65194702]
[456.51031494 -197.70477295]
[469.74880981 -204.75758362]
[482.98730469 -211.81040955]
[496.22579956 -218.86323547]
[505.60775757 -234.70974731]
[523.11090088 -233.42422485]
[536.24493408 -240.66972351]
[549.37890625 -247.91523743]
[562.51293945 -255.16073608]
[566.83551025 -267.31094360]
[577.92150879 -273.07592773]
[589.57794189 -269.84973145]
[602.81646729 -276.90255737]
[616.05493164 -283.95538330]
[624.27008057 -298.14849854]
[640.66668701 -297.85995483]
[648.37738037 -283.38662720]
[639.47003174 -269.61740112]
[623.10778809 -270.71688843]
[609.86926270 -263.66406250]
[596.63079834 -256.61123657]
[588.15728760 -241.24205017]
[569.75848389 -242.02670288]
[556.62445068 -234.78120422]
[543.49041748 -227.53570557]
[530.35638428 -220.29019165]
[526.69952393 -208.76162720]
[515.81921387 -202.61717224]
[503.27862549 -205.62474060]
[490.04013062 -198.57191467]
[476.80163574 -191.51908875]
[463.56314087 -184.46627808]
[450.32464600 -177.41345215]
[437.08615112 -170.36062622]
[424.69845581 -161.90220642]
[413.31018066 -152.13966370]
[401.92190552 -142.37713623]
[390.53363037 -132.61459351]
[379.14535522 -122.85205841]
[367.75704956 -113.08951569]
[356.36877441 -103.32698059]
[344.98049927 -93.56443787]
[333.59222412 -83.80190277]
[330.56072998 -77.06408691]
[321.96548462 -73.98139954]
[310.43579102 -64.38630676]
[298.90606689 -54.79120636]
[287.37637329 -45.19611359]
[282.54293823 -31.10756683]
[266.98611450 -28.22722244]
[255.45642090 -18.63212776]
[243.92671204 -9.03703213]
[239.09327698 5.05151463]
[223.53646851 7.93185854]
[212.00675964 17.52695465]
[208.87713623 24.21975517]
[200.23776245 27.17652512]
[188.56909180 36.60213089]
[176.90042114 46.02773285]
[165.23173523 55.45333862]
[153.56306458 64.87894440]
[152.17631531 69.44618988]
[147.90748596 73.19197845]
[141.41293335 74.40348053]
[129.47383118 83.48410034]
[117.53471375 92.56472015]
[132.28913879 89.86160278]
[145.04731750 97.75012970]
[149.22216797 112.15744019]
[142.65821838 125.64500427]
[128.74443054 131.24917603]
[114.66454315 126.07648468]
[107.68778229 112.79558563]
[107.90695953 127.79398346]
[108.12612915 142.79238892]
[116.06424713 156.47802734]
[108.51374054 169.31700134]
[108.73291016 184.31539917]
[116.67102814 198.00103760]
[109.12051392 210.84001160]
[109.33969116 225.83840942]
[122.79058838 233.25251770]
[130.71861267 246.40705872]
[130.99116516 261.76351929]
[123.53492737 275.19113159]
[110.35559845 283.07788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[8 206]
[9 205]
[11 203]
[12 202]
[13 201]
[16 83]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[23 77]
[24 76]
[25 75]
[27 72]
[28 71]
[29 70]
[30 68]
[31 67]
[34 64]
[35 63]
[36 62]
[37 61]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[84 194]
[85 193]
[86 192]
[87 189]
[88 188]
[89 187]
[90 186]
[91 185]
[92 183]
[93 182]
[95 180]
[96 179]
[97 178]
[99 176]
[100 175]
[101 174]
[102 173]
[103 171]
[104 170]
[105 169]
[106 168]
[107 167]
[108 166]
[109 165]
[110 164]
[111 163]
[114 126]
[115 125]
[116 124]
[117 123]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[134 154]
[135 153]
[136 152]
[137 151]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
