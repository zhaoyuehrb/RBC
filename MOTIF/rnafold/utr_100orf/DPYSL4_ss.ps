%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGACCGGAACGGAGCCGUGCGGCCCCGCGCGCUCGCAGUCUGUCUCCCGCCGUCCCCACGCACGCGUCCCGGCUCACGCGUCCCCCCGCCCGCCCGCCCGCCCGCCCGCCCCCGCUUGUGCCGCCCCUACCAGAGACCCCCAGGAGCAGGAUGUCCUUCCAGGGCAAGAAAAGCAUCCCCCGGAUCACGAGUGACCGCCUUCUGAUCAGAGGUGGGAGGAUCGUGAAUGACGACCAGUCCUUUUACGCUG\
) } def
/len { sequence length } bind def

/coor [
[-38.05112457 342.56585693]
[-47.59823608 354.13534546]
[-57.14535141 365.70480347]
[-66.69246674 377.27429199]
[-76.23957825 388.84375000]
[-85.78668976 400.41320801]
[-95.33380890 411.98269653]
[-97.97384644 430.21969604]
[-114.66281891 435.68438721]
[-124.06667328 447.37060547]
[-133.47053528 459.05682373]
[-142.87438965 470.74301147]
[-138.22653198 487.02017212]
[-144.14746094 502.70089722]
[-158.11372375 511.66397095]
[-174.50363159 510.53741455]
[-183.76281738 522.33862305]
[-193.02198792 534.13977051]
[-202.28115845 545.94097900]
[-205.10466003 554.59783936]
[-211.72781372 557.82952881]
[-221.13166809 569.51574707]
[-230.53553772 581.20196533]
[-239.93939209 592.88818359]
[-249.34324646 604.57440186]
[-251.32269287 620.85363770]
[-266.51461792 627.02917480]
[-279.29086304 616.74816895]
[-276.50833130 600.58679199]
[-261.02944946 595.17053223]
[-251.62559509 583.48431396]
[-242.22174072 571.79809570]
[-232.81788635 560.11187744]
[-223.41403198 548.42572021]
[-214.08233643 536.68176270]
[-204.82316589 524.88061523]
[-195.56398010 513.07940674]
[-186.30480957 501.27825928]
[-191.13154602 488.84722900]
[-189.17684937 475.54672241]
[-180.84466553 464.85943604]
[-168.22277832 459.63690186]
[-154.56059265 461.33917236]
[-145.15673828 449.65295410]
[-135.75288391 437.96676636]
[-126.34902954 426.28054810]
[-127.34178925 414.24246216]
[-119.62721252 404.43328857]
[-106.90327454 402.43557739]
[-97.35616302 390.86608887]
[-87.80905151 379.29663086]
[-78.26193237 367.72717285]
[-68.71482086 356.15768433]
[-59.16770554 344.58822632]
[-49.62059402 333.01876831]
[-5.51550579 324.78973389]
[1.41755235 311.48812866]
[8.35061073 298.18652344]
[3.64796662 284.10031128]
[10.48958683 270.51184082]
[25.29636383 265.67477417]
[32.22942352 252.37318420]
[27.52677727 238.28698730]
[34.36839676 224.69850159]
[49.17517471 219.86145020]
[56.10823441 206.55984497]
[63.04129028 193.25823975]
[69.97434998 179.95663452]
[70.27813721 172.59336853]
[77.07563782 166.53463745]
[84.17204285 153.31945801]
[91.26844025 140.10427856]
[98.36484528 126.88909149]
[77.27451324 113.48034668]
[76.55268097 88.98212433]
[67.29351044 77.18095398]
[58.03433228 65.37977600]
[43.42850494 59.29862595]
[41.65951920 44.50944519]
[32.40034485 32.70827103]
[17.79451942 26.62712097]
[16.02553368 11.83793736]
[6.76635933 0.03676306]
[-2.49281383 -11.76441097]
[-16.89917946 -7.10802126]
[-32.00106049 -7.66042423]
[-45.97646713 -13.33565998]
[-57.14591217 -23.43088150]
[-64.17426300 -36.71334076]
[-66.23030853 -51.57090759]
[-63.08499908 -66.20771790]
[-55.13683701 -78.86125183]
[-64.39601135 -90.66242981]
[-79.83947754 -92.69638824]
[-89.06148529 -104.79635620]
[-87.02724457 -119.50680542]
[-96.28641510 -131.30798340]
[-112.00488281 -132.95275879]
[-121.89144135 -145.28286743]
[-120.08057404 -160.98306274]
[-107.64662933 -170.73870850]
[-91.96644592 -168.76194763]
[-82.34281158 -156.22555542]
[-84.48524475 -140.56715393]
[-75.22606659 -128.76597595]
[-60.45406723 -127.24166870]
[-50.89583588 -115.40550232]
[-52.59483719 -99.92160034]
[-43.33566284 -88.12042236]
[-29.15437508 -92.82960510]
[-14.18954086 -92.40196991]
[-0.24787550 -86.86983490]
[10.98083401 -76.88296509]
[18.12852669 -63.63228607]
[20.31553459 -48.70790482]
[17.25880432 -33.90829468]
[9.30836010 -21.02358437]
[18.56753349 -9.22241020]
[27.82670593 2.57876372]
[41.77025604 7.81581354]
[44.20151901 23.44909668]
[53.46069336 35.25027084]
[67.40424347 40.48731995]
[69.83551025 56.12060165]
[79.09468079 67.92177582]
[88.35385132 79.72295380]
[103.30578613 78.52304077]
[110.56445312 65.39628601]
[117.82312775 52.26952744]
[125.08179474 39.14277267]
[117.25956726 27.56483841]
[115.19270325 13.81271935]
[119.22749329 0.57342660]
[128.52363586 -9.59095287]
[141.22846985 -14.73906040]
[154.84605408 -13.92091465]
[162.26588440 -26.95724869]
[163.78341675 -35.93562698]
[169.85829163 -40.10766983]
[177.43815613 -53.05160522]
[185.01803589 -65.99553680]
[181.24266052 -81.10792542]
[189.11412048 -94.12693787]
[203.54475403 -97.63305664]
[211.12461853 -110.57698822]
[205.69682312 -125.24235535]
[211.01425171 -139.94810486]
[224.56617737 -147.75062561]
[239.95379639 -144.96580505]
[249.91154480 -132.90855408]
[249.73768616 -117.27193451]
[239.51429749 -105.43908691]
[224.06855774 -102.99710846]
[216.48867798 -90.05317688]
[220.49172974 -75.75243378]
[212.98904419 -62.51746750]
[197.96197510 -58.41566086]
[190.38209534 -45.47172546]
[182.80221558 -32.52779007]
[175.30221558 -19.53741074]
[167.88238525 -6.50107670]
[176.38911438 7.25262022]
[176.79324341 23.51344299]
[168.88940430 37.83733368]
[154.75579834 46.26169205]
[138.20855713 46.40144348]
[130.94987488 59.52819824]
[123.69120789 72.65495300]
[116.43254089 85.78170776]
[119.48306274 92.63330078]
[132.14645386 84.59348297]
[144.80982971 76.55366516]
[156.05834961 66.63041687]
[170.71455383 69.82352448]
[176.81564331 83.52668762]
[169.38175964 96.55501556]
[154.48052979 98.27439880]
[140.03231812 102.30544281]
[125.58411407 106.33647919]
[128.63464355 113.18807220]
[143.24671936 116.57733917]
[157.85879517 119.96661377]
[172.47087097 123.35588074]
[187.10356140 126.65507507]
[201.75628662 129.86407471]
[220.69754028 122.91243744]
[234.37034607 136.60781860]
[249.09768677 139.45484924]
[263.82501221 142.30186462]
[278.55236816 145.14888000]
[293.27969360 147.99589539]
[308.29757690 143.01852417]
[319.32495117 153.03082275]
[334.05227661 155.87783813]
[348.77963257 158.72486877]
[360.80737305 148.73150635]
[376.44442749 148.85913086]
[388.30746460 159.04750061]
[390.79510498 174.48594666]
[382.73275757 187.88491821]
[367.92721558 192.91784668]
[353.36923218 187.20831299]
[345.93261719 173.45219421]
[331.20526123 170.60517883]
[316.47793579 167.75816345]
[302.51345825 172.93917847]
[290.43267822 162.72323608]
[275.70535278 159.87620544]
[260.97799683 157.02919006]
[246.25067139 154.18217468]
[231.52333069 151.33515930]
[223.63648987 157.77807617]
[213.28906250 158.85380554]
[203.85609436 153.96969604]
[198.54728699 144.51679993]
[183.89456177 141.30780029]
[176.70855713 142.94226074]
[169.08160400 137.96795654]
[154.46952820 134.57868958]
[139.85745239 131.18942261]
[125.24536896 127.80014801]
[111.58003235 133.98548889]
[104.48362732 147.20068359]
[97.38722229 160.41586304]
[90.29081726 173.63104248]
[83.27595520 186.88969421]
[76.34289551 200.19129944]
[69.40983582 213.49290466]
[62.47677994 226.79450989]
[66.99201202 241.70257568]
[59.77141571 255.09352112]
[45.53102875 259.30624390]
[38.59796906 272.60784912]
[43.11319733 287.51589966]
[35.89260483 300.90686035]
[21.65221596 305.11956787]
[14.71915722 318.42117310]
[7.78609943 331.72277832]
[5.75952053 346.58526611]
[8.87819576 361.25747681]
[11.99687099 375.92968750]
[15.11554718 390.60189819]
[29.34534073 396.79000854]
[37.19118118 410.17739868]
[35.63618469 425.61636353]
[25.27827835 437.17028809]
[10.10028934 440.39648438]
[-4.06153774 434.05438232]
[-11.76169014 420.58264160]
[-10.03930187 405.16146851]
[0.44333279 393.72058105]
[-2.67534256 379.04833984]
[-5.79401779 364.37612915]
[-8.91269302 349.70391846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[7 49]
[9 46]
[10 45]
[11 44]
[12 43]
[16 38]
[17 37]
[18 36]
[19 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[56 238]
[57 237]
[58 236]
[61 233]
[62 232]
[65 229]
[66 228]
[67 227]
[68 226]
[70 225]
[71 224]
[72 223]
[73 222]
[75 126]
[76 125]
[77 124]
[79 122]
[80 121]
[82 119]
[83 118]
[84 117]
[92 109]
[93 108]
[96 105]
[97 104]
[127 169]
[128 168]
[129 167]
[130 166]
[136 161]
[137 160]
[139 159]
[140 158]
[141 157]
[144 154]
[145 153]
[180 221]
[181 220]
[182 219]
[183 218]
[184 216]
[185 215]
[187 211]
[188 210]
[189 209]
[190 208]
[191 207]
[193 205]
[194 204]
[195 203]
[239 254]
[240 253]
[241 252]
[242 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
