%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCGCCUUUCACUAUCCGCCAUUCUUGUCACCUCAGCUGCUGCCCUCGCUACCGCACCGACUUCGCCCGUGUGCUCGCCUGCACUUGCGCUGCCCGCCAUGGCCACCGCCCAGCCGUCGCAGGUGCGCCAGAAGUACGACACCAACUGCGACGCCGCCAUCAACAGCCACAUCACGCUGGAGCUCUACACCUCCUACC\
) } def
/len { sequence length } bind def

/coor [
[-29.84141731 295.53918457]
[-44.81622696 294.67019653]
[-59.44357300 291.34747314]
[-73.32418823 285.66162109]
[-86.07916260 277.76791382]
[-97.36033630 267.88180542]
[-106.85976410 256.27316284]
[-114.31814575 243.25885010]
[-119.53189087 229.19410706]
[-122.35868073 214.46287537]
[-122.72135925 199.46725464]
[-120.61001587 184.61659241]
[-116.08228302 170.31625366]
[-109.26176453 156.95658875]
[-100.33463287 144.90228271]
[-89.54457092 134.48237610]
[-77.18610382 125.98130035]
[-63.59659195 119.63109589]
[-49.14697266 115.60511017]
[-34.23134232 114.01322937]
[-48.14494705 108.40863037]
[-62.05855560 102.80402374]
[-75.97216034 97.19941711]
[-89.88576508 91.59481812]
[-98.00514984 96.41709137]
[-107.29568481 96.94996643]
[-115.66191864 93.20014954]
[-121.27513123 86.12611389]
[-122.97275543 77.39679718]
[-136.60836792 71.14619446]
[-146.60662842 78.66507721]
[-158.78297424 81.20166016]
[-170.81143188 78.33412170]
[-180.42089844 70.66704559]
[-185.82392883 59.70515442]
[-186.04905701 47.55833054]
[-199.48265076 40.88460159]
[-212.91624451 34.21087646]
[-226.34983826 27.53714752]
[-235.43577576 26.51989174]
[-239.94000244 20.65269852]
[-253.26765442 13.76982975]
[-266.75299072 7.20128775]
[-280.38861084 0.95068127]
[-294.02420044 -5.29992485]
[-304.15902710 0.93320137]
[-315.92404175 1.49056971]
[-326.38745117 -3.65079284]
[-332.99761963 -13.10809422]
[-334.20516968 -24.46254158]
[-347.63876343 -31.13626862]
[-357.96343994 -25.22294617]
[-369.74014282 -25.03356171]
[-380.03775024 -30.49944115]
[-386.34909058 -40.15871811]
[-387.20117188 -51.54536057]
[-400.41961670 -58.63568878]
[-413.63806152 -65.72602081]
[-426.85650635 -72.81634521]
[-440.12997437 -79.80315399]
[-453.45761108 -86.68602753]
[-467.26074219 -79.59709930]
[-482.58929443 -82.00858307]
[-493.54910278 -92.99321747]
[-495.92590332 -108.32718658]
[-488.80578613 -122.11425781]
[-474.92654419 -129.05302429]
[-459.62506104 -126.47539520]
[-448.78506470 -115.37251282]
[-446.57473755 -100.01367188]
[-433.24710083 -93.13079834]
[-425.85549927 -92.85456848]
[-419.76617432 -86.03479004]
[-406.54776001 -78.94445801]
[-393.32931519 -71.85413361]
[-380.11087036 -64.76380920]
[-362.94265747 -71.10057831]
[-346.30572510 -62.73997116]
[-340.96502686 -44.56985855]
[-327.53143311 -37.89613342]
[-310.56967163 -44.76639557]
[-293.67956543 -36.92985153]
[-287.77359009 -18.93553734]
[-274.13800049 -12.68493080]
[-260.50238037 -6.43432474]
[-257.08099365 -7.31771898]
[-253.06109619 -6.58278894]
[-249.21026611 -3.96604633]
[-246.38478088 0.44218466]
[-233.05712891 7.32505274]
[-219.67610168 14.10355759]
[-206.24252319 20.77728462]
[-192.80892944 27.45101166]
[-179.37533569 34.12474060]
[-164.12710571 25.22875786]
[-146.43479919 27.27879715]
[-133.39677429 39.64217758]
[-130.35775757 57.51057816]
[-116.72215271 63.76118469]
[-96.42712402 60.03281784]
[-84.28115845 77.68121338]
[-70.36755371 83.28581238]
[-56.45394897 88.89041901]
[-42.54034424 94.49502563]
[-28.62673950 100.09962463]
[-31.52944946 85.38316345]
[-21.21347427 74.49369049]
[-6.36163092 76.59672546]
[0.52548593 89.92217255]
[-6.34898281 103.25423431]
[8.57367420 101.73294830]
[23.48398590 100.09509277]
[38.38104248 98.34075928]
[53.27810287 96.58643341]
[68.17516327 94.83209991]
[83.07221985 93.07777405]
[105.31431580 53.88619614]
[118.74790955 47.21246719]
[132.18150330 40.53874207]
[145.61509705 33.86501312]
[159.04867554 27.19128609]
[172.48226929 20.51755905]
[185.91586304 13.84383106]
[199.18931580 6.85701990]
[212.29533386 -0.43903497]
[225.40133667 -7.73508978]
[238.50735474 -15.03114510]
[251.55595398 -22.42939758]
[264.54632568 -29.92939758]
[265.17767334 -45.34383774]
[274.06115723 -57.95682144]
[288.36209106 -63.74358749]
[303.51712036 -60.85760498]
[314.69030762 -50.21977615]
[318.31631470 -35.22459793]
[313.23815918 -20.65697098]
[301.07620239 -11.16537857]
[285.71130371 -9.77855015]
[272.04632568 -16.93901634]
[259.05593872 -9.43901730]
[254.83168030 -3.36714983]
[245.80340576 -1.92513168]
[232.69738770 5.37092352]
[219.59138489 12.66697788]
[206.48536682 19.96303368]
[205.17361450 23.24411201]
[202.20301819 26.05040359]
[197.81521606 27.60715866]
[192.58958435 27.27742195]
[179.15600586 33.95114899]
[165.72241211 40.62487793]
[152.28881836 47.29860306]
[138.85522461 53.97233200]
[125.42163849 60.64605713]
[111.98804474 67.31978607]
[112.22245789 74.81612396]
[112.69126892 89.80879211]
[112.92568207 97.30513000]
[126.74999237 103.12651062]
[139.95758057 94.98161316]
[155.42761230 96.18904877]
[167.21153259 106.28453064]
[170.77819824 121.38613129]
[164.75614929 135.68699646]
[151.46098328 143.68812561]
[136.00495911 142.31294250]
[124.33124542 132.09022522]
[120.92861176 116.95082092]
[107.10430145 111.12944031]
[116.48015594 122.83812714]
[117.65703583 137.79188538]
[110.22823334 150.82312012]
[96.76094055 157.42857361]
[81.90908813 155.32560730]
[70.80506134 145.24093628]
[67.28610992 130.65954590]
[72.56829071 116.62036133]
[84.82654572 107.97483063]
[69.92948914 109.72916412]
[55.03243256 111.48348999]
[40.13537598 113.23782349]
[25.23831558 114.99214935]
[17.07378769 119.10671997]
[10.09496117 116.65560913]
[-4.82769585 118.17689514]
[9.05925941 123.84720612]
[21.82304764 131.72665405]
[33.11526108 141.60015869]
[42.62765503 153.19818115]
[50.10057449 166.20416260]
[55.33003616 180.26306152]
[58.17328644 194.99113464]
[58.55271530 209.98632812]
[56.45796585 224.83934021]
[51.94622421 239.14472961]
[45.14063644 252.51200867]
[36.22697830 264.57629395]
[25.44856453 275.00823975]
[13.09960842 283.52313232]
[-0.48280212 289.88851929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[29 99]
[30 98]
[36 94]
[37 93]
[38 92]
[39 91]
[41 90]
[42 89]
[43 85]
[44 84]
[45 83]
[50 80]
[51 79]
[56 76]
[57 75]
[58 74]
[59 73]
[60 71]
[61 70]
[110 185]
[111 184]
[112 182]
[113 181]
[114 180]
[115 179]
[116 178]
[117 155]
[118 154]
[119 153]
[120 152]
[121 151]
[122 150]
[123 149]
[124 145]
[125 144]
[126 143]
[127 142]
[128 140]
[129 139]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
