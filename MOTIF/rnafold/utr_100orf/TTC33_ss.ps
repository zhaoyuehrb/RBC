%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUCUGGGAUUUGUGGUCCCGGAGAAGAGAUUGGCGGAGGGGAAAGACUGAGUCGUCUUUCCUUUGCCCGCUUCUGUGGACUGUUCGAACGCCCAGGGGUGGGCCAAACCCGUUUCUUAGGAAACCAGGAAUCCAGGGAAGGCAGAAUGGCUUCCUUUGGGUGGAAGAGGAAAAUUGGUGAGAAGGUCUCAAAGGUCACUUCCCAGCAGUUUGAAGCUGAAGCUGCUGAUGAGAAGGAUGUAGUUG\
) } def
/len { sequence length } bind def

/coor [
[48.34877396 224.87048340]
[57.37546158 212.60513306]
[70.61372375 205.07731628]
[69.10227203 190.15365601]
[67.59082794 175.22999573]
[66.07937622 160.30633545]
[64.56792450 145.38269043]
[54.95516586 102.61003876]
[77.05921173 76.74716949]
[62.55815125 72.91059875]
[48.05709076 69.07403564]
[33.55603027 65.23747253]
[19.05496979 61.40090561]
[4.55390978 57.56433868]
[-10.76621056 61.51459122]
[-21.09116173 50.77938843]
[-35.59222412 46.94282150]
[-50.09328461 43.10625839]
[-64.59434509 39.26969147]
[-82.26324463 44.49586868]
[-94.20579529 31.62295151]
[-108.75411224 27.96964264]
[-124.02317047 32.11286926]
[-134.48274231 21.50878334]
[-149.03105164 17.85547638]
[-163.57936096 14.20216846]
[-178.12767029 10.54886055]
[-192.67597961 6.89555311]
[-184.73846436 19.62331200]
[-186.73356628 34.49003983]
[-197.74589539 44.67475891]
[-212.72291565 45.50463486]
[-224.79306030 36.59891510]
[-228.41842651 22.04361725]
[-221.93566895 8.51683140]
[-208.31781006 2.22464323]
[-222.48718262 -2.69763160]
[-236.65655518 -7.61990643]
[-250.82592773 -12.54218102]
[-265.80175781 -13.39336014]
[-280.43762207 -10.10828400]
[-295.07348633 -6.82320833]
[-309.70932007 -3.53813219]
[-324.34518433 -0.25305623]
[-338.98104858 3.03201985]
[-353.61691284 6.31709576]
[-368.25274658 9.60217190]
[-382.88861084 12.88724804]
[-397.52447510 16.17232323]
[-412.16030884 19.45739937]
[-420.40408325 32.94130707]
[-435.78726196 36.56536865]
[-449.18325806 28.17949295]
[-452.64447021 12.75887394]
[-444.11743164 -0.54771090]
[-428.66110229 -3.84570074]
[-415.44540405 4.82154369]
[-400.80953979 1.53646779]
[-386.17367554 -1.74860811]
[-371.53784180 -5.03368425]
[-356.90197754 -8.31875992]
[-342.26611328 -11.60383606]
[-327.63024902 -14.88891220]
[-312.99441528 -18.17398834]
[-298.35855103 -21.45906448]
[-283.72268677 -24.74414062]
[-269.08685303 -28.02921677]
[-266.07931519 -42.72461700]
[-278.24786377 -51.49539948]
[-290.41641235 -60.26618576]
[-302.58493042 -69.03696442]
[-314.75347900 -77.80775452]
[-326.92202759 -86.57853699]
[-339.09057617 -95.34931946]
[-351.25909424 -104.12010193]
[-363.42764282 -112.89088440]
[-375.59619141 -121.66166687]
[-387.76470947 -130.43244934]
[-396.53256226 -132.90220642]
[-400.03051758 -139.39144897]
[-412.08743286 -148.31506348]
[-418.56268311 -149.43557739]
[-422.86856079 -153.09663391]
[-424.33218384 -157.61906433]
[-436.16009521 -166.84403992]
[-447.98800659 -176.06901550]
[-464.29550171 -177.80055237]
[-470.70147705 -192.89677429]
[-460.61602783 -205.82795715]
[-444.41418457 -203.29162598]
[-438.76303101 -187.89694214]
[-426.93511963 -178.67196655]
[-415.10717773 -169.44699097]
[-403.16381836 -160.37197876]
[-391.10690308 -151.44836426]
[-378.99392700 -142.60098267]
[-366.82540894 -133.83020020]
[-354.65686035 -125.05942535]
[-342.48831177 -116.28864288]
[-330.31979370 -107.51786041]
[-318.15124512 -98.74707031]
[-305.98269653 -89.97628784]
[-293.81414795 -81.20550537]
[-281.64562988 -72.43472290]
[-269.47708130 -63.66394043]
[-257.30853271 -54.89315796]
[-252.21223450 -50.97841644]
[-248.37207031 -46.30698395]
[-245.86622620 -41.21991348]
[-244.68829346 -36.05507660]
[-244.75256348 -31.12745476]
[-245.90365601 -26.71155739]
[-231.73428345 -21.78928185]
[-217.56491089 -16.86700821]
[-203.39553833 -11.94473267]
[-189.02267456 -7.65275764]
[-174.47436523 -3.99945021]
[-159.92605591 -0.34614268]
[-145.37774658 3.30716467]
[-130.82943726 6.96047211]
[-116.60096741 2.55593801]
[-105.10079956 13.42133236]
[-90.55249023 17.07464027]
[-80.03139496 11.13689709]
[-67.89305878 14.04333496]
[-60.75777817 24.76863098]
[-46.25671768 28.60519600]
[-31.75565720 32.44176102]
[-17.25459671 36.27832794]
[-2.97169018 32.05365753]
[8.39047527 43.06327820]
[22.89153671 46.89984512]
[37.39259720 50.73640823]
[51.89365768 54.57297516]
[66.39472198 58.40954208]
[80.89578247 62.24610519]
[94.93644714 56.96789169]
[103.31911469 44.52880096]
[111.70177460 32.08971024]
[120.08444214 19.65062141]
[128.46710205 7.21153069]
[136.84976196 -5.22755957]
[145.23242188 -17.66664886]
[146.52824402 -33.43470001]
[160.05712891 -39.66513443]
[168.43980408 -52.10422516]
[172.27734375 -68.61814880]
[189.20823669 -69.50208282]
[194.74456787 -53.47755814]
[180.87889099 -43.72156143]
[172.49623108 -31.28247070]
[171.80000305 -16.40414810]
[157.67152405 -9.28398705]
[149.28884888 3.15510321]
[140.90618896 15.59419346]
[132.52352905 28.03328323]
[124.14086914 40.47237396]
[115.75820160 52.91146469]
[107.37554169 65.35055542]
[111.04329681 71.89253998]
[121.22011566 60.87290192]
[134.84521484 67.14639282]
[133.08912659 82.04325104]
[118.37880707 84.97650909]
[122.04656219 91.51849365]
[137.03193665 90.85632324]
[152.01731873 90.19416046]
[167.00268555 89.53199005]
[181.98806763 88.86981964]
[191.24267578 79.90899658]
[203.72149658 79.65274811]
[212.73768616 87.69380188]
[227.73022461 87.22074890]
[231.98745728 76.02542877]
[239.73974609 66.94056702]
[250.06610107 61.00970459]
[261.75164795 58.90378189]
[273.43063354 60.84531784]
[283.74594116 66.58515930]
[291.50686646 75.43415070]
[295.82653809 86.34584808]
[310.82623291 86.44047546]
[325.82592773 86.53509521]
[340.82562256 86.62972260]
[355.82534790 86.72434998]
[371.70230103 80.77805328]
[381.81140137 94.38843536]
[371.53137207 107.87019348]
[355.73071289 101.72405243]
[340.73101807 101.62942505]
[325.73129272 101.53479767]
[310.73159790 101.44017792]
[295.73190308 101.34555054]
[287.27462769 117.40231323]
[271.75216675 126.96813965]
[253.43666077 127.30823517]
[237.42114258 118.24111938]
[228.20327759 102.21328735]
[213.21073914 102.68634033]
[198.80189514 112.72236633]
[182.65023804 103.85520172]
[167.66485596 104.51736450]
[152.67948914 105.17953491]
[137.69410706 105.84170532]
[122.70873260 106.50387573]
[117.25379181 120.47683716]
[127.82688141 131.11683655]
[138.39997864 141.75683594]
[148.97306824 152.39685059]
[159.54615784 163.03684998]
[170.11926270 173.67684937]
[180.69235229 184.31686401]
[191.26544189 194.95686340]
[201.83853149 205.59686279]
[217.40458679 204.10290527]
[230.25982666 213.00666809]
[234.33438110 228.10409546]
[227.70437622 242.26661682]
[213.50030518 248.80714417]
[198.42889404 244.63742065]
[189.60639954 231.72628784]
[191.19853210 216.16996765]
[180.62544250 205.52995300]
[170.05235291 194.88995361]
[159.47924805 184.24995422]
[148.90615845 173.60993958]
[138.33306885 162.96994019]
[127.75997162 152.32994080]
[117.18688202 141.68992615]
[106.61378479 131.04992676]
[99.83323669 134.25524902]
[98.60449982 149.20484924]
[86.27213287 140.66590881]
[79.49157715 143.87123108]
[81.00302887 158.79489136]
[82.51448059 173.71855164]
[84.02593231 188.64219666]
[85.53738403 203.56585693]
[100.01616669 208.28652954]
[111.31876373 218.49296570]
[117.48694611 232.41680908]
[117.45202637 247.64567566]
[111.22005463 261.54110718]
[99.87076569 271.69558716]
[85.37049103 276.34982300]
[70.23148346 274.69741821]
[57.07667923 267.02468872]
[48.18521500 254.66094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 238]
[4 237]
[5 236]
[6 235]
[7 234]
[9 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 131]
[16 129]
[17 128]
[18 127]
[19 126]
[21 123]
[22 122]
[24 120]
[25 119]
[26 118]
[27 117]
[28 116]
[36 115]
[37 114]
[38 113]
[39 112]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[80 95]
[81 94]
[84 93]
[85 92]
[86 91]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[145 151]
[146 150]
[165 205]
[166 204]
[167 203]
[168 202]
[169 201]
[172 199]
[173 198]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[211 225]
[212 224]
[213 223]
[214 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
