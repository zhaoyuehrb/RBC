%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCGCCGUCGUCGCCGCCAUCCUCGGCGCGACUCGCUUCUUUCGGUUCUACCUGGGAGAAUCCACCGCCAUCCGCCACCAUGGUGAACUUCACGGUAGACCAGAUCCGCGCCAUCAUGGACAAGAAGGCCAACAUCCGCAACAUGUCUGUCAUCGCCCACGUGGACCAUGGCAAGUCCA\
) } def
/len { sequence length } bind def

/coor [
[193.91305542 185.95341492]
[194.44903564 170.96299744]
[200.95195007 157.44589233]
[212.33006287 147.67149353]
[226.67269897 143.28085327]
[212.22894287 139.23390198]
[197.88613892 143.25050354]
[186.68521118 132.07688904]
[172.24145508 128.02993774]
[157.79769897 123.98298645]
[143.35392761 119.93603516]
[128.91017151 115.88908386]
[104.34863281 143.48384094]
[58.44907761 135.13203430]
[47.14338303 144.99009705]
[35.83768463 154.84814453]
[24.53199005 164.70620728]
[13.22629547 174.56425476]
[8.80085373 182.58300781]
[1.64239573 184.49209595]
[-9.82995892 194.15570068]
[-21.30231285 203.81929016]
[-22.39998817 219.58541870]
[-34.37915802 229.89439392]
[-50.13279724 228.63008118]
[-60.31454468 216.54260254]
[-58.88375854 200.80320740]
[-46.68929291 190.74981689]
[-30.96590805 192.34693909]
[-19.49355507 182.68333435]
[-8.02120018 173.01974487]
[3.36824012 163.25856018]
[14.67393589 153.40051270]
[25.97963142 143.54244995]
[37.28532791 133.68440247]
[48.59102249 123.82633972]
[46.75314713 116.55501556]
[32.21043015 120.23052216]
[28.53516388 105.68774414]
[43.07740021 102.01235199]
[41.23952484 94.74102783]
[26.60750771 91.43889618]
[11.97549152 88.13675690]
[-2.65652490 84.83462524]
[-17.28854179 81.53248596]
[-31.92055893 78.23035431]
[-46.55257416 74.92822266]
[-61.18458939 71.62608337]
[-75.81660461 68.32395172]
[-89.04238892 76.97578430]
[-104.49488831 73.65978241]
[-113.00640869 60.34326172]
[-109.52721405 44.92668915]
[-96.12145233 36.55643463]
[-80.74252319 40.19842911]
[-72.51447296 53.69193268]
[-57.88245773 56.99406815]
[-43.25043869 60.29620361]
[-28.61842346 63.59833908]
[-13.98640728 66.90047455]
[0.64560962 70.20260620]
[15.27762604 73.50473785]
[29.90964317 76.80687714]
[44.54166031 80.10900879]
[49.27481842 74.29117584]
[35.28339386 68.88376617]
[36.10258102 53.90615463]
[50.60028839 50.05693436]
[58.74113846 62.65550613]
[63.47429657 56.83767319]
[57.26425934 43.18353653]
[51.05421829 29.52940178]
[44.84418106 15.87526608]
[38.63414001 2.22113037]
[32.42410278 -11.43300533]
[17.19451332 -14.40609169]
[6.64571857 -25.78601074]
[4.83394575 -41.19695282]
[12.45585823 -54.71309280]
[26.58067513 -61.13720322]
[41.77711487 -57.99908066]
[52.20183945 -46.50539398]
[53.84632492 -31.07570648]
[46.07823563 -17.64304352]
[52.28827667 -3.98890877]
[58.49831390 9.66522694]
[64.70835114 23.31936264]
[70.91839600 36.97349930]
[77.12843323 50.62763214]
[92.77412415 49.15880585]
[107.28598022 52.26123047]
[119.43276978 59.15624619]
[128.33276367 68.76536560]
[133.51588440 79.84385681]
[134.93928528 91.12290955]
[132.95712280 101.44532013]
[147.40087891 105.49227142]
[161.84465027 109.53922272]
[176.28840637 113.58617401]
[190.73216248 117.63312531]
[206.10809326 113.90599060]
[216.27589417 124.79014587]
[230.71965027 128.83709717]
[245.52276611 131.25947571]
[260.50308228 132.02746582]
[275.48342896 132.79544067]
[288.24050903 120.84233856]
[305.35919189 121.78327942]
[316.29019165 134.55006409]
[331.28143311 135.06217957]
[346.27270508 135.57429504]
[361.26394653 136.08641052]
[376.25521851 136.59852600]
[391.24645996 137.11064148]
[381.95034790 125.33854675]
[383.54397583 110.42343903]
[395.11746216 100.88119507]
[410.06286621 102.16001129]
[419.84698486 113.52973938]
[418.88357544 128.49876404]
[407.72222900 138.52059937]
[422.58251953 140.56309509]
[437.44281006 142.60559082]
[445.35723877 133.69630432]
[456.47970581 129.76458740]
[467.99822998 131.68141174]
[477.05969238 138.85437012]
[481.47668457 149.40388489]
[496.25857544 151.95254517]
[511.17272949 146.67254639]
[522.40026855 156.45983887]
[537.18218994 159.00848389]
[551.96405029 161.55714417]
[564.78643799 152.71263123]
[579.74102783 155.50790405]
[588.09393311 167.78656006]
[602.87579346 170.33522034]
[617.65771484 172.88386536]
[632.43957520 175.43252563]
[644.26281738 165.19801331]
[659.89929199 165.00944519]
[671.96588135 174.95585632]
[674.76519775 190.34085083]
[666.97540283 203.90011597]
[652.27465820 209.23135376]
[637.60418701 203.81735229]
[629.89093018 190.21441650]
[615.10906982 187.66575623]
[600.32714844 185.11711121]
[585.54528809 182.56845093]
[573.56280518 191.34094238]
[558.53558350 188.96681213]
[549.41540527 176.33903503]
[534.63354492 173.79037476]
[519.85162354 171.24172974]
[505.99478149 176.70402527]
[493.70993042 166.73443604]
[478.92800903 164.18577576]
[464.65859985 175.62550354]
[446.23980713 172.98088074]
[435.40029907 157.46588135]
[420.54000854 155.42338562]
[405.67971802 153.38088989]
[390.73434448 152.10189819]
[375.74310303 151.58978271]
[360.75183105 151.07766724]
[345.76058960 150.56555176]
[330.76931763 150.05343628]
[315.77807617 149.54132080]
[307.67294312 159.57594299]
[295.07815552 163.15640259]
[282.53884888 158.75729370]
[274.71542358 147.77577209]
[259.73510742 147.00778198]
[244.75477600 146.23979187]
[256.95010376 154.97332764]
[264.61907959 167.86466980]
[266.47415161 182.74951172]
[262.20394897 197.12884521]
[252.52531433 208.58851624]
[239.06321716 215.20457458]
[224.07781982 215.86625671]
[210.08500671 210.46244812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 103]
[6 102]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[20 31]
[21 30]
[22 29]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[104 175]
[105 174]
[106 173]
[109 169]
[110 168]
[111 167]
[112 166]
[113 165]
[114 164]
[121 163]
[122 162]
[123 161]
[128 158]
[129 157]
[131 155]
[132 154]
[133 153]
[136 150]
[137 149]
[138 148]
[139 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
