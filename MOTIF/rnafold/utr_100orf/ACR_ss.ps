%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCAGGAGUAUGGUUGAGAUGCUACCAACUGCCAUUCUGCUGGUCUUGGCAGUGUCCGUGGUUGCUAAAGAUAACGCCACGUGUGAUGGCCCCUGUGGGUUACGGUUCA\
) } def
/len { sequence length } bind def

/coor [
[85.31433868 213.60356140]
[77.56279755 200.02241516]
[80.40541840 184.64535522]
[92.50000000 174.73298645]
[92.50000000 159.73298645]
[92.50000000 144.73298645]
[77.68630981 139.48910522]
[65.55101013 129.50521851]
[52.70185852 137.24467468]
[39.96153259 145.16200256]
[27.33249092 153.25566101]
[14.70345020 161.34931946]
[2.07440877 169.44299316]
[-10.55463219 177.53665161]
[-12.37425327 193.06799316]
[-23.78693008 203.75840759]
[-39.40394592 204.56018066]
[-51.85142136 195.09475708]
[-55.25204086 179.83140564]
[-48.00013733 165.97703552]
[-33.51983643 160.07322693]
[-18.64829254 164.90760803]
[-6.01925039 156.81394958]
[6.60979080 148.72029114]
[19.23883247 140.62663269]
[31.86787224 132.53297424]
[35.85746002 126.18509674]
[44.96239090 124.39553070]
[57.81153870 116.65605927]
[55.17185974 93.09143066]
[64.78376007 71.41491699]
[54.86095428 60.16600800]
[44.93814850 48.91709900]
[35.01534271 37.66819382]
[25.09253693 26.41928482]
[15.16973114 15.17037678]
[5.24692535 3.92146921]
[-9.43260670 8.10167027]
[-24.47066307 5.49023056]
[-36.88142776 -3.39434671]
[-44.20072937 -16.78802299]
[-44.97532272 -32.03147125]
[-39.05140686 -46.09809875]
[-27.60517883 -56.19496155]
[-12.90929794 -60.31732178]
[2.11835766 -57.64668274]
[14.49403763 -48.71330261]
[21.76054001 -35.29090881]
[22.47509766 -20.04452515]
[16.49583244 -6.00133657]
[26.41863823 5.24757147]
[36.34144592 16.49647903]
[46.26425171 27.74538612]
[56.18705750 38.99429321]
[66.10986328 50.24320221]
[76.03266907 61.49211121]
[89.05937958 55.98189545]
[103.14999390 54.75214767]
[116.93428802 57.92244720]
[129.07183838 65.18450928]
[140.45759583 55.41902542]
[151.84335327 45.65354156]
[163.22909546 35.88805771]
[174.61485291 26.12257576]
[186.00059509 16.35709381]
[181.60449219 1.77648401]
[183.52536011 -13.33080387]
[191.43040466 -26.34734154]
[203.95001221 -35.01793671]
[218.91510010 -37.84035492]
[233.73287964 -34.32559204]
[245.83605957 -25.08260727]
[253.12771606 -11.71280193]
[254.34451294 3.46742511]
[249.27563477 17.82800865]
[238.79928589 28.88088799]
[224.73057556 34.71108627]
[209.50697327 34.30849075]
[195.76608276 27.74284554]
[184.38032532 37.50832748]
[172.99458313 47.27381134]
[161.60882568 57.03929138]
[150.22308350 66.80477905]
[138.83732605 76.57025909]
[142.41963196 83.94179535]
[144.61688232 91.83763885]
[145.35736084 100.00000000]
[144.61688232 108.16236115]
[142.41963196 116.05820465]
[138.83732605 123.42974091]
[150.22308350 133.19522095]
[161.60882568 142.96070862]
[172.99458313 152.72619629]
[184.38032532 162.49166870]
[195.76608276 172.25715637]
[211.97529602 174.74581909]
[217.67170715 190.12380981]
[206.99533081 202.57159424]
[190.92912292 199.28393555]
[186.00059509 183.64291382]
[174.61485291 173.87742615]
[163.22909546 164.11193848]
[151.84335327 154.34646606]
[140.45759583 144.58097839]
[129.07183838 134.81549072]
[118.94635010 141.21075439]
[107.50000000 144.73298645]
[107.50000000 159.73298645]
[107.50000000 174.73298645]
[119.59458160 184.64535522]
[122.43720245 200.02241516]
[114.68566132 213.60356140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 109]
[5 108]
[6 107]
[8 29]
[9 28]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
