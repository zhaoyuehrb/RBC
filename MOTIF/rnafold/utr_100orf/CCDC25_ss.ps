%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGCACGGAGGAGUUCCGGGGGCCAGGCGGCCGCCGCGAGUCUGGUAUCCUGAGCUUCGUGAGUUGAGCGCUGCUGCUCCGCGGUGGAGUCACCGCACCGCUCCCGGGAUCAUGGUGUUCUACUUCACCAGCAGCAGCGUUAAUUCAUCUGCCUACACUAUUUACAUGGGAAAAGAUAAAUAUGAAAAUGAAGAUCUGAUCAAGCAUGGCU\
) } def
/len { sequence length } bind def

/coor [
[235.76914978 513.59790039]
[241.24505615 499.39312744]
[231.03477478 488.40447998]
[220.82449341 477.41583252]
[210.61422729 466.42718506]
[197.79951477 467.76080322]
[186.38575745 461.37542725]
[180.64862061 449.40631104]
[182.88423157 436.12548828]
[172.83636475 424.98815918]
[154.08193970 425.61138916]
[140.59603882 409.54965210]
[127.53287506 416.92214966]
[114.46971893 424.29464722]
[101.40656281 431.66717529]
[88.34339905 439.03967285]
[75.28024292 446.41217041]
[62.21707916 453.78469849]
[54.00170898 467.30572510]
[39.11493301 466.82293701]
[26.05177307 474.19543457]
[12.98861313 481.56796265]
[4.77324295 495.08898926]
[-10.11353588 494.60620117]
[-23.17669487 501.97869873]
[-36.23985672 509.35122681]
[-49.30301285 516.72375488]
[-62.36617279 524.09625244]
[-75.42933655 531.46875000]
[-88.49249268 538.84124756]
[-97.48607635 554.91094971]
[-115.01500702 554.05212402]
[-127.96852875 561.61560059]
[-135.62417603 576.11810303]
[-152.01956177 576.46893311]
[-160.28854370 562.30712891]
[-151.92468262 548.20117188]
[-135.53201294 548.66204834]
[-122.57848358 541.09857178]
[-119.20342255 529.48388672]
[-108.47547913 523.07623291]
[-95.86499786 525.77807617]
[-82.80184174 518.40557861]
[-69.73867798 511.03308105]
[-56.67552185 503.66055298]
[-43.61236191 496.28805542]
[-30.54920387 488.91555786]
[-17.48604393 481.54302979]
[-10.20503807 468.54934692]
[5.61610556 468.50479126]
[18.67926407 461.13229370]
[31.74242401 453.75976562]
[39.02342987 440.76608276]
[54.84457397 440.72152710]
[67.90773010 433.34902954]
[80.97089386 425.97650146]
[94.03404999 418.60400391]
[107.09721375 411.23150635]
[120.16036987 403.85897827]
[133.22352600 396.48648071]
[140.49995422 383.36956787]
[139.83955383 368.38409424]
[139.17915344 353.39865112]
[138.51875305 338.41320801]
[137.85835266 323.42773438]
[137.19795227 308.44229126]
[136.53753662 293.45681763]
[135.87713623 278.47137451]
[135.21673584 263.48593140]
[131.78263855 256.94348145]
[134.65826416 248.27597046]
[134.21792603 233.28242493]
[133.77757263 218.28889465]
[133.33723450 203.29536438]
[132.89688110 188.30181885]
[132.45654297 173.30828857]
[132.01618958 158.31475830]
[131.57583618 143.32121277]
[131.13549805 128.32768250]
[130.69514465 113.33414459]
[110.09185791 137.87850952]
[73.15774536 136.03474426]
[49.35578918 101.51777649]
[42.36994553 88.24382019]
[35.38410568 74.96985626]
[28.39826202 61.69589615]
[21.41242027 48.42193604]
[14.42657852 35.14797592]
[0.27517030 26.86125946]
[0.64653373 10.46631813]
[15.15864182 2.82886147]
[28.88268280 11.80565071]
[27.70053864 28.16213417]
[34.68638229 41.43609619]
[41.67222214 54.71005630]
[48.65806580 67.98401642]
[55.64390564 81.25797272]
[62.62974930 94.53193665]
[69.83988190 92.46701050]
[91.47029114 86.27222443]
[90.37025452 71.31261444]
[89.27021790 56.35300446]
[79.60873413 43.10205078]
[86.50011444 28.22116280]
[102.85510254 27.01851845]
[111.84909058 40.73129654]
[104.22982788 55.25296783]
[105.32986450 70.21257782]
[106.42990112 85.17218781]
[113.77205658 86.70278931]
[116.83327484 72.01847839]
[119.89472961 57.33422089]
[134.57893372 60.39592361]
[131.51757812 75.07969666]
[128.45637512 89.76400757]
[135.79852295 91.29460907]
[142.78436279 78.02065277]
[149.77020264 64.74668884]
[156.75605774 51.47273254]
[149.77420044 37.61511993]
[152.30429077 22.30570221]
[163.37344360 11.43126106]
[178.72534180 9.17323971]
[192.45687866 16.39989471]
[199.28799438 30.33243179]
[196.59197998 45.61350250]
[185.40550232 56.36722565]
[170.03001404 58.45857239]
[163.04417419 71.73253632]
[156.05831909 85.00649261]
[149.07247925 98.28045654]
[145.68869019 112.89379883]
[146.12902832 127.88733673]
[146.56938171 142.88087463]
[147.00971985 157.87440491]
[147.45007324 172.86793518]
[147.89041138 187.86148071]
[148.33076477 202.85501099]
[148.77111816 217.84854126]
[149.21145630 232.84208679]
[149.65180969 247.83561707]
[150.20219421 262.82550049]
[150.86259460 277.81097412]
[151.52299500 292.79641724]
[152.18339539 307.78189087]
[152.84379578 322.76733398]
[153.50421143 337.75277710]
[154.16461182 352.73825073]
[154.82501221 367.72369385]
[155.48541260 382.70916748]
[170.45240784 382.27731323]
[182.27603149 390.14279175]
[187.09974670 402.67529297]
[183.97370911 414.94027710]
[194.02157593 426.07763672]
[211.50648499 426.65667725]
[222.93692017 439.45104980]
[221.60287476 456.21691895]
[231.81314087 467.20556641]
[242.02342224 478.19418335]
[252.23368835 489.18283081]
[266.80181885 484.76339722]
[281.78305054 487.09786987]
[294.21420288 495.67031860]
[301.66003418 508.73632812]
[302.69024658 523.67779541]
[297.15393066 537.52752686]
[307.36422729 548.51617432]
[317.57449341 559.50482178]
[327.78475952 570.49346924]
[347.30056763 575.54876709]
[350.78863525 594.56903076]
[361.31707764 605.25323486]
[376.89135742 605.53625488]
[387.41650391 616.52148438]
[387.05072021 631.36743164]
[397.57916260 642.05157471]
[408.10763550 652.73577881]
[418.63610840 663.41992188]
[433.88751221 661.25189209]
[447.33395386 668.39660645]
[453.91711426 681.92901611]
[451.30084229 696.56774902]
[461.82931519 707.25195312]
[472.35778809 717.93609619]
[488.30181885 721.77270508]
[492.69116211 737.57348633]
[481.01040649 749.08404541]
[465.27572632 744.46319580]
[461.67361450 728.46453857]
[451.14514160 717.78039551]
[440.61669922 707.09625244]
[425.94110107 709.49731445]
[412.50680542 702.71618652]
[405.56027222 689.16632080]
[407.95193481 673.94836426]
[397.42346191 663.26422119]
[386.89498901 652.58001709]
[376.36654663 641.89587402]
[361.51684570 642.04370117]
[350.68728638 631.35839844]
[350.63290405 615.78167725]
[340.10446167 605.09747314]
[329.92395020 605.94201660]
[320.76617432 600.93951416]
[315.76950073 591.52929688]
[316.79611206 580.70373535]
[306.58584595 569.71508789]
[296.37557983 558.72644043]
[286.16531372 547.73779297]
[271.94686890 552.24353027]
[257.12115479 550.12030029]
[244.63638306 541.73632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[9 155]
[10 154]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[20 52]
[21 51]
[22 50]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[32 39]
[33 38]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[100 109]
[101 108]
[102 107]
[116 131]
[117 130]
[118 129]
[119 128]
[167 210]
[168 209]
[169 208]
[170 207]
[172 203]
[173 202]
[176 199]
[177 198]
[178 197]
[179 196]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
