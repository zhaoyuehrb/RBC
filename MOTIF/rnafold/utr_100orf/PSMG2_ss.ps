%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACUCAAAGGACCCUCCCGCGCCCCGCGAGGCUCCGGGGUCUCGGGCUUCCGCCUUCUUGCUGCCCUCGUUCUUGCCAGGGCCGCGGUUAGUCCCUGCUGGCCACCCCACUGCGACCAUGUUCGUUCCCUGCGGGGAGUCGGCCCCCGACCUUGCCGGCUUCACCCUCCUAAUGCCAGCAGUAUCUGUUGGAAAUGUUGGCCAGCUUGCAAUGGAUC\
) } def
/len { sequence length } bind def

/coor [
[222.64210510 89.14145660]
[207.80888367 91.37207031]
[192.97567749 93.60268402]
[178.14245605 95.83329773]
[163.30923462 98.06391144]
[148.47601318 100.29452515]
[133.64280701 102.52513885]
[129.74678040 115.91675568]
[120.76721191 126.58828735]
[108.23864746 132.71603394]
[94.30213928 133.25279236]
[81.33936310 128.10685730]
[70.47221375 138.44633484]
[59.60506439 148.78582764]
[48.73791122 159.12532043]
[37.87075806 169.46479797]
[27.00360680 179.80429077]
[16.13645554 190.14378357]
[5.56761551 200.78800964]
[-4.69437218 211.72837830]
[-14.87834072 222.74140930]
[-24.98377419 233.82653809]
[-35.08921051 244.91166687]
[-45.19464493 255.99681091]
[-51.39709854 271.77545166]
[-68.27613068 270.18334961]
[-71.41883087 253.52323914]
[-56.27977753 245.89137268]
[-46.17434311 234.80622864]
[-36.06890869 223.72109985]
[-25.96347427 212.63597107]
[-23.78180504 205.58045959]
[-15.63473797 201.46638489]
[-5.37275076 190.52601624]
[-5.32350397 187.73019409]
[-4.16793680 184.78524780]
[-1.84368968 182.11119080]
[1.55908406 180.14280701]
[5.79696798 179.27662659]
[16.66411972 168.93713379]
[27.53127098 158.59765625]
[38.39842224 148.25816345]
[49.26557541 137.91867065]
[60.13272476 127.57918549]
[70.99987793 117.23970032]
[65.62662506 118.80268860]
[60.11045456 119.99981689]
[45.15627670 121.17138672]
[30.20209885 122.34295654]
[15.24792194 123.51452637]
[2.04333043 133.23928833]
[-12.87034798 126.41915131]
[-14.15120029 110.07009888]
[-0.48159507 101.01063538]
[14.07635021 108.56035614]
[29.03052711 107.38877869]
[43.98470306 106.21720886]
[58.93888092 105.04563904]
[60.78546143 97.77651215]
[64.47862244 83.23826599]
[66.32520294 75.96914673]
[53.74320984 67.80254364]
[41.16121674 59.63593674]
[28.57922173 51.46933365]
[12.79114437 50.44600677]
[6.32801247 37.02672195]
[-6.25398111 28.86011696]
[-18.83597565 20.69351196]
[-31.41796875 12.52690792]
[-43.99996185 4.36030293]
[-59.78804016 3.33697677]
[-66.25117493 -10.08230782]
[-78.83316803 -18.24891281]
[-95.22931671 -18.56248093]
[-102.91787720 -33.04757690]
[-93.98952484 -46.80317688]
[-77.62897491 -45.67869568]
[-70.66655731 -30.83090591]
[-58.08456802 -22.66430092]
[-43.19643784 -22.22510529]
[-35.83335876 -8.22169113]
[-23.25136375 -0.05508608]
[-10.66937065 8.11151886]
[1.91262341 16.27812386]
[14.49461746 24.44472885]
[29.38274574 24.88392448]
[36.74582672 38.88733673]
[49.32781982 47.05394363]
[61.90981293 55.22054672]
[74.49180603 63.38715363]
[99.73136139 59.00672913]
[120.95629120 69.06399536]
[131.41218567 87.69191742]
[146.24540710 85.46130371]
[161.07862854 83.23069000]
[175.91183472 81.00007629]
[190.74505615 78.76946259]
[205.57827759 76.53884888]
[220.41149902 74.30823517]
[234.97561646 70.71850586]
[249.14640808 65.80027008]
[263.31716919 60.88204193]
[277.48797607 55.96381378]
[291.65875244 51.04558182]
[305.82952881 46.12735367]
[320.00030518 41.20912170]
[334.17108154 36.29089355]
[341.30551147 -18.64365387]
[346.52474976 -32.70634842]
[351.74401855 -46.76904678]
[356.86318970 -60.86848068]
[361.88201904 -75.00394440]
[353.09506226 -91.79443359]
[359.27264404 -109.37155914]
[376.04666138 -116.71608734]
[380.66165161 -130.98851013]
[385.27661133 -145.26092529]
[389.89157104 -159.53335571]
[382.47433472 -173.48899841]
[387.17749023 -188.57725525]
[401.21075439 -195.84655762]
[416.24847412 -190.98413086]
[423.36898804 -176.87478638]
[418.34783936 -161.88932800]
[404.16400146 -154.91838074]
[399.54904175 -140.64596558]
[394.93405151 -126.37353516]
[390.31909180 -112.10111237]
[397.58679199 -103.31755829]
[399.73748779 -91.99982452]
[396.12393188 -80.93482971]
[387.53298950 -72.90421295]
[376.01748657 -69.98512268]
[370.99865723 -55.84965515]
[371.72225952 -48.50008011]
[365.80670166 -41.54979324]
[360.58746338 -27.48709679]
[355.36819458 -13.42440128]
[366.23535156 -3.08491349]
[380.02108765 -8.99709034]
[393.80679321 -14.90926743]
[407.59252930 -20.82144547]
[421.37823486 -26.73362160]
[435.16397095 -32.64579773]
[448.94970703 -38.55797577]
[462.73541260 -44.47015381]
[464.47088623 -59.73068237]
[473.61703491 -72.06939697]
[487.71353149 -78.16724396]
[502.96856689 -76.38393402]
[515.27856445 -67.19917297]
[521.33215332 -53.08361053]
[519.50103760 -37.83426285]
[510.27777100 -25.55312920]
[496.14328003 -19.54377174]
[480.89974976 -21.42267799]
[468.64758301 -30.68443108]
[454.86187744 -24.77225304]
[441.07614136 -18.86007690]
[427.29043579 -12.94789886]
[413.50469971 -7.03572178]
[399.71896362 -1.12354481]
[385.93325806 4.78863239]
[372.14752197 10.70080948]
[371.50860596 18.17354584]
[386.45410156 19.45137596]
[401.39956665 20.72920799]
[416.34503174 22.00703812]
[431.29049683 23.28487015]
[445.89938354 19.88177872]
[453.65026855 32.72403336]
[443.83169556 44.06403732]
[430.01266479 38.23034286]
[415.06719971 36.95251083]
[400.12173462 35.67467880]
[385.17626953 34.39685059]
[370.23077393 33.11901855]
[369.59185791 40.59175491]
[382.17385864 48.75835800]
[394.75585938 56.92496490]
[407.33786011 65.09156799]
[419.91983032 73.25817108]
[432.50183105 81.42478180]
[445.08383179 89.59138489]
[461.66156006 93.14318085]
[462.83773804 110.05627441]
[446.91122437 115.86850739]
[436.91723633 102.17337799]
[424.33523560 94.00677490]
[411.75323486 85.84016418]
[399.17123413 77.67356110]
[386.58926392 69.50695801]
[374.00726318 61.34035492]
[361.42526245 53.17374802]
[368.79162598 66.24037933]
[365.49429321 80.87347412]
[353.23568726 89.51794434]
[338.34497070 87.71063232]
[328.51025391 76.38464355]
[328.80917358 61.38762283]
[339.08932495 50.46167374]
[324.91854858 55.37990189]
[310.74774170 60.29813385]
[296.57696533 65.21636200]
[282.40618896 70.13459015]
[268.23541260 75.05282593]
[254.06463623 79.97105408]
[239.89385986 84.88928223]
[254.56141663 88.02976227]
[266.72918701 96.80158997]
[274.34429932 109.72483063]
[276.12197876 124.61912537]
[271.76223755 138.97157288]
[262.00070190 150.36070251]
[248.48425293 156.86497498]
[233.49334717 157.38703918]
[219.55715942 151.83880615]
[209.02696228 141.15634155]
[203.67936707 127.14195251]
[204.41656494 112.16007996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[12 45]
[13 44]
[14 43]
[15 42]
[16 41]
[17 40]
[18 39]
[19 34]
[20 33]
[21 31]
[22 30]
[23 29]
[24 28]
[47 58]
[48 57]
[49 56]
[50 55]
[61 90]
[62 89]
[63 88]
[64 87]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[72 79]
[73 78]
[100 208]
[101 207]
[102 206]
[103 205]
[104 204]
[105 203]
[106 202]
[107 201]
[108 138]
[109 137]
[110 136]
[111 134]
[112 133]
[115 128]
[116 127]
[117 126]
[118 125]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
