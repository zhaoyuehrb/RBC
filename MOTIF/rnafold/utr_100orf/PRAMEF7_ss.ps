%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAGAGAUCCCAGCACCCUACAAACUGAGUCCAGAUCUGAGUUUUCCCUUGCAGAUUCAUCAAGAUGAGCAUCAGGGCCCCACCCAGACUCCUGGAGCUGGCAAGGCAGAGGCUGCUGAGGGACCAGGCCUUGGCCAUCUCCACCAUGGAGGAGCUGCCCAGGG\
) } def
/len { sequence length } bind def

/coor [
[254.49035645 332.56399536]
[255.09996033 319.65219116]
[245.70040894 307.96252441]
[236.30087280 296.27285767]
[226.10104370 297.96093750]
[216.04852295 295.21978760]
[207.99319458 288.48382568]
[203.44650269 278.92889404]
[203.29808044 268.26736450]
[207.64251709 258.44140625]
[198.91731262 246.24014282]
[190.19209290 234.03889465]
[181.35250854 221.92024231]
[172.39932251 209.88528442]
[163.44613647 197.85031128]
[154.49293518 185.81533813]
[145.53974915 173.78038025]
[131.73522949 168.18711853]
[129.70608521 152.49658203]
[120.75289154 140.46160889]
[111.79970551 128.42665100]
[97.09291077 130.64076233]
[83.06491089 125.70038605]
[72.99118042 114.75909424]
[58.47230911 118.52769470]
[43.95343781 122.29629517]
[29.43456459 126.06489563]
[14.91569233 129.83349609]
[3.50208139 140.78976440]
[-10.76088047 136.49824524]
[-25.27975273 140.26684570]
[-31.83554077 154.46386719]
[-46.00518417 161.07864380]
[-61.09821320 156.98786926]
[-69.98815918 144.12307739]
[-68.47746277 128.55862427]
[-57.27942657 117.64359283]
[-41.68142319 116.53170776]
[-29.04835129 125.74797058]
[-14.52947903 121.97937012]
[-4.15435600 111.29264832]
[11.14709282 115.31462097]
[25.66596603 111.54602051]
[40.18483734 107.77742004]
[54.70370865 104.00881958]
[69.22257996 100.24021912]
[68.38063049 91.38510895]
[70.17778778 82.13162231]
[74.75086975 73.28453064]
[64.49913025 62.33456039]
[54.24739075 51.38459015]
[43.79148483 40.62940216]
[33.13512039 30.07279778]
[22.47875214 19.51619720]
[6.90221119 19.42075539]
[-3.75447774 8.56305599]
[-3.56749654 -6.28620720]
[-14.22386360 -16.84280968]
[-24.88022995 -27.39941025]
[-40.68117905 -27.07446289]
[-52.02589798 -38.07777405]
[-52.18377304 -53.88127518]
[-41.06113434 -65.10903168]
[-25.25684738 -65.09980774]
[-14.14731598 -53.85908508]
[-14.32362843 -38.05577850]
[-3.66726136 -27.49917603]
[6.98910522 -16.94257355]
[21.83595276 -17.26921654]
[32.79340744 -6.71512508]
[33.03535461 8.85982990]
[43.69172287 19.41643143]
[54.34808731 29.97303391]
[59.08370209 30.84326744]
[63.30856705 34.72458649]
[65.19735718 41.13285065]
[75.44909668 52.08282089]
[85.70083618 63.03279114]
[100.46193695 60.36633682]
[106.23475647 46.52168274]
[112.00758362 32.67702484]
[103.96681213 21.45181084]
[102.54501343 7.82623100]
[108.00804138 -4.61866140]
[118.82636261 -12.66536331]
[132.10151672 -14.29164219]
[138.13375854 -28.02525711]
[144.16598511 -41.75887299]
[150.19821167 -55.49248886]
[150.79142761 -64.65161896]
[156.47525024 -69.42603302]
[162.76475525 -83.04374695]
[169.05426025 -96.66146088]
[170.20646667 -113.57621002]
[186.77914429 -117.15151215]
[194.80249023 -102.21623993]
[182.67198181 -90.37195587]
[176.38247681 -76.75424194]
[170.09297180 -63.13652802]
[163.93182373 -49.46025848]
[157.89959717 -35.72664261]
[151.86737061 -21.99302673]
[145.83512878 -8.25941181]
[154.56138611 5.62172222]
[153.29707336 22.13545609]
[142.34211731 34.77722931]
[125.85224152 38.44984818]
[120.07941437 52.29450226]
[114.30659485 66.13916016]
[129.59577942 81.75902557]
[132.69985962 102.17264557]
[123.83467102 119.47345734]
[132.78785706 131.50842285]
[141.74104309 143.54339600]
[156.18595886 149.99746704]
[157.57472229 164.82719421]
[166.52790833 176.86215210]
[175.48109436 188.89712524]
[184.43428040 200.93209839]
[193.38746643 212.96705627]
[201.05468750 218.01239014]
[202.39335632 225.31367493]
[211.11856079 237.51493835]
[219.84378052 249.71618652]
[239.77604675 251.90219116]
[251.54975891 267.75701904]
[247.99053955 286.87329102]
[257.39007568 298.56298828]
[266.78964233 310.25265503]
[284.09536743 316.48675537]
[286.14837646 333.89685059]
[295.76614380 345.40762329]
[305.38394165 356.91842651]
[315.00170898 368.42922974]
[324.61947632 379.94003296]
[334.23724365 391.45080566]
[349.02322388 397.07983398]
[351.24624634 411.80761719]
[360.86404419 423.31842041]
[375.64999390 428.94741821]
[377.87304688 443.67520142]
[387.49081421 455.18600464]
[397.10858154 466.69680786]
[406.72634888 478.20758057]
[422.19818115 477.02322388]
[435.39358521 485.18777466]
[441.23873901 499.56185913]
[437.48602295 514.61828613]
[425.57843018 524.56762695]
[410.09466553 525.58410645]
[396.98858643 517.27685547]
[391.29971313 502.84020996]
[395.21557617 487.82537842]
[385.59777832 476.31457520]
[375.98001099 464.80377197]
[366.36224365 453.29296875]
[352.26419067 448.48727417]
[349.35324097 432.93618774]
[339.73547363 421.42538452]
[325.63742065 416.61968994]
[322.72647095 401.06860352]
[313.10870361 389.55780029]
[303.49090576 378.04699707]
[293.87313843 366.53619385]
[284.25537109 355.02542114]
[274.63757324 343.51461792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[10 124]
[11 123]
[12 122]
[13 120]
[14 119]
[15 118]
[16 117]
[17 116]
[19 114]
[20 113]
[21 112]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[30 40]
[31 39]
[49 78]
[50 77]
[51 76]
[52 73]
[53 72]
[54 71]
[57 68]
[58 67]
[59 66]
[79 109]
[80 108]
[81 107]
[86 103]
[87 102]
[88 101]
[89 100]
[91 99]
[92 98]
[93 97]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[138 159]
[139 158]
[141 156]
[142 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
