%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUCCCGGCUGGCAGCGUCCGGAAGGACGGGAGGGCACGGGAGUGCAGCCCGCCCAUGUGGCUACUGGAGGUCACGUUCCCUAACUGAUCCCUUGGUUCUCUCGGGUGGAGCCUUCAGCGUGCACGGCGGGGUUUGACUUUGCCACCGUCUCUCUUCUGGGUUCCAAUAAAGUUUUCCUCUUCCUCUCCUCGUACGGAGUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[55.78304672 323.28445435]
[56.01068878 308.28616333]
[56.23833466 293.28790283]
[56.46597672 278.28964233]
[56.69361877 263.29135132]
[49.19448471 263.17752075]
[42.80367279 276.74798584]
[36.41286469 290.31848145]
[30.02205658 303.88894653]
[31.14235687 319.67041016]
[18.71993446 327.88824463]
[12.32912636 341.45870972]
[14.23486805 357.74676514]
[0.92207009 367.32284546]
[-13.91420174 360.33593750]
[-15.01166344 343.97354126]
[-1.24134028 335.06790161]
[5.14946842 321.49743652]
[3.57205415 306.68661499]
[16.45158958 297.49813843]
[22.84239960 283.92764282]
[29.23320770 270.35717773]
[35.62401581 256.78671265]
[55.73110962 239.74490356]
[75.37210846 241.97463989]
[76.28215027 227.00227356]
[77.19219971 212.02990723]
[78.10224915 197.05754089]
[75.66105652 192.94938660]
[75.77681732 187.26356506]
[79.27393341 181.64672852]
[80.63795471 166.70887756]
[82.00197601 151.77102661]
[83.36599731 136.83316040]
[84.73001862 121.89531708]
[80.13809204 107.61546326]
[70.32300568 96.27244568]
[60.50791550 84.92942810]
[50.69282532 73.58641052]
[40.87773895 62.24339294]
[30.89163589 51.05064011]
[20.73682022 40.01072311]
[10.58200550 28.97080803]
[0.42718989 17.93089294]
[-7.68840981 13.73165131]
[-9.79639816 6.64552450]
[-19.78250122 -4.54723072]
[-30.66343307 -4.53759718]
[-39.56909943 -10.39873409]
[-43.69038010 -19.99271011]
[-41.88763809 -30.05459785]
[-51.52945328 -41.54526520]
[-61.17126846 -53.03593063]
[-70.81307983 -64.52659607]
[-80.45489502 -76.01726532]
[-90.09671021 -87.50793457]
[-106.34806061 -84.46883392]
[-121.82614136 -90.00742340]
[-132.33918762 -102.52320099]
[-135.09089661 -118.53996277]
[-129.42369080 -133.67100525]
[-139.23876953 -145.01402283]
[-149.05386353 -156.35704041]
[-158.86895752 -167.70005798]
[-168.68403625 -179.04307556]
[-181.47090149 -180.74949646]
[-189.41235352 -190.40182495]
[-188.67121887 -202.47763062]
[-198.31303406 -213.96829224]
[-206.22909546 -218.53256226]
[-208.01237488 -225.70729065]
[-217.47869873 -237.34295654]
[-226.94502258 -248.97862244]
[-236.41133118 -260.61428833]
[-245.87765503 -272.24996948]
[-253.72354126 -276.93383789]
[-255.39773560 -284.13479614]
[-264.68637085 -295.91281128]
[-273.97500610 -307.69079590]
[-289.39996338 -313.25881958]
[-292.02365112 -329.44671631]
[-279.14706421 -339.60177612]
[-264.01651001 -333.27734375]
[-262.19702148 -316.97943115]
[-252.90838623 -305.20144653]
[-243.61973572 -293.42346191]
[-234.24198914 -281.71627808]
[-224.77566528 -270.08062744]
[-215.30934143 -258.44494629]
[-205.84303284 -246.80928040]
[-196.37670898 -235.17361450]
[-186.82237244 -223.61010742]
[-177.18055725 -212.11944580]
[-160.39128113 -207.01646423]
[-157.34101868 -188.85816956]
[-147.52593994 -177.51515198]
[-137.71084595 -166.17213440]
[-127.89575958 -154.82911682]
[-118.08066559 -143.48609924]
[-104.86580658 -146.94012451]
[-91.38737488 -144.35034180]
[-80.28707123 -136.16627502]
[-73.76544952 -123.93951416]
[-73.14579773 -110.02982330]
[-78.60604095 -97.14974213]
[-68.96422577 -85.65908051]
[-59.32241440 -74.16841125]
[-49.68059921 -62.67774582]
[-40.03878784 -51.18708038]
[-30.39697266 -39.69641113]
[-11.79267597 -34.43361282]
[-8.58974552 -14.53333282]
[1.39635670 -3.34057736]
[11.46710491 7.77607775]
[21.62191963 18.81599236]
[31.77673531 29.85590935]
[41.93154907 40.89582443]
[46.58416367 41.98647690]
[50.59989929 46.01336288]
[52.22075272 52.42830658]
[62.03584290 63.77132416]
[71.85092926 75.11434174]
[81.66602325 86.45735931]
[91.48110962 97.80037689]
[83.33081818 85.32295990]
[86.79981232 66.91467285]
[104.38857269 51.16383362]
[117.60058594 44.06153488]
[130.81260681 36.95923233]
[144.02461243 29.85692978]
[157.23663330 22.75462914]
[170.39436340 15.55227470]
[183.49707031 8.25028324]
[196.59977722 0.94829136]
[198.32200623 -14.47291374]
[208.80451965 -25.91391945]
[224.01657104 -28.97542381]
[238.10884094 -22.48021698]
[245.66253662 -8.92583752]
[243.77313232 6.47577810]
[233.16712952 17.80239487]
[217.92274475 20.69869614]
[203.90177917 14.05099773]
[190.79907227 21.35298920]
[177.69636536 28.65498161]
[173.38252258 34.65894699]
[164.33892822 35.96664429]
[151.12692261 43.06894302]
[137.91490173 50.17124557]
[124.70288849 57.27354813]
[111.49087524 64.37584686]
[114.65422058 79.03917694]
[117.81726837 93.70121002]
[132.78230286 94.72484589]
[147.74732971 95.74848175]
[162.22990417 88.05516815]
[175.98843384 96.97901917]
[174.86930847 113.33993530]
[160.02380371 120.30721283]
[146.72369385 110.71351624]
[131.75866699 109.68988037]
[116.79363251 108.66624451]
[129.43592834 116.73918152]
[142.07821655 124.81212616]
[156.99859619 126.35562897]
[169.96171570 133.90263367]
[178.67036438 146.11572266]
[181.58122253 160.83058167]
[178.17848206 175.43952942]
[169.06512451 187.35366821]
[155.85617065 194.46166992]
[140.89242554 195.50387573]
[126.82564545 190.29562378]
[116.14866638 179.75987244]
[110.75358582 165.76368713]
[111.59696198 150.78562927]
[105.63242340 137.02249146]
[99.66787720 123.25933838]
[98.30384827 138.19718933]
[96.93982697 153.13504028]
[95.57580566 168.07289124]
[94.21178436 183.01074219]
[93.07461548 197.96757507]
[92.16456604 212.93995667]
[91.25452423 227.91232300]
[90.34447479 242.88468933]
[92.94919586 257.65679932]
[98.92521667 271.41497803]
[104.90122986 285.17315674]
[110.87724304 298.93130493]
[125.66973114 304.49530029]
[132.11907959 318.92379761]
[126.39901733 333.65661621]
[111.90314484 339.95306396]
[97.23161316 334.07754517]
[91.08877563 319.51593018]
[97.11907959 304.90731812]
[91.14305878 291.14916992]
[85.16704559 277.39099121]
[79.19102478 263.63281250]
[71.69189453 263.51901245]
[71.46424866 278.51727295]
[71.23660278 293.51553345]
[71.00896454 308.51382446]
[70.78131866 323.51208496]
[70.55342865 338.51034546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[25 186]
[26 185]
[27 184]
[28 183]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 124]
[37 123]
[38 122]
[39 121]
[40 120]
[41 117]
[42 116]
[43 115]
[44 114]
[46 113]
[47 112]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[68 93]
[69 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[77 86]
[78 85]
[79 84]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[132 145]
[133 144]
[134 143]
[153 162]
[154 161]
[155 160]
[187 200]
[188 199]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
