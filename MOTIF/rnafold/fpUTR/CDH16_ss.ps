%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUGCUGCUGUGGGCCCAGUGGCCUUUUCCACUCCUGAGCAAGCGUGGCUGAACCCUCCUACCUGCUCAAGUGCCCUGCCUUGCCCCACCCAGCCCAGCCUGGCCAGAGCCCCCUGGAGAAGGAGCUCUCUUCUUGCUUGGCAGCUGGACCAAGGGAGCCAGUCUUGGGCGCUGGAGGGCCUGUCCUGACC\
) } def
/len { sequence length } bind def

/coor [
[54.27078629 345.95770264]
[45.46846771 333.81182861]
[40.48985291 347.96151733]
[35.51123428 362.11120605]
[30.53261566 376.26086426]
[25.55399704 390.41055298]
[20.57538033 404.56021118]
[15.59676170 418.70989990]
[19.14791489 434.71994019]
[6.87721539 445.59936523]
[-8.59229469 440.15637207]
[-11.34690762 423.99023438]
[1.44708478 413.73129272]
[6.42570257 399.58160400]
[11.40432072 385.43191528]
[16.38293839 371.28225708]
[21.36155510 357.13256836]
[26.34017372 342.98291016]
[31.31879234 328.83322144]
[35.72362137 314.49453735]
[39.54751968 299.99014282]
[43.37141800 285.48574829]
[42.03482056 278.20672607]
[47.37551498 270.77944946]
[51.43258286 256.33850098]
[55.48965073 241.89759827]
[46.62563705 233.58082581]
[42.11700439 222.21540833]
[42.87815475 209.93971252]
[48.82571411 199.09164429]
[58.88271332 191.76341248]
[71.17312622 189.39805603]
[75.69331360 175.09532166]
[74.70995331 167.76023865]
[80.40324402 160.59965515]
[85.15326691 146.37159729]
[89.90328979 132.14355469]
[94.65330505 117.91551208]
[87.25819397 104.86513519]
[72.61157227 101.62837219]
[57.96495819 98.39160919]
[43.31834412 95.15484619]
[28.67172623 91.91808319]
[19.60325241 93.12239075]
[13.81612110 88.50939941]
[-0.77645022 85.03710175]
[-9.86314869 86.09515381]
[-15.57521343 81.38953400]
[-30.10995293 77.68259430]
[-44.64469147 73.97565460]
[-59.17942810 70.26872253]
[-65.65816498 71.69105530]
[-71.06578827 69.88945770]
[-74.11888885 66.20114136]
[-88.52665710 62.02788162]
[-104.31111908 66.47567749]
[-115.86479950 54.83761978]
[-111.30227661 39.08594513]
[-95.31707001 35.42462158]
[-84.35339355 47.62010956]
[-69.94562531 51.79337311]
[-55.47249222 55.73398209]
[-40.93775558 59.44091797]
[-26.40301514 63.14785767]
[-11.86827755 66.85478973]
[2.69585013 70.44452667]
[17.28842163 73.91682434]
[31.90848923 77.27146912]
[46.55510712 80.50823212]
[61.20172119 83.74499512]
[75.84833527 86.98175812]
[90.49495697 90.21852112]
[105.05908203 86.62878418]
[116.52381897 76.95615387]
[127.98855591 67.28351593]
[139.45329285 57.61088562]
[150.91802979 47.93825150]
[162.38276672 38.26561737]
[173.84748840 28.59298515]
[172.39073181 11.74784946]
[181.17010498 -2.50744510]
[196.56027222 -8.66368866]
[212.42781067 -4.48060131]
[223.73522949 -14.33667660]
[229.05422974 -29.23697281]
[243.73237610 -31.76710892]
[255.03979492 -41.62318420]
[266.26745605 -51.57002258]
[277.41461182 -61.60698318]
[288.56179810 -71.64394379]
[288.53372192 -91.72333527]
[303.04327393 -105.15872192]
[322.45361328 -103.63681030]
[333.10284424 -114.20060730]
[343.75210571 -124.76439667]
[354.40133667 -135.32820129]
[365.05056763 -145.89199829]
[364.46612549 -156.77009583]
[369.86053467 -165.98071289]
[379.23989868 -170.59802246]
[389.39321899 -169.31088257]
[400.37725830 -179.52612305]
[411.36126709 -189.74136353]
[416.19747925 -204.80528259]
[430.78649902 -207.80697632]
[441.77050781 -218.02221680]
[452.75454712 -228.23744202]
[457.64804077 -250.90779114]
[479.66799927 -255.28567505]
[489.79443359 -266.35162354]
[499.92086792 -277.41760254]
[510.04730225 -288.48355103]
[520.17370605 -299.54953003]
[520.38513184 -312.45468140]
[529.05841064 -321.46417236]
[541.14550781 -322.12130737]
[551.44885254 -333.02267456]
[561.75225830 -343.92407227]
[562.73913574 -359.93673706]
[575.95587158 -369.03057861]
[591.26367188 -364.22958374]
[596.91979980 -349.21664429]
[588.58526611 -335.50842285]
[572.65362549 -333.62066650]
[562.35028076 -322.71929932]
[552.04687500 -311.81790161]
[548.91760254 -294.55593872]
[531.23968506 -289.42309570]
[521.11328125 -278.35711670]
[510.98681641 -267.29116821]
[500.86041260 -256.22521973]
[490.73397827 -245.15925598]
[492.82281494 -238.33412170]
[492.40493774 -231.14045715]
[489.48522949 -224.47822571]
[484.38439941 -219.19732666]
[477.70455933 -215.98925781]
[470.25830078 -215.29678345]
[462.96978760 -217.25341797]
[451.98574829 -207.03817749]
[441.00173950 -196.82293701]
[436.95117188 -182.48968506]
[421.57650757 -178.75732422]
[410.59246826 -168.54209900]
[399.60845947 -158.32685852]
[395.31314087 -139.48171997]
[375.61434937 -135.24275208]
[364.96511841 -124.67896271]
[354.31588745 -114.11516571]
[343.66665649 -103.55136871]
[333.01742554 -92.98757172]
[335.74703979 -83.06835938]
[334.09320068 -72.83233643]
[328.28890991 -64.14300537]
[319.32891846 -58.61051178]
[308.79971313 -57.29341125]
[298.59875488 -60.49676895]
[287.45156860 -50.45981216]
[276.30441284 -40.42285156]
[273.43344116 -33.60169983]
[264.89587402 -30.31576347]
[253.58843994 -20.45968819]
[249.07823181 -6.26436329]
[233.59130859 -3.02925515]
[222.28388977 6.82681990]
[224.69403076 19.96570396]
[220.25846863 32.68064117]
[210.03581238 41.61201477]
[196.62837219 44.34410477]
[183.52012634 40.05772018]
[172.05538940 49.73035431]
[160.59065247 59.40298843]
[149.12591553 69.07562256]
[137.66117859 78.74825287]
[126.19644928 88.42089081]
[114.73171234 98.09352112]
[108.88135529 122.66552734]
[104.13133240 136.89356995]
[99.38130951 151.12162781]
[94.63129425 165.34967041]
[89.99604034 179.61552429]
[85.47585297 193.91824341]
[96.67937469 208.16040039]
[97.09761810 226.11909485]
[86.75177765 240.61164856]
[69.93057251 245.95466614]
[65.87350464 260.39556885]
[61.81643295 274.83651733]
[57.87582397 289.30963135]
[54.05192566 303.81405640]
[50.22802734 318.31845093]
[64.33102417 313.20910645]
[77.20444489 320.90814209]
[79.37537384 335.75021362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[20 191]
[21 190]
[22 189]
[24 188]
[25 187]
[26 186]
[32 182]
[33 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[45 67]
[46 66]
[48 65]
[49 64]
[50 63]
[51 62]
[54 61]
[55 60]
[73 176]
[74 175]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[83 165]
[84 164]
[86 162]
[87 161]
[88 159]
[89 158]
[90 157]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[101 145]
[102 144]
[103 143]
[105 141]
[106 140]
[107 139]
[109 132]
[110 131]
[111 130]
[112 129]
[113 128]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
