%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUGUCUAGCGGGAUCGCUUGCUUGGUAACCCGGAGGGAGAGAUUGGAAACCGCGGAGUUUCCUUUGGGAGGCUGCGGCCAGCCGGGGCUGACUUGUUAUGUUGGGCUCCGGAGGCCGUUAAGAGCCGAGAGAGACAUGAGGUGUCUCUGAAGCCCGGUCGCCUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[173.91828918 215.64617920]
[182.77972412 212.06741333]
[173.23095703 200.49929810]
[163.68220520 188.93118286]
[154.13343811 177.36308289]
[139.32820129 176.20527649]
[129.47961426 164.60960388]
[130.79440308 149.08834839]
[121.24563599 137.52024841]
[111.69687653 125.95213318]
[92.09291077 127.34607697]
[76.25800323 115.70502472]
[62.00908661 120.39205933]
[47.76016998 125.07909393]
[33.51124954 129.76612854]
[19.48972511 135.09500122]
[5.72448730 141.05471802]
[-8.04075050 147.01443481]
[-21.80598831 152.97415161]
[-31.39602280 165.55754089]
[-46.14975739 163.51388550]
[-59.91499710 169.47361755]
[-73.68023682 175.43333435]
[-83.27027130 188.01672363]
[-98.02400208 185.97306824]
[-111.78924561 191.93278503]
[-125.55448151 197.89250183]
[-139.26502991 203.97695923]
[-152.91978455 210.18565369]
[-162.00883484 223.83560181]
[-178.35507202 222.51934814]
[-185.14289856 207.59092712]
[-175.38955688 194.40742493]
[-159.12847900 196.53089905]
[-145.47372437 190.32221985]
[-140.66908264 184.67098999]
[-131.51419067 184.12727356]
[-117.74896240 178.16755676]
[-103.98372650 172.20782471]
[-95.37827301 160.05072021]
[-79.63995361 161.66809082]
[-65.87471771 155.70837402]
[-52.10947800 149.74865723]
[-43.50402451 137.59153748]
[-27.76570511 139.20892334]
[-14.00046825 133.24919128]
[-0.23523107 127.28948212]
[13.53000641 121.32976532]
[0.86499673 113.29250336]
[-0.93271297 98.40061951]
[9.45586967 87.58039093]
[24.40856743 88.77069855]
[32.95447922 101.09819794]
[28.82421303 115.51721191]
[43.07313156 110.83017731]
[57.32205200 106.14314270]
[71.57096863 101.45610046]
[70.41086578 92.21688080]
[72.37136078 82.46191406]
[77.63139343 73.27038574]
[68.50897980 61.36317825]
[59.38656998 49.45597076]
[50.26415253 37.54876709]
[41.14173889 25.64156151]
[32.01932526 13.73435497]
[22.89690971 1.82714868]
[7.55163050 -3.95683146]
[5.15541363 -20.17996788]
[18.17328262 -30.15328979]
[33.21356964 -23.61709785]
[34.80411530 -7.29526567]
[43.92652893 4.61194038]
[53.04894638 16.51914597]
[62.17136002 28.42635155]
[71.29377747 40.33355713]
[80.41619110 52.24076462]
[89.53860474 64.14797211]
[104.48854828 62.92356873]
[111.55198669 49.69073868]
[118.61543274 36.45790863]
[125.67887878 23.22507858]
[132.74232483 9.99224949]
[139.80575562 -3.24057961]
[136.80743408 -15.80942249]
[142.99130249 -26.69591522]
[154.55680847 -30.31636620]
[161.85937500 -43.41875076]
[169.16194153 -56.52113724]
[176.46450806 -69.62352753]
[183.76707458 -82.72590637]
[191.06964111 -95.82829285]
[198.37220764 -108.93067932]
[205.67477417 -122.03306580]
[204.95425415 -140.41659546]
[220.32458496 -148.85379028]
[227.38801575 -162.08662415]
[221.38601685 -176.52650452]
[226.11927795 -191.43052673]
[239.35292053 -199.76148987]
[254.83839417 -197.58576965]
[265.26394653 -185.93064880]
[265.70697021 -170.29934692]
[255.95825195 -158.07246399]
[240.62084961 -155.02317810]
[233.55740356 -141.79035950]
[236.77412415 -130.10612488]
[230.96821594 -119.01345062]
[218.77716064 -114.73049927]
[211.47459412 -101.62811279]
[204.17202759 -88.52572632]
[196.86946106 -75.42334747]
[189.56689453 -62.32095718]
[182.26432800 -49.21857071]
[174.96176147 -36.11618423]
[167.65919495 -23.01379967]
[168.88563538 -5.52297258]
[153.03858948 3.82286310]
[145.97514343 17.05569267]
[138.91171265 30.28852272]
[131.84826660 43.52135086]
[124.78482056 56.75418091]
[117.72137451 69.98700714]
[128.92181396 84.68807983]
[130.53378296 101.94470978]
[123.26498413 116.40337372]
[132.81375122 127.97148132]
[142.36250305 139.53959656]
[157.85163879 141.19023132]
[167.37065125 153.05796814]
[165.70155334 167.81431580]
[175.25030518 179.38243103]
[184.79907227 190.95053101]
[194.34783936 202.51864624]
[206.00216675 211.96197510]
[219.29858398 218.90498352]
[232.59500122 225.84797668]
[245.89141846 232.79098511]
[259.18783569 239.73399353]
[272.48425293 246.67698669]
[285.78067017 253.61999512]
[299.07708740 260.56298828]
[315.91598511 262.53475952]
[318.68273926 279.26141357]
[303.37567139 286.55047607]
[292.13409424 273.85940552]
[278.83767700 266.91641235]
[265.54125977 259.97341919]
[252.24482727 253.03041077]
[238.94841003 246.08740234]
[225.65199280 239.14439392]
[212.35557556 232.20140076]
[199.05915833 225.25839233]
[193.40728760 230.18853760]
[196.29498291 244.90795898]
[182.10353088 240.04882812]
[176.45166016 244.97897339]
[181.52503967 259.09494019]
[186.59841919 273.21093750]
[191.67179871 287.32690430]
[196.74517822 301.44287109]
[201.81855774 315.55886841]
[214.68104553 325.73178101]
[212.03489685 341.91601562]
[196.60223389 347.46264648]
[184.25885010 336.66571045]
[187.70257568 320.63223267]
[182.62919617 306.51626587]
[177.55581665 292.40026855]
[172.48243713 278.28430176]
[167.40907288 264.16833496]
[162.33569336 250.05235291]
[162.04406738 235.60171509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 133]
[3 132]
[4 131]
[5 130]
[8 127]
[9 126]
[10 125]
[12 57]
[13 56]
[14 55]
[15 54]
[16 48]
[17 47]
[18 46]
[19 45]
[21 43]
[22 42]
[23 41]
[25 39]
[26 38]
[27 37]
[28 35]
[29 34]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[95 105]
[96 104]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
