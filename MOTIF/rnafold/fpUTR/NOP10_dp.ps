%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOP10)
} def

/sequence { (\
AGGAAAUUGACGAACACGUGACGCGGUCGGGCGGACCACUGCAGACUGAGCGGUGGACCGAAUUGGGACCGCUGGCUUAUAAGCGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.048674253 ubox
1 73 0.007914117 ubox
1 77 0.011602435 ubox
1 78 0.028381746 ubox
2 7 0.051564422 ubox
2 8 0.018485756 ubox
2 72 0.004257683 ubox
2 73 0.006585323 ubox
2 76 0.013306877 ubox
2 77 0.033214732 ubox
2 78 0.003989579 ubox
2 88 0.046118435 ubox
3 7 0.015290176 ubox
3 72 0.003415449 ubox
3 76 0.033649453 ubox
3 77 0.003626924 ubox
3 78 0.007085163 ubox
3 87 0.031141242 ubox
3 88 0.085639521 ubox
4 77 0.006907496 ubox
4 78 0.005688206 ubox
4 87 0.081038942 ubox
5 64 0.003422570 ubox
5 77 0.005500275 ubox
5 78 0.004550722 ubox
6 19 0.026629131 ubox
6 63 0.003614646 ubox
6 77 0.004301958 ubox
6 80 0.004259765 ubox
6 87 0.147162571 ubox
7 13 0.014780077 ubox
7 14 0.035943112 ubox
7 18 0.025514405 ubox
7 21 0.174898069 ubox
7 30 0.006137332 ubox
7 62 0.003617612 ubox
7 75 0.003951596 ubox
7 79 0.004024508 ubox
7 82 0.007706595 ubox
7 83 0.004107296 ubox
7 86 0.157865606 ubox
8 12 0.014404013 ubox
8 13 0.042421672 ubox
8 16 0.070690141 ubox
8 18 0.027193770 ubox
8 20 0.181844105 ubox
8 23 0.007975529 ubox
8 29 0.008547891 ubox
8 61 0.003446296 ubox
8 74 0.010387259 ubox
8 79 0.006616161 ubox
8 81 0.008494933 ubox
8 82 0.004970385 ubox
8 85 0.157049630 ubox
9 15 0.078998295 ubox
9 17 0.038785873 ubox
9 19 0.081644500 ubox
9 22 0.117241052 ubox
9 24 0.004296984 ubox
9 28 0.009643646 ubox
9 73 0.010120178 ubox
9 78 0.007092616 ubox
9 80 0.007478900 ubox
9 84 0.125334687 ubox
9 88 0.074362662 ubox
10 19 0.850559554 ubox
10 27 0.009631912 ubox
10 77 0.005595988 ubox
10 87 0.069496965 ubox
11 18 0.876931443 ubox
11 20 0.078198098 ubox
11 23 0.006830973 ubox
11 26 0.009517455 ubox
11 29 0.022145537 ubox
11 74 0.018390343 ubox
11 85 0.105097909 ubox
12 17 0.855120026 ubox
12 19 0.062212228 ubox
12 22 0.019321000 ubox
12 28 0.022331435 ubox
12 73 0.017771181 ubox
12 78 0.007296326 ubox
12 84 0.104056126 ubox
12 88 0.031895516 ubox
13 27 0.016654357 ubox
13 77 0.007414704 ubox
13 78 0.021098901 ubox
13 87 0.030933612 ubox
14 27 0.015095919 ubox
14 77 0.021240834 ubox
15 26 0.021138076 ubox
15 74 0.048150087 ubox
16 73 0.047796507 ubox
17 23 0.007726414 ubox
17 25 0.023916073 ubox
17 74 0.057979347 ubox
17 85 0.069897683 ubox
18 22 0.019001041 ubox
18 24 0.024144469 ubox
18 46 0.004519342 ubox
18 73 0.056485916 ubox
18 76 0.128880505 ubox
18 80 0.041226413 ubox
18 84 0.069021351 ubox
18 87 0.012102490 ubox
19 23 0.022588958 ubox
19 45 0.004475529 ubox
19 74 0.025109796 ubox
19 75 0.127921803 ubox
19 79 0.043072147 ubox
19 83 0.068439862 ubox
19 85 0.004327968 ubox
19 86 0.012581374 ubox
20 28 0.004632046 ubox
20 73 0.028802589 ubox
20 78 0.044781135 ubox
20 84 0.005137894 ubox
20 88 0.051711001 ubox
21 27 0.004638679 ubox
21 77 0.042027533 ubox
21 87 0.050163914 ubox
22 26 0.004595644 ubox
22 33 0.005511256 ubox
22 74 0.359773643 ubox
22 85 0.060221848 ubox
23 32 0.005791445 ubox
23 42 0.017273054 ubox
23 72 0.993542894 ubox
23 73 0.075805068 ubox
23 76 0.003730357 ubox
23 84 0.042567148 ubox
24 31 0.005809269 ubox
24 41 0.017294569 ubox
24 48 0.018516372 ubox
24 71 0.997644302 ubox
24 75 0.003396619 ubox
24 83 0.042455554 ubox
25 37 0.008416769 ubox
25 40 0.017186252 ubox
25 47 0.024534084 ubox
25 70 0.997987451 ubox
25 77 0.044199905 ubox
26 36 0.008435536 ubox
26 39 0.017197813 ubox
26 46 0.027402589 ubox
26 69 0.998039051 ubox
26 76 0.045001444 ubox
27 35 0.008445615 ubox
27 38 0.017094905 ubox
27 45 0.027415573 ubox
27 66 0.038849027 ubox
27 67 0.093174384 ubox
27 68 0.992384583 ubox
27 75 0.044984779 ubox
28 34 0.008459732 ubox
28 44 0.027405125 ubox
28 65 0.082861859 ubox
28 66 0.177367691 ubox
28 67 0.978051965 ubox
28 74 0.044538340 ubox
29 37 0.017123253 ubox
29 64 0.171086562 ubox
29 73 0.036174024 ubox
30 36 0.017126845 ubox
30 63 0.208941785 ubox
30 64 0.244272029 ubox
30 72 0.025679672 ubox
30 73 0.027450013 ubox
31 42 0.027643959 ubox
31 63 0.195991984 ubox
31 72 0.037886255 ubox
32 41 0.027672175 ubox
32 60 0.995501114 ubox
32 65 0.005810414 ubox
32 71 0.045671720 ubox
33 40 0.027549334 ubox
33 59 0.998240114 ubox
33 70 0.045710244 ubox
34 39 0.027334872 ubox
34 58 0.997040900 ubox
34 69 0.045505529 ubox
36 56 0.998183209 ubox
37 55 0.999410754 ubox
38 54 0.999218606 ubox
39 53 0.999403478 ubox
40 52 0.998664351 ubox
40 85 0.005040723 ubox
41 51 0.999375595 ubox
41 84 0.006258245 ubox
42 48 0.014793629 ubox
42 50 0.998756052 ubox
42 83 0.006255090 ubox
43 47 0.025162893 ubox
47 79 0.020498868 ubox
48 78 0.026900838 ubox
49 73 0.008995479 ubox
49 77 0.028748219 ubox
50 72 0.009245222 ubox
50 76 0.028963944 ubox
51 71 0.009246453 ubox
51 74 0.024068869 ubox
51 75 0.021664424 ubox
52 70 0.009245896 ubox
52 73 0.030856486 ubox
53 69 0.009245365 ubox
53 72 0.032536710 ubox
54 68 0.008997817 ubox
54 71 0.032526894 ubox
55 70 0.032543760 ubox
56 69 0.032505687 ubox
58 66 0.031913745 ubox
58 67 0.048386116 ubox
59 65 0.031978059 ubox
59 66 0.048548098 ubox
60 64 0.019750890 ubox
67 88 0.015157386 ubox
68 87 0.015138374 ubox
70 85 0.026605615 ubox
71 84 0.035932474 ubox
72 83 0.036604345 ubox
73 79 0.007487246 ubox
73 81 0.019854393 ubox
73 82 0.039524342 ubox
73 85 0.079039814 ubox
74 78 0.006826355 ubox
74 80 0.020939418 ubox
74 84 0.074434807 ubox
74 88 0.019328310 ubox
75 84 0.948527049 ubox
75 87 0.006933606 ubox
76 83 0.951625332 ubox
77 82 0.880273493 ubox
77 83 0.008007408 ubox
77 86 0.015208414 ubox
78 82 0.027842854 ubox
78 85 0.015653472 ubox
79 87 0.008758671 ubox
80 86 0.009350599 ubox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
75 84 0.9500000 lbox
76 83 0.9500000 lbox
77 82 0.9500000 lbox
showpage
end
%%EOF
