%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGGUACUUUGUCUUGAGGAGAUGUCCUGGACUCACACGGAAACUUAGGGCUACGGAAUGAAGUUCUCACUCCCAUUAGGUGACAGGUUUUUAGAGAAGCCAAUCAGCGUCGCCGCGGUCCUGGUUCUAAAGUCCUCGCUCACCCACCCGGACUCAUUCUCCCCAGACGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[40.93720627 501.30038452]
[28.56592178 491.93389893]
[24.09505081 477.07485962]
[29.24373245 462.43685913]
[42.03219604 453.64852905]
[42.29544449 438.65084839]
[42.55869293 423.65313721]
[42.82194138 408.65545654]
[30.28931236 416.89761353]
[15.97648335 412.40954590]
[10.39405155 398.48703003]
[17.64146423 385.35403442]
[32.39659882 382.65478516]
[43.82355881 392.37036133]
[45.40021515 377.45343018]
[46.97686768 362.53652954]
[44.54603577 355.53384399]
[48.71432877 347.37249756]
[50.55253220 332.48553467]
[44.43323517 318.90600586]
[53.80338287 306.15805054]
[55.64158249 291.27108765]
[57.47978592 276.38415527]
[59.31798553 261.49722290]
[61.15618896 246.61027527]
[51.44274139 228.41755676]
[64.51783752 211.46324158]
[65.57001495 196.50018311]
[66.62220001 181.53713989]
[67.67438507 166.57408142]
[60.84890366 153.33541870]
[69.53516388 140.11198425]
[70.58734894 125.14893341]
[62.49030304 137.77580261]
[59.39967346 152.45394897]
[51.63947678 165.29058838]
[40.07872009 174.84825134]
[26.01200104 180.05664062]
[11.01453781 180.33253479]
[-3.23422027 175.64500427]
[-15.13866711 166.51898193]
[-23.36571884 153.97644043]
[-26.99409294 139.42189026]
[-25.61747360 124.48519135]
[-19.39002037 110.83898926]
[-9.00909710 100.01141357]
[4.36282063 93.21495819]
[19.22831726 91.21070099]
[33.92272186 94.22309113]
[46.79918671 101.91364288]
[61.56823730 104.53569031]
[49.86425400 95.15396881]
[38.16026688 85.77224731]
[23.87132263 91.22874451]
[8.86874771 88.81637573]
[-2.83423257 79.28187561]
[-8.15787411 65.26350403]
[-5.76605034 50.56164169]
[-17.47003746 41.17992020]
[-29.17402267 31.79819870]
[-40.87800980 22.41647720]
[-52.58199692 13.03475666]
[-68.72240448 7.84595299]
[-68.20449066 -9.10008144]
[-51.77733612 -13.29353714]
[-43.20027542 1.33076978]
[-31.49628830 10.71249104]
[-19.79230309 20.09421349]
[-8.08831596 29.47593307]
[3.61567116 38.85765457]
[17.44462013 33.32360458]
[32.28557587 35.46883392]
[44.13845825 44.81632614]
[49.75800705 58.93430710]
[47.54198837 74.06826019]
[59.24597549 83.44998169]
[70.94995880 92.83170319]
[76.63576508 83.35803986]
[85.07510376 76.96308899]
[94.84684753 74.29859161]
[104.44998169 75.42284393]
[112.53253937 79.83686066]
[124.07007599 70.25118256]
[135.60760498 60.66550064]
[147.14514160 51.07982254]
[158.68267822 41.49414062]
[164.77537537 22.29845238]
[183.93180847 19.79514313]
[195.12583923 9.81046581]
[206.31985474 -0.17421243]
[211.46818542 -15.13433361]
[226.11645508 -17.83207893]
[237.31047058 -27.81675720]
[248.50450134 -37.80143356]
[259.69851685 -47.78611374]
[270.89254761 -57.77079010]
[282.08657837 -67.75547028]
[293.28060913 -77.74015045]
[294.93051147 -82.75366974]
[298.03952026 -86.26537323]
[301.78329468 -87.96985626]
[305.33651733 -87.93666840]
[317.04052734 -97.31838989]
[328.74450684 -106.70011139]
[340.44848633 -116.08183289]
[351.98602295 -125.66751099]
[363.35354614 -135.45419312]
[374.72109985 -145.24089050]
[379.20001221 -153.23599243]
[386.37506104 -155.09744263]
[397.91259766 -164.68312073]
[409.45013428 -174.26879883]
[414.62341309 -189.83059692]
[430.73922729 -192.86582947]
[441.21902466 -180.25210571]
[435.28207397 -164.96536255]
[419.03582764 -162.73126221]
[407.49829102 -153.14558411]
[395.96075439 -143.55990601]
[384.50778198 -133.87335205]
[373.14025879 -124.08666229]
[361.77270508 -114.29998016]
[360.52999878 -109.66122437]
[356.34259033 -105.76499939]
[349.83020020 -104.37784576]
[338.12622070 -94.99612427]
[326.42224121 -85.61440277]
[314.71826172 -76.23268127]
[303.26528931 -66.54611969]
[292.07125854 -56.56144333]
[280.87722778 -46.57676697]
[269.68319702 -36.59208679]
[258.48916626 -26.60741043]
[247.29515076 -16.62273216]
[236.10113525 -6.63805342]
[231.75346375 7.60789633]
[216.30453491 11.01981258]
[205.11050415 21.00449181]
[193.91648865 30.98917007]
[194.25016785 41.23751831]
[188.75936890 50.15658188]
[179.05990601 54.65931702]
[168.26835632 53.03167725]
[156.73083496 62.61735916]
[145.19329834 72.20304108]
[133.65576172 81.78871918]
[122.11821747 91.37439728]
[123.30252838 111.07597351]
[108.54050446 126.51984406]
[85.55039978 126.20111084]
[84.49821472 141.16416931]
[91.24843597 155.47308350]
[82.63743591 167.62626648]
[81.58525085 182.58932495]
[80.53307343 197.55236816]
[79.48088837 212.51542664]
[86.59488678 218.78251648]
[89.96125031 227.49790955]
[88.93781281 236.64590454]
[83.88231659 244.17292786]
[76.04312897 248.44848633]
[74.20492554 263.33541870]
[72.36672974 278.22235107]
[70.52852631 293.10931396]
[68.69032288 307.99624634]
[74.67813873 322.64059448]
[65.43946838 334.32373047]
[63.60126877 349.21069336]
[61.89377594 364.11318970]
[60.31712341 379.03009033]
[58.74046707 393.94699097]
[57.81962967 408.91870117]
[57.55638123 423.91641235]
[57.29313278 438.91409302]
[57.02988434 453.91177368]
[69.50205231 463.14349365]
[74.13385010 477.95315552]
[69.14426422 492.64614868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 175]
[6 174]
[7 173]
[8 172]
[14 171]
[15 170]
[16 169]
[18 168]
[19 167]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[27 156]
[28 155]
[29 154]
[30 153]
[32 151]
[33 150]
[51 77]
[52 76]
[53 75]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[88 139]
[89 138]
[90 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 122]
[107 121]
[108 120]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
