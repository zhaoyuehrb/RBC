%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INTU)
} def

/sequence { (\
ACAUGGCCUCUGCCCCUUCCCAAGCAGAGGCAACAUGGCGGCCUUAGCAAGCUAUAGCUGCGAGAUUUGAAUUACUCCACUCGUAGCUAUUGCAUUCCUGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 37 0.988591142 ubox
2 92 0.006566410 ubox
2 100 0.021592467 ubox
3 36 0.990472137 ubox
3 91 0.005854421 ubox
3 95 0.014838355 ubox
3 99 0.020292113 ubox
4 32 0.019987116 ubox
4 35 0.989111721 ubox
4 94 0.016096437 ubox
4 103 0.009011201 ubox
5 31 0.015943921 ubox
5 34 0.978050106 ubox
5 39 0.003187912 ubox
5 43 0.022215378 ubox
5 93 0.016235117 ubox
5 97 0.013528585 ubox
5 98 0.011398121 ubox
5 102 0.014508605 ubox
6 31 0.995257666 ubox
6 42 0.022220720 ubox
6 97 0.003727022 ubox
7 30 0.999720087 ubox
7 41 0.022177134 ubox
8 29 0.999754756 ubox
8 40 0.021362402 ubox
9 28 0.999660494 ubox
9 38 0.010802544 ubox
10 27 0.999799112 ubox
10 37 0.010949261 ubox
10 38 0.012706859 ubox
11 26 0.999569443 ubox
11 32 0.014019011 ubox
11 37 0.009139027 ubox
12 25 0.999788441 ubox
12 31 0.016643229 ubox
12 39 0.008497022 ubox
13 24 0.996988829 ubox
13 30 0.016635119 ubox
13 38 0.008500653 ubox
14 29 0.016600380 ubox
14 37 0.008490256 ubox
15 30 0.008278259 ubox
16 24 0.047152024 ubox
16 27 0.016241281 ubox
16 29 0.008300411 ubox
17 23 0.100415381 ubox
17 24 0.004953897 ubox
17 26 0.016025091 ubox
17 28 0.008252358 ubox
18 22 0.085623506 ubox
18 23 0.038910204 ubox
18 27 0.008083524 ubox
18 28 0.003197774 ubox
19 27 0.003405960 ubox
30 39 0.011217238 ubox
31 38 0.011205257 ubox
34 100 0.014855059 ubox
35 55 0.023461459 ubox
35 99 0.014389135 ubox
36 49 0.010586334 ubox
36 54 0.031500036 ubox
36 103 0.010765052 ubox
37 43 0.047882313 ubox
37 44 0.005360074 ubox
37 48 0.009610745 ubox
37 53 0.042155869 ubox
37 97 0.006630113 ubox
37 98 0.015861759 ubox
37 99 0.004178592 ubox
37 102 0.018580344 ubox
38 42 0.051585152 ubox
38 43 0.031974173 ubox
38 44 0.005463553 ubox
38 48 0.526647320 ubox
38 52 0.075419112 ubox
38 93 0.034509591 ubox
38 96 0.003561702 ubox
38 97 0.015762274 ubox
38 98 0.010051444 ubox
39 47 0.527275703 ubox
39 51 0.075611295 ubox
39 92 0.034541332 ubox
39 100 0.121957406 ubox
39 103 0.237153119 ubox
40 53 0.040911840 ubox
40 91 0.020968867 ubox
40 96 0.003858166 ubox
40 97 0.014614701 ubox
40 98 0.084247070 ubox
40 99 0.120039430 ubox
40 102 0.255506374 ubox
41 48 0.270365543 ubox
41 52 0.044366209 ubox
41 90 0.006621306 ubox
41 93 0.003768391 ubox
41 96 0.007596519 ubox
41 97 0.083272459 ubox
41 98 0.118568564 ubox
42 47 0.269905894 ubox
42 51 0.043510220 ubox
42 92 0.003752308 ubox
43 51 0.009902091 ubox
44 50 0.015112995 ubox
44 101 0.685563612 ubox
45 49 0.013007266 ubox
45 50 0.006209290 ubox
45 54 0.005428269 ubox
45 100 0.743371922 ubox
46 53 0.006560832 ubox
46 96 0.026709652 ubox
46 99 0.752091274 ubox
47 52 0.006612674 ubox
47 93 0.161409989 ubox
47 95 0.028044452 ubox
47 98 0.751851063 ubox
48 92 0.161648739 ubox
48 100 0.019547550 ubox
49 91 0.160597426 ubox
49 96 0.629390601 ubox
49 99 0.018868932 ubox
50 90 0.103952270 ubox
50 91 0.009671254 ubox
50 95 0.671520184 ubox
50 96 0.024713791 ubox
50 99 0.009299150 ubox
51 90 0.007563671 ubox
51 93 0.978961500 ubox
51 95 0.004862675 ubox
51 98 0.005322461 ubox
52 92 0.978073081 ubox
53 89 0.004978980 ubox
53 92 0.016621478 ubox
54 90 0.881586050 ubox
54 91 0.030407084 ubox
55 89 0.997114997 ubox
56 88 0.999504294 ubox
57 87 0.999986857 ubox
58 86 0.999987304 ubox
59 85 0.999519739 ubox
60 84 0.999742356 ubox
61 83 0.999971807 ubox
62 77 0.004706189 ubox
62 82 0.999951004 ubox
63 76 0.005539267 ubox
63 81 0.999625285 ubox
64 73 0.011600487 ubox
64 75 0.006641371 ubox
64 77 0.027270110 ubox
64 80 0.996478466 ubox
65 72 0.034602929 ubox
65 76 0.032924496 ubox
65 81 0.003380343 ubox
66 71 0.032129416 ubox
68 74 0.046202621 ubox
68 79 0.661208448 ubox
69 73 0.041093123 ubox
69 77 0.493046722 ubox
69 78 0.665096869 ubox
70 76 0.485714429 ubox
91 100 0.003384062 ubox
91 103 0.012491820 ubox
92 102 0.021323999 ubox
93 100 0.029941141 ubox
94 99 0.028252551 ubox
95 101 0.018190922 ubox
96 100 0.018204519 ubox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
51 93 0.9500000 lbox
52 92 0.9500000 lbox
54 90 0.9500000 lbox
55 89 0.9500000 lbox
56 88 0.9500000 lbox
57 87 0.9500000 lbox
58 86 0.9500000 lbox
59 85 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
62 82 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
showpage
end
%%EOF
