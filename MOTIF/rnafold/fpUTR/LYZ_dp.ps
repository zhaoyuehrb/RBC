%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LYZ)
} def

/sequence { (\
AAAUACUGGGGCCAGCUCACCCUGGUCAGCCUAGCACUCUGACCUAGCAGUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 51 0.009854747 ubox
4 33 0.019984795 ubox
4 46 0.004469483 ubox
4 50 0.009700782 ubox
5 23 0.003621837 ubox
5 26 0.105508598 ubox
5 32 0.019867915 ubox
5 40 0.005194478 ubox
5 45 0.004460742 ubox
5 51 0.149966888 ubox
6 15 0.015662876 ubox
6 25 0.114197948 ubox
6 29 0.050479439 ubox
6 34 0.939035081 ubox
6 47 0.058086661 ubox
6 50 0.162060949 ubox
7 14 0.015850681 ubox
7 19 0.037584101 ubox
7 24 0.114163070 ubox
7 28 0.050006781 ubox
7 33 0.944026987 ubox
7 36 0.009550715 ubox
7 46 0.058206470 ubox
7 49 0.161616265 ubox
7 53 0.011863152 ubox
8 13 0.015836596 ubox
8 18 0.043372486 ubox
8 21 0.007944608 ubox
8 22 0.092274584 ubox
8 23 0.196771570 ubox
8 27 0.043587215 ubox
8 31 0.167291579 ubox
8 32 0.935450826 ubox
8 35 0.010474661 ubox
8 38 0.006351915 ubox
8 39 0.026582036 ubox
8 40 0.003262017 ubox
8 44 0.006704237 ubox
8 45 0.055973737 ubox
8 48 0.156417114 ubox
8 52 0.012641964 ubox
9 16 0.004137093 ubox
9 17 0.043710092 ubox
9 18 0.024498927 ubox
9 20 0.008142873 ubox
9 21 0.094826061 ubox
9 22 0.250308963 ubox
9 23 0.011650992 ubox
9 26 0.017048442 ubox
9 27 0.009240296 ubox
9 30 0.167817236 ubox
9 31 0.935234766 ubox
9 32 0.040742231 ubox
9 37 0.007131871 ubox
9 38 0.026620664 ubox
9 39 0.004194153 ubox
9 43 0.006817741 ubox
9 44 0.055039116 ubox
9 45 0.018758280 ubox
9 51 0.007949258 ubox
10 16 0.043803533 ubox
10 17 0.024570115 ubox
10 18 0.005791069 ubox
10 20 0.094759306 ubox
10 21 0.250757708 ubox
10 22 0.012154194 ubox
10 26 0.007964440 ubox
10 27 0.364567091 ubox
10 30 0.883105305 ubox
10 31 0.048617416 ubox
10 37 0.026317079 ubox
10 43 0.052680098 ubox
10 44 0.020296558 ubox
10 52 0.015081777 ubox
11 16 0.024898059 ubox
11 17 0.004892792 ubox
11 20 0.250557382 ubox
11 21 0.011985233 ubox
11 26 0.951955453 ubox
11 30 0.054477612 ubox
11 35 0.026122598 ubox
11 43 0.020314743 ubox
11 48 0.003285580 ubox
11 51 0.015197886 ubox
12 25 0.958586849 ubox
12 29 0.058231837 ubox
12 34 0.026114128 ubox
12 47 0.003293789 ubox
12 50 0.015206145 ubox
13 24 0.958825186 ubox
13 41 0.030915925 ubox
14 23 0.958293503 ubox
14 32 0.019313271 ubox
14 40 0.030977617 ubox
15 22 0.948915535 ubox
15 26 0.059456985 ubox
15 30 0.022405252 ubox
15 31 0.013951336 ubox
15 39 0.030736542 ubox
15 48 0.015810578 ubox
15 51 0.004540027 ubox
16 25 0.059961110 ubox
16 29 0.026461340 ubox
16 47 0.015820043 ubox
16 50 0.005636169 ubox
17 24 0.049949102 ubox
17 25 0.005985382 ubox
17 28 0.025977963 ubox
17 46 0.014583457 ubox
17 49 0.005441239 ubox
18 24 0.028176022 ubox
19 23 0.023104940 ubox
19 26 0.025575653 ubox
19 51 0.010982242 ubox
20 25 0.025816703 ubox
20 50 0.013100421 ubox
22 34 0.028012522 ubox
22 47 0.042371149 ubox
22 50 0.006447373 ubox
23 33 0.028066514 ubox
23 46 0.049281620 ubox
23 49 0.006866366 ubox
24 31 0.016596605 ubox
24 32 0.026525715 ubox
24 38 0.003722337 ubox
24 44 0.248443257 ubox
24 45 0.010950942 ubox
24 48 0.003523840 ubox
25 30 0.016567619 ubox
25 31 0.026384694 ubox
25 37 0.004058740 ubox
25 43 0.249158688 ubox
25 44 0.007798388 ubox
26 36 0.003853792 ubox
26 42 0.250058182 ubox
27 41 0.252053825 ubox
28 38 0.015919795 ubox
28 40 0.251500425 ubox
28 45 0.005925682 ubox
29 35 0.094169849 ubox
29 37 0.018214574 ubox
29 39 0.245647336 ubox
29 44 0.006206013 ubox
29 48 0.039157076 ubox
29 51 0.011184651 ubox
30 34 0.095666343 ubox
30 47 0.028414161 ubox
30 50 0.011487525 ubox
31 47 0.050721317 ubox
31 50 0.009549016 ubox
32 41 0.015900750 ubox
32 46 0.057986759 ubox
32 49 0.009731964 ubox
33 40 0.018529868 ubox
33 45 0.058077022 ubox
34 39 0.019657683 ubox
34 44 0.057560117 ubox
34 48 0.019175971 ubox
34 51 0.003803158 ubox
35 41 0.034498354 ubox
35 47 0.019478045 ubox
35 50 0.006039395 ubox
36 40 0.028481607 ubox
36 51 0.128654277 ubox
37 47 0.010458350 ubox
37 50 0.137310912 ubox
38 46 0.010106486 ubox
38 49 0.136483037 ubox
39 47 0.136659017 ubox
39 50 0.169764139 ubox
40 46 0.135401917 ubox
40 49 0.171947859 ubox
40 53 0.864370979 ubox
41 45 0.112731545 ubox
41 48 0.172082012 ubox
41 52 0.934135089 ubox
42 51 0.934081840 ubox
43 50 0.928506662 ubox
44 50 0.077589477 ubox
45 49 0.098313021 ubox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
