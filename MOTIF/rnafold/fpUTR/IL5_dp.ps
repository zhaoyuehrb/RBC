%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL5)
} def

/sequence { (\
AUGCACUUUCUUUGCCAAAGGCAAACGCAGAACGUUUCAGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.184713429 ubox
2 17 0.039403494 ubox
2 23 0.119857756 ubox
2 27 0.010992498 ubox
2 29 0.226680265 ubox
2 34 0.204816288 ubox
2 39 0.263875092 ubox
3 15 0.166628492 ubox
3 16 0.031224766 ubox
3 22 0.157426109 ubox
3 26 0.018444022 ubox
3 28 0.251678287 ubox
3 33 0.226027828 ubox
3 35 0.151265436 ubox
3 38 0.291832194 ubox
3 43 0.359597013 ubox
4 14 0.169923267 ubox
4 21 0.157354753 ubox
4 27 0.251421745 ubox
4 34 0.159093787 ubox
4 42 0.360252243 ubox
5 13 0.158982090 ubox
5 35 0.565019528 ubox
6 20 0.156509708 ubox
6 21 0.009920078 ubox
6 30 0.272637778 ubox
6 34 0.591470761 ubox
6 40 0.225298124 ubox
6 42 0.129222792 ubox
7 18 0.015387473 ubox
7 19 0.156474102 ubox
7 20 0.010601588 ubox
7 24 0.041414646 ubox
7 25 0.048566082 ubox
7 29 0.265145388 ubox
7 30 0.024429169 ubox
7 31 0.094334993 ubox
7 32 0.054126297 ubox
7 39 0.219698951 ubox
7 40 0.012064336 ubox
7 41 0.130722879 ubox
7 42 0.012894809 ubox
8 17 0.016132110 ubox
8 18 0.154585713 ubox
8 19 0.012886674 ubox
8 23 0.037916229 ubox
8 24 0.044548000 ubox
8 25 0.049340207 ubox
8 29 0.027357198 ubox
8 30 0.098956780 ubox
8 31 0.052478110 ubox
8 32 0.654170010 ubox
8 39 0.012537515 ubox
8 40 0.126505363 ubox
8 41 0.017424102 ubox
8 42 0.113970040 ubox
9 17 0.144768823 ubox
9 18 0.013860006 ubox
9 21 0.025832668 ubox
9 23 0.035938459 ubox
9 24 0.035824496 ubox
9 29 0.096379561 ubox
9 30 0.045184134 ubox
9 31 0.689036560 ubox
9 39 0.102555251 ubox
9 40 0.015120525 ubox
9 41 0.158820173 ubox
10 20 0.034302172 ubox
10 21 0.060410687 ubox
10 30 0.691394138 ubox
10 40 0.161942977 ubox
10 42 0.055670029 ubox
11 18 0.005979445 ubox
11 19 0.034843252 ubox
11 20 0.060616313 ubox
11 21 0.003452888 ubox
11 24 0.022470777 ubox
11 25 0.600820579 ubox
11 29 0.600623451 ubox
11 30 0.003780035 ubox
11 31 0.020554686 ubox
11 39 0.147753362 ubox
11 40 0.003837741 ubox
11 41 0.056448456 ubox
11 42 0.004342783 ubox
12 17 0.006417096 ubox
12 18 0.034207848 ubox
12 19 0.061432592 ubox
12 20 0.004415612 ubox
12 23 0.021776255 ubox
12 24 0.902879267 ubox
12 25 0.055500101 ubox
12 29 0.009999680 ubox
12 30 0.022010549 ubox
12 39 0.006317182 ubox
12 40 0.055109127 ubox
12 41 0.005199606 ubox
13 17 0.028590582 ubox
13 18 0.060766531 ubox
13 19 0.006913620 ubox
13 23 0.943503043 ubox
13 24 0.040477754 ubox
13 27 0.018398967 ubox
13 29 0.024362034 ubox
13 39 0.047912624 ubox
13 40 0.004499231 ubox
14 22 0.963030946 ubox
14 26 0.007798538 ubox
14 28 0.026487084 ubox
14 35 0.018635602 ubox
14 38 0.037432857 ubox
14 43 0.006967240 ubox
15 21 0.963111218 ubox
15 27 0.026449468 ubox
15 34 0.019548357 ubox
15 42 0.006979381 ubox
16 20 0.956106650 ubox
19 37 0.005929527 ubox
20 36 0.006143490 ubox
20 38 0.009174816 ubox
20 44 0.195668859 ubox
21 28 0.028599798 ubox
21 35 0.006257466 ubox
21 37 0.006772716 ubox
21 43 0.197953554 ubox
22 27 0.028581775 ubox
22 34 0.006286583 ubox
22 42 0.197882820 ubox
23 36 0.007226143 ubox
23 37 0.263247891 ubox
24 35 0.007265954 ubox
24 36 0.352041649 ubox
24 37 0.016444339 ubox
25 35 0.415530948 ubox
25 36 0.016318227 ubox
26 34 0.434460178 ubox
27 33 0.430165510 ubox
27 35 0.083243235 ubox
27 43 0.253326899 ubox
28 34 0.086749172 ubox
28 42 0.253692552 ubox
29 36 0.012050131 ubox
29 37 0.022152646 ubox
30 35 0.010958256 ubox
30 36 0.024952971 ubox
30 37 0.024203944 ubox
30 38 0.298308076 ubox
31 35 0.021701947 ubox
31 36 0.025714359 ubox
31 37 0.294535845 ubox
32 36 0.224524557 ubox
34 43 0.205115197 ubox
35 41 0.020134130 ubox
35 42 0.203042610 ubox
36 40 0.021238250 ubox
36 41 0.165221734 ubox
36 42 0.016392259 ubox
37 41 0.017067450 ubox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
showpage
end
%%EOF
