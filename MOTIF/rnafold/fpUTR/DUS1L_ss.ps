%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACCGGGCACCUUCCGGUGGCGGCGCGGAGCCUUGGGCCCGGCUGCGGCCCGGCGGCGGCCCCGGCGCGGUGCGGGCGUUCGCGGCGCCCCGGGAGCUGCAGGGGCCCCGGGCGGCGGCGAGGCCGGAGAGGGGCGGGCCCGGGACACCGGCACCCGGCGCCCUCGGAGCCAAAGGCGCGCGGCGGACACGGCGGGGCCCUCGCGCGCCUGGAGACG\
) } def
/len { sequence length } bind def

/coor [
[-125.41249084 596.19781494]
[-133.25350952 582.99121094]
[-133.42468262 567.63330078]
[-125.87997437 554.25518799]
[-112.64887238 546.45562744]
[-112.86306763 531.45715332]
[-113.07725525 516.45867920]
[-113.29145050 501.46020508]
[-113.50563812 486.46173096]
[-113.71983337 471.46328735]
[-120.32791901 467.91598511]
[-127.33059692 481.18109131]
[-130.08294678 495.92642212]
[-144.94914246 497.92544556]
[-151.49882507 484.43093872]
[-140.73017883 473.98806763]
[-133.54409790 460.82144165]
[-140.15219116 457.27416992]
[-152.77099609 465.38378906]
[-165.38978577 473.49337769]
[-172.81613159 487.46334839]
[-187.70610046 487.83520508]
[-200.32490540 495.94482422]
[-212.94371033 504.05444336]
[-225.56250000 512.16406250]
[-238.18130493 520.27368164]
[-243.70408630 527.54089355]
[-251.03871155 528.40747070]
[-263.77203369 536.33605957]
[-276.50534058 544.26464844]
[-282.13131714 551.45227051]
[-289.47756958 552.21405029]
[-302.32281494 559.96002197]
[-315.16806030 567.70599365]
[-325.60955811 581.06304932]
[-341.33511353 574.72723389]
[-339.60015869 557.86224365]
[-322.91400146 554.86077881]
[-310.06878662 547.11480713]
[-297.22354126 539.36883545]
[-284.43392944 531.53137207]
[-271.70062256 523.60278320]
[-258.96731567 515.67419434]
[-246.29092407 507.65484619]
[-233.67211914 499.54525757]
[-221.05331421 491.43563843]
[-208.43450928 483.32601929]
[-195.81570435 475.21640015]
[-189.29194641 461.82650757]
[-173.49940491 460.87460327]
[-160.88059998 452.76498413]
[-148.26179504 444.65536499]
[-141.82116699 420.85043335]
[-123.49689484 408.57217407]
[-104.19976807 411.10598755]
[-95.91078949 398.60427856]
[-87.62181854 386.10253906]
[-79.33283997 373.60083008]
[-78.74840546 358.71771240]
[-64.67382050 351.49160767]
[-56.38484573 338.98989868]
[-48.09587097 326.48815918]
[-39.80689240 313.98645020]
[-31.51791763 301.48474121]
[-23.22894287 288.98303223]
[-14.93996811 276.48132324]
[-14.35553360 261.59817505]
[-0.28094554 254.37207031]
[8.00802994 241.87036133]
[15.93662548 229.13703918]
[23.49837494 216.18251038]
[23.23219490 201.29028320]
[36.87129974 193.27246094]
[44.43304825 180.31793213]
[51.99479675 167.36338806]
[59.55654526 154.40885925]
[59.29036713 139.51663208]
[72.92947388 131.49880981]
[80.49121857 118.54427338]
[71.02787781 101.26238251]
[75.69385529 80.62567139]
[94.01929474 67.37728882]
[90.83081055 52.72008514]
[87.64233398 38.06288147]
[84.45385742 23.40567780]
[73.95993805 11.56556416]
[78.81504059 -2.51553154]
[75.62656403 -17.17273521]
[62.61446762 -25.73562813]
[59.58969116 -40.64553833]
[67.83329010 -52.99781036]
[64.64481354 -67.65501404]
[61.45633316 -82.31221771]
[58.26785278 -96.96942139]
[55.07937622 -111.62662506]
[51.89089584 -126.28382874]
[47.01189041 -133.99801636]
[48.76311493 -141.17304993]
[45.78425598 -155.87428284]
[42.80540085 -170.57551575]
[30.28273010 -180.60359192]
[30.45932579 -196.64567566]
[43.19971848 -206.39564514]
[58.73056412 -202.37417603]
[65.13793182 -187.66618347]
[57.50663757 -173.55438232]
[60.48549652 -158.85313416]
[63.46435165 -144.15190125]
[66.54809570 -129.47230530]
[69.73657990 -114.81510162]
[72.92505646 -100.15789795]
[76.11353302 -85.50069427]
[79.30201721 -70.84349060]
[82.49049377 -56.18629074]
[95.12046051 -48.37478256]
[98.56282806 -33.55571747]
[90.28376007 -20.36121368]
[93.47224426 -5.70401096]
[103.73809814 5.08772135]
[99.11105347 20.21719742]
[102.29953766 34.87440109]
[105.48801422 49.53160477]
[108.67649841 64.18880463]
[122.23060608 70.61423492]
[135.59570312 63.80437469]
[148.96080017 56.99451828]
[150.09713745 43.26150131]
[157.80818176 31.97186470]
[169.99249268 26.01275253]
[183.42207336 26.84392166]
[194.59735107 34.14167404]
[208.05833435 27.52335548]
[221.51930237 20.90503883]
[234.98028564 14.28672314]
[248.44125366 7.66840649]
[261.85464478 0.95414853]
[275.21972656 -5.85570908]
[288.53585815 -12.76081848]
[301.80236816 -19.76082802]
[315.06884766 -26.76083755]
[324.51608276 -42.57046890]
[342.01516724 -41.21098709]
[355.18035889 -48.39972305]
[368.34555054 -55.58845520]
[381.51074219 -62.77719116]
[389.57928467 -77.05410767]
[405.97799683 -76.93440247]
[413.83728027 -62.54121780]
[405.07217407 -48.68102646]
[388.69946289 -49.61200714]
[375.53427124 -42.42327118]
[362.36907959 -35.23453903]
[349.20391846 -28.04580307]
[345.49859619 -16.53509903]
[334.59494019 -10.43691063]
[322.06887817 -13.49434471]
[308.80236816 -6.49433470]
[295.53588867 0.50567532]
[291.08993530 6.40324736]
[282.02960205 7.50938892]
[268.66448975 14.31924629]
[264.13479614 20.15273094]
[255.05957031 21.12938309]
[241.59860229 27.74769974]
[228.13761902 34.36601639]
[214.67665100 40.98433304]
[201.21566772 47.60264969]
[198.93411255 63.86216354]
[187.29223633 75.67449188]
[170.73905945 78.24317169]
[155.77066040 70.35961914]
[142.40556335 77.16947174]
[129.04046631 83.97933197]
[131.89091492 98.72550964]
[127.94786072 112.62303162]
[118.55115509 122.82921600]
[106.09725189 127.49839020]
[93.44575500 126.10602570]
[85.88400269 139.06056213]
[85.60931396 154.87937927]
[72.51107788 161.97061157]
[64.94933319 174.92514038]
[57.38758087 187.87966919]
[49.82583237 200.83421326]
[49.55114365 216.65303040]
[36.45290756 223.74424744]
[28.89115906 236.69879150]
[29.02345467 241.02384949]
[27.89014816 244.78944397]
[25.82144547 247.66712952]
[23.22015953 249.46905518]
[20.50974464 250.15933228]
[12.22076988 262.66104126]
[11.04345226 278.43838501]
[-2.43825245 284.77029419]
[-10.72722816 297.27200317]
[-19.01620293 309.77371216]
[-27.30517769 322.27542114]
[-35.59415436 334.77713013]
[-43.88312912 347.27886963]
[-52.17210388 359.78057861]
[-53.34942245 375.55792236]
[-66.83112335 381.88980103]
[-75.12010193 394.39154053]
[-83.40908051 406.89324951]
[-91.69805145 419.39495850]
[-81.89861298 434.33682251]
[-83.53016663 454.50473022]
[-98.72136688 471.24908447]
[-98.50717163 486.24755859]
[-98.29297638 501.24603271]
[-98.07878876 516.24450684]
[-97.86459351 531.24298096]
[-97.65039825 546.24145508]
[-84.20197296 553.66003418]
[-76.27831268 566.81719971]
[-76.01086426 582.17376709]
[-83.47154999 595.59887695]
[-96.65350342 603.48126221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 214]
[6 213]
[7 212]
[8 211]
[9 210]
[10 209]
[18 52]
[19 51]
[20 50]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[28 43]
[29 42]
[30 41]
[32 40]
[33 39]
[34 38]
[55 206]
[56 205]
[57 204]
[58 203]
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[68 193]
[69 192]
[70 187]
[71 186]
[73 184]
[74 183]
[75 182]
[76 181]
[78 179]
[79 178]
[82 123]
[83 122]
[84 121]
[85 120]
[87 118]
[88 117]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[98 108]
[99 107]
[100 106]
[124 173]
[125 172]
[126 171]
[131 167]
[132 166]
[133 165]
[134 164]
[135 163]
[136 161]
[137 160]
[138 158]
[139 157]
[140 156]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
