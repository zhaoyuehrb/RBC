%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUGAUAGAAAGUUUUGAUGAUGAGCAGACUUUGCAACAACUGGAAUUGCAAAAUGAACCAAUUUUACAAUGCUUCCAAAAUGCAGUUAGUGAAACAAAGAUGAAGACAUCAGUCUUCUCCCAGAGAGUGAAGAACAGGAGUGUGAAGAGGAUGGUUCAGAGACAGAGACUGGUGGCCAGGAGGACCUAGAAGAUUUACAGGAGGAAGAGGAAGUGUCAGAU\
) } def
/len { sequence length } bind def

/coor [
[102.51351166 422.23785400]
[94.76197052 408.65670776]
[97.60459137 393.27966309]
[109.69917297 383.36730957]
[109.69917297 368.36730957]
[109.69917297 353.36730957]
[109.69917297 338.36730957]
[109.69917297 323.36730957]
[96.21611023 316.98980713]
[86.80037689 305.34277344]
[83.36119080 290.70263672]
[86.63282776 275.96099854]
[96.01867676 264.05331421]
[109.69917297 257.37457275]
[109.69917297 242.37458801]
[109.69917297 227.37458801]
[109.69917297 212.37458801]
[96.21611023 205.99708557]
[86.80037689 194.35005188]
[83.36119080 179.70994568]
[86.63282776 164.96827698]
[96.01867676 153.06060791]
[109.69917297 146.38188171]
[109.69917297 131.38188171]
[96.60565186 127.87651825]
[87.96945190 119.97516632]
[76.50888824 129.65274048]
[65.04833221 139.33032227]
[62.27254486 155.13142395]
[48.11965942 162.68623352]
[33.44654846 156.19937134]
[29.50917244 140.64698792]
[39.32794571 127.95954895]
[55.37075043 127.86976624]
[66.83130646 118.19218445]
[78.29187012 108.51460266]
[75.69615936 93.24948120]
[83.47047424 78.48747253]
[99.69699860 70.96633911]
[118.33554077 75.07717896]
[131.45806885 90.55088806]
[129.77861023 75.64520264]
[128.09913635 60.73952103]
[126.41967773 45.83383942]
[124.74020386 30.92815590]
[112.66764069 21.08483505]
[111.17675781 5.94442892]
[120.63526154 -5.50425529]
[118.95579529 -20.40993881]
[104.39244843 -24.67429352]
[92.60303497 -34.16390610]
[85.36454010 -47.40844345]
[83.75267792 -62.37472534]
[87.98210144 -76.77877808]
[97.37844086 -88.43443298]
[110.48558807 -95.58509064]
[108.80612183 -110.49076843]
[107.12665558 -125.39645386]
[105.44718933 -140.30213928]
[103.76772308 -155.20782471]
[102.08824921 -170.11351013]
[100.40878296 -185.01918030]
[91.17500305 -197.86628723]
[97.43865204 -211.37983704]
[95.75918579 -226.28550720]
[94.07971954 -241.19119263]
[92.40025330 -256.09689331]
[79.06747437 -263.81329346]
[72.90690613 -277.73812866]
[76.08940887 -292.44647217]
[87.18967438 -302.34204102]
[85.51020813 -317.24774170]
[83.83074188 -332.15341187]
[82.15127563 -347.05911255]
[80.47180176 -361.96478271]
[78.79233551 -376.87045288]
[77.11286926 -391.77615356]
[62.40828705 -395.38177490]
[49.84810638 -403.78497314]
[40.93753052 -415.95550537]
[36.73643875 -430.41305542]
[37.73333740 -445.40731812]
[43.78864670 -459.12985229]
[54.15387726 -469.93222046]
[67.56407928 -476.52401733]
[65.88461304 -491.42968750]
[56.65083313 -504.27679443]
[62.91448212 -517.79034424]
[61.23501587 -532.69604492]
[49.16244888 -542.53936768]
[47.67156982 -557.67974854]
[57.13006592 -569.12841797]
[55.45059967 -584.03411865]
[49.21557236 -586.79644775]
[44.17367935 -591.31152344]
[40.79457855 -597.11614990]
[39.37980652 -603.62939453]
[40.03609467 -610.21032715]
[42.66799545 -616.22149658]
[46.99022675 -621.09045410]
[52.55828094 -624.36413574]
[52.13758850 -639.35827637]
[48.77136612 -647.83941650]
[51.81762314 -654.56524658]
[51.60725403 -669.56378174]
[51.39688873 -684.56231689]
[51.18651962 -699.56085205]
[50.97615433 -714.55938721]
[50.76578522 -729.55786133]
[41.90766144 -743.35882568]
[49.66996002 -757.80450439]
[66.06748962 -758.03454590]
[74.23188782 -743.81219482]
[65.76431274 -729.76824951]
[65.97467804 -714.76971436]
[66.18504333 -699.77117920]
[66.39541626 -684.77270508]
[66.60578156 -669.77416992]
[66.81614685 -654.77563477]
[67.13168335 -639.77893066]
[67.55238342 -624.78485107]
[81.84345245 -606.61199951]
[70.35628510 -585.71356201]
[72.03575134 -570.80792236]
[83.80467987 -561.75097656]
[85.72023010 -546.65838623]
[76.14070129 -534.37548828]
[77.82016754 -519.46978760]
[86.93381500 -507.68887329]
[80.79029846 -493.10916138]
[82.46976471 -478.20346069]
[97.01055908 -474.76101685]
[109.51966095 -466.53594971]
[118.47669983 -454.50491333]
[122.78514099 -440.10842896]
[121.90648651 -425.07852173]
[115.92752075 -411.23034668]
[105.55213928 -400.24291992]
[92.01855469 -393.45562744]
[93.69802094 -378.54992676]
[95.37748718 -363.64425659]
[97.05695343 -348.73855591]
[98.73641968 -333.83288574]
[100.41588593 -318.92718506]
[102.09535980 -304.02151489]
[115.11928558 -296.84408569]
[121.49491119 -283.21267700]
[118.58736420 -268.26614380]
[107.30593872 -257.77633667]
[108.98540497 -242.87066650]
[110.66487122 -227.96498108]
[112.34433746 -213.05929565]
[121.45799255 -201.27835083]
[115.31446838 -186.69865417]
[116.99393463 -171.79296875]
[118.67340088 -156.88728333]
[120.35286713 -141.98159790]
[122.03234100 -127.07592010]
[123.71180725 -112.17023468]
[125.39127350 -97.26455688]
[139.76097107 -93.20980072]
[151.51535034 -83.93725586]
[158.84393311 -70.83547974]
[160.60279846 -55.88576126]
[156.49296570 -41.36257172]
[147.11077881 -29.48749352]
[133.86148071 -22.08940506]
[135.54093933 -7.18372250]
[147.30987549 1.87320530]
[149.22543335 16.96576309]
[139.64588928 29.24868774]
[141.32536316 44.15436935]
[143.00482178 59.06005478]
[144.68429565 73.96573639]
[146.36375427 88.87142181]
[155.38351440 100.85657501]
[169.24171448 106.59683228]
[183.13981628 112.23976135]
[197.07714844 117.78509521]
[213.21740723 114.88263702]
[223.59300232 127.58220673]
[217.53042603 142.81956482]
[201.26632690 144.91983032]
[191.53181458 131.72242737]
[177.59448242 126.17709351]
[170.22450256 126.62447357]
[163.50144958 120.45502472]
[149.64326477 114.71476746]
[143.40724182 118.88154602]
[152.81692505 130.56306458]
[162.22660828 142.24458313]
[175.86984253 148.47853088]
[180.19674683 162.84091187]
[172.26759338 175.57389832]
[157.46948242 178.02665710]
[145.85627747 168.53279114]
[145.31796265 153.54257202]
[138.12658691 140.37884521]
[130.93519592 127.21510315]
[124.69917297 131.38188171]
[124.69917297 146.38188171]
[138.37966919 153.06060791]
[147.76551819 164.96827698]
[151.03717041 179.70994568]
[147.59797668 194.35005188]
[138.18223572 205.99708557]
[124.69917297 212.37458801]
[124.69917297 227.37458801]
[124.69917297 242.37458801]
[124.69917297 257.37457275]
[138.37966919 264.05331421]
[147.76551819 275.96099854]
[151.03717041 290.70263672]
[147.59797668 305.34277344]
[138.18223572 316.98980713]
[124.69917297 323.36730957]
[124.69917297 338.36730957]
[124.69917297 353.36730957]
[124.69917297 368.36730957]
[124.69917297 383.36730957]
[136.79376221 393.27966309]
[139.63638306 408.65670776]
[131.88484192 422.23785400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 220]
[5 219]
[6 218]
[7 217]
[8 216]
[14 210]
[15 209]
[16 208]
[17 207]
[23 201]
[24 200]
[26 36]
[27 35]
[28 34]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[48 168]
[49 167]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[64 152]
[65 151]
[66 150]
[67 149]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[85 131]
[86 130]
[88 128]
[89 127]
[92 124]
[93 123]
[101 121]
[102 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[176 188]
[177 187]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
