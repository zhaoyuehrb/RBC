%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCACGCCGGGACCAGGAUUCCGGGAGGCCGACUCCUCCCUGCCCCACGAAUGCCGGGAAUUGUGGUCUCCGCCGGACGCGAGUUGUGAGACGGCCCAAGGGGCCGCGGGGUAUGCUGGGACCGCUAGCCCUUCCGGCGCGCCUCAGGACUUCGGGUCCCCUCACCCCGGGCGGAUGCCCAAAGACUCCGCCUUCCCAAGAGCCCCUGCGGCCGGGCGCGAAAAUGGCGGCGGCGGCGACGGCCGGGCGCUCC\
UGAAGCAGCAGUU\
) } def
/len { sequence length } bind def

/coor [
[77.11339569 188.94181824]
[82.93398285 174.65461731]
[95.56794739 165.80099487]
[94.86747742 150.81736755]
[94.16700745 135.83372498]
[87.16539764 133.96104431]
[80.67528534 130.73492432]
[74.95532227 126.28391266]
[62.58764267 134.77157593]
[55.58734894 148.95982361]
[40.71545029 149.78199768]
[28.34777451 158.26966858]
[15.98009586 166.75733948]
[3.61241770 175.24501038]
[-8.75526047 183.73266602]
[-21.12293816 192.22033691]
[-33.49061584 200.70800781]
[-40.49091339 214.89627075]
[-55.36280823 215.71842957]
[-67.73048401 224.20610046]
[-80.09816742 232.69377136]
[-92.46584320 241.18144226]
[-104.83351898 249.66911316]
[-117.20120239 258.15676880]
[-108.30103302 302.84326172]
[-118.87662506 313.48077393]
[-129.45220947 324.11831665]
[-140.02780151 334.75582886]
[-150.60339355 345.39334106]
[-161.17898560 356.03088379]
[-160.88220215 371.83239746]
[-171.90573120 383.15747070]
[-187.70948792 383.28713989]
[-198.91738892 372.14450073]
[-198.87998962 356.34027100]
[-187.61947632 345.25079346]
[-171.81649780 345.45529175]
[-161.24092102 334.81777954]
[-150.66532898 324.18023682]
[-140.08973694 313.54272461]
[-129.51414490 302.90518188]
[-118.93856049 292.26766968]
[-122.85169983 285.86944580]
[-135.64816284 293.69570923]
[-148.44462585 301.52197266]
[-163.43981934 301.90182495]
[-156.27088928 288.72552490]
[-143.47442627 280.89926147]
[-130.67796326 273.07296753]
[-134.59111023 266.67474365]
[-148.87844849 271.24331665]
[-157.47705078 284.78744507]
[-173.44224548 286.36608887]
[-184.52690125 274.76824951]
[-182.22782898 258.89077759]
[-168.30867004 250.91354370]
[-153.44700623 256.95596313]
[-139.15966797 252.38740540]
[-125.68886566 245.78909302]
[-113.32118988 237.30142212]
[-100.95351410 228.81375122]
[-88.58583832 220.32608032]
[-76.21815491 211.83842468]
[-63.85047913 203.35075378]
[-57.73480225 189.76959229]
[-41.97828674 188.34033203]
[-29.61060905 179.85266113]
[-17.24292946 171.36499023]
[-4.87525225 162.87731934]
[7.49242592 154.38964844]
[19.86010361 145.90199280]
[32.22778320 137.41432190]
[38.34346008 123.83316040]
[54.09997559 122.40390015]
[66.46765137 113.91623688]
[63.92074203 81.64321899]
[89.55406952 56.58297729]
[84.24129486 42.55534744]
[78.92852020 28.52771568]
[73.61575317 14.50008297]
[61.49220657 4.33493567]
[64.22013092 -10.30773067]
[58.90736008 -24.33536148]
[53.59458542 -38.36299515]
[48.19998932 -52.35936356]
[42.72375870 -66.32398987]
[37.24752426 -80.28862000]
[25.00609398 -90.31149292]
[27.56282997 -104.98501587]
[22.08659744 -118.94964600]
[16.61036491 -132.91427612]
[11.13413143 -146.87890625]
[-1.10730040 -156.90177917]
[1.44943500 -171.57530212]
[-4.02679729 -185.53993225]
[-9.58448124 -199.47235107]
[-15.22342587 -213.37207031]
[-20.86237144 -227.27178955]
[-35.14306259 -233.49269104]
[-40.66374588 -247.66931152]
[-34.64505768 -261.24542236]
[-40.28400421 -275.14517212]
[-45.92295074 -289.04489136]
[-51.56189346 -302.94461060]
[-57.20084000 -316.84432983]
[-62.83978271 -330.74404907]
[-77.62920380 -341.74176025]
[-74.49357605 -359.02346802]
[-80.29446411 -372.85638428]
[-86.09535217 -386.68930054]
[-91.89624023 -400.52221680]
[-107.14152527 -401.25982666]
[-120.55291748 -408.54660034]
[-129.46757507 -420.93579102]
[-132.11549377 -435.96746826]
[-127.97092438 -450.65710449]
[-117.85676575 -462.08804321]
[-103.78120422 -467.99069214]
[-88.53894043 -467.19305420]
[-75.15634155 -459.85348511]
[-66.29054260 -447.42932129]
[-63.70183945 -432.38732910]
[-67.90422821 -417.71414185]
[-78.06332397 -406.32312012]
[-72.26243591 -392.49017334]
[-66.46154785 -378.65725708]
[-60.66065598 -364.82434082]
[-49.60488129 -359.96997070]
[-44.64854050 -348.52194214]
[-48.94006348 -336.38299561]
[-43.30111694 -322.48327637]
[-37.66217041 -308.58355713]
[-32.02322769 -294.68383789]
[-26.38428116 -280.78411865]
[-20.74533653 -266.88436890]
[-6.96920156 -261.33877563]
[-1.05250263 -247.32281494]
[-6.96264839 -232.91073608]
[-1.32370329 -219.01101685]
[4.31524181 -205.11128235]
[9.72276688 -200.11218262]
[9.93783188 -191.01615906]
[15.41406441 -177.05152893]
[27.26379967 -168.02751160]
[25.09876060 -152.35513306]
[30.57499313 -138.39050293]
[36.05122757 -124.42588043]
[41.52745819 -110.46125031]
[53.37719345 -101.43722534]
[51.21215439 -85.76485443]
[56.68838882 -71.80022430]
[62.16461945 -57.83559418]
[67.51339722 -52.77367783]
[67.62221527 -43.67576599]
[72.93498993 -29.64813423]
[78.24776459 -15.62050343]
[89.99130249 -6.45870638]
[87.64337921 9.18731022]
[92.95615387 23.21494102]
[98.26892853 37.24257278]
[103.58170319 51.27020645]
[110.53156281 54.08967590]
[112.59436798 39.23219299]
[110.74646759 24.34645271]
[120.50527191 12.95497799]
[135.49826050 12.49642944]
[145.93498230 23.27023888]
[145.00021362 38.24108505]
[133.30287170 47.63337326]
[124.43128204 59.72862244]
[131.38114929 62.54809570]
[144.96546936 56.18677902]
[158.54977417 49.82546234]
[172.13409424 43.46414566]
[185.71841431 37.10282898]
[199.30273438 30.74151230]
[212.88703918 24.38019371]
[213.51745605 9.08767509]
[221.19248962 -4.15439987]
[234.14846802 -12.30309677]
[249.40820312 -13.48590660]
[263.46511841 -7.43102646]
[273.08905029 4.47017527]
[276.06848145 19.48288918]
[271.71875000 34.15730667]
[261.03939819 45.12134933]
[246.48448181 49.85556412]
[231.39859009 47.27206039]
[219.24836731 37.96451187]
[205.66404724 44.32582855]
[192.07972717 50.68714523]
[178.49540710 57.04846191]
[164.91110229 63.40977859]
[151.32678223 69.77109528]
[137.74246216 76.13240814]
[140.38517761 86.54267883]
[140.35308838 96.78856659]
[137.88523865 106.22357941]
[133.36753845 114.30689240]
[145.63525391 122.93842316]
[161.37400818 124.55158997]
[167.33065796 138.20324707]
[179.59835815 146.83477783]
[191.86607361 155.46629333]
[204.13378906 164.09782410]
[216.45169067 172.65756226]
[228.81936646 181.14523315]
[241.18704224 189.63290405]
[244.26261902 184.63203430]
[249.37174988 180.44506836]
[256.24673462 177.77944946]
[264.39505005 177.24607849]
[273.13412476 179.29226685]
[286.06573486 186.89317322]
[298.99731445 194.49409485]
[311.92892456 202.09500122]
[324.56301880 199.61494446]
[335.16830444 206.18386841]
[338.36279297 217.82820129]
[351.20471191 225.57962036]
[364.04666138 233.33102417]
[378.78295898 228.09883118]
[393.41665649 233.61143494]
[401.03817749 247.26597595]
[398.04888916 262.61517334]
[385.86022949 272.41162109]
[370.22729492 272.02975464]
[358.53152466 261.64984131]
[356.29525757 246.17297363]
[343.45330811 238.42155457]
[330.61135864 230.67015076]
[313.05737305 231.25851440]
[304.32800293 215.02659607]
[291.39642334 207.42568970]
[278.46481323 199.82476807]
[265.53323364 192.22386169]
[255.53103638 203.40223694]
[264.51699829 215.41273499]
[273.50299072 227.42324829]
[288.78128052 233.38191223]
[290.99224854 249.63133240]
[277.86145020 259.45550537]
[262.89672852 252.74813843]
[261.49249268 236.40922546]
[252.50650024 224.39871216]
[243.52052307 212.38821411]
[232.69937134 202.00059509]
[220.33169556 193.51292419]
[207.96401978 185.02525330]
[200.69645691 183.83575439]
[195.50225830 176.36553955]
[183.23454285 167.73400879]
[170.96684265 159.10247803]
[158.69912720 150.47094727]
[143.83784485 149.47515869]
[137.00372314 135.20613098]
[124.73601532 126.57460022]
[120.03726959 130.27519226]
[114.79471588 133.15412903]
[109.15064240 135.13325500]
[109.85111237 150.11689758]
[110.55158234 165.10052490]
[123.95644379 172.73684692]
[131.08456421 186.41871643]
[129.66137695 201.78028870]
[120.14103699 213.91976929]
[105.56143951 218.96345520]
[90.57488251 215.30195618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 262]
[4 261]
[5 260]
[8 75]
[9 74]
[11 72]
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[50 58]
[51 57]
[77 161]
[78 160]
[79 159]
[80 158]
[82 156]
[83 155]
[84 154]
[85 152]
[86 151]
[87 150]
[89 148]
[90 147]
[91 146]
[92 145]
[94 143]
[95 142]
[96 140]
[97 139]
[98 138]
[101 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[108 127]
[109 126]
[110 125]
[111 124]
[171 195]
[172 194]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[199 257]
[200 256]
[202 254]
[203 253]
[204 252]
[205 251]
[206 249]
[207 248]
[208 247]
[213 236]
[214 235]
[215 234]
[216 233]
[219 231]
[220 230]
[221 229]
[237 246]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
