%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCAACAGGGUUGCAGGUGUAAAAUAACGGGAAGGCGGGAUGCGUGGCUAAAUUGCUCUGCGUGCACAAAGAGUAGGAGAGCCCAGAGUUCCAGAAUGCCCCUAAUUCCGAACACCACAGGGUGAGUCUGGAGCAAGUCACCUGGGAGGGCUUACAGGUGCCAUA\
) } def
/len { sequence length } bind def

/coor [
[103.65319061 181.20512390]
[102.81710052 166.22843933]
[101.98101807 151.25175476]
[101.14493561 136.27507019]
[86.37822723 133.63984680]
[80.41333008 147.40284729]
[74.44844055 161.16583252]
[68.48354340 174.92883301]
[62.51865005 188.69183350]
[61.76778030 205.62913513]
[45.28452682 209.59632874]
[36.90935516 194.85546875]
[48.75565338 182.72692871]
[54.72055054 168.96394348]
[60.68544388 155.20094299]
[66.65033722 141.43794250]
[72.61523438 127.67495728]
[64.51004028 100.57318878]
[76.72902679 77.95416260]
[68.55554199 65.37663269]
[60.38206100 52.79910660]
[52.20858002 40.22158051]
[44.03509521 27.64405251]
[29.42479324 31.51658630]
[14.35327911 30.68474960]
[0.29585984 25.24256897]
[-11.37532139 15.73475170]
[-19.52521706 3.10218334]
[-23.36625671 -11.41116714]
[-22.53444099 -26.38074303]
[-17.12379456 -40.34122467]
[-7.67593431 -51.92996597]
[-15.84941673 -64.50749207]
[-24.02289963 -77.08502197]
[-29.78820801 -80.45279694]
[-32.54363632 -85.48136139]
[-32.25629425 -90.28546143]
[-39.95661926 -103.15810394]
[-47.65694809 -116.03074646]
[-55.94697952 -128.53176880]
[-64.80881500 -140.63415527]
[-73.67064667 -152.73654175]
[-82.53248596 -164.83894348]
[-91.39431763 -176.94132996]
[-106.61058807 -175.38810730]
[-120.46978760 -181.61862183]
[-129.29092407 -193.86827087]
[-130.78622437 -208.78872681]
[-124.65373230 -222.36289978]
[-133.51556396 -234.46528625]
[-142.37741089 -246.56768799]
[-151.23924255 -258.67007446]
[-166.64381409 -258.74426270]
[-178.90756226 -267.76943970]
[-183.45167542 -282.11569214]
[-178.73324585 -296.21798706]
[-187.59509277 -308.32037354]
[-196.45692444 -320.42276001]
[-205.31875610 -332.52514648]
[-214.18058777 -344.62753296]
[-223.04243469 -356.72994995]
[-231.90426636 -368.83233643]
[-247.16404724 -367.09036255]
[-261.24398804 -373.22637939]
[-270.35665894 -385.58984375]
[-272.05078125 -400.85501099]
[-265.87063599 -414.91564941]
[-253.47869873 -423.98953247]
[-238.20828247 -425.63577271]
[-224.16708374 -419.41162109]
[-215.13211060 -406.99127197]
[-213.53372192 -391.71578979]
[-219.80186462 -377.69415283]
[-210.94003296 -365.59176636]
[-202.07820129 -353.48937988]
[-193.21636963 -341.38699341]
[-184.35453796 -329.28460693]
[-175.49269104 -317.18218994]
[-166.63085938 -305.07980347]
[-151.76208496 -305.32000732]
[-139.45742798 -296.65634155]
[-134.55636597 -282.23992920]
[-139.13685608 -267.53192139]
[-130.27500916 -255.42951965]
[-121.41317749 -243.32713318]
[-112.55134583 -231.22473145]
[-97.75907898 -232.97245789]
[-83.98648071 -227.04191589]
[-74.97196960 -214.93386841]
[-73.21684265 -199.84027100]
[-79.29193115 -185.80316162]
[-70.43009186 -173.70077515]
[-61.56825638 -161.59837341]
[-52.70642471 -149.49598694]
[-43.84458923 -137.39360046]
[-38.78826141 -151.51568604]
[-24.65743065 -156.54754639]
[-11.81338406 -148.79962158]
[-9.67388821 -133.95298767]
[-19.80770683 -122.89379120]
[-34.78430557 -123.73107147]
[-27.08397675 -110.85842896]
[-19.38364983 -97.98578644]
[-11.44537354 -85.25849915]
[-3.27189040 -72.68097687]
[4.90159225 -60.10344696]
[19.32879448 -64.02987671]
[34.28348923 -63.30377197]
[48.30050659 -57.98368454]
[60.00265121 -48.57885742]
[68.23601532 -36.00052643]
[72.18373871 -21.47363853]
[71.44708252 -6.41755295]
[66.08560944 7.69262409]
[56.61262131 19.47056961]
[64.78610229 32.04809570]
[72.95958710 44.62562561]
[81.13307190 57.20315170]
[89.30655670 69.78067780]
[100.97471619 67.95928955]
[112.51058197 70.48657227]
[122.34847260 77.01950836]
[129.15315247 86.67143250]
[132.00108337 98.13236237]
[130.50570679 109.84676361]
[143.30622864 117.66640472]
[156.10675049 125.48604584]
[168.90725708 133.30567932]
[181.70777893 141.12532043]
[194.50830078 148.94496155]
[207.30880737 156.76460266]
[220.10932922 164.58424377]
[232.42961121 158.35267639]
[246.11116028 159.02770996]
[257.57531738 166.32540894]
[263.87649536 178.24363708]
[263.45886230 191.61016846]
[276.11181641 199.66639709]
[290.96899414 194.78800964]
[305.46670532 200.64891052]
[312.75961304 214.48175049]
[309.40420532 229.75511169]
[296.98480225 239.25735474]
[281.36547852 238.50181580]
[269.92120361 227.84524536]
[268.05560303 212.31935120]
[255.40264893 204.26312256]
[240.35179138 210.77018738]
[224.22329712 207.00045776]
[213.40122986 194.24322510]
[212.28968811 177.38476562]
[199.48918152 169.56512451]
[186.68865967 161.74548340]
[173.88813782 153.92584229]
[161.08763123 146.10620117]
[148.28710938 138.28656006]
[135.48658752 130.46691895]
[122.68607330 122.64727783]
[121.66595459 125.91025543]
[120.23444366 129.16218567]
[118.38627625 132.35482788]
[116.12161255 135.43899536]
[116.95769501 150.41567993]
[117.79378510 165.39234924]
[118.62986755 180.36903381]
[128.05619812 193.78828430]
[120.90349579 208.54534912]
[104.52984619 209.45941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[32 106]
[33 105]
[34 104]
[37 103]
[38 102]
[39 101]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[49 86]
[50 85]
[51 84]
[52 83]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[125 158]
[126 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
