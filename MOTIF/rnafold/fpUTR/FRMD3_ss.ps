%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGAGCGAACAGAGGGAGGGACCCGCCCGCCGCGCCCCGGCCGCUGGGCAUGUGUGUCCGCAGGCGCCCGACGCUGCCGAUGUCCCGGGGCUGAGCCGCGCCCAGGUGUCCCGGACAGUGCGUGCGAGCGUGUGUGUCCGCGCAGGCGAGCACCGCGCCGGCCCUGAGCCUCCCGCUCGCUCCCCACGGCCGCGGUGC\
) } def
/len { sequence length } bind def

/coor [
[-21.76620293 320.92950439]
[-23.89446068 323.78927612]
[-26.54233742 325.55184937]
[-29.27851486 326.18872070]
[-37.79213715 338.53854370]
[-46.30575943 350.88836670]
[-54.81938171 363.23822021]
[-56.28172302 378.99169922]
[-69.87568665 385.07882690]
[-78.38931274 397.42864990]
[-86.90293121 409.77850342]
[-71.98828888 408.18057251]
[-60.22270966 417.48492432]
[-58.34009933 432.36633301]
[-67.41794586 444.30752563]
[-82.26065063 446.47415161]
[-94.37313843 437.62612915]
[-96.82314301 422.82830811]
[-106.44518280 434.33554077]
[-104.79121399 450.05303955]
[-114.80043030 462.28378296]
[-130.53454590 463.77148438]
[-142.65878296 453.63351440]
[-143.98005676 437.88455200]
[-133.71446228 425.86819458]
[-117.95241547 424.71350098]
[-108.33037567 413.20626831]
[-99.25276184 401.26486206]
[-90.73913574 388.91503906]
[-82.22551727 376.56521606]
[-81.37212372 361.69506836]
[-67.16920471 354.72457886]
[-58.65558624 342.37475586]
[-50.14196396 330.02493286]
[-41.62834167 317.67510986]
[-33.50098419 305.06771851]
[-25.76767731 292.21487427]
[-18.03437042 279.36199951]
[-10.30106163 266.50915527]
[-2.56775403 253.65629578]
[-2.63592100 238.76184082]
[11.10857201 230.92605591]
[18.84188080 218.07321167]
[26.57518768 205.22035217]
[34.30849457 192.36749268]
[42.04180527 179.51463318]
[49.77511215 166.66177368]
[50.53037262 159.30494690]
[57.72885513 153.67115784]
[65.66014099 140.93951416]
[73.59142303 128.20787048]
[81.52270508 115.47623444]
[71.68003082 91.85819244]
[89.25263214 66.86769104]
[124.75664520 68.33187103]
[124.75664520 53.33186722]
[124.75664520 38.33186722]
[124.75664520 23.33186722]
[124.75664520 8.33186817]
[124.75664520 -6.66813231]
[113.86209106 -17.80125618]
[114.07577515 -33.01338959]
[124.75664520 -43.33106995]
[124.75664520 -58.33106995]
[124.75664520 -73.33106995]
[124.75664520 -88.33106995]
[117.01934814 -102.13124084]
[124.75664520 -114.85851288]
[124.75664520 -129.85852051]
[124.75664520 -144.85852051]
[124.75664520 -159.85852051]
[117.01934814 -173.65869141]
[124.75664520 -186.38595581]
[124.75664520 -201.38595581]
[121.62562561 -209.97399902]
[124.87451172 -216.61764526]
[125.10663605 -231.61584473]
[125.33876801 -246.61404419]
[122.34101868 -255.24951172]
[125.69232941 -261.84207153]
[126.15653229 -276.83489990]
[115.86090851 -285.52502441]
[112.50116730 -298.37115479]
[117.08759308 -310.62454224]
[127.73501587 -317.88800049]
[128.43118286 -332.87182617]
[129.12733459 -347.85565186]
[129.82350159 -362.83950806]
[130.51966858 -377.82333374]
[127.79059601 -386.54742432]
[131.34431458 -393.03314209]
[132.27227783 -408.00439453]
[133.20022583 -422.97567749]
[134.12818909 -437.94692993]
[135.05613708 -452.91821289]
[132.72299194 -457.60189819]
[132.45127869 -462.24700928]
[133.88003540 -466.07333374]
[136.39056396 -468.55773926]
[138.01234436 -483.46978760]
[139.63412476 -498.38186646]
[128.68215942 -509.54379272]
[127.51875305 -525.13806152]
[136.69323730 -537.80145264]
[151.87370300 -541.55480957]
[165.89237976 -534.62585449]
[172.13011169 -520.28625488]
[167.64160156 -505.30670166]
[154.54620361 -496.76007080]
[152.92440796 -481.84802246]
[151.30262756 -466.93594360]
[150.02742004 -451.99023438]
[149.09945679 -437.01898193]
[148.17149353 -422.04769897]
[147.24354553 -407.07644653]
[146.31558228 -392.10516357]
[145.50350952 -377.12716675]
[144.80734253 -362.14334106]
[144.11117554 -347.15948486]
[143.41502380 -332.17565918]
[142.71885681 -317.19183350]
[154.56625366 -305.25949097]
[154.11212158 -288.11285400]
[141.14935303 -276.37069702]
[140.68515015 -261.37786865]
[140.33697510 -246.38191223]
[140.10484314 -231.38371277]
[139.87271118 -216.38551331]
[139.75665283 -201.38595581]
[139.75665283 -186.38595581]
[147.49394226 -173.65869141]
[139.75665283 -159.85852051]
[139.75665283 -144.85852051]
[139.75665283 -129.85852051]
[139.75665283 -114.85851288]
[147.49394226 -102.13124084]
[139.75665283 -88.33106995]
[139.75665283 -73.33106995]
[139.75665283 -58.33106995]
[139.75665283 -43.33106995]
[150.43751526 -33.01338959]
[150.65119934 -17.80125618]
[139.75665283 -6.66813231]
[139.75665283 8.33186817]
[139.75665283 23.33186722]
[139.75665283 38.33186722]
[139.75665283 53.33186722]
[139.75665283 68.33187103]
[149.37869263 79.83909607]
[164.14175415 82.49460602]
[178.90483093 85.15011597]
[191.79081726 76.39859009]
[206.72483826 79.30195618]
[214.98866272 91.64070129]
[229.75173950 94.29621124]
[243.69267273 86.35705566]
[258.53775024 92.44010925]
[262.89907837 107.87895966]
[253.43106079 120.83025360]
[237.39671326 121.35886383]
[227.09623718 109.05928040]
[212.33316040 106.40377045]
[200.28756714 115.08935547]
[185.27789307 112.60659790]
[176.24931335 99.91318512]
[161.48625183 97.25767517]
[146.72317505 94.60216522]
[140.11026001 108.06653595]
[133.49790955 121.52970886]
[144.62434387 131.58964539]
[155.75077820 141.64958191]
[166.87722778 151.70951843]
[178.00366211 161.76945496]
[194.03422546 162.40219116]
[203.41795349 175.41470337]
[198.95643616 190.82490540]
[184.07217407 196.81141663]
[170.18309021 188.78189087]
[167.94372559 172.89590454]
[156.81729126 162.83596802]
[145.69084167 152.77601624]
[134.56440735 142.71607971]
[123.43797302 132.65614319]
[114.30981445 133.22221375]
[106.10038757 131.56536865]
[99.29981232 128.11720276]
[94.25434875 123.40751648]
[86.32306671 136.13916016]
[78.39178467 148.87080383]
[70.46050262 161.60244751]
[62.62796783 174.39508057]
[54.89466095 187.24794006]
[47.16135406 200.10079956]
[39.42804718 212.95365906]
[31.69473839 225.80651855]
[23.96142960 238.65936279]
[23.47645950 254.47314453]
[10.28510380 261.38958740]
[2.55179596 274.24246216]
[-5.18151188 287.09530640]
[-12.91481972 299.94818115]
[-20.64812851 312.80102539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[6 33]
[7 32]
[9 30]
[10 29]
[11 28]
[18 27]
[19 26]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[47 191]
[49 190]
[50 189]
[51 188]
[52 187]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[63 140]
[64 139]
[65 138]
[66 137]
[68 135]
[69 134]
[70 133]
[71 132]
[73 130]
[74 129]
[76 128]
[77 127]
[78 126]
[80 125]
[81 124]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[99 111]
[100 110]
[101 109]
[149 167]
[150 166]
[151 165]
[154 162]
[155 161]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
