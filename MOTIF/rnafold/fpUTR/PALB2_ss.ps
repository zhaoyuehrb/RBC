%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCCGAAUGGUGGAUUUAAUUGGCCGGAGUUUAGGGCGCGCUUGGCCCGCGUGGGUCAGCUGAUCGCGCACUGAGGGUGCGAUCCCGGGCUCCCCAUUCCUUCCUGGGGCGCCUCCCCGGCCCAGGGCCAACUGGGUCCCGGUGUCGGCAGGCCUGGGGUCGGCGACGGCUGCUCUUUUCGUUCUGUCGCCUGCCCG\
) } def
/len { sequence length } bind def

/coor [
[167.54956055 210.87992859]
[167.02111816 205.67063904]
[158.24232483 193.50788879]
[149.46351624 181.34512329]
[140.68472290 169.18237305]
[131.90591431 157.01962280]
[123.12711334 144.85685730]
[114.21934509 148.42324829]
[104.79759216 150.23927307]
[95.20240784 150.23927307]
[85.78065491 148.42324829]
[76.87288666 144.85685730]
[68.09408569 157.01962280]
[59.31528091 169.18237305]
[57.51247787 184.90052795]
[43.79000473 190.69216919]
[35.01120377 202.85491943]
[26.23240280 215.01766968]
[21.86517334 231.39949036]
[4.91460228 231.73786926]
[-0.10293814 215.54339600]
[14.06964588 206.23887634]
[22.84844780 194.07611084]
[31.62724876 181.91336060]
[32.80213547 167.06517029]
[47.15252686 160.40356445]
[55.93132782 148.24081421]
[64.71012878 136.07806396]
[56.95541763 129.26646423]
[50.55261993 120.77729034]
[45.86495590 110.88713074]
[43.19736099 99.95098877]
[42.77966309 88.38960266]
[44.75258255 76.67333221]
[29.95412827 74.22267151]
[15.15567303 71.77201080]
[0.35721812 69.32135010]
[-14.52163029 74.70005798]
[-25.81379509 64.98736572]
[-40.61224747 62.53670883]
[-55.41070557 60.08604813]
[-70.20915985 57.63538742]
[-85.00761414 55.18472672]
[-105.33888245 64.59764862]
[-121.54370117 50.25453949]
[-136.46635437 48.73325348]
[-151.38900757 47.21196747]
[-166.31167603 45.69067764]
[-181.23432922 44.16939163]
[-196.15698242 42.64810562]
[-211.07963562 41.12681961]
[-225.81031799 48.33370972]
[-239.26411438 38.95676041]
[-237.60093689 22.64216805]
[-222.53169250 16.17299080]
[-209.55834961 26.20416260]
[-194.63569641 27.72544861]
[-179.71304321 29.24673653]
[-164.79037476 30.76802254]
[-149.86772156 32.28931046]
[-134.94506836 33.81059647]
[-120.02241516 35.33188248]
[-115.10514832 29.15421867]
[-108.06156158 25.38274956]
[-100.00679016 24.69890976]
[-92.24987793 27.28843880]
[-86.08099365 32.79901123]
[-82.55695343 40.38627243]
[-67.75849915 42.83693314]
[-52.96004486 45.28759384]
[-38.16158676 47.73825455]
[-23.36313438 50.18891525]
[-9.54277039 44.63492203]
[2.80787849 54.52289963]
[17.60633278 56.97356033]
[32.40478897 59.42421722]
[47.20324326 61.87487793]
[55.69450378 49.50966644]
[48.09321594 36.57829285]
[40.49192810 23.64692116]
[25.13360596 19.91898727]
[16.98114014 6.37967873]
[20.87124443 -8.93837070]
[34.49599075 -16.94723511]
[49.77205276 -12.89539623]
[57.63642120 0.81326032]
[53.42330170 16.04563332]
[61.02458954 28.97700500]
[68.62587738 41.90837860]
[83.26820374 38.65224838]
[84.67282104 23.71815872]
[86.07744598 8.78406906]
[87.48207092 -6.15002060]
[81.07103729 -20.61408806]
[89.96614075 -32.56090164]
[91.37075806 -47.49499130]
[92.77538300 -62.42908096]
[94.18000793 -77.36317444]
[95.58462524 -92.29726410]
[83.85171509 -102.45198822]
[80.36118317 -117.57137299]
[86.45521545 -131.84170532]
[99.79052734 -139.77575684]
[115.23941803 -138.32270813]
[126.86148071 -128.04130554]
[130.18778992 -112.88494110]
[123.93931580 -98.68155670]
[110.51871490 -90.89263916]
[109.11409760 -75.95854950]
[107.70947266 -61.02445984]
[106.30484772 -46.09037018]
[104.90023041 -31.15628052]
[111.41172791 -17.76040077]
[102.41616058 -4.74539852]
[101.01153564 10.18869114]
[99.60691071 25.12278175]
[98.20229340 40.05686951]
[116.51411438 45.65088654]
[131.16204834 56.34606552]
[140.90179443 70.43576050]
[154.22944641 63.55289459]
[167.55708313 56.67002487]
[180.88473511 49.78715515]
[194.21237183 42.90428925]
[207.48582458 35.91747665]
[220.70426941 28.82715034]
[229.20805359 15.48562908]
[244.08103943 16.28793144]
[257.29949951 9.19760418]
[270.51791382 2.10727692]
[283.73635864 -4.98305082]
[296.95480347 -12.07337856]
[302.94729614 -26.95524216]
[318.35928345 -31.41059494]
[331.36801147 -22.02166939]
[331.99432373 -5.99084568]
[319.75775146 4.38439894]
[304.04513550 1.14506543]
[290.82669067 8.23539257]
[277.60824585 15.32572079]
[264.38980103 22.41604805]
[251.17137146 29.50637627]
[243.61305237 42.34074783]
[227.79460144 42.04559326]
[214.57615662 49.13592148]
[210.16418457 55.07279587]
[201.09524536 56.23193359]
[187.76760864 63.11480331]
[174.43995667 69.99767303]
[161.11230469 76.88053894]
[147.78466797 83.76340485]
[150.41181946 102.37694550]
[146.04493713 120.66071320]
[135.28987122 136.07806396]
[144.06867981 148.24081421]
[152.84747314 160.40356445]
[161.62628174 172.56632996]
[170.40507507 184.72908020]
[179.18388367 196.89184570]
[188.24539185 208.84545898]
[197.58464050 220.58335876]
[206.92388916 232.32127380]
[216.26313782 244.05917358]
[230.91000366 250.04081726]
[232.77957153 264.81762695]
[242.11882019 276.55551147]
[251.45806885 288.29342651]
[260.79730225 300.03134155]
[270.13656616 311.76925659]
[279.47579956 323.50714111]
[288.81506348 335.24505615]
[298.15429688 346.98297119]
[310.86303711 349.21615601]
[318.39968872 359.19174194]
[317.15658569 371.22933960]
[326.31121826 383.11178589]
[341.94171143 383.58255005]
[353.57830811 394.02877808]
[355.72653198 409.51809692]
[347.37210083 422.73693848]
[332.45968628 427.44372559]
[318.03048706 421.41610718]
[310.89752197 407.50009155]
[314.42880249 392.26644897]
[305.27413940 380.38400269]
[288.71328735 374.58880615]
[286.41641235 356.32220459]
[277.07714844 344.58428955]
[267.73791504 332.84640503]
[258.39865112 321.10848999]
[249.05940247 309.37057495]
[239.72015381 297.63269043]
[230.38090515 285.89477539]
[221.04165649 274.15686035]
[207.06280518 269.01480103]
[204.52523804 253.39842224]
[195.18598938 241.66052246]
[185.84674072 229.92260742]
[176.50749207 218.18470764]
[173.05618286 217.42663574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[12 28]
[13 27]
[14 26]
[16 24]
[17 23]
[18 22]
[34 77]
[35 76]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[78 89]
[79 88]
[80 87]
[90 117]
[91 116]
[92 115]
[93 114]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[120 151]
[121 150]
[122 149]
[123 148]
[124 147]
[125 145]
[126 144]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[160 199]
[161 198]
[162 197]
[163 196]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
