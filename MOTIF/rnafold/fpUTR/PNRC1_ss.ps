%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCGAUAACAACACUCGGAGCUGGGGCUGUGGCUAUUUGUUGCUGCGCCGCCACCGCCCGAGUCAUGUUCCGCGAUCUUCUCAGGCUCUCCUAGCAGCAUCCAUCGCCGCCACCCUAUCUUCACUGGCUUCAUUCACCUUCUCCUUCUCUCUUCGUUGCUGAGCGACAAGCUUCCUAGCGCU\
) } def
/len { sequence length } bind def

/coor [
[93.26277924 183.90888977]
[93.00943756 168.91102600]
[84.23954010 164.27554321]
[76.60767365 158.59788513]
[70.22539520 152.10179138]
[65.16459656 145.02072144]
[61.45712280 137.59123230]
[59.09542465 130.04643250]
[58.03426361 122.60980988]
[58.19333649 115.48934937]
[43.45148849 118.26023865]
[28.70963669 121.03113556]
[13.96778488 123.80202484]
[5.03876877 136.56565857]
[-9.95103645 139.16574097]
[-22.06418800 130.57463074]
[-36.80603790 133.34552002]
[-51.54788971 136.11640930]
[-66.28974152 138.88729858]
[-81.03159332 141.65818787]
[-95.77343750 144.42907715]
[-103.64973450 149.09931946]
[-110.78754425 147.12007141]
[-125.57408905 149.64158630]
[-140.31594849 152.41247559]
[-155.00889587 155.43194580]
[-169.70184326 158.45143127]
[-184.36875916 161.59487915]
[-199.00862122 164.86209106]
[-213.64848328 168.12928772]
[-221.36254883 173.06288147]
[-228.56312561 171.32583618]
[-243.25607300 174.34530640]
[-257.94903564 177.36479187]
[-272.64196777 180.38426208]
[-287.33493042 183.40374756]
[-293.61901855 197.59141541]
[-307.05911255 205.34661865]
[-322.48721313 203.68736267]
[-333.97091675 193.25163269]
[-337.09448242 178.05218506]
[-330.65686035 163.93353271]
[-317.13342285 156.32456970]
[-301.72421265 158.15110779]
[-290.35440063 168.71080017]
[-275.66146851 165.69131470]
[-260.96850586 162.67184448]
[-246.27555847 159.65235901]
[-231.58261108 156.63288879]
[-216.91567993 153.48944092]
[-202.27581787 150.22222900]
[-187.63597107 146.95503235]
[-181.77972412 142.41960144]
[-172.72131348 143.75848389]
[-158.02836609 140.73899841]
[-143.33541870 137.71952820]
[-139.99603271 134.27745056]
[-134.45153809 132.91027832]
[-128.09561157 134.85504150]
[-113.30905914 132.33352661]
[-98.54433441 129.68722534]
[-83.80248260 126.91633606]
[-69.06063080 124.14544678]
[-54.31877899 121.37455750]
[-39.57692719 118.60366058]
[-24.83507729 115.83277130]
[-16.66799927 103.42977142]
[-1.75713789 100.40969086]
[11.19689465 109.06017303]
[25.93874550 106.28928375]
[40.68059540 103.51839447]
[55.42244720 100.74749756]
[59.86333466 80.58956146]
[72.90744781 64.59222412]
[91.75880432 56.18448257]
[91.50546265 41.18661880]
[91.25212097 26.18876076]
[90.99877930 11.19089985]
[90.74543762 -3.80696082]
[77.08602142 -8.17040253]
[65.46124268 -16.52913666]
[57.00150681 -28.05400658]
[52.52439117 -41.60878372]
[52.45565033 -55.86218262]
[56.78874588 -69.41861725]
[65.08679199 -80.95484924]
[76.52658081 -89.34912872]
[89.98020935 -93.79028320]
[89.98020935 -108.79028320]
[89.98020935 -123.79028320]
[79.69844055 -136.10551453]
[83.05731964 -151.79299927]
[97.48020935 -158.81866455]
[111.90309143 -151.79299927]
[115.26197815 -136.10551453]
[104.98020935 -123.79028320]
[104.98020935 -108.79028320]
[104.98020935 -93.79028320]
[119.83315277 -88.59761810]
[132.03332520 -78.61894989]
[140.09609985 -65.04485321]
[143.03222656 -49.50487518]
[140.46914673 -33.87185669]
[132.69822693 -20.03625679]
[120.64170837 -9.67753696]
[105.74329376 -4.06030273]
[105.99663544 10.93755722]
[106.24997711 25.93541718]
[106.50331879 40.93327713]
[106.75666046 55.93113708]
[141.84852600 61.41150284]
[169.08958435 95.07788086]
[181.40103149 86.50885773]
[193.71247864 77.93983459]
[206.02394104 69.37081146]
[203.55267334 54.30908585]
[207.86941528 39.66912460]
[218.11708069 28.35770226]
[232.26097107 22.62071228]
[247.49281311 23.59723663]
[260.78833008 31.09338570]
[269.50765991 43.62079620]
[271.91958618 58.69213486]
[267.54522705 73.31498718]
[257.25311279 84.58596802]
[243.08673096 90.26721191]
[227.85884094 89.23071289]
[214.59295654 81.68226624]
[202.28150940 90.25128937]
[189.97004700 98.82031250]
[177.65859985 107.38933563]
[176.83685303 114.84417725]
[191.74937439 113.22657776]
[206.66189575 111.60897827]
[221.57443237 109.99137878]
[236.48695374 108.37377167]
[251.39947510 106.75617218]
[266.31201172 105.13857269]
[279.10604858 97.30835724]
[293.87014771 94.65859222]
[308.58862305 97.55104065]
[321.25204468 105.59080505]
[330.13153076 117.68025208]
[334.01480103 132.16888428]
[332.37167358 147.07861328]
[325.42651367 160.37390137]
[314.12750244 170.23960876]
[300.01721191 175.32879639]
[285.02209473 174.94668579]
[271.18933105 169.14543152]
[260.40621948 158.71534729]
[246.20408630 153.88844299]
[232.00193787 149.06152344]
[217.79978943 144.23460388]
[203.59764099 139.40769958]
[189.39550781 134.58078003]
[175.19335938 129.75387573]
[174.37161255 137.20870972]
[184.52101135 148.25360107]
[194.67042542 159.29849243]
[204.81983948 170.34336853]
[214.96925354 181.38825989]
[230.13850403 188.95989990]
[227.06204224 205.63238525]
[210.18946838 207.29154968]
[203.92436218 191.53767395]
[193.77494812 180.49278259]
[183.62554932 169.44789124]
[173.47613525 158.40301514]
[163.32672119 147.35812378]
[156.80009460 151.05314636]
[143.74684143 158.44317627]
[137.22021484 162.13818359]
[141.46829224 176.52407837]
[145.71638489 190.90995789]
[157.96867371 201.81010437]
[154.39048767 217.81411743]
[138.66273499 222.45845032]
[126.96478271 210.96540833]
[131.33049011 195.15805054]
[127.08240509 180.77215576]
[122.83432770 166.38626099]
[108.00730133 168.65768433]
[108.26064301 183.65554810]
[110.77642059 202.87326050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[10 72]
[11 71]
[12 70]
[13 69]
[16 66]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[23 60]
[24 59]
[25 56]
[26 55]
[27 54]
[28 52]
[29 51]
[30 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[75 110]
[76 109]
[77 108]
[78 107]
[79 106]
[88 98]
[89 97]
[90 96]
[112 131]
[113 130]
[114 129]
[115 128]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
