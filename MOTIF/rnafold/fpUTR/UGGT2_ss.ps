%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGGAGCGGGACACGCAUGCGCCGGUCUGGACCCGGCACCCAGUAACGGACUCGAGCUCCUCCCACCGGAAGUGGGCAGCCGCGCAGCGGGAAGAGCCGGCCGAAGCGUGGCGGCCACAGACUGUGGGUACCGGGUCCGAGGGACUCGCGCUUUUCUCUCCGUGCC\
) } def
/len { sequence length } bind def

/coor [
[45.23172760 715.92645264]
[51.27806854 700.08734131]
[51.27806854 685.08734131]
[51.27806854 670.08734131]
[51.27806854 655.08734131]
[48.12158203 648.37292480]
[51.41838455 639.81237793]
[51.69395065 624.81494141]
[51.96951294 609.81744385]
[52.24507523 594.82000732]
[44.74288940 581.95275879]
[52.73240662 568.29705811]
[53.00796890 553.29956055]
[53.28353119 538.30206299]
[53.55909348 523.30462646]
[47.83774948 520.01940918]
[43.39248657 515.07458496]
[40.69113541 508.94232178]
[40.03292847 502.22186279]
[41.51568604 495.58102417]
[45.02285385 489.68991089]
[50.23199844 485.15310669]
[56.64424515 482.44793701]
[58.56797791 467.57180786]
[60.49171448 452.69567871]
[62.41544724 437.81954956]
[56.37430191 424.20507812]
[65.81756592 411.51116943]
[67.74130249 396.63504028]
[69.66503906 381.75891113]
[71.58877563 366.88278198]
[73.51250458 352.00665283]
[75.02561188 337.08316040]
[76.12693024 322.12365723]
[77.22825623 307.16415405]
[78.32957458 292.20462036]
[79.43089294 277.24511719]
[80.53221893 262.28558350]
[81.63353729 247.32608032]
[82.73486328 232.36656189]
[75.95289612 219.10556030]
[84.68254089 205.91072083]
[85.78386688 190.95120239]
[86.88518524 175.99168396]
[87.98650360 161.03216553]
[89.08782959 146.07266235]
[76.43327332 142.01057434]
[65.20257568 134.48597717]
[56.33829498 123.97948456]
[50.62497330 111.22651672]
[48.62084198 97.16641998]
[50.60569382 82.87342072]
[37.89959717 74.90127563]
[25.19350052 66.92913055]
[10.36901283 71.90593719]
[-4.16725397 66.14130402]
[-11.55171967 52.35712051]
[-8.29766464 37.06185532]
[4.05844498 27.47746468]
[19.68243217 28.12940216]
[31.19712830 38.70984650]
[33.16564560 54.22303391]
[45.87174225 62.19517899]
[58.57783890 70.16732788]
[69.03729248 59.41558838]
[60.71806335 46.93398285]
[52.39883804 34.45237732]
[37.46735764 27.67130280]
[36.14371490 11.32566166]
[49.78956223 2.23044634]
[64.36721802 9.74203587]
[64.88043976 26.13315010]
[73.19966888 38.61475372]
[81.51889801 51.09635925]
[99.39350891 50.19043732]
[115.65424347 55.31544113]
[122.79345703 42.12333298]
[129.93266296 28.93122864]
[137.07188416 15.73912239]
[131.76329041 3.33559537]
[134.53927612 -9.66837597]
[144.16380310 -18.55852890]
[156.96049500 -20.24479485]
[164.34085083 -33.30352020]
[171.72120667 -46.36224747]
[179.10156250 -59.42097473]
[186.48191833 -72.47969818]
[193.86227417 -85.53842926]
[201.24263000 -98.59715271]
[197.23579407 -113.64982605]
[204.90655518 -126.78810120]
[219.28166199 -130.51524353]
[226.66201782 -143.57397461]
[234.04237366 -156.63269043]
[226.17207336 -169.82183838]
[225.96679688 -185.17936707]
[233.48178101 -198.57415771]
[246.69554138 -206.40309143]
[262.05361938 -206.56022644]
[275.42480469 -199.00328064]
[283.21228027 -185.76506042]
[283.32125854 -170.40653992]
[275.72244263 -157.05912781]
[262.45986938 -149.31318665]
[247.10110474 -149.25233459]
[239.72074890 -136.19361877]
[232.34039307 -123.13488770]
[236.56242371 -108.89725494]
[229.26371765 -95.54871368]
[214.30136108 -91.21679688]
[206.92100525 -78.15807343]
[199.54064941 -65.09934235]
[192.16029358 -52.04061890]
[184.77993774 -38.98189163]
[177.39958191 -25.92316437]
[170.01922607 -12.86443806]
[175.21478271 3.11267066]
[167.10406494 18.20984840]
[150.26399231 22.87833214]
[143.12477112 36.07043839]
[135.98556519 49.26254654]
[128.84635925 62.45465088]
[139.79267883 74.34247589]
[146.10356140 89.21913910]
[147.04386902 105.35166168]
[142.50404358 120.86077118]
[133.01293945 133.93981934]
[119.67617798 143.06521606]
[104.04734039 147.17398071]
[102.94602203 162.13349915]
[101.84470367 177.09300232]
[100.74337769 192.05252075]
[99.64205933 207.01203918]
[106.34524536 221.34304810]
[97.69437408 233.46788025]
[96.59305573 248.42739868]
[95.49172974 263.38690186]
[94.39041138 278.34643555]
[93.28909302 293.30593872]
[92.18776703 308.26547241]
[91.08644867 323.22497559]
[89.98512268 338.18447876]
[92.29446411 342.95053101]
[92.49808502 347.65109253]
[90.98008728 351.48675537]
[88.38864136 353.93038940]
[86.46490479 368.80651855]
[84.54116821 383.68264771]
[82.61743164 398.55877686]
[80.69369507 413.43490601]
[86.59724426 428.11343384]
[77.29158020 439.74328613]
[75.36784363 454.61941528]
[73.44410706 469.49554443]
[71.52037048 484.37167358]
[82.83161163 505.37271118]
[68.55656433 523.58020020]
[68.28099823 538.57763672]
[68.00543976 553.57513428]
[67.72987366 568.57257080]
[75.21234894 582.51257324]
[67.24254608 595.09558105]
[66.96697998 610.09301758]
[66.69141388 625.09051514]
[66.41585541 640.08795166]
[66.27806854 655.08734131]
[66.27806854 670.08734131]
[66.27806854 685.08734131]
[66.27806854 700.08734131]
[72.32440948 715.92645264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[7 165]
[8 164]
[9 163]
[10 162]
[12 160]
[13 159]
[14 158]
[15 157]
[23 155]
[24 154]
[25 153]
[26 152]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[52 64]
[53 63]
[54 62]
[65 74]
[66 73]
[67 72]
[76 122]
[77 121]
[78 120]
[79 119]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[92 107]
[93 106]
[94 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
