%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HGSNAT)
} def

/sequence { (\
AGGGCGGGGCGCAGCGGGCAGGCAAGGGCGGCCGAGCGGGCGGCGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 33 0.007293037 ubox
3 32 0.007286964 ubox
3 33 0.012083503 ubox
4 10 0.067488674 ubox
4 12 0.259524528 ubox
4 15 0.082416592 ubox
4 19 0.073923773 ubox
4 23 0.148469476 ubox
4 29 0.024499321 ubox
4 32 0.012104647 ubox
4 37 0.096029533 ubox
4 41 0.015240593 ubox
4 44 0.276282308 ubox
4 48 0.765104117 ubox
5 9 0.067716147 ubox
5 11 0.259824216 ubox
5 14 0.082494808 ubox
5 16 0.028841936 ubox
5 18 0.073897378 ubox
5 22 0.148534260 ubox
5 28 0.024526636 ubox
5 30 0.008660374 ubox
5 31 0.012054480 ubox
5 34 0.020666372 ubox
5 36 0.096122010 ubox
5 38 0.006494705 ubox
5 40 0.015162797 ubox
5 42 0.047090425 ubox
5 43 0.274670383 ubox
5 45 0.222348192 ubox
5 47 0.773573045 ubox
6 10 0.243106996 ubox
6 15 0.029896235 ubox
6 29 0.008445504 ubox
6 33 0.018903335 ubox
6 37 0.006659708 ubox
6 41 0.056021881 ubox
6 44 0.222914512 ubox
7 32 0.016404703 ubox
7 33 0.097546282 ubox
8 32 0.098098877 ubox
8 33 0.036220202 ubox
9 15 0.071783364 ubox
9 19 0.151633858 ubox
9 23 0.041122291 ubox
9 29 0.024535490 ubox
9 32 0.036232397 ubox
9 37 0.011003861 ubox
9 41 0.158766192 ubox
9 44 0.398782319 ubox
9 48 0.048038572 ubox
10 14 0.071323439 ubox
10 16 0.022987999 ubox
10 18 0.151790298 ubox
10 22 0.041030386 ubox
10 28 0.024584594 ubox
10 30 0.104387110 ubox
10 31 0.026352128 ubox
10 36 0.011002815 ubox
10 38 0.204941613 ubox
10 40 0.158791332 ubox
10 42 0.802445557 ubox
10 43 0.284493879 ubox
10 45 0.263647403 ubox
10 47 0.047702423 ubox
11 15 0.021896433 ubox
11 19 0.056702442 ubox
11 23 0.013334819 ubox
11 29 0.107415056 ubox
11 37 0.205920325 ubox
11 41 0.851887667 ubox
11 44 0.269472987 ubox
11 48 0.056811152 ubox
12 18 0.056795306 ubox
12 22 0.013334445 ubox
12 28 0.107257205 ubox
12 36 0.205694127 ubox
12 40 0.851326376 ubox
12 43 0.268482559 ubox
12 47 0.057186589 ubox
14 23 0.262714768 ubox
14 29 0.008930990 ubox
14 32 0.011691828 ubox
14 37 0.858363614 ubox
14 41 0.267296176 ubox
14 44 0.094293252 ubox
14 48 0.021359800 ubox
15 22 0.263164994 ubox
15 28 0.008951673 ubox
15 31 0.011685463 ubox
15 34 0.130209905 ubox
15 36 0.858185725 ubox
15 38 0.091842427 ubox
15 40 0.267902053 ubox
15 42 0.008963362 ubox
15 43 0.094283266 ubox
15 45 0.037881352 ubox
15 47 0.021493583 ubox
16 33 0.117886217 ubox
16 37 0.091509791 ubox
16 41 0.008734214 ubox
16 44 0.038436391 ubox
17 32 0.101073859 ubox
17 33 0.879436824 ubox
18 29 0.029243686 ubox
18 32 0.882561268 ubox
18 37 0.270260846 ubox
18 41 0.104535223 ubox
18 44 0.012202731 ubox
18 48 0.016946453 ubox
19 28 0.029339996 ubox
19 31 0.884161872 ubox
19 36 0.270394215 ubox
19 40 0.104568476 ubox
19 43 0.012210134 ubox
19 47 0.017132602 ubox
21 33 0.282997491 ubox
22 29 0.885866773 ubox
22 32 0.283049325 ubox
22 37 0.106961512 ubox
22 41 0.008538503 ubox
22 44 0.007402730 ubox
22 48 0.124757087 ubox
23 28 0.884709203 ubox
23 31 0.282862597 ubox
23 36 0.106934273 ubox
23 40 0.008538785 ubox
23 43 0.007377683 ubox
23 47 0.126191097 ubox
26 33 0.107172738 ubox
27 32 0.107070069 ubox
27 33 0.005604851 ubox
28 32 0.005602200 ubox
28 37 0.009249385 ubox
28 44 0.320334131 ubox
28 48 0.039433082 ubox
29 36 0.009249921 ubox
29 42 0.015701775 ubox
29 43 0.320378727 ubox
29 45 0.009380203 ubox
29 47 0.039867192 ubox
30 41 0.017284714 ubox
30 44 0.007397811 ubox
31 41 0.320804335 ubox
31 44 0.059754721 ubox
31 48 0.020955043 ubox
32 39 0.018698572 ubox
32 40 0.320858978 ubox
32 43 0.060132222 ubox
32 47 0.021196722 ubox
33 38 0.020194464 ubox
33 39 0.320721017 ubox
33 42 0.060135416 ubox
33 46 0.021183742 ubox
34 41 0.059461240 ubox
36 44 0.047372933 ubox
36 48 0.008957586 ubox
37 43 0.047427397 ubox
37 45 0.016513093 ubox
37 47 0.009015250 ubox
38 44 0.021235043 ubox
40 48 0.075695594 ubox
41 47 0.076562065 ubox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
