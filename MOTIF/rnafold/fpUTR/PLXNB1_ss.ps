%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGGCCGACGCGGCUUUGUCUCCUUUGUUCCCGGCGGUGGCAGCGCCGCGCGGGAGGGGCGGGCAGCGGGCGCAGUUUUCCGCCCCUCGGUCUCCGGGUAACAGCUGCGGCUCCACCAGACCCGGGGAGAGGCCGCUGCGCGCGGAGCCCGAGCCCGGAGCGGCCGACGCCCGCCUCGGCGCGCACAUCCCGCGGGGCCCGGCCGGGUGGUGACUCCCACACGGGUCAUGCUGUUGUCUCCUGAUCCAGCCGG\
CCCUGCCAGGUGACC\
) } def
/len { sequence length } bind def

/coor [
[184.47045898 212.90017700]
[174.85829163 201.38470459]
[165.24610901 189.86923218]
[155.63392639 178.35377502]
[146.02174377 166.83830261]
[136.40956116 155.32283020]
[126.79737854 143.80737305]
[117.18520355 132.29190063]
[107.57302094 120.77643585]
[100.14546967 121.81640625]
[102.22518921 136.67153931]
[87.37002563 138.75102234]
[85.29037476 123.89634705]
[77.86283112 124.93632507]
[71.78296661 138.64891052]
[65.70310974 152.36151123]
[64.81052399 169.29194641]
[48.29464722 173.12106323]
[40.04312897 158.31063843]
[51.99050903 146.28164673]
[58.07037354 132.56906128]
[64.15023041 118.85646057]
[58.50546646 113.91818237]
[48.62890625 125.20771027]
[38.75234604 136.49723816]
[28.87560844 147.78662109]
[17.58638191 137.90971375]
[27.46281242 126.62068176]
[37.33937454 115.33114624]
[47.21593475 104.04161835]
[41.57117081 99.10334015]
[28.78838730 106.95193481]
[16.00560379 114.80052948]
[3.22282028 122.64912415]
[-9.55996323 130.49771118]
[-22.29703903 138.42027283]
[-34.98797989 146.41651917]
[-47.67892075 154.41278076]
[-60.36986160 162.40902710]
[-73.06080627 170.40527344]
[-85.75174713 178.40151978]
[-92.91368103 193.15411377]
[-109.28790283 194.05793762]
[-118.03001404 180.18322754]
[-110.14688110 165.80310059]
[-93.74799347 165.71058655]
[-81.05705261 157.71434021]
[-68.36611176 149.71807861]
[-55.67517090 141.72183228]
[-42.98423004 133.72558594]
[-30.29328918 125.72933197]
[-26.32380486 119.52730560]
[-17.40855789 117.71493530]
[-4.62577534 109.86634064]
[8.15700817 102.01774597]
[20.93979073 94.16915131]
[33.72257614 86.32055664]
[91.58741760 81.80463409]
[85.82709503 67.95478058]
[80.06676483 54.10491562]
[74.30644226 40.25505447]
[68.54611206 26.40519524]
[62.78578568 12.55533504]
[57.02545929 -1.29452515]
[51.26512909 -15.14438534]
[45.50480270 -28.99424553]
[31.17023849 -35.08998108]
[25.52574348 -49.21776581]
[31.42543602 -62.84601974]
[25.66510773 -76.69587708]
[19.90478134 -90.54573822]
[7.46117926 -100.31647491]
[9.71766472 -115.03916931]
[3.95733762 -128.88902283]
[-1.80298936 -142.73889160]
[-9.67251205 -129.96897888]
[-24.54812622 -128.04125977]
[-35.41273117 -138.38342285]
[-34.21984100 -153.33590698]
[-21.85293007 -161.82469177]
[-7.47000360 -157.56185913]
[-12.41832733 -171.72215271]
[-17.36665154 -185.88244629]
[-22.31497383 -200.04275513]
[-35.02133942 -204.44525146]
[-42.76846313 -215.19819641]
[-42.91717529 -228.25604248]
[-35.63683701 -238.86206055]
[-40.42067719 -253.07876587]
[-45.20451736 -267.29547119]
[-49.98835754 -281.51217651]
[-54.77219772 -295.72891235]
[-66.50665283 -306.34085083]
[-63.23240280 -320.87109375]
[-68.01624298 -335.08779907]
[-72.80007935 -349.30453491]
[-77.58392334 -363.52124023]
[-82.36775970 -377.73794556]
[-94.10221863 -388.34988403]
[-90.82796478 -402.88015747]
[-95.61180878 -417.09686279]
[-106.77839661 -423.50488281]
[-110.48212433 -435.41665649]
[-105.26304626 -446.30435181]
[-109.88175964 -460.57556152]
[-114.50048065 -474.84677124]
[-119.11919403 -489.11798096]
[-130.72984314 -499.86523438]
[-127.28736877 -514.35656738]
[-131.90608215 -528.62774658]
[-145.69935608 -535.86541748]
[-150.18009949 -550.40423584]
[-143.19512939 -563.50939941]
[-147.81384277 -577.78063965]
[-152.43255615 -592.05181885]
[-157.05126953 -606.32305908]
[-162.65135193 -613.49279785]
[-161.63977051 -620.78656006]
[-166.09272766 -635.11035156]
[-180.19668579 -642.24151611]
[-185.04771423 -657.28289795]
[-177.76779175 -671.31066895]
[-162.67596436 -676.00244141]
[-148.72595215 -668.57458496]
[-144.19404602 -653.43402100]
[-151.76893616 -639.56329346]
[-147.31597900 -625.23950195]
[-142.78005981 -610.94177246]
[-138.16134644 -596.67053223]
[-133.54263306 -582.39935303]
[-128.92391968 -568.12811279]
[-115.58502197 -561.60052490]
[-110.69768524 -547.19329834]
[-117.63487244 -533.24645996]
[-113.01615906 -518.97528076]
[-101.73587036 -509.24880981]
[-104.84797668 -493.73669434]
[-100.22926331 -479.46548462]
[-95.61054993 -465.19427490]
[-90.99183655 -450.92306519]
[-77.34820557 -439.86166382]
[-81.39509583 -421.88070679]
[-76.61125946 -407.66397095]
[-65.21897888 -398.06890869]
[-68.15105438 -382.52178955]
[-63.36721039 -368.30508423]
[-58.58337021 -354.08834839]
[-53.79953003 -339.87164307]
[-49.01568985 -325.65493774]
[-37.62340927 -316.05987549]
[-40.55548859 -300.51272583]
[-35.77164841 -286.29602051]
[-30.98780632 -272.07931519]
[-26.20396614 -257.86260986]
[-21.42012596 -243.64588928]
[-6.04030561 -236.80160522]
[-0.27207795 -220.62709045]
[-8.15467453 -204.99107361]
[-3.20635104 -190.83078003]
[1.74197257 -176.67047119]
[6.69029617 -162.51017761]
[12.04687119 -148.49920654]
[17.80719757 -134.64935303]
[23.56752586 -120.79949188]
[35.59910965 -112.01938629]
[33.75464249 -96.30606842]
[39.51496887 -82.45620728]
[45.27529526 -68.60634613]
[59.09941483 -63.18146896]
[65.13850403 -49.21780014]
[59.35466385 -34.75457382]
[65.11499023 -20.90471268]
[70.87532043 -7.05485201]
[76.63564301 6.79500818]
[82.39597321 20.64486885]
[88.15629578 34.49472809]
[93.91662598 48.34458923]
[99.67695618 62.19445038]
[105.43727875 76.04431152]
[119.00524139 82.44043732]
[133.35459900 78.07057190]
[147.70396423 73.70070648]
[159.98411560 59.95695114]
[176.91511536 64.63069916]
[191.21286011 60.09478378]
[205.51060486 55.55886841]
[211.30157471 41.03307343]
[225.09912109 33.67360306]
[240.38845825 36.95537567]
[249.95043945 49.32883453]
[249.27018738 64.95161438]
[238.66888428 76.44712067]
[223.15216064 78.38751221]
[210.04652405 69.85661316]
[195.74877930 74.39252472]
[181.45103455 78.92844391]
[175.62438965 89.50346375]
[163.77847290 93.41263580]
[152.07383728 88.05006409]
[137.72447205 92.41993713]
[123.37510681 96.78980255]
[119.08848572 111.16425323]
[128.70066833 122.67972565]
[138.31285095 134.19519043]
[147.92503357 145.71066284]
[157.53721619 157.22612000]
[167.14938354 168.74159241]
[176.76156616 180.25706482]
[186.37374878 191.77252197]
[195.98593140 203.28799438]
[205.66470337 214.74754333]
[215.40972900 226.15081787]
[225.15475464 237.55407715]
[240.00231934 243.01853943]
[242.38879395 257.72070312]
[252.13381958 269.12399292]
[261.87884521 280.52725220]
[275.48019409 278.42196655]
[288.24768066 283.26504517]
[296.89291382 293.69497681]
[299.24566650 306.92636108]
[294.79809570 319.49337769]
[304.41027832 331.00885010]
[312.28198242 335.56985474]
[314.06619263 342.71395874]
[323.54425049 354.34008789]
[333.02227783 365.96621704]
[342.50033569 377.59231567]
[351.97836304 389.21844482]
[364.68524170 391.29000854]
[372.34155273 401.13827515]
[371.28491211 413.16592407]
[380.62753296 424.90112305]
[389.97018433 436.63635254]
[399.31280518 448.37155151]
[411.99481201 450.59027100]
[419.53643799 460.52664185]
[418.34045410 472.54122925]
[427.54641724 484.38394165]
[436.75238037 496.22668457]
[452.13796997 501.90255737]
[454.64828491 518.10839844]
[441.70089722 528.17309570]
[426.61499023 521.74285889]
[424.90963745 505.43264771]
[415.70367432 493.58993530]
[406.49771118 481.74719238]
[389.90106201 475.99789429]
[387.57760620 457.71420288]
[378.23495483 445.97897339]
[368.89233398 434.24377441]
[359.54971313 422.50854492]
[342.88751221 416.95205688]
[340.35226440 398.69650269]
[330.87420654 387.07037354]
[321.39617920 375.44424438]
[311.91812134 363.81814575]
[302.44009399 352.19201660]
[292.89480591 340.62103271]
[283.28262329 329.10556030]
[266.93054199 330.72640991]
[252.69859314 322.18435669]
[246.31130981 306.68371582]
[250.47557068 290.27227783]
[240.73054504 278.86901855]
[230.98551941 267.46572876]
[216.83499146 262.81692505]
[213.75148010 247.29910278]
[204.00645447 235.89584351]
[194.26142883 224.49256897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[14 22]
[15 21]
[16 20]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[69 168]
[70 167]
[71 166]
[73 164]
[74 163]
[75 162]
[81 161]
[82 160]
[83 159]
[84 158]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[100 143]
[101 142]
[104 140]
[105 139]
[106 138]
[107 137]
[109 135]
[110 134]
[113 131]
[114 130]
[115 129]
[116 128]
[118 127]
[119 126]
[180 201]
[181 200]
[182 199]
[184 196]
[185 195]
[186 194]
[211 270]
[212 269]
[213 268]
[215 266]
[216 265]
[217 264]
[222 260]
[223 259]
[225 258]
[226 257]
[227 256]
[228 255]
[229 254]
[232 252]
[233 251]
[234 250]
[235 249]
[238 247]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
