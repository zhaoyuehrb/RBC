%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUGGGUUGACGUAGCCCGGAAGGGGAAUACUUCCAAGUUGUAGUGUUGUUGUUUUCAGCCUGCUGCUGCUGCUGCUGUUGCGGCUAGGGGAACCGUCGUGGGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[85.20574188 383.27835083]
[70.74691772 378.96499634]
[57.89765167 371.05560303]
[47.53402710 360.08938599]
[40.36264801 346.81408691]
[36.87247467 332.13479614]
[37.30147552 317.05242920]
[41.62039566 302.59527588]
[49.53476715 289.74905396]
[60.50497437 279.38964844]
[73.78304291 272.22341919]
[88.46366882 268.73889160]
[88.88436127 253.74481201]
[89.30505371 238.75070190]
[89.72574615 223.75660706]
[77.83303833 214.82904053]
[73.42554474 200.44023132]
[78.39392853 186.04687500]
[91.03096008 177.23712158]
[91.45165253 162.24302673]
[91.87234497 147.24893188]
[82.03498840 135.92521667]
[67.12931061 134.24575806]
[52.22362518 132.56628418]
[37.31794357 130.88681030]
[22.41225815 129.20735168]
[11.20805168 140.11605835]
[-4.39057875 141.21911621]
[-17.01843643 131.99571228]
[-20.71303177 116.80084229]
[-13.72989082 102.80906677]
[0.63376039 96.62686920]
[15.59584618 101.17330170]
[24.09172630 114.30166626]
[38.99740982 115.98113251]
[53.90309143 117.66059875]
[68.80877686 119.34006500]
[83.71446228 121.01953888]
[76.23970032 96.74101257]
[91.94156647 80.20188141]
[91.52087402 65.20777893]
[91.10018158 50.21368027]
[82.97888184 36.63594055]
[90.35618591 23.69667244]
[89.93549347 8.70257282]
[89.51479340 -6.29152679]
[89.09410095 -21.28562546]
[85.68508911 -29.91885757]
[88.87783051 -36.70484543]
[88.87783051 -51.70484543]
[88.87783051 -66.70484161]
[88.87783051 -81.70484161]
[76.78324890 -91.61721802]
[73.94062805 -106.99426270]
[81.69216919 -120.57540894]
[96.37783051 -125.94805908]
[111.06349182 -120.57540894]
[118.81503296 -106.99426270]
[115.97241974 -91.61721802]
[103.87783051 -81.70484161]
[103.87783051 -66.70484161]
[103.87783051 -51.70484543]
[103.87783051 -36.70484543]
[104.08820343 -21.70631981]
[104.50889587 -6.71222067]
[104.92958832 8.28187847]
[105.35028076 23.27597809]
[113.44149017 35.78124237]
[106.09427643 49.79298782]
[106.51496887 64.78708649]
[106.93566895 79.78118896]
[123.74071503 96.60123444]
[115.33805847 121.72058105]
[130.24374390 120.04111481]
[145.12440491 118.15277100]
[159.97711182 116.05591583]
[174.82983398 113.95906067]
[189.68255615 111.86220551]
[204.53526306 109.76535034]
[217.11125183 99.24030304]
[232.41923523 105.12227631]
[234.71168518 121.36040497]
[221.63031006 131.25028992]
[206.63212585 124.61806488]
[191.77940369 126.71492004]
[176.92669678 128.81178284]
[162.07397461 130.90863037]
[147.22125244 133.00549316]
[140.94821167 137.11549377]
[131.92320251 134.94680786]
[117.01752472 136.62626648]
[106.86644745 147.66961670]
[106.44575500 162.66372681]
[106.02506256 177.65782166]
[118.14823914 187.16227722]
[122.30176544 201.81156921]
[117.09442139 215.93061829]
[104.71984863 224.17730713]
[104.29915619 239.17140198]
[103.87846375 254.16549683]
[103.45777130 269.15960693]
[117.91991425 273.46176147]
[130.77528381 281.36126709]
[141.14738464 292.31945801]
[148.32901001 305.58923340]
[151.83050537 320.26580811]
[151.41316223 335.34851074]
[147.10540771 349.80899048]
[139.20095825 362.66131592]
[128.23875427 373.02917480]
[114.96621704 380.20568848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 101]
[13 100]
[14 99]
[15 98]
[19 94]
[20 93]
[21 92]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[47 64]
[49 63]
[50 62]
[51 61]
[52 60]
[73 91]
[74 90]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
