%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLIN5)
} def

/sequence { (\
GACAGCUGGUGUCUGAAGCCGCUCGCGCCCAGGGUGACCCUGUUUGCAGCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.842730825 ubox
1 24 0.105208336 ubox
1 44 0.004478705 ubox
2 10 0.018798826 ubox
2 12 0.844302526 ubox
2 23 0.081264503 ubox
2 43 0.005155689 ubox
3 9 0.019417104 ubox
3 11 0.844564786 ubox
3 15 0.183875000 ubox
3 42 0.005235952 ubox
4 10 0.828595909 ubox
4 14 0.184579920 ubox
4 23 0.253466460 ubox
4 41 0.005192617 ubox
5 12 0.039445987 ubox
5 13 0.182835382 ubox
5 19 0.211576906 ubox
5 22 0.282418644 ubox
5 26 0.049565087 ubox
5 28 0.003485674 ubox
5 40 0.005084601 ubox
5 47 0.009036503 ubox
5 50 0.056665857 ubox
6 11 0.180983719 ubox
6 18 0.212068862 ubox
6 21 0.276214369 ubox
6 25 0.049587872 ubox
6 27 0.003491524 ubox
6 32 0.007085523 ubox
6 46 0.009029905 ubox
6 49 0.056705727 ubox
7 15 0.009146046 ubox
7 17 0.210484026 ubox
7 21 0.070183666 ubox
7 31 0.007256429 ubox
7 48 0.054189230 ubox
7 51 0.003903259 ubox
8 14 0.039041518 ubox
8 20 0.442394214 ubox
8 23 0.052853782 ubox
8 24 0.011323718 ubox
8 29 0.028839219 ubox
8 30 0.007242015 ubox
8 39 0.003964204 ubox
8 47 0.034452268 ubox
8 50 0.003465019 ubox
9 13 0.040140644 ubox
9 19 0.442753113 ubox
9 22 0.056061833 ubox
9 26 0.017730465 ubox
9 28 0.038122907 ubox
9 29 0.008800369 ubox
9 38 0.003989199 ubox
9 52 0.036852620 ubox
10 18 0.440003114 ubox
10 21 0.056025648 ubox
10 25 0.017737934 ubox
10 27 0.038187460 ubox
10 37 0.003845528 ubox
10 46 0.003465855 ubox
10 48 0.003439944 ubox
10 51 0.036928602 ubox
10 53 0.004101867 ubox
11 19 0.014097939 ubox
11 20 0.055470131 ubox
11 22 0.003485678 ubox
11 24 0.017706117 ubox
11 26 0.038127334 ubox
11 28 0.010834322 ubox
11 47 0.003456839 ubox
11 50 0.036624678 ubox
11 52 0.007233764 ubox
12 18 0.016468682 ubox
12 21 0.003471136 ubox
12 25 0.035242046 ubox
12 27 0.010784542 ubox
12 46 0.003369473 ubox
12 49 0.011755733 ubox
12 51 0.007179375 ubox
13 32 0.003544799 ubox
13 49 0.034668293 ubox
14 21 0.024770986 ubox
14 25 0.017162849 ubox
14 31 0.003581351 ubox
14 48 0.035006816 ubox
14 51 0.007177504 ubox
14 53 0.016176941 ubox
15 20 0.104871636 ubox
15 24 0.047025459 ubox
15 30 0.003588019 ubox
15 47 0.034306441 ubox
15 50 0.005132639 ubox
15 52 0.028862462 ubox
16 23 0.044664305 ubox
16 45 0.030466263 ubox
17 23 0.010083638 ubox
17 41 0.003628172 ubox
17 44 0.030577658 ubox
17 45 0.004570558 ubox
18 22 0.012535714 ubox
18 26 0.018407677 ubox
18 28 0.007888333 ubox
18 40 0.003700826 ubox
18 43 0.030279034 ubox
18 44 0.004633648 ubox
18 47 0.004074821 ubox
18 50 0.036840413 ubox
19 25 0.018413383 ubox
19 27 0.007294472 ubox
19 42 0.029717699 ubox
19 46 0.004084581 ubox
19 49 0.036631429 ubox
20 27 0.005087857 ubox
20 36 0.021274694 ubox
20 42 0.004941847 ubox
20 53 0.045967534 ubox
21 26 0.006192767 ubox
21 28 0.016955674 ubox
21 35 0.021358987 ubox
21 41 0.005357574 ubox
21 47 0.031256479 ubox
21 50 0.948352120 ubox
21 52 0.032780544 ubox
22 27 0.016963727 ubox
22 34 0.021370271 ubox
22 46 0.031228728 ubox
22 49 0.949655503 ubox
23 33 0.021319064 ubox
23 37 0.014035678 ubox
23 48 0.943805186 ubox
24 32 0.021317367 ubox
24 36 0.014302924 ubox
24 46 0.023087488 ubox
24 53 0.016976342 ubox
25 35 0.014259804 ubox
25 43 0.019434393 ubox
25 45 0.021616649 ubox
25 47 0.963452900 ubox
25 50 0.239884696 ubox
25 52 0.016798637 ubox
26 34 0.014257407 ubox
26 36 0.016207885 ubox
26 42 0.016679355 ubox
26 46 0.963565397 ubox
26 49 0.240054839 ubox
27 35 0.016318122 ubox
27 41 0.008436567 ubox
27 43 0.020197881 ubox
27 45 0.901221663 ubox
27 47 0.253655838 ubox
27 50 0.017138748 ubox
28 34 0.016339500 ubox
28 42 0.017986415 ubox
28 46 0.254325945 ubox
28 49 0.017106203 ubox
29 33 0.016224364 ubox
30 42 0.996523476 ubox
31 41 0.998928241 ubox
32 39 0.021009467 ubox
32 40 0.999157193 ubox
32 41 0.013273875 ubox
33 38 0.029016646 ubox
33 39 0.998900853 ubox
33 40 0.014701829 ubox
34 38 0.982759179 ubox
34 39 0.015750416 ubox
34 52 0.005626339 ubox
35 51 0.005631867 ubox
36 50 0.005628057 ubox
40 49 0.006486171 ubox
41 48 0.006525604 ubox
42 47 0.006526357 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
