%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCAGGCGGGGGAGCGGGCGGGAAGCAGUGGGAGCGCGCGUGCGCGCGGCCGUGCAGCCUGGGCAGUGGGUCCUGCCUGUGACGCGCGGCGGCGGUCGGUCCUGCCUGUAACGGCGGCGGCGGCUGCUGCUCCGGACACCUGCGGCGGCGGCGGCGACCCCGCGGCGGGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-171.70396423 165.31098938]
[-179.37005615 164.73570251]
[-186.57241821 162.12582397]
[-192.78355408 157.68798828]
[-197.55274963 151.76210022]
[-200.53872681 144.79536438]
[-215.53816223 144.92553711]
[-230.53759766 145.05570984]
[-245.53703308 145.18588257]
[-260.53646851 145.31605530]
[-275.53591919 145.44622803]
[-290.53533936 145.57640076]
[-305.53479004 145.70658875]
[-320.53421021 145.83676147]
[-335.53366089 145.96693420]
[-347.55065918 158.66181946]
[-364.69351196 158.74974060]
[-376.37097168 146.66389465]
[-391.36587524 147.05438232]
[-400.74603271 161.11402893]
[-416.49835205 166.76564026]
[-432.35925293 161.97204590]
[-442.14639282 148.80828857]
[-457.13226318 149.45895386]
[-472.11816406 150.10963440]
[-487.10403442 150.76031494]
[-497.75408936 162.12754822]
[-512.96118164 162.57395935]
[-523.73248291 152.35070801]
[-538.71832275 153.00137329]
[-553.70422363 153.65205383]
[-562.16864014 157.15872192]
[-568.95538330 154.18170166]
[-583.95031738 154.57217407]
[-598.94519043 154.96266174]
[-609.79095459 166.14334106]
[-625.00347900 166.32574463]
[-635.59570312 155.91708374]
[-650.59063721 156.30757141]
[-665.58557129 156.69805908]
[-680.58044434 157.08854675]
[-695.57537842 157.47903442]
[-709.26892090 166.50227356]
[-723.80682373 158.91401672]
[-724.23376465 142.52043152]
[-710.11047363 134.18582153]
[-695.96588135 142.48411560]
[-680.97094727 142.09362793]
[-665.97601318 141.70314026]
[-650.98114014 141.31265259]
[-635.98620605 140.92216492]
[-625.95007324 129.97633362]
[-610.74865723 129.36671448]
[-599.33569336 139.96774292]
[-584.34075928 139.57727051]
[-569.34588623 139.18678284]
[-554.35491943 138.66618347]
[-539.36901855 138.01550293]
[-524.38311768 137.36482239]
[-514.53851318 126.24643707]
[-499.34994507 125.37307739]
[-487.75469971 135.77442932]
[-472.76882935 135.12376404]
[-457.78295898 134.47308350]
[-442.79705811 133.82240295]
[-436.48052979 122.04354095]
[-425.07354736 114.87221527]
[-411.50433350 114.27590942]
[-399.31939697 120.51770782]
[-391.75634766 132.05946350]
[-376.76144409 131.66897583]
[-369.27316284 121.16381073]
[-356.91433716 116.83303070]
[-344.13204956 120.47280121]
[-335.66381836 130.96749878]
[-320.66439819 130.83732605]
[-305.66494751 130.70715332]
[-290.66552734 130.57696533]
[-275.66607666 130.44679260]
[-260.66665649 130.31661987]
[-245.66720581 130.18644714]
[-230.66778564 130.05627441]
[-215.66835022 129.92610168]
[-200.66891479 129.79592896]
[-186.77418518 112.06681824]
[-164.05186462 110.29296112]
[-147.18452454 126.01399994]
[-132.31144714 124.06685638]
[-117.43835449 122.11972046]
[-102.56526947 120.17258453]
[-87.69218445 118.22544861]
[-74.37425995 106.81504822]
[-57.42446518 113.97934723]
[-42.58741379 111.77436829]
[-31.13577461 102.25022888]
[-16.34814453 107.87486267]
[-1.51109517 105.66988373]
[13.32595539 103.46490479]
[28.16300583 101.25992584]
[31.68958855 98.00306702]
[37.30770493 96.94433594]
[43.55236435 99.24519348]
[58.45700455 97.55648804]
[73.36164093 95.86778259]
[88.26628113 94.17907715]
[101.82089996 87.75472260]
[112.56467438 77.28708649]
[123.30844116 66.81945038]
[134.05221558 56.35181808]
[144.79598999 45.88418198]
[144.75108337 30.07995796]
[155.95368958 18.93199348]
[171.75750732 19.05418015]
[182.78640747 30.37402534]
[182.49713135 46.17566681]
[171.06132507 57.08427048]
[155.26362610 56.62795639]
[144.51985168 67.09558868]
[133.77607727 77.56322479]
[123.03230286 88.03086090]
[112.28853607 98.49848938]
[114.40720367 105.69301605]
[118.64454651 120.08207703]
[120.76321411 127.27660370]
[135.46539307 130.25082397]
[150.52572632 125.40345764]
[161.46614075 135.51071167]
[176.16831970 138.48492432]
[190.87049866 141.45915222]
[205.57267761 144.43336487]
[220.27485657 147.40757751]
[234.97703552 150.38180542]
[249.67921448 153.35601807]
[264.38137817 156.33023071]
[279.08355713 159.30445862]
[294.14389038 154.45709229]
[305.08432007 164.56434631]
[319.78649902 167.53855896]
[334.48867798 170.51278687]
[349.85385132 164.78192139]
[362.32553101 175.43037415]
[359.07388306 191.50392151]
[343.44393921 196.46746826]
[331.51443481 185.21496582]
[316.81225586 182.24073792]
[302.11010742 179.26652527]
[288.10134888 184.32662964]
[276.10934448 174.00663757]
[261.40716553 171.03240967]
[246.70498657 168.05819702]
[232.00280762 165.08398438]
[217.30062866 162.10975647]
[202.59844971 159.13554382]
[187.89628601 156.16133118]
[173.19410706 153.18710327]
[158.49192810 150.21289062]
[144.48318481 155.27299500]
[132.49118042 144.95300293]
[117.78900146 141.97877502]
[89.95498657 109.08371735]
[75.05034637 110.77242279]
[60.14570999 112.46112823]
[45.24106979 114.14983368]
[30.36798668 116.09696960]
[15.53093624 118.30195618]
[0.69388580 120.50693512]
[-14.14316463 122.71191406]
[-26.65604782 132.39376831]
[-40.38243103 126.61141968]
[-55.21948242 128.81639099]
[-63.52711487 138.70584106]
[-75.94924927 140.22439575]
[-85.74504852 133.09852600]
[-100.61813354 135.04566956]
[-115.49121857 136.99281311]
[-130.36430359 138.93994141]
[-145.23738098 140.88708496]
[-147.41416931 148.40069580]
[-151.52023315 155.02728271]
[-157.23968506 160.28459167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 84]
[7 83]
[8 82]
[9 81]
[10 80]
[11 79]
[12 78]
[13 77]
[14 76]
[15 75]
[18 71]
[19 70]
[23 65]
[24 64]
[25 63]
[26 62]
[29 59]
[30 58]
[31 57]
[33 56]
[34 55]
[35 54]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[87 177]
[88 176]
[89 175]
[90 174]
[91 173]
[93 170]
[94 169]
[96 167]
[97 166]
[98 165]
[99 164]
[102 163]
[103 162]
[104 161]
[105 160]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[124 159]
[125 158]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
