%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEBPD)
} def

/sequence { (\
AGGUGACAGCCUCGCUUGGACGCAGAGCCCGGCCCGACGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.202478738 ubox
1 17 0.045884156 ubox
2 11 0.233441919 ubox
2 13 0.003641044 ubox
2 16 0.054784618 ubox
2 29 0.148837204 ubox
2 30 0.012454817 ubox
2 34 0.010465848 ubox
2 35 0.014062525 ubox
2 41 0.951104571 ubox
2 44 0.090371835 ubox
3 10 0.233675668 ubox
3 12 0.003199515 ubox
3 15 0.056117982 ubox
3 21 0.006609779 ubox
3 23 0.020190723 ubox
3 28 0.149203844 ubox
3 29 0.012321861 ubox
3 33 0.010493194 ubox
3 34 0.014064458 ubox
3 38 0.026011534 ubox
3 40 0.952270344 ubox
3 43 0.091121753 ubox
4 9 0.229904024 ubox
4 14 0.056112532 ubox
4 20 0.006544461 ubox
4 22 0.020209275 ubox
4 24 0.006814591 ubox
4 27 0.148407368 ubox
4 32 0.010346964 ubox
4 36 0.011026891 ubox
4 37 0.025713524 ubox
4 39 0.951495388 ubox
4 42 0.090391248 ubox
5 13 0.056552627 ubox
5 21 0.020064693 ubox
5 23 0.010051627 ubox
5 30 0.004069640 ubox
5 35 0.025125226 ubox
5 38 0.942120704 ubox
5 41 0.088695880 ubox
6 12 0.053848046 ubox
7 18 0.019992423 ubox
8 16 0.015725133 ubox
8 17 0.015152692 ubox
9 15 0.020656495 ubox
9 16 0.006468016 ubox
9 23 0.144605225 ubox
9 28 0.044329705 ubox
9 33 0.953632126 ubox
9 40 0.064277181 ubox
9 43 0.006642826 ubox
10 14 0.020591434 ubox
10 19 0.037945728 ubox
10 22 0.144604658 ubox
10 27 0.039964020 ubox
10 32 0.954794032 ubox
10 39 0.064262919 ubox
10 42 0.006613259 ubox
11 18 0.038165610 ubox
11 19 0.005299812 ubox
11 25 0.034764938 ubox
11 27 0.034035561 ubox
11 31 0.953655439 ubox
11 32 0.009798108 ubox
12 18 0.004701750 ubox
12 19 0.009114730 ubox
12 20 0.143139824 ubox
12 24 0.034674921 ubox
12 26 0.051261406 ubox
12 31 0.010597174 ubox
12 37 0.063434789 ubox
13 18 0.010805895 ubox
13 19 0.144377253 ubox
13 22 0.015479416 ubox
13 25 0.052551484 ubox
13 31 0.004242397 ubox
13 36 0.063758758 ubox
13 39 0.007744900 ubox
13 42 0.006305402 ubox
14 21 0.015478135 ubox
14 23 0.070114386 ubox
14 28 0.979921591 ubox
14 30 0.004064078 ubox
14 33 0.049741476 ubox
14 35 0.043342842 ubox
14 38 0.008209937 ubox
14 40 0.022602971 ubox
14 41 0.004789516 ubox
14 43 0.006105749 ubox
15 22 0.070187905 ubox
15 25 0.010568461 ubox
15 27 0.980798005 ubox
15 32 0.053957937 ubox
15 39 0.023043067 ubox
15 42 0.006048130 ubox
16 24 0.008518698 ubox
16 25 0.374415399 ubox
16 26 0.902097925 ubox
16 27 0.004670151 ubox
16 31 0.050934711 ubox
16 32 0.030124069 ubox
16 37 0.024857691 ubox
17 24 0.610954585 ubox
17 25 0.756466368 ubox
17 26 0.026260428 ubox
17 31 0.037269877 ubox
17 36 0.025141200 ubox
17 42 0.003173882 ubox
18 23 0.720254319 ubox
18 29 0.061114378 ubox
18 30 0.044566221 ubox
18 34 0.014716023 ubox
18 35 0.025320425 ubox
18 41 0.005936122 ubox
18 44 0.007164973 ubox
19 28 0.061192687 ubox
19 29 0.044413612 ubox
19 33 0.014537891 ubox
19 34 0.025206163 ubox
19 40 0.005943808 ubox
19 43 0.007236942 ubox
21 31 0.019403423 ubox
21 39 0.005781228 ubox
22 28 0.039244371 ubox
22 30 0.018764744 ubox
22 33 0.020389238 ubox
22 38 0.005710963 ubox
22 43 0.003326548 ubox
23 27 0.039183060 ubox
23 32 0.020483494 ubox
27 33 0.006172141 ubox
27 43 0.020308420 ubox
28 32 0.006137932 ubox
28 42 0.018593875 ubox
30 36 0.003812783 ubox
30 39 0.007937415 ubox
30 42 0.274231534 ubox
31 35 0.003610781 ubox
31 38 0.008288278 ubox
31 41 0.285708807 ubox
31 44 0.034501362 ubox
32 40 0.285771725 ubox
32 43 0.034765395 ubox
33 39 0.285421301 ubox
33 42 0.034690651 ubox
35 42 0.010546556 ubox
36 41 0.011952054 ubox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
showpage
end
%%EOF
