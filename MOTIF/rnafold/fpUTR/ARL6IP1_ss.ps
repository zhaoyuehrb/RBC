%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCUGAGCUUCGGUUGGCCCGGCUUCCUUGAGGCGUAAGCUCGGUCUGUCCAAUGAGGAGCGAGCGUCGCGGGGGCCGUCGGGAAGGGCGGCCGACCCAUAUAAGCAGCCUGCGGGGCGUUCCCUCGGGUUGUGGUUGGUGUGCGGGUUUCGGUUGGAGGACUCGUUGGGGAGGUGGCCUGCGCUUGUAGAGACUGCAUCCCCGAGACG\
) } def
/len { sequence length } bind def

/coor [
[111.21184540 158.36552429]
[107.38301086 143.86241150]
[100.13146210 145.77684021]
[97.05608368 160.45819092]
[104.59449768 174.61981201]
[98.09063721 189.28540039]
[82.53369904 193.20475769]
[69.85764313 183.37127686]
[69.78644562 167.32838440]
[82.37473297 157.38279724]
[85.45011139 142.70144653]
[68.97352600 125.67261505]
[64.91808319 104.94754028]
[71.96030426 87.77828217]
[56.96071625 87.66766357]
[43.10385895 95.30297852]
[30.43399239 87.47203064]
[15.43439960 87.36141205]
[4.22123528 98.17356873]
[-10.98890781 97.84770966]
[-21.22754288 87.09104156]
[-36.22713470 86.98042297]
[-51.22672653 86.86980438]
[-66.22631836 86.75918579]
[-81.22591400 86.64856720]
[-96.22550201 86.53794861]
[-112.02580261 95.99617767]
[-126.79995728 86.52442932]
[-141.79954529 86.63504791]
[-156.79913330 86.74566650]
[-171.79873657 86.85628510]
[-186.79832458 86.96690369]
[-201.79791260 87.07752228]
[-215.54064941 94.91638184]
[-228.32463074 87.27315521]
[-243.32423401 87.38377380]
[-258.32382202 87.49439240]
[-273.32342529 87.60501099]
[-288.32299805 87.71562195]
[-299.37548828 98.69198608]
[-314.58877563 98.59049225]
[-324.98495483 87.98600006]
[-339.98452759 88.09661865]
[-354.98413086 88.20723724]
[-369.98373413 88.31785583]
[-379.57504272 96.94013214]
[-392.06954956 96.72432709]
[-400.77941895 88.33137512]
[-415.77899170 88.22075653]
[-424.88333130 100.78621674]
[-439.64511108 105.56848145]
[-454.38809204 100.72866821]
[-463.44332886 88.12778473]
[-463.32888794 72.61112976]
[-454.08880615 60.14517593]
[-439.27603149 55.52333069]
[-424.58639526 60.52279282]
[-415.66839600 73.22116089]
[-400.66879272 73.33177948]
[-385.89465332 63.86003113]
[-370.09432983 73.31826019]
[-355.09475708 73.20764160]
[-340.09515381 73.09702301]
[-325.09558105 72.98640442]
[-314.85693359 62.22973633]
[-299.64678955 61.90387726]
[-288.43362427 72.71603394]
[-273.43402100 72.60541534]
[-258.43444824 72.49479675]
[-243.43484497 72.38417816]
[-228.43525696 72.27355957]
[-215.76539612 64.44261169]
[-201.90853882 72.07793427]
[-186.90893555 71.96731567]
[-171.90934753 71.85669708]
[-156.90975952 71.74607849]
[-141.91017151 71.63545990]
[-126.91057587 71.52484131]
[-118.20070648 63.13188934]
[-105.70619965 62.91607666]
[-96.11488342 71.53836060]
[-81.11529541 71.64897919]
[-66.11569977 71.75959778]
[-51.11610794 71.87021637]
[-36.11651611 71.98083496]
[-21.11692429 72.09144592]
[-10.72075653 61.48695755]
[4.49253893 61.38546371]
[15.54501820 72.36182404]
[30.54461098 72.47244263]
[43.32859421 64.82920837]
[57.07133484 72.66806793]
[72.07092285 72.77868652]
[84.41085052 64.25071716]
[89.61038971 50.18071747]
[94.80992889 36.11072159]
[100.00946045 22.04072571]
[105.20899963 7.97072983]
[110.40853882 -6.09926653]
[115.60807800 -20.16926193]
[102.02416992 -13.80708694]
[87.49726105 -17.54459190]
[78.67052460 -29.67260933]
[79.58045197 -44.64498520]
[89.81092072 -55.61483383]
[104.68352509 -57.56562805]
[117.39701080 -49.60527039]
[122.13748932 -35.37461090]
[128.75941467 -48.83380890]
[135.38134766 -62.29301071]
[142.00326538 -75.75221252]
[148.62519836 -89.21141052]
[155.24711609 -102.67061615]
[161.86904907 -116.12981415]
[168.49098206 -129.58901978]
[167.64070129 -145.38735962]
[180.20182800 -153.39157104]
[186.82374573 -166.85076904]
[193.44567871 -180.30996704]
[189.65675354 -195.89918518]
[199.59603882 -208.49243164]
[215.63896179 -208.42927551]
[225.47877502 -195.75813293]
[221.56719971 -180.19923401]
[206.90487671 -173.68803406]
[200.28295898 -160.22883606]
[193.66102600 -146.76963806]
[194.98495483 -131.93399048]
[181.95018005 -122.96709442]
[175.32824707 -109.50788879]
[168.70632935 -96.04869080]
[162.08439636 -82.58948517]
[155.46247864 -69.13028717]
[148.84054565 -55.67108536]
[142.21861267 -42.21188354]
[135.59669495 -28.75268364]
[129.67807007 -14.96972370]
[124.47853851 -0.89972764]
[119.27899933 13.17026901]
[114.07946014 27.24026489]
[108.87992096 41.31026077]
[103.68038177 55.38025665]
[98.48084259 69.45025635]
[116.54117584 68.66936493]
[134.34039307 78.96518707]
[145.10772705 99.36209869]
[160.07469177 98.36725616]
[175.04167175 97.37241364]
[190.00863647 96.37757111]
[204.97561646 95.38272858]
[219.94258118 94.38787842]
[234.90956116 93.39303589]
[249.86878967 92.28784180]
[264.81945801 91.07236481]
[276.26104736 79.82647705]
[292.16912842 81.90312958]
[300.34039307 95.70928192]
[294.50656128 110.65404510]
[279.14282227 115.27306366]
[266.03494263 106.02303314]
[251.08427429 107.23851776]
[244.67315674 110.91308594]
[235.90440369 108.36000824]
[220.93742371 109.35485077]
[205.97045898 110.34970093]
[191.00347900 111.34454346]
[176.03651428 112.33938599]
[161.06953430 113.33422852]
[146.10256958 114.32907867]
[140.38787842 128.19783020]
[150.30920410 139.44802856]
[160.23054504 150.69822693]
[170.15188599 161.94844055]
[180.07322693 173.19863892]
[189.99455261 184.44883728]
[204.92538452 189.68153381]
[207.54040527 204.34478760]
[217.46174622 215.59498596]
[227.38308716 226.84518433]
[237.30441284 238.09539795]
[256.68203735 243.65515137]
[259.67651367 262.75891113]
[269.92535400 273.71160889]
[280.17419434 284.66427612]
[290.42303467 295.61697388]
[306.26260376 299.86431885]
[310.24212646 315.77328491]
[298.26782227 326.97811890]
[282.65780640 321.95220947]
[279.47033691 305.86581421]
[269.22149658 294.91311646]
[258.97268677 283.96044922]
[248.72383118 273.00775146]
[238.52397156 273.58883667]
[229.49803162 268.35040283]
[224.74665833 258.81289673]
[226.05421448 248.01672363]
[216.13287354 236.76652527]
[206.21154785 225.51632690]
[196.29020691 214.26612854]
[182.06901550 209.83811951]
[178.74435425 194.37017822]
[168.82301331 183.11997986]
[158.90168762 171.86978149]
[148.98034668 160.61956787]
[139.05900574 149.36936951]
[129.13766479 138.11917114]
[121.88611603 140.03358459]
[125.71495056 154.53668213]
[129.54379272 169.03979492]
[133.37237549 183.54295349]
[118.86914825 187.37130737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[14 93]
[15 92]
[17 90]
[18 89]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[42 64]
[43 63]
[44 62]
[45 61]
[48 59]
[49 58]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[117 127]
[118 126]
[119 125]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 161]
[154 160]
[170 207]
[171 206]
[172 205]
[173 204]
[174 203]
[175 202]
[177 200]
[178 199]
[179 198]
[180 197]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
