%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCE1C)
} def

/sequence { (\
GCUGAAGGACCCUGUGCUGCCUGUGACCCCGCUCCUGAAUCCGCCACCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.012465479 ubox
1 17 0.097774682 ubox
1 20 0.097870249 ubox
1 24 0.053022650 ubox
1 32 0.024660480 ubox
1 44 0.904461312 ubox
2 8 0.011088209 ubox
2 14 0.012950897 ubox
2 16 0.097836338 ubox
2 19 0.098115048 ubox
2 23 0.054983761 ubox
2 31 0.024597522 ubox
2 43 0.906730327 ubox
2 51 0.030009671 ubox
3 7 0.010042857 ubox
3 14 0.009025835 ubox
3 16 0.007186319 ubox
3 19 0.004133634 ubox
3 25 0.010886539 ubox
3 31 0.003196605 ubox
3 37 0.015422730 ubox
3 43 0.019091874 ubox
3 46 0.090344165 ubox
3 49 0.052637479 ubox
3 50 0.028509751 ubox
4 13 0.009138025 ubox
4 15 0.014347357 ubox
4 18 0.003795850 ubox
4 22 0.004721610 ubox
4 24 0.008560233 ubox
4 30 0.009606904 ubox
4 34 0.018501317 ubox
4 36 0.004742455 ubox
4 41 0.875808513 ubox
4 42 0.043896901 ubox
4 45 0.101614022 ubox
4 48 0.057533565 ubox
5 33 0.017676150 ubox
5 40 0.871237226 ubox
6 13 0.094054750 ubox
6 18 0.160473306 ubox
6 22 0.103570838 ubox
6 33 0.012793780 ubox
6 36 0.943603073 ubox
7 12 0.094886988 ubox
7 13 0.027918408 ubox
7 17 0.164357425 ubox
7 18 0.021274178 ubox
7 21 0.106733435 ubox
7 22 0.004870003 ubox
7 28 0.012360413 ubox
7 29 0.016283256 ubox
7 30 0.022737860 ubox
7 32 0.013516578 ubox
7 33 0.012031619 ubox
7 34 0.006697295 ubox
7 35 0.955580659 ubox
7 36 0.017190545 ubox
7 41 0.003439503 ubox
7 42 0.133481884 ubox
7 45 0.063510284 ubox
7 48 0.069612181 ubox
8 12 0.027635691 ubox
8 17 0.022216536 ubox
8 20 0.106490449 ubox
8 21 0.005264477 ubox
8 27 0.012336057 ubox
8 28 0.016332727 ubox
8 29 0.022703373 ubox
8 32 0.013940379 ubox
8 33 0.005588352 ubox
8 34 0.955552652 ubox
8 35 0.016766167 ubox
8 41 0.133557704 ubox
8 44 0.063480054 ubox
8 47 0.069546604 ubox
9 15 0.168064395 ubox
9 24 0.011690100 ubox
9 33 0.936852613 ubox
9 40 0.129328448 ubox
10 14 0.168115258 ubox
10 23 0.013815119 ubox
12 51 0.014012631 ubox
13 19 0.010919660 ubox
13 25 0.006148082 ubox
13 31 0.112136582 ubox
13 37 0.011300645 ubox
13 43 0.014571868 ubox
13 46 0.033692127 ubox
13 49 0.013584882 ubox
13 50 0.013326758 ubox
14 18 0.008448328 ubox
14 20 0.080241841 ubox
14 22 0.007869168 ubox
14 27 0.664311710 ubox
14 30 0.110569414 ubox
14 32 0.283418100 ubox
14 36 0.011832848 ubox
14 40 0.031723349 ubox
14 42 0.015696682 ubox
14 44 0.034322837 ubox
14 45 0.034836975 ubox
14 47 0.044280304 ubox
14 48 0.012078895 ubox
15 19 0.075286621 ubox
15 23 0.004012418 ubox
15 25 0.448357179 ubox
15 26 0.614298396 ubox
15 31 0.282967581 ubox
15 37 0.014153655 ubox
15 39 0.036643735 ubox
15 43 0.035049219 ubox
15 46 0.045432490 ubox
15 49 0.010569603 ubox
16 22 0.010998966 ubox
16 24 0.748150054 ubox
16 30 0.270320345 ubox
16 32 0.194329842 ubox
16 36 0.009955568 ubox
16 42 0.034688185 ubox
16 44 0.038147282 ubox
16 45 0.043139295 ubox
16 48 0.011700510 ubox
17 23 0.767112299 ubox
17 31 0.193970840 ubox
17 43 0.040373458 ubox
17 51 0.007601208 ubox
18 25 0.028328596 ubox
18 31 0.013063386 ubox
18 37 0.018997148 ubox
18 43 0.020669600 ubox
18 46 0.013688785 ubox
18 49 0.023817521 ubox
18 50 0.008119446 ubox
19 24 0.021124576 ubox
19 30 0.046015304 ubox
19 32 0.139941322 ubox
19 36 0.020690954 ubox
19 42 0.024228326 ubox
19 44 0.041179353 ubox
19 45 0.013970697 ubox
19 48 0.027106431 ubox
20 31 0.139711233 ubox
20 43 0.041594002 ubox
21 51 0.017075111 ubox
22 31 0.015975159 ubox
22 37 0.009036290 ubox
22 43 0.007839384 ubox
22 46 0.010964133 ubox
22 49 0.015596439 ubox
22 50 0.016192615 ubox
23 30 0.040878613 ubox
23 32 0.431247480 ubox
23 36 0.009074332 ubox
23 40 0.017681284 ubox
23 42 0.013120946 ubox
23 44 0.052726683 ubox
23 45 0.009616198 ubox
23 47 0.061797301 ubox
23 48 0.012679737 ubox
24 31 0.431262528 ubox
24 37 0.004308594 ubox
24 39 0.018010730 ubox
24 43 0.053379015 ubox
24 46 0.063158043 ubox
24 49 0.010188367 ubox
25 30 0.428522125 ubox
25 34 0.030495235 ubox
25 41 0.017479835 ubox
25 42 0.052666114 ubox
25 45 0.063170915 ubox
25 48 0.011581457 ubox
26 33 0.028670992 ubox
26 40 0.017924451 ubox
30 37 0.040754406 ubox
30 43 0.017441706 ubox
31 36 0.027936882 ubox
31 42 0.017301999 ubox
31 44 0.067841716 ubox
32 43 0.067865529 ubox
32 51 0.004696270 ubox
33 50 0.004979758 ubox
35 51 0.018199083 ubox
36 43 0.026936005 ubox
36 46 0.032622224 ubox
36 49 0.027561942 ubox
36 50 0.017732274 ubox
37 42 0.057231151 ubox
37 45 0.045163531 ubox
37 48 0.034760660 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
showpage
end
%%EOF
