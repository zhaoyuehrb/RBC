%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGUCAGGGCCGCCAAGGCGGGGGAGGCCGAUCCGAGCAGCACUAACACGUCCUCUUCCUCCUUCAACUCCAAGGUCUCGGAUUUGACGAACAUCCUACCGAAGAGAGAAAGGGGAAAAAGGCAGUGAGGUGUAAGGAAAGAAACAGAGGCGCGAUCUUCGUGUCACAGGGGCGUGCUCCGGCGCGCACCCGAGAAGACCAGCUCCGA\
) } def
/len { sequence length } bind def

/coor [
[90.64999390 300.06240845]
[96.69633484 284.22326660]
[96.69633484 269.22326660]
[96.69633484 254.22328186]
[96.69633484 239.22328186]
[96.69633484 224.22328186]
[96.69633484 209.22328186]
[88.36760712 200.45130920]
[88.24439240 187.95506287]
[96.93809509 178.42776489]
[97.16036987 163.42941284]
[88.68096161 161.17481995]
[80.76422119 157.81750488]
[72.94570160 170.61871338]
[65.12718964 183.41992188]
[57.30867004 196.22111511]
[57.44482422 212.61970520]
[43.17600632 220.70257568]
[29.18075371 212.15476990]
[29.85618019 195.76954651]
[44.50746918 188.40260315]
[52.32598495 175.60139465]
[60.14450073 162.80020142]
[67.96302032 149.99899292]
[56.45649338 140.37611389]
[45.24017715 150.33573914]
[40.58107758 166.05912781]
[24.57370949 169.62229919]
[13.68507767 157.35975647]
[19.11647606 141.88616943]
[35.28054428 139.11943054]
[46.49686050 129.15979004]
[40.50917435 101.85221863]
[47.34856796 75.42108917]
[64.96584320 55.42861557]
[57.33787918 42.51296234]
[49.70991135 29.59730721]
[39.04242706 29.59835243]
[29.41021156 25.20525169]
[22.52316284 17.27151680]
[19.57314491 7.27238131]
[21.02809143 -2.96926093]
[26.55916977 -11.61513424]
[19.51273537 -24.85702896]
[12.46630096 -38.09892273]
[5.41986704 -51.34081650]
[-1.62656760 -64.58271027]
[-13.71142387 -69.08894348]
[-19.30795860 -80.26258087]
[-15.90378475 -91.86975861]
[-22.75322342 -105.21461487]
[-29.60266113 -118.55947113]
[-44.37878799 -123.48936462]
[-51.13499069 -137.12051392]
[-46.34403229 -151.17691040]
[-53.19347000 -164.52177429]
[-60.04290771 -177.86662292]
[-75.74362946 -187.48858643]
[-74.19309235 -204.96926880]
[-81.23952484 -218.21115112]
[-88.28595734 -231.45304871]
[-95.33238983 -244.69494629]
[-102.37882996 -257.93682861]
[-109.42526245 -271.17874146]
[-122.73849487 -279.72674561]
[-121.88685608 -294.59698486]
[-128.93328857 -307.83886719]
[-135.97972107 -321.08074951]
[-148.06457520 -325.58700562]
[-153.66111755 -336.76065063]
[-150.25694275 -348.36779785]
[-157.10638428 -361.71267700]
[-163.95582581 -375.05752563]
[-179.15724182 -377.55206299]
[-189.85000610 -388.39266968]
[-192.08268738 -403.27484131]
[-185.20632935 -416.46020508]
[-192.05577087 -429.80505371]
[-198.90521240 -443.14990234]
[-209.43400574 -445.87606812]
[-216.57757568 -453.78363037]
[-218.15682983 -464.10034180]
[-213.88902283 -473.38363647]
[-220.33999634 -486.92559814]
[-226.79096985 -500.46759033]
[-233.24195862 -514.00952148]
[-239.79309082 -527.50335693]
[-246.44403076 -540.94824219]
[-260.38330078 -549.58703613]
[-259.60110474 -565.96752930]
[-244.90213013 -573.23883057]
[-231.40739441 -563.92089844]
[-232.99914551 -547.59918213]
[-226.34820557 -534.15429688]
[-220.56527710 -529.55310059]
[-219.69998169 -520.46051025]
[-213.24900818 -506.91854858]
[-206.79803467 -493.37658691]
[-200.34704590 -479.83462524]
[-183.65802002 -470.06832886]
[-185.56034851 -449.99935913]
[-178.71092224 -436.65447998]
[-171.86148071 -423.30963135]
[-157.13977051 -421.20977783]
[-146.34980774 -410.71975708]
[-143.77561951 -395.71218872]
[-150.61096191 -381.90695190]
[-143.76152039 -368.56210327]
[-136.91207886 -355.21725464]
[-121.67464447 -346.51098633]
[-122.73783112 -328.12719727]
[-115.69139862 -314.88531494]
[-108.64495850 -301.64340210]
[-95.83573151 -294.04254150]
[-96.18336487 -278.22515869]
[-89.13693237 -264.98327637]
[-82.09049988 -251.74137878]
[-75.04406738 -238.49948120]
[-67.99762726 -225.25759888]
[-60.95119476 -212.01570129]
[-49.47792053 -208.18438721]
[-43.49887848 -197.21067810]
[-46.69805145 -184.71606445]
[-39.84861374 -171.37121582]
[-32.99917603 -158.02635193]
[-18.78550720 -153.72434998]
[-11.64909935 -140.28834534]
[-16.25780487 -125.40891266]
[-9.40836716 -112.06405640]
[-2.55892825 -98.71920013]
[12.67851162 -90.01294708]
[11.61532688 -71.62914276]
[18.66176033 -58.38725281]
[25.70819473 -45.14535522]
[32.75463104 -31.90346336]
[39.80106354 -18.66156769]
[58.80057526 -14.35367966]
[68.65741730 2.80362296]
[62.62556458 21.96933937]
[70.25353241 34.88499451]
[77.88150024 47.80064774]
[87.02426147 44.81276703]
[96.54054260 43.41349411]
[106.15640259 43.64310837]
[115.59505463 45.49500275]
[124.58478546 48.91586304]
[132.86682129 53.80722427]
[140.20275879 60.02827835]
[146.38143921 67.39995575]
[151.22497559 75.71004486]
[154.59397888 84.71934509]
[156.39143372 94.16850281]
[171.38484192 94.61300659]
[186.37826538 95.05750275]
[201.37167358 95.50200653]
[216.36508179 95.94650269]
[231.35850525 96.39100647]
[246.35191345 96.83550262]
[262.36325073 91.26118469]
[272.15213013 105.10368347]
[261.56042480 118.34196472]
[245.90740967 111.82891846]
[230.91400146 111.38441467]
[215.92059326 110.93991852]
[200.92716980 110.49541473]
[185.93376160 110.05091858]
[170.94035339 109.60641479]
[155.94692993 109.16191864]
[155.91915894 116.81411743]
[154.82435608 124.60494995]
[152.62748718 132.38348389]
[149.31506348 139.99223328]
[160.67773438 149.78456116]
[172.04040527 159.57688904]
[183.47531128 169.28475952]
[194.98184204 178.90763855]
[206.48837280 188.53053284]
[217.99488831 198.15341187]
[229.50141907 207.77629089]
[241.00794983 217.39916992]
[257.24691772 219.68569946]
[263.13446045 234.99154663]
[252.61398315 247.57136536]
[236.50805664 244.48411560]
[231.38507080 228.90570068]
[219.87854004 219.28282166]
[208.37200928 209.65992737]
[196.86547852 200.03704834]
[185.35896301 190.41416931]
[173.85243225 180.79129028]
[166.70535278 178.91175842]
[162.24806213 170.93955994]
[150.88540649 161.14723206]
[139.52273560 151.35488892]
[132.68173218 154.42909241]
[138.83012390 168.11109924]
[148.90542603 179.22361755]
[141.45007324 192.23966980]
[126.76727295 189.17120361]
[125.14811707 174.25949097]
[118.99972534 160.57748413]
[112.15872192 163.65168762]
[111.93644714 178.65003967]
[121.27690125 194.51983643]
[111.69633484 209.22328186]
[111.69633484 224.22328186]
[111.69633484 239.22328186]
[111.69633484 254.22328186]
[111.69633484 269.22326660]
[111.69633484 284.22326660]
[117.74267578 300.06240845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[10 203]
[11 202]
[13 24]
[14 23]
[15 22]
[16 21]
[25 32]
[26 31]
[35 141]
[36 140]
[37 139]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[50 130]
[51 129]
[52 128]
[55 125]
[56 124]
[57 123]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[66 113]
[67 112]
[68 111]
[71 109]
[72 108]
[73 107]
[77 103]
[78 102]
[79 101]
[83 99]
[84 98]
[85 97]
[86 96]
[87 94]
[88 93]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
[172 194]
[173 193]
[174 192]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
