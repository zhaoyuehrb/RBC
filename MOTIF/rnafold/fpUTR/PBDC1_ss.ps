%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACGAGUCAAUCACCUCAGAUCUCUCAAGCAGUCCAGCCUACGCAACAGUACUCCACCUCUGCGCCUGUGCGGGGAGGGUAAGGCGGGGCCAGCAACUUCCUCAGCUGGAGGGAGAGCGCACGGUGGAGCCGCCAGUUGAGAAGGACUCUGAUCCGGCUCAGCUUUCCAAUCAGCUGCGGAAGGAGCCACGCUUUCGGGGGUUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[1.33933425 278.78439331]
[-14.31163216 278.03686523]
[-20.99182701 291.46722412]
[-27.67202187 304.89761353]
[-28.69188309 313.97491455]
[-34.55295944 318.47711182]
[-41.43237305 331.80651855]
[-48.31178284 345.13595581]
[-48.06400299 350.34994507]
[-49.67945099 354.70239258]
[-52.51794052 357.62777710]
[-55.80762863 358.89675903]
[-63.27536774 371.90573120]
[-70.74311066 384.91467285]
[-66.37337494 400.10284424]
[-74.09618378 413.89175415]
[-89.32971954 418.10067749]
[-103.03620148 410.23251343]
[-107.08381653 394.95532227]
[-99.07118988 381.33279419]
[-83.75205994 377.44692993]
[-76.28432465 364.43798828]
[-68.81658173 351.42901611]
[-61.64121246 338.25656128]
[-54.76180267 324.92712402]
[-47.88238907 311.59768677]
[-41.10239792 298.21740723]
[-34.42220306 284.78704834]
[-27.74200821 271.35665894]
[-30.26971054 269.16796875]
[-32.58711243 266.75769043]
[-45.65129852 274.12838745]
[-49.65110397 289.41815186]
[-63.33290482 297.32913208]
[-78.57953644 293.16790771]
[-86.34543610 279.40322876]
[-82.02323914 264.20144653]
[-68.17722321 256.58151245]
[-53.02198792 261.06417847]
[-39.95780182 253.69349670]
[-41.41157150 237.13180542]
[-35.37833023 221.56578064]
[-23.04126549 210.21656799]
[-6.89464951 205.46144104]
[9.76028347 208.33609009]
[18.35884666 196.04525757]
[26.95741081 183.75440979]
[35.55597687 171.46357727]
[44.15453720 159.17274475]
[43.79999161 156.39201355]
[44.52556229 153.30329895]
[46.45407867 150.31729126]
[49.55755997 147.88153076]
[53.64882278 146.42704773]
[62.96370316 134.66978455]
[72.27858734 122.91253662]
[81.59346771 111.15528870]
[78.91029358 104.29710388]
[78.69620514 96.93584442]
[65.52372742 89.76047516]
[52.35125351 82.58511353]
[39.17877579 75.40974426]
[26.00630188 68.23437500]
[10.18627453 68.42758179]
[2.71082640 55.54476929]
[-10.46164894 48.36940384]
[-23.63412476 41.19403458]
[-40.00587082 42.14163971]
[-48.78504562 28.29035187]
[-40.94038773 13.88919353]
[-24.54180717 13.75284004]
[-16.45875931 28.02156067]
[-3.28628302 35.19692612]
[9.88619232 42.37229156]
[24.76403618 41.66585541]
[33.18166733 55.06190109]
[46.35414124 62.23726654]
[59.52661896 69.41263580]
[72.69909668 76.58799744]
[85.87156677 83.76336670]
[94.60044098 79.16528320]
[104.46385956 78.94496155]
[113.38933563 83.14869690]
[126.22827148 75.39230347]
[139.06721497 67.63591003]
[151.90615845 59.87952042]
[164.74510193 52.12312698]
[177.58403015 44.36673737]
[185.39511108 30.60818481]
[200.28965759 30.64958763]
[213.12860107 22.89319611]
[225.96752930 15.13680458]
[225.46693420 5.44765139]
[228.51138306 -3.70339394]
[234.64262390 -11.07256222]
[242.98602295 -15.67451191]
[252.37506104 -16.91398621]
[261.51440430 -14.66251278]
[269.15869141 -9.27032471]
[282.43652344 -16.24877739]
[295.71438599 -23.22723007]
[308.99221802 -30.20568275]
[322.27005005 -37.18413544]
[330.88619995 -50.45336914]
[345.75189209 -49.52550125]
[359.02972412 -56.50395203]
[372.30758667 -63.48240662]
[385.58541870 -70.46086121]
[398.86328125 -77.43930817]
[412.14111328 -84.41776276]
[425.41897583 -91.39621735]
[430.20541382 -106.21942902]
[443.77044678 -113.10742188]
[457.87261963 -108.45291901]
[471.15048218 -115.43137360]
[484.42831421 -122.40982819]
[497.70617676 -129.38827515]
[510.98400879 -136.36672974]
[524.26184082 -143.34518433]
[537.53967285 -150.32363892]
[550.65838623 -157.59686279]
[563.61138916 -165.16123962]
[569.44378662 -172.19123840]
[576.81402588 -172.74017334]
[589.87823486 -180.11085510]
[602.94238281 -187.48155212]
[612.40057373 -205.28338623]
[631.70922852 -204.25205994]
[644.54815674 -212.00845337]
[657.38708496 -219.76484680]
[670.22601318 -227.52122498]
[683.00689697 -235.37298584]
[695.72894287 -243.31967163]
[694.00909424 -258.48559570]
[699.04797363 -272.89297485]
[709.84503174 -283.68121338]
[724.25653076 -288.70831299]
[739.42102051 -286.97613525]
[752.32763672 -278.82858276]
[760.41375732 -265.88339233]
[762.07379150 -250.71081543]
[756.97821045 -236.32339478]
[746.13873291 -225.57774353]
[731.70758057 -220.60743713]
[716.54998779 -222.39933777]
[703.67559814 -230.59764099]
[690.95355225 -222.65095520]
[686.94592285 -216.44123840]
[677.98242188 -214.68229675]
[665.14349365 -206.92590332]
[652.30456543 -199.16950989]
[639.46563721 -191.41311646]
[637.91961670 -181.31246948]
[630.92224121 -173.56748962]
[620.60473633 -170.89735413]
[610.31311035 -174.41735840]
[597.24890137 -167.04667664]
[584.18475342 -159.67597961]
[571.17578125 -152.20825195]
[558.22277832 -144.64385986]
[556.97833252 -141.34481812]
[554.07409668 -138.48463440]
[549.73382568 -136.83683777]
[544.51812744 -137.04579163]
[531.24029541 -130.06733704]
[517.96246338 -123.08888245]
[504.68460083 -116.11042786]
[491.40676880 -109.13198090]
[478.12893677 -102.15352631]
[464.85107422 -95.17507172]
[460.68704224 -80.92037964]
[447.32083130 -73.65409088]
[432.39743042 -78.11837006]
[419.11956787 -71.13991547]
[405.84173584 -64.16146851]
[392.56387329 -57.18301392]
[379.28604126 -50.20455933]
[366.00817871 -43.22610855]
[352.73034668 -36.24765396]
[345.06390381 -23.47756577]
[329.24850464 -23.90628815]
[315.97067261 -16.92783546]
[302.69281006 -9.94938374]
[289.41497803 -2.97093105]
[276.13714600 4.00752115]
[271.72894287 23.96646309]
[253.76950073 34.32762909]
[233.72392273 27.97574615]
[220.88497925 35.73213577]
[208.04605103 43.48852921]
[201.15330505 56.69229126]
[185.34042358 57.20567703]
[172.50148010 64.96206665]
[159.66255188 72.71846008]
[146.82360840 80.47485352]
[133.98466492 88.23123932]
[121.14572906 95.98763275]
[114.22621918 116.15101624]
[93.35072327 120.47016907]
[84.03583527 132.22741699]
[74.72095490 143.98468018]
[65.40607452 155.74192810]
[56.44537735 167.77130127]
[47.84681320 180.06213379]
[39.24824905 192.35298157]
[30.64968491 204.64381409]
[22.05112076 216.93464661]
[30.17916489 230.64625549]
[31.83419418 246.44531250]
[26.75886726 261.44104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[6 26]
[7 25]
[8 24]
[12 23]
[13 22]
[14 21]
[31 40]
[32 39]
[45 207]
[46 206]
[47 205]
[48 204]
[49 203]
[54 202]
[55 201]
[56 200]
[57 199]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[65 74]
[66 73]
[67 72]
[83 197]
[84 196]
[85 195]
[86 194]
[87 193]
[88 192]
[90 190]
[91 189]
[92 188]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[105 179]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[111 173]
[114 170]
[115 169]
[116 168]
[117 167]
[118 166]
[119 165]
[120 164]
[121 160]
[122 159]
[124 158]
[125 157]
[126 156]
[128 152]
[129 151]
[130 150]
[131 149]
[132 147]
[133 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
