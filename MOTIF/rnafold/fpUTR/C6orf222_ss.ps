%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAGAAAAUUGCCAGCACCAAAGUAGUGGCAUCUUCUCCCUGGGAGAGCUGGGUCUGACUUCUCACUGGACACAACUUCCAGCUGACAGGGAGCAGAGCCUAACACAGAGACCUCUUGUCUGAAGAUCCCAGCCCAGGGUGUUCAGGACAGAAGCGAUUUCUGUGGUCCAAGCCCG\
) } def
/len { sequence length } bind def

/coor [
[161.57183838 155.63806152]
[156.56549072 169.77793884]
[146.91238403 181.25912476]
[133.84214783 188.61907959]
[119.01972198 190.92028809]
[104.33322144 187.86961365]
[91.65345764 179.85565186]
[82.59561157 167.89926147]
[78.31350708 153.52345276]
[79.35260773 138.55949402]
[85.58055115 124.91351318]
[96.20204926 114.32513428]
[85.54901123 124.88509369]
[74.89597321 135.44505310]
[64.24293518 146.00502014]
[53.58989716 156.56497192]
[53.35286331 172.14001465]
[42.39873505 182.69755554]
[27.55178452 182.37559509]
[16.89874649 192.93556213]
[13.10925102 208.89085388]
[-2.67853689 213.32682800]
[-14.22349453 201.68011475]
[-9.64915848 185.93185425]
[6.33878613 182.28251648]
[16.99182510 171.72254944]
[16.80016136 156.87335205]
[27.45342636 146.01229858]
[43.02993774 145.91194153]
[53.68297577 135.35197449]
[64.33601379 124.79201508]
[74.98905182 114.23205566]
[85.64208984 103.67209625]
[85.51045990 88.67267609]
[74.67373657 78.30130005]
[63.83701324 67.92992401]
[48.51733780 63.97793961]
[44.67230606 49.58818436]
[33.83558273 39.21680832]
[22.99885941 28.84543419]
[12.16213608 18.47406006]
[1.32541287 8.10268497]
[-9.51131058 -2.26869035]
[-20.34803391 -12.64006519]
[-31.99017715 -10.06667900]
[-43.30935669 -13.41176319]
[-51.51383591 -21.72923088]
[-54.63885880 -32.86194229]
[-52.01634979 -44.00032043]
[-62.48241806 -54.74561691]
[-72.94849396 -65.49091339]
[-83.41455841 -76.23620605]
[-93.88063049 -86.98149872]
[-104.34670258 -97.72679138]
[-114.81277466 -108.47209167]
[-132.29200745 -108.37390900]
[-144.21020508 -120.69494629]
[-143.55717468 -137.48695374]
[-154.21022034 -148.04692078]
[-169.78672791 -148.14727783]
[-180.43998718 -159.00833130]
[-180.24832153 -173.85752869]
[-190.90136719 -184.41749573]
[-201.55439758 -194.97746277]
[-217.53904724 -196.34519958]
[-226.31570435 -209.77464294]
[-221.15167236 -224.96386719]
[-206.00834656 -230.26098633]
[-192.50241089 -221.60252380]
[-190.99444580 -205.63049316]
[-180.34140015 -195.07054138]
[-169.68836975 -184.51057434]
[-154.84141541 -184.83253479]
[-143.88729858 -174.27499390]
[-143.65025330 -158.69996643]
[-132.99722290 -148.13999939]
[-120.22946930 -149.99723816]
[-108.55311584 -144.06501770]
[-102.34214020 -132.31376648]
[-104.06748199 -118.93815613]
[-93.60140991 -108.19286346]
[-83.13533783 -97.44757080]
[-72.66926575 -86.70227814]
[-62.20319748 -75.95698547]
[-51.73712540 -65.21168518]
[-41.27105331 -54.46639252]
[-23.00711441 -55.34637070]
[-9.65061188 -42.39634323]
[-9.97665882 -23.47678947]
[0.86006445 -13.10541439]
[11.69678783 -2.73403883]
[22.53351212 7.63733625]
[33.37023544 18.00871086]
[44.20695877 28.38008690]
[55.04368210 38.75146103]
[69.58824158 41.96161652]
[74.20838928 57.09320068]
[85.04511261 67.46457672]
[95.88183594 77.83595276]
[119.17010498 92.05795288]
[134.07260132 93.76544952]
[144.17810059 79.41822052]
[160.06982422 72.18592072]
[177.34896851 73.97171021]
[191.28240967 84.19610596]
[198.09915161 99.98050690]
[213.05238342 101.16395569]
[228.00563049 102.34740448]
[242.95887756 103.53085327]
[257.91210938 104.71430206]
[272.86535645 105.89775085]
[287.81860352 107.08119202]
[302.77185059 108.26464081]
[320.52990723 98.76485443]
[335.99932861 110.33777618]
[350.98489380 110.99571991]
[365.11117554 103.87118530]
[377.48681641 112.15929413]
[392.47238159 112.81723785]
[407.45794678 113.47518158]
[422.44351196 114.13312531]
[437.42907715 114.79106903]
[452.41983032 115.31748199]
[467.41464233 115.71232605]
[482.40942383 116.10717773]
[497.40423584 116.50202179]
[511.40328979 109.13066864]
[523.92248535 117.20030975]
[538.91729736 117.59515381]
[553.91210938 117.99000549]
[568.90692139 118.38484955]
[579.13421631 106.55538177]
[594.58074951 104.11852264]
[607.95312500 112.22487640]
[612.93737793 127.04687500]
[607.17999268 141.58601379]
[593.39953613 148.97737122]
[578.10260010 145.73097229]
[568.51202393 133.37965393]
[553.51727295 132.98480225]
[538.52246094 132.58996582]
[523.52764893 132.19511414]
[510.60110474 139.59471130]
[497.00939941 131.49682617]
[482.01458740 131.10197449]
[467.01977539 130.70713806]
[452.02499390 130.31228638]
[445.23593140 133.28802490]
[436.77111816 129.77662659]
[421.78555298 129.11868286]
[406.79998779 128.46073914]
[391.81442261 127.80279541]
[376.82888794 127.14485168]
[363.77447510 134.31645203]
[350.32696533 125.98128510]
[335.34140015 125.32334137]
[328.42977905 132.89759827]
[318.27325439 135.45565796]
[308.18328857 131.91351318]
[301.58837891 123.21788788]
[286.63516235 122.03443909]
[271.68191528 120.85099030]
[256.72866821 119.66754150]
[241.77542114 118.48409271]
[226.82217407 117.30064392]
[211.86894226 116.11720276]
[196.91569519 114.93375397]
[190.89842224 126.07878113]
[181.07043457 134.14212036]
[168.87516785 137.89364624]
[156.12120056 136.73991394]
[144.71408081 130.81767273]
[136.37158203 120.97882080]
[132.36511230 108.66794586]
[117.46260834 106.96044922]
[132.36016846 108.71047211]
[145.69432068 115.58074188]
[155.76651001 126.69609833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[19 26]
[20 25]
[34 99]
[35 98]
[36 97]
[38 95]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[54 81]
[55 80]
[58 76]
[59 75]
[62 72]
[63 71]
[64 70]
[100 175]
[101 174]
[106 167]
[107 166]
[108 165]
[109 164]
[110 163]
[111 162]
[112 161]
[113 160]
[115 156]
[116 155]
[118 153]
[119 152]
[120 151]
[121 150]
[122 149]
[123 147]
[124 146]
[125 145]
[126 144]
[128 142]
[129 141]
[130 140]
[131 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
