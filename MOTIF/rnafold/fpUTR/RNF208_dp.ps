%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNF208)
} def

/sequence { (\
CGGGGCCCCCCCCAGGCCUGGCGGGACCAGGAUGCUGCCCUGUCACCUGCCCCCCAGCCCCACACAACGCCCCCACCCACCCGAACAUCCAGUCUGACUGGAGACAGCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 83 0.004604949 ubox
1 110 0.008590193 ubox
2 11 0.005759764 ubox
2 12 0.029341411 ubox
2 13 0.060668433 ubox
2 61 0.043546384 ubox
2 72 0.010987101 ubox
2 73 0.985633197 ubox
2 74 0.133522541 ubox
2 77 0.005245612 ubox
2 78 0.006675963 ubox
2 82 0.003364428 ubox
2 109 0.004570663 ubox
3 10 0.005776643 ubox
3 11 0.029461734 ubox
3 12 0.060706871 ubox
3 13 0.003630942 ubox
3 60 0.043591746 ubox
3 71 0.010569382 ubox
3 72 0.989602122 ubox
3 73 0.118118971 ubox
3 76 0.003763333 ubox
3 77 0.005575067 ubox
3 108 0.003207670 ubox
4 9 0.005763041 ubox
4 10 0.029519576 ubox
4 11 0.060677606 ubox
4 12 0.003657950 ubox
4 59 0.043588601 ubox
4 70 0.010095993 ubox
4 71 0.991610802 ubox
4 72 0.100190910 ubox
4 76 0.004151892 ubox
5 9 0.029101034 ubox
5 10 0.059937953 ubox
5 11 0.003648478 ubox
5 17 0.004235508 ubox
5 58 0.043567250 ubox
5 70 0.993589507 ubox
5 71 0.078187801 ubox
6 16 0.004468736 ubox
6 57 0.043429039 ubox
6 69 0.993873425 ubox
7 15 0.004880130 ubox
7 16 0.014240012 ubox
8 15 0.014574572 ubox
8 16 0.011161964 ubox
9 15 0.011432592 ubox
9 16 0.012121518 ubox
10 15 0.012404745 ubox
10 16 0.006364259 ubox
11 15 0.006488276 ubox
13 49 0.041328179 ubox
14 48 0.041546825 ubox
15 47 0.041571841 ubox
15 51 0.009923559 ubox
15 54 0.004618568 ubox
15 55 0.004080714 ubox
15 59 0.651033056 ubox
15 60 0.743106033 ubox
15 61 0.119322177 ubox
15 71 0.014612547 ubox
15 109 0.003938327 ubox
16 46 0.041432975 ubox
16 50 0.009949509 ubox
16 53 0.004631208 ubox
16 54 0.004074049 ubox
16 58 0.654450174 ubox
16 59 0.742180152 ubox
16 60 0.117016234 ubox
16 70 0.014668154 ubox
16 108 0.003942756 ubox
17 49 0.009950085 ubox
17 57 0.470005405 ubox
17 69 0.014675883 ubox
17 107 0.003918183 ubox
18 57 0.879740815 ubox
19 45 0.039744566 ubox
19 56 0.993159771 ubox
20 44 0.042765458 ubox
20 51 0.064054517 ubox
20 52 0.007090407 ubox
20 54 0.074715570 ubox
20 55 0.993998459 ubox
20 59 0.017063038 ubox
21 43 0.042773868 ubox
21 50 0.066152491 ubox
21 51 0.005173277 ubox
21 53 0.078925735 ubox
21 54 0.992909056 ubox
21 58 0.017132549 ubox
22 42 0.042796728 ubox
22 49 0.067858873 ubox
22 57 0.017089770 ubox
23 40 0.007770815 ubox
23 41 0.042055061 ubox
23 47 0.019102209 ubox
23 48 0.065186368 ubox
23 51 0.007923203 ubox
23 52 0.561354053 ubox
23 53 0.822023841 ubox
23 54 0.030612335 ubox
23 55 0.010569977 ubox
24 39 0.007883266 ubox
24 40 0.042063876 ubox
24 46 0.019359893 ubox
24 47 0.065143372 ubox
24 50 0.008021156 ubox
24 51 0.562495364 ubox
24 52 0.821687255 ubox
24 53 0.041042874 ubox
24 54 0.010451220 ubox
25 38 0.007949265 ubox
25 39 0.041982845 ubox
25 44 0.023132449 ubox
25 46 0.064192095 ubox
25 50 0.560146388 ubox
25 51 0.820095579 ubox
25 52 0.041934575 ubox
25 53 0.010269124 ubox
26 43 0.029361395 ubox
27 42 0.022039656 ubox
28 37 0.042913290 ubox
28 42 0.071927915 ubox
28 49 0.989578933 ubox
29 36 0.043046366 ubox
29 41 0.074970140 ubox
29 48 0.995223260 ubox
30 35 0.043006079 ubox
30 39 0.009140740 ubox
30 40 0.074889652 ubox
30 47 0.995950487 ubox
30 48 0.006330384 ubox
31 38 0.010286648 ubox
31 39 0.074649527 ubox
31 44 0.031239105 ubox
31 46 0.995026140 ubox
31 47 0.007051705 ubox
32 43 0.044892307 ubox
33 42 0.046369959 ubox
33 45 0.624475760 ubox
34 41 0.029155171 ubox
34 43 0.769094043 ubox
34 44 0.616191035 ubox
35 42 0.980468811 ubox
36 42 0.064667151 ubox
36 45 0.033240606 ubox
37 41 0.040749035 ubox
37 43 0.082025650 ubox
37 44 0.033258130 ubox
38 42 0.086084462 ubox
70 107 0.003315624 ubox
74 110 0.003437871 ubox
76 111 0.060021337 ubox
77 101 0.007803701 ubox
77 110 0.060340730 ubox
77 111 0.089510320 ubox
78 100 0.007826321 ubox
78 110 0.090853700 ubox
79 93 0.003934355 ubox
79 99 0.007740719 ubox
80 92 0.004186112 ubox
80 111 0.212996649 ubox
81 110 0.208926977 ubox
81 111 0.941566770 ubox
82 96 0.009048773 ubox
82 110 0.958348640 ubox
83 89 0.006904414 ubox
83 94 0.006304148 ubox
83 95 0.008235493 ubox
83 109 0.953115713 ubox
84 88 0.006173493 ubox
84 93 0.005578063 ubox
85 93 0.010810859 ubox
86 92 0.011443215 ubox
88 102 0.993212763 ubox
88 104 0.016339186 ubox
89 101 0.999210195 ubox
89 103 0.009966972 ubox
89 111 0.006662459 ubox
90 100 0.999275481 ubox
90 110 0.006806840 ubox
91 99 0.998981285 ubox
92 98 0.998484745 ubox
92 105 0.024786335 ubox
92 108 0.004896006 ubox
93 97 0.899529366 ubox
93 104 0.024836785 ubox
94 103 0.024857159 ubox
94 107 0.004979926 ubox
94 111 0.021435378 ubox
95 102 0.024703433 ubox
95 106 0.005028668 ubox
95 110 0.022193813 ubox
96 105 0.005027380 ubox
96 109 0.022587317 ubox
98 107 0.023643606 ubox
98 111 0.011713519 ubox
99 106 0.023703905 ubox
99 110 0.011898857 ubox
100 105 0.023698227 ubox
100 109 0.012033465 ubox
101 108 0.012023830 ubox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
81 111 0.9500000 lbox
82 110 0.9500000 lbox
83 109 0.9500000 lbox
88 102 0.9500000 lbox
89 101 0.9500000 lbox
90 100 0.9500000 lbox
91 99 0.9500000 lbox
92 98 0.9500000 lbox
93 97 0.9500000 lbox
showpage
end
%%EOF
