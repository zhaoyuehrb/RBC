%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCGF6)
} def

/sequence { (\
GGCGUCCGAGGCCGGCCGAACUCCCGCGCUCUCCCGCCGCCUCGCCUCGCCUGGUGUCUCUCCCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004682467 ubox
1 38 0.172906398 ubox
1 41 0.076373015 ubox
1 46 0.010790132 ubox
1 51 0.979671960 ubox
1 52 0.009902300 ubox
1 58 0.024707310 ubox
1 64 0.005041183 ubox
1 68 0.006021610 ubox
2 6 0.004614200 ubox
2 37 0.173260432 ubox
2 40 0.076505277 ubox
2 45 0.010808644 ubox
2 50 0.981365356 ubox
2 51 0.007604102 ubox
2 55 0.003808477 ubox
2 57 0.024914166 ubox
2 63 0.004930215 ubox
2 67 0.006019675 ubox
3 36 0.173259034 ubox
3 39 0.076499522 ubox
3 44 0.010188451 ubox
3 49 0.981365872 ubox
3 54 0.003910520 ubox
3 56 0.024979496 ubox
3 65 0.006136916 ubox
4 35 0.172787800 ubox
4 37 0.028622654 ubox
4 38 0.070572897 ubox
4 43 0.006156577 ubox
4 45 0.008678682 ubox
4 48 0.976200067 ubox
4 55 0.023886586 ubox
4 64 0.006087270 ubox
4 67 0.004349098 ubox
5 36 0.039963354 ubox
5 44 0.005885234 ubox
5 54 0.009981285 ubox
5 66 0.004369011 ubox
6 53 0.010409433 ubox
6 54 0.022372788 ubox
6 65 0.004347281 ubox
7 36 0.035335646 ubox
7 44 0.967831977 ubox
7 49 0.013079045 ubox
7 53 0.022252748 ubox
8 31 0.053305262 ubox
8 33 0.177735245 ubox
8 35 0.034667193 ubox
8 43 0.981340059 ubox
8 48 0.016788001 ubox
8 52 0.010716677 ubox
8 58 0.007561359 ubox
8 60 0.004028003 ubox
9 30 0.052948581 ubox
9 32 0.177916287 ubox
9 42 0.981289645 ubox
9 47 0.017958747 ubox
9 52 0.018945191 ubox
9 57 0.007569573 ubox
9 59 0.004030574 ubox
10 29 0.050967003 ubox
10 30 0.024136806 ubox
10 31 0.176832531 ubox
10 34 0.034315860 ubox
10 38 0.003435309 ubox
10 41 0.981425119 ubox
10 46 0.017984011 ubox
10 51 0.021856037 ubox
10 58 0.004006543 ubox
11 27 0.026690229 ubox
11 29 0.177347338 ubox
11 30 0.022532989 ubox
11 33 0.034291315 ubox
11 37 0.003701369 ubox
11 40 0.981380753 ubox
11 45 0.017984125 ubox
11 50 0.021857824 ubox
11 55 0.008532326 ubox
12 26 0.022482589 ubox
12 28 0.178990796 ubox
12 36 0.003724870 ubox
12 39 0.710256649 ubox
12 44 0.017941090 ubox
12 49 0.021766853 ubox
12 54 0.008786893 ubox
13 26 0.190091130 ubox
13 28 0.006999938 ubox
13 36 0.180008084 ubox
13 39 0.676825956 ubox
13 53 0.008860883 ubox
14 22 0.007135747 ubox
14 23 0.007825409 ubox
14 24 0.026811555 ubox
14 25 0.196618274 ubox
14 27 0.006857267 ubox
14 30 0.091232630 ubox
14 31 0.020395410 ubox
14 33 0.004860210 ubox
14 34 0.011964517 ubox
14 35 0.181187978 ubox
14 38 0.957192917 ubox
14 41 0.013879124 ubox
14 42 0.003638158 ubox
14 46 0.020105448 ubox
14 47 0.007853123 ubox
14 51 0.003749977 ubox
14 52 0.008072776 ubox
15 21 0.008068437 ubox
15 22 0.006101780 ubox
15 23 0.027169535 ubox
15 24 0.196234653 ubox
15 27 0.020018275 ubox
15 29 0.114481800 ubox
15 30 0.004262493 ubox
15 33 0.011844927 ubox
15 34 0.171260934 ubox
15 37 0.957082817 ubox
15 40 0.013907146 ubox
15 41 0.003792814 ubox
15 45 0.020145914 ubox
15 46 0.008212228 ubox
15 50 0.003801687 ubox
15 51 0.008047230 ubox
16 26 0.016850791 ubox
16 28 0.127781936 ubox
16 36 0.922827439 ubox
16 39 0.012466194 ubox
16 44 0.014692706 ubox
17 26 0.425262433 ubox
17 28 0.372617944 ubox
17 36 0.248680702 ubox
17 39 0.007197731 ubox
17 44 0.016168891 ubox
17 49 0.008394912 ubox
18 25 0.423195785 ubox
18 27 0.372701335 ubox
18 31 0.223674012 ubox
18 33 0.489227172 ubox
18 35 0.347809233 ubox
18 38 0.009484845 ubox
18 43 0.021255343 ubox
18 48 0.008772852 ubox
19 30 0.216429752 ubox
19 32 0.473074704 ubox
19 42 0.020830350 ubox
19 47 0.008577625 ubox
25 36 0.012552087 ubox
25 39 0.014749809 ubox
26 35 0.031143219 ubox
26 37 0.057349017 ubox
26 38 0.019189731 ubox
26 40 0.011933858 ubox
27 36 0.060694142 ubox
27 39 0.012022762 ubox
28 35 0.071612662 ubox
28 37 0.051059907 ubox
28 38 0.009244145 ubox
29 36 0.052042032 ubox
38 56 0.008848238 ubox
39 45 0.005406610 ubox
39 50 0.009918670 ubox
39 55 0.122286628 ubox
39 57 0.007600840 ubox
39 64 0.005307984 ubox
40 44 0.005402712 ubox
40 49 0.009933735 ubox
40 54 0.126085006 ubox
40 56 0.007385542 ubox
41 53 0.126087657 ubox
42 66 0.004313892 ubox
43 49 0.014636514 ubox
43 56 0.113304485 ubox
43 65 0.004547503 ubox
44 48 0.013792211 ubox
44 50 0.122613807 ubox
44 55 0.138760136 ubox
44 64 0.003900190 ubox
45 49 0.121788669 ubox
45 54 0.140401338 ubox
46 53 0.140370264 ubox
47 66 0.008366002 ubox
48 65 0.009040568 ubox
49 64 0.008982943 ubox
52 65 0.396275978 ubox
53 59 0.015869106 ubox
53 60 0.037526156 ubox
53 61 0.044405879 ubox
53 62 0.030416427 ubox
53 63 0.176864192 ubox
53 64 0.488348750 ubox
53 68 0.371830119 ubox
54 58 0.017593130 ubox
54 59 0.027593360 ubox
54 60 0.049134196 ubox
54 61 0.023634731 ubox
54 62 0.178885744 ubox
54 63 0.487408369 ubox
54 67 0.374094804 ubox
55 65 0.065104363 ubox
55 66 0.359860942 ubox
56 64 0.109284436 ubox
56 67 0.713122145 ubox
57 66 0.719606304 ubox
58 65 0.721794357 ubox
59 66 0.074783588 ubox
60 65 0.083553596 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
4 48 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
showpage
end
%%EOF
