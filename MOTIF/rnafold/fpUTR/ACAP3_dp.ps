%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACAP3)
} def

/sequence { (\
AGCGGUCCGGGCCGGCGCGGCUGCCGCUCGGCGCCGCGGUCCUCGUGCCAGUGAGCGCCGCGGCCGCCGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.047180405 ubox
1 28 0.405001096 ubox
2 12 0.164481706 ubox
2 16 0.106013375 ubox
2 18 0.063964378 ubox
2 21 0.049959051 ubox
2 24 0.565652464 ubox
2 27 0.470780790 ubox
2 67 0.011759180 ubox
2 70 0.290861870 ubox
2 73 0.014377826 ubox
3 9 0.026159778 ubox
3 11 0.164837935 ubox
3 14 0.352295948 ubox
3 15 0.075279381 ubox
3 17 0.063959438 ubox
3 19 0.009807593 ubox
3 20 0.049532659 ubox
3 23 0.566970386 ubox
3 26 0.473055348 ubox
3 66 0.011786949 ubox
3 69 0.291162262 ubox
3 72 0.014069773 ubox
4 8 0.025086912 ubox
4 13 0.554580920 ubox
4 16 0.058326489 ubox
4 18 0.014151126 ubox
4 22 0.566542852 ubox
4 25 0.492006723 ubox
4 65 0.011705778 ubox
4 68 0.291149403 ubox
4 74 0.014626949 ubox
5 12 0.554766448 ubox
5 16 0.029073922 ubox
5 18 0.049423903 ubox
5 21 0.566923681 ubox
5 24 0.491975481 ubox
5 32 0.015585749 ubox
5 64 0.006383132 ubox
5 67 0.290644518 ubox
5 70 0.005434589 ubox
5 73 0.014718644 ubox
6 11 0.528197128 ubox
6 15 0.023358583 ubox
6 17 0.048989696 ubox
6 20 0.494018886 ubox
6 23 0.486452554 ubox
6 63 0.004809248 ubox
6 66 0.274363136 ubox
6 69 0.004941977 ubox
6 72 0.014408632 ubox
7 14 0.023510750 ubox
7 15 0.082303475 ubox
7 19 0.492389653 ubox
7 20 0.284548648 ubox
7 31 0.263550427 ubox
7 62 0.004610290 ubox
7 63 0.003644023 ubox
8 14 0.082962386 ubox
8 17 0.489348260 ubox
8 19 0.286290213 ubox
8 23 0.049030139 ubox
8 30 0.266784214 ubox
8 62 0.003655529 ubox
8 66 0.038880992 ubox
8 69 0.010551222 ubox
9 13 0.077769005 ubox
9 16 0.488289078 ubox
9 18 0.286654846 ubox
9 22 0.059370415 ubox
9 25 0.010728988 ubox
9 29 0.266933165 ubox
9 35 0.005216132 ubox
9 65 0.048216255 ubox
9 68 0.010608156 ubox
10 21 0.043352181 ubox
10 22 0.479655438 ubox
10 24 0.010351614 ubox
10 25 0.017542994 ubox
10 28 0.266794016 ubox
10 34 0.005227287 ubox
10 64 0.031272133 ubox
10 65 0.027096611 ubox
10 67 0.010510958 ubox
10 68 0.009803560 ubox
10 74 0.011212590 ubox
11 18 0.051034092 ubox
11 21 0.486652756 ubox
11 24 0.017565156 ubox
11 27 0.266934407 ubox
11 32 0.114759562 ubox
11 64 0.022474158 ubox
11 67 0.009875740 ubox
11 73 0.011355772 ubox
12 17 0.052184706 ubox
12 20 0.488597401 ubox
12 23 0.012552926 ubox
12 26 0.189105068 ubox
12 31 0.114865720 ubox
12 63 0.022600265 ubox
12 66 0.007051368 ubox
12 72 0.011352824 ubox
13 19 0.488554809 ubox
13 23 0.020055610 ubox
13 26 0.188382832 ubox
13 30 0.114864329 ubox
13 62 0.021797870 ubox
13 66 0.007771887 ubox
14 18 0.457043623 ubox
14 22 0.023949467 ubox
14 25 0.267282950 ubox
14 28 0.003221882 ubox
14 29 0.114786137 ubox
14 35 0.009782663 ubox
14 61 0.013963411 ubox
14 65 0.010609982 ubox
14 74 0.457681650 ubox
15 21 0.024130600 ubox
15 24 0.267419559 ubox
15 27 0.018959607 ubox
15 28 0.111450291 ubox
15 34 0.009795041 ubox
15 61 0.005207686 ubox
15 64 0.010608772 ubox
15 70 0.006804095 ubox
15 73 0.565542734 ubox
16 20 0.023957336 ubox
16 23 0.267286211 ubox
16 26 0.019062750 ubox
16 33 0.009795002 ubox
16 38 0.003755343 ubox
16 60 0.007311479 ubox
16 62 0.009559748 ubox
16 63 0.007515473 ubox
16 69 0.006749488 ubox
16 72 0.565745501 ubox
17 22 0.181194198 ubox
17 24 0.013972067 ubox
17 25 0.014199021 ubox
17 27 0.113953376 ubox
17 32 0.009785169 ubox
17 37 0.009521206 ubox
17 61 0.017226160 ubox
17 67 0.004546331 ubox
17 68 0.004510301 ubox
17 70 0.581553064 ubox
18 23 0.018820378 ubox
18 26 0.113988731 ubox
18 30 0.004180433 ubox
18 31 0.008834663 ubox
18 36 0.009629438 ubox
18 60 0.018079277 ubox
18 66 0.006340562 ubox
18 69 0.583365096 ubox
19 25 0.114048530 ubox
19 28 0.007294670 ubox
19 29 0.005820262 ubox
19 35 0.009695215 ubox
19 59 0.018118933 ubox
19 65 0.006348036 ubox
19 68 0.583389745 ubox
19 74 0.082230842 ubox
20 24 0.112209437 ubox
20 27 0.009758658 ubox
20 34 0.009696658 ubox
20 58 0.018127290 ubox
20 64 0.006327841 ubox
20 67 0.583400090 ubox
20 73 0.083060825 ubox
21 26 0.009766245 ubox
21 33 0.009477911 ubox
21 57 0.017718288 ubox
21 63 0.006309848 ubox
21 66 0.583012490 ubox
21 72 0.083064374 ubox
22 57 0.003784083 ubox
22 62 0.006280851 ubox
22 66 0.003907578 ubox
22 71 0.083043607 ubox
23 32 0.032614626 ubox
23 56 0.018076525 ubox
23 61 0.006277803 ubox
23 64 0.582134366 ubox
23 65 0.013189661 ubox
23 70 0.083027237 ubox
23 73 0.004386950 ubox
24 31 0.032648049 ubox
24 55 0.018082726 ubox
24 60 0.005836400 ubox
24 63 0.582656166 ubox
24 69 0.075754084 ubox
24 72 0.004402473 ubox
25 30 0.032603975 ubox
25 53 0.018131690 ubox
25 62 0.582644504 ubox
25 69 0.005442154 ubox
26 52 0.018142719 ubox
26 61 0.580484883 ubox
26 67 0.006785073 ubox
26 68 0.003661718 ubox
26 70 0.008724665 ubox
26 73 0.584776071 ubox
27 51 0.018149941 ubox
27 60 0.528973357 ubox
27 66 0.006584930 ubox
27 69 0.008023071 ubox
27 72 0.587549586 ubox
28 50 0.018037347 ubox
28 71 0.589521181 ubox
29 60 0.239283362 ubox
29 69 0.740013311 ubox
30 49 0.018251983 ubox
30 59 0.580241916 ubox
30 65 0.004858934 ubox
30 68 0.757814938 ubox
30 74 0.004076865 ubox
31 48 0.018258738 ubox
31 58 0.582777096 ubox
31 64 0.003959252 ubox
31 67 0.757904755 ubox
31 73 0.004106203 ubox
32 47 0.018172503 ubox
32 57 0.582771266 ubox
32 66 0.758490584 ubox
32 72 0.004103200 ubox
33 46 0.017132325 ubox
33 56 0.582770678 ubox
33 64 0.608514423 ubox
33 65 0.536549418 ubox
34 45 0.016304502 ubox
34 55 0.582716622 ubox
34 63 0.812216673 ubox
35 45 0.004672732 ubox
35 47 0.013978835 ubox
35 53 0.582039827 ubox
35 62 0.812253548 ubox
36 44 0.006396849 ubox
36 46 0.015427273 ubox
36 52 0.582244936 ubox
36 61 0.812332943 ubox
37 45 0.015670587 ubox
37 51 0.582118674 ubox
37 60 0.812334594 ubox
38 44 0.016179669 ubox
38 49 0.579469509 ubox
38 59 0.812381552 ubox
39 43 0.010490940 ubox
39 48 0.581646376 ubox
39 58 0.812383827 ubox
40 45 0.004737977 ubox
40 47 0.557695667 ubox
40 57 0.802797598 ubox
41 53 0.003331281 ubox
42 51 0.003493621 ubox
42 55 0.810889225 ubox
43 50 0.003334509 ubox
43 54 0.812131688 ubox
44 53 0.812160421 ubox
44 57 0.007968358 ubox
45 52 0.627880445 ubox
45 56 0.009840803 ubox
45 58 0.004731400 ubox
46 51 0.327855476 ubox
46 55 0.009817979 ubox
46 57 0.005835690 ubox
47 52 0.010351177 ubox
47 56 0.009414767 ubox
48 55 0.009399552 ubox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
25 62 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
