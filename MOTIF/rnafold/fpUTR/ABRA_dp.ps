%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABRA)
} def

/sequence { (\
ACACUCAUUUUAGCCAGUGUCCAGGCUAUCAGCAGAGAAAGACAGGUGGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.014009913 ubox
1 20 0.026517099 ubox
1 47 0.019390872 ubox
2 17 0.017926529 ubox
2 19 0.033135840 ubox
2 46 0.020496766 ubox
2 48 0.330052403 ubox
3 18 0.043880248 ubox
3 47 0.330588257 ubox
4 13 0.055034023 ubox
4 17 0.048747294 ubox
4 32 0.015896353 ubox
4 35 0.045684735 ubox
4 37 0.226012326 ubox
4 41 0.009270597 ubox
4 45 0.022389963 ubox
4 46 0.329264071 ubox
4 49 0.038208052 ubox
4 50 0.684156132 ubox
4 53 0.035238562 ubox
5 12 0.052615690 ubox
5 16 0.046461341 ubox
5 31 0.015619585 ubox
5 34 0.044580902 ubox
5 36 0.228942839 ubox
5 38 0.024765896 ubox
5 40 0.008903489 ubox
5 42 0.072207979 ubox
5 44 0.024243579 ubox
5 45 0.305705497 ubox
5 46 0.008043010 ubox
5 48 0.009782935 ubox
5 49 0.687999609 ubox
5 50 0.005248060 ubox
5 52 0.034021102 ubox
6 19 0.007597206 ubox
6 35 0.229595445 ubox
6 37 0.029531235 ubox
6 41 0.091392504 ubox
6 45 0.060255036 ubox
6 48 0.691328853 ubox
6 49 0.006103587 ubox
7 18 0.014431953 ubox
7 29 0.009527738 ubox
7 47 0.690176112 ubox
8 17 0.016291578 ubox
8 28 0.006561793 ubox
8 32 0.063421387 ubox
8 35 0.013338968 ubox
8 36 0.032120826 ubox
8 37 0.019854015 ubox
8 38 0.025571173 ubox
8 39 0.075585988 ubox
8 40 0.110562600 ubox
8 41 0.052523806 ubox
8 42 0.219032174 ubox
8 45 0.017187608 ubox
8 46 0.685747775 ubox
8 50 0.005528091 ubox
8 53 0.015156343 ubox
9 16 0.015052148 ubox
9 17 0.005811889 ubox
9 31 0.069469303 ubox
9 32 0.070099149 ubox
9 34 0.011957629 ubox
9 35 0.033524966 ubox
9 36 0.025814138 ubox
9 37 0.028305038 ubox
9 38 0.080097330 ubox
9 39 0.112072539 ubox
9 40 0.061576279 ubox
9 41 0.220732586 ubox
9 42 0.053993505 ubox
9 44 0.019678951 ubox
9 45 0.652765515 ubox
9 46 0.022193931 ubox
9 48 0.003229500 ubox
9 49 0.006466716 ubox
9 50 0.011630965 ubox
9 52 0.018382035 ubox
9 53 0.024946170 ubox
10 16 0.006902395 ubox
10 17 0.007908519 ubox
10 31 0.067252576 ubox
10 32 0.021449427 ubox
10 34 0.034357311 ubox
10 35 0.027130492 ubox
10 36 0.029957742 ubox
10 37 0.080048721 ubox
10 38 0.110951032 ubox
10 39 0.062901430 ubox
10 40 0.213176107 ubox
10 41 0.057425761 ubox
10 42 0.036208473 ubox
10 44 0.598798769 ubox
10 45 0.029190512 ubox
10 46 0.004425114 ubox
10 48 0.005788092 ubox
10 49 0.013621571 ubox
10 50 0.016449208 ubox
10 52 0.024814068 ubox
10 53 0.077844291 ubox
11 16 0.008816159 ubox
11 28 0.760366247 ubox
11 31 0.013930259 ubox
11 34 0.014588322 ubox
11 35 0.021823787 ubox
11 36 0.040450132 ubox
11 37 0.079565085 ubox
11 38 0.037671135 ubox
11 39 0.130135670 ubox
11 40 0.031430483 ubox
11 41 0.030180083 ubox
11 44 0.018585774 ubox
11 45 0.005347213 ubox
11 48 0.010999748 ubox
11 49 0.015011482 ubox
11 52 0.096665738 ubox
12 18 0.003946949 ubox
12 27 0.800542880 ubox
12 47 0.010211445 ubox
13 26 0.803512938 ubox
13 33 0.018446847 ubox
13 47 0.046462441 ubox
13 51 0.467073510 ubox
13 54 0.179213749 ubox
14 19 0.003272129 ubox
14 25 0.803563639 ubox
14 32 0.018436945 ubox
14 46 0.051856994 ubox
14 49 0.133481361 ubox
14 50 0.461333234 ubox
14 53 0.180690681 ubox
15 24 0.803402959 ubox
15 45 0.051872448 ubox
15 48 0.153811785 ubox
15 49 0.454812410 ubox
16 27 0.015413826 ubox
16 47 0.168841016 ubox
17 26 0.016114214 ubox
17 29 0.009453541 ubox
17 43 0.028257419 ubox
17 47 0.045725904 ubox
17 51 0.005203177 ubox
17 54 0.077639772 ubox
18 25 0.016001942 ubox
18 28 0.009458478 ubox
18 31 0.003376074 ubox
18 34 0.006887514 ubox
18 42 0.027617784 ubox
18 44 0.473670974 ubox
18 46 0.012227617 ubox
18 48 0.011974543 ubox
18 50 0.004876225 ubox
18 52 0.312943787 ubox
18 53 0.045927049 ubox
19 26 0.009321715 ubox
19 27 0.006117810 ubox
19 30 0.003451456 ubox
19 33 0.006935220 ubox
19 43 0.478106764 ubox
19 47 0.019316910 ubox
19 51 0.341463406 ubox
20 25 0.008882571 ubox
20 32 0.006796122 ubox
20 36 0.017596683 ubox
20 38 0.037417699 ubox
20 42 0.477504206 ubox
20 46 0.006823722 ubox
20 50 0.341661383 ubox
21 35 0.018108391 ubox
21 37 0.042201587 ubox
21 41 0.475857933 ubox
21 45 0.007295897 ubox
21 46 0.074616764 ubox
21 49 0.342672078 ubox
21 50 0.008290795 ubox
22 45 0.074562341 ubox
22 48 0.342659151 ubox
22 49 0.008322618 ubox
23 47 0.337465681 ubox
24 30 0.006905969 ubox
25 29 0.004512474 ubox
25 33 0.343838485 ubox
25 47 0.029286235 ubox
25 51 0.012006108 ubox
25 54 0.006791415 ubox
26 32 0.343894148 ubox
26 35 0.180994011 ubox
26 37 0.248359843 ubox
26 41 0.260998218 ubox
26 45 0.214852888 ubox
26 46 0.036536587 ubox
26 49 0.011350723 ubox
26 50 0.010133635 ubox
26 53 0.006873292 ubox
27 31 0.309814020 ubox
27 34 0.173765241 ubox
27 36 0.242550639 ubox
27 40 0.257566407 ubox
27 44 0.210369024 ubox
27 45 0.035019804 ubox
27 48 0.013507928 ubox
27 49 0.007575734 ubox
27 52 0.006752529 ubox
28 47 0.016244131 ubox
29 36 0.310032785 ubox
29 38 0.416882717 ubox
29 42 0.242478542 ubox
29 46 0.017865707 ubox
29 49 0.013563478 ubox
29 50 0.011189399 ubox
30 35 0.329626689 ubox
30 37 0.436456782 ubox
30 41 0.249438161 ubox
30 45 0.021978510 ubox
30 48 0.018286656 ubox
30 49 0.014192698 ubox
31 47 0.017359518 ubox
32 47 0.016463943 ubox
32 51 0.035727264 ubox
32 54 0.011406307 ubox
33 46 0.018655715 ubox
33 48 0.012596016 ubox
33 50 0.035705742 ubox
33 53 0.011500980 ubox
34 47 0.012635161 ubox
46 54 0.038098029 ubox
47 53 0.038195017 ubox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
showpage
end
%%EOF
