%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGAGCAAGCCCCAGACGGUAUCUCCUGGAUGCCAGUGAGCGGCUGAGAGCUGAAGCUCCCUGGACACUCAAGGCUCUUGUGGUGACAGUCUGACGUAAAGGCGUGCAGGGAGGCCUAGCUCUGUCUCCUGGACUUAGAGAUUUCAGACACAGAAGUCUGUCC\
) } def
/len { sequence length } bind def

/coor [
[135.24284363 177.79583740]
[127.81648254 178.84425354]
[122.59841919 192.90739441]
[117.38035583 206.97053528]
[112.16229248 221.03367615]
[106.94422913 235.09680176]
[113.76097870 249.35540771]
[108.42008972 264.22988892]
[94.09021759 270.89550781]
[79.27302551 265.39764404]
[72.75929260 250.99810791]
[78.41349030 236.23988342]
[92.88109589 229.87873840]
[98.09915924 215.81561279]
[103.31722260 201.75247192]
[108.53528595 187.68933105]
[113.75334930 173.62619019]
[113.75334930 158.62619019]
[108.53528595 144.56306458]
[103.31722260 130.49992371]
[98.09915924 116.43678284]
[84.18789673 110.82635498]
[70.67336273 117.33461761]
[57.15883255 123.84287262]
[43.64429855 130.35112000]
[30.12976646 136.85937500]
[16.61523438 143.36764526]
[3.10070133 149.87590027]
[-8.54645538 162.19580078]
[-23.60914803 154.41430664]
[-20.30152893 137.78613281]
[-3.40755463 136.36135864]
[10.10697842 129.85310364]
[23.62151146 123.34484863]
[37.13604355 116.83659363]
[50.65057755 110.32833862]
[64.16510773 103.82008362]
[77.67964172 97.31182098]
[74.89096832 82.57332611]
[59.93291092 81.45237732]
[44.97485352 80.33142853]
[31.92570877 89.66412354]
[16.53308868 85.14231110]
[10.60489845 70.23472595]
[18.68873596 56.37719345]
[34.58337402 54.20003128]
[46.09580612 65.37336731]
[61.05386353 66.49431610]
[76.01191711 67.61527252]
[86.78818512 80.04541016]
[96.16304016 93.48312378]
[98.95171356 78.74462891]
[101.74038696 64.00613403]
[104.52906036 49.26763535]
[107.31773376 34.52913666]
[110.10640717 19.79064178]
[112.89508057 5.05214453]
[102.42910004 -6.25136900]
[100.64663696 -21.37341309]
[108.02312469 -34.49025345]
[121.54699707 -40.67432404]
[124.33567047 -55.41282272]
[127.12434387 -70.15132141]
[129.91302490 -84.88981628]
[132.70169067 -99.62831116]
[135.49037170 -114.36681366]
[138.27903748 -129.10530090]
[133.24224854 -144.10334778]
[143.21080017 -155.17028809]
[145.99948120 -169.90878296]
[109.98760223 -193.31738281]
[107.47501373 -208.10545349]
[104.96241760 -222.89350891]
[102.31166840 -237.65744019]
[99.52299500 -252.39593506]
[96.73432159 -267.13442993]
[93.94564819 -281.87292480]
[85.06003571 -296.31185913]
[96.47489166 -308.84729004]
[111.68039703 -301.34869385]
[108.68414307 -284.66159058]
[111.47281647 -269.92309570]
[114.26148987 -255.18461609]
[117.05016327 -240.44612122]
[121.40156555 -234.43342590]
[119.75048065 -225.40611267]
[122.26307678 -210.61804199]
[124.77567291 -195.82997131]
[132.10290527 -194.22950745]
[135.30409241 -208.88394165]
[149.95848083 -205.68252563]
[146.75740051 -191.02856445]
[154.08464050 -189.42810059]
[162.53443909 -201.82168579]
[170.98425293 -214.21527100]
[179.43405151 -226.60884094]
[175.02487183 -241.61195374]
[181.33837891 -255.91836548]
[195.39353943 -262.77304077]
[210.55392456 -258.93942261]
[219.66127014 -246.22758484]
[218.41535950 -230.63970947]
[207.40447998 -219.53590393]
[191.82762146 -218.15904236]
[183.37782288 -205.76545715]
[174.92802429 -193.37188721]
[166.47822571 -180.97830200]
[160.73797607 -167.12010193]
[157.94929504 -152.38160706]
[163.18556213 -138.43775940]
[153.01754761 -126.31663513]
[150.22886658 -111.57814026]
[147.44018555 -96.83963776]
[144.65151978 -82.10114288]
[141.86283875 -67.36264801]
[139.07417297 -52.62414932]
[136.28549194 -37.88565063]
[146.61521912 -27.18823433]
[148.68968201 -12.28318024]
[141.50572205 1.14232731]
[127.63358307 7.84081841]
[124.84490967 22.57931519]
[122.05623627 37.31781387]
[119.26755524 52.05630875]
[116.47888184 66.79480743]
[113.69020844 81.53330231]
[110.90153503 96.27180481]
[112.16229248 111.21872711]
[117.38035583 125.28186035]
[122.59841919 139.34500122]
[127.81648254 153.40812683]
[136.44941711 149.24757385]
[147.70964050 149.30227661]
[159.57089233 154.72621155]
[169.59088135 165.74324036]
[178.49818420 177.81221008]
[187.40548706 189.88117981]
[196.31278992 201.95014954]
[200.44303894 203.57138062]
[203.51222229 206.17648315]
[205.33961487 209.30259705]
[205.91654968 212.47605896]
[205.39448547 215.27055359]
[213.37496948 227.97142029]
[221.35545349 240.67227173]
[229.33593750 253.37313843]
[237.31640625 266.07400513]
[245.29689026 278.77487183]
[253.27737427 291.47573853]
[268.79183960 293.43405151]
[279.37985229 304.94180298]
[280.04202271 320.56536865]
[270.46575928 332.92776489]
[255.17262268 336.19186401]
[241.38360596 328.81643677]
[235.60943604 314.28396606]
[240.57650757 299.45620728]
[232.59603882 286.75534058]
[224.61555481 274.05447388]
[216.63507080 261.35360718]
[208.65458679 248.65275574]
[200.67410278 235.95188904]
[192.69361877 223.25103760]
[184.24382019 210.85745239]
[175.33651733 198.78848267]
[166.42921448 186.71951294]
[157.52191162 174.65054321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[18 131]
[19 130]
[20 129]
[21 128]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[39 49]
[40 48]
[41 47]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[69 109]
[70 108]
[71 88]
[72 87]
[73 86]
[74 84]
[75 83]
[76 82]
[77 81]
[93 107]
[94 106]
[95 105]
[96 104]
[135 167]
[136 166]
[137 165]
[138 164]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
