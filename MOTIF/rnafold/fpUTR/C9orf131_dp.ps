%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C9orf131)
} def

/sequence { (\
GUGAUGCAAUGAUGACCUCAGGGUAAACUGCCAGAAGGCUAAGGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.107879078 ubox
1 10 0.062426735 ubox
1 13 0.063116247 ubox
1 16 0.146495533 ubox
1 28 0.672541820 ubox
1 31 0.010772722 ubox
1 39 0.024545033 ubox
2 6 0.100988923 ubox
2 8 0.036045930 ubox
2 9 0.064651297 ubox
2 11 0.008717420 ubox
2 12 0.065908315 ubox
2 14 0.006923537 ubox
2 15 0.155099586 ubox
2 20 0.018902993 ubox
2 25 0.009140841 ubox
2 27 0.671747373 ubox
2 30 0.010815863 ubox
2 33 0.013532284 ubox
2 38 0.024092785 ubox
2 41 0.012022741 ubox
3 7 0.039626936 ubox
3 10 0.007137862 ubox
3 13 0.005235607 ubox
3 19 0.021419639 ubox
3 24 0.004970304 ubox
3 29 0.023029494 ubox
3 32 0.014938466 ubox
3 40 0.012281191 ubox
4 10 0.061841931 ubox
4 13 0.169637607 ubox
4 18 0.019858279 ubox
4 24 0.017981342 ubox
5 9 0.055209601 ubox
5 11 0.006291676 ubox
5 12 0.170154161 ubox
5 14 0.006143782 ubox
5 23 0.017936879 ubox
5 25 0.816866366 ubox
5 33 0.018956257 ubox
5 41 0.005967965 ubox
6 10 0.006328842 ubox
6 13 0.007615859 ubox
6 24 0.876412070 ubox
6 31 0.043944024 ubox
6 32 0.014572747 ubox
6 39 0.019161975 ubox
6 40 0.005248767 ubox
7 14 0.095555298 ubox
7 23 0.879470136 ubox
7 30 0.046208599 ubox
7 38 0.018470367 ubox
8 13 0.083431777 ubox
8 29 0.044955617 ubox
9 24 0.012137507 ubox
10 20 0.878500951 ubox
10 23 0.012246672 ubox
10 25 0.006882072 ubox
10 33 0.006796382 ubox
10 41 0.009420607 ubox
11 19 0.880056586 ubox
11 24 0.003934341 ubox
11 29 0.013110263 ubox
11 32 0.006823144 ubox
11 40 0.009472531 ubox
12 18 0.843850095 ubox
12 24 0.005178382 ubox
13 20 0.034961136 ubox
13 23 0.004354992 ubox
13 25 0.046033273 ubox
13 33 0.011138952 ubox
13 41 0.105922935 ubox
14 19 0.035829950 ubox
14 24 0.035524070 ubox
14 29 0.005278086 ubox
14 32 0.011194634 ubox
14 40 0.112906750 ubox
15 24 0.316778494 ubox
16 22 0.034405069 ubox
16 23 0.328506055 ubox
16 38 0.275307555 ubox
16 44 0.088148309 ubox
16 45 0.052158849 ubox
17 21 0.034637564 ubox
17 22 0.328633131 ubox
17 23 0.010997841 ubox
17 34 0.017518725 ubox
17 37 0.279920575 ubox
17 38 0.012116451 ubox
17 43 0.088961991 ubox
17 44 0.053109271 ubox
17 45 0.078122178 ubox
18 22 0.010032331 ubox
18 33 0.016572121 ubox
18 35 0.141228896 ubox
18 36 0.240449305 ubox
18 37 0.011267621 ubox
18 38 0.006764964 ubox
18 42 0.084914929 ubox
18 43 0.048051189 ubox
18 44 0.078181926 ubox
18 45 0.007602775 ubox
18 46 0.017179252 ubox
19 30 0.052952298 ubox
19 34 0.195459854 ubox
19 37 0.010811911 ubox
19 43 0.078795754 ubox
19 44 0.009708402 ubox
19 45 0.018006550 ubox
20 29 0.104675800 ubox
20 40 0.047165623 ubox
21 28 0.108794169 ubox
21 29 0.057097700 ubox
21 32 0.089540779 ubox
21 39 0.045982003 ubox
21 40 0.011801541 ubox
22 28 0.061920147 ubox
22 29 0.025869234 ubox
22 31 0.089102439 ubox
22 32 0.275222578 ubox
22 39 0.008900984 ubox
22 40 0.036484561 ubox
23 28 0.027242995 ubox
23 31 0.275498173 ubox
23 39 0.036694686 ubox
24 30 0.274005042 ubox
24 38 0.036295712 ubox
24 41 0.017651602 ubox
25 29 0.228095973 ubox
25 40 0.019177587 ubox
28 34 0.023753761 ubox
28 37 0.035501538 ubox
28 38 0.005895639 ubox
28 43 0.305765458 ubox
28 44 0.205261013 ubox
28 45 0.098838163 ubox
29 33 0.021474433 ubox
29 36 0.035410411 ubox
29 37 0.005927555 ubox
29 41 0.133709863 ubox
29 42 0.281918024 ubox
29 43 0.203133959 ubox
29 44 0.098953274 ubox
30 39 0.948882055 ubox
30 40 0.029440911 ubox
31 38 0.951438256 ubox
31 44 0.040725001 ubox
31 45 0.029856044 ubox
32 37 0.950093153 ubox
32 43 0.040893533 ubox
32 44 0.029950674 ubox
33 40 0.033948656 ubox
34 39 0.035611843 ubox
39 45 0.039658457 ubox
40 44 0.037445137 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
