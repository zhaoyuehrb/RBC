%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGCGGGGCCGCGCGUCCAGGCGGCGAGCGGAAGUGGGUGUGAGAGCGGAAGUGGCCGGCUAGAGCCGGGGGCUGGGCGGGGACCGGGCUUGUCGGUGAAGCGGCAGUGGCGGCGGCGGCGGCGGCUCGGCAGGCGGGUUCAGGCUUCGGGGGCCAGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[240.85530090 231.14666748]
[237.82481384 229.17179871]
[235.37345886 225.98437500]
[233.95344543 221.78652954]
[222.32539368 212.31086731]
[210.69732666 202.83520508]
[199.06925964 193.35954285]
[187.44120789 183.88386536]
[171.73408508 188.59280396]
[156.15440369 182.96862793]
[146.89315796 169.03620911]
[147.75515747 152.16256714]
[135.95397949 142.90339661]
[124.15280914 133.64422607]
[112.35163116 124.38505554]
[100.55046082 115.12587738]
[85.78102875 112.50598907]
[71.51517487 117.14124298]
[64.28639984 122.79085541]
[56.94270325 121.72770691]
[42.59363556 126.09855652]
[28.28556824 130.60179138]
[14.01972008 135.23704529]
[3.28593349 146.86015320]
[-11.20937920 143.43447876]
[-25.47522736 148.06973267]
[-37.45124817 162.03356934]
[-54.45602417 157.76527405]
[-68.63378143 162.66334534]
[-73.02630615 177.54573059]
[-85.34807587 186.97726440]
[-100.86110687 187.33131409]
[-113.60033417 178.47175598]
[-118.66725922 163.80526733]
[-114.11354828 148.97142029]
[-101.69019318 139.67410278]
[-86.17423248 139.48835754]
[-73.53186035 148.48559570]
[-59.35410690 143.58750916]
[-53.76485443 132.83195496]
[-41.96170425 128.64895630]
[-30.11048126 133.80389404]
[-15.84463406 129.16864014]
[-6.13123608 117.87708282]
[9.38446522 120.97120667]
[23.65031242 116.33594513]
[29.06133652 111.25845337]
[38.22278976 111.74948883]
[52.57185364 107.37863922]
[66.87992096 102.87539673]
[81.14577484 98.24014282]
[66.44161224 101.20455170]
[52.99958038 94.54783630]
[46.44495010 81.05573273]
[49.52072525 66.37446594]
[60.93974686 56.64790726]
[75.92333984 55.94646454]
[88.20111084 64.56367493]
[92.63497162 78.89464569]
[89.87873077 64.15004730]
[87.12248993 49.40545273]
[84.36624146 34.66085815]
[81.61000061 19.91626167]
[78.85375977 5.17166471]
[74.81073761 -0.13953236]
[74.18177032 -5.83742142]
[76.27867126 -10.16806412]
[74.06914520 -25.00443840]
[71.85961914 -39.84081268]
[69.65010071 -54.67718506]
[67.44057465 -69.51355743]
[57.75488281 -82.02347565]
[63.53303528 -95.75163269]
[61.32350922 -110.58800507]
[48.90786743 -119.99490356]
[46.87844467 -135.07257080]
[55.92299652 -146.85101318]
[53.71347046 -161.68739319]
[41.72980499 -172.35374451]
[42.74125290 -188.36488342]
[55.97191620 -197.43843079]
[71.27236176 -192.61392212]
[76.90540314 -177.59231567]
[68.54984283 -163.89691162]
[70.75936890 -149.06053162]
[82.84354401 -140.42871094]
[85.29566193 -125.41400146]
[76.15988159 -112.79753113]
[78.36940765 -97.96115875]
[87.89705658 -86.51243591]
[82.27694702 -71.72308350]
[84.48647308 -56.88671112]
[86.69599915 -42.05033875]
[88.90552521 -27.21396446]
[91.11505127 -12.37758923]
[93.59835815 2.41542172]
[96.35459900 17.16001892]
[99.11083984 31.90461540]
[101.86708069 46.64921188]
[104.62332916 61.39380646]
[107.37957001 76.13840485]
[113.72525787 83.68307495]
[115.73512268 91.96658325]
[113.97551727 98.98308563]
[109.80963135 103.32470703]
[121.61080933 112.58387756]
[133.41198730 121.84304810]
[145.21315002 131.10221863]
[157.01432800 140.36140442]
[169.97662354 135.60937500]
[183.48548889 137.87490845]
[194.02023315 146.45886230]
[198.88914490 159.02964783]
[196.91687012 172.25581360]
[208.54493713 181.73147583]
[220.17298889 191.20713806]
[231.80105591 200.68280029]
[243.42910767 210.15847778]
[255.39936829 219.19799805]
[267.69546509 227.78901672]
[279.99157715 236.38005066]
[292.28768921 244.97106934]
[304.58380127 253.56210327]
[316.87991333 262.15313721]
[329.17602539 270.74414062]
[341.47210693 279.33517456]
[353.76821899 287.92620850]
[366.14318848 296.40325928]
[378.59594727 304.76559448]
[391.04870605 313.12792969]
[403.50146484 321.49026489]
[415.95422363 329.85263062]
[430.46380615 324.67779541]
[445.06759644 328.98855591]
[454.22448730 340.93069458]
[454.58917236 355.79693604]
[467.04193115 364.15930176]
[479.49468994 372.52163696]
[491.94744873 380.88397217]
[506.47091675 375.42065430]
[521.42297363 379.56985474]
[531.05419922 391.73614502]
[531.66125488 407.24136353]
[523.01062012 420.12338257]
[508.42871094 425.42883301]
[493.52258301 421.11767578]
[484.02389526 408.84759521]
[483.58511353 393.33673096]
[471.13232422 384.97439575]
[458.67956543 376.61206055]
[446.22680664 368.24969482]
[432.32806396 373.53771973]
[417.80889893 369.58078003]
[408.29248047 357.69418335]
[407.59188843 342.30538940]
[395.13912964 333.94302368]
[382.68637085 325.58068848]
[370.23361206 317.21835327]
[357.78085327 308.85601807]
[350.44604492 307.73315430]
[345.17721558 300.22232056]
[332.88110352 291.63128662]
[320.58499146 283.04025269]
[308.28887939 274.44921875]
[295.99276733 265.85821533]
[283.69665527 257.26718140]
[271.40054321 248.67614746]
[259.10446167 240.08512878]
[246.80834961 231.49409485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 118]
[5 117]
[6 116]
[7 115]
[8 114]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[17 51]
[18 50]
[20 49]
[21 48]
[22 46]
[23 45]
[25 43]
[26 42]
[28 39]
[29 38]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[73 89]
[74 88]
[77 85]
[78 84]
[119 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[136 151]
[137 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
