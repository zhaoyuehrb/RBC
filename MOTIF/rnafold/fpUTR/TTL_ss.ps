%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCACCCGGCGGGCGCCCGGGCGCGGCGCCGCCGGCACCCGAGAGGCGCGGUAGCCGGCGCGGGCGGCGGGGGCCGGGCCGCGGCGGGCGCCCGGGCGGGGUCCGCGCUGAGCCGCCUUCUCGGCCGCCUGGUCCCUGCGGCGGCUGCCCGGCGGCCCGGGCGCGCGGCGCUUCGCC\
) } def
/len { sequence length } bind def

/coor [
[81.59201050 510.13919067]
[79.23691559 525.31646729]
[69.59621429 537.27270508]
[55.26321030 542.79187012]
[40.09341431 540.38916016]
[28.16741753 530.71105957]
[22.69325829 516.36083984]
[25.14345741 501.19863892]
[34.85892105 489.30303955]
[49.22624207 483.87387085]
[51.57275772 469.05856323]
[53.91927719 454.24322510]
[56.26579285 439.42788696]
[58.61230850 424.61257935]
[60.82944870 409.77734375]
[62.91704559 394.92330933]
[65.00464630 380.06930542]
[67.09223938 365.21527100]
[69.17984009 350.36126709]
[71.13772583 335.48959351]
[72.96576691 320.60137939]
[66.83720398 307.02603149]
[76.19865417 294.27166748]
[78.02669525 279.38348389]
[71.89813232 265.80813599]
[81.25957489 253.05377197]
[83.08761597 238.16557312]
[84.91565704 223.27738953]
[82.60356140 216.23545837]
[86.90771484 208.14616394]
[88.99531555 193.29212952]
[91.08290863 178.43811035]
[93.17050934 163.58409119]
[95.25810242 148.73007202]
[97.34570312 133.87605286]
[99.43329620 119.02203369]
[89.39633942 107.87486267]
[74.40547943 108.39835358]
[60.88373947 116.61255646]
[47.89419174 109.32415009]
[32.90332794 109.84764099]
[20.95443535 120.55294037]
[5.15927362 117.74359131]
[-2.36545730 103.57468414]
[4.15257072 88.91539001]
[19.71328545 85.01106262]
[32.37983704 94.85677338]
[47.37070084 94.33328247]
[59.82019043 86.15652466]
[73.88198090 93.40748596]
[88.87284851 92.88399506]
[101.23474121 84.38790131]
[107.09570312 70.58032990]
[112.95667267 56.77275848]
[118.81764221 42.96518707]
[124.67860413 29.15761185]
[130.53956604 15.35003948]
[136.40054321 1.54246688]
[142.26150513 -12.26510620]
[140.53144836 -27.99143600]
[152.62660217 -36.68374634]
[158.48757935 -50.49132156]
[164.34854126 -64.29888916]
[170.20950317 -78.10646820]
[176.07048035 -91.91403961]
[181.93144226 -105.72161102]
[182.40835571 -114.87230682]
[188.01707458 -119.71759796]
[194.11811829 -133.42077637]
[200.21916199 -147.12396240]
[206.08013916 -160.93153381]
[211.69923401 -174.83929443]
[209.69496155 -190.53303528]
[221.63658142 -199.43510437]
[227.25569153 -213.34286499]
[232.87478638 -227.25062561]
[238.49388123 -241.15838623]
[244.11297607 -255.06613159]
[249.73208618 -268.97390747]
[255.35118103 -282.88165283]
[248.22050476 -298.84112549]
[254.69787598 -314.71286011]
[270.33126831 -320.87814331]
[275.70678711 -334.88186646]
[281.08230591 -348.88555908]
[286.45782471 -362.88928223]
[291.83334351 -376.89297485]
[288.52197266 -394.99380493]
[302.55197144 -405.51556396]
[307.68228149 -419.61096191]
[312.81256104 -433.70632935]
[317.94287109 -447.80172729]
[323.07318115 -461.89712524]
[322.29760742 -468.50854492]
[324.64306641 -473.72372437]
[328.63632202 -476.38961792]
[334.25543213 -490.29739380]
[339.87454224 -504.20513916]
[345.49362183 -518.11291504]
[345.82101440 -535.06365967]
[362.19998169 -539.44152832]
[370.94088745 -524.91461182]
[359.40139771 -512.49377441]
[353.78228760 -498.58602905]
[348.16317749 -484.67828369]
[342.54409790 -470.77053833]
[337.16857910 -456.76681519]
[332.03826904 -442.67141724]
[326.90795898 -428.57604980]
[321.77764893 -414.48065186]
[316.64736938 -400.38525391]
[321.47616577 -389.27517700]
[317.29562378 -377.47875977]
[305.83706665 -371.51745605]
[300.46154785 -357.51376343]
[295.08602905 -343.51004028]
[289.71051025 -329.50634766]
[284.33499146 -315.50262451]
[291.17663574 -304.56460571]
[290.44961548 -291.48855591]
[282.19580078 -281.07095337]
[269.25894165 -277.26254272]
[263.63983154 -263.35479736]
[258.02075195 -249.44703674]
[252.40164185 -235.53927612]
[246.78254700 -221.63153076]
[241.16345215 -207.72377014]
[235.54434204 -193.81600952]
[237.95053101 -179.11705017]
[225.60699463 -169.22018433]
[219.98788452 -155.31243896]
[221.00852966 -150.62080383]
[219.07292175 -145.24002075]
[213.92234802 -141.02290344]
[207.82130432 -127.31972504]
[201.72024536 -113.61654663]
[195.73901367 -99.86064148]
[189.87805176 -86.05307007]
[184.01707458 -72.24549866]
[178.15611267 -58.43792725]
[172.29515076 -44.63035202]
[166.43417358 -30.82278061]
[168.58346558 -16.08406067]
[156.06907654 -6.40413904]
[150.20811462 7.40343380]
[144.34715271 21.21100616]
[138.48617554 35.01857758]
[132.62521362 48.82615280]
[126.76424408 62.63372421]
[120.90328217 76.44129944]
[115.04231262 90.24887085]
[114.28731537 121.10962677]
[112.19972229 135.96365356]
[110.11212921 150.81767273]
[108.02452850 165.67169189]
[105.93693542 180.52571106]
[103.84933472 195.37973022]
[101.76174164 210.23374939]
[99.80384827 225.10542297]
[97.97580719 239.99362183]
[96.14776611 254.88180542]
[102.14557648 269.52206421]
[92.91488647 281.21151733]
[91.08684540 296.09973145]
[97.08465576 310.73995972]
[87.85395813 322.42944336]
[86.02592468 337.31762695]
[88.08975983 346.24530029]
[84.03385925 352.44885254]
[81.94625854 367.30288696]
[79.85866547 382.15689087]
[77.77106476 397.01092529]
[75.68347168 411.86492920]
[77.59117889 420.82727051]
[73.42763519 426.95910645]
[71.08111572 441.77441406]
[68.73460388 456.58975220]
[66.38808441 471.40505981]
[64.04156494 486.22039795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 167]
[21 166]
[23 164]
[24 163]
[26 161]
[27 160]
[28 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 51]
[38 50]
[40 48]
[41 47]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 137]
[68 136]
[69 135]
[70 134]
[71 131]
[72 130]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[96 106]
[97 105]
[98 104]
[99 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
