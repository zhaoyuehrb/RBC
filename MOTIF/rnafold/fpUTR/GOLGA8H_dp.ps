%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA8H)
} def

/sequence { (\
UCACACAGCUGCCUGGUAGGUGACUGGAGGCCUUGAUUGGUUCUCAUUGAGAUUUUGCUGCUGUGACCCCAACCCUGCCUCCCUCCCCACCCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.007905004 ubox
1 66 0.007071101 ubox
2 11 0.023545293 ubox
2 15 0.024736380 ubox
2 22 0.008770880 ubox
2 65 0.007847744 ubox
2 94 0.003431632 ubox
3 10 0.025769087 ubox
3 14 0.022753588 ubox
3 17 0.038179068 ubox
3 21 0.008755325 ubox
3 64 0.007847324 ubox
4 11 0.038216224 ubox
4 15 0.041732823 ubox
4 16 0.040402577 ubox
4 20 0.008725645 ubox
4 22 0.005130399 ubox
4 63 0.007847080 ubox
4 65 0.004614523 ubox
4 94 0.005698050 ubox
5 10 0.034899094 ubox
5 14 0.040567654 ubox
5 17 0.004425695 ubox
5 21 0.005156999 ubox
5 62 0.007800206 ubox
5 64 0.004638626 ubox
5 93 0.005232706 ubox
6 15 0.314508860 ubox
6 16 0.003639451 ubox
6 20 0.005139043 ubox
6 22 0.017841852 ubox
6 26 0.006529856 ubox
6 60 0.007824606 ubox
6 63 0.004645413 ubox
6 94 0.091652147 ubox
7 14 0.314606268 ubox
7 21 0.017929633 ubox
7 25 0.008296291 ubox
7 59 0.007827161 ubox
7 62 0.004648067 ubox
7 93 0.092038709 ubox
8 13 0.309715899 ubox
8 17 0.013675424 ubox
8 24 0.008451061 ubox
8 58 0.007829065 ubox
8 61 0.004653249 ubox
8 92 0.091975561 ubox
8 95 0.151906866 ubox
9 16 0.014124812 ubox
9 19 0.019612333 ubox
9 57 0.007814340 ubox
9 60 0.004642811 ubox
9 94 0.151934269 ubox
10 15 0.013553967 ubox
10 18 0.020364090 ubox
10 22 0.008137642 ubox
10 94 0.005691595 ubox
10 96 0.506221568 ubox
11 17 0.020458016 ubox
11 21 0.010864730 ubox
11 31 0.005376568 ubox
11 58 0.004097172 ubox
11 93 0.027991894 ubox
11 95 0.912859492 ubox
12 16 0.020344382 ubox
12 20 0.010982394 ubox
12 30 0.005518160 ubox
12 57 0.004088764 ubox
12 94 0.912884401 ubox
13 19 0.010983629 ubox
13 29 0.005575798 ubox
14 18 0.009897760 ubox
14 28 0.005477428 ubox
14 89 0.013947449 ubox
14 94 0.005043167 ubox
14 96 0.008273166 ubox
15 88 0.014479680 ubox
15 91 0.923556201 ubox
15 92 0.137984554 ubox
15 93 0.015390713 ubox
15 95 0.012665156 ubox
16 24 0.003165561 ubox
16 87 0.013965748 ubox
16 90 0.925309073 ubox
16 91 0.132248882 ubox
16 92 0.016473079 ubox
16 95 0.348797489 ubox
17 26 0.005382117 ubox
17 89 0.912102219 ubox
17 94 0.349061739 ubox
18 25 0.006272272 ubox
18 84 0.003947612 ubox
18 93 0.347938070 ubox
19 24 0.006359765 ubox
19 83 0.004023011 ubox
19 84 0.005358753 ubox
19 86 0.032685722 ubox
19 87 0.787675753 ubox
19 88 0.501477532 ubox
19 91 0.206239906 ubox
19 92 0.286913656 ubox
20 83 0.005527600 ubox
20 85 0.033199819 ubox
20 86 0.788511291 ubox
20 87 0.500510611 ubox
20 90 0.285381333 ubox
20 91 0.208498247 ubox
21 89 0.346598076 ubox
22 85 0.921893297 ubox
22 88 0.344411409 ubox
23 84 0.905521988 ubox
26 81 0.007878211 ubox
26 82 0.994296139 ubox
26 83 0.084699962 ubox
26 84 0.004108660 ubox
26 85 0.004011685 ubox
26 86 0.030682514 ubox
27 45 0.004682312 ubox
27 80 0.003426413 ubox
27 81 0.997627036 ubox
27 82 0.060094402 ubox
27 85 0.030522711 ubox
28 44 0.004737857 ubox
28 80 0.999328686 ubox
28 84 0.030159207 ubox
29 43 0.004733713 ubox
29 79 0.999505487 ubox
29 83 0.029523659 ubox
30 41 0.012685924 ubox
30 42 0.003351214 ubox
30 78 0.999475282 ubox
30 82 0.028153714 ubox
31 40 0.026207746 ubox
31 77 0.997878865 ubox
32 39 0.032149012 ubox
32 40 0.018983450 ubox
32 51 0.043200682 ubox
33 39 0.018911670 ubox
33 50 0.043316430 ubox
33 72 0.179270707 ubox
34 46 0.004386028 ubox
34 49 0.043056539 ubox
34 71 0.195924430 ubox
34 77 0.004302033 ubox
35 43 0.008628522 ubox
35 45 0.004988937 ubox
35 48 0.042731234 ubox
35 70 0.196745839 ubox
35 76 0.047539095 ubox
35 81 0.006500096 ubox
36 42 0.008608233 ubox
36 44 0.004814164 ubox
36 47 0.042412355 ubox
36 53 0.003317612 ubox
36 64 0.005089051 ubox
36 80 0.006330908 ubox
37 46 0.035106415 ubox
37 63 0.004845891 ubox
37 66 0.004892813 ubox
37 72 0.844297620 ubox
38 46 0.024644796 ubox
38 60 0.009509952 ubox
38 63 0.006146651 ubox
38 65 0.004665296 ubox
38 71 0.911553387 ubox
39 45 0.033985790 ubox
39 54 0.009259895 ubox
39 55 0.011274058 ubox
39 59 0.016018870 ubox
39 62 0.009106570 ubox
39 68 0.283977568 ubox
39 69 0.273401122 ubox
39 70 0.913264978 ubox
39 74 0.060412377 ubox
39 75 0.009661157 ubox
39 76 0.003621216 ubox
39 79 0.005083244 ubox
40 44 0.022035138 ubox
40 53 0.013178694 ubox
40 54 0.020494241 ubox
40 55 0.003761284 ubox
40 58 0.017040927 ubox
40 61 0.009718642 ubox
40 67 0.285229164 ubox
40 68 0.283244163 ubox
40 69 0.907800795 ubox
40 73 0.060588317 ubox
40 74 0.009188656 ubox
40 75 0.003613172 ubox
40 78 0.005092295 ubox
41 50 0.004112624 ubox
41 51 0.059726906 ubox
41 52 0.017337846 ubox
41 57 0.017548514 ubox
41 60 0.010007756 ubox
41 63 0.003761231 ubox
41 66 0.248491714 ubox
41 72 0.059863666 ubox
41 77 0.004918242 ubox
42 49 0.003799987 ubox
42 50 0.073341214 ubox
42 51 0.005475248 ubox
42 52 0.332022790 ubox
42 65 0.181886824 ubox
42 66 0.379214309 ubox
42 71 0.049687826 ubox
43 49 0.075107334 ubox
43 51 0.359753244 ubox
43 65 0.401147230 ubox
44 50 0.359679280 ubox
44 52 0.027649803 ubox
44 66 0.787744082 ubox
45 49 0.356680576 ubox
45 51 0.029242060 ubox
45 57 0.008476239 ubox
45 60 0.032899260 ubox
45 63 0.411465508 ubox
45 65 0.810163035 ubox
46 53 0.004168589 ubox
46 56 0.008533728 ubox
46 59 0.032219111 ubox
46 62 0.387975711 ubox
46 64 0.808292609 ubox
47 52 0.005096335 ubox
47 63 0.778676295 ubox
47 66 0.004243729 ubox
47 72 0.003264626 ubox
48 57 0.040733112 ubox
48 60 0.135464020 ubox
48 63 0.031994311 ubox
48 65 0.004403246 ubox
48 71 0.004011314 ubox
49 55 0.012212817 ubox
49 56 0.047394683 ubox
49 59 0.071646467 ubox
49 62 0.026334553 ubox
49 64 0.003964183 ubox
49 70 0.004152762 ubox
50 54 0.010896529 ubox
50 55 0.044664902 ubox
50 56 0.033133335 ubox
50 59 0.823033968 ubox
50 62 0.171095636 ubox
51 55 0.023240953 ubox
51 58 0.837108825 ubox
51 61 0.180131943 ubox
52 64 0.009560769 ubox
53 63 0.010211571 ubox
53 66 0.019398260 ubox
54 65 0.020207329 ubox
54 66 0.022953805 ubox
55 65 0.019732490 ubox
55 66 0.283562597 ubox
55 72 0.004574819 ubox
56 63 0.007442184 ubox
56 65 0.312696443 ubox
56 71 0.005488538 ubox
57 62 0.007562870 ubox
57 64 0.350187335 ubox
57 70 0.005565622 ubox
57 78 0.013803302 ubox
58 63 0.352974472 ubox
58 77 0.013907976 ubox
59 65 0.005427893 ubox
59 71 0.003851771 ubox
60 64 0.003882175 ubox
60 70 0.004206605 ubox
60 78 0.008666899 ubox
61 77 0.008736333 ubox
62 71 0.012686252 ubox
63 70 0.013704395 ubox
63 73 0.019792004 ubox
64 71 0.019259217 ubox
64 72 0.018809894 ubox
65 70 0.022508147 ubox
70 77 0.007036803 ubox
71 76 0.007201049 ubox
77 95 0.003705805 ubox
78 94 0.003699714 ubox
11 95 0.9500000 lbox
12 94 0.9500000 lbox
15 91 0.9500000 lbox
16 90 0.9500000 lbox
17 89 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
22 85 0.9500000 lbox
23 84 0.9500000 lbox
26 82 0.9500000 lbox
27 81 0.9500000 lbox
28 80 0.9500000 lbox
29 79 0.9500000 lbox
30 78 0.9500000 lbox
31 77 0.9500000 lbox
37 72 0.9500000 lbox
38 71 0.9500000 lbox
39 70 0.9500000 lbox
40 69 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
