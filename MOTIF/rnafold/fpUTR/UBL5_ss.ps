%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUCCGCUUCCGGUUCCUAGCGUUAACUGCGACCGGGGUUCAGCGCUCGGGUGAGGAGCUGGUGGCGUCGGCAGGUUCGAGGCGAUUCGAGGUGAGGGGGUCAAGCGGAGAGGCUCGGAGUCGGAGAAAGCUGUCGCGACCCAGCCACCCAGGGUCUGGGGUCGGUGGGAGCUCCAGCUAGG\
) } def
/len { sequence length } bind def

/coor [
[263.25961304 349.82656860]
[248.29814148 348.75186157]
[234.97059631 341.86883545]
[225.43339539 330.29116821]
[221.22975159 315.89224243]
[223.03982544 301.00186157]
[230.57072449 288.02935791]
[242.60392761 279.07379150]
[257.19238281 275.58422852]
[271.97799683 278.12622070]
[261.23718262 267.65557861]
[250.49633789 257.18490601]
[239.75552368 246.71424866]
[229.01469421 236.24359131]
[218.27386475 225.77293396]
[207.53303528 215.30227661]
[196.79222107 204.83161926]
[186.05139160 194.36096191]
[175.31056213 183.89030457]
[160.79615784 180.54644775]
[156.31546021 165.37298584]
[145.57463074 154.90232849]
[134.83380127 144.43167114]
[120.31940460 141.08781433]
[115.83869171 125.91435242]
[105.09786987 115.44369507]
[93.45036316 114.88617706]
[85.16997528 106.67579651]
[84.51358032 95.03344727]
[73.95210266 84.38191223]
[63.39062500 73.73037720]
[52.82914734 63.07883835]
[42.08832169 52.60818100]
[31.17124557 42.32141876]
[20.25416756 32.03466034]
[9.33709145 21.74790001]
[-2.27729440 24.41084099]
[-13.61607742 21.15945625]
[-21.88442039 12.91584682]
[-25.10285950 1.81737077]
[-22.58041382 -9.33666515]
[-33.14189148 -19.98820114]
[-43.70336914 -30.63973618]
[-51.98804092 -34.54231644]
[-54.35183334 -41.56295395]
[-64.73091125 -52.39229584]
[-72.94812012 -56.43499374]
[-75.19235992 -63.49475861]
[-85.38605499 -74.49878693]
[-95.57975006 -85.50280762]
[-105.77344513 -96.50683594]
[-115.96714020 -107.51085663]
[-126.16083527 -118.51488495]
[-136.35453796 -129.51890564]
[-157.35211182 -128.92176819]
[-171.79402161 -143.77026367]
[-170.64700317 -164.15882874]
[-181.56407166 -174.44560242]
[-192.48115540 -184.73236084]
[-207.83110046 -188.56504822]
[-211.78796387 -202.92445374]
[-222.70504761 -213.21121216]
[-233.62211609 -223.49797058]
[-248.97207642 -227.33067322]
[-252.92892456 -241.69007874]
[-263.84600830 -251.97683716]
[-279.92123413 -255.22006226]
[-284.89297485 -270.84741211]
[-273.64669800 -282.78280640]
[-257.75161743 -278.74810791]
[-253.55924988 -262.89392090]
[-242.64216614 -252.60714722]
[-228.07307434 -249.51023865]
[-223.33535767 -234.41505432]
[-212.41827393 -224.12829590]
[-201.50120544 -213.84153748]
[-186.93211365 -210.74461365]
[-182.19439697 -195.64942932]
[-171.27731323 -185.36267090]
[-160.36024475 -175.07591248]
[-151.50051880 -178.23316956]
[-142.04183960 -177.93215942]
[-133.29423523 -174.17216492]
[-126.48471069 -167.43444824]
[-122.58524323 -158.62110901]
[-122.17410278 -148.93435669]
[-125.35050964 -139.71260071]
[-115.15681458 -128.70857239]
[-104.96311951 -117.70455170]
[-94.76942444 -106.70053101]
[-84.57572937 -95.69650269]
[-74.38202667 -84.69248199]
[-64.18833160 -73.68845367]
[-53.90157318 -62.77137756]
[-43.52249146 -51.94203949]
[-33.05183411 -41.20121384]
[-22.49035645 -30.54967690]
[-11.92887878 -19.89814186]
[6.33123350 -20.93700027]
[19.79867744 -8.09559536]
[19.62385178 10.83082294]
[30.54092789 21.11758423]
[41.45800400 31.40434456]
[52.37508011 41.69110489]
[57.11217499 42.44475174]
[61.41888046 46.19672775]
[63.48068237 52.51736069]
[74.04216003 63.16889572]
[84.60363770 73.82043457]
[95.16511536 84.47196960]
[111.45098877 88.45137024]
[115.56852722 104.70286560]
[126.30934906 115.17352295]
[141.59201050 119.26631927]
[145.30445862 133.69084167]
[156.04528809 144.16149902]
[166.78611755 154.63215637]
[182.06877136 158.72494507]
[185.78121948 173.14947510]
[196.52204895 183.62013245]
[207.26287842 194.09078979]
[218.00369263 204.56144714]
[228.74452209 215.03210449]
[239.48535156 225.50276184]
[250.22618103 235.97341919]
[260.96701050 246.44407654]
[271.70782471 256.91473389]
[282.44863892 267.38540649]
[290.50122070 268.66961670]
[295.99432373 273.51400757]
[297.77758789 279.76266479]
[310.27612305 288.05645752]
[322.77462769 296.35025024]
[335.27313232 304.64404297]
[347.77166748 312.93786621]
[363.07199097 310.01586914]
[375.62908936 318.60501099]
[378.32046509 333.20953369]
[390.81900024 341.50332642]
[403.60800171 339.71734619]
[413.85211182 346.90121460]
[416.36264038 358.74902344]
[428.71850586 367.25387573]
[441.07440186 375.75869751]
[453.43026733 384.26354980]
[462.29559326 386.55966187]
[465.92208862 393.01919556]
[478.13174438 401.73260498]
[498.25012207 402.73815918]
[505.54028320 420.63308716]
[518.03881836 428.92691040]
[530.53729248 437.22070312]
[543.03582764 445.51449585]
[555.53436279 453.80828857]
[572.07519531 457.52804565]
[573.07977295 474.45220947]
[557.09509277 480.10260010]
[547.24053955 466.30682373]
[534.74200439 458.01300049]
[522.24353027 449.71920776]
[509.74499512 441.42541504]
[497.24649048 433.13162231]
[487.42587280 436.05392456]
[477.41140747 433.01275635]
[470.59338379 424.78457642]
[469.41833496 413.94229126]
[457.20864868 405.22888184]
[444.92544556 396.61941528]
[432.56954956 388.11459351]
[420.21368408 379.60974121]
[407.85778809 371.10491943]
[390.32388306 370.67135620]
[382.52520752 354.00183105]
[370.02667236 345.70803833]
[355.52395630 348.90286255]
[342.73052979 340.66979980]
[339.47784424 325.43637085]
[326.97933960 317.14257812]
[314.48083496 308.84878540]
[301.98229980 300.55496216]
[289.48379517 292.26116943]
[295.08328247 306.17681885]
[294.74658203 321.17306519]
[288.52810669 334.82336426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
[17 121]
[18 120]
[19 119]
[21 117]
[22 116]
[23 115]
[25 113]
[26 112]
[29 110]
[30 109]
[31 108]
[32 107]
[33 104]
[34 103]
[35 102]
[36 101]
[41 98]
[42 97]
[43 96]
[45 95]
[46 94]
[48 93]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[57 80]
[58 79]
[59 78]
[61 76]
[62 75]
[63 74]
[65 72]
[66 71]
[131 181]
[132 180]
[133 179]
[134 178]
[135 177]
[138 174]
[139 173]
[142 171]
[143 170]
[144 169]
[145 168]
[147 167]
[148 166]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
