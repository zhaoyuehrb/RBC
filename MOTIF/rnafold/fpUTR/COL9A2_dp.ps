%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COL9A2)
} def

/sequence { (\
AGCGCCGGGAGACUCUGCCGUCGGUGCGUGCGCGGACACGCACCCGUCCCCCUUGGUCUCGCCGCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.005114394 ubox
2 21 0.011275067 ubox
2 27 0.005253366 ubox
2 47 0.005918246 ubox
2 58 0.005867430 ubox
2 62 0.019061843 ubox
2 65 0.135226588 ubox
2 69 0.923577176 ubox
3 20 0.011689333 ubox
3 23 0.004328840 ubox
3 26 0.005260084 ubox
3 46 0.006134678 ubox
3 61 0.019102823 ubox
3 64 0.134828898 ubox
3 68 0.925051631 ubox
4 19 0.011520419 ubox
4 21 0.003315331 ubox
4 22 0.013658417 ubox
4 25 0.005260170 ubox
4 45 0.005724162 ubox
4 57 0.016014933 ubox
4 60 0.015471000 ubox
4 62 0.018993809 ubox
4 63 0.129427916 ubox
4 65 0.373108225 ubox
4 69 0.238288270 ubox
5 17 0.003457592 ubox
5 24 0.005262316 ubox
5 56 0.022996710 ubox
5 61 0.025115688 ubox
5 64 0.266198409 ubox
5 68 0.238585629 ubox
6 17 0.011369158 ubox
6 20 0.022181611 ubox
6 23 0.005164541 ubox
6 55 0.022954561 ubox
6 61 0.116969494 ubox
6 64 0.945539589 ubox
7 15 0.003329626 ubox
7 16 0.011429114 ubox
7 19 0.022778389 ubox
7 22 0.004593719 ubox
7 50 0.028701663 ubox
7 51 0.021753126 ubox
7 52 0.031358833 ubox
7 53 0.003917721 ubox
7 54 0.009528304 ubox
7 60 0.115522630 ubox
7 63 0.988610073 ubox
7 66 0.025338746 ubox
8 14 0.003243490 ubox
8 15 0.011416976 ubox
8 18 0.022799612 ubox
8 19 0.003930290 ubox
8 49 0.028836079 ubox
8 50 0.021834072 ubox
8 51 0.031485632 ubox
8 52 0.005455250 ubox
8 53 0.008294837 ubox
8 59 0.114430631 ubox
8 60 0.005117917 ubox
8 62 0.987921427 ubox
8 63 0.006922968 ubox
8 65 0.025286963 ubox
9 13 0.003462250 ubox
9 14 0.008913606 ubox
9 18 0.003992207 ubox
9 48 0.028863942 ubox
9 49 0.021813654 ubox
9 50 0.031432696 ubox
9 51 0.005430592 ubox
9 52 0.008265776 ubox
9 58 0.114143188 ubox
9 60 0.990628166 ubox
9 62 0.005874935 ubox
10 16 0.022631175 ubox
10 47 0.027105731 ubox
10 57 0.107970083 ubox
10 59 0.991639805 ubox
11 15 0.022216196 ubox
11 22 0.104962897 ubox
11 48 0.034866809 ubox
11 54 0.004236822 ubox
11 58 0.991857128 ubox
12 21 0.105165208 ubox
12 47 0.034873925 ubox
12 53 0.004329278 ubox
12 57 0.991649933 ubox
13 20 0.105080570 ubox
13 46 0.033953118 ubox
13 56 0.991050820 ubox
14 55 0.935421802 ubox
14 56 0.024981949 ubox
15 55 0.203190930 ubox
15 56 0.007402476 ubox
16 32 0.003700296 ubox
16 42 0.004354879 ubox
16 46 0.014668609 ubox
16 55 0.010073279 ubox
17 22 0.019696094 ubox
17 25 0.003175613 ubox
17 31 0.005682856 ubox
17 41 0.004540724 ubox
17 45 0.017873162 ubox
17 47 0.056814459 ubox
17 54 0.024698558 ubox
17 57 0.013780249 ubox
18 24 0.003385277 ubox
18 30 0.005685315 ubox
18 40 0.004523884 ubox
18 46 0.049668265 ubox
18 56 0.018725351 ubox
19 23 0.003503964 ubox
19 28 0.005700403 ubox
19 46 0.190720097 ubox
19 55 0.020031121 ubox
20 27 0.005697406 ubox
20 37 0.004576644 ubox
20 45 0.190309712 ubox
20 47 0.095030082 ubox
20 54 0.019208835 ubox
21 26 0.005329977 ubox
21 36 0.004591228 ubox
21 46 0.088478475 ubox
22 35 0.004589421 ubox
22 46 0.836641176 ubox
23 44 0.726439804 ubox
23 45 0.685755554 ubox
23 48 0.004665612 ubox
23 49 0.011651824 ubox
23 50 0.005801244 ubox
24 33 0.004596805 ubox
24 43 0.873487221 ubox
24 44 0.486394380 ubox
24 47 0.003820882 ubox
24 48 0.011613112 ubox
24 49 0.005763315 ubox
25 32 0.004591735 ubox
25 42 0.998147799 ubox
25 46 0.011257901 ubox
26 31 0.004508154 ubox
26 41 0.999546634 ubox
26 45 0.011791121 ubox
26 47 0.006334881 ubox
27 40 0.999541118 ubox
27 46 0.006428795 ubox
28 37 0.003737361 ubox
28 39 0.999508737 ubox
28 43 0.027923251 ubox
28 45 0.005155575 ubox
29 36 0.004736848 ubox
29 38 0.999262359 ubox
29 42 0.028128956 ubox
30 37 0.995648004 ubox
30 41 0.028150599 ubox
31 40 0.028146144 ubox
32 39 0.027672347 ubox
32 41 0.004639170 ubox
33 40 0.004673152 ubox
34 39 0.004795977 ubox
34 49 0.005724640 ubox
35 48 0.005749292 ubox
36 47 0.005752021 ubox
37 46 0.005746379 ubox
44 56 0.011137200 ubox
45 55 0.031983024 ubox
45 61 0.003468857 ubox
46 54 0.031243960 ubox
46 57 0.003766937 ubox
46 60 0.003698862 ubox
47 56 0.008439347 ubox
48 55 0.017403237 ubox
48 56 0.045674671 ubox
49 55 0.047079022 ubox
49 56 0.063153191 ubox
50 55 0.064216425 ubox
50 56 0.038987402 ubox
51 55 0.039561682 ubox
52 68 0.009203505 ubox
53 67 0.006903923 ubox
53 68 0.032368593 ubox
54 64 0.009473423 ubox
54 67 0.045548017 ubox
55 63 0.014569704 ubox
55 66 0.047784971 ubox
56 62 0.014590426 ubox
56 65 0.047786342 ubox
57 61 0.013650695 ubox
57 64 0.046098484 ubox
61 69 0.008407762 ubox
62 68 0.008413473 ubox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
showpage
end
%%EOF
