%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C8G)
} def

/sequence { (\
AGAGUAGACUCUGUCCUGGGACUUGGUGGUGCUACCCUUGGCCUCCCACAGUCCUGCCACCCUGCUGCCGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009159412 ubox
1 12 0.476111386 ubox
1 17 0.017479783 ubox
1 23 0.003503271 ubox
1 63 0.013956472 ubox
1 66 0.010397735 ubox
2 9 0.010520644 ubox
2 11 0.505465468 ubox
2 15 0.025800370 ubox
2 16 0.018394855 ubox
2 22 0.003978191 ubox
2 24 0.033533856 ubox
2 62 0.014723274 ubox
2 65 0.009229706 ubox
3 10 0.505185241 ubox
3 12 0.033062469 ubox
3 14 0.025759976 ubox
3 17 0.029206009 ubox
3 23 0.041803369 ubox
3 63 0.008961922 ubox
3 66 0.648437822 ubox
4 9 0.500964516 ubox
4 11 0.034032739 ubox
4 14 0.008864509 ubox
4 16 0.029857575 ubox
4 22 0.042731676 ubox
4 57 0.013571852 ubox
4 60 0.013474801 ubox
4 62 0.009038247 ubox
4 65 0.665952036 ubox
4 68 0.528521938 ubox
4 71 0.014121071 ubox
4 74 0.012419568 ubox
5 13 0.027778486 ubox
5 18 0.016553546 ubox
5 21 0.041951039 ubox
5 56 0.013494079 ubox
5 59 0.012800961 ubox
5 64 0.665842632 ubox
5 67 0.529451101 ubox
5 70 0.013413549 ubox
5 73 0.011700670 ubox
6 12 0.030098634 ubox
6 17 0.026911903 ubox
6 23 0.035966541 ubox
6 55 0.011966755 ubox
6 63 0.665152541 ubox
6 66 0.529519713 ubox
7 11 0.029618856 ubox
7 15 0.097270432 ubox
7 16 0.025096009 ubox
7 22 0.038807259 ubox
7 24 0.004318512 ubox
7 53 0.003751693 ubox
7 54 0.010432310 ubox
7 62 0.661441815 ubox
7 65 0.528736085 ubox
8 14 0.107654874 ubox
8 23 0.005430392 ubox
8 52 0.005089830 ubox
9 13 0.107688620 ubox
9 19 0.005163923 ubox
9 20 0.065044024 ubox
9 51 0.004671090 ubox
10 18 0.003739668 ubox
10 19 0.065192433 ubox
10 20 0.006077851 ubox
10 21 0.016611821 ubox
10 50 0.003909161 ubox
11 18 0.071571259 ubox
11 19 0.007717020 ubox
11 20 0.018018251 ubox
11 51 0.010319860 ubox
12 18 0.008056824 ubox
12 19 0.017843587 ubox
12 50 0.010582246 ubox
12 56 0.016619560 ubox
12 59 0.407252798 ubox
12 64 0.005348250 ubox
12 70 0.003253770 ubox
12 73 0.008467386 ubox
13 17 0.007024414 ubox
13 22 0.179681975 ubox
13 49 0.010846530 ubox
13 55 0.005368902 ubox
13 57 0.448073727 ubox
13 58 0.419057640 ubox
13 60 0.536252646 ubox
13 63 0.004322911 ubox
13 65 0.016265313 ubox
13 68 0.016223438 ubox
13 69 0.008667329 ubox
13 71 0.018114369 ubox
13 72 0.014803988 ubox
13 74 0.022951454 ubox
14 20 0.004668211 ubox
14 21 0.179992614 ubox
14 48 0.008419054 ubox
14 56 0.445286549 ubox
14 59 0.523997420 ubox
14 64 0.015951904 ubox
14 67 0.015653629 ubox
14 70 0.017536359 ubox
14 73 0.021640284 ubox
15 19 0.006879777 ubox
15 20 0.179359624 ubox
17 48 0.007486401 ubox
17 56 0.592952519 ubox
17 59 0.032314126 ubox
17 70 0.013789700 ubox
17 73 0.012641876 ubox
18 44 0.004343502 ubox
18 47 0.010587036 ubox
18 54 0.027746669 ubox
18 55 0.956503088 ubox
18 58 0.034447486 ubox
18 61 0.004219915 ubox
18 62 0.008792298 ubox
18 69 0.017154165 ubox
18 72 0.014070120 ubox
18 75 0.026388421 ubox
19 43 0.004520052 ubox
19 46 0.010594136 ubox
19 53 0.021672259 ubox
19 54 0.976553741 ubox
19 55 0.003629022 ubox
19 57 0.024438772 ubox
19 61 0.008321473 ubox
19 68 0.015824864 ubox
19 69 0.005921715 ubox
19 71 0.008664886 ubox
19 74 0.026584135 ubox
19 75 0.036671162 ubox
20 42 0.004522711 ubox
20 45 0.010593068 ubox
20 52 0.012801582 ubox
20 53 0.977161041 ubox
20 60 0.007797524 ubox
20 68 0.006024946 ubox
20 74 0.037110722 ubox
21 44 0.010219327 ubox
21 52 0.977206666 ubox
22 41 0.009192004 ubox
22 51 0.977061304 ubox
23 40 0.009102871 ubox
23 50 0.948936703 ubox
23 51 0.017881532 ubox
24 48 0.876962674 ubox
24 50 0.111432591 ubox
24 59 0.007156578 ubox
24 73 0.174113254 ubox
25 36 0.004575928 ubox
25 38 0.008622692 ubox
25 43 0.005847888 ubox
25 46 0.073967382 ubox
25 47 0.889430533 ubox
25 49 0.134058215 ubox
25 58 0.007300639 ubox
25 61 0.025282129 ubox
25 72 0.197036431 ubox
25 75 0.069266631 ubox
26 35 0.004605483 ubox
26 37 0.008779046 ubox
26 42 0.005853254 ubox
26 45 0.076538725 ubox
26 46 0.888547817 ubox
26 49 0.372096944 ubox
26 57 0.007295800 ubox
26 60 0.025448877 ubox
26 71 0.197083417 ubox
26 74 0.070076201 ubox
27 34 0.004589965 ubox
27 41 0.005806520 ubox
27 48 0.383093692 ubox
27 56 0.007254758 ubox
27 59 0.025536838 ubox
27 70 0.197006575 ubox
27 73 0.070069127 ubox
28 33 0.004196812 ubox
28 36 0.010234193 ubox
28 37 0.003730862 ubox
28 43 0.094854038 ubox
28 44 0.721406960 ubox
28 45 0.489105186 ubox
28 46 0.111093508 ubox
28 47 0.382378975 ubox
28 55 0.006944388 ubox
28 58 0.025544815 ubox
28 61 0.004153280 ubox
28 69 0.197075412 ubox
28 72 0.070085935 ubox
29 35 0.010241414 ubox
29 36 0.003704830 ubox
29 42 0.093006023 ubox
29 43 0.753601922 ubox
29 44 0.442382274 ubox
29 45 0.117074161 ubox
29 46 0.380598928 ubox
29 54 0.006962426 ubox
29 57 0.025525586 ubox
29 60 0.004181131 ubox
29 68 0.197065951 ubox
29 71 0.070084846 ubox
30 34 0.009233051 ubox
30 40 0.003325746 ubox
30 41 0.090460526 ubox
30 56 0.025277414 ubox
30 59 0.004205280 ubox
30 67 0.190507814 ubox
30 70 0.069754329 ubox
31 39 0.003411238 ubox
31 42 0.972690720 ubox
31 52 0.009057869 ubox
31 55 0.017552641 ubox
31 57 0.009174084 ubox
31 58 0.003279073 ubox
31 65 0.188605003 ubox
31 66 0.043325703 ubox
31 68 0.045542286 ubox
31 69 0.052192119 ubox
32 41 0.973055225 ubox
32 51 0.009187815 ubox
32 56 0.009624175 ubox
32 64 0.189794812 ubox
32 67 0.064065952 ubox
33 40 0.962572552 ubox
33 50 0.008843268 ubox
33 64 0.029158186 ubox
33 67 0.015440068 ubox
34 39 0.837843033 ubox
34 52 0.018904464 ubox
34 63 0.046037125 ubox
34 66 0.015529299 ubox
35 41 0.016768722 ubox
35 51 0.019158191 ubox
36 40 0.017574380 ubox
37 51 0.013145302 ubox
38 50 0.012999635 ubox
38 51 0.004816141 ubox
39 48 0.026534082 ubox
39 50 0.007177286 ubox
39 59 0.199594909 ubox
40 46 0.006400863 ubox
40 47 0.027634852 ubox
40 49 0.007590593 ubox
40 53 0.008343353 ubox
40 54 0.022091080 ubox
40 58 0.206998670 ubox
41 45 0.006367628 ubox
41 46 0.027301352 ubox
41 52 0.008526513 ubox
41 53 0.022061180 ubox
41 57 0.207020714 ubox
42 51 0.012599070 ubox
42 56 0.206410711 ubox
43 51 0.083430803 ubox
44 50 0.080126161 ubox
47 56 0.005877315 ubox
48 55 0.010812219 ubox
49 56 0.004956846 ubox
49 64 0.006470200 ubox
49 67 0.007314935 ubox
50 55 0.007720079 ubox
50 63 0.006542340 ubox
50 66 0.007532348 ubox
51 62 0.006488422 ubox
51 65 0.007546160 ubox
52 64 0.007270801 ubox
55 67 0.004231225 ubox
55 70 0.013668589 ubox
55 73 0.007972949 ubox
56 63 0.005594303 ubox
56 65 0.198130966 ubox
56 66 0.006033046 ubox
56 68 0.077614970 ubox
56 69 0.041805267 ubox
56 71 0.082965324 ubox
56 72 0.013506931 ubox
57 64 0.197046564 ubox
57 67 0.074286113 ubox
57 70 0.083497231 ubox
58 64 0.050338426 ubox
58 67 0.081632562 ubox
59 63 0.044668903 ubox
59 66 0.077204572 ubox
63 70 0.020579125 ubox
63 73 0.067960187 ubox
64 69 0.027218491 ubox
64 71 0.292834989 ubox
64 72 0.057795100 ubox
65 70 0.297559025 ubox
66 73 0.046569029 ubox
67 72 0.066222536 ubox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
