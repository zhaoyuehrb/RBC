%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUCGCGAUAAAUGGGCGCCGGCGGAGCGGAGGGAGAUCCGAGCGGCGGCGGCAAGCUGGCUGCGAGCGGCUGAGGAGCUGGGAUACACUCUUCCUCUCCUCUCCUCAACAGCAGCACUCCAAGCUCGCCGGCCUUUGGUCUCCAGGACUUGUCCCAGCAGCCCCUCGAACUGAGAAUUACACCAUCGGACCCCUGGCUCUGAGGCCUUCAGACUUGGACUGUGUCACACUGCCAGGCUUCCAGGGCUCCAAC\
UUGCAGACGGCCUGUUGUGGGACAGUCUCUGUAAUCGCGAAAGCAACC\
) } def
/len { sequence length } bind def

/coor [
[382.29885864 298.93038940]
[393.30364990 287.58712769]
[392.83871460 272.59436035]
[382.81408691 258.16470337]
[391.72299194 242.02293396]
[391.10308838 227.03575134]
[390.48321533 212.04855347]
[389.86334229 197.06137085]
[389.24346924 182.07418823]
[388.62359619 167.08700562]
[388.00372314 152.09980774]
[377.20886230 149.34428406]
[367.44277954 143.91436768]
[359.35772705 136.15341187]
[353.49847412 126.56105042]
[350.26589966 115.76110077]
[335.26910400 115.45109558]
[320.27230835 115.14109039]
[313.55368042 118.12944794]
[305.12234497 114.74960327]
[290.12954712 114.28463745]
[275.13674927 113.81967163]
[260.14395142 113.35470581]
[245.15116882 112.88974762]
[230.15838623 112.42478180]
[215.16558838 111.95981598]
[208.41645813 114.87857819]
[200.02049255 111.41178131]
[185.03329468 110.79190826]
[170.04611206 110.17203522]
[155.05332947 109.70706940]
[140.05653381 109.39706421]
[125.05973053 109.08706665]
[110.06293488 108.77706146]
[96.11743164 114.30181122]
[85.40178680 124.79824066]
[81.51747894 140.73072815]
[65.70359039 145.07273865]
[54.22809601 133.35757446]
[58.89599609 117.63679504]
[74.90535736 114.08259583]
[85.62100220 103.58616638]
[81.61670685 97.24459076]
[69.60382843 78.21984863]
[55.52025604 83.38250732]
[41.43668747 88.54516602]
[31.14264297 100.55945587]
[16.52994537 97.67530823]
[2.44637465 102.83796692]
[-9.05740547 117.24589539]
[-26.22490120 113.50634766]
[-40.25436783 118.81427002]
[-54.28383636 124.12219238]
[-68.31330109 129.43011475]
[-82.34277344 134.73803711]
[-88.61122131 149.24603271]
[-103.33298492 154.99453735]
[-117.77390289 148.57304382]
[-123.36643219 133.79133606]
[-116.79262543 119.41911316]
[-101.95260620 113.98317719]
[-87.65069580 120.70857239]
[-73.62122345 115.40065002]
[-59.59175873 110.09272766]
[-45.56229019 104.78480530]
[-31.53282356 99.47688293]
[-26.29672241 88.60693359]
[-14.69249630 84.05394745]
[-2.71628380 88.75439453]
[11.36728668 83.59173584]
[20.65398026 71.94670868]
[36.27402878 74.46159363]
[50.35760117 69.29893494]
[64.44116974 64.13627625]
[63.89874268 49.14608765]
[49.47887039 45.01483917]
[35.05899429 40.88359070]
[20.63912010 36.75234222]
[6.21924496 32.62109375]
[-8.20062923 28.48984337]
[-14.61848545 29.70258904]
[-19.91055107 27.80886078]
[-22.87417412 24.12134171]
[-37.20558929 19.69296074]
[-51.53700256 15.26457977]
[-65.86841583 10.83619881]
[-78.20753479 20.24500847]
[-93.72119904 20.57048416]
[-106.44408417 11.68747234]
[-111.48397827 -2.98832631]
[-106.90294647 -17.81376839]
[-94.46247864 -27.08816910]
[-78.94619751 -27.24533272]
[-66.32043457 -18.22482491]
[-61.44003677 -3.49521589]
[-47.10862350 0.93316483]
[-32.77720642 5.36154556]
[-18.44579315 9.78992653]
[-4.06938076 14.06996918]
[10.35049438 18.20121765]
[24.77036858 22.33246803]
[39.19024277 26.46371651]
[53.61011887 30.59496498]
[68.02999115 34.72621536]
[72.66388702 20.45992470]
[81.23384857 8.14912605]
[93.00413513 -1.14927578]
[106.96425629 -6.63700056]
[121.91570282 -7.84291697]
[136.57487488 -4.66349649]
[149.68325806 2.62830353]
[160.11546326 13.40647030]
[166.97589111 26.74567986]
[169.67555237 41.50074005]
[167.98268127 56.40490723]
[162.04260254 70.17863464]
[152.36529541 81.63941956]
[139.78157043 89.80334473]
[125.37174225 93.96951294]
[110.37294006 93.78026581]
[125.36973572 94.09027100]
[140.36653137 94.40026855]
[155.36332703 94.71027374]
[161.25834656 91.89807892]
[166.85859680 92.37689209]
[170.66598511 95.18484497]
[185.65318298 95.80472565]
[200.64036560 96.42459869]
[215.63055420 96.96702576]
[230.62333679 97.43199158]
[245.61613464 97.89694977]
[260.60891724 98.36191559]
[275.60171509 98.82688141]
[290.59451294 99.29184723]
[305.58731079 99.75680542]
[320.58230591 100.14429474]
[335.57910156 100.45429993]
[350.57589722 100.76430511]
[355.39031982 87.80942535]
[363.97595215 77.01153564]
[375.47055054 69.42976379]
[388.72753906 65.80151367]
[402.43038940 66.47077942]
[415.22335815 71.35556793]
[425.84561157 79.95760345]
[433.25555420 91.41309357]
[447.79656982 87.73081207]
[462.33755493 84.04853058]
[476.85934448 80.29116058]
[491.36154175 76.45880890]
[505.86370850 72.62645721]
[520.36590576 68.79410553]
[527.81842041 63.60082245]
[535.03771973 64.99790955]
[549.57873535 61.31562805]
[564.11975098 57.63334656]
[578.66076660 53.95106125]
[593.20172119 50.26877975]
[607.74273682 46.58649826]
[605.40710449 25.81852341]
[620.18542480 13.35352802]
[637.24981689 18.30533028]
[650.72564697 11.71738148]
[664.20153809 5.12943316]
[677.67742920 -1.45851576]
[691.15325928 -8.04646492]
[701.53839111 -18.87000656]
[707.56384277 -32.60660553]
[713.58923340 -46.34320450]
[709.12048340 -61.75130081]
[718.49804688 -74.76824188]
[734.52832031 -75.40854645]
[744.91424561 -63.18102646]
[741.68859863 -47.46559143]
[727.32586670 -40.31777573]
[721.30041504 -26.58117485]
[715.27502441 -12.84457493]
[720.06286621 -7.07165861]
[731.60864258 -16.64734459]
[743.15447998 -26.22303009]
[754.70031738 -35.79871368]
[766.24615479 -45.37440109]
[777.79217529 -54.94989395]
[787.36749268 -43.40374374]
[775.82183838 -33.82856750]
[764.27600098 -24.25288200]
[752.73016357 -14.67719650]
[741.18432617 -5.10151148]
[729.63854980 4.47417402]
[734.42639160 10.24709034]
[749.04034424 6.86611176]
[763.65435791 3.48513365]
[772.04541016 -9.63845634]
[786.91424561 -12.85906696]
[799.37384033 -4.77864027]
[813.98785400 -8.15961838]
[828.60186768 -11.54059696]
[843.21582031 -14.92157459]
[857.82983398 -18.30255318]
[872.44384766 -21.68353081]
[880.83483887 -34.80712128]
[895.70367432 -38.02773285]
[908.16333008 -29.94730568]
[922.77734375 -33.32828522]
[934.47839355 -43.97701645]
[948.62213135 -39.30752945]
[963.23614502 -42.68851089]
[977.85009766 -46.06948853]
[983.03247070 -55.56116486]
[992.37683105 -60.55557632]
[1002.71185303 -59.62956619]
[1010.67596436 -53.32505417]
[1025.35668945 -56.40328598]
[1040.03747559 -59.48151398]
[1047.25683594 -73.35285950]
[1061.72326660 -79.29058075]
[1076.60607910 -74.49108124]
[1084.87817383 -61.22052383]
[1082.63354492 -45.74486923]
[1070.93225098 -35.37124634]
[1055.29907227 -34.99776077]
[1043.11572266 -44.80076218]
[1028.43493652 -41.72253036]
[1013.75421143 -38.64430237]
[1000.27319336 -24.74291229]
[981.23107910 -31.45548820]
[966.61712646 -28.07451057]
[952.00311279 -24.69353104]
[941.34735107 -14.28662968]
[926.15832520 -18.71428490]
[911.54431152 -15.33330536]
[903.89959717 -2.60169744]
[889.12707520 1.03527737]
[875.82482910 -7.06953192]
[861.21081543 -3.68855381]
[846.59680176 -0.30757543]
[831.98284912 3.07340288]
[817.36883545 6.45438147]
[802.75482178 9.83535957]
[795.11010742 22.56696701]
[780.33758545 26.20394325]
[767.03533936 18.09913254]
[752.42132568 21.48011208]
[737.80737305 24.86108971]
[709.25787354 22.62785721]
[697.74121094 5.42939997]
[684.26531982 12.01734924]
[670.78948975 18.60529709]
[657.31359863 25.19324684]
[643.83776855 31.78119469]
[643.32507324 42.98783112]
[635.73352051 53.06221771]
[647.17980957 62.75671005]
[658.62603760 72.45119476]
[670.07232666 82.14568329]
[685.60894775 81.02755737]
[697.07897949 91.02220154]
[698.04919434 105.84091187]
[709.49548340 115.53540039]
[725.53814697 115.64887238]
[735.33813477 128.35079956]
[731.37780762 143.89735413]
[716.69512939 150.36254883]
[702.55340576 142.78683472]
[699.80096436 126.98166656]
[688.35473633 117.28717804]
[673.57843018 118.76927185]
[661.83215332 109.10073853]
[660.37780762 93.59194946]
[648.93157959 83.89746094]
[637.48529053 74.20297241]
[626.03900146 64.50848389]
[611.42504883 61.12750244]
[596.88403320 64.80978394]
[582.34301758 68.49206543]
[567.80200195 72.17434692]
[553.26098633 75.85662842]
[538.72003174 79.53891754]
[524.19824219 83.29627991]
[509.69604492 87.12863159]
[495.19387817 90.96098328]
[480.69171143 94.79333496]
[475.05596924 99.51653290]
[466.01983643 98.58953857]
[451.47885132 102.27182007]
[436.93783569 105.95410156]
[433.59481812 126.12717438]
[421.37145996 142.51979065]
[402.99090576 151.47993469]
[403.61077881 166.46711731]
[404.23065186 181.45431519]
[404.85055542 196.44149780]
[405.47042847 211.42868042]
[406.09030151 226.41586304]
[406.71017456 241.40306091]
[415.63589478 250.66885376]
[415.87023926 263.13211060]
[407.83148193 272.12939453]
[408.29644775 287.12216187]
[419.98300171 297.76171875]
[420.63989258 313.55236816]
[409.87738037 325.12576294]
[394.08068848 325.61566162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 299]
[3 298]
[5 295]
[6 294]
[7 293]
[8 292]
[9 291]
[10 290]
[11 289]
[16 138]
[17 137]
[18 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
[28 128]
[29 127]
[30 126]
[31 123]
[32 122]
[33 121]
[34 120]
[35 42]
[36 41]
[44 74]
[45 73]
[46 72]
[48 70]
[49 69]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[83 98]
[84 97]
[85 96]
[86 95]
[146 286]
[147 285]
[148 284]
[149 282]
[150 281]
[151 280]
[152 279]
[154 278]
[155 277]
[156 276]
[157 275]
[158 274]
[159 273]
[162 250]
[163 249]
[164 248]
[165 247]
[166 246]
[167 177]
[168 176]
[169 175]
[190 244]
[191 243]
[192 242]
[195 239]
[196 238]
[197 237]
[198 236]
[199 235]
[200 234]
[203 231]
[204 230]
[206 228]
[207 227]
[208 226]
[212 224]
[213 223]
[214 222]
[252 272]
[253 271]
[254 270]
[255 269]
[258 266]
[259 265]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
