%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CNGB1)
} def

/sequence { (\
CCAGCUACGAGUGGCAGCAAGAAGGCAAUUCCUGGCUGGCGGUUGGCAUCUAAGCAGGCAUCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.007967802 ubox
1 35 0.014321667 ubox
1 39 0.911677681 ubox
1 46 0.029261624 ubox
1 58 0.274078136 ubox
1 65 0.032280000 ubox
2 13 0.008150073 ubox
2 34 0.014536859 ubox
2 38 0.939246395 ubox
2 45 0.031325305 ubox
2 57 0.277437973 ubox
2 64 0.032985754 ubox
3 12 0.007727460 ubox
3 33 0.014498391 ubox
3 37 0.939206033 ubox
3 44 0.031286265 ubox
3 51 0.015142102 ubox
4 12 0.003982926 ubox
4 15 0.014710252 ubox
4 26 0.004257066 ubox
4 32 0.014355900 ubox
4 36 0.939467940 ubox
4 43 0.031256068 ubox
4 47 0.073062967 ubox
4 50 0.015687226 ubox
4 55 0.292513506 ubox
4 59 0.135032597 ubox
5 11 0.005464100 ubox
5 14 0.014751693 ubox
5 25 0.004263193 ubox
5 35 0.939478947 ubox
5 42 0.031263799 ubox
5 46 0.073004780 ubox
5 54 0.292897610 ubox
5 57 0.009299303 ubox
5 58 0.135032135 ubox
5 64 0.007329435 ubox
5 65 0.003214739 ubox
6 10 0.004937009 ubox
6 13 0.014574743 ubox
6 24 0.004110132 ubox
6 34 0.938252052 ubox
6 41 0.027174618 ubox
6 45 0.053965287 ubox
6 52 0.052322054 ubox
6 53 0.279614395 ubox
6 56 0.010426973 ubox
6 57 0.129890571 ubox
6 63 0.007005083 ubox
6 64 0.003179302 ubox
7 12 0.012433462 ubox
7 33 0.920878146 ubox
7 43 0.005766485 ubox
7 44 0.035588856 ubox
7 51 0.073459313 ubox
8 42 0.007852136 ubox
8 45 0.175760538 ubox
9 30 0.007880522 ubox
9 31 0.936855317 ubox
9 44 0.180967550 ubox
9 50 0.222080390 ubox
10 29 0.010185554 ubox
10 30 0.938264599 ubox
10 33 0.007703966 ubox
10 43 0.184006815 ubox
10 49 0.191753928 ubox
10 51 0.099071011 ubox
11 18 0.004871457 ubox
11 26 0.006978558 ubox
11 29 0.932664736 ubox
11 32 0.009067340 ubox
11 40 0.005442044 ubox
11 47 0.015698432 ubox
11 49 0.181259802 ubox
11 50 0.099080665 ubox
12 17 0.004819461 ubox
12 19 0.009949520 ubox
12 25 0.006984129 ubox
12 27 0.069474957 ubox
12 28 0.893590908 ubox
12 39 0.005208592 ubox
12 41 0.185161180 ubox
12 42 0.003266481 ubox
12 45 0.004096873 ubox
12 46 0.014610988 ubox
12 48 0.276154237 ubox
13 18 0.012462605 ubox
13 26 0.088483517 ubox
13 30 0.004316449 ubox
13 31 0.006670935 ubox
13 32 0.011298459 ubox
13 40 0.188583729 ubox
13 44 0.005905512 ubox
13 47 0.283998202 ubox
14 26 0.914768501 ubox
14 29 0.006732917 ubox
14 30 0.005971277 ubox
14 31 0.011286464 ubox
14 40 0.005766724 ubox
14 43 0.009782287 ubox
14 47 0.007553846 ubox
15 25 0.917903232 ubox
15 34 0.003163572 ubox
15 38 0.188930222 ubox
15 39 0.004300975 ubox
15 42 0.009812545 ubox
15 45 0.284513808 ubox
15 46 0.005958483 ubox
16 33 0.003361832 ubox
16 37 0.188968067 ubox
16 44 0.284346751 ubox
17 26 0.143861300 ubox
17 32 0.003382372 ubox
17 36 0.188992215 ubox
17 40 0.015007899 ubox
17 43 0.284241987 ubox
18 25 0.145289577 ubox
18 34 0.057000623 ubox
18 35 0.179819753 ubox
18 39 0.014995798 ubox
18 42 0.284212405 ubox
19 30 0.004132286 ubox
19 33 0.079424432 ubox
20 29 0.004337381 ubox
20 33 0.113006695 ubox
20 37 0.016413624 ubox
21 30 0.006329342 ubox
21 31 0.144359312 ubox
21 32 0.105650216 ubox
21 36 0.018114728 ubox
22 29 0.007435585 ubox
22 30 0.156586428 ubox
23 29 0.153324170 ubox
23 30 0.057147152 ubox
23 33 0.050555350 ubox
23 37 0.242778518 ubox
24 29 0.055344983 ubox
24 30 0.006450638 ubox
24 31 0.023549356 ubox
24 32 0.057578177 ubox
24 33 0.011673219 ubox
24 36 0.244221590 ubox
24 37 0.143127949 ubox
25 29 0.004959529 ubox
25 30 0.017105251 ubox
25 31 0.057299872 ubox
25 32 0.011688288 ubox
25 36 0.144638460 ubox
26 34 0.244269063 ubox
26 35 0.144242030 ubox
27 33 0.233079956 ubox
31 39 0.004060444 ubox
31 65 0.014748738 ubox
32 38 0.004099860 ubox
32 64 0.015183541 ubox
33 63 0.015165262 ubox
34 62 0.015052851 ubox
35 59 0.011736204 ubox
35 61 0.009148131 ubox
36 58 0.011881069 ubox
36 64 0.016010037 ubox
37 57 0.010997784 ubox
37 60 0.006800707 ubox
37 63 0.017350684 ubox
38 59 0.006565919 ubox
38 62 0.019436775 ubox
39 47 0.046386533 ubox
39 55 0.027692794 ubox
39 59 0.157971802 ubox
39 61 0.021968071 ubox
40 46 0.048424456 ubox
40 54 0.028697713 ubox
40 58 0.164835121 ubox
41 50 0.032615850 ubox
41 51 0.016881399 ubox
41 62 0.202521740 ubox
42 49 0.031436372 ubox
42 50 0.017800428 ubox
42 55 0.179553863 ubox
42 59 0.867304717 ubox
42 61 0.176903322 ubox
43 48 0.029515412 ubox
43 53 0.065644360 ubox
43 54 0.176705838 ubox
43 57 0.069455695 ubox
43 58 0.865121907 ubox
43 60 0.164837138 ubox
43 64 0.073808853 ubox
43 65 0.003563022 ubox
44 52 0.076453276 ubox
44 53 0.173030502 ubox
44 56 0.090649763 ubox
44 57 0.683686648 ubox
44 60 0.053355644 ubox
44 63 0.090949198 ubox
44 64 0.004221051 ubox
45 51 0.083709672 ubox
45 55 0.078408591 ubox
45 59 0.067188709 ubox
45 62 0.093408006 ubox
46 50 0.083001414 ubox
46 55 0.909420912 ubox
46 59 0.098395814 ubox
46 61 0.075690657 ubox
47 54 0.913446887 ubox
47 58 0.099446837 ubox
48 61 0.010367657 ubox
49 58 0.080848336 ubox
49 60 0.011951327 ubox
49 65 0.011463813 ubox
50 57 0.104490316 ubox
50 58 0.030406281 ubox
50 64 0.017695560 ubox
50 65 0.004656649 ubox
51 56 0.098066256 ubox
51 57 0.030185084 ubox
51 63 0.017106893 ubox
51 64 0.004684668 ubox
1 39 0.9500000 lbox
2 38 0.9500000 lbox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
