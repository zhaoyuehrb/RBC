%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GALT)
} def

/sequence { (\
ACGUGCUGGCGGCUGGCCAAUCAUCGGGGGCGGCGCGGGGAGGGGUGGUGUGGACGGAGAAAGUGAAAGGUGAGGCACGGCCCUGCAGAUUUUCCAGCGGAUCCCCCGGUGGCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.017005392 ubox
2 11 0.545942793 ubox
2 15 0.020459786 ubox
2 26 0.030645754 ubox
3 7 0.011015228 ubox
3 10 0.550682519 ubox
3 13 0.049402530 ubox
3 14 0.033438171 ubox
3 17 0.006008797 ubox
3 21 0.055576689 ubox
3 24 0.017978604 ubox
3 25 0.030235579 ubox
3 113 0.062172128 ubox
4 9 0.544226801 ubox
4 11 0.014706380 ubox
4 12 0.048266613 ubox
4 16 0.005743986 ubox
4 19 0.013688411 ubox
4 20 0.058320529 ubox
4 23 0.033487011 ubox
4 112 0.058369699 ubox
5 10 0.019763078 ubox
5 13 0.228729596 ubox
5 17 0.052110695 ubox
5 18 0.010181146 ubox
5 22 0.034670302 ubox
5 113 0.168345135 ubox
6 12 0.229067706 ubox
6 16 0.053146424 ubox
6 112 0.168047099 ubox
7 11 0.206369981 ubox
7 15 0.052906708 ubox
7 19 0.730530925 ubox
7 111 0.014485939 ubox
8 14 0.052971494 ubox
8 18 0.789408542 ubox
8 114 0.051938733 ubox
8 116 0.006552429 ubox
9 13 0.052084863 ubox
9 17 0.789542628 ubox
9 113 0.052026295 ubox
9 115 0.006813859 ubox
10 16 0.789428399 ubox
10 112 0.051905287 ubox
11 18 0.050828178 ubox
11 114 0.024284551 ubox
11 116 0.017442788 ubox
12 17 0.050592586 ubox
12 110 0.007533048 ubox
12 113 0.024802990 ubox
12 115 0.022476450 ubox
13 109 0.007474272 ubox
13 112 0.024588779 ubox
14 23 0.004067321 ubox
14 108 0.003722963 ubox
14 111 0.010557356 ubox
15 22 0.004914904 ubox
15 114 0.606328907 ubox
15 115 0.006527793 ubox
16 21 0.003428850 ubox
16 113 0.607579128 ubox
16 114 0.005706595 ubox
17 112 0.606860278 ubox
18 111 0.571156126 ubox
19 110 0.435590049 ubox
20 110 0.053983799 ubox
21 109 0.065658256 ubox
21 112 0.565378928 ubox
22 108 0.039086212 ubox
22 111 0.818546210 ubox
23 110 0.895586116 ubox
24 109 0.992533676 ubox
25 108 0.998238592 ubox
26 106 0.007301923 ubox
26 107 0.999263283 ubox
26 116 0.006482295 ubox
27 105 0.008123008 ubox
27 106 0.999273662 ubox
27 115 0.007178089 ubox
27 116 0.033900330 ubox
28 104 0.008812602 ubox
28 105 0.999266176 ubox
28 106 0.003676726 ubox
28 114 0.007182356 ubox
28 115 0.035841410 ubox
29 103 0.009445479 ubox
29 104 0.999252457 ubox
29 105 0.004299060 ubox
29 113 0.007083619 ubox
29 114 0.036131844 ubox
30 102 0.008564965 ubox
30 103 0.997793177 ubox
30 104 0.004830837 ubox
30 113 0.036152956 ubox
31 99 0.009954741 ubox
31 111 0.007064509 ubox
31 112 0.036153552 ubox
32 98 0.007566781 ubox
32 103 0.005397774 ubox
32 110 0.007101440 ubox
33 98 0.044232732 ubox
33 102 0.011827822 ubox
33 110 0.036046828 ubox
34 97 0.044673036 ubox
34 99 0.997041917 ubox
34 108 0.007639384 ubox
34 109 0.035987425 ubox
35 98 0.998248922 ubox
35 107 0.008078081 ubox
36 97 0.996053059 ubox
36 99 0.006154423 ubox
36 108 0.033240807 ubox
37 92 0.003770910 ubox
37 94 0.026471461 ubox
37 95 0.618478246 ubox
37 98 0.006128052 ubox
37 106 0.015820223 ubox
37 107 0.033258170 ubox
38 91 0.004076242 ubox
38 93 0.027398048 ubox
38 94 0.620593920 ubox
38 95 0.723353405 ubox
38 105 0.016045350 ubox
38 106 0.033150586 ubox
39 90 0.011258031 ubox
39 91 0.004920376 ubox
39 92 0.045011620 ubox
39 93 0.616183128 ubox
39 94 0.725894293 ubox
39 95 0.291015036 ubox
39 104 0.016262359 ubox
39 105 0.033030004 ubox
40 90 0.006728084 ubox
40 91 0.062318923 ubox
40 92 0.611103638 ubox
40 93 0.718692902 ubox
40 94 0.292163926 ubox
40 103 0.016464583 ubox
40 104 0.032830440 ubox
41 84 0.027723113 ubox
41 90 0.074500815 ubox
41 91 0.607982071 ubox
41 92 0.712485337 ubox
41 93 0.291346918 ubox
41 102 0.015682735 ubox
42 83 0.031062232 ubox
42 84 0.909846798 ubox
42 90 0.246527698 ubox
42 91 0.289285986 ubox
42 92 0.118297010 ubox
42 103 0.007334570 ubox
43 82 0.026382952 ubox
43 83 0.998787622 ubox
43 84 0.010295842 ubox
43 90 0.030051513 ubox
43 91 0.012751324 ubox
43 102 0.003585807 ubox
44 81 0.020544494 ubox
44 82 0.999578298 ubox
44 83 0.008837734 ubox
44 90 0.003480417 ubox
45 81 0.999734873 ubox
45 82 0.006307908 ubox
46 79 0.011227582 ubox
46 80 0.998186822 ubox
47 78 0.009095818 ubox
47 103 0.003968567 ubox
48 76 0.004756543 ubox
48 78 0.999702648 ubox
48 102 0.004071475 ubox
49 75 0.004761409 ubox
49 77 0.999724112 ubox
49 79 0.005160192 ubox
49 87 0.003958719 ubox
49 101 0.004126797 ubox
50 76 0.999850620 ubox
50 78 0.006090056 ubox
50 86 0.003988048 ubox
51 70 0.003806981 ubox
51 72 0.003460526 ubox
51 75 0.989282997 ubox
51 77 0.006220353 ubox
51 85 0.003971888 ubox
51 99 0.004129848 ubox
52 64 0.004807233 ubox
52 71 0.013891768 ubox
52 76 0.006365955 ubox
52 84 0.003849708 ubox
52 98 0.004135905 ubox
53 83 0.003827435 ubox
54 64 0.223785848 ubox
54 71 0.895992501 ubox
55 63 0.225195601 ubox
55 65 0.037912420 ubox
55 70 0.912670837 ubox
55 72 0.175436678 ubox
56 64 0.040361996 ubox
56 71 0.165983663 ubox
56 95 0.005170216 ubox
57 94 0.005221179 ubox
58 93 0.005224666 ubox
59 92 0.005269446 ubox
60 91 0.005267277 ubox
61 90 0.005204972 ubox
63 71 0.007672254 ubox
64 70 0.009728104 ubox
64 72 0.007609843 ubox
64 87 0.005264607 ubox
65 71 0.006863498 ubox
65 86 0.005262819 ubox
69 82 0.005253959 ubox
70 81 0.005310663 ubox
71 80 0.005309376 ubox
83 100 0.006787032 ubox
84 99 0.009828587 ubox
85 98 0.015764764 ubox
86 97 0.015761071 ubox
87 93 0.003201353 ubox
88 92 0.003756035 ubox
88 94 0.008578584 ubox
88 103 0.024911745 ubox
89 93 0.007603196 ubox
89 102 0.024969613 ubox
90 101 0.024175784 ubox
91 100 0.023815840 ubox
92 99 0.019774803 ubox
92 101 0.004197919 ubox
93 100 0.004618073 ubox
93 101 0.019646864 ubox
94 99 0.005049553 ubox
94 100 0.021143401 ubox
95 99 0.021005099 ubox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
21 112 0.9500000 lbox
22 111 0.9500000 lbox
23 110 0.9500000 lbox
24 109 0.9500000 lbox
25 108 0.9500000 lbox
26 107 0.9500000 lbox
27 106 0.9500000 lbox
28 105 0.9500000 lbox
29 104 0.9500000 lbox
30 103 0.9500000 lbox
34 99 0.9500000 lbox
35 98 0.9500000 lbox
36 97 0.9500000 lbox
38 95 0.9500000 lbox
39 94 0.9500000 lbox
40 93 0.9500000 lbox
41 92 0.9500000 lbox
42 84 0.9500000 lbox
43 83 0.9500000 lbox
44 82 0.9500000 lbox
45 81 0.9500000 lbox
46 80 0.9500000 lbox
48 78 0.9500000 lbox
49 77 0.9500000 lbox
50 76 0.9500000 lbox
51 75 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
showpage
end
%%EOF
