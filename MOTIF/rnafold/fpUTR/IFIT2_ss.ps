%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCACUUUCCCUUUUGUAACGUCAGCUGAAGGGAAACAAACAAAAAGGAACCAGAGGCCACUUGUAUAUAUAGGUCUCUUCAGCAUUUAUUGGUGGCAGAAGAGGAAGAUUUCUGAAGAGUGCAGCUGCCUGAACCGAGCCCUGCCGAACAGCUGAGAAUUGCACUGCAACC\
) } def
/len { sequence length } bind def

/coor [
[96.16805267 122.53320312]
[88.93528748 120.54898834]
[77.95687103 130.77026367]
[66.97845459 140.99153137]
[56.00003433 151.21279907]
[56.23829651 162.12791443]
[50.53168869 171.17643738]
[40.98007965 175.48339844]
[30.85486221 173.83969116]
[19.51861954 183.66261292]
[8.18237495 193.48551941]
[-3.15386844 203.30842590]
[-14.49011230 213.13134766]
[-25.82635498 222.95425415]
[-37.16259766 232.77716064]
[-48.49884415 242.60006714]
[-59.83508682 252.42298889]
[-65.19770813 267.30764771]
[-79.88319397 269.79476929]
[-91.21943665 279.61767578]
[-90.79043579 295.24938965]
[-100.55010986 307.46749878]
[-115.89024353 310.50305176]
[-129.56768799 302.92269897]
[-135.12435913 288.30569458]
[-129.93659973 273.55368042]
[-116.45388031 265.63217163]
[-101.04234314 268.28143311]
[-89.70610046 258.45852661]
[-85.15432739 244.27647400]
[-69.65799713 241.08674622]
[-58.32175446 231.26382446]
[-46.98551178 221.44091797]
[-35.64926529 211.61801147]
[-24.31302261 201.79508972]
[-12.97677994 191.97218323]
[-1.64053583 182.14927673]
[9.69570732 172.32637024]
[21.03195190 162.50344849]
[25.96447754 143.82641602]
[45.77876663 140.23437500]
[56.75718307 130.01310730]
[67.73560333 119.79183960]
[78.71401978 109.57057190]
[64.17921448 113.27724457]
[52.42332077 122.59384155]
[37.60614395 124.92862701]
[23.55493546 119.67852020]
[13.89910603 108.19963074]
[11.13274193 93.45693207]
[15.97039223 79.25843811]
[27.16249657 69.27160645]
[41.81815338 66.07602692]
[56.15182114 70.49710083]
[66.45980072 81.39043427]
[80.31915283 87.12789917]
[70.90711975 75.44827271]
[61.49508286 63.76865387]
[52.08304596 52.08902740]
[42.67101288 40.40940475]
[33.25897598 28.72978210]
[23.84694099 17.05015945]
[9.13848019 20.99744606]
[-5.90285873 18.61458778]
[-18.67107201 10.31443119]
[-26.95399094 -2.46497250]
[-29.31654930 -17.50951385]
[-25.34941864 -32.21263504]
[-15.73992825 -44.02693176]
[-2.15298200 -50.90550232]
[13.05740070 -51.65660095]
[27.25592804 -46.15008545]
[37.98262024 -35.34000015]
[43.37901306 -21.09925652]
[42.51015091 -5.89514589]
[35.52656555 7.63812494]
[44.93859863 19.31774712]
[54.35063553 30.99737167]
[63.76266861 42.67699432]
[73.17470551 54.35661697]
[82.58673859 66.03623962]
[91.99877167 77.71586609]
[106.53283691 81.42546082]
[120.39102936 75.68521118]
[134.24922180 69.94496155]
[148.10740662 64.20470428]
[161.96560669 58.46445465]
[163.26365662 45.99419022]
[169.71429443 35.32770920]
[180.03492737 28.46680832]
[192.22369385 26.66829872]
[203.94764709 30.21413803]
[212.98930359 38.36929703]
[227.04354858 33.12733459]
[241.09779358 27.88537025]
[255.15203857 22.64340782]
[269.20626831 17.40144539]
[283.16473389 11.90946388]
[297.02291870 6.16921234]
[310.88110352 0.42896065]
[311.51150513 -16.70383453]
[319.52706909 -31.79655266]
[333.27935791 -41.84791946]
[349.98461914 -44.88301086]
[366.28729248 -40.34113312]
[378.93399048 -29.17867470]
[392.57846069 -35.40990067]
[406.22293091 -41.64112473]
[415.56182861 -54.41201782]
[430.35314941 -52.66102219]
[443.99761963 -58.89225006]
[445.39312744 -75.35243225]
[454.83724976 -88.79134369]
[469.68051147 -95.60317230]
[485.84088135 -94.01855469]
[498.92623901 -84.56311035]
[512.45733643 -91.03688049]
[521.27850342 -104.86147308]
[537.64727783 -103.86420441]
[544.72491455 -89.07099152]
[535.23052979 -75.69981384]
[518.93109131 -77.50579834]
[505.40002441 -71.03202057]
[505.24121094 -57.35856247]
[499.17123413 -45.03136444]
[488.32604980 -36.48672485]
[474.79150391 -33.44074249]
[461.20223999 -36.54490662]
[450.22885132 -45.24776840]
[436.58438110 -39.01654434]
[428.22143555 -26.69134712]
[412.45416260 -27.99664497]
[398.80969238 -21.76541901]
[385.16522217 -15.53419495]
[385.95886230 -2.53389025]
[382.26882935 9.99031830]
[374.51531982 20.53506470]
[363.60769653 27.82687378]
[350.83776855 30.97593307]
[337.72692871 29.58463478]
[325.84478760 23.79763412]
[316.62136841 14.28715324]
[302.76318359 20.02740479]
[288.90496826 25.76765633]
[286.27279663 29.78793716]
[281.07260132 32.17956161]
[274.44824219 31.45569229]
[260.39401245 36.69765472]
[246.33975220 41.93961716]
[232.28550720 47.18157959]
[218.23126221 52.42354202]
[214.31556702 69.61769104]
[200.75906372 81.13936615]
[182.84548950 82.25132751]
[167.70585632 72.32264709]
[153.84767151 78.06289673]
[139.98947144 83.80315399]
[126.13127899 89.54340363]
[112.27308655 95.28365326]
[119.82238770 97.73116302]
[126.49761200 103.70599365]
[131.01516724 112.81724548]
[132.25874329 124.25984955]
[136.48474121 138.65225220]
[140.71072388 153.04464722]
[144.93670654 167.43702698]
[155.20053101 180.93112183]
[145.07510376 194.52935791]
[129.20529175 188.56401062]
[130.54431152 171.66302490]
[126.31832886 157.27062988]
[122.09233856 142.87823486]
[117.86635590 128.48583984]
[110.63358307 126.50162506]
[106.66493988 140.96710205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[4 42]
[5 41]
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[19 29]
[20 28]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 144]
[99 143]
[100 142]
[106 134]
[107 133]
[108 132]
[110 130]
[111 129]
[116 123]
[117 122]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
