%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ESYT2)
} def

/sequence { (\
AGUAUCCACCCCGCCCGCUCCCGGUGACGUGCCAGCCCCAGGCCCACGCCGCUCCCGCCCCGCGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.013066098 ubox
1 53 0.010850806 ubox
2 9 0.147338640 ubox
2 14 0.028583823 ubox
2 18 0.015014945 ubox
2 28 0.059433810 ubox
2 30 0.004699173 ubox
2 32 0.293269791 ubox
2 36 0.077320619 ubox
2 43 0.008628353 ubox
2 52 0.012465337 ubox
2 63 0.008488349 ubox
2 65 0.003914418 ubox
3 8 0.138284121 ubox
3 13 0.028006609 ubox
3 17 0.014632793 ubox
3 26 0.004644577 ubox
3 27 0.058693215 ubox
3 29 0.007217653 ubox
3 31 0.292080104 ubox
3 35 0.076249560 ubox
3 42 0.008099282 ubox
3 51 0.012060259 ubox
3 62 0.008158958 ubox
3 66 0.009365830 ubox
4 25 0.005548446 ubox
4 30 0.290398462 ubox
4 65 0.011183512 ubox
5 24 0.004455560 ubox
5 27 0.037651508 ubox
5 29 0.280553273 ubox
5 42 0.003186974 ubox
5 64 0.005310046 ubox
6 23 0.004454807 ubox
6 24 0.028450703 ubox
6 26 0.032124758 ubox
6 41 0.004419105 ubox
6 42 0.011664276 ubox
7 23 0.028442152 ubox
7 26 0.348392446 ubox
7 31 0.464693237 ubox
7 41 0.011736705 ubox
7 66 0.193851644 ubox
8 25 0.349867656 ubox
8 30 0.479943663 ubox
8 65 0.196256284 ubox
9 24 0.345120008 ubox
9 29 0.479824984 ubox
9 42 0.018252891 ubox
9 64 0.171582982 ubox
10 23 0.342433837 ubox
10 24 0.025629524 ubox
10 41 0.018281021 ubox
10 42 0.014896739 ubox
11 23 0.029944906 ubox
11 24 0.106175645 ubox
11 41 0.014847232 ubox
11 42 0.050280725 ubox
12 23 0.112567093 ubox
12 26 0.559221329 ubox
12 29 0.057127084 ubox
12 31 0.044894054 ubox
12 41 0.050752873 ubox
12 62 0.112532364 ubox
12 64 0.619246946 ubox
12 66 0.140315922 ubox
13 22 0.131049005 ubox
13 25 0.565365328 ubox
13 28 0.058788504 ubox
13 30 0.049362404 ubox
13 32 0.035155258 ubox
13 36 0.025563665 ubox
13 43 0.157567129 ubox
13 52 0.007863633 ubox
13 58 0.012358390 ubox
13 61 0.112487400 ubox
13 63 0.644389651 ubox
13 65 0.146128374 ubox
14 24 0.541159683 ubox
14 29 0.049576355 ubox
14 31 0.035170839 ubox
14 35 0.025585487 ubox
14 42 0.157614726 ubox
14 51 0.007804061 ubox
14 57 0.012233201 ubox
14 62 0.643255115 ubox
14 64 0.144391772 ubox
15 23 0.514782159 ubox
15 24 0.195037448 ubox
15 41 0.157025161 ubox
15 42 0.013003804 ubox
16 23 0.256464047 ubox
16 26 0.075943872 ubox
16 29 0.032080941 ubox
16 31 0.012988572 ubox
16 41 0.015953017 ubox
16 57 0.072486254 ubox
16 62 0.136005633 ubox
16 64 0.195453679 ubox
16 66 0.015570101 ubox
17 22 0.291146140 ubox
17 25 0.076656721 ubox
17 28 0.032015725 ubox
17 30 0.013989712 ubox
17 32 0.030988893 ubox
17 36 0.153310399 ubox
17 43 0.032202999 ubox
17 52 0.006186822 ubox
17 56 0.072772309 ubox
17 58 0.603480168 ubox
17 61 0.134236666 ubox
17 63 0.204116720 ubox
17 65 0.016166496 ubox
18 24 0.076774430 ubox
18 29 0.014024694 ubox
18 31 0.031012230 ubox
18 35 0.153557903 ubox
18 42 0.032232777 ubox
18 51 0.005682666 ubox
18 57 0.603789209 ubox
18 62 0.203901074 ubox
18 64 0.016127256 ubox
19 23 0.069174229 ubox
19 27 0.032755089 ubox
19 34 0.151207470 ubox
19 40 0.003701949 ubox
19 41 0.030913232 ubox
20 26 0.032809448 ubox
20 41 0.004709631 ubox
20 42 0.005324365 ubox
21 41 0.005469873 ubox
21 42 0.003182879 ubox
22 29 0.054552262 ubox
22 31 0.039622159 ubox
22 41 0.003230090 ubox
22 51 0.129686343 ubox
22 57 0.231059110 ubox
22 62 0.010161617 ubox
23 28 0.054932986 ubox
23 30 0.036713826 ubox
23 33 0.157060547 ubox
23 37 0.035310554 ubox
23 38 0.004983228 ubox
23 39 0.005035035 ubox
23 44 0.003249292 ubox
23 50 0.131473438 ubox
23 53 0.624642055 ubox
23 54 0.094740753 ubox
23 55 0.026078395 ubox
23 56 0.231616122 ubox
23 59 0.031583025 ubox
23 60 0.004600360 ubox
23 61 0.010866693 ubox
24 32 0.157193909 ubox
24 36 0.035372141 ubox
24 37 0.004848729 ubox
24 38 0.005014816 ubox
24 43 0.003245517 ubox
24 49 0.131460623 ubox
24 52 0.655468589 ubox
24 54 0.023875206 ubox
24 55 0.223772846 ubox
24 58 0.031590702 ubox
24 59 0.004382408 ubox
24 60 0.010426311 ubox
24 63 0.007475902 ubox
25 31 0.154777719 ubox
25 34 0.022333245 ubox
25 35 0.029597230 ubox
25 42 0.003188497 ubox
25 48 0.119539570 ubox
25 51 0.659943089 ubox
25 57 0.031220224 ubox
25 62 0.007718464 ubox
26 30 0.071834075 ubox
26 33 0.026862802 ubox
26 47 0.111834341 ubox
26 50 0.657685843 ubox
26 54 0.207068962 ubox
26 56 0.027020244 ubox
26 61 0.008332333 ubox
27 53 0.206249109 ubox
27 65 0.173828302 ubox
28 48 0.681177589 ubox
28 51 0.156218609 ubox
28 62 0.007750998 ubox
28 64 0.178489485 ubox
28 66 0.007701650 ubox
29 36 0.014947754 ubox
29 43 0.006080546 ubox
29 47 0.684498869 ubox
29 49 0.060263293 ubox
29 50 0.150774182 ubox
29 52 0.049192689 ubox
29 58 0.029665444 ubox
29 61 0.007671452 ubox
29 63 0.178636066 ubox
29 65 0.007412244 ubox
30 35 0.014736935 ubox
30 40 0.003451056 ubox
30 42 0.005530843 ubox
30 46 0.683418077 ubox
30 48 0.072350797 ubox
30 51 0.048981048 ubox
30 57 0.029814418 ubox
30 62 0.178272836 ubox
30 64 0.008729084 ubox
31 39 0.003906083 ubox
31 43 0.341374196 ubox
31 45 0.673526309 ubox
31 47 0.071402600 ubox
31 49 0.148346622 ubox
31 50 0.036779940 ubox
31 52 0.007006138 ubox
31 56 0.030287086 ubox
31 58 0.070513709 ubox
31 61 0.161867191 ubox
31 63 0.010628546 ubox
32 42 0.353138095 ubox
32 48 0.151431538 ubox
32 51 0.007016269 ubox
32 57 0.073451357 ubox
32 62 0.010650820 ubox
33 41 0.353080756 ubox
33 66 0.003605551 ubox
34 53 0.083892359 ubox
35 43 0.891906218 ubox
35 49 0.003206003 ubox
35 52 0.085492897 ubox
35 58 0.144363848 ubox
35 63 0.004465548 ubox
36 42 0.893000630 ubox
36 48 0.003203219 ubox
36 51 0.085451807 ubox
36 57 0.144399641 ubox
36 62 0.004463554 ubox
37 41 0.886518851 ubox
39 66 0.004552652 ubox
40 53 0.012383824 ubox
40 65 0.004583789 ubox
41 50 0.183277832 ubox
41 52 0.007390646 ubox
41 53 0.022323762 ubox
41 54 0.003274616 ubox
41 59 0.004086872 ubox
42 49 0.183459730 ubox
42 52 0.023326125 ubox
42 58 0.004101733 ubox
42 63 0.004547887 ubox
43 48 0.182954008 ubox
43 51 0.023383043 ubox
43 57 0.004099431 ubox
43 62 0.004518314 ubox
45 66 0.662417562 ubox
46 65 0.673210635 ubox
47 62 0.006677664 ubox
47 64 0.674447789 ubox
47 66 0.008601121 ubox
48 58 0.008366134 ubox
48 61 0.008093425 ubox
48 63 0.674750120 ubox
48 65 0.009809386 ubox
49 57 0.008101490 ubox
49 62 0.673734598 ubox
49 64 0.008588306 ubox
50 57 0.061646095 ubox
50 62 0.031504103 ubox
50 64 0.070263816 ubox
50 66 0.011877429 ubox
51 56 0.059066629 ubox
51 58 0.666893032 ubox
51 61 0.038016805 ubox
51 63 0.073679521 ubox
51 65 0.012523701 ubox
52 57 0.666145424 ubox
52 62 0.073612713 ubox
52 64 0.012096783 ubox
56 62 0.010105829 ubox
56 64 0.095991988 ubox
56 66 0.022112824 ubox
57 61 0.011453451 ubox
57 63 0.099636486 ubox
57 65 0.023213131 ubox
58 62 0.098922790 ubox
58 64 0.023286161 ubox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
showpage
end
%%EOF
