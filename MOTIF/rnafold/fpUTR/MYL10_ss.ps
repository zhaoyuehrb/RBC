%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAGCCUGCCUGUCUGCAUGGUCCGCCUAGAGGUUUGAGCAGCUGGGCAUGGAAGAAGCGAGCCACACCCCCAUCGCAUGCCCUAUGAACGGGAUAAGGGAACUUUUUCACUUCACCACUAUGCCUGACUAAUUUUUUAAUUAAAAAAAAUUUUUUUGUAGAAACAGAGUUUCACC\
) } def
/len { sequence length } bind def

/coor [
[177.34739685 338.06222534]
[162.35429382 338.51727295]
[147.98811340 334.20303345]
[135.72625732 325.56320190]
[126.82975769 313.48626709]
[122.21353149 299.21423340]
[122.35231781 284.21487427]
[127.23184204 270.03073120]
[136.35028076 258.12048340]
[148.76991272 249.70901489]
[163.21347046 245.66134644]
[178.19557190 246.39373779]
[192.17546082 251.83090210]
[203.71501160 261.41314697]
[195.28593445 249.00547791]
[186.85685730 236.59777832]
[170.67588806 229.83697510]
[169.44775391 211.47727966]
[160.80223083 199.21943665]
[152.15669250 186.96157837]
[143.51116943 174.70373535]
[134.86563110 162.44589233]
[126.22010803 150.18803406]
[117.57457733 137.93019104]
[95.78163910 141.59051514]
[75.16744995 133.62899780]
[61.49233627 116.27037811]
[46.85186386 119.53481293]
[32.21139145 122.79925537]
[17.57092094 126.06369781]
[2.93044829 129.32814026]
[-11.71002388 132.59257507]
[-20.20532990 145.64889526]
[-35.09935379 148.75094604]
[-47.49420547 140.57150269]
[-62.13467789 143.83595276]
[-73.83927155 155.32221985]
[-89.56433868 150.66879272]
[-93.13327026 134.66271973]
[-80.87466431 123.76966095]
[-65.39911652 129.19548035]
[-50.75864792 125.93103790]
[-43.01273727 113.26074219]
[-28.21171951 109.74157715]
[-14.97446442 117.95210266]
[-0.33399218 114.68766785]
[14.30648041 111.42322540]
[28.94695282 108.15878296]
[43.58742523 104.89434052]
[58.22789764 101.62990570]
[59.56829071 89.37728882]
[64.42357635 78.04815674]
[72.37167358 68.62738800]
[82.72161865 61.93396759]
[79.07292938 47.38449860]
[75.42423248 32.83502960]
[71.77554321 18.28556252]
[68.12684631 3.73609352]
[64.47815704 -10.81337547]
[60.82946396 -25.36284447]
[49.60517502 -29.38492584]
[41.80619431 -38.24434662]
[39.29157257 -49.65357208]
[42.57545090 -60.74046326]
[50.72700500 -68.77123260]
[47.59116364 -83.43978882]
[32.81672668 -87.11094666]
[21.14889908 -96.79333496]
[14.86771679 -110.52530670]
[15.17030907 -125.56091309]
[21.94310760 -138.91900635]
[33.79499054 -147.97430420]
[30.65914917 -162.64285278]
[27.52330971 -177.31140137]
[14.52907467 -181.95837402]
[5.60436153 -192.34179688]
[3.00390077 -205.67404175]
[7.30318785 -218.44491577]
[17.27534866 -227.34588623]
[14.39742279 -242.06721497]
[11.51949692 -256.78854370]
[8.64157104 -271.50988770]
[-0.33136252 -285.89468384]
[11.00732994 -298.49908447]
[26.25798798 -291.09274292]
[23.36290169 -274.38781738]
[26.24082756 -259.66647339]
[29.11875343 -244.94514465]
[31.99667931 -230.22381592]
[47.08612442 -223.79347229]
[55.46237946 -209.49829102]
[53.66018677 -192.86112976]
[42.19186401 -180.44725037]
[45.32770538 -165.77870178]
[48.46354294 -151.11013794]
[62.98193741 -147.69227600]
[74.62449646 -138.27101135]
[81.04830170 -124.67337799]
[80.93078613 -109.57349396]
[74.24169922 -95.96676636]
[62.25971985 -86.57563019]
[65.39556122 -71.90707397]
[81.32263184 -62.92518234]
[85.73074341 -44.85123062]
[75.37892914 -29.01153755]
[79.02762604 -14.46206856]
[82.67631531 0.08740066]
[86.32501221 14.63686943]
[89.97370148 29.18633842]
[93.62239838 43.73580551]
[97.27108765 58.28527451]
[108.41586304 59.05200195]
[118.95965576 62.74283218]
[128.14953613 69.09420013]
[135.32925415 77.65254974]
[139.98611450 87.80673218]
[141.78755188 98.83164215]
[140.60494995 109.93998718]
[136.52273560 120.33850861]
[129.83242798 129.28466797]
[138.47795105 141.54251099]
[147.12348938 153.80035400]
[155.76901245 166.05821228]
[164.41455078 178.31605530]
[173.06007385 190.57389832]
[181.70559692 202.83174133]
[194.27680969 205.80131531]
[201.22244263 216.21319580]
[199.26455688 228.16871643]
[207.69361877 240.57640076]
[216.12269592 252.98408508]
[229.89477539 240.62548828]
[253.78526306 240.56922913]
[268.00149536 245.35444641]
[282.21774292 250.13967896]
[296.43399048 254.92489624]
[310.65023804 259.71011353]
[324.86648560 264.49533081]
[339.08273315 269.28054810]
[353.29898071 274.06576538]
[367.34228516 266.81585693]
[382.37326050 271.69900513]
[389.47430420 285.81817627]
[384.43249512 300.79666138]
[370.23907471 307.74804688]
[355.31469727 302.54818726]
[348.51376343 288.28201294]
[334.29751587 283.49679565]
[320.08126831 278.71157837]
[305.86502075 273.92636108]
[291.64877319 269.14114380]
[277.43252563 264.35592651]
[263.21627808 259.57070923]
[249.00004578 254.78547668]
[243.76699829 260.15811157]
[254.51229858 270.62420654]
[265.25759888 281.09027100]
[276.00271606 291.55651855]
[265.53631592 302.30148315]
[254.79151917 291.83557129]
[244.04621887 281.36947632]
[233.30093384 270.90341187]
[228.06790161 276.27606201]
[233.22567749 290.36141968]
[238.38345337 304.44677734]
[243.54122925 318.53213501]
[248.69902039 332.61749268]
[259.82299805 345.41177368]
[250.60813904 359.64282227]
[234.38232422 354.72766113]
[234.61366272 337.77526855]
[229.45587158 323.68991089]
[224.29809570 309.60455322]
[219.14031982 295.51919556]
[213.98254395 281.43383789]
[215.03071594 296.39718628]
[211.28851318 310.92288208]
[203.14080811 323.51712036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 131]
[15 130]
[16 129]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[35 42]
[36 41]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[65 102]
[66 101]
[72 95]
[73 94]
[74 93]
[79 89]
[80 88]
[81 87]
[82 86]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
