%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD8B)
} def

/sequence { (\
ACCCCAGCCGCGACUGUCUCCGCCGAGCCCCCGGGGCCAGGUGUCCCGGGCGCGCCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.006156073 ubox
2 16 0.005881598 ubox
2 35 0.003451819 ubox
2 36 0.007571117 ubox
2 50 0.004874263 ubox
3 34 0.003481277 ubox
3 35 0.007821391 ubox
3 49 0.004853236 ubox
4 33 0.003475291 ubox
4 34 0.007827012 ubox
4 48 0.004800847 ubox
5 16 0.219265339 ubox
5 33 0.007811800 ubox
6 15 0.220432259 ubox
6 19 0.027399184 ubox
7 14 0.219449721 ubox
7 17 0.013943129 ubox
7 18 0.029208212 ubox
7 23 0.072610660 ubox
7 28 0.163897443 ubox
7 37 0.004391865 ubox
7 51 0.013375799 ubox
7 53 0.028014178 ubox
7 55 0.510468915 ubox
8 16 0.015829479 ubox
8 22 0.061114035 ubox
8 27 0.164580170 ubox
8 36 0.004399821 ubox
8 49 0.009208348 ubox
8 50 0.012205976 ubox
8 52 0.026640855 ubox
8 54 0.420220203 ubox
9 16 0.029137017 ubox
9 22 0.060431257 ubox
9 25 0.434165749 ubox
9 35 0.004399836 ubox
9 48 0.010692637 ubox
9 49 0.010634364 ubox
9 52 0.089805626 ubox
9 54 0.428569866 ubox
9 59 0.014832921 ubox
10 15 0.020003334 ubox
10 17 0.037177154 ubox
10 21 0.074056504 ubox
10 23 0.736499878 ubox
10 24 0.310255802 ubox
10 28 0.005686347 ubox
10 47 0.011943869 ubox
10 51 0.089084527 ubox
10 53 0.524567850 ubox
10 55 0.057926839 ubox
10 58 0.007959582 ubox
11 16 0.038826973 ubox
11 22 0.799942061 ubox
11 25 0.023727147 ubox
11 27 0.005720581 ubox
11 33 0.004394377 ubox
11 48 0.005682933 ubox
11 50 0.087609331 ubox
11 52 0.524643888 ubox
11 54 0.058025881 ubox
11 59 0.006216628 ubox
12 18 0.044134864 ubox
12 20 0.114085336 ubox
12 21 0.794507830 ubox
12 24 0.024035384 ubox
12 32 0.004368364 ubox
12 45 0.014015291 ubox
12 47 0.005356574 ubox
12 51 0.511272148 ubox
12 53 0.052437010 ubox
12 58 0.006598510 ubox
13 17 0.039517836 ubox
13 19 0.132192595 ubox
13 44 0.014077936 ubox
14 27 0.026281556 ubox
14 40 0.003260213 ubox
14 43 0.012538505 ubox
14 49 0.429566262 ubox
14 50 0.215585598 ubox
15 22 0.014384324 ubox
15 25 0.011013577 ubox
15 26 0.025460132 ubox
15 39 0.003371094 ubox
15 48 0.432394069 ubox
15 49 0.212496103 ubox
15 52 0.033192552 ubox
15 57 0.008174504 ubox
15 59 0.011302486 ubox
16 21 0.020483822 ubox
16 23 0.026239065 ubox
16 24 0.014222068 ubox
16 28 0.138103556 ubox
16 38 0.003364000 ubox
16 47 0.429112657 ubox
16 51 0.041935326 ubox
16 55 0.004856168 ubox
16 56 0.009063734 ubox
16 58 0.020687279 ubox
17 22 0.025097381 ubox
17 26 0.061134401 ubox
17 27 0.023351019 ubox
17 49 0.005854352 ubox
17 50 0.041411066 ubox
17 54 0.004807350 ubox
17 57 0.020044649 ubox
18 25 0.065800990 ubox
18 27 0.200892393 ubox
18 48 0.009418723 ubox
18 49 0.041442600 ubox
18 50 0.014948176 ubox
19 26 0.207300847 ubox
19 48 0.038674685 ubox
19 49 0.014951690 ubox
19 50 0.004421330 ubox
20 25 0.207251845 ubox
20 48 0.017935294 ubox
20 49 0.005794022 ubox
21 43 0.481849269 ubox
21 48 0.005733474 ubox
21 52 0.004086101 ubox
21 54 0.032470913 ubox
21 59 0.135019223 ubox
22 28 0.048811206 ubox
22 42 0.486896474 ubox
22 47 0.004650015 ubox
22 51 0.004182624 ubox
22 53 0.033396615 ubox
22 55 0.134605499 ubox
22 58 0.143286643 ubox
23 27 0.048559667 ubox
23 41 0.487303250 ubox
23 50 0.003512552 ubox
23 52 0.029500894 ubox
23 54 0.133257031 ubox
24 40 0.487245392 ubox
24 52 0.045462929 ubox
24 54 0.097504995 ubox
24 59 0.105478591 ubox
25 51 0.047971264 ubox
25 53 0.095253936 ubox
25 58 0.109597699 ubox
27 37 0.487036805 ubox
27 51 0.094269046 ubox
27 53 0.806106058 ubox
27 55 0.138469158 ubox
28 35 0.003982320 ubox
28 36 0.487284352 ubox
28 50 0.087491124 ubox
28 52 0.806881552 ubox
28 54 0.138676751 ubox
29 34 0.004924763 ubox
29 35 0.487256967 ubox
29 36 0.003162811 ubox
29 49 0.079348925 ubox
29 50 0.070108336 ubox
30 34 0.483712420 ubox
30 35 0.004294336 ubox
30 48 0.070690085 ubox
30 49 0.059109000 ubox
30 50 0.863548721 ubox
31 48 0.042998760 ubox
31 49 0.867491076 ubox
32 48 0.869178857 ubox
33 47 0.873103163 ubox
34 46 0.873146478 ubox
35 45 0.873119548 ubox
35 46 0.003576937 ubox
36 42 0.011994850 ubox
36 44 0.872105170 ubox
36 45 0.004002256 ubox
36 51 0.003745968 ubox
37 41 0.013490333 ubox
37 43 0.870900975 ubox
37 50 0.003845169 ubox
38 49 0.003833310 ubox
40 47 0.003776906 ubox
40 56 0.007851168 ubox
41 46 0.003763049 ubox
41 53 0.003413519 ubox
41 55 0.007855301 ubox
42 52 0.003450432 ubox
42 54 0.007839342 ubox
43 51 0.003637835 ubox
43 53 0.007789104 ubox
44 50 0.003681150 ubox
44 52 0.007607135 ubox
45 49 0.003746529 ubox
49 56 0.003175846 ubox
50 55 0.003427245 ubox
51 59 0.032917369 ubox
52 58 0.035214988 ubox
53 59 0.018945980 ubox
54 58 0.036195179 ubox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
