%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DYNLRB1)
} def

/sequence { (\
AAACCUUUGCGCAGGCGCAGAAAGGCACAGGACUCGCUAAGUGUUCGCUACGCGGGGCUACCGGAUCGGUCGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 45 0.006065689 ubox
3 44 0.007625818 ubox
3 70 0.046501312 ubox
4 15 0.011149021 ubox
4 25 0.916276939 ubox
4 31 0.128804405 ubox
4 43 0.008159239 ubox
4 55 0.013566605 ubox
4 56 0.061075470 ubox
4 57 0.174866197 ubox
4 64 0.016821735 ubox
4 69 0.049171790 ubox
4 73 0.137949438 ubox
5 14 0.011343841 ubox
5 20 0.029195170 ubox
5 24 0.920133206 ubox
5 25 0.024796983 ubox
5 30 0.129431284 ubox
5 31 0.011534361 ubox
5 41 0.009217892 ubox
5 54 0.013459818 ubox
5 55 0.061109406 ubox
5 56 0.175302059 ubox
5 57 0.156782085 ubox
5 63 0.016873105 ubox
5 68 0.049111984 ubox
5 72 0.138352247 ubox
5 73 0.014110522 ubox
6 13 0.010709327 ubox
6 19 0.028109364 ubox
6 20 0.008355495 ubox
6 21 0.391126635 ubox
6 22 0.081708817 ubox
6 23 0.854795322 ubox
6 24 0.022562172 ubox
6 29 0.120847428 ubox
6 30 0.010777835 ubox
6 31 0.006620362 ubox
6 40 0.009247790 ubox
6 54 0.048393210 ubox
6 55 0.143612435 ubox
6 56 0.158858162 ubox
6 72 0.010322981 ubox
6 74 0.003302892 ubox
7 19 0.011943690 ubox
7 20 0.573350289 ubox
7 21 0.087817978 ubox
7 22 0.717571952 ubox
7 23 0.019898079 ubox
7 29 0.009590874 ubox
7 30 0.008394935 ubox
7 39 0.007513977 ubox
7 54 0.096507729 ubox
7 55 0.186119701 ubox
7 57 0.012168960 ubox
7 65 0.003358060 ubox
8 17 0.065855898 ubox
8 19 0.799469035 ubox
8 20 0.067727702 ubox
8 21 0.493587592 ubox
8 22 0.012400907 ubox
8 27 0.111109812 ubox
8 29 0.010493128 ubox
8 50 0.003963920 ubox
8 52 0.009407787 ubox
8 54 0.212582146 ubox
8 56 0.015854340 ubox
8 74 0.003516231 ubox
9 16 0.092745712 ubox
9 18 0.866753616 ubox
9 26 0.111938373 ubox
9 28 0.011721061 ubox
9 37 0.009542673 ubox
9 44 0.004769280 ubox
9 48 0.009627503 ubox
9 51 0.009416540 ubox
9 53 0.242869394 ubox
9 58 0.009176566 ubox
10 15 0.092770225 ubox
10 17 0.867031152 ubox
10 25 0.111903806 ubox
10 36 0.009562347 ubox
10 43 0.005364978 ubox
10 47 0.009667072 ubox
10 52 0.242932044 ubox
10 54 0.028567383 ubox
10 57 0.009195837 ubox
10 63 0.011995927 ubox
10 72 0.003597381 ubox
11 16 0.844592698 ubox
11 18 0.411042754 ubox
11 26 0.011877492 ubox
11 35 0.009543376 ubox
11 42 0.005389830 ubox
11 46 0.009569113 ubox
11 48 0.036324596 ubox
11 51 0.239080184 ubox
11 53 0.029198582 ubox
11 58 0.007026750 ubox
11 62 0.011990031 ubox
11 71 0.003361541 ubox
12 17 0.410644822 ubox
12 25 0.011871814 ubox
12 41 0.005396610 ubox
12 47 0.039399960 ubox
12 52 0.029163465 ubox
12 57 0.007032416 ubox
13 34 0.009042620 ubox
13 45 0.003176075 ubox
13 49 0.076804138 ubox
14 33 0.009068806 ubox
14 38 0.006627511 ubox
14 45 0.041039118 ubox
14 46 0.015367528 ubox
14 48 0.064458095 ubox
14 49 0.220651823 ubox
14 59 0.012455353 ubox
15 26 0.016013207 ubox
15 37 0.006975551 ubox
15 42 0.006874565 ubox
15 44 0.059486436 ubox
15 45 0.011353802 ubox
15 48 0.231591102 ubox
15 53 0.011326961 ubox
15 58 0.012585726 ubox
16 25 0.016068281 ubox
16 36 0.006982684 ubox
16 41 0.006924508 ubox
16 43 0.060786644 ubox
16 47 0.235716809 ubox
16 52 0.011341731 ubox
16 57 0.012576904 ubox
17 26 0.036649542 ubox
17 35 0.006941620 ubox
17 42 0.060952682 ubox
17 44 0.047104900 ubox
17 46 0.228724588 ubox
17 48 0.010111977 ubox
17 51 0.011320721 ubox
18 25 0.036718186 ubox
18 41 0.061089030 ubox
18 43 0.076593005 ubox
18 47 0.010324452 ubox
19 34 0.005703293 ubox
19 38 0.056655308 ubox
19 42 0.076276567 ubox
19 45 0.047888204 ubox
19 49 0.010985524 ubox
20 33 0.005701476 ubox
20 35 0.003295916 ubox
20 37 0.061467291 ubox
20 44 0.027219402 ubox
20 45 0.015852146 ubox
20 46 0.025308575 ubox
20 48 0.011242779 ubox
20 67 0.009108247 ubox
20 71 0.003991271 ubox
21 44 0.011541332 ubox
21 45 0.027571381 ubox
21 66 0.008949081 ubox
21 70 0.003691697 ubox
22 44 0.015131345 ubox
22 45 0.064442056 ubox
23 34 0.068482948 ubox
23 38 0.015084830 ubox
23 44 0.065771073 ubox
23 45 0.019658019 ubox
23 59 0.007612407 ubox
24 33 0.069599470 ubox
24 34 0.006851485 ubox
24 35 0.010550485 ubox
24 37 0.014109775 ubox
24 38 0.094244507 ubox
24 44 0.014559004 ubox
24 45 0.194719894 ubox
24 46 0.010365114 ubox
24 49 0.016876084 ubox
24 58 0.006084022 ubox
24 59 0.104134979 ubox
24 62 0.038514214 ubox
24 67 0.005744105 ubox
24 71 0.021889551 ubox
25 33 0.007812341 ubox
25 34 0.009622858 ubox
25 37 0.097741009 ubox
25 42 0.068369653 ubox
25 44 0.210733695 ubox
25 45 0.008971207 ubox
25 48 0.017532016 ubox
25 53 0.006302438 ubox
25 58 0.108573459 ubox
25 61 0.038542973 ubox
25 66 0.005291905 ubox
25 70 0.021161225 ubox
26 36 0.097909275 ubox
26 41 0.068618593 ubox
26 43 0.218873321 ubox
26 47 0.017543685 ubox
26 52 0.006403885 ubox
26 57 0.109129293 ubox
26 69 0.021163555 ubox
27 42 0.218861662 ubox
27 44 0.006700355 ubox
27 70 0.015325150 ubox
28 41 0.217811299 ubox
28 43 0.007623619 ubox
28 69 0.016318433 ubox
29 38 0.182501323 ubox
29 42 0.007073545 ubox
29 45 0.016545237 ubox
29 49 0.005667402 ubox
29 59 0.334555712 ubox
30 37 0.195301723 ubox
30 38 0.082133394 ubox
30 44 0.019460792 ubox
30 46 0.034084277 ubox
30 48 0.005865137 ubox
30 58 0.349316714 ubox
30 59 0.640921059 ubox
30 62 0.030240450 ubox
30 67 0.006543575 ubox
30 71 0.015380239 ubox
31 37 0.084540720 ubox
31 45 0.034652644 ubox
31 46 0.009349857 ubox
31 58 0.652739605 ubox
31 61 0.030015220 ubox
31 66 0.005659984 ubox
31 67 0.025724911 ubox
31 70 0.006712140 ubox
31 71 0.077818092 ubox
32 42 0.024966766 ubox
32 44 0.034735712 ubox
32 45 0.009167364 ubox
32 66 0.025625631 ubox
32 70 0.076537310 ubox
33 41 0.025361051 ubox
33 43 0.034564310 ubox
33 55 0.068767186 ubox
33 56 0.939487576 ubox
33 57 0.064936899 ubox
33 64 0.008841854 ubox
33 69 0.075296365 ubox
33 73 0.007100829 ubox
34 40 0.024551252 ubox
34 54 0.012031267 ubox
34 55 0.944162347 ubox
34 56 0.053064836 ubox
34 57 0.003237519 ubox
34 63 0.005504185 ubox
34 64 0.028049596 ubox
34 65 0.017222792 ubox
34 68 0.054350898 ubox
34 69 0.005588721 ubox
34 72 0.006164674 ubox
34 73 0.008512295 ubox
34 74 0.015172236 ubox
35 43 0.015603100 ubox
35 52 0.004024770 ubox
35 54 0.949090266 ubox
35 55 0.038033533 ubox
35 56 0.004747748 ubox
35 63 0.040391565 ubox
35 64 0.020729057 ubox
35 68 0.043160945 ubox
35 72 0.010603764 ubox
35 73 0.015872116 ubox
36 42 0.017461781 ubox
36 44 0.007835504 ubox
36 48 0.004391520 ubox
36 51 0.004151513 ubox
36 53 0.949977524 ubox
36 58 0.146103880 ubox
36 62 0.039704911 ubox
36 67 0.042514101 ubox
36 71 0.006720855 ubox
37 41 0.017513886 ubox
37 43 0.008514495 ubox
37 47 0.004416685 ubox
37 52 0.949277900 ubox
37 55 0.005368768 ubox
37 56 0.009132810 ubox
37 57 0.146409696 ubox
37 64 0.041597308 ubox
37 69 0.003990268 ubox
38 50 0.235594138 ubox
38 54 0.005142477 ubox
38 55 0.009763706 ubox
38 56 0.142547068 ubox
38 60 0.027785138 ubox
38 63 0.041068932 ubox
38 68 0.003789503 ubox
39 49 0.170713619 ubox
39 59 0.020431093 ubox
40 49 0.905019122 ubox
40 59 0.065359213 ubox
41 48 0.936068427 ubox
41 51 0.110235267 ubox
41 53 0.148111871 ubox
41 58 0.070054595 ubox
41 61 0.034634448 ubox
42 47 0.897612184 ubox
42 50 0.110060062 ubox
42 52 0.148319335 ubox
42 57 0.068165169 ubox
42 60 0.034231542 ubox
43 49 0.104008482 ubox
43 51 0.153585702 ubox
43 58 0.037486971 ubox
43 59 0.017891052 ubox
43 61 0.003866484 ubox
43 66 0.006532091 ubox
44 50 0.151799170 ubox
44 55 0.031008136 ubox
44 56 0.052521166 ubox
44 57 0.034024547 ubox
44 60 0.003890346 ubox
44 65 0.006732591 ubox
44 74 0.045049928 ubox
44 75 0.006704700 ubox
45 54 0.007194669 ubox
45 55 0.077423691 ubox
45 56 0.029744332 ubox
45 64 0.006782896 ubox
45 69 0.004599105 ubox
45 73 0.050999299 ubox
45 74 0.010255310 ubox
46 52 0.005332356 ubox
46 54 0.095269931 ubox
46 55 0.025430807 ubox
46 63 0.006799424 ubox
46 68 0.007555229 ubox
46 72 0.055386722 ubox
46 73 0.010311469 ubox
47 51 0.005602412 ubox
47 53 0.097222323 ubox
47 58 0.028991148 ubox
47 62 0.006540366 ubox
47 67 0.007767015 ubox
47 70 0.020657216 ubox
47 71 0.054534406 ubox
48 52 0.096529854 ubox
48 57 0.029031674 ubox
48 69 0.055726380 ubox
49 56 0.028262361 ubox
49 60 0.005961906 ubox
49 68 0.053908099 ubox
50 59 0.006046672 ubox
50 70 0.003629983 ubox
51 68 0.018770837 ubox
51 69 0.003619900 ubox
52 58 0.007709189 ubox
52 67 0.018975732 ubox
53 57 0.007659661 ubox
53 63 0.063481984 ubox
53 68 0.003167784 ubox
54 62 0.064708083 ubox
54 67 0.003278443 ubox
55 61 0.064633702 ubox
55 62 0.042260021 ubox
55 67 0.003738042 ubox
55 71 0.003362055 ubox
56 61 0.042424506 ubox
56 62 0.008397058 ubox
56 71 0.031148808 ubox
57 61 0.008422367 ubox
57 70 0.037229790 ubox
58 64 0.007850172 ubox
58 69 0.037556009 ubox
58 73 0.408212634 ubox
59 63 0.007129202 ubox
59 68 0.037054910 ubox
59 72 0.405590512 ubox
60 70 0.636467375 ubox
61 69 0.670138911 ubox
61 73 0.723886546 ubox
62 68 0.670408289 ubox
62 72 0.727128700 ubox
63 67 0.627197527 ubox
63 71 0.723573628 ubox
64 70 0.614814954 ubox
64 71 0.065646964 ubox
65 70 0.079355653 ubox
66 73 0.006912782 ubox
66 74 0.040906851 ubox
67 72 0.010652130 ubox
67 73 0.043709361 ubox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
64 70 0.9500000 lbox
showpage
end
%%EOF
