%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGACAGCCUGGGAGGGGAGAAGGAGUUGGAGCUCAAGUUGGAGACAGCGAGGAGAAACCUGCCAUAGCCAGGGUGUGUCUUUGAUCCUCUUCAGGAGGUGAGGAGAAGCCAGAGGUCCUUGGUGUGCCCUCAGAAAUCUGCCUGCAGUUCUCACCAAGCCGCUGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[409.47665405 313.79608154]
[406.71115112 301.64813232]
[407.82119751 289.21429443]
[394.24877930 282.82760620]
[380.67639160 276.44091797]
[366.79296875 281.71221924]
[352.93765259 275.42852783]
[347.50274658 260.83059692]
[333.93035889 254.44390869]
[320.04693604 259.71520996]
[306.19161987 253.43153381]
[300.75674438 238.83358765]
[287.18432617 232.44689941]
[273.61193848 226.06021118]
[260.03952026 219.67352295]
[246.46711731 213.28683472]
[232.83792114 207.02221680]
[219.15306091 200.88020325]
[205.46820068 194.73817444]
[191.78332520 188.59616089]
[178.09846497 182.45413208]
[164.31192017 187.97380066]
[150.34602356 181.93984985]
[144.64996338 167.44183350]
[130.96510315 161.29980469]
[117.28023529 155.15779114]
[103.59536743 149.01576233]
[88.60080719 148.61189270]
[74.60515594 154.00836182]
[60.60950851 159.40481567]
[46.61386108 164.80128479]
[36.73923874 177.89418030]
[20.49844933 175.62068176]
[14.59862423 160.31956482]
[25.10899734 147.73130798]
[41.21739578 150.80563354]
[55.21304703 145.40916443]
[69.20869446 140.01271057]
[83.20434570 134.61624146]
[82.33116913 127.16724396]
[80.58482361 112.26924896]
[79.71165466 104.82025146]
[64.84740448 102.80675507]
[49.98315811 100.79325867]
[35.11891174 98.77975464]
[20.15816498 105.49600983]
[7.02152109 95.67967224]
[9.22283173 79.42893982]
[24.49757767 73.46118164]
[37.13241196 83.91551208]
[51.99665833 85.92900848]
[66.86090088 87.94250488]
[81.72515106 89.95600891]
[84.36045837 82.93424225]
[92.26639557 61.86896133]
[79.74779510 53.60550690]
[67.22919464 45.34205246]
[51.28704453 47.13851929]
[40.04507828 35.69309235]
[42.12717819 19.78572273]
[55.93613052 11.61918259]
[70.87889099 17.45814133]
[75.49265289 32.82345200]
[88.01125336 41.08690643]
[100.52984619 49.35036087]
[111.37177277 38.98442078]
[103.67828369 26.10769081]
[95.98479462 13.23095798]
[80.51869965 11.97419357]
[68.76702881 1.84118545]
[65.24854279 -13.27171898]
[71.31616974 -27.55329895]
[84.63677979 -35.51199722]
[100.08833313 -34.08752823]
[111.72939301 -23.82763290]
[115.08372498 -8.67744827]
[108.86152649 5.53746891]
[116.55501556 18.41420174]
[124.24850464 31.29093361]
[149.12281799 56.49283981]
[156.99290466 87.36480713]
[149.02044678 114.54880524]
[130.73030090 131.33799744]
[109.73738861 135.33090210]
[123.42225647 141.47291565]
[137.10711670 147.61494446]
[150.79199219 153.75695801]
[165.40998840 148.37625122]
[179.20088196 154.80007935]
[184.24047852 168.76927185]
[197.92535400 174.91128540]
[211.61021423 181.05331421]
[225.29508972 187.19534302]
[238.97994995 193.33735657]
[248.12449646 194.00222778]
[252.85380554 199.71443176]
[266.42620850 206.10112000]
[279.99862671 212.48780823]
[293.57101440 218.87449646]
[307.14343262 225.26118469]
[321.85565186 220.14375305]
[335.52902222 226.81410217]
[340.31704712 240.87150574]
[353.88946533 247.25819397]
[368.60168457 242.14076233]
[382.27505493 248.81111145]
[387.06307983 262.86849976]
[400.63546753 269.25521851]
[414.20788574 275.64190674]
[427.78918457 263.95046997]
[445.05908203 259.36749268]
[462.54669189 262.76635742]
[476.75823975 273.42114258]
[484.87481689 289.16091919]
[485.31170654 306.81207275]
[499.20822144 312.45889282]
[513.10473633 318.10571289]
[528.80249023 316.13275146]
[537.68072510 328.09210205]
[551.57720947 333.73895264]
[558.22155762 333.20709229]
[563.35125732 335.74960327]
[565.86535645 339.84597778]
[579.55023193 345.98800659]
[593.23504639 352.13000488]
[606.91992188 358.27203369]
[620.60479736 364.41406250]
[634.28967285 370.55609131]
[647.97454834 376.69812012]
[660.43536377 367.82824707]
[675.56298828 366.39590454]
[689.28527832 372.68606567]
[697.95861816 384.91836548]
[699.33532715 399.74978638]
[713.02014160 405.89178467]
[726.75964355 411.91073608]
[740.55255127 417.80612183]
[754.34545898 423.70147705]
[767.59649658 415.62747192]
[783.05981445 416.91781616]
[794.78948975 427.07629395]
[798.27514648 442.19677734]
[792.17657471 456.46517944]
[778.83874512 464.39495850]
[763.39031982 462.93695068]
[751.77154541 452.65182495]
[748.45007324 437.49441528]
[734.65716553 431.59902954]
[720.86425781 425.70364380]
[713.45300293 425.96697998]
[706.87817383 419.57666016]
[693.19329834 413.43463135]
[681.19714355 422.26406860]
[666.29302979 423.91439819]
[652.47265625 417.84289551]
[643.48791504 405.58847046]
[641.83251953 390.38296509]
[628.14764404 384.24093628]
[614.46276855 378.09893799]
[600.77789307 371.95690918]
[587.09301758 365.81488037]
[573.40820312 359.67285156]
[559.72332764 353.53085327]
[545.93041992 347.63546753]
[532.03387451 341.98864746]
[517.33013916 344.36547852]
[507.45791626 332.00222778]
[493.56140137 326.35540771]
[479.66488647 320.70858765]
[471.49258423 329.88415527]
[460.87167358 336.11126709]
[448.82580566 338.77227783]
[436.52130127 337.59411621]
[425.15429688 332.67614746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[8 104]
[9 103]
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[24 87]
[25 86]
[26 85]
[27 84]
[28 39]
[29 38]
[30 37]
[31 36]
[42 53]
[43 52]
[44 51]
[45 50]
[55 65]
[56 64]
[57 63]
[66 79]
[67 78]
[68 77]
[115 169]
[116 168]
[117 167]
[119 165]
[120 164]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[134 152]
[135 151]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
