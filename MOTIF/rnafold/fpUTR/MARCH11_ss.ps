%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAGCCGGCGGCUCCACCGAACGGCCGCGCCUGCCGCCGCCGCAGCUGCAGAACCUUCCGCAUCCCCUCCCCGUCCCGCCCCCUAGCCCCAGGCGUCCGGGCCCCCUCCCUCCUUUUCCCCUCUCCCUCCCGCCCCCUCCGCGCUCUCUUUCCCUGCAGCCAGAGCCCGGCCCGCCAGCCGGGCCGGCAGGAGGGCGGCGGCGGCACAACC\
) } def
/len { sequence length } bind def

/coor [
[16.42972755 307.02929688]
[9.44388580 320.30325317]
[2.55566430 333.62814331]
[-4.23456526 347.00323486]
[-5.32839727 356.06958008]
[-11.22390747 360.52371216]
[-18.20974922 373.79766846]
[-25.19559097 387.07162476]
[-32.18143082 400.34558105]
[-31.03484344 418.72506714]
[-46.23374939 427.49972534]
[-53.02397919 440.87478638]
[-59.81420898 454.24987793]
[-56.22112274 469.88537598]
[-66.31758881 482.35299683]
[-82.35846710 482.08859253]
[-92.03855896 469.29501343]
[-87.93213654 453.78640747]
[-73.18929291 447.45965576]
[-66.39906311 434.08456421]
[-59.60882950 420.70947266]
[-63.06439590 409.11849976]
[-57.51867294 397.92062378]
[-45.45539093 393.35974121]
[-38.46955109 380.08578491]
[-31.48370934 366.81182861]
[-24.49786758 353.53787231]
[-17.60964584 340.21298218]
[-10.81941605 326.83792114]
[-10.59448433 319.45239258]
[-3.83007431 313.31741333]
[3.15576744 300.04345703]
[-0.12731773 277.83358765]
[19.61343956 265.65368652]
[25.60701370 251.90316772]
[31.60058784 238.15263367]
[37.59416199 224.40211487]
[43.58773804 210.65158081]
[49.58131027 196.90104675]
[55.57488632 183.15052795]
[61.56846237 169.39999390]
[67.56203461 155.64945984]
[73.55561066 141.89892578]
[79.54918671 128.14840698]
[85.54276276 114.39787292]
[81.71358490 107.94904327]
[66.71470642 108.13257599]
[74.05522919 95.05138397]
[70.22605133 88.60255432]
[55.28420258 87.28302765]
[40.34235382 85.96350861]
[25.91504288 92.45684052]
[13.91774750 83.62993622]
[-1.02410197 82.31041718]
[-15.65605640 89.71567535]
[-29.23532677 80.52136230]
[-27.79272461 64.18579102]
[-12.81227398 57.51359940]
[0.29542077 67.36856842]
[15.23727036 68.68808746]
[28.59583855 62.10037994]
[41.66187668 71.02165985]
[56.60372543 72.34117889]
[71.54557037 73.66070557]
[75.83737183 67.51005554]
[63.35727692 59.18856049]
[50.87718201 50.86706543]
[38.39709091 42.54557419]
[25.91699600 34.22407913]
[13.43690300 25.90258408]
[-0.45624438 20.24745750]
[-0.28551909 5.24842834]
[13.73274994 -0.08899970]
[23.83596611 10.99950314]
[35.95296478 19.84135437]
[48.06996536 28.68320465]
[60.18696213 37.52505493]
[72.30396271 46.36690521]
[84.42095947 55.20875931]
[88.71276093 49.05810928]
[82.31809998 35.48945618]
[75.92343903 21.92080307]
[69.52878571 8.35214901]
[54.29521942 6.97892427]
[41.87633896 -1.77711201]
[35.54967880 -15.48257732]
[36.92343521 -30.41471481]
[45.52894592 -42.57246017]
[39.13428879 -56.14111328]
[32.73963165 -69.70976257]
[20.51786232 -81.45986176]
[28.42543602 -96.45674896]
[45.02527237 -93.00975800]
[46.30828476 -76.10442352]
[52.70294189 -62.53577042]
[59.09759903 -48.96711731]
[73.95196533 -47.86558533]
[86.34297180 -39.42052460]
[92.88642883 -25.81723595]
[91.73477173 -10.66565132]
[83.09743500 1.95749104]
[89.49209595 15.52614403]
[95.88675690 29.09479713]
[102.28141022 42.66345215]
[103.17472839 27.69007492]
[104.06804657 12.71669865]
[104.96136475 -2.25667715]
[111.77919769 -15.61770916]
[121.69418335 -26.87350845]
[134.08831787 -35.32249832]
[148.18907166 -40.43804550]
[163.11753845 -41.90129471]
[177.94320679 -39.62104034]
[191.74198914 -33.73941422]
[203.65380859 -24.62302208]
[212.93618774 -12.84009171]
[219.01054382 0.87494045]
[221.49827576 15.66720867]
[220.24430847 30.61470222]
[215.32681274 44.78573608]
[207.05229187 57.29702377]
[195.93649292 67.36872864]
[182.67230225 74.37306976]
[168.08644104 77.87347412]
[153.08235168 77.65094757]
[139.61477661 84.25579834]
[126.14718628 90.86064911]
[112.67959595 97.46550751]
[127.66505432 98.12590790]
[142.65051270 98.78630829]
[157.63595581 99.44670868]
[172.62141418 100.10710907]
[186.74885559 92.98489380]
[199.12313843 101.27503204]
[214.10859680 101.93543243]
[229.09405518 102.59583282]
[231.19017029 94.88758087]
[235.78726196 87.74765778]
[242.70477295 81.99510956]
[251.49450684 78.38290405]
[261.46658325 77.51123810]
[271.74325562 79.75137329]
[281.33602905 85.18860626]
[295.92413330 81.69763947]
[310.48623657 78.09967804]
[325.02154541 74.39492798]
[328.50473022 59.49103928]
[338.52389526 47.92060089]
[352.77670288 42.34242249]
[367.98794556 44.03832626]
[380.66223145 52.61860657]
[387.88708496 66.11157990]
[388.00225830 81.41664886]
[380.98132324 95.01683807]
[368.43762207 103.78691101]
[353.25363159 105.71157074]
[338.91845703 100.34854889]
[328.72628784 88.93022919]
[314.19097900 92.63497162]
[308.48709106 97.33197784]
[299.41513062 96.28575134]
[284.82699585 99.77672577]
[283.94821167 107.22505951]
[298.84484863 108.98288727]
[297.08679199 123.87950134]
[282.19061279 122.12173462]
[281.31182861 129.57006836]
[294.68688965 136.36030579]
[308.06198120 143.15052795]
[321.43707275 149.94076538]
[334.81213379 156.73098755]
[348.18722534 163.52122498]
[361.56228638 170.31144714]
[376.50619507 165.16795349]
[390.67327881 172.17288208]
[395.65850830 187.17033386]
[388.50418091 201.26257324]
[373.45486450 206.08892822]
[359.43905640 198.78602600]
[354.77206421 183.68652344]
[341.39700317 176.89630127]
[328.02191162 170.10606384]
[314.64682007 163.31584167]
[301.27175903 156.52560425]
[287.89666748 149.73538208]
[274.52157593 142.94514465]
[241.95652771 141.01603699]
[228.43365479 117.58129120]
[213.44819641 116.92088318]
[198.46273804 116.26048279]
[185.40715027 123.42993927]
[171.96101379 115.09256744]
[156.97555542 114.43216705]
[141.99009705 113.77175903]
[127.00464630 113.11135864]
[112.01919556 112.45095825]
[99.29328918 120.39144897]
[93.29971313 134.14198303]
[87.30613708 147.89250183]
[81.31256866 161.64303589]
[75.31899261 175.39356995]
[69.32541656 189.14408875]
[63.33184052 202.89462280]
[57.33826828 216.64515686]
[51.34469223 230.39569092]
[45.35112000 244.14620972]
[39.35754395 257.89672852]
[33.36396790 271.64727783]
[37.60264969 277.84173584]
[39.41637421 285.05499268]
[38.62622452 292.38223267]
[35.37691116 298.92105103]
[30.11306381 303.88259888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 29]
[4 28]
[6 27]
[7 26]
[8 25]
[9 24]
[11 21]
[12 20]
[13 19]
[34 208]
[35 207]
[36 206]
[37 205]
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[49 64]
[50 63]
[51 62]
[53 60]
[54 59]
[80 104]
[81 103]
[82 102]
[83 101]
[88 96]
[89 95]
[90 94]
[128 196]
[129 195]
[130 194]
[131 193]
[132 192]
[134 190]
[135 189]
[136 188]
[143 162]
[144 161]
[145 159]
[146 158]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
