%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGCCCCGCCACCCGCCCGGGCCUCGACGGGCGCGCCGCCAGGGCUGGGGAGGGGCGGCGCGGAGGGCGGGGGCCGGGCGCAGGGCAGGGCCCGGCUGUGCCUCGCCGGCCGCUCGGGCAGCUCCCGGGCCGCGGCCAGCCGAGGAUCAGAGCGCUUGCCCCGGGGGUCUGUCGCGUCGCAGGCGCCGCCGGAGCCCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[-103.32775116 175.40959167]
[-113.75825500 174.90504456]
[-122.01038361 168.87063599]
[-136.56604004 172.49453735]
[-144.14102173 177.60643005]
[-151.37130737 176.06091309]
[-165.98054504 179.46241760]
[-180.58978271 182.86392212]
[-195.19902039 186.26541138]
[-206.88513184 196.93057251]
[-221.03540039 192.28096008]
[-235.64463806 195.68246460]
[-250.25387573 199.08396912]
[-257.90591431 204.07974243]
[-265.11181641 202.42414856]
[-279.77120972 205.60246277]
[-294.43063354 208.78077698]
[-309.09002686 211.95910645]
[-323.74945068 215.13742065]
[-338.40884399 218.31573486]
[-353.06826782 221.49404907]
[-358.28677368 239.16204834]
[-374.67407227 250.50328064]
[-396.05621338 248.97059631]
[-407.80401611 258.29736328]
[-419.55184937 267.62414551]
[-431.29965210 276.95092773]
[-436.81765747 292.39382935]
[-452.99697876 295.06997681]
[-463.19372559 282.22637939]
[-456.91836548 267.07540894]
[-440.62643433 265.20309448]
[-428.87863159 255.87632751]
[-417.13079834 246.54956055]
[-405.38296509 237.22277832]
[-410.64440918 223.17581177]
[-425.62872314 223.86184692]
[-440.61303711 224.54788208]
[-455.59732056 225.23390198]
[-470.58163452 225.91993713]
[-485.56594849 226.60597229]
[-500.55023193 227.29199219]
[-515.53454590 227.97802734]
[-521.04663086 242.17440796]
[-531.86090088 252.89685059]
[-546.10375977 258.28765869]
[-561.30755615 257.41284180]
[-574.83807373 250.42396545]
[-584.35113525 238.53187561]
[-588.19848633 223.79696655]
[-585.71362305 208.77214050]
[-577.32702637 196.06056213]
[-564.49169922 187.86454773]
[-549.43145752 185.60414124]
[-534.75561523 189.67097473]
[-523.00677490 199.36041260]
[-516.22058105 212.99372864]
[-501.23626709 212.30769348]
[-486.25198364 211.62165833]
[-471.26766968 210.93563843]
[-456.28335571 210.24960327]
[-441.29907227 209.56356812]
[-426.31475830 208.87754822]
[-411.33044434 208.19151306]
[-399.01196289 194.21380615]
[-381.99298096 189.51985168]
[-366.11370850 194.61970520]
[-356.24658203 206.83464050]
[-341.58718872 203.65632629]
[-326.92776489 200.47801208]
[-312.26834106 197.29969788]
[-297.60894775 194.12136841]
[-282.94952393 190.94305420]
[-268.29013062 187.76473999]
[-253.65538025 184.47473145]
[-239.04614258 181.07322693]
[-224.43690491 177.67172241]
[-213.79576111 167.24986267]
[-198.60052490 171.65618896]
[-183.99128723 168.25468445]
[-169.38204956 164.85317993]
[-154.77281189 161.45167542]
[-140.18994141 157.93887329]
[-125.63427734 154.31497192]
[-112.74458313 139.90475464]
[-93.45611572 145.75399780]
[-79.01773834 141.68789673]
[-68.86436462 130.79026794]
[-53.48351288 134.49700928]
[-39.04513550 130.43090820]
[-24.60675430 126.36480713]
[-10.16837406 122.29870605]
[4.27000523 118.23259735]
[18.70838547 114.16649628]
[33.11534119 109.99041748]
[47.49003220 105.70460510]
[61.86472702 101.41879272]
[76.23941803 97.13298035]
[90.61411285 92.84716797]
[103.16502380 84.63286591]
[112.84572601 73.17494202]
[111.70888519 57.63965225]
[121.68972015 46.15759277]
[136.50724792 45.16953278]
[146.18795776 33.71160507]
[155.86865234 22.25368118]
[165.54934692 10.79575729]
[175.14241028 -0.73565102]
[184.64724731 -12.33987236]
[187.40612793 -27.91867828]
[201.45652771 -32.86189651]
[210.96136475 -44.46611786]
[220.46621704 -56.07033920]
[229.97105408 -67.67456055]
[239.20797729 -79.49315643]
[248.17214966 -91.51994324]
[257.13632202 -103.54673004]
[266.10049438 -115.57351685]
[275.06466675 -127.60030365]
[284.02883911 -139.62709045]
[292.99301147 -151.65386963]
[292.10897827 -167.67254639]
[304.17709351 -178.24325562]
[319.93978882 -175.25704956]
[327.30523682 -161.00468445]
[320.62329102 -146.41937256]
[305.01980591 -142.68969727]
[296.05563354 -130.66291809]
[287.09146118 -118.63613129]
[278.12728882 -106.60934448]
[269.16311646 -94.58255768]
[260.19894409 -82.55577087]
[251.23477173 -70.52898407]
[251.38113403 -67.00234985]
[249.82415771 -63.22980118]
[246.46696472 -60.01382065]
[241.57527161 -58.16971588]
[232.07043457 -46.56549454]
[222.56559753 -34.96127319]
[213.06074524 -23.35705185]
[210.98171997 -8.60825825]
[196.25146484 -2.83502960]
[186.74662781 8.76919174]
[184.93943787 15.93856049]
[177.00727844 20.47645760]
[167.32658386 31.93438339]
[157.64587402 43.39230728]
[147.96517944 54.85023117]
[149.46505737 69.62473297]
[139.81066895 81.38260651]
[124.30364990 82.85564423]
[114.62294769 94.31356812]
[115.87521362 101.70828247]
[118.37975311 116.49771881]
[119.63202667 123.89243317]
[132.54548645 131.52410889]
[145.45893860 139.15579224]
[158.37240601 146.78747559]
[171.28585815 154.41915894]
[184.19931030 162.05084229]
[197.11277771 169.68252563]
[210.02622986 177.31420898]
[225.15362549 173.59942627]
[238.14099121 181.52299500]
[241.58926392 195.96754456]
[254.50271606 203.59922791]
[270.31982422 203.95944214]
[277.34011841 217.09582520]
[290.25357056 224.72750854]
[306.08688354 222.14169312]
[317.88327026 233.01480103]
[316.59356689 249.00593567]
[303.20715332 257.84805298]
[287.99288940 252.75823975]
[282.62188721 237.64097595]
[269.70843506 230.00929260]
[254.81498718 230.19494629]
[246.87103271 216.51268005]
[233.95758057 208.88099670]
[219.64091492 212.82672119]
[206.43611145 205.27105713]
[202.39454651 190.22767639]
[189.48109436 182.59599304]
[176.56764221 174.96430969]
[163.65417480 167.33262634]
[150.74072266 159.70094299]
[137.82725525 152.06925964]
[124.91380310 144.43757629]
[112.00034332 136.80589294]
[96.45035553 123.51052856]
[94.89992523 107.22186279]
[80.52523041 111.50767517]
[66.15054321 115.79348755]
[51.77584839 120.07929993]
[37.40115356 124.36511230]
[30.06789970 129.81809998]
[22.77448654 128.60487366]
[8.33610725 132.67097473]
[-6.10227203 136.73707581]
[-20.54065132 140.80319214]
[-34.97903061 144.86929321]
[-49.41741180 148.93539429]
[-60.60351181 160.12385559]
[-74.95162964 156.12628174]
[-89.39001465 160.19238281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 84]
[4 83]
[6 82]
[7 81]
[8 80]
[9 79]
[11 77]
[12 76]
[13 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[24 35]
[25 34]
[26 33]
[27 32]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[86 205]
[87 204]
[89 202]
[90 201]
[91 200]
[92 199]
[93 198]
[94 197]
[95 195]
[96 194]
[97 193]
[98 192]
[99 191]
[100 152]
[101 151]
[104 148]
[105 147]
[106 146]
[107 145]
[108 143]
[109 142]
[111 140]
[112 139]
[113 138]
[114 137]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[165 179]
[166 178]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
