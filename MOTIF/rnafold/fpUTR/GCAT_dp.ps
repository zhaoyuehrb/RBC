%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GCAT)
} def

/sequence { (\
AGGCUGCGUCCGCGAUGCGCACGGCUCCCAGGCAGGCAGGCGCGCUCGGGCGAGGUAGGAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.003407387 ubox
2 26 0.005316383 ubox
2 29 0.003662103 ubox
2 46 0.012916208 ubox
2 47 0.004970864 ubox
3 9 0.003466779 ubox
3 20 0.066363107 ubox
3 25 0.005721622 ubox
3 28 0.003660800 ubox
3 41 0.009037668 ubox
3 45 0.014338611 ubox
3 51 0.010624976 ubox
3 56 0.815959023 ubox
3 62 0.199271663 ubox
4 8 0.003617673 ubox
4 19 0.064945587 ubox
4 24 0.005734119 ubox
4 39 0.007715893 ubox
4 40 0.007577780 ubox
4 44 0.014052232 ubox
4 50 0.010612949 ubox
4 54 0.151229981 ubox
4 55 0.831301553 ubox
4 58 0.479860976 ubox
4 59 0.024140667 ubox
4 61 0.194771714 ubox
5 14 0.003947282 ubox
5 19 0.020543472 ubox
5 21 0.013399829 ubox
5 23 0.004996429 ubox
5 38 0.009181375 ubox
5 39 0.005629661 ubox
5 44 0.005881201 ubox
5 49 0.009630209 ubox
5 53 0.153450042 ubox
5 54 0.760911602 ubox
5 57 0.488490312 ubox
5 58 0.012544360 ubox
5 60 0.172645246 ubox
5 63 0.014647126 ubox
6 13 0.005006037 ubox
6 18 0.070079088 ubox
6 20 0.015303463 ubox
6 22 0.004144903 ubox
6 25 0.003764749 ubox
6 37 0.009615283 ubox
6 43 0.045566727 ubox
6 51 0.003626493 ubox
6 56 0.506246058 ubox
6 62 0.026401926 ubox
7 12 0.005005334 ubox
7 17 0.070112959 ubox
7 19 0.015314817 ubox
7 23 0.017577743 ubox
7 36 0.009580473 ubox
7 42 0.045858218 ubox
7 48 0.009834074 ubox
7 50 0.003287715 ubox
7 52 0.846026986 ubox
7 55 0.504072916 ubox
7 61 0.026317523 ubox
7 63 0.003954865 ubox
8 16 0.070050832 ubox
8 18 0.015280950 ubox
8 20 0.003808827 ubox
8 22 0.018159171 ubox
8 33 0.004603339 ubox
8 37 0.004556086 ubox
8 41 0.045871199 ubox
8 47 0.009995032 ubox
8 51 0.857024046 ubox
8 56 0.017313252 ubox
8 62 0.004256065 ubox
9 15 0.070079108 ubox
9 17 0.014769054 ubox
9 21 0.017793667 ubox
9 32 0.003664337 ubox
9 36 0.004468282 ubox
9 40 0.044814430 ubox
9 50 0.802946002 ubox
9 53 0.484671148 ubox
9 55 0.054298968 ubox
9 59 0.012114964 ubox
9 60 0.021272174 ubox
10 14 0.069512555 ubox
10 31 0.003627781 ubox
10 32 0.008330034 ubox
10 35 0.004488545 ubox
10 39 0.044711244 ubox
10 40 0.009782561 ubox
10 49 0.802034950 ubox
10 50 0.331665309 ubox
10 52 0.382807809 ubox
10 54 0.061568862 ubox
10 55 0.071213149 ubox
10 58 0.011846354 ubox
10 59 0.021998564 ubox
11 19 0.018145378 ubox
11 31 0.008361398 ubox
11 39 0.009839001 ubox
11 44 0.014462155 ubox
11 48 0.793636173 ubox
11 49 0.342980173 ubox
11 52 0.288787827 ubox
11 54 0.070456054 ubox
11 58 0.021768455 ubox
12 18 0.030407545 ubox
12 20 0.010362906 ubox
12 33 0.005007532 ubox
12 37 0.045427593 ubox
12 41 0.003551520 ubox
12 43 0.024132729 ubox
12 45 0.095428179 ubox
12 47 0.742875754 ubox
12 51 0.399933810 ubox
12 56 0.019336604 ubox
13 17 0.030402436 ubox
13 19 0.010519765 ubox
13 32 0.005011845 ubox
13 36 0.045419067 ubox
13 40 0.003605177 ubox
13 42 0.025591198 ubox
13 44 0.104485520 ubox
13 48 0.444655720 ubox
13 50 0.395580634 ubox
13 52 0.066549788 ubox
13 55 0.020488001 ubox
14 18 0.011071385 ubox
14 27 0.008622453 ubox
14 41 0.025445210 ubox
14 43 0.091880861 ubox
14 47 0.519764869 ubox
14 51 0.066412014 ubox
15 26 0.008525108 ubox
15 46 0.537443688 ubox
16 34 0.043708317 ubox
16 38 0.025993503 ubox
16 42 0.087709431 ubox
16 44 0.634240928 ubox
16 48 0.271062908 ubox
16 52 0.019067358 ubox
17 25 0.011635617 ubox
17 33 0.044396613 ubox
17 37 0.026274430 ubox
17 41 0.088675869 ubox
17 43 0.704017412 ubox
17 45 0.622307701 ubox
17 47 0.284953686 ubox
17 51 0.020313233 ubox
18 24 0.011642338 ubox
18 32 0.044383374 ubox
18 36 0.026222318 ubox
18 40 0.088436993 ubox
18 42 0.704533480 ubox
18 44 0.622742199 ubox
18 48 0.003615078 ubox
18 50 0.020305479 ubox
19 25 0.006525630 ubox
19 33 0.020822679 ubox
19 37 0.068576397 ubox
19 41 0.704473368 ubox
19 43 0.620921609 ubox
19 45 0.314789278 ubox
20 24 0.006491987 ubox
20 32 0.020905614 ubox
20 36 0.068828079 ubox
20 40 0.703728713 ubox
20 42 0.578084944 ubox
20 44 0.314913017 ubox
22 42 0.390323675 ubox
22 44 0.003674686 ubox
22 63 0.010272955 ubox
23 29 0.041471456 ubox
23 41 0.634310915 ubox
23 43 0.004246793 ubox
23 62 0.007668264 ubox
24 28 0.040853397 ubox
24 33 0.286491391 ubox
24 37 0.648783833 ubox
24 41 0.215250445 ubox
24 51 0.003988258 ubox
24 56 0.004052510 ubox
24 62 0.057881738 ubox
25 31 0.013926164 ubox
25 32 0.286379594 ubox
25 35 0.063649840 ubox
25 36 0.648460755 ubox
25 39 0.660046518 ubox
25 40 0.212243970 ubox
25 50 0.003950253 ubox
25 54 0.004508492 ubox
25 55 0.004034294 ubox
25 61 0.058427294 ubox
26 30 0.015028587 ubox
26 31 0.263278031 ubox
26 32 0.019649239 ubox
26 34 0.063845592 ubox
26 35 0.632193133 ubox
26 36 0.013721051 ubox
26 38 0.650919404 ubox
26 39 0.197874019 ubox
26 40 0.003467229 ubox
26 53 0.004588133 ubox
26 54 0.003897261 ubox
26 60 0.058409000 ubox
27 31 0.047912763 ubox
27 35 0.098865852 ubox
27 36 0.405090971 ubox
27 39 0.024378023 ubox
27 50 0.007943476 ubox
27 52 0.004404555 ubox
27 59 0.058230726 ubox
28 35 0.404648835 ubox
28 36 0.566209904 ubox
28 49 0.009001411 ubox
28 50 0.004562022 ubox
28 55 0.031299935 ubox
28 58 0.049017425 ubox
29 35 0.567188932 ubox
29 39 0.003634495 ubox
29 48 0.009263875 ubox
29 49 0.004803871 ubox
29 54 0.044103778 ubox
29 58 0.003778413 ubox
30 46 0.003987035 ubox
31 45 0.004024045 ubox
31 46 0.010221784 ubox
32 41 0.023300705 ubox
32 43 0.007401896 ubox
32 45 0.010592060 ubox
32 51 0.050360082 ubox
32 56 0.019059119 ubox
33 40 0.023344810 ubox
33 42 0.007420399 ubox
33 44 0.010565625 ubox
33 50 0.050335769 ubox
33 55 0.019159359 ubox
34 46 0.013211312 ubox
35 45 0.013347929 ubox
35 46 0.040252615 ubox
35 47 0.023118099 ubox
36 43 0.019804051 ubox
36 45 0.047780010 ubox
36 51 0.007896384 ubox
36 56 0.005936275 ubox
37 42 0.019822445 ubox
37 44 0.047823316 ubox
37 50 0.007892428 ubox
37 55 0.006037576 ubox
38 46 0.006061036 ubox
39 45 0.006265229 ubox
39 47 0.004515415 ubox
40 45 0.003436656 ubox
40 46 0.003533768 ubox
40 51 0.006591920 ubox
40 56 0.003523799 ubox
41 48 0.004106319 ubox
41 50 0.006593487 ubox
41 52 0.018133540 ubox
41 55 0.003591604 ubox
42 47 0.003882679 ubox
42 51 0.019167616 ubox
42 56 0.011379879 ubox
43 50 0.019167661 ubox
43 52 0.011776024 ubox
43 55 0.011760214 ubox
43 63 0.042295186 ubox
44 51 0.012638180 ubox
44 56 0.003203993 ubox
44 62 0.062484887 ubox
45 50 0.012602786 ubox
45 54 0.018259090 ubox
45 61 0.062559301 ubox
46 53 0.018618145 ubox
46 60 0.062538273 ubox
47 52 0.018662032 ubox
47 54 0.004412463 ubox
47 58 0.003771791 ubox
47 59 0.062415619 ubox
50 56 0.029090692 ubox
50 62 0.013378753 ubox
51 55 0.030340478 ubox
51 61 0.013395028 ubox
55 62 0.071090759 ubox
56 61 0.069047900 ubox
3 56 0.9500000 lbox
4 55 0.9500000 lbox
5 54 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
showpage
end
%%EOF
