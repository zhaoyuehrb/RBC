%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDHD1)
} def

/sequence { (\
GCAGUGUGGUGAGCGAGCCGAAGCGCGGGAAGCAGCUCUUGUGGAUCCUCAGUGGCGGAGGCUCGGUCACCCGGAUAGGUAAAGGAAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.038521223 ubox
1 80 0.599876071 ubox
2 6 0.039719254 ubox
2 8 0.012740385 ubox
2 79 0.621603631 ubox
3 7 0.010961013 ubox
4 76 0.599101121 ubox
4 80 0.010152231 ubox
4 90 0.013792757 ubox
5 73 0.560068305 ubox
5 75 0.606707555 ubox
5 77 0.142256269 ubox
5 79 0.010431768 ubox
5 81 0.005633728 ubox
5 89 0.013300274 ubox
6 72 0.683104051 ubox
6 76 0.147749511 ubox
6 80 0.005341365 ubox
6 90 0.009304604 ubox
7 73 0.588602465 ubox
7 75 0.145913333 ubox
7 77 0.011329364 ubox
7 79 0.004269088 ubox
7 81 0.003176089 ubox
7 89 0.009299321 ubox
8 71 0.871097684 ubox
8 72 0.484855967 ubox
9 70 0.938998709 ubox
9 71 0.343695376 ubox
10 69 0.999170555 ubox
11 68 0.999975949 ubox
12 67 0.997634444 ubox
13 67 0.003547385 ubox
14 65 0.999592370 ubox
14 66 0.004758767 ubox
15 64 0.999968856 ubox
16 63 0.999848086 ubox
17 62 0.999985337 ubox
18 58 0.042315487 ubox
18 61 0.999094285 ubox
19 57 0.062360364 ubox
19 60 0.997654937 ubox
20 38 0.017804507 ubox
20 40 0.004668182 ubox
20 47 0.053240898 ubox
20 50 0.003894305 ubox
20 56 0.113662325 ubox
21 37 0.012628771 ubox
21 39 0.004778839 ubox
21 40 0.010542864 ubox
21 46 0.054395190 ubox
21 49 0.003708483 ubox
22 37 0.021536368 ubox
22 39 0.011024198 ubox
23 33 0.005922049 ubox
23 36 0.026298535 ubox
23 38 0.011083256 ubox
23 42 0.003250376 ubox
23 53 0.135182200 ubox
23 56 0.837955037 ubox
24 32 0.005927542 ubox
24 35 0.026297316 ubox
24 41 0.003411419 ubox
24 43 0.130044600 ubox
24 52 0.135531811 ubox
24 54 0.602911514 ubox
24 55 0.661494935 ubox
24 57 0.401114818 ubox
25 33 0.028273582 ubox
25 36 0.013246915 ubox
25 40 0.003359150 ubox
25 42 0.134865689 ubox
25 53 0.792118124 ubox
25 56 0.401557821 ubox
26 32 0.028352467 ubox
26 35 0.013255346 ubox
26 41 0.135258588 ubox
26 52 0.813130831 ubox
26 54 0.161937364 ubox
26 55 0.400359585 ubox
27 38 0.010065016 ubox
27 40 0.134897900 ubox
27 47 0.009876393 ubox
27 48 0.064838091 ubox
27 49 0.843031047 ubox
27 50 0.418102778 ubox
27 53 0.079453255 ubox
28 37 0.010194616 ubox
28 39 0.135231044 ubox
28 46 0.009824556 ubox
28 47 0.064494199 ubox
28 48 0.981385338 ubox
28 49 0.106588879 ubox
28 50 0.017310688 ubox
29 36 0.010264515 ubox
29 38 0.135381487 ubox
29 46 0.058361541 ubox
29 47 0.982349643 ubox
29 48 0.100410183 ubox
29 49 0.011596166 ubox
29 50 0.021653452 ubox
30 37 0.128261602 ubox
30 40 0.005330681 ubox
30 46 0.972808765 ubox
30 49 0.019362441 ubox
31 37 0.022547546 ubox
31 39 0.010209259 ubox
31 40 0.004386386 ubox
31 49 0.012999306 ubox
32 36 0.030689728 ubox
32 38 0.010175819 ubox
32 39 0.003589014 ubox
32 42 0.380949098 ubox
32 48 0.015907346 ubox
33 41 0.383195821 ubox
33 43 0.852929479 ubox
34 40 0.372896454 ubox
34 42 0.765077395 ubox
34 49 0.003220926 ubox
35 39 0.253320444 ubox
35 42 0.479246772 ubox
35 48 0.003540495 ubox
35 56 0.009407991 ubox
36 41 0.691584828 ubox
36 44 0.016325041 ubox
36 55 0.009423303 ubox
37 43 0.012826913 ubox
37 44 0.012208155 ubox
37 45 0.039526735 ubox
37 54 0.009243999 ubox
38 43 0.017466296 ubox
38 44 0.040061024 ubox
38 54 0.003815828 ubox
39 43 0.036097658 ubox
39 52 0.011025149 ubox
40 51 0.012678194 ubox
40 57 0.003759508 ubox
41 50 0.013005487 ubox
41 56 0.004263857 ubox
42 51 0.011117369 ubox
42 55 0.003973032 ubox
43 49 0.005218027 ubox
43 50 0.017314909 ubox
44 48 0.005927392 ubox
44 49 0.013574305 ubox
44 50 0.013291685 ubox
45 49 0.011601797 ubox
45 53 0.004370698 ubox
46 52 0.004339347 ubox
46 58 0.003286976 ubox
46 59 0.108318506 ubox
47 54 0.005699875 ubox
47 55 0.033647680 ubox
47 57 0.004916229 ubox
47 58 0.116204290 ubox
48 54 0.038408400 ubox
48 55 0.010672770 ubox
48 57 0.116621818 ubox
48 58 0.015322668 ubox
48 60 0.012936246 ubox
49 54 0.010146883 ubox
49 55 0.034503915 ubox
49 57 0.012757824 ubox
49 58 0.017577001 ubox
49 59 0.024362714 ubox
50 54 0.036778919 ubox
50 57 0.022538682 ubox
50 58 0.025154618 ubox
69 80 0.004104690 ubox
70 79 0.004811916 ubox
71 78 0.005431475 ubox
71 79 0.055612090 ubox
71 85 0.040178085 ubox
72 78 0.090015532 ubox
72 84 0.052371792 ubox
79 90 0.081610817 ubox
80 89 0.082376376 ubox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
showpage
end
%%EOF
