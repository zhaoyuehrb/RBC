%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCGCCCCCUACAUCCGGGGCCUGGGCGGCAGCAGGGCCGCCGCGGGGAGGUCACGUGGCUCCUUCCUUUCCGUCUCUGGCCGGCUGGGCGCGGGCGACUGCUGGCGAGGCGCGUGGGACCUUACGCUGGUUCCCCUUCGUCUCCUCUCCCGGCCCGGGCCACUAGAGAGUUCGCUGACGCCGGGUGAGCUGAGCCUGCCGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[-28.76034546 293.87194824]
[-33.44508362 301.76214600]
[-40.09589005 308.05020142]
[-48.19461060 312.26385498]
[-57.11510468 314.09182739]
[-66.17165375 313.40673828]
[-72.50524902 327.00399780]
[-78.83885193 340.60125732]
[-85.17244720 354.19851685]
[-91.50604248 367.79577637]
[-83.86007690 381.29833984]
[-85.64441681 396.71246338]
[-96.17292786 408.11114502]
[-111.39720154 411.11135864]
[-125.46318817 404.55941772]
[-132.96221924 390.97473145]
[-131.01077271 375.58084106]
[-120.35923004 364.29705811]
[-105.10330963 361.46218872]
[-98.76970673 347.86492920]
[-92.43611145 334.26766968]
[-86.10251617 320.67037964]
[-79.76892090 307.07312012]
[-91.41984558 289.64022827]
[-90.15834808 268.57510376]
[-76.33444977 252.45223999]
[-55.44480133 247.93310547]
[-50.36161041 233.82066345]
[-45.27841949 219.70822144]
[-40.19522858 205.59576416]
[-35.11203766 191.48332214]
[-30.02884865 177.37086487]
[-24.94565773 163.25842285]
[-28.41571617 156.60946655]
[-41.71375656 163.54936218]
[-48.65342712 150.25120544]
[-35.35583115 143.31153870]
[-38.82588577 136.66256714]
[-53.30989838 132.76214600]
[-67.79391479 128.86170959]
[-82.27792358 124.96128082]
[-96.76194000 121.06084442]
[-111.75939178 130.06471252]
[-128.30305481 125.52629852]
[-136.28591919 110.72463989]
[-150.82691956 107.04235840]
[-165.36793518 103.36007690]
[-179.90893555 99.67778778]
[-194.44993591 95.99550629]
[-208.99093628 92.31322479]
[-223.53195190 88.63094330]
[-238.07295227 84.94866180]
[-252.61395264 81.26638031]
[-261.67257690 93.47333527]
[-274.71560669 101.28022003]
[-289.75411987 103.49653625]
[-304.49481201 99.78431702]
[-316.68981934 90.70964050]
[-324.47955322 77.65634155]
[-326.67608643 62.61494064]
[-322.94448853 47.87915039]
[-313.85375977 35.69606781]
[-300.79022217 27.92352676]
[-285.74594116 25.74678230]
[-271.01507568 29.49777222]
[-258.84396362 38.60449600]
[-251.08862305 51.67824936]
[-248.93167114 66.72537231]
[-234.39067078 70.40766144]
[-219.84967041 74.08994293]
[-205.30865479 77.77222443]
[-190.76765442 81.45450592]
[-176.22665405 85.13678741]
[-161.68565369 88.81906891]
[-147.14463806 92.50135040]
[-132.60363770 96.18363190]
[-122.56539154 88.10363770]
[-109.51132202 87.26863861]
[-98.19355011 94.20715332]
[-92.86150360 106.57683563]
[-78.37749481 110.47726440]
[-63.89348221 114.37770081]
[-49.40946960 118.27812958]
[-34.92545319 122.17855835]
[-7.47955751 143.70329285]
[5.97145510 137.06474304]
[19.42246819 130.42620850]
[32.87348175 123.78765869]
[40.86216736 111.21665192]
[56.66154861 112.04741669]
[70.11255646 105.40887451]
[83.56357574 98.77033234]
[90.70278168 85.57822418]
[88.90334320 70.68655396]
[79.56641388 57.91422653]
[85.72103882 44.35067749]
[83.92160034 29.45900154]
[82.12215424 14.56732559]
[71.85068512 1.78339660]
[78.03757477 -13.40391159]
[94.31829834 -15.37119865]
[103.94463348 -2.09468746]
[97.01383209 12.76788521]
[98.81327057 27.65956116]
[100.61271667 42.55123520]
[109.82093811 54.25841141]
[103.79502106 68.88710785]
[105.59445953 83.77878571]
[119.98685455 88.00477600]
[129.55168152 76.44995117]
[139.11651611 64.89512634]
[148.68135071 53.34030533]
[158.24618530 41.78548050]
[167.81101990 30.23065567]
[163.38688660 13.90589046]
[169.50357056 -1.68458617]
[183.56636047 -10.46955872]
[199.92871094 -9.15518951]
[209.31878662 -20.85247612]
[218.70886230 -32.54976273]
[228.09893799 -44.24705124]
[237.48899841 -55.94433594]
[246.87907410 -67.64162445]
[243.65267944 -82.94274902]
[251.06205750 -96.71355438]
[265.60873413 -102.45189667]
[280.42419434 -97.44829559]
[288.51303101 -84.06530762]
[286.05596924 -68.62196350]
[274.21313477 -58.41014099]
[258.57635498 -58.25155258]
[249.18629456 -46.55426407]
[239.79621887 -34.85697937]
[230.40614319 -23.15969086]
[221.01606750 -11.46240330]
[211.62599182 0.23488387]
[216.31654358 12.73544121]
[214.20039368 26.02789688]
[205.72474670 36.62301636]
[193.02015686 41.68621826]
[179.36584473 39.79549026]
[169.80101013 51.35031509]
[160.23617554 62.90513611]
[150.67134094 74.45996094]
[141.10650635 86.01478577]
[131.54167175 97.56961060]
[133.43740845 104.82606506]
[139.12460327 126.59544373]
[153.11886597 131.99551392]
[168.77920532 129.74511719]
[177.86766052 141.54551697]
[191.86190796 146.94558716]
[205.85617065 152.34565735]
[219.85043335 157.74572754]
[233.84469604 163.14579773]
[247.83894348 168.54586792]
[260.84408569 160.28918457]
[276.03970337 161.26216125]
[287.61175537 170.88250732]
[291.25640869 185.29968262]
[305.25067139 190.69975281]
[319.24490356 196.09982300]
[337.36557007 192.82914734]
[347.84536743 206.90455627]
[361.91921997 212.09367371]
[375.99307251 217.28279114]
[392.05429077 213.97082520]
[402.74948120 226.40243530]
[397.07635498 241.78903198]
[380.87094116 244.30221558]
[370.80395508 231.35662842]
[356.73010254 226.16752625]
[342.65628052 220.97840881]
[331.54318237 225.75851440]
[319.77493286 221.54934692]
[313.84484863 210.09407043]
[299.85058594 204.69400024]
[285.85632324 199.29393005]
[273.47192383 207.52586365]
[258.43710327 206.87921143]
[246.52671814 197.39259338]
[242.43887329 182.54011536]
[228.44462585 177.14004517]
[214.45036316 171.73997498]
[200.45610046 166.33990479]
[186.46185303 160.93984985]
[172.46759033 155.53977966]
[157.80821228 158.17642212]
[147.71879578 145.98977661]
[133.72453308 140.58970642]
[90.20211792 112.22134399]
[76.75110626 118.85988617]
[63.30009079 125.49843597]
[54.34929657 138.54426575]
[39.51202393 137.23867798]
[26.06101036 143.87721252]
[12.60999775 150.51576233]
[-0.84101474 157.15429688]
[-10.83321095 168.34161377]
[-15.91640091 182.45405579]
[-20.99959183 196.56651306]
[-26.08278084 210.67895508]
[-31.16597176 224.79141235]
[-36.24916077 238.90385437]
[-41.33235168 253.01629639]
[-34.33626556 259.13360596]
[-29.29737663 266.91442871]
[-26.59078598 275.75592041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 200]
[33 199]
[38 84]
[39 83]
[40 82]
[41 81]
[42 80]
[45 76]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[85 198]
[86 197]
[87 196]
[88 195]
[90 193]
[91 192]
[92 191]
[93 108]
[94 107]
[96 105]
[97 104]
[98 103]
[109 146]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[148 190]
[149 189]
[151 187]
[152 186]
[153 185]
[154 184]
[155 183]
[156 182]
[160 178]
[161 177]
[162 176]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
