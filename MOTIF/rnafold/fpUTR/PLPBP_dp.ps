%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLPBP)
} def

/sequence { (\
GCAAGCUGGGCGGAACCGGAAGAUGGUGUGAGCCACGGGCUGCCGGGGGCCUGGGGCUCGGCGUCGGUCCCCGGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.010249006 ubox
1 27 0.005144957 ubox
1 29 0.005683698 ubox
1 40 0.182766868 ubox
1 43 0.370916344 ubox
1 50 0.007279174 ubox
2 8 0.010686668 ubox
2 10 0.010251837 ubox
2 25 0.007846631 ubox
2 26 0.005278072 ubox
2 28 0.005891018 ubox
2 39 0.186989895 ubox
2 42 0.544881976 ubox
2 49 0.010702544 ubox
3 7 0.008701078 ubox
3 24 0.007725170 ubox
3 27 0.005824642 ubox
3 41 0.501433077 ubox
4 41 0.457436439 ubox
5 11 0.004275337 ubox
5 33 0.003500523 ubox
5 40 0.536251618 ubox
6 10 0.004251426 ubox
6 19 0.050430773 ubox
6 32 0.003509349 ubox
6 38 0.871052660 ubox
6 39 0.465173396 ubox
6 46 0.005548867 ubox
6 47 0.064189553 ubox
6 48 0.005300572 ubox
6 74 0.024291056 ubox
6 75 0.076679643 ubox
6 76 0.006822870 ubox
7 18 0.050635224 ubox
7 31 0.003458214 ubox
7 35 0.026781399 ubox
7 37 0.913394717 ubox
7 38 0.366922526 ubox
7 45 0.005338399 ubox
7 46 0.064299520 ubox
7 47 0.004384579 ubox
7 73 0.024318637 ubox
7 74 0.076792754 ubox
7 75 0.005734614 ubox
8 17 0.050904107 ubox
8 34 0.029866319 ubox
8 36 0.950733311 ubox
8 44 0.004455620 ubox
8 72 0.024107494 ubox
9 16 0.050883445 ubox
9 33 0.026859608 ubox
9 34 0.991600554 ubox
9 43 0.003166411 ubox
9 44 0.066405970 ubox
9 71 0.023795992 ubox
9 72 0.077485507 ubox
10 29 0.003179470 ubox
10 33 0.992675601 ubox
10 43 0.066613397 ubox
10 70 0.020495079 ubox
10 71 0.077560597 ubox
11 28 0.003273401 ubox
11 30 0.013053728 ubox
11 32 0.992488545 ubox
11 42 0.066791246 ubox
12 29 0.028694962 ubox
12 41 0.066698895 ubox
12 69 0.014575718 ubox
12 70 0.078464403 ubox
13 40 0.066533531 ubox
13 68 0.007029290 ubox
13 69 0.079376112 ubox
14 68 0.056225010 ubox
15 27 0.987525319 ubox
15 29 0.021390293 ubox
15 68 0.057515989 ubox
16 26 0.992873068 ubox
16 28 0.014937736 ubox
16 38 0.067500395 ubox
16 67 0.080784353 ubox
16 74 0.006751796 ubox
17 25 0.992843471 ubox
17 28 0.007456025 ubox
17 37 0.067521036 ubox
17 66 0.080773380 ubox
17 73 0.006772292 ubox
18 24 0.928821192 ubox
18 27 0.008773876 ubox
18 36 0.067436142 ubox
18 65 0.065522182 ubox
18 72 0.006741017 ubox
19 64 0.054220906 ubox
19 65 0.006910719 ubox
19 71 0.006715794 ubox
20 64 0.009134594 ubox
22 65 0.046969056 ubox
22 69 0.004772723 ubox
23 64 0.056296131 ubox
23 68 0.004736262 ubox
24 35 0.078418778 ubox
24 60 0.003285652 ubox
24 63 0.060317323 ubox
24 66 0.005064362 ubox
24 67 0.003546649 ubox
25 34 0.082101267 ubox
25 41 0.003531713 ubox
25 62 0.057968188 ubox
25 65 0.007504929 ubox
26 33 0.082105368 ubox
26 36 0.008510167 ubox
26 40 0.004010590 ubox
26 62 0.026691821 ubox
26 64 0.009266972 ubox
27 32 0.080778726 ubox
27 35 0.008535379 ubox
27 37 0.005208784 ubox
27 39 0.004011048 ubox
27 60 0.033483293 ubox
27 61 0.029624663 ubox
27 63 0.037642834 ubox
28 34 0.008514263 ubox
28 36 0.007175027 ubox
28 59 0.014518195 ubox
28 62 0.038820420 ubox
29 35 0.007174605 ubox
29 37 0.003911651 ubox
29 60 0.060693993 ubox
29 61 0.027442284 ubox
30 34 0.007062456 ubox
30 36 0.003900213 ubox
30 59 0.080032743 ubox
31 41 0.015078396 ubox
31 58 0.081297565 ubox
32 40 0.016340273 ubox
32 57 0.081504350 ubox
33 39 0.016422168 ubox
33 55 0.003738433 ubox
33 56 0.081424962 ubox
34 38 0.016304686 ubox
34 54 0.005192854 ubox
34 55 0.080087455 ubox
36 53 0.079727589 ubox
37 52 0.081408418 ubox
38 51 0.081507924 ubox
39 50 0.081507518 ubox
40 49 0.081451659 ubox
40 75 0.010652311 ubox
40 76 0.094299129 ubox
40 77 0.645396721 ubox
41 47 0.004140299 ubox
41 48 0.080437670 ubox
41 75 0.086030262 ubox
41 76 0.694591877 ubox
43 74 0.920253653 ubox
43 75 0.046274884 ubox
43 76 0.010482416 ubox
44 73 0.991817285 ubox
44 74 0.043983763 ubox
44 75 0.011066946 ubox
44 76 0.004762198 ubox
45 72 0.993879453 ubox
46 71 0.993893906 ubox
46 72 0.031033473 ubox
47 70 0.993884760 ubox
47 71 0.031338754 ubox
48 69 0.993849706 ubox
48 70 0.031625669 ubox
49 68 0.993325249 ubox
49 69 0.031873169 ubox
50 67 0.980606890 ubox
50 75 0.066418850 ubox
50 76 0.005864328 ubox
51 66 0.966821135 ubox
51 67 0.164884116 ubox
51 74 0.067088174 ubox
51 75 0.005057981 ubox
52 60 0.005747553 ubox
52 63 0.020867264 ubox
52 66 0.230118939 ubox
52 73 0.067111416 ubox
52 74 0.003937847 ubox
53 59 0.005842693 ubox
53 62 0.025679208 ubox
53 65 0.984367007 ubox
53 71 0.003768641 ubox
53 72 0.067198352 ubox
54 58 0.003790301 ubox
54 64 0.977457689 ubox
54 65 0.031803962 ubox
54 70 0.004599547 ubox
54 71 0.067149689 ubox
55 64 0.030083028 ubox
55 65 0.082650673 ubox
55 69 0.005298376 ubox
55 70 0.067098286 ubox
56 62 0.989948088 ubox
56 64 0.083509514 ubox
56 68 0.005914243 ubox
56 69 0.067002210 ubox
57 61 0.982790899 ubox
57 63 0.083779429 ubox
57 67 0.024226410 ubox
58 66 0.007282216 ubox
58 67 0.059173743 ubox
59 66 0.066747895 ubox
60 65 0.065972846 ubox
60 69 0.003907212 ubox
61 68 0.005575419 ubox
62 67 0.005655527 ubox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
40 77 0.9500000 lbox
41 76 0.9500000 lbox
43 74 0.9500000 lbox
44 73 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
47 70 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
showpage
end
%%EOF
