%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGGACCGGAAGUGACCCUCUUUAUUUCCCUUCCUCACGUGGUGCAGGCAGGAAGUGACGCGCCUGGCCCGGGAGCUGCGGUCGCAGAGGCCGACGGAGCCGGAGUCGCGGACGCCGCGGGGUCUCCGGGACAGGAACCCUCAGUGCUGCGUCUAGAUUCUGCAGGGGAGGUUUGCUGGGACCUUGGCUCCACGCAGCCAGCGAA\
) } def
/len { sequence length } bind def

/coor [
[100.31095123 129.16897583]
[91.06016541 140.97671509]
[81.80937958 152.78446960]
[72.82846069 164.79876709]
[64.12201691 177.01341248]
[55.41557312 189.22807312]
[46.70912933 201.44273376]
[49.11867905 216.83207703]
[40.11510468 229.09544373]
[25.42886925 231.29774475]
[16.72242546 243.51239014]
[8.01597977 255.72705078]
[-0.69046539 267.94171143]
[-9.39691067 280.15637207]
[-18.10335541 292.37103271]
[-26.80980110 304.58566284]
[-35.51624680 316.80032349]
[-32.65570068 332.34359741]
[-41.69240189 345.30944824]
[-57.26503372 348.00549316]
[-70.13462830 338.83221436]
[-72.66588593 323.23196411]
[-63.35705566 310.46005249]
[-47.73089981 308.09387207]
[-39.02445602 295.87924194]
[-30.31801033 283.66458130]
[-21.61156654 271.44992065]
[-12.90512085 259.23526001]
[-4.19867611 247.02061462]
[4.50776911 234.80595398]
[13.21421432 222.59129333]
[10.50535774 207.99000549]
[19.16092873 195.47857666]
[34.49447250 192.73628235]
[43.20091629 180.52162170]
[51.90736389 168.30697632]
[60.61380768 156.09231567]
[60.39326477 152.57106018]
[61.86879349 148.76811218]
[65.15413666 145.48248291]
[70.00163269 143.53369141]
[79.25241089 131.72593689]
[88.50319672 119.91819000]
[82.45047760 106.19358826]
[67.49323273 105.06188202]
[52.53598404 103.93016815]
[37.57873535 102.79846191]
[24.52330208 114.44044495]
[7.42388678 113.06655884]
[-3.17910814 100.01360321]
[-18.15174103 99.10792542]
[-31.06529617 108.62735748]
[-46.52136612 104.32741547]
[-52.66337585 89.50664520]
[-44.77970123 75.53427124]
[-28.91802406 73.12870026]
[-17.24606323 84.13529205]
[-2.27343059 85.04096985]
[6.08208847 75.23026276]
[18.75191498 71.97547913]
[31.16540146 76.68215179]
[38.71044540 87.84121704]
[53.66769409 88.97292328]
[68.62493896 90.10462952]
[83.58218384 91.23634338]
[97.96876526 86.99059296]
[109.91488647 77.91920471]
[121.86100769 68.84780884]
[133.80712891 59.77641678]
[145.75325012 50.70502472]
[152.48838806 33.56793976]
[169.97001648 32.04329300]
[181.77775574 22.79251099]
[193.51531982 13.45282173]
[205.18200684 4.02475834]
[216.84869385 -5.40330458]
[228.51538086 -14.83136749]
[240.18206787 -24.25943184]
[251.84875488 -33.68749619]
[263.51544189 -43.11555862]
[269.38574219 -57.80739594]
[284.14794922 -59.78905106]
[295.81463623 -69.21711731]
[307.48132324 -78.64517975]
[319.14801025 -88.07324219]
[325.01831055 -102.76508331]
[339.78051758 -104.74673462]
[351.44720459 -114.17479706]
[363.11389160 -123.60285950]
[374.70904541 -133.11875916]
[386.23199463 -142.72195435]
[397.75497437 -152.32514954]
[409.27792358 -161.92834473]
[420.80090332 -171.53153992]
[416.34942627 -186.03877258]
[417.78744507 -201.10447693]
[424.86483765 -214.43579102]
[436.47558594 -224.01588440]
[450.83059692 -228.40887451]
[465.73327637 -226.97514343]
[478.91567993 -219.96415710]
[490.43862915 -229.56735229]
[495.02896118 -237.46739197]
[502.20892334 -239.22697449]
[513.87561035 -248.65504456]
[525.54229736 -258.08309937]
[537.20898438 -267.51116943]
[548.87567139 -276.93923950]
[560.54235840 -286.36730957]
[562.67767334 -299.08905029]
[572.59094238 -306.70141602]
[584.63458252 -305.55538940]
[596.44232178 -314.80615234]
[608.25006104 -324.05694580]
[620.05780029 -333.30773926]
[631.86553955 -342.55850220]
[643.67333984 -351.80929565]
[649.76483154 -366.41079712]
[664.55529785 -368.16928101]
[676.36303711 -377.42004395]
[687.88598633 -387.02325439]
[699.11364746 -396.97009277]
[710.34130859 -406.91693115]
[721.56896973 -416.86376953]
[732.79663086 -426.81060791]
[737.14630127 -434.84567261]
[744.26983643 -436.82131958]
[755.64642334 -446.59744263]
[767.02301025 -456.37359619]
[767.96533203 -472.14974976]
[779.84240723 -482.57623291]
[795.60772705 -481.46716309]
[805.90802002 -469.48056030]
[804.63238525 -453.72781372]
[792.53753662 -443.55480957]
[776.79913330 -444.99697876]
[765.42254639 -435.22082520]
[754.04595947 -425.44470215]
[742.74346924 -415.58294678]
[731.51580811 -405.63610840]
[720.28814697 -395.68927002]
[709.06048584 -385.74243164]
[697.83282471 -375.79559326]
[697.53021240 -373.00650024]
[696.10327148 -370.16937256]
[693.52819824 -367.71359253]
[689.93719482 -366.06906128]
[685.61383057 -365.61230469]
[673.80609131 -356.36151123]
[668.55908203 -342.42169189]
[652.92407227 -340.00152588]
[641.11633301 -330.75076294]
[629.30859375 -321.49996948]
[617.50085449 -312.24917603]
[605.69311523 -302.99841309]
[593.88531494 -293.74761963]
[588.22137451 -277.13885498]
[569.97045898 -274.70059204]
[558.30377197 -265.27255249]
[546.63708496 -255.84448242]
[534.97033691 -246.41641235]
[523.30364990 -236.98835754]
[511.63699341 -227.56028748]
[500.04183960 -218.04438782]
[488.51885986 -208.44119263]
[493.03881836 -194.21096802]
[491.76278687 -179.29396057]
[484.85418701 -165.96594238]
[473.33813477 -156.27223206]
[458.94943237 -151.71382141]
[443.87130737 -153.01501465]
[430.40408325 -160.00857544]
[418.88113403 -150.40538025]
[407.35815430 -140.80218506]
[395.83520508 -131.19898987]
[384.31222534 -121.59580231]
[381.18569946 -114.89707947]
[372.54196167 -111.93617249]
[360.87524414 -102.50811005]
[349.20855713 -93.08004761]
[344.17276001 -79.06256866]
[328.57608032 -76.40655518]
[316.90939331 -66.97849274]
[305.24270630 -57.55042648]
[293.57601929 -48.12236404]
[288.54019165 -34.10488510]
[272.94351196 -31.44886971]
[261.27682495 -22.02080536]
[249.61013794 -12.59274292]
[237.94345093 -3.16467929]
[226.27676392 6.26338387]
[214.61007690 15.69144726]
[202.94337463 25.11951065]
[199.71604919 31.77024269]
[191.02854919 34.60026169]
[179.22079468 43.85104752]
[177.45130920 55.81896210]
[167.68772888 63.62242126]
[154.82464600 62.65114594]
[142.87852478 71.72254181]
[130.93240356 80.79393005]
[118.98628235 89.86532593]
[107.04016113 98.93672180]
[110.69672394 101.45407104]
[113.21192169 105.90187836]
[113.81827545 111.76042175]
[111.97035980 118.24393463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 37]
[5 36]
[6 35]
[7 34]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[44 65]
[45 64]
[46 63]
[47 62]
[50 58]
[51 57]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[72 196]
[73 195]
[74 193]
[75 192]
[76 191]
[77 190]
[78 189]
[79 188]
[80 187]
[82 185]
[83 184]
[84 183]
[85 182]
[87 180]
[88 179]
[89 178]
[90 176]
[91 175]
[92 174]
[93 173]
[94 172]
[101 165]
[102 164]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[112 156]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[119 149]
[120 148]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[127 138]
[128 137]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
