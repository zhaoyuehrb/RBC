%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUCUACCCCGCAGUCCCAGGGUAUCGCAAGCCGUCCCUCACACCCCACCUCCAGCAACGCCCUCUCGCCCUGUCUCCCCCACCUUCACUGUGAGCUGCAGCCCCC\
) } def
/len { sequence length } bind def

/coor [
[49.55928802 155.89337158]
[37.87042236 165.29391479]
[38.91041183 177.31855774]
[33.99997330 188.21159363]
[24.49531555 195.25140381]
[12.88368225 196.74249268]
[2.13301349 192.42257690]
[-10.07802200 201.13409424]
[-22.28905678 209.84562683]
[-34.50009155 218.55714417]
[-46.71112823 227.26866150]
[-45.15797043 242.54882812]
[-51.46761322 256.55181885]
[-63.94279099 265.51092529]
[-79.22774506 267.01617432]
[-93.21089935 260.66268921]
[-102.13085175 248.15948486]
[-103.58818817 232.86988831]
[-97.19088745 218.90670776]
[-84.65979004 210.02598572]
[-69.36569977 208.61659241]
[-55.42264938 215.05763245]
[-43.21161270 206.34611511]
[-31.00057983 197.63458252]
[-18.78954315 188.92306519]
[-6.57850838 180.21154785]
[-4.76460409 162.10801697]
[9.86096478 150.76390076]
[28.46986771 153.60505676]
[40.15873337 144.20449829]
[40.66027451 124.86274719]
[55.28812408 111.74655914]
[75.16550446 113.39881897]
[85.99888611 103.02394867]
[90.09273529 89.65488434]
[103.62624359 86.14266205]
[114.45963287 75.76779938]
[114.96495819 60.19916534]
[126.09934235 49.83190155]
[140.93853760 50.40959930]
[151.77192688 40.03473282]
[162.60530090 29.65987015]
[173.43869019 19.28500557]
[184.27207947 8.91014194]
[195.10545349 -1.46472275]
[186.54408264 -15.77615833]
[181.54586792 -31.67819405]
[180.38116455 -48.29875565]
[183.11016846 -64.72724152]
[189.57986450 -80.06439972]
[199.43260193 -93.47157288]
[212.12582397 -104.21653748]
[226.96195984 -111.71349335]
[243.12678528 -115.55501556]
[259.73406982 -115.53418732]
[275.87420654 -111.65573883]
[290.66397095 -104.13558197]
[300.23199463 -115.68776703]
[309.80001831 -127.23995209]
[308.51107788 -142.76336670]
[318.37899780 -154.34262085]
[333.18612671 -155.47575378]
[342.75415039 -167.02793884]
[341.02655029 -182.73751831]
[350.97836304 -195.01502991]
[366.70532227 -196.57643127]
[378.87692261 -186.49539185]
[380.27197266 -170.75279236]
[370.06280518 -158.68844604]
[354.30633545 -157.45993042]
[344.73831177 -145.90774536]
[346.38281250 -131.14863586]
[336.84405518 -119.29677582]
[321.35220337 -117.67193604]
[311.78417969 -106.11975098]
[302.21615601 -94.56756592]
[310.68487549 -84.08889771]
[317.02035522 -72.19310760]
[320.99218750 -59.30903625]
[322.45523071 -45.90153122]
[321.35482788 -32.45468521]
[317.72900391 -19.45435524]
[311.70697021 -7.37058926]
[303.50466919 3.35934591]
[293.41696167 12.34680176]
[281.80703735 19.26581955]
[269.09335327 23.86495209]
[255.73448181 25.97640800]
[242.21272278 25.52216148]
[229.01652527 22.51684189]
[216.62292480 17.06727219]
[205.48031616 9.36865997]
[194.64694214 19.74352455]
[183.81355286 30.11838913]
[172.98017883 40.49325180]
[162.14678955 50.86811829]
[151.31340027 61.24298096]
[151.24922180 76.09328461]
[140.41041565 86.76919556]
[124.83449554 86.60118103]
[114.00111389 96.97605133]
[109.90726471 110.34511566]
[96.37375641 113.85733795]
[85.54036713 124.23220062]
[88.02480316 134.88018799]
[85.79923248 145.50192261]
[79.34703064 154.12623596]
[69.92932892 159.18244934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[33 104]
[34 103]
[36 101]
[37 100]
[40 97]
[41 96]
[42 95]
[43 94]
[44 93]
[45 92]
[57 76]
[58 75]
[59 74]
[62 71]
[63 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
