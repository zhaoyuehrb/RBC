%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUCUGCCAAGUUCUACCUGUAACUGGCUUCAUUUUCAAGUCAGACGUUUGGCUGCUGCUCUGUCCCCUGCAACAAGGAGCCAUGCCAGCUGGACACACACUUCUUCCAGGGCCUCUGGCAGCCAGGACAGAGUUGAGACCACAGCUGUUGAGACCCUGAGCCCUGAGUCUGUAUUGCUCAAGAAGGGCCUUCCCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[117.75936890 160.00140381]
[107.77281952 162.08984375]
[97.57962799 162.52764893]
[87.45077515 161.30319214]
[77.65554047 158.44903564]
[68.45432281 154.04104614]
[60.09172440 148.19641113]
[52.79006195 141.07051086]
[40.37472916 149.48831177]
[27.95939255 157.90611267]
[15.54405785 166.32392883]
[3.12872314 174.74172974]
[-9.28661156 183.15953064]
[5.45206547 185.94726562]
[15.05133247 197.47349548]
[15.12645245 212.47331238]
[5.64311361 224.09510803]
[-9.06690216 227.03031921]
[-22.28437996 219.93818665]
[-27.97186089 206.05824280]
[-23.53114891 191.73019409]
[-36.78382874 198.75631714]
[-50.03651047 205.78244019]
[-53.87045670 211.18145752]
[-59.07524490 213.48338318]
[-63.80982590 212.81372070]
[-77.27359772 219.42636108]
[-90.73736572 226.03900146]
[-104.20113373 232.65162659]
[-117.66490173 239.26426697]
[-131.12866211 245.87690735]
[-144.59243774 252.48953247]
[-148.15782166 267.71524048]
[-160.70687866 277.04559326]
[-176.31431580 276.07507324]
[-187.61077881 265.26193237]
[-189.26243591 249.71182251]
[-180.48941040 236.76701355]
[-165.43406677 232.53964233]
[-151.20507812 239.02577209]
[-137.74130249 232.41313171]
[-124.27753448 225.80049133]
[-110.81376648 219.18786621]
[-97.34999847 212.57522583]
[-83.88623047 205.96260071]
[-70.42246246 199.34996033]
[-57.06263733 192.52975464]
[-43.80995560 185.50363159]
[-30.55727577 178.47750854]
[-17.70441818 170.74420166]
[-5.28908253 162.32640076]
[7.12625217 153.90858459]
[19.54158783 145.49078369]
[31.95692253 137.07298279]
[44.37225723 128.65516663]
[37.81810760 106.99834442]
[39.39447784 84.42645264]
[48.89525223 63.89086914]
[65.07817078 48.07669067]
[85.82724762 39.05168152]
[84.20545959 24.13961029]
[82.58367920 9.22754192]
[80.96189117 -5.68452740]
[79.34010315 -20.59659767]
[77.71832275 -35.50866699]
[76.09653473 -50.42073441]
[74.47474670 -65.33280182]
[72.85296631 -80.24487305]
[66.03276825 -93.60469818]
[54.90633011 -103.66463470]
[43.77989197 -113.72457886]
[28.01017380 -112.67979431]
[16.17573738 -123.15460968]
[15.29774189 -138.93449402]
[25.89708710 -150.65751648]
[41.68537140 -151.36863708]
[53.29568100 -140.64593506]
[53.83982849 -124.85101318]
[64.96627045 -114.79107666]
[76.09270477 -104.73114014]
[82.13694000 -114.37966156]
[91.37823486 -119.09342957]
[91.61036682 -134.09162903]
[91.84249115 -149.08984375]
[92.07462311 -164.08804321]
[81.47859955 -181.23208618]
[92.10057831 -197.38502502]
[91.86844635 -212.38323975]
[91.63632202 -227.38143921]
[88.57088470 -233.25097656]
[88.88716888 -238.93330383]
[91.63632202 -242.84568787]
[91.86844635 -257.84390259]
[92.10057831 -272.84210205]
[92.33270264 -287.84030151]
[92.56483459 -302.83850098]
[79.09378052 -310.10412598]
[70.55187988 -322.80432129]
[68.90199280 -338.02062988]
[74.52326202 -352.25650024]
[86.12395477 -362.24063110]
[101.03831482 -365.67871094]
[115.83913422 -361.78070068]
[127.12528992 -351.44238281]
[132.30331421 -337.03936768]
[130.18331909 -321.88137817]
[121.25248718 -309.45162964]
[107.56304169 -302.60638428]
[107.33090973 -287.60818481]
[107.09878540 -272.60998535]
[106.86665344 -257.61175537]
[106.63452911 -242.61357117]
[106.63452911 -227.61357117]
[106.86665344 -212.61535645]
[107.09878540 -197.61715698]
[115.05058289 -191.18739319]
[118.21373749 -181.23208618]
[115.31232452 -170.96893311]
[107.07282257 -163.85591125]
[106.84069824 -148.85771179]
[106.60856628 -133.85951233]
[106.37644196 -118.86130524]
[114.52989197 -112.89366913]
[118.61515808 -103.27106476]
[117.15189362 -92.56680298]
[110.19869232 -83.84561157]
[99.43486023 -79.78656006]
[87.76502991 -81.86666107]
[89.38681793 -66.95458984]
[91.00860596 -52.04252243]
[92.63038635 -37.13045120]
[94.25217438 -22.21838188]
[95.87396240 -7.30631304]
[97.49574280 7.60575676]
[99.11753082 22.51782608]
[100.73931885 37.42989349]
[112.66570282 38.72076416]
[124.12659454 42.26377487]
[134.70079041 47.92870712]
[143.99966431 55.50736618]
[151.68145752 64.72122192]
[157.46383667 75.23164368]
[161.13432312 86.65235901]
[162.55798340 98.56362152]
[161.68251038 110.52767181]
[158.54008484 122.10481262]
[153.24618530 132.86955261]
[164.97366333 142.22190857]
[176.70114136 151.57424927]
[188.42860413 160.92660522]
[205.76997375 158.64857483]
[219.13246155 169.40295410]
[220.55700684 186.15742493]
[232.42779541 195.32716370]
[244.29859924 204.49690247]
[259.94979858 206.80998230]
[265.29205322 220.71356201]
[277.16284180 229.88330078]
[289.03366089 239.05303955]
[300.90444946 248.22277832]
[311.18847656 243.13330078]
[322.57794189 242.25611877]
[333.42211914 245.67991638]
[342.16372681 252.87280273]
[347.56250000 262.76461792]
[348.87100220 273.90588379]
[345.93798828 284.68029785]
[357.37042236 294.39108276]
[368.80285645 304.10189819]
[380.23529053 313.81268311]
[391.66772461 323.52346802]
[407.05242920 320.72259521]
[420.61248779 328.51092529]
[425.94528198 343.21112061]
[420.53283691 357.88214111]
[406.93069458 365.59683228]
[391.56143188 362.71249390]
[381.68188477 350.59106445]
[381.95693970 334.95590210]
[370.52450562 325.24511719]
[359.09207153 315.53433228]
[347.65963745 305.82351685]
[336.22720337 296.11273193]
[318.35952759 301.57168579]
[300.66815186 295.11428833]
[290.35522461 279.17691040]
[291.73471069 260.09359741]
[279.86392212 250.92384338]
[267.99310303 241.75410461]
[256.12231445 232.58435059]
[241.32019043 230.92716980]
[235.12886047 216.36770630]
[223.25805664 207.19796753]
[211.38725281 198.02821350]
[198.95832825 201.44102478]
[186.65008545 197.00395203]
[179.03428650 186.12686157]
[179.07626343 172.65406799]
[167.34878540 163.30172729]
[155.62130737 153.94937134]
[143.89384460 144.59703064]
[136.06318665 151.13717651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[21 49]
[22 48]
[23 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 80]
[70 79]
[71 78]
[82 122]
[83 121]
[84 120]
[85 119]
[87 115]
[88 114]
[89 113]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[147 201]
[148 200]
[149 199]
[150 198]
[153 194]
[154 193]
[155 192]
[157 190]
[158 189]
[159 188]
[160 187]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
