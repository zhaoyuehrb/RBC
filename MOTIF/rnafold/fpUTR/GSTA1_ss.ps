%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCCUCAUGUCUUAGAAUCCAGUAGGUGGCCCCUUGGCCAUGAAAUGUGUGGGAGUGGCUUUUCCCUAACUUGACUCUUCUUUCAGUGGGAGAGAACUAUUGAGAGGAACAAAGAGCUUAUAAAUACAUUAGGACCUGGAAUUCAGUUGUCGAGCCAGGACGGUGACAGCGUUUAACAAAGCUUAGAGAAACCUCCAGGAGACUGCUAUC\
) } def
/len { sequence length } bind def

/coor [
[84.39443970 317.31735229]
[69.34095764 318.69000244]
[54.55200958 315.56295776]
[41.34262085 308.21423340]
[30.88735390 297.29733276]
[24.11589050 283.78295898]
[21.63034248 268.87277222]
[23.65172195 253.89260864]
[30.00028992 240.17446899]
[40.11153412 228.93818665]
[53.08637619 221.18287659]
[67.77109528 217.59811401]
[68.65140533 202.62397766]
[69.53172302 187.64982605]
[70.41203308 172.67568970]
[71.29235077 157.70153809]
[57.56429672 112.54279327]
[79.30034637 87.75027466]
[69.41705322 76.46662903]
[59.53376770 65.18298340]
[49.65048218 53.89933777]
[39.68463898 42.68854141]
[29.63677406 31.55119896]
[19.58891106 20.41385460]
[9.54104710 9.27651119]
[-3.69881749 16.84020424]
[-19.44835472 19.46520233]
[-35.83980179 16.34340477]
[-50.75920868 7.37821674]
[-63.92918777 14.55816555]
[-77.09916687 21.73811340]
[-90.26914215 28.91806221]
[-103.43912506 36.09801102]
[-116.60910034 43.27795792]
[-124.68718719 57.54948807]
[-141.08581543 57.41884232]
[-148.93548584 43.02041245]
[-140.16113281 29.16607285]
[-123.78904724 30.10797882]
[-110.61907196 22.92803192]
[-97.44908905 15.74808311]
[-84.27911377 8.56813431]
[-71.10913849 1.38818634]
[-57.93915558 -5.79176188]
[-58.92720032 -13.22639561]
[-72.45807648 -6.75219297]
[-82.79666138 -17.62020302]
[-75.65534973 -30.81117058]
[-60.90328217 -28.09566116]
[-61.89132690 -35.53029633]
[-76.47943878 -39.02126694]
[-89.84236908 -31.01689911]
[-104.58705902 -34.76505661]
[-112.13565063 -47.55389023]
[-126.72377014 -51.04486465]
[-141.31188965 -54.53583908]
[-155.89999390 -58.02681351]
[-170.48811340 -61.51778412]
[-183.82461548 -53.03761292]
[-199.23295593 -56.55306244]
[-207.57165527 -69.97847748]
[-203.89349365 -85.34879303]
[-190.38067627 -93.54508209]
[-175.05010986 -89.70462799]
[-166.99714661 -76.10590363]
[-152.40902710 -72.61492920]
[-137.82090759 -69.12395477]
[-123.23279572 -65.63298035]
[-108.64467621 -62.14200592]
[-96.12453461 -70.12834167]
[-81.28038025 -66.79581451]
[-72.98846436 -53.60938263]
[-58.40035248 -50.11841202]
[-53.37921906 -56.70255661]
[-47.44223785 -62.28523636]
[-40.77905273 -66.74639893]
[-33.59360886 -70.00057983]
[-26.09798813 -71.99832153]
[-29.80273628 -86.53362274]
[-33.50748444 -101.06891632]
[-37.21223450 -115.60420990]
[-41.44782257 -129.99378967]
[-46.20855331 -144.21824646]
[-50.96928406 -158.44271851]
[-55.73001480 -172.66719055]
[-60.49074554 -186.89164734]
[-65.25147247 -201.11611938]
[-70.01220703 -215.34059143]
[-74.77293396 -229.56504822]
[-79.53366089 -243.78952026]
[-84.29439545 -258.01397705]
[-89.05512238 -272.23846436]
[-103.67039490 -277.79971313]
[-111.24644470 -291.47955322]
[-108.20608521 -306.81872559]
[-95.98489380 -316.57455444]
[-80.35332489 -316.14065552]
[-68.69214630 -305.72186279]
[-66.50740051 -290.23767090]
[-74.83065796 -276.99917603]
[-70.06993103 -262.77471924]
[-65.30919647 -248.55024719]
[-60.54846573 -234.32577515]
[-55.78773880 -220.10131836]
[-51.02700806 -205.87684631]
[-46.26627731 -191.65237427]
[-41.50554657 -177.42791748]
[-36.74481583 -163.20344543]
[-31.98408699 -148.97898865]
[-27.22335815 -134.75451660]
[-18.30794334 -146.81748962]
[-3.32435179 -147.51889038]
[6.67897272 -136.34152222]
[4.32588100 -121.52724457]
[-8.64852810 -113.99964905]
[-22.67693710 -119.30895996]
[-18.97218895 -104.77366638]
[-15.26743984 -90.23836517]
[-11.56269169 -75.70307159]
[3.18546224 -72.96592712]
[11.85911655 -85.20389557]
[20.53277016 -97.44185638]
[29.20642471 -109.67981720]
[23.34556198 -123.95055389]
[26.15290260 -139.12033081]
[36.73263550 -150.34855652]
[51.70880890 -154.05230713]
[66.30257416 -149.04975891]
[75.85711670 -136.93719482]
[77.32362366 -121.57969666]
[70.23412323 -107.87777710]
[56.85086441 -100.20367432]
[41.44438934 -101.00616455]
[32.77073288 -88.76820374]
[24.09707832 -76.53023529]
[15.42342472 -64.29227448]
[29.03633690 -44.37203979]
[30.68619537 -21.05681801]
[20.67839050 -0.77135271]
[30.72625542 10.36599159]
[40.77412033 21.50333595]
[50.82198334 32.64067841]
[57.63494492 35.50073624]
[60.93412781 44.01605225]
[70.81741333 55.29969788]
[80.70069885 66.58334351]
[90.58399200 77.86698914]
[117.72705841 59.45543289]
[160.66810608 78.25197601]
[175.66650391 78.47217560]
[190.66488647 78.69236755]
[205.66326904 78.91256714]
[220.66165161 79.13276672]
[235.66003418 79.35295868]
[241.60673523 76.47204590]
[247.26652527 76.95291901]
[251.09376526 79.80623627]
[266.07922363 80.46663666]
[281.06466675 81.12704468]
[293.82064819 71.39743805]
[309.34503174 75.44373322]
[315.72888184 90.16195679]
[308.07504272 104.26154327]
[292.25488281 106.92649841]
[280.40426636 96.11249542]
[265.41882324 95.45209503]
[250.43336487 94.79169464]
[235.43983459 94.35134888]
[220.44145203 94.13114929]
[205.44306946 93.91094971]
[190.44468689 93.69075775]
[175.44630432 93.47055817]
[160.44792175 93.25035858]
[156.21232605 107.63993073]
[168.93823242 115.58042145]
[181.66413879 123.52090454]
[194.39004517 131.46139526]
[210.78916931 131.48194885]
[218.73532104 145.82736206]
[210.05418396 159.74029541]
[193.67614746 158.90830994]
[186.44955444 144.18730164]
[173.72364807 136.24681091]
[160.99774170 128.30632019]
[148.27183533 120.36583710]
[143.08659363 125.78462219]
[147.28726196 140.18443298]
[132.71611023 136.62219238]
[127.53086090 142.04098511]
[136.02392578 154.40495300]
[144.51699829 166.76892090]
[159.54190063 173.34039307]
[161.09414673 189.66592407]
[147.57690430 198.95118713]
[132.89556885 191.64431763]
[132.15303040 175.26199341]
[123.65996552 162.89802551]
[115.16689301 150.53405762]
[107.94179535 152.54600525]
[104.20152283 167.07220459]
[93.49159241 156.56990051]
[86.26649475 158.58184814]
[85.38618469 173.55599976]
[84.50586700 188.53013611]
[83.62555695 203.50428772]
[82.74523926 218.47843933]
[96.90876770 223.75914001]
[108.88551331 232.98133850]
[117.61051941 245.32499695]
[122.30796814 259.69250488]
[122.56015015 274.80633545]
[118.34465027 289.32257080]
[110.03631592 301.95043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[18 147]
[19 146]
[20 145]
[21 144]
[22 142]
[23 141]
[24 140]
[25 139]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[50 73]
[51 72]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[78 119]
[79 118]
[80 117]
[81 116]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[120 136]
[121 135]
[122 134]
[123 133]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[157 167]
[158 166]
[159 165]
[174 185]
[175 184]
[176 183]
[177 182]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
