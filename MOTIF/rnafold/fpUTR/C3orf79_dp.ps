%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C3orf79)
} def

/sequence { (\
AAAGGACUGUGGAACAUCUCAGAGCCUCUCAGUAGGAGCAGAAAAGUUACUGGGGAGUACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 19 0.006283495 ubox
3 27 0.821006518 ubox
4 18 0.006542124 ubox
4 19 0.024719410 ubox
4 20 0.010557355 ubox
4 26 0.969636450 ubox
4 27 0.052310024 ubox
5 17 0.005521713 ubox
5 18 0.027578798 ubox
5 19 0.005776396 ubox
5 20 0.006948136 ubox
5 25 0.971616473 ubox
5 26 0.061731588 ubox
6 17 0.027376983 ubox
6 19 0.006801426 ubox
6 58 0.003690408 ubox
7 22 0.150010179 ubox
7 24 0.971098975 ubox
7 57 0.003671024 ubox
7 62 0.167523370 ubox
8 16 0.029238044 ubox
8 21 0.150773002 ubox
8 23 0.967788804 ubox
8 56 0.003493765 ubox
8 61 0.170221930 ubox
9 15 0.029777512 ubox
9 17 0.007663744 ubox
9 20 0.150830190 ubox
9 60 0.170696346 ubox
10 14 0.026831497 ubox
10 16 0.010185919 ubox
10 21 0.969955525 ubox
10 59 0.169587832 ubox
10 61 0.021912562 ubox
11 15 0.010208559 ubox
11 18 0.101344011 ubox
11 19 0.131971269 ubox
11 20 0.966616342 ubox
11 26 0.004752149 ubox
11 58 0.108099650 ubox
11 60 0.024371907 ubox
12 17 0.060065862 ubox
12 18 0.515959140 ubox
12 19 0.705108621 ubox
12 20 0.060749331 ubox
12 25 0.004848370 ubox
13 17 0.450874197 ubox
13 19 0.078938979 ubox
14 58 0.131822628 ubox
15 57 0.151365699 ubox
17 23 0.005404317 ubox
17 54 0.008379667 ubox
17 55 0.163775636 ubox
17 56 0.013786979 ubox
18 22 0.005726908 ubox
18 53 0.008495070 ubox
18 54 0.169492393 ubox
18 55 0.012402667 ubox
18 57 0.008881166 ubox
19 53 0.169542459 ubox
19 54 0.010356099 ubox
19 56 0.008899585 ubox
20 52 0.169975820 ubox
20 53 0.008067943 ubox
20 55 0.008638248 ubox
21 51 0.170056640 ubox
22 50 0.169691181 ubox
23 48 0.166349451 ubox
24 39 0.011239533 ubox
24 47 0.168499651 ubox
24 58 0.090731074 ubox
25 36 0.011072553 ubox
25 38 0.008897403 ubox
25 46 0.168214059 ubox
25 55 0.017093204 ubox
25 57 0.097523284 ubox
26 35 0.011221056 ubox
26 38 0.074876658 ubox
26 41 0.129544204 ubox
26 46 0.014238324 ubox
26 54 0.016845247 ubox
26 55 0.055584279 ubox
26 57 0.102128533 ubox
27 34 0.010498320 ubox
27 36 0.005369163 ubox
27 37 0.075325649 ubox
27 40 0.129233580 ubox
27 42 0.044629107 ubox
27 45 0.016715660 ubox
27 53 0.011142498 ubox
27 54 0.042616353 ubox
27 55 0.434073501 ubox
27 56 0.132256557 ubox
27 61 0.003505960 ubox
28 35 0.007163429 ubox
28 36 0.075272400 ubox
28 38 0.132217075 ubox
28 41 0.044609909 ubox
28 52 0.006396365 ubox
28 53 0.053668385 ubox
28 54 0.961911646 ubox
28 55 0.138229491 ubox
28 57 0.124397985 ubox
29 34 0.007075818 ubox
29 35 0.068176761 ubox
29 36 0.006039203 ubox
29 37 0.132456696 ubox
29 40 0.041002861 ubox
29 42 0.058301796 ubox
29 52 0.008504596 ubox
29 53 0.966598891 ubox
29 54 0.116381740 ubox
29 55 0.006154949 ubox
29 56 0.125763543 ubox
30 35 0.027902317 ubox
30 36 0.132311310 ubox
30 41 0.059235038 ubox
30 52 0.972636119 ubox
30 53 0.089952564 ubox
30 54 0.009206487 ubox
30 55 0.125508541 ubox
31 51 0.975300240 ubox
32 39 0.069810162 ubox
32 50 0.975708672 ubox
32 60 0.014639834 ubox
33 38 0.067819806 ubox
33 49 0.974502527 ubox
33 52 0.126199252 ubox
33 59 0.014647580 ubox
34 48 0.935469781 ubox
34 51 0.132482736 ubox
34 58 0.014519441 ubox
35 47 0.786636438 ubox
35 48 0.029674417 ubox
35 50 0.132864886 ubox
35 51 0.020325628 ubox
36 47 0.027706322 ubox
36 48 0.039036885 ubox
36 50 0.020870024 ubox
37 47 0.050667817 ubox
37 48 0.262695738 ubox
38 47 0.528195576 ubox
39 46 0.549578415 ubox
39 52 0.016676103 ubox
40 48 0.004438533 ubox
40 51 0.016698399 ubox
41 47 0.007601865 ubox
41 48 0.007184711 ubox
41 50 0.016685970 ubox
42 47 0.008888211 ubox
42 48 0.005574173 ubox
43 47 0.005485217 ubox
46 60 0.011800273 ubox
47 59 0.008429115 ubox
48 59 0.013513760 ubox
49 58 0.016442097 ubox
50 57 0.016601210 ubox
50 62 0.007629339 ubox
51 56 0.016436330 ubox
51 61 0.007784008 ubox
52 60 0.007858361 ubox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
showpage
end
%%EOF
