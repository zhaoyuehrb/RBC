%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL28)
} def

/sequence { (\
AGUCAGCGGUGGGAGGAGGGCCAGGCGCGGCAGAUCGGCUUCCGGUUCCGGUGGGCUCUGAACCCUGAAAGGCUCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 74 0.249039593 ubox
2 31 0.012122589 ubox
2 73 0.286243261 ubox
2 77 0.781549892 ubox
3 30 0.012122143 ubox
3 68 0.147225773 ubox
3 72 0.285413195 ubox
3 76 0.775695011 ubox
4 29 0.011910470 ubox
4 67 0.158634874 ubox
4 71 0.277456019 ubox
5 10 0.003953569 ubox
5 66 0.159113841 ubox
5 74 0.786750087 ubox
6 26 0.004114102 ubox
6 28 0.012582045 ubox
6 65 0.158024717 ubox
6 73 0.801458045 ubox
6 77 0.495118120 ubox
7 25 0.004116939 ubox
7 27 0.012643539 ubox
7 50 0.010898579 ubox
7 67 0.210760528 ubox
7 72 0.801107424 ubox
7 76 0.495711713 ubox
7 78 0.007162627 ubox
8 26 0.012598829 ubox
8 49 0.011022951 ubox
8 64 0.156931013 ubox
8 65 0.003998606 ubox
8 66 0.217494641 ubox
8 74 0.079366989 ubox
8 75 0.489053390 ubox
8 77 0.006553260 ubox
9 48 0.011008161 ubox
9 63 0.156945445 ubox
9 64 0.003252750 ubox
9 65 0.213140280 ubox
9 73 0.473363269 ubox
9 74 0.122164633 ubox
9 77 0.036236839 ubox
10 23 0.012791126 ubox
10 44 0.007240980 ubox
10 45 0.004663850 ubox
10 62 0.155966304 ubox
10 67 0.253486580 ubox
10 72 0.471006873 ubox
10 76 0.036458558 ubox
10 78 0.006428638 ubox
11 22 0.013010105 ubox
11 43 0.007653397 ubox
11 64 0.217225347 ubox
11 65 0.915618518 ubox
11 66 0.235081379 ubox
11 74 0.003867928 ubox
11 75 0.036162454 ubox
11 77 0.010970895 ubox
12 21 0.013008539 ubox
12 42 0.007655595 ubox
12 43 0.007522844 ubox
12 59 0.010761196 ubox
12 63 0.217118180 ubox
12 64 0.916813420 ubox
12 65 0.236662014 ubox
12 66 0.079769587 ubox
12 73 0.004974697 ubox
12 74 0.036067746 ubox
13 41 0.007646298 ubox
13 42 0.007526124 ubox
13 58 0.010797157 ubox
13 63 0.915725760 ubox
13 64 0.235419426 ubox
13 65 0.080581132 ubox
13 73 0.036041187 ubox
13 75 0.011234767 ubox
14 40 0.007662986 ubox
14 41 0.007499605 ubox
14 57 0.009904709 ubox
14 59 0.015195513 ubox
14 66 0.144404672 ubox
14 74 0.011247686 ubox
15 39 0.007646179 ubox
15 40 0.007446461 ubox
15 43 0.003409331 ubox
15 56 0.008262850 ubox
15 58 0.013676910 ubox
15 59 0.033495087 ubox
15 64 0.083642104 ubox
15 65 0.145175478 ubox
15 66 0.024809830 ubox
15 73 0.011184722 ubox
16 36 0.004777941 ubox
16 39 0.007376612 ubox
16 42 0.003413422 ubox
16 57 0.007041687 ubox
16 58 0.032639224 ubox
16 63 0.084562326 ubox
16 64 0.144793324 ubox
16 65 0.024996629 ubox
17 35 0.004833839 ubox
17 41 0.003319842 ubox
17 57 0.028414386 ubox
17 59 0.991118358 ubox
17 66 0.041922202 ubox
18 36 0.006921011 ubox
18 56 0.018769414 ubox
18 57 0.007084807 ubox
18 58 0.997466723 ubox
18 59 0.023677245 ubox
18 64 0.024002405 ubox
18 65 0.042214469 ubox
19 35 0.006686560 ubox
19 36 0.004279530 ubox
19 56 0.015349591 ubox
19 57 0.997166972 ubox
19 58 0.023789957 ubox
19 63 0.024219504 ubox
19 64 0.042184228 ubox
20 31 0.011086667 ubox
20 52 0.007640110 ubox
20 56 0.998307465 ubox
20 63 0.042103579 ubox
21 30 0.011128228 ubox
21 51 0.007689413 ubox
21 54 0.029266589 ubox
21 55 0.998176969 ubox
22 29 0.011118657 ubox
22 50 0.007666908 ubox
22 53 0.035158189 ubox
22 54 0.997244436 ubox
22 60 0.048440061 ubox
23 41 0.012027662 ubox
23 52 0.025152868 ubox
23 59 0.048535798 ubox
24 40 0.014598301 ubox
24 48 0.005048057 ubox
24 49 0.007214744 ubox
24 57 0.005927969 ubox
24 58 0.048253785 ubox
25 39 0.014948488 ubox
25 46 0.004088764 ubox
25 47 0.004571293 ubox
25 48 0.007199470 ubox
25 52 0.960297845 ubox
25 56 0.047644874 ubox
25 57 0.009273675 ubox
26 38 0.014941138 ubox
26 45 0.004770553 ubox
26 50 0.036006454 ubox
26 51 0.965680983 ubox
26 53 0.108924739 ubox
26 55 0.047886374 ubox
27 46 0.004471141 ubox
27 49 0.034339297 ubox
27 52 0.106351435 ubox
27 56 0.006180223 ubox
28 37 0.014811058 ubox
28 44 0.010517506 ubox
28 45 0.003387835 ubox
28 50 0.991021560 ubox
28 51 0.078455438 ubox
28 53 0.046548449 ubox
28 55 0.006151705 ubox
29 36 0.014806547 ubox
29 40 0.003602968 ubox
29 43 0.010972284 ubox
29 47 0.009451762 ubox
29 48 0.032309595 ubox
29 49 0.997383330 ubox
29 52 0.041507008 ubox
30 35 0.010039160 ubox
30 39 0.003808071 ubox
30 42 0.010948825 ubox
30 46 0.010115075 ubox
30 47 0.019960087 ubox
30 48 0.994178187 ubox
30 52 0.017612596 ubox
31 38 0.003850055 ubox
31 45 0.011033770 ubox
31 51 0.024060190 ubox
32 40 0.010482946 ubox
32 47 0.143011148 ubox
33 39 0.010663653 ubox
33 42 0.009536187 ubox
33 46 0.023692100 ubox
33 47 0.902254108 ubox
33 48 0.026003156 ubox
34 41 0.009416673 ubox
34 46 0.996334989 ubox
34 47 0.021842358 ubox
35 45 0.998408691 ubox
36 44 0.999552776 ubox
37 43 0.999470064 ubox
37 47 0.003651618 ubox
38 42 0.983335461 ubox
38 46 0.003914685 ubox
39 45 0.004121329 ubox
40 44 0.003717145 ubox
42 51 0.014875610 ubox
43 50 0.015011405 ubox
44 49 0.014808558 ubox
51 77 0.017403895 ubox
52 76 0.017473768 ubox
53 75 0.017509766 ubox
54 74 0.017519965 ubox
55 73 0.017539611 ubox
56 72 0.017448864 ubox
57 68 0.005132428 ubox
57 71 0.007484004 ubox
58 67 0.006559663 ubox
58 71 0.014851259 ubox
59 70 0.014867733 ubox
60 75 0.003775665 ubox
61 74 0.003751913 ubox
63 72 0.013362215 ubox
64 71 0.013366076 ubox
64 72 0.017080780 ubox
65 71 0.019583613 ubox
65 72 0.007319935 ubox
66 70 0.019111680 ubox
66 71 0.020427458 ubox
66 76 0.014016393 ubox
67 75 0.021965037 ubox
68 74 0.021620627 ubox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
