%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RARRES2)
} def

/sequence { (\
GCCGCCCCGCGAGAAGAAGAGCGGGAAGAGGCGGACAGCGAGGCCAAGAUUUCAGCUGCGGGACGGUCAGGGGAGACCUCCAGGCGCAGGGAAGGACGGCCAGGGUGACACGGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.545293100 ubox
1 39 0.060289403 ubox
1 100 0.018750374 ubox
1 106 0.130127375 ubox
1 117 0.024646360 ubox
2 31 0.549980799 ubox
2 34 0.787453664 ubox
2 38 0.044410666 ubox
2 99 0.018842704 ubox
2 104 0.039795544 ubox
2 105 0.134759371 ubox
2 113 0.200199453 ubox
2 116 0.022409611 ubox
3 30 0.549889404 ubox
3 33 0.791334375 ubox
3 40 0.014208657 ubox
3 98 0.018842843 ubox
3 103 0.040167524 ubox
3 104 0.134503303 ubox
3 107 0.085982444 ubox
3 112 0.200885393 ubox
4 32 0.791613694 ubox
4 39 0.015089308 ubox
4 97 0.018622564 ubox
4 106 0.086961763 ubox
4 111 0.196093457 ubox
4 117 0.015790355 ubox
5 25 0.020723958 ubox
5 31 0.791497543 ubox
5 38 0.015082099 ubox
5 95 0.011747375 ubox
5 104 0.008434878 ubox
5 105 0.087773863 ubox
5 113 0.010169306 ubox
5 116 0.015868215 ubox
6 24 0.017116931 ubox
6 25 0.823465953 ubox
6 30 0.560908291 ubox
6 94 0.007040144 ubox
6 103 0.006437993 ubox
6 104 0.072165323 ubox
6 112 0.006941514 ubox
7 23 0.012180595 ubox
7 24 0.996934573 ubox
7 25 0.052845357 ubox
7 34 0.007163449 ubox
7 103 0.051863499 ubox
8 23 0.999001571 ubox
8 24 0.039143910 ubox
8 33 0.008115731 ubox
8 40 0.011120845 ubox
9 22 0.999738808 ubox
9 32 0.008138756 ubox
9 39 0.011235467 ubox
10 21 0.999554117 ubox
10 23 0.014989999 ubox
10 31 0.008137214 ubox
10 38 0.011232645 ubox
11 22 0.014903507 ubox
21 32 0.010493020 ubox
22 31 0.010499130 ubox
22 33 0.003930673 ubox
23 32 0.003964324 ubox
30 45 0.019224613 ubox
31 39 0.245092824 ubox
31 44 0.019244693 ubox
32 38 0.245281142 ubox
32 40 0.080348532 ubox
32 43 0.019213572 ubox
32 112 0.077835363 ubox
32 116 0.003193164 ubox
33 39 0.104244956 ubox
33 106 0.003216428 ubox
33 111 0.276140558 ubox
35 106 0.217879488 ubox
36 105 0.223490882 ubox
36 107 0.539257650 ubox
37 106 0.526924362 ubox
38 106 0.401624834 ubox
38 117 0.069682845 ubox
39 105 0.440016407 ubox
39 107 0.049246318 ubox
39 112 0.047469965 ubox
39 116 0.070229869 ubox
40 106 0.044206376 ubox
40 111 0.047310360 ubox
42 101 0.998063000 ubox
43 100 0.999780750 ubox
43 106 0.003873116 ubox
44 99 0.999783343 ubox
44 105 0.003913455 ubox
45 98 0.998297464 ubox
45 104 0.003906338 ubox
50 92 0.033042715 ubox
50 93 0.326324473 ubox
50 94 0.916272743 ubox
50 95 0.026897590 ubox
50 96 0.015194556 ubox
51 91 0.034848283 ubox
51 92 0.329333973 ubox
51 93 0.935188878 ubox
51 94 0.025902212 ubox
51 95 0.014700146 ubox
51 96 0.017543434 ubox
52 90 0.036115402 ubox
52 91 0.326728437 ubox
52 92 0.940567181 ubox
52 93 0.022659683 ubox
52 94 0.011506019 ubox
52 95 0.018173813 ubox
52 96 0.007841643 ubox
53 89 0.036212511 ubox
53 90 0.319709291 ubox
53 91 0.940929276 ubox
53 94 0.018209870 ubox
53 95 0.008027409 ubox
55 85 0.005895577 ubox
55 87 0.159772256 ubox
56 84 0.005921160 ubox
56 86 0.156319555 ubox
56 89 0.983320943 ubox
56 90 0.013213215 ubox
57 83 0.005726883 ubox
57 86 0.061332017 ubox
57 88 0.985008339 ubox
57 89 0.006770302 ubox
58 85 0.168350994 ubox
58 87 0.985429320 ubox
59 84 0.168431482 ubox
59 86 0.985362148 ubox
60 81 0.018886977 ubox
60 85 0.981414217 ubox
61 80 0.019891794 ubox
61 81 0.996308397 ubox
62 79 0.015929701 ubox
62 80 0.997193541 ubox
63 79 0.993411593 ubox
65 78 0.998756828 ubox
65 80 0.003388850 ubox
65 81 0.040233519 ubox
66 77 0.999049301 ubox
66 80 0.040178030 ubox
66 85 0.010123410 ubox
67 74 0.009568530 ubox
67 76 0.998864334 ubox
67 84 0.011884195 ubox
68 73 0.012591741 ubox
68 75 0.997912851 ubox
68 83 0.011879500 ubox
69 79 0.030398256 ubox
70 78 0.032933098 ubox
70 79 0.023738618 ubox
70 81 0.012843493 ubox
71 77 0.032890581 ubox
71 78 0.024329430 ubox
71 79 0.003515404 ubox
71 80 0.012862380 ubox
72 77 0.024372779 ubox
72 78 0.004259757 ubox
72 79 0.012626580 ubox
73 77 0.004199874 ubox
73 78 0.012584850 ubox
94 101 0.005012526 ubox
95 100 0.005000387 ubox
101 107 0.007764142 ubox
102 106 0.010509713 ubox
105 111 0.133633516 ubox
105 117 0.056682405 ubox
106 110 0.120603882 ubox
106 112 0.034761819 ubox
106 116 0.056762786 ubox
107 111 0.046761943 ubox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
42 101 0.9500000 lbox
43 100 0.9500000 lbox
44 99 0.9500000 lbox
45 98 0.9500000 lbox
50 94 0.9500000 lbox
51 93 0.9500000 lbox
52 92 0.9500000 lbox
53 91 0.9500000 lbox
56 89 0.9500000 lbox
57 88 0.9500000 lbox
58 87 0.9500000 lbox
59 86 0.9500000 lbox
60 85 0.9500000 lbox
61 81 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
showpage
end
%%EOF
