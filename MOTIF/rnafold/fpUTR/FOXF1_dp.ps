%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXF1)
} def

/sequence { (\
GCAGAGCAGCGGCGGCAGCGGCGGCGGCGGCAGCAGCCACCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.226001357 ubox
1 10 0.576113475 ubox
1 13 0.010675291 ubox
1 16 0.042429888 ubox
1 19 0.068139612 ubox
1 22 0.071763274 ubox
1 25 0.106391105 ubox
1 28 0.137317416 ubox
1 31 0.015937701 ubox
1 34 0.115490346 ubox
1 37 0.050004609 ubox
2 6 0.224530820 ubox
2 9 0.576049637 ubox
2 12 0.010674216 ubox
2 15 0.042364352 ubox
2 18 0.068121947 ubox
2 21 0.071657031 ubox
2 24 0.106392318 ubox
2 27 0.137104003 ubox
2 30 0.015940843 ubox
2 33 0.115523303 ubox
2 36 0.050117738 ubox
6 13 0.076180250 ubox
6 16 0.029549121 ubox
6 19 0.241195161 ubox
6 22 0.037565039 ubox
6 25 0.660325497 ubox
6 28 0.044103200 ubox
6 31 0.128192290 ubox
6 34 0.036060465 ubox
6 37 0.098819457 ubox
7 12 0.076106609 ubox
7 15 0.029542712 ubox
7 18 0.241154753 ubox
7 21 0.037462883 ubox
7 24 0.658789648 ubox
7 27 0.043988760 ubox
7 30 0.127783036 ubox
7 33 0.036025597 ubox
7 36 0.098909829 ubox
9 16 0.244884274 ubox
9 19 0.043678142 ubox
9 22 0.680355533 ubox
9 25 0.086776013 ubox
9 28 0.178267204 ubox
9 31 0.035839993 ubox
9 34 0.101823385 ubox
9 37 0.003564921 ubox
10 15 0.245154458 ubox
10 18 0.043806232 ubox
10 20 0.008190925 ubox
10 21 0.682548880 ubox
10 23 0.057717652 ubox
10 24 0.083379421 ubox
10 26 0.004783084 ubox
10 27 0.178640091 ubox
10 30 0.035866283 ubox
10 33 0.101581856 ubox
10 36 0.003557404 ubox
10 43 0.034806122 ubox
11 19 0.009398500 ubox
11 22 0.067459139 ubox
11 25 0.011475834 ubox
11 38 0.597708182 ubox
11 41 0.175127961 ubox
11 42 0.044485957 ubox
12 19 0.688145963 ubox
12 22 0.080005980 ubox
12 25 0.205693493 ubox
12 28 0.036190927 ubox
12 31 0.101863210 ubox
12 34 0.003396932 ubox
12 37 0.598344046 ubox
12 40 0.176181856 ubox
12 41 0.039922609 ubox
13 18 0.688188143 ubox
13 20 0.073428638 ubox
13 21 0.075420884 ubox
13 23 0.010829206 ubox
13 24 0.205769219 ubox
13 27 0.036185264 ubox
13 30 0.102205743 ubox
13 33 0.003396639 ubox
13 36 0.596099072 ubox
13 43 0.007290100 ubox
14 19 0.078056144 ubox
14 22 0.010052166 ubox
14 38 0.181049565 ubox
14 41 0.006757400 ubox
14 42 0.008060974 ubox
15 22 0.205858173 ubox
15 25 0.036167561 ubox
15 28 0.102315004 ubox
15 31 0.003317186 ubox
15 34 0.594766900 ubox
15 37 0.181046674 ubox
15 40 0.006924659 ubox
15 41 0.007277653 ubox
16 21 0.205641961 ubox
16 24 0.036156328 ubox
16 27 0.101971468 ubox
16 30 0.003318399 ubox
16 33 0.596182358 ubox
16 36 0.180720140 ubox
18 25 0.102588306 ubox
18 28 0.003462200 ubox
18 31 0.602909141 ubox
18 34 0.160375706 ubox
18 37 0.009347848 ubox
19 24 0.102942151 ubox
19 26 0.006623455 ubox
19 27 0.003274060 ubox
19 29 0.005635042 ubox
19 30 0.603540809 ubox
19 33 0.159999829 ubox
19 36 0.009399569 ubox
19 43 0.026467449 ubox
20 25 0.007327936 ubox
20 28 0.005909896 ubox
20 38 0.012423308 ubox
20 41 0.239066448 ubox
20 42 0.047200412 ubox
21 28 0.603670736 ubox
21 31 0.149703027 ubox
21 34 0.019883001 ubox
21 37 0.012436530 ubox
21 40 0.240209237 ubox
21 41 0.043601817 ubox
22 27 0.603725977 ubox
22 29 0.074099297 ubox
22 30 0.141588118 ubox
22 33 0.019869312 ubox
22 36 0.012388618 ubox
22 43 0.010115856 ubox
23 28 0.089247466 ubox
23 38 0.270919885 ubox
23 41 0.116635716 ubox
23 42 0.028410435 ubox
24 31 0.023666518 ubox
24 34 0.012273653 ubox
24 37 0.271040616 ubox
24 40 0.117176914 ubox
24 41 0.024070668 ubox
25 30 0.023795466 ubox
25 33 0.012318239 ubox
25 36 0.270016027 ubox
25 43 0.041443274 ubox
26 38 0.134194394 ubox
26 41 0.659347377 ubox
26 42 0.117054733 ubox
27 34 0.269888986 ubox
27 37 0.134249542 ubox
27 40 0.662196848 ubox
27 41 0.108303140 ubox
28 33 0.270810602 ubox
28 36 0.134226918 ubox
29 38 0.698782396 ubox
29 41 0.003530185 ubox
29 42 0.003796945 ubox
30 37 0.699007610 ubox
30 40 0.003462332 ubox
30 41 0.003676291 ubox
31 36 0.697998623 ubox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
