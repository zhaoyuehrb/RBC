%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLDN6)
} def

/sequence { (\
CGACACUCGGCCUAGGAAUUUCCCUUAUCUCCUUCGCAGUGCAGCUCCUUCAACCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.148648156 ubox
1 36 0.012475069 ubox
1 41 0.006512441 ubox
1 58 0.212286758 ubox
2 8 0.151161399 ubox
2 35 0.014799771 ubox
2 40 0.004223983 ubox
2 47 0.209668564 ubox
2 50 0.017250457 ubox
2 51 0.119495325 ubox
2 57 0.224731255 ubox
3 7 0.131520480 ubox
3 34 0.014499265 ubox
3 40 0.009963473 ubox
3 46 0.208816639 ubox
3 49 0.019150383 ubox
3 50 0.118640126 ubox
3 56 0.222556200 ubox
4 39 0.010121969 ubox
4 41 0.973365066 ubox
5 40 0.978133380 ubox
6 39 0.978480477 ubox
6 44 0.034392490 ubox
7 38 0.929439993 ubox
7 43 0.034147798 ubox
8 36 0.563490684 ubox
8 41 0.031586683 ubox
8 58 0.008494485 ubox
9 29 0.009970362 ubox
9 30 0.021620641 ubox
9 31 0.011452053 ubox
9 32 0.049944059 ubox
9 33 0.008685582 ubox
9 34 0.004523698 ubox
9 35 0.561930660 ubox
9 40 0.025883474 ubox
9 46 0.007746860 ubox
9 47 0.003164770 ubox
9 48 0.006576150 ubox
9 51 0.004013252 ubox
9 55 0.021918439 ubox
9 57 0.008802258 ubox
9 60 0.051629111 ubox
10 28 0.009646674 ubox
10 29 0.035866921 ubox
10 30 0.012921111 ubox
10 31 0.052502358 ubox
10 32 0.015931842 ubox
10 33 0.008395161 ubox
10 34 0.544243092 ubox
10 37 0.816425378 ubox
10 40 0.007385781 ubox
10 42 0.041323756 ubox
10 45 0.009165571 ubox
10 47 0.006094601 ubox
10 54 0.021802703 ubox
10 56 0.003760045 ubox
10 59 0.052628010 ubox
11 36 0.818162589 ubox
11 39 0.007400706 ubox
11 41 0.041379786 ubox
11 44 0.009028920 ubox
11 58 0.052522683 ubox
12 39 0.041454715 ubox
12 44 0.003260252 ubox
13 27 0.035404006 ubox
13 38 0.041156961 ubox
13 43 0.003544550 ubox
14 25 0.107314212 ubox
14 26 0.032368591 ubox
14 30 0.038799446 ubox
14 33 0.982305228 ubox
14 34 0.015498412 ubox
14 49 0.024043803 ubox
14 56 0.014118683 ubox
15 23 0.032655787 ubox
15 24 0.110620677 ubox
15 25 0.026487989 ubox
15 29 0.039337808 ubox
15 30 0.041317170 ubox
15 31 0.010079339 ubox
15 32 0.990360380 ubox
15 33 0.010841218 ubox
15 35 0.005482746 ubox
15 48 0.024473388 ubox
15 55 0.014498442 ubox
16 22 0.033854549 ubox
16 23 0.110171056 ubox
16 24 0.026496499 ubox
16 26 0.005219486 ubox
16 28 0.031262265 ubox
16 29 0.043780995 ubox
16 30 0.007177959 ubox
16 31 0.990255442 ubox
16 32 0.010729279 ubox
16 34 0.005395649 ubox
16 35 0.018396675 ubox
16 47 0.024469337 ubox
16 54 0.014290574 ubox
17 21 0.030352883 ubox
17 25 0.008049902 ubox
17 26 0.036627432 ubox
17 28 0.041494488 ubox
17 30 0.961474137 ubox
17 33 0.005216270 ubox
17 34 0.018238942 ubox
17 46 0.024005527 ubox
18 25 0.058846792 ubox
18 28 0.479389312 ubox
18 33 0.016152822 ubox
19 27 0.484847715 ubox
19 44 0.006502951 ubox
20 43 0.006150173 ubox
24 39 0.007772070 ubox
24 44 0.005552561 ubox
25 38 0.007416011 ubox
25 43 0.005445498 ubox
26 41 0.003871796 ubox
27 40 0.003959616 ubox
28 39 0.003189383 ubox
29 39 0.006320720 ubox
30 38 0.006122702 ubox
32 39 0.006039402 ubox
32 44 0.004772953 ubox
33 38 0.005552846 ubox
33 43 0.004606996 ubox
34 43 0.003409781 ubox
35 41 0.004065090 ubox
35 58 0.009359637 ubox
36 42 0.020934554 ubox
36 45 0.059334450 ubox
36 57 0.010748959 ubox
36 59 0.018690542 ubox
37 41 0.020807861 ubox
37 44 0.059361783 ubox
37 58 0.018738843 ubox
38 46 0.047189268 ubox
38 49 0.018100878 ubox
38 56 0.018285535 ubox
39 45 0.050446644 ubox
39 48 0.019328972 ubox
39 54 0.034514038 ubox
39 55 0.017742229 ubox
39 59 0.100302473 ubox
40 44 0.047206218 ubox
40 52 0.031295562 ubox
40 53 0.032430423 ubox
40 58 0.100451750 ubox
41 51 0.037350513 ubox
41 57 0.100407971 ubox
41 59 0.074015247 ubox
42 58 0.082402948 ubox
43 49 0.078555821 ubox
43 50 0.030831142 ubox
43 56 0.120249911 ubox
44 48 0.081434166 ubox
44 49 0.026490193 ubox
44 55 0.121103236 ubox
44 59 0.401741058 ubox
45 58 0.402331695 ubox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
showpage
end
%%EOF
