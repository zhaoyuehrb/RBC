%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUCUCCCCAGCUUGCUGAGCCCUUUGCUCCCCUGGCGACUGCCUGGACAGUCAGCAAGGAAUUGUCUCCCAGUGCAUUUUGCCCUCCUGGCUGCCAACUCUGGCUGCUAAAGCGGCUGCCACCUGCUGCAGUCUACACAGCUUCGGGAAGAGGAAAGGAACCUCAGACCUUCCAGAUCGCUUCCUCUCGCAACAAACUAUUUGUCGCAGGAAUAAAG\
) } def
/len { sequence length } bind def

/coor [
[245.22840881 514.68188477]
[234.13981628 509.47067261]
[223.81649780 502.86898804]
[214.43186951 494.98730469]
[206.14364624 485.95751953]
[199.09118652 475.93084717]
[193.39317322 465.07531738]
[189.14556885 453.57281494]
[186.42001343 441.61621094]
[185.26264954 429.40600586]
[185.69331360 417.14703369]
[187.70518494 405.04501343]
[191.26492310 393.30300903]
[196.31320190 382.11816406]
[202.76570129 371.67831421]
[210.51449585 362.15884399]
[219.42993164 353.71969604]
[229.36268616 346.50280762]
[222.39184570 333.22094727]
[215.42098999 319.93911743]
[208.45014954 306.65728760]
[201.47929382 293.37542725]
[184.42436218 284.25512695]
[185.56555176 264.12423706]
[178.21995544 251.04591370]
[170.87437439 237.96760559]
[163.52877808 224.88928223]
[156.18318176 211.81097412]
[143.20451355 204.50323486]
[143.19253540 188.68202209]
[135.84693909 175.60371399]
[128.50134277 162.52540588]
[120.97059631 149.55282593]
[113.25619507 136.68861389]
[105.54179382 123.82439423]
[76.83869171 124.91552734]
[56.95074463 93.24682617]
[42.18692780 90.59545135]
[27.42311478 87.94407654]
[12.65929985 85.29270172]
[-2.10451412 82.64132690]
[-19.28273010 89.28327179]
[-32.23506546 77.43786621]
[-47.03507996 74.99662781]
[-61.83509064 72.55538940]
[-76.65207672 70.21939850]
[-91.48529816 67.98879242]
[-106.31851196 65.75817871]
[-121.15173340 63.52756119]
[-136.02914429 61.61371994]
[-150.94396973 60.01752090]
[-165.85879517 58.42132187]
[-180.77363586 56.82512283]
[-195.69943237 55.33497238]
[-210.63543701 53.95094681]
[-222.63256836 64.23902130]
[-238.38398743 62.94724274]
[-248.54463196 50.84201050]
[-247.08639526 35.10514069]
[-234.87442017 25.07303810]
[-219.15383911 26.69757080]
[-209.25141907 39.01493454]
[-194.31539917 40.39896011]
[-187.37023926 37.88807678]
[-179.17742920 41.91029358]
[-164.26260376 43.50649261]
[-149.34776306 45.10269165]
[-134.43293762 46.69889069]
[-131.47793579 44.78801346]
[-127.45257568 44.20935059]
[-122.99119568 45.44952774]
[-118.92111969 48.69434357]
[-104.08789825 50.92495728]
[-89.25468445 53.15557098]
[-74.42146301 55.38618469]
[-67.34482574 53.27405548]
[-59.39384842 57.75537491]
[-44.59383774 60.19661713]
[-29.79382706 62.63785934]
[-19.78739357 55.84917068]
[-7.44126606 57.75681686]
[0.54686004 67.87751770]
[15.31067467 70.52889252]
[30.07448959 73.18025970]
[44.83830261 75.83163452]
[59.60211945 78.48300934]
[64.69409943 72.97650146]
[53.68124390 62.79234695]
[63.86557770 51.77965546]
[74.87806702 61.96347046]
[79.97005463 56.45695496]
[76.17365265 41.94532776]
[72.37725830 27.43369865]
[68.58085632 12.92207146]
[57.60273743 1.52946532]
[61.86693573 -12.74168968]
[58.07053757 -27.25331688]
[54.27413940 -41.76494598]
[50.47773743 -56.27657318]
[38.57209015 -67.55432129]
[42.64871979 -83.43868256]
[58.51393890 -87.58920288]
[69.84697723 -75.73616791]
[64.98936462 -60.07297134]
[68.78576660 -45.56134415]
[72.58216858 -31.04971695]
[76.37856293 -16.53808784]
[87.08514404 -6.18345165]
[83.09248352 9.12567139]
[86.88888550 23.63730049]
[90.68527985 38.14892960]
[94.48168182 52.66055679]
[109.33038330 54.78568268]
[117.04477692 41.92146683]
[124.75917816 29.05725288]
[132.47357178 16.19303703]
[139.63252258 3.01162791]
[146.22299194 -10.46300411]
[152.81346130 -23.93763733]
[159.40393066 -37.41226959]
[165.99440002 -50.88690186]
[172.58486938 -64.36153412]
[165.19648743 -78.00673676]
[167.27299500 -93.38424683]
[178.01591492 -104.58109283]
[193.29437256 -107.29186249]
[207.23348999 -100.47421265]
[214.47340393 -86.74965668]
[212.23020935 -71.39558411]
[201.36647034 -60.31593323]
[186.05949402 -57.77106476]
[179.46902466 -44.29643250]
[172.87855530 -30.82180023]
[166.28808594 -17.34716797]
[159.69761658 -3.87253523]
[153.10714722 9.60209751]
[167.59719849 5.72415590]
[180.65071106 13.11373711]
[184.78247070 27.53346634]
[177.62321472 40.71470642]
[163.27824402 45.09899902]
[149.97334290 38.17227554]
[145.33779907 23.90743446]
[137.62339783 36.77165222]
[129.90899658 49.63586807]
[122.19459534 62.50008392]
[133.59057617 94.62379456]
[118.40601349 116.10999298]
[126.12041473 128.97421265]
[133.83480835 141.83842468]
[139.40945435 145.37084961]
[141.98252869 150.42765808]
[141.57966614 155.17980957]
[148.92526245 168.25811768]
[156.27084351 181.33644104]
[169.77493286 189.57963562]
[169.26150513 204.46537781]
[176.60708618 217.54370117]
[183.95268250 230.62200928]
[191.29827881 243.70033264]
[198.64385986 256.77862549]
[209.25961304 259.10519409]
[216.69236755 266.73007202]
[218.66398621 276.97076416]
[214.76113892 286.40460205]
[221.73197937 299.68643188]
[228.70283508 312.96826172]
[235.67367554 326.25012207]
[242.64453125 339.53195190]
[259.81094360 334.07357788]
[277.69625854 331.96188354]
[295.65432739 333.27169800]
[313.03668213 337.95431519]
[329.21585083 345.83923340]
[343.60809326 356.64035034]
[355.69448853 369.96646118]
[365.03955078 385.33529663]
[371.30694580 402.19100952]
[374.27166748 419.92431641]
[373.82806396 437.89450073]
[369.99353027 455.45257568]
[362.90798950 471.96466064]
[352.82864380 486.83493042]
[340.12075806 499.52716064]
[348.72924805 511.81103516]
[357.33773804 524.09490967]
[365.94622803 536.37878418]
[374.55474854 548.66265869]
[379.27355957 550.85974121]
[382.37234497 554.30059814]
[383.64859009 558.16186523]
[383.25521851 561.65887451]
[391.33218384 574.29858398]
[405.28289795 581.76098633]
[405.61627197 596.65185547]
[413.69323730 609.29156494]
[421.77020264 621.93133545]
[429.84719849 634.57104492]
[437.92416382 647.21075439]
[451.54791260 657.30181885]
[445.62261963 673.18664551]
[428.71832275 671.89025879]
[425.28442383 655.28771973]
[417.20745850 642.64801025]
[409.13049316 630.00830078]
[401.05352783 617.36859131]
[392.97656250 604.72882080]
[379.60354614 598.17047119]
[378.69247437 582.37554932]
[370.61547852 569.73583984]
[362.27084351 557.27117920]
[353.66235352 544.98730469]
[345.05386353 532.70343018]
[336.44537354 520.41955566]
[327.83685303 508.13565063]
[316.91229248 513.65765381]
[305.36407471 517.72174072]
[293.38583374 520.25933838]
[281.17849731 521.22760010]
[268.94680786 520.60968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[30 155]
[31 154]
[32 153]
[33 150]
[34 149]
[35 148]
[37 86]
[38 85]
[39 84]
[40 83]
[41 82]
[43 79]
[44 78]
[45 77]
[46 75]
[47 74]
[48 73]
[49 72]
[50 68]
[51 67]
[52 66]
[53 65]
[54 63]
[55 62]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
[99 104]
[113 146]
[114 145]
[115 144]
[116 143]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[184 215]
[185 214]
[186 213]
[187 212]
[188 211]
[192 210]
[193 209]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
