%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAACGAGUGGAGACACGAGGACCAGCGCGAGCGGUCCCGGUGGGCUACCCUCCCCCUGCGACGACCCCCCCUCGCUCUGACCGACUGGUCCCCUAAACGGUGGCGGCGGUUUUUGGUCGUUGGGCCCCGGGAUUUAGGACCAACAUUUGAAGACCCGAAGGGGAACUGCAACC\
) } def
/len { sequence length } bind def

/coor [
[60.46603394 252.98893738]
[46.20504761 248.33874512]
[34.03522873 239.56973267]
[25.11068726 227.51351929]
[20.27777481 213.31341553]
[19.99481201 198.31608582]
[24.28863525 183.94377136]
[32.75154877 171.56001282]
[19.26186752 178.11961365]
[5.77218628 184.67922974]
[-0.60148209 191.26707458]
[-8.01562786 191.23316956]
[-21.61960602 197.55232239]
[-35.16696930 203.99195862]
[-48.65665054 210.55157471]
[-58.59593964 226.03576660]
[-76.02945709 224.14561462]
[-89.40059662 230.94361877]
[-102.77172852 237.74160767]
[-107.75849152 252.49864197]
[-121.41556549 259.20230103]
[-135.45339966 254.35723877]
[-148.82453918 261.15524292]
[-162.19567871 267.95321655]
[-175.56681824 274.75122070]
[-188.93795776 281.54922485]
[-195.19369507 288.24914551]
[-202.60726929 288.34683228]
[-216.09695435 294.90643311]
[-224.83009338 308.78677368]
[-241.20489502 307.89352417]
[-248.37637329 293.14559937]
[-238.96710205 279.71435547]
[-222.65657043 281.41674805]
[-209.16688538 274.85714722]
[-195.73594666 268.17807007]
[-182.36480713 261.38006592]
[-168.99366760 254.58209229]
[-155.62254333 247.78408813]
[-142.25140381 240.98609924]
[-137.89469910 226.78910828]
[-124.43129730 219.70449829]
[-109.56972504 224.37046814]
[-96.19858551 217.57247925]
[-82.82745361 210.77447510]
[-78.77060699 199.35771179]
[-67.66016388 193.59211731]
[-55.21626282 197.06188965]
[-41.72657776 190.50227356]
[-37.07167435 184.73144531]
[-27.93876457 183.94834900]
[-14.33478737 177.62918091]
[-0.78742355 171.18954468]
[12.70225811 164.62992859]
[26.19194031 158.07032776]
[38.46648026 149.44851685]
[49.21333313 138.98403931]
[59.96018600 128.51956177]
[70.70703888 118.05509949]
[81.45388794 107.59062195]
[82.15698242 83.52936554]
[108.66239929 72.82077026]
[111.31081390 58.05642700]
[113.95922089 43.29207993]
[116.60763550 28.52773285]
[119.25604248 13.76338673]
[121.90444946 -1.00095928]
[124.55286407 -15.76530552]
[127.20127106 -30.52965164]
[114.91489410 -39.51889038]
[107.77893066 -52.89666748]
[107.16148376 -67.98437500]
[113.13151550 -81.78726196]
[124.45573425 -91.58887482]
[138.85298157 -95.48560333]
[141.50140381 -110.24994659]
[144.14981079 -125.01428986]
[146.79821777 -139.77864075]
[149.44662476 -154.54298401]
[138.87364197 -165.74647522]
[136.94747925 -180.85089111]
[144.19889832 -194.03727722]
[157.66337585 -200.34965515]
[160.31178284 -215.11399841]
[162.96018982 -229.87834167]
[165.60859680 -244.64270020]
[156.85087585 -257.52447510]
[159.74705505 -272.45986938]
[172.08183289 -280.72964478]
[174.73023987 -295.49398804]
[177.37864685 -310.25833130]
[171.30944824 -325.49307251]
[181.67953491 -338.19714355]
[197.82104492 -335.30169678]
[203.12898254 -319.78530884]
[192.14300537 -307.60992432]
[189.49458313 -292.84558105]
[186.84617615 -278.08123779]
[195.53755188 -266.03982544]
[193.06201172 -251.02896118]
[180.37294006 -241.99427795]
[177.72453308 -227.22993469]
[175.07612610 -212.46559143]
[172.42771912 -197.70124817]
[182.85868835 -187.10252380]
[185.07476807 -172.21788025]
[178.01879883 -158.72467041]
[164.21096802 -151.89457703]
[161.56256104 -137.13023376]
[158.91415405 -122.36588287]
[156.26574707 -107.60153961]
[153.61734009 -92.83718872]
[165.76255798 -84.17930603]
[172.97396851 -71.05280304]
[173.77426147 -56.03546143]
[167.95121765 -42.10303879]
[156.61039734 -32.03960419]
[141.96562195 -27.88124275]
[139.31721497 -13.11689568]
[136.66879272 1.64745069]
[134.02038574 16.41179657]
[131.37197876 31.17614365]
[128.72357178 45.94049072]
[126.07515717 60.70483780]
[123.42675018 75.46918488]
[131.83299255 63.04601288]
[146.67478943 60.87324905]
[158.28933716 70.36547852]
[159.11491394 85.34274292]
[148.61402893 96.05402374]
[133.62373352 95.52588654]
[147.11341858 102.08549500]
[160.60310364 108.64510345]
[174.09278870 115.20471954]
[192.40965271 113.46060181]
[201.68858337 128.34017944]
[215.29257202 134.65933228]
[228.89654541 140.97850037]
[242.50051880 147.29765320]
[256.10449219 153.61682129]
[269.70846558 159.93597412]
[283.79348755 153.14286804]
[298.93695068 157.04280090]
[307.98858643 169.79435730]
[306.67446899 185.37663269]
[295.61511230 196.43214417]
[280.03237915 197.74082947]
[267.28399658 188.68476868]
[263.38931274 173.53994751]
[249.78533936 167.22079468]
[236.18136597 160.90164185]
[222.57737732 154.58247375]
[208.97340393 148.26332092]
[195.36943054 141.94415283]
[183.88435364 145.80337524]
[172.48843384 140.62483215]
[167.53317261 128.69439697]
[154.04348755 122.13478851]
[140.55381775 115.57518005]
[127.06413269 109.01557159]
[109.83646393 122.20132446]
[91.91835785 118.33747101]
[81.17150879 128.80194092]
[70.42465973 139.26641846]
[59.67780685 149.73089600]
[48.93095398 160.19537354]
[63.45203400 156.43528748]
[78.42868042 157.27194214]
[92.44060516 162.62602234]
[104.15899658 171.98974609]
[112.47255707 184.47512817]
[116.59287262 198.89811707]
[116.12921143 213.89096069]
[111.12552643 228.03178406]
[102.05635071 239.97959900]
[89.78174591 248.60131836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 55]
[9 54]
[10 53]
[12 52]
[13 51]
[14 49]
[15 48]
[17 45]
[18 44]
[19 43]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[28 35]
[29 34]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[83 104]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[91 96]
[131 160]
[132 159]
[133 158]
[134 157]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
