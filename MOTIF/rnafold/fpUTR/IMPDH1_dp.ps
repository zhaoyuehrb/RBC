%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IMPDH1)
} def

/sequence { (\
ACUCGACCGGGCUGCGCUCACUGCCCAGCCGGGGCCCCGGGAGCCUCCAGGCUCCCGCCCGCCCUGAGCUGCGGCCUCCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.024414998 ubox
2 11 0.160067220 ubox
2 68 0.099969153 ubox
3 9 0.022122143 ubox
3 10 0.160563080 ubox
3 11 0.026598111 ubox
3 67 0.100582502 ubox
3 74 0.004809918 ubox
4 9 0.162299831 ubox
4 10 0.037194036 ubox
4 14 0.003427649 ubox
4 16 0.007137046 ubox
4 23 0.004713179 ubox
4 66 0.100544463 ubox
4 73 0.006827591 ubox
4 80 0.456826237 ubox
5 13 0.003358086 ubox
5 15 0.007699077 ubox
5 19 0.151042029 ubox
5 22 0.013939509 ubox
5 65 0.048292597 ubox
5 72 0.006776521 ubox
5 78 0.110379329 ubox
5 79 0.477957965 ubox
6 18 0.148669156 ubox
6 77 0.092613660 ubox
7 32 0.027547324 ubox
7 33 0.013027114 ubox
7 74 0.021430465 ubox
8 14 0.005895121 ubox
8 16 0.153420859 ubox
8 23 0.004860651 ubox
8 31 0.037268164 ubox
8 32 0.016273764 ubox
8 66 0.003438093 ubox
8 73 0.021529613 ubox
8 80 0.208143861 ubox
9 13 0.003808781 ubox
9 15 0.153801182 ubox
9 18 0.018836230 ubox
9 19 0.513229295 ubox
9 22 0.013151826 ubox
9 26 0.229663696 ubox
9 30 0.031166518 ubox
9 72 0.019942867 ubox
9 76 0.020875953 ubox
9 77 0.697666320 ubox
9 78 0.154648441 ubox
9 79 0.202381092 ubox
10 17 0.021491420 ubox
10 18 0.515761935 ubox
10 19 0.019487661 ubox
10 21 0.013577029 ubox
10 22 0.008326386 ubox
10 25 0.230784071 ubox
10 29 0.022075355 ubox
10 30 0.116843920 ubox
10 75 0.014627766 ubox
10 76 0.757213001 ubox
10 77 0.026996528 ubox
10 78 0.165548548 ubox
10 79 0.011923708 ubox
11 17 0.519605330 ubox
11 18 0.007242262 ubox
11 21 0.011588662 ubox
11 24 0.230785653 ubox
11 29 0.122654008 ubox
11 75 0.766333700 ubox
11 76 0.061363641 ubox
11 77 0.078891106 ubox
11 78 0.011880968 ubox
11 81 0.003683067 ubox
12 16 0.515878297 ubox
12 23 0.230679787 ubox
12 28 0.124673899 ubox
12 74 0.767587482 ubox
12 80 0.003785775 ubox
13 20 0.054590017 ubox
13 27 0.124666029 ubox
13 73 0.766654626 ubox
14 19 0.058313398 ubox
14 22 0.010641782 ubox
14 24 0.025401391 ubox
14 26 0.124664964 ubox
14 72 0.766050065 ubox
14 75 0.015494345 ubox
14 81 0.157042567 ubox
15 23 0.027732251 ubox
15 71 0.733670729 ubox
15 73 0.012066916 ubox
15 74 0.015227481 ubox
15 80 0.158859493 ubox
16 22 0.023587904 ubox
16 24 0.654485579 ubox
16 29 0.034585201 ubox
16 69 0.355020933 ubox
16 70 0.119712796 ubox
16 72 0.013040777 ubox
16 75 0.003438877 ubox
16 79 0.157777915 ubox
16 81 0.074106307 ubox
17 23 0.655747176 ubox
17 28 0.034778690 ubox
17 68 0.363211594 ubox
17 71 0.011631903 ubox
17 74 0.003320465 ubox
17 80 0.074618203 ubox
18 27 0.034400487 ubox
18 67 0.362488466 ubox
19 66 0.349609620 ubox
20 65 0.259916792 ubox
21 28 0.079292893 ubox
21 32 0.024487177 ubox
21 74 0.027379081 ubox
22 27 0.074697572 ubox
22 31 0.035925387 ubox
22 61 0.005059146 ubox
22 73 0.027742618 ubox
22 80 0.012273747 ubox
23 29 0.155557654 ubox
23 30 0.045175490 ubox
23 35 0.083543956 ubox
23 62 0.134264151 ubox
23 69 0.018150273 ubox
23 72 0.028200733 ubox
23 75 0.581729068 ubox
23 79 0.004748428 ubox
24 28 0.155872043 ubox
24 32 0.016363375 ubox
24 33 0.027116613 ubox
24 34 0.083759345 ubox
24 61 0.132783838 ubox
24 68 0.018140479 ubox
24 71 0.025367950 ubox
24 74 0.583581613 ubox
25 31 0.029367302 ubox
25 32 0.046793860 ubox
25 33 0.083760003 ubox
25 73 0.583900165 ubox
26 31 0.059562100 ubox
26 32 0.083605073 ubox
26 66 0.020111449 ubox
26 71 0.625465958 ubox
27 65 0.023890790 ubox
27 70 0.895098377 ubox
28 58 0.008698719 ubox
28 62 0.029210229 ubox
28 64 0.026966338 ubox
28 69 0.921862586 ubox
29 57 0.008434064 ubox
29 61 0.024103835 ubox
29 68 0.921880205 ubox
30 61 0.037867105 ubox
30 66 0.927859521 ubox
31 55 0.007659055 ubox
31 56 0.003323277 ubox
31 60 0.059128948 ubox
31 63 0.008828052 ubox
31 64 0.048079994 ubox
31 65 0.959330665 ubox
31 78 0.006151594 ubox
31 79 0.004529927 ubox
32 54 0.007667584 ubox
32 55 0.003313247 ubox
32 59 0.058474160 ubox
32 60 0.127861303 ubox
32 62 0.008724690 ubox
32 63 0.046795475 ubox
32 64 0.983007147 ubox
32 77 0.006235736 ubox
32 78 0.004501171 ubox
33 53 0.007667427 ubox
33 54 0.003302209 ubox
33 58 0.057755226 ubox
33 59 0.129329867 ubox
33 60 0.025121298 ubox
33 62 0.045378466 ubox
33 63 0.984307907 ubox
33 64 0.004031795 ubox
33 76 0.008029994 ubox
34 52 0.008241131 ubox
34 58 0.129679607 ubox
34 59 0.025297423 ubox
34 62 0.984723014 ubox
34 63 0.003422721 ubox
34 75 0.008093673 ubox
35 51 0.008151674 ubox
35 57 0.118739547 ubox
35 61 0.983125802 ubox
35 74 0.008020620 ubox
36 50 0.008040992 ubox
36 73 0.007727697 ubox
38 57 0.984211651 ubox
39 48 0.005725791 ubox
39 56 0.999902691 ubox
40 47 0.005723301 ubox
40 48 0.005387868 ubox
40 55 0.999956637 ubox
41 46 0.004468118 ubox
41 47 0.005394891 ubox
41 54 0.999956368 ubox
42 46 0.004698861 ubox
42 53 0.999814553 ubox
43 52 0.999955236 ubox
44 51 0.999925521 ubox
45 50 0.996658046 ubox
45 51 0.006672944 ubox
46 50 0.008501534 ubox
59 74 0.005778855 ubox
60 73 0.006369969 ubox
61 69 0.007164884 ubox
61 72 0.008028082 ubox
62 68 0.007168593 ubox
62 71 0.008026181 ubox
66 78 0.025205522 ubox
66 79 0.003242056 ubox
67 77 0.025624583 ubox
68 75 0.030274542 ubox
68 76 0.018298259 ubox
69 74 0.035282204 ubox
71 81 0.255239449 ubox
72 80 0.258691647 ubox
73 79 0.258777417 ubox
74 78 0.254600281 ubox
74 81 0.006238983 ubox
75 80 0.007085637 ubox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
23 75 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
