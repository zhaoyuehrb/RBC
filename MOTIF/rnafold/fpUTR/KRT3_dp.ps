%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT3)
} def

/sequence { (\
CCCUCUUCCUCUGACUCUCAGUGUCCCUGCUUAACUUACACUCUUCUCUUCGCCAAGCUCCUUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 21 0.009586848 ubox
3 57 0.044532179 ubox
4 14 0.177754181 ubox
4 20 0.009042292 ubox
4 56 0.043234379 ubox
5 13 0.192535543 ubox
5 21 0.008229298 ubox
5 57 0.148834169 ubox
6 14 0.018204795 ubox
6 20 0.007986553 ubox
6 34 0.009782129 ubox
6 56 0.150114140 ubox
6 57 0.012918060 ubox
7 13 0.018574565 ubox
7 14 0.086372629 ubox
7 33 0.010595967 ubox
7 55 0.137531779 ubox
7 56 0.014664079 ubox
8 13 0.093161459 ubox
9 21 0.017584608 ubox
9 57 0.051715735 ubox
10 20 0.014745042 ubox
10 56 0.051488002 ubox
11 21 0.547336955 ubox
11 57 0.021077739 ubox
12 20 0.569826442 ubox
12 23 0.006776274 ubox
12 29 0.008467856 ubox
12 33 0.015747092 ubox
12 38 0.019862470 ubox
12 40 0.018041135 ubox
12 52 0.132381926 ubox
12 55 0.015658178 ubox
12 56 0.020241660 ubox
12 64 0.015736016 ubox
13 19 0.581221818 ubox
13 22 0.005539591 ubox
13 25 0.483520831 ubox
13 32 0.016329417 ubox
13 37 0.021824968 ubox
13 39 0.020186349 ubox
13 43 0.048471707 ubox
13 45 0.010608657 ubox
13 46 0.100063137 ubox
13 48 0.219096318 ubox
13 50 0.029885952 ubox
13 51 0.183165355 ubox
13 54 0.016305051 ubox
13 60 0.041213978 ubox
13 63 0.016786475 ubox
14 18 0.505698631 ubox
14 22 0.082588793 ubox
14 24 0.485312401 ubox
14 31 0.015354498 ubox
14 36 0.021106154 ubox
14 42 0.044146878 ubox
14 44 0.011496777 ubox
14 45 0.098299772 ubox
14 47 0.214670701 ubox
14 49 0.034064605 ubox
14 50 0.178607744 ubox
14 59 0.040117827 ubox
14 62 0.015713092 ubox
15 21 0.085521316 ubox
15 23 0.485454694 ubox
15 57 0.025432147 ubox
16 20 0.077432282 ubox
16 56 0.024492008 ubox
17 57 0.045114385 ubox
18 56 0.045237927 ubox
19 29 0.091565449 ubox
20 28 0.094788251 ubox
20 31 0.083240038 ubox
20 32 0.006705856 ubox
20 36 0.065546426 ubox
20 37 0.004167587 ubox
20 42 0.545842750 ubox
20 44 0.029186427 ubox
20 45 0.005663706 ubox
20 47 0.007660569 ubox
20 49 0.006290855 ubox
20 59 0.022970883 ubox
20 62 0.012471330 ubox
21 27 0.094797319 ubox
21 30 0.090171140 ubox
21 31 0.005332722 ubox
21 35 0.070223252 ubox
21 39 0.044226131 ubox
21 41 0.584555254 ubox
21 43 0.029168896 ubox
21 46 0.007723300 ubox
21 48 0.006500177 ubox
21 53 0.060191848 ubox
21 58 0.024894739 ubox
21 61 0.013482433 ubox
21 65 0.222103613 ubox
22 29 0.088717413 ubox
22 33 0.026039478 ubox
22 34 0.069162047 ubox
22 38 0.044653143 ubox
22 40 0.586416430 ubox
22 52 0.060606844 ubox
22 55 0.012310354 ubox
22 57 0.024715137 ubox
22 64 0.228354283 ubox
23 28 0.050222211 ubox
23 30 0.074186522 ubox
23 32 0.029952769 ubox
23 35 0.034788972 ubox
23 37 0.043211308 ubox
23 39 0.586859220 ubox
23 41 0.034360826 ubox
23 51 0.060886723 ubox
23 53 0.010465084 ubox
23 54 0.013665464 ubox
23 58 0.047816602 ubox
23 63 0.224288612 ubox
23 65 0.159705476 ubox
24 29 0.069585231 ubox
24 34 0.033902011 ubox
24 38 0.548764697 ubox
24 40 0.032724441 ubox
24 52 0.010267153 ubox
24 57 0.046950657 ubox
24 64 0.155566742 ubox
27 57 0.043357742 ubox
28 38 0.022354394 ubox
28 40 0.037651306 ubox
28 52 0.006628553 ubox
28 55 0.031558760 ubox
28 56 0.041104007 ubox
28 64 0.008117515 ubox
29 37 0.036812748 ubox
29 39 0.042384851 ubox
29 51 0.008723408 ubox
29 53 0.107896830 ubox
29 54 0.026969938 ubox
29 58 0.656486105 ubox
29 63 0.004455653 ubox
30 52 0.110225944 ubox
30 57 0.657475349 ubox
31 56 0.652213352 ubox
31 57 0.003612921 ubox
32 38 0.021478076 ubox
32 55 0.603963297 ubox
32 56 0.014950498 ubox
32 64 0.009766446 ubox
33 37 0.023987171 ubox
33 45 0.025992357 ubox
33 50 0.046690005 ubox
33 63 0.010363499 ubox
34 44 0.023720723 ubox
34 49 0.041574912 ubox
34 62 0.009472681 ubox
35 57 0.043679614 ubox
36 56 0.043746338 ubox
36 57 0.003555883 ubox
37 55 0.040992987 ubox
37 56 0.004479533 ubox
37 64 0.006835155 ubox
38 63 0.006966032 ubox
41 57 0.024526644 ubox
42 56 0.023517810 ubox
43 57 0.061417016 ubox
44 56 0.061978538 ubox
44 57 0.007084098 ubox
45 55 0.057001763 ubox
45 56 0.008089766 ubox
46 57 0.061192833 ubox
47 56 0.061494762 ubox
48 57 0.128259968 ubox
49 56 0.128747373 ubox
49 57 0.013994256 ubox
50 55 0.110357276 ubox
50 56 0.016253672 ubox
52 58 0.359276592 ubox
53 57 0.357118342 ubox
55 63 0.111643195 ubox
56 62 0.121758888 ubox
56 63 0.025035141 ubox
57 61 0.120344610 ubox
57 62 0.020323128 ubox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
showpage
end
%%EOF
