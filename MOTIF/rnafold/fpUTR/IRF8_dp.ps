%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IRF8)
} def

/sequence { (\
AGCGCGGCAGCAAGCGUGGGAACGCGGGCGGCGAGACGGCGGCAGGACGGCGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.020290805 ubox
2 11 0.011231798 ubox
2 17 0.020575813 ubox
2 29 0.004905288 ubox
2 32 0.023858169 ubox
2 40 0.024240116 ubox
2 43 0.008295860 ubox
2 51 0.014482295 ubox
2 54 0.266374918 ubox
3 7 0.020168472 ubox
3 10 0.011249600 ubox
3 16 0.021677785 ubox
3 18 0.012810036 ubox
3 26 0.006059608 ubox
3 28 0.004906192 ubox
3 30 0.008200641 ubox
3 31 0.023438183 ubox
3 33 0.827195492 ubox
3 38 0.208593243 ubox
3 39 0.023999485 ubox
3 41 0.016987988 ubox
3 42 0.006704993 ubox
3 50 0.014456071 ubox
3 52 0.042470872 ubox
3 53 0.263969649 ubox
4 11 0.019732865 ubox
4 15 0.021843130 ubox
4 17 0.013084583 ubox
4 25 0.006214121 ubox
4 29 0.009291166 ubox
4 32 0.844257379 ubox
4 37 0.209924792 ubox
4 40 0.017960350 ubox
4 43 0.004124901 ubox
4 51 0.050091999 ubox
4 54 0.233867230 ubox
5 10 0.019757383 ubox
5 14 0.021848100 ubox
5 16 0.013103464 ubox
5 24 0.006214815 ubox
5 28 0.009280129 ubox
5 30 0.023130227 ubox
5 31 0.843744914 ubox
5 33 0.177927991 ubox
5 38 0.070719294 ubox
5 39 0.014616075 ubox
5 41 0.003798291 ubox
5 42 0.004118013 ubox
5 49 0.010911366 ubox
5 50 0.049691338 ubox
5 52 0.028919882 ubox
5 53 0.233876047 ubox
6 15 0.012455481 ubox
6 23 0.006199931 ubox
6 29 0.015186614 ubox
6 32 0.149462125 ubox
6 37 0.072144523 ubox
6 40 0.003767796 ubox
6 48 0.012486256 ubox
6 51 0.021213538 ubox
7 15 0.007268919 ubox
7 29 0.835179351 ubox
7 32 0.502896621 ubox
7 40 0.003986873 ubox
7 43 0.005192601 ubox
7 51 0.077762418 ubox
7 54 0.018664354 ubox
8 14 0.008497423 ubox
8 28 0.834407369 ubox
8 31 0.511619704 ubox
8 39 0.003982015 ubox
8 42 0.005192497 ubox
8 50 0.077880829 ubox
8 53 0.018642779 ubox
10 17 0.003413867 ubox
10 25 0.024351863 ubox
10 29 0.541639939 ubox
10 32 0.018911653 ubox
10 43 0.004185987 ubox
10 51 0.011660758 ubox
11 16 0.003442651 ubox
11 18 0.004949912 ubox
11 24 0.023478576 ubox
11 28 0.545094890 ubox
11 31 0.018908464 ubox
11 42 0.004183680 ubox
11 50 0.011697544 ubox
12 17 0.004322872 ubox
14 25 0.997149966 ubox
14 29 0.011075172 ubox
15 24 0.997354495 ubox
15 26 0.060610526 ubox
15 28 0.011007795 ubox
15 38 0.003443798 ubox
15 41 0.003190584 ubox
16 23 0.997096974 ubox
16 25 0.061924289 ubox
16 37 0.003597322 ubox
16 40 0.003594673 ubox
17 22 0.987138683 ubox
17 24 0.061905554 ubox
17 26 0.010572593 ubox
17 36 0.003581904 ubox
17 39 0.003507394 ubox
18 23 0.062132168 ubox
18 25 0.010620882 ubox
18 37 0.004184948 ubox
23 33 0.018719771 ubox
23 49 0.003201949 ubox
23 52 0.017335050 ubox
24 32 0.019086139 ubox
24 48 0.003208289 ubox
24 51 0.017495632 ubox
25 31 0.019084723 ubox
25 50 0.017265917 ubox
26 48 0.004915996 ubox
28 43 0.066884068 ubox
28 54 0.003896089 ubox
29 38 0.010264489 ubox
29 41 0.008316328 ubox
29 42 0.066968212 ubox
29 53 0.003887458 ubox
30 37 0.016179128 ubox
30 40 0.019553008 ubox
31 40 0.079550253 ubox
31 43 0.014444681 ubox
31 51 0.003544904 ubox
31 54 0.017665989 ubox
32 38 0.022903352 ubox
32 39 0.079765448 ubox
32 41 0.007011633 ubox
32 42 0.013896907 ubox
32 50 0.003530001 ubox
32 53 0.017681669 ubox
33 37 0.024523455 ubox
33 40 0.008965997 ubox
37 49 0.025146572 ubox
37 52 0.765956573 ubox
38 48 0.025329042 ubox
38 51 0.772619142 ubox
39 51 0.026164303 ubox
39 54 0.624072770 ubox
40 49 0.774358144 ubox
40 50 0.023195282 ubox
40 52 0.009951617 ubox
40 53 0.624576544 ubox
41 48 0.773785407 ubox
41 51 0.009675620 ubox
42 51 0.625301980 ubox
42 54 0.011118309 ubox
43 50 0.624927278 ubox
43 53 0.011121553 ubox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
