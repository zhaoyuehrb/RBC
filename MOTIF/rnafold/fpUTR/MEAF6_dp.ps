%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MEAF6)
} def

/sequence { (\
AGCGGGGGGGCGCCCCCUGGCGGCGCAGGGACCGCCCCCAACCUCGCGCCGCCGCCGCCCGCCUCAGCCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.016510380 ubox
2 55 0.007393727 ubox
2 58 0.031052580 ubox
2 62 0.115914789 ubox
2 63 0.015580757 ubox
2 68 0.929492353 ubox
3 54 0.007396085 ubox
3 57 0.031123467 ubox
3 61 0.116669040 ubox
3 67 0.930703578 ubox
4 17 0.023590051 ubox
4 18 0.008495251 ubox
4 56 0.029999162 ubox
4 60 0.114697840 ubox
4 63 0.020459356 ubox
4 64 0.464467513 ubox
4 65 0.826854451 ubox
4 69 0.027615601 ubox
4 70 0.139336899 ubox
5 16 0.023862556 ubox
5 17 0.013491961 ubox
5 18 0.004391518 ubox
5 55 0.028523334 ubox
5 59 0.112632881 ubox
5 60 0.025112523 ubox
5 62 0.019592223 ubox
5 63 0.559967779 ubox
5 64 0.801838284 ubox
5 65 0.066390677 ubox
5 68 0.027486958 ubox
5 69 0.139420637 ubox
5 70 0.020067912 ubox
6 15 0.024080631 ubox
6 16 0.016459669 ubox
6 17 0.027087268 ubox
6 18 0.019912262 ubox
6 39 0.015990359 ubox
6 53 0.003313164 ubox
6 58 0.107282817 ubox
6 59 0.032429576 ubox
6 60 0.008118021 ubox
6 62 0.560584595 ubox
6 63 0.805011203 ubox
6 64 0.034244564 ubox
6 68 0.138529086 ubox
6 69 0.020107435 ubox
6 70 0.003711839 ubox
7 14 0.024153556 ubox
7 15 0.017344496 ubox
7 16 0.031185110 ubox
7 17 0.081797770 ubox
7 18 0.017230712 ubox
7 38 0.017302685 ubox
7 52 0.003313583 ubox
7 53 0.003328892 ubox
7 56 0.015515839 ubox
7 58 0.038352169 ubox
7 59 0.008144351 ubox
7 60 0.017326967 ubox
7 62 0.804367150 ubox
7 63 0.033937068 ubox
7 64 0.003190505 ubox
7 65 0.136190833 ubox
7 68 0.019147795 ubox
7 69 0.003706889 ubox
8 13 0.024129612 ubox
8 14 0.017355927 ubox
8 15 0.031213513 ubox
8 16 0.082077791 ubox
8 17 0.019994335 ubox
8 37 0.017343435 ubox
8 52 0.003321087 ubox
8 55 0.013755403 ubox
8 56 0.058484419 ubox
8 58 0.008152001 ubox
8 59 0.016051881 ubox
8 60 0.975087081 ubox
8 62 0.029238528 ubox
8 64 0.141237897 ubox
8 65 0.019724522 ubox
8 68 0.003466898 ubox
9 13 0.017086679 ubox
9 14 0.031124757 ubox
9 15 0.082189835 ubox
9 16 0.021026584 ubox
9 17 0.006135038 ubox
9 36 0.017349793 ubox
9 50 0.004704380 ubox
9 53 0.009828651 ubox
9 55 0.054375262 ubox
9 56 0.049816313 ubox
9 58 0.014603569 ubox
9 59 0.975879278 ubox
9 60 0.106914344 ubox
9 63 0.143219355 ubox
10 14 0.080895679 ubox
10 15 0.021036581 ubox
10 16 0.006814238 ubox
10 17 0.004038392 ubox
10 35 0.017355233 ubox
10 49 0.004708989 ubox
10 52 0.009879509 ubox
10 55 0.053881472 ubox
10 58 0.976173873 ubox
10 59 0.104413150 ubox
10 62 0.143243589 ubox
11 34 0.017360324 ubox
11 48 0.004708943 ubox
11 51 0.009867444 ubox
11 54 0.057217179 ubox
11 57 0.976363475 ubox
11 61 0.143247860 ubox
12 21 0.010003355 ubox
12 33 0.017330930 ubox
12 47 0.004708481 ubox
12 53 0.024891344 ubox
12 55 0.409701268 ubox
12 56 0.881920017 ubox
12 58 0.103256468 ubox
12 60 0.141024816 ubox
13 20 0.010112138 ubox
13 46 0.004701731 ubox
13 54 0.574088958 ubox
13 57 0.103487821 ubox
14 19 0.010406223 ubox
15 30 0.017352857 ubox
16 29 0.017361666 ubox
17 28 0.017363510 ubox
18 27 0.017349838 ubox
18 40 0.004442456 ubox
18 54 0.743820762 ubox
19 26 0.017215985 ubox
19 39 0.004598727 ubox
19 53 0.999118625 ubox
19 56 0.003480101 ubox
20 38 0.004591248 ubox
20 52 0.999772493 ubox
20 55 0.003505730 ubox
21 51 0.999761344 ubox
21 54 0.003461797 ubox
22 36 0.004568508 ubox
22 50 0.999809128 ubox
22 53 0.003230743 ubox
23 35 0.004577838 ubox
23 49 0.999826476 ubox
23 52 0.003174573 ubox
24 34 0.004582307 ubox
24 48 0.999812496 ubox
25 33 0.004495647 ubox
25 47 0.999807757 ubox
26 46 0.999375953 ubox
27 44 0.863240927 ubox
28 36 0.013195058 ubox
28 37 0.110205588 ubox
28 38 0.134413314 ubox
28 39 0.208776299 ubox
28 43 0.859417481 ubox
28 44 0.408891253 ubox
28 45 0.121585700 ubox
29 35 0.013466271 ubox
29 36 0.112842182 ubox
29 37 0.138864236 ubox
29 38 0.217189365 ubox
29 39 0.054654262 ubox
29 42 0.854661883 ubox
29 43 0.416341269 ubox
29 44 0.112234562 ubox
29 45 0.003418223 ubox
30 35 0.114660913 ubox
30 36 0.142685197 ubox
30 37 0.224451615 ubox
30 38 0.073834863 ubox
30 42 0.415198764 ubox
30 43 0.111999587 ubox
30 45 0.003601764 ubox
31 44 0.003415479 ubox
45 57 0.005881677 ubox
46 55 0.009880110 ubox
46 56 0.005841763 ubox
46 58 0.012172459 ubox
47 54 0.010118342 ubox
47 57 0.012205396 ubox
48 53 0.009635991 ubox
48 55 0.009642200 ubox
48 56 0.009433383 ubox
49 54 0.012288071 ubox
54 62 0.010729558 ubox
54 68 0.003197158 ubox
55 61 0.010758695 ubox
55 67 0.003204476 ubox
57 68 0.011717668 ubox
58 67 0.011737189 ubox
61 68 0.024656064 ubox
62 67 0.024655618 ubox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
showpage
end
%%EOF
