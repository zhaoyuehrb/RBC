%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CABP2)
} def

/sequence { (\
UCGGGAGCAGCUGGGGGCUGGCAGGAGUCCUCAGGCAGCAGCAUCCGCCGAGGCCCACCCGGGCCACCCCCGGGGUUCCAGGCCUGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 51 0.015627206 ubox
1 82 0.041163832 ubox
1 87 0.007926303 ubox
2 47 0.253507095 ubox
2 50 0.022701535 ubox
2 72 0.004541289 ubox
2 81 0.057699900 ubox
2 86 0.011182562 ubox
3 45 0.024144374 ubox
3 46 0.708490667 ubox
3 49 0.022572031 ubox
3 56 0.003587425 ubox
3 69 0.009696799 ubox
3 71 0.004586176 ubox
3 79 0.006441143 ubox
3 84 0.004758672 ubox
3 85 0.010777292 ubox
4 44 0.024006126 ubox
4 45 0.708405061 ubox
4 46 0.692182784 ubox
4 48 0.017527240 ubox
4 55 0.003587076 ubox
4 68 0.009714854 ubox
4 70 0.004582438 ubox
4 78 0.005657719 ubox
4 79 0.081481465 ubox
4 83 0.003370626 ubox
4 84 0.008212866 ubox
5 44 0.689965055 ubox
5 45 0.693633635 ubox
5 54 0.003537213 ubox
5 67 0.009671153 ubox
5 69 0.004567036 ubox
5 77 0.004695633 ubox
5 78 0.081911891 ubox
5 83 0.007023182 ubox
6 44 0.691116897 ubox
6 76 0.004464476 ubox
6 77 0.082104891 ubox
7 36 0.034220991 ubox
7 39 0.396259620 ubox
7 42 0.909879978 ubox
7 76 0.082099514 ubox
8 35 0.034116880 ubox
8 38 0.396272612 ubox
8 41 0.908949055 ubox
8 75 0.082103734 ubox
10 36 0.504905272 ubox
10 39 0.772669478 ubox
10 42 0.011024928 ubox
11 34 0.526855158 ubox
11 35 0.384096581 ubox
11 38 0.753337626 ubox
11 41 0.010789068 ubox
11 73 0.082164120 ubox
12 33 0.706807623 ubox
12 34 0.194524156 ubox
12 37 0.671940800 ubox
12 40 0.009772290 ubox
12 72 0.082194883 ubox
13 31 0.004853218 ubox
13 32 0.807222097 ubox
13 36 0.580988776 ubox
13 39 0.008611426 ubox
13 71 0.082302630 ubox
14 30 0.010069334 ubox
14 31 0.976458796 ubox
14 32 0.178634314 ubox
14 70 0.082304477 ubox
15 29 0.008327320 ubox
15 30 0.989978855 ubox
15 31 0.112073245 ubox
15 32 0.013014362 ubox
15 69 0.082303266 ubox
16 28 0.006039391 ubox
16 29 0.990105073 ubox
16 30 0.112025332 ubox
16 31 0.009743172 ubox
16 32 0.003519338 ubox
16 68 0.082297218 ubox
17 28 0.989886130 ubox
17 29 0.111294122 ubox
17 30 0.009547339 ubox
17 36 0.003753202 ubox
17 67 0.082227854 ubox
18 25 0.008617119 ubox
18 27 0.996371122 ubox
18 34 0.004940308 ubox
18 35 0.003826543 ubox
18 62 0.007196562 ubox
19 24 0.010626557 ubox
19 26 0.990189350 ubox
19 33 0.005094910 ubox
19 34 0.003709664 ubox
19 50 0.015557127 ubox
19 61 0.007252366 ubox
19 66 0.079238479 ubox
20 29 0.012612543 ubox
20 30 0.003970421 ubox
20 32 0.005070230 ubox
20 49 0.019348008 ubox
20 60 0.007310971 ubox
20 65 0.079642738 ubox
21 28 0.015742837 ubox
21 29 0.003957961 ubox
21 36 0.003232256 ubox
21 48 0.019355656 ubox
21 59 0.007306465 ubox
21 64 0.079643363 ubox
22 27 0.016200452 ubox
22 35 0.003517021 ubox
22 47 0.019293537 ubox
22 63 0.079553731 ubox
23 31 0.005282216 ubox
24 30 0.006059711 ubox
24 46 0.019213219 ubox
24 56 0.010287844 ubox
24 59 0.021642824 ubox
24 60 0.075894941 ubox
25 29 0.005966000 ubox
25 32 0.003444132 ubox
25 45 0.019222833 ubox
25 55 0.010345300 ubox
25 58 0.021818174 ubox
25 59 0.075859269 ubox
26 31 0.003223418 ubox
26 44 0.019025437 ubox
27 36 0.007489336 ubox
27 42 0.012810868 ubox
27 54 0.022198622 ubox
27 58 0.072066959 ubox
28 35 0.007327794 ubox
28 41 0.012558048 ubox
28 53 0.003557492 ubox
28 57 0.071236571 ubox
29 34 0.007278426 ubox
29 35 0.007708375 ubox
29 53 0.079803347 ubox
30 34 0.007673193 ubox
30 38 0.008403097 ubox
30 41 0.009013768 ubox
30 52 0.079902558 ubox
31 37 0.008085617 ubox
31 40 0.008960427 ubox
31 51 0.079916008 ubox
32 50 0.079570709 ubox
34 49 0.079928954 ubox
35 42 0.046047827 ubox
35 48 0.079970153 ubox
36 41 0.046063681 ubox
36 47 0.079906897 ubox
41 48 0.011144108 ubox
42 47 0.011273765 ubox
47 54 0.004224895 ubox
47 83 0.011359100 ubox
47 88 0.956083802 ubox
48 53 0.004276301 ubox
48 82 0.011541218 ubox
48 87 0.994578057 ubox
49 81 0.011543046 ubox
49 86 0.993630509 ubox
50 85 0.487722291 ubox
51 85 0.863205609 ubox
52 65 0.029393399 ubox
52 79 0.010729160 ubox
52 84 0.996167737 ubox
53 64 0.029441420 ubox
53 78 0.010725172 ubox
53 83 0.996254583 ubox
54 63 0.029469559 ubox
54 82 0.995968830 ubox
55 62 0.029679893 ubox
55 75 0.006448787 ubox
55 81 0.993951206 ubox
55 82 0.023678418 ubox
56 61 0.029641600 ubox
56 74 0.007044175 ubox
56 81 0.033386855 ubox
57 76 0.299878798 ubox
58 73 0.006335864 ubox
58 74 0.956551101 ubox
58 75 0.277140892 ubox
59 72 0.005905021 ubox
59 73 0.967158610 ubox
59 74 0.238846647 ubox
59 87 0.008099365 ubox
60 72 0.977317579 ubox
60 73 0.192916285 ubox
60 86 0.008213878 ubox
61 68 0.008235382 ubox
61 69 0.026046952 ubox
61 70 0.069652476 ubox
61 71 0.986092296 ubox
61 78 0.010609864 ubox
61 79 0.006199900 ubox
61 85 0.008242213 ubox
62 67 0.008409110 ubox
62 68 0.026661384 ubox
62 69 0.085431130 ubox
62 70 0.984919655 ubox
62 71 0.119525261 ubox
62 77 0.010676249 ubox
62 78 0.006197991 ubox
62 84 0.008255303 ubox
63 67 0.026837815 ubox
63 68 0.097406382 ubox
63 69 0.978527442 ubox
63 70 0.118697605 ubox
63 76 0.011182158 ubox
63 77 0.004909410 ubox
63 83 0.008256388 ubox
64 75 0.011634844 ubox
64 82 0.008256701 ubox
65 74 0.011622325 ubox
65 81 0.008252738 ubox
66 76 0.010002299 ubox
67 73 0.011171861 ubox
67 75 0.010238766 ubox
68 72 0.011100835 ubox
68 74 0.010240344 ubox
69 73 0.010166315 ubox
70 87 0.020602891 ubox
71 86 0.020870805 ubox
72 85 0.020810325 ubox
73 84 0.020762107 ubox
73 85 0.004563921 ubox
74 83 0.020681702 ubox
74 84 0.005421712 ubox
75 83 0.005717540 ubox
76 82 0.005929866 ubox
77 81 0.004443895 ubox
82 88 0.013910262 ubox
83 87 0.014025469 ubox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
47 88 0.9500000 lbox
48 87 0.9500000 lbox
49 86 0.9500000 lbox
51 85 0.9500000 lbox
52 84 0.9500000 lbox
53 83 0.9500000 lbox
54 82 0.9500000 lbox
55 81 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
