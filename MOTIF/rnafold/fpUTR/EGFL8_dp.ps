%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EGFL8)
} def

/sequence { (\
GCUGCUUCUGCUGAGGCUGGUCUGCUUGAAGCCUCCCAGGAGAAAGAAGCCAGCCUGUAGGGUCCAGCGUCAAAGCGAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 50 0.009727821 ubox
1 54 0.007759820 ubox
1 63 0.005135054 ubox
1 68 0.976742690 ubox
1 70 0.013286421 ubox
1 76 0.106051851 ubox
2 49 0.009761217 ubox
2 53 0.007848216 ubox
2 62 0.005633816 ubox
2 67 0.979956717 ubox
2 69 0.014611898 ubox
2 75 0.106116526 ubox
3 48 0.008909922 ubox
3 52 0.007833347 ubox
3 61 0.004779595 ubox
3 66 0.978446364 ubox
3 69 0.048698845 ubox
3 72 0.004142870 ubox
3 74 0.098384119 ubox
3 77 0.122467307 ubox
4 11 0.008501484 ubox
4 50 0.005566001 ubox
4 51 0.005773970 ubox
4 63 0.152094343 ubox
4 65 0.965023565 ubox
4 68 0.088380121 ubox
4 70 0.010342117 ubox
4 71 0.005349107 ubox
4 76 0.151109421 ubox
5 10 0.008721938 ubox
5 42 0.010454859 ubox
5 46 0.008636395 ubox
5 49 0.007693105 ubox
5 61 0.016620971 ubox
5 62 0.273423317 ubox
5 67 0.088434581 ubox
5 69 0.010797959 ubox
5 75 0.151164608 ubox
6 41 0.010508294 ubox
6 44 0.007442243 ubox
6 45 0.007079628 ubox
6 48 0.007450071 ubox
6 60 0.008900376 ubox
6 61 0.194601864 ubox
6 62 0.797065076 ubox
6 66 0.082375172 ubox
6 73 0.009358621 ubox
6 74 0.150548920 ubox
6 79 0.006377797 ubox
7 40 0.010521919 ubox
7 43 0.009881670 ubox
7 44 0.004992696 ubox
7 47 0.006700505 ubox
7 59 0.005481716 ubox
7 60 0.027268937 ubox
7 61 0.919917599 ubox
7 62 0.165820360 ubox
7 72 0.011526239 ubox
7 73 0.145793021 ubox
7 78 0.007320831 ubox
8 39 0.010548455 ubox
8 42 0.011227749 ubox
8 46 0.006539586 ubox
8 60 0.964678391 ubox
8 61 0.168251515 ubox
8 62 0.090458889 ubox
8 67 0.014278905 ubox
8 77 0.007292369 ubox
9 38 0.010551925 ubox
9 41 0.011338632 ubox
9 45 0.006134717 ubox
9 59 0.966066427 ubox
9 60 0.157207328 ubox
9 61 0.085210721 ubox
9 66 0.014315916 ubox
9 69 0.155061037 ubox
9 72 0.005798156 ubox
9 77 0.004952301 ubox
10 37 0.010528034 ubox
10 58 0.965682804 ubox
10 63 0.006229599 ubox
10 65 0.014270312 ubox
10 68 0.163065178 ubox
10 71 0.003781271 ubox
10 76 0.009325138 ubox
11 39 0.011462923 ubox
11 42 0.005016184 ubox
11 57 0.962237618 ubox
11 60 0.095582141 ubox
11 61 0.010796188 ubox
11 62 0.006498080 ubox
11 67 0.163103377 ubox
11 75 0.009314983 ubox
12 38 0.011011625 ubox
12 41 0.004993187 ubox
12 57 0.015644592 ubox
12 59 0.096783111 ubox
12 60 0.009973593 ubox
12 61 0.005592765 ubox
12 66 0.162986554 ubox
12 72 0.018618158 ubox
12 74 0.006401236 ubox
13 35 0.014647987 ubox
13 37 0.007703244 ubox
13 56 0.084820577 ubox
13 58 0.089961162 ubox
13 64 0.012989810 ubox
13 65 0.162306396 ubox
13 71 0.020139200 ubox
14 34 0.015926080 ubox
14 56 0.926257852 ubox
14 63 0.014363088 ubox
14 70 0.020105460 ubox
15 33 0.016129477 ubox
15 36 0.003908356 ubox
15 51 0.006053979 ubox
15 55 0.999274617 ubox
15 64 0.017165757 ubox
16 32 0.016130337 ubox
16 35 0.003905845 ubox
16 50 0.006067256 ubox
16 54 0.999482587 ubox
16 63 0.017002330 ubox
16 68 0.020166257 ubox
17 31 0.016128477 ubox
17 49 0.006067062 ubox
17 53 0.999480560 ubox
17 62 0.016958360 ubox
17 67 0.020169650 ubox
18 30 0.015613229 ubox
18 48 0.006026092 ubox
18 52 0.999246015 ubox
18 61 0.016768285 ubox
18 66 0.020164594 ubox
19 33 0.003973601 ubox
19 51 0.999474924 ubox
19 55 0.016543644 ubox
19 56 0.003891514 ubox
19 65 0.020165524 ubox
20 32 0.004059536 ubox
20 50 0.998406720 ubox
20 54 0.016552185 ubox
20 55 0.003912448 ubox
20 64 0.020102239 ubox
21 29 0.016306114 ubox
21 40 0.006243042 ubox
21 41 0.003346544 ubox
21 43 0.110810684 ubox
21 47 0.080093702 ubox
21 49 0.364640574 ubox
21 53 0.011536152 ubox
21 61 0.005136619 ubox
21 62 0.006623509 ubox
22 28 0.022419310 ubox
22 31 0.029249852 ubox
22 39 0.015443731 ubox
22 40 0.004833202 ubox
22 42 0.163685832 ubox
22 46 0.120560850 ubox
22 49 0.910236568 ubox
22 53 0.013052123 ubox
22 60 0.006285180 ubox
22 61 0.006649863 ubox
22 62 0.009183649 ubox
23 30 0.029573033 ubox
23 38 0.015482943 ubox
23 39 0.004653814 ubox
23 41 0.163216014 ubox
23 45 0.116049514 ubox
23 48 0.819234849 ubox
23 52 0.013333856 ubox
23 59 0.006416075 ubox
23 60 0.006441289 ubox
23 61 0.008283681 ubox
24 32 0.175962535 ubox
24 37 0.015206052 ubox
24 50 0.047498750 ubox
24 51 0.009529984 ubox
24 58 0.006250728 ubox
25 31 0.176530302 ubox
25 39 0.074420604 ubox
25 40 0.159204183 ubox
25 42 0.045421284 ubox
25 46 0.945870101 ubox
25 49 0.062705024 ubox
25 57 0.006245913 ubox
26 30 0.159040818 ubox
26 38 0.061581928 ubox
26 39 0.159776068 ubox
26 41 0.044984541 ubox
26 42 0.009268850 ubox
26 43 0.011047370 ubox
26 44 0.050673800 ubox
26 45 0.949430215 ubox
26 46 0.059327157 ubox
26 47 0.034937852 ubox
26 48 0.067266450 ubox
26 49 0.004108626 ubox
27 38 0.165160445 ubox
27 40 0.037555589 ubox
27 41 0.010054726 ubox
27 42 0.008750183 ubox
27 43 0.061317907 ubox
27 44 0.934900718 ubox
27 45 0.071217298 ubox
27 46 0.036826091 ubox
27 47 0.066789716 ubox
27 48 0.013026501 ubox
28 35 0.049465431 ubox
28 37 0.170146049 ubox
29 34 0.046606737 ubox
31 50 0.005836875 ubox
31 63 0.011619701 ubox
32 40 0.939717055 ubox
32 49 0.005858065 ubox
32 62 0.011771612 ubox
33 39 0.939834581 ubox
33 40 0.026782162 ubox
33 42 0.277642693 ubox
33 61 0.011798304 ubox
34 38 0.846685671 ubox
34 39 0.025039429 ubox
34 40 0.005363064 ubox
34 41 0.280011284 ubox
34 43 0.013246392 ubox
34 47 0.003369022 ubox
34 60 0.011603152 ubox
35 39 0.007119951 ubox
35 40 0.280023843 ubox
35 42 0.013445857 ubox
35 46 0.003474699 ubox
37 57 0.012342663 ubox
38 56 0.012386756 ubox
39 55 0.012391281 ubox
40 54 0.012356967 ubox
46 71 0.007985838 ubox
47 70 0.007558388 ubox
49 68 0.008473787 ubox
50 67 0.008473392 ubox
53 63 0.016896480 ubox
54 61 0.004328389 ubox
54 62 0.017774450 ubox
55 60 0.004452167 ubox
55 61 0.017835268 ubox
56 60 0.016094262 ubox
56 61 0.004034351 ubox
57 63 0.003466252 ubox
57 65 0.003446497 ubox
61 81 0.008299263 ubox
62 68 0.007480902 ubox
62 80 0.009471351 ubox
63 67 0.007008552 ubox
63 78 0.010149156 ubox
63 79 0.009200418 ubox
64 77 0.011491830 ubox
67 76 0.051352851 ubox
68 75 0.051860882 ubox
68 77 0.073805184 ubox
69 76 0.307708388 ubox
69 80 0.060913936 ubox
70 75 0.293216245 ubox
70 78 0.264554489 ubox
70 79 0.054173145 ubox
71 77 0.284319591 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
