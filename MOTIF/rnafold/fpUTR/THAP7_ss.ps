%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUCGGCGGCGCAGCAAUGGCCAGAGCGUGAGUGCCGCUGACAGAAGUCAAGAGAAUCGGCUGGGACGGGGUUGGGGCGACAACGGGCCGGGGGGGACCCGACAGGCCAGAGCCCCUUGGGGAGGAGCGGCGGCUGGAGGCGCGAGGCUCCUCCGGAUGCCCGGAGAGCCGCUUGCGACUUAACUCCCGCCUCUUUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[83.60116577 122.23647308]
[72.95038605 111.35597229]
[61.90633774 121.50629425]
[50.86228561 131.65661621]
[39.81823730 141.80693054]
[28.77418900 151.95724487]
[17.73013878 162.10757446]
[7.00233221 172.59156799]
[-3.39915514 183.39938354]
[-13.80064297 194.20721436]
[-24.20212936 205.01502991]
[-34.60361862 215.82286072]
[-45.00510406 226.63067627]
[-55.40659332 237.43850708]
[-65.80808258 248.24632263]
[-63.27045441 259.86666870]
[-66.62511444 271.15292358]
[-74.92711639 279.33227539]
[-86.03124237 282.45364380]
[-97.14549255 279.85241699]
[-107.87330627 290.33642578]
[-118.60111237 300.82040405]
[-117.23700714 316.39837646]
[-126.24767303 329.17892456]
[-141.37854004 333.12744141]
[-155.48529053 326.37954712]
[-161.90713501 312.12142944]
[-157.61187744 297.08532715]
[-144.62760925 288.37078857]
[-129.08509827 290.09262085]
[-118.35729980 279.60861206]
[-107.62949371 269.12460327]
[-108.52434540 250.84378052]
[-95.55375671 237.48173523]
[-76.61590576 237.84484863]
[-66.21441650 227.03701782]
[-55.81292725 216.22918701]
[-45.41144180 205.42137146]
[-35.00995255 194.61354065]
[-24.60846710 183.80572510]
[-14.20697880 172.99789429]
[-3.80549145 162.19007874]
[-3.72683001 159.38342285]
[-2.52900362 156.43894958]
[-0.15397656 153.78407288]
[3.30028510 151.85928345]
[7.57982016 151.06352234]
[18.62386894 140.91319275]
[29.66791916 130.76287842]
[40.71196747 120.61256409]
[51.75601578 110.46224213]
[62.80006790 100.31192017]
[48.24168015 103.92486572]
[36.72620392 113.53704071]
[22.76807785 119.02982330]
[7.79015207 119.84329987]
[-6.68076038 115.89453888]
[-19.16953087 107.58607483]
[-28.40308762 95.76484680]
[-33.44018555 81.63587952]
[-33.76735306 66.63945007]
[-29.35124397 52.30424881]
[-20.64202118 40.09157562]
[-8.52748108 31.24635315]
[5.75744915 26.67024422]
[20.75660133 26.82972717]
[34.94100189 31.70854187]
[46.86472321 40.80935669]
[55.31229782 53.20445251]
[59.42259216 67.63022614]
[69.42420959 78.80911255]
[66.00640869 64.20368195]
[62.58860779 49.59825134]
[59.17080307 34.99282074]
[55.75300217 20.38739014]
[52.33519745 5.78195906]
[39.19050217 -2.57595134]
[35.93242264 -17.43662453]
[43.98141861 -29.91657639]
[40.56361771 -44.52200699]
[37.14581299 -59.12744141]
[23.56240845 -62.47800827]
[12.79980946 -71.31285095]
[6.92286682 -83.86318970]
[7.02720976 -97.65481567]
[13.03544521 -109.99579620]
[23.72339249 -118.50193024]
[20.52980804 -133.15802002]
[17.33622360 -147.81411743]
[14.14263916 -162.47019958]
[10.83684921 -177.10139465]
[7.41904640 -191.70683289]
[-5.39833260 -201.35536194]
[-5.70225477 -217.39553833]
[6.74042320 -227.52270508]
[22.38474274 -223.96815491]
[29.22972107 -209.45864868]
[22.02447701 -195.12463379]
[25.44227982 -180.51919556]
[30.02947044 -174.71984863]
[28.79873085 -165.66378784]
[31.99231529 -151.00769043]
[35.18589783 -136.35160828]
[38.37948227 -121.69551086]
[53.88655853 -117.15982819]
[65.05559540 -105.35572815]
[68.77033234 -89.43891144]
[63.92502213 -73.73078918]
[51.75124741 -62.54524231]
[55.16904831 -47.93981171]
[58.58684921 -33.33438110]
[71.33768463 -25.72177505]
[75.01188660 -10.95847797]
[66.94062805 2.36415648]
[70.35843658 16.96958733]
[73.77623749 31.57501984]
[77.19403839 46.18045044]
[80.61183929 60.78588104]
[84.02964020 75.39131165]
[111.37181091 76.70543671]
[122.42266083 98.04747772]
[136.94567871 101.80008698]
[151.46868896 105.55269623]
[165.99169922 109.30530548]
[180.51470947 113.05791473]
[195.03773499 116.81052399]
[209.56074524 120.56313324]
[224.08375549 124.31574249]
[238.60676575 128.06834412]
[253.12979126 131.82095337]
[267.68112183 135.46217346]
[282.25994873 138.99179077]
[296.83874512 142.52140808]
[305.92071533 141.49914551]
[311.61309814 146.21842957]
[326.13610840 149.97103882]
[338.10391235 140.27165222]
[353.31048584 139.48828125]
[365.91342163 147.71202087]
[371.19403076 161.61357117]
[385.71704102 165.36618042]
[400.24005127 169.11878967]
[415.53707886 165.07997131]
[425.92395020 175.75526428]
[440.44696045 179.50787354]
[454.96997070 183.26048279]
[469.49298096 187.01309204]
[484.01602173 190.76570129]
[498.59481812 194.29531860]
[513.22601318 197.60110474]
[527.85717773 200.90689087]
[542.48840332 204.21269226]
[557.11956787 207.51847839]
[566.18481445 206.35716248]
[571.94885254 210.98866272]
[586.52764893 214.51828003]
[601.10644531 218.04788208]
[615.68530273 221.57749939]
[630.26409912 225.10711670]
[645.83557129 219.96305847]
[657.89447021 231.07679749]
[654.03564453 247.01547241]
[638.22869873 251.38273621]
[626.73449707 239.68592834]
[612.15570068 236.15631104]
[597.57684326 232.62669373]
[582.99804688 229.09709167]
[568.41925049 225.56747437]
[553.81378174 222.14967346]
[539.18261719 218.84387207]
[524.55139160 215.53808594]
[509.92022705 212.23229980]
[495.28903198 208.92651367]
[490.84057617 210.67625427]
[485.24548340 209.64671326]
[480.26339722 205.28871155]
[465.74038696 201.53610229]
[451.21737671 197.78349304]
[436.69436646 194.03088379]
[422.17135620 190.27827454]
[407.91311646 194.58551025]
[396.48745728 183.64179993]
[381.96444702 179.88919067]
[367.44143677 176.13658142]
[356.08737183 185.73989868]
[341.07809448 186.82890320]
[328.15451050 178.77696228]
[322.38348389 164.49404907]
[307.86047363 160.74143982]
[293.30914307 157.10021973]
[278.73031616 153.57060242]
[264.15151978 150.04098511]
[256.90731812 151.52311707]
[249.37718201 146.34397888]
[234.85415649 142.59136963]
[220.33114624 138.83876038]
[205.80813599 135.08615112]
[191.28512573 131.33354187]
[176.76210022 127.58092499]
[162.23908997 123.82831573]
[147.71607971 120.07570648]
[133.19306946 116.32309723]
[118.67005157 112.57048798]
[110.32132721 121.90494537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 52]
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[20 32]
[21 31]
[22 30]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[79 111]
[80 110]
[81 109]
[87 104]
[88 103]
[89 102]
[90 101]
[91 99]
[92 98]
[121 203]
[122 202]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[129 195]
[130 194]
[131 192]
[132 191]
[133 190]
[135 189]
[136 188]
[140 184]
[141 183]
[142 182]
[144 180]
[145 179]
[146 178]
[147 177]
[148 176]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
