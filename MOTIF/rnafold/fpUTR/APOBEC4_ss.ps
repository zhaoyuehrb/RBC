%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUUCUUAGAGGUAGCCACACCUCAGCAAGGGCUUUCUAACUUGGAACAGCAAAGUUCAAAUGAACGAAUAGACACAAACUGUGAAAGAGUCCUGAACCCAUUACAAGGUGAAUCUUUACAGCACAAUUGCCUUCUGAAGCUACUUGAAACAGGGCAUGGGACUUAAAGGAGAAAAAAAAGGAAAUGGACCAUCUCUUCUAACACCUGGAAUGUGAUCCAAGCCUGGAGACAAAUUGAUGGUUUGCAGCUAGA\
AGACAGUAAAUCUAGCA\
) } def
/len { sequence length } bind def

/coor [
[203.52798462 228.06248474]
[191.64346313 213.24829102]
[184.73777771 195.53523254]
[183.45658875 176.54736328]
[187.92930603 158.02937317]
[174.85346985 150.67935181]
[161.77764893 143.32933044]
[148.70182800 135.97930908]
[135.62599182 128.62930298]
[121.17704773 160.05410767]
[82.51381683 179.75894165]
[76.31829834 193.41966248]
[70.12277985 207.08039856]
[63.92726517 220.74113464]
[57.73174667 234.40185547]
[63.52738953 249.10511780]
[57.15221024 263.56655884]
[42.38848877 269.20642090]
[27.99528122 262.67868042]
[22.51181984 247.85617065]
[29.19134712 233.53277588]
[44.07101822 228.20634460]
[50.26653671 214.54560852]
[56.46205139 200.88487244]
[62.65756989 187.22415161]
[68.85308838 173.56341553]
[63.18239975 168.65492249]
[53.36542130 179.99630737]
[43.54843903 191.33769226]
[29.37609863 196.25141907]
[32.20706177 181.52070618]
[42.02404022 170.17932129]
[51.84101868 158.83795166]
[46.17033005 153.92945862]
[33.53881836 162.01925659]
[20.90730286 170.10905457]
[8.32254601 178.27140808]
[-4.21503830 186.50602722]
[-16.75262260 194.74064636]
[-29.29020691 202.97526550]
[-41.82778931 211.20988464]
[-51.74746704 224.95893860]
[-67.70523834 219.23304749]
[-66.62066650 202.31382751]
[-50.06241226 198.67230225]
[-37.52482605 190.43768311]
[-24.98724365 182.20306396]
[-12.44965935 173.96844482]
[0.08792527 165.73382568]
[3.93916488 159.45849609]
[12.81750298 157.47753906]
[25.44901657 149.38774109]
[38.08052826 141.29794312]
[35.50186539 134.25518799]
[20.72472763 131.67910767]
[30.34453964 120.16966248]
[27.76587486 113.12689972]
[12.89703465 115.10617828]
[-1.97180688 117.08546448]
[-16.84064865 119.06475067]
[-29.49950790 129.48997498]
[-44.76047897 123.48707581]
[-46.92438126 107.23131561]
[-33.76517868 97.44523621]
[-18.81993103 104.19590759]
[-3.95108986 102.21662140]
[10.91775131 100.23734283]
[25.78659248 98.25805664]
[26.39009094 90.78237915]
[11.43873215 89.57537842]
[-3.51262760 88.36837769]
[-15.85740280 79.84743500]
[-2.30562901 73.41702271]
[12.64573097 74.62401581]
[27.59708977 75.83101654]
[28.20059013 68.35533905]
[13.84179497 64.01655579]
[-0.51699907 59.67777252]
[-14.87579346 55.33899307]
[-31.78676605 56.54536438]
[-37.62741852 40.62923813]
[-23.95015144 30.61081886]
[-10.53701115 40.98019791]
[3.82178283 45.31898117]
[18.18057632 49.65776062]
[32.53937149 53.99654388]
[47.04606247 50.23839951]
[60.92568207 49.71918869]
[73.54948425 52.13035202]
[84.37254333 57.05083466]
[81.62628174 42.30437469]
[78.88002014 27.55791664]
[76.13375854 12.81145763]
[73.38749695 -1.93500090]
[70.64123535 -16.68145943]
[67.89497375 -31.42791939]
[54.04216003 -38.16629028]
[46.89686584 -51.61241150]
[49.01419067 -66.51143646]
[59.37464905 -77.17909241]
[56.62838745 -91.92555237]
[53.88212585 -106.67200470]
[39.04999542 -109.87880707]
[26.60912704 -118.49668121]
[18.43758202 -131.18681335]
[15.75439262 -145.99856567]
[18.93779373 -160.66931152]
[27.47225380 -172.97006226]
[40.03166580 -181.04412842]
[37.28540421 -195.79058838]
[34.53914261 -210.53704834]
[31.79288101 -225.28350830]
[29.04662132 -240.02996826]
[19.77459908 -245.62710571]
[15.18931675 -255.19662476]
[16.57826042 -265.49560547]
[23.24772453 -273.17745972]
[20.84155464 -287.98321533]
[18.43538666 -302.78897095]
[16.02921677 -317.59472656]
[13.62304783 -332.40048218]
[-2.17015147 -342.91583252]
[-5.17198610 -361.32580566]
[6.06997633 -375.80697632]
[3.32371545 -390.55343628]
[0.57745415 -405.29989624]
[-10.48903465 -417.40216064]
[-5.28411150 -432.95339966]
[10.83784580 -435.95581055]
[21.29194832 -423.32080078]
[15.32391262 -408.04617310]
[18.07017517 -393.29971313]
[20.81643486 -378.55325317]
[31.36188889 -374.31326294]
[38.63948441 -365.42764282]
[40.76247406 -354.01828003]
[37.09325790 -342.88241577]
[28.42880249 -334.80667114]
[30.83497047 -320.00091553]
[33.24113846 -305.19515991]
[35.64730835 -290.38940430]
[38.05347824 -275.58364868]
[51.33122635 -261.49795532]
[43.79307938 -242.77622986]
[46.53934097 -228.02976990]
[49.28560257 -213.28330994]
[52.03186417 -198.53684998]
[54.77812576 -183.79039001]
[69.40205383 -180.77873230]
[81.79237366 -172.37484741]
[90.04351807 -159.83357239]
[92.87213135 -145.04890442]
[89.81658173 -130.26792908]
[81.31199646 -117.74933624]
[68.62858582 -109.41826630]
[71.37484741 -94.67181396]
[74.12110901 -79.92535400]
[87.62713623 -73.70240021]
[94.96585083 -60.56438828]
[93.13989258 -45.44753647]
[82.64143372 -34.17417908]
[85.38769531 -19.42772102]
[88.13395691 -4.68126202]
[90.88021851 10.06519699]
[93.62648010 24.81165504]
[96.37274170 39.55811310]
[99.11900330 54.30457306]
[116.44994354 57.35908508]
[131.34202576 66.73551941]
[141.58735657 81.04371643]
[145.66696167 98.16236877]
[142.97601318 115.55346680]
[156.05183411 122.90348816]
[169.12767029 130.25350952]
[182.20349121 137.60351562]
[195.27932739 144.95353699]
[203.98591614 135.37062073]
[214.46568298 127.77936554]
[226.27215576 122.49958038]
[238.90304565 119.75270844]
[251.82167053 119.65245819]
[264.47970581 122.20018005]
[276.34054565 127.28488159]
[286.90191650 134.68809509]
[295.71725464 144.09320068]
[302.41455078 155.09907532]
[306.71206665 167.23707581]
[308.43014526 179.99108887]
[307.49874878 192.81941223]
[321.85754395 197.15818787]
[336.21633911 201.49697876]
[350.57513428 205.83575439]
[364.93392944 210.17453003]
[379.29272461 214.51332092]
[393.65151978 218.85209656]
[408.01031494 223.19088745]
[422.51031494 227.03146362]
[437.13424683 230.36927795]
[451.75814819 233.70709229]
[466.38208008 237.04490662]
[481.00598145 240.38272095]
[488.45758057 229.51875305]
[499.12503052 221.84289551]
[511.73229980 218.24667358]
[524.78039551 219.13520813]
[536.72540283 224.38174438]
[546.16131592 233.34509277]
[551.98553467 244.94805908]
[553.52752686 257.80673218]
[568.07073975 261.48019409]
[582.61401367 265.15368652]
[597.15722656 268.82714844]
[610.59893799 260.51473999]
[625.96203613 264.22296143]
[634.13183594 277.75180054]
[630.26141357 293.07482910]
[616.64697266 301.10116577]
[601.36572266 297.06893921]
[593.48376465 283.37039185]
[578.94055176 279.69689941]
[564.39727783 276.02343750]
[549.85406494 272.34997559]
[539.37054443 285.63912964]
[524.07470703 293.01647949]
[507.03729248 292.94692993]
[491.70257568 285.39584351]
[481.19183350 271.84600830]
[477.66818237 255.00663757]
[463.04425049 251.66882324]
[448.42034912 248.33100891]
[433.79641724 244.99319458]
[419.17251587 241.65538025]
[426.43127441 254.78208923]
[422.38485718 269.22598267]
[409.36294556 276.67114258]
[394.86282349 272.83099365]
[387.23284912 259.91653442]
[390.86590576 245.36315918]
[403.67153931 237.54968262]
[389.31274414 233.21089172]
[374.95394897 228.87211609]
[360.59515381 224.53332520]
[346.23635864 220.19454956]
[331.87756348 215.85577393]
[317.51876831 211.51698303]
[303.15997314 207.17820740]
[297.49017334 217.37442017]
[290.02191162 226.33738708]
[281.01611328 233.75395203]
[270.78744507 239.36499023]
[275.04354858 253.74851990]
[279.29965210 268.13204956]
[283.55572510 282.51556396]
[287.81182861 296.89907837]
[292.06790161 311.28259277]
[307.01995850 314.79431152]
[318.20196533 325.32321167]
[322.60601807 340.03717041]
[319.04748535 354.97811890]
[308.48355103 366.12707520]
[293.75588989 370.48498535]
[278.82617188 366.87963867]
[267.71038818 356.28082275]
[263.39865112 341.53955078]
[267.05078125 326.62118530]
[277.68438721 315.53869629]
[273.42831421 301.15518188]
[269.17221069 286.77166748]
[264.91610718 272.38812256]
[260.66003418 258.00460815]
[256.40393066 243.62109375]
[237.47332764 243.96958923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[34 53]
[35 52]
[36 51]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[57 68]
[58 67]
[59 66]
[60 65]
[76 86]
[77 85]
[78 84]
[79 83]
[90 167]
[91 166]
[92 165]
[93 164]
[94 163]
[95 162]
[96 161]
[100 157]
[101 156]
[102 155]
[109 148]
[110 147]
[111 146]
[112 145]
[113 144]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[124 133]
[125 132]
[126 131]
[189 246]
[190 245]
[191 244]
[192 243]
[193 242]
[194 241]
[195 240]
[196 239]
[197 232]
[198 231]
[199 230]
[200 229]
[201 228]
[209 222]
[210 221]
[211 220]
[212 219]
[250 271]
[251 270]
[252 269]
[253 268]
[254 267]
[255 266]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
