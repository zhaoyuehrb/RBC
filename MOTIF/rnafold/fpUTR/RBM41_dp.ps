%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RBM41)
} def

/sequence { (\
GAAGUUCAGGAAGGGCUGCCACCGGGGCCGGCUGCUGUGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.065176713 ubox
2 6 0.056870019 ubox
3 17 0.649918233 ubox
3 33 0.011571100 ubox
3 36 0.089949929 ubox
4 16 0.670200968 ubox
4 19 0.031894713 ubox
4 22 0.017994577 ubox
4 28 0.052834874 ubox
4 32 0.011925331 ubox
4 35 0.092271208 ubox
4 38 0.009320236 ubox
5 11 0.007514277 ubox
5 12 0.007462246 ubox
5 13 0.003338718 ubox
5 14 0.005315243 ubox
5 15 0.669394238 ubox
5 18 0.019472985 ubox
5 21 0.020386463 ubox
5 26 0.022752587 ubox
5 27 0.066128416 ubox
5 31 0.011536097 ubox
5 34 0.068560040 ubox
5 37 0.012797828 ubox
5 40 0.042776327 ubox
5 41 0.393410498 ubox
5 42 0.202079669 ubox
6 10 0.007372965 ubox
6 11 0.007903336 ubox
6 12 0.005041865 ubox
6 13 0.006638066 ubox
6 14 0.667081902 ubox
6 15 0.026154042 ubox
6 25 0.028667457 ubox
6 26 0.075241440 ubox
6 27 0.018492947 ubox
6 30 0.010326570 ubox
6 31 0.003761664 ubox
6 39 0.043231949 ubox
6 40 0.498639117 ubox
6 41 0.241074388 ubox
6 42 0.148893991 ubox
7 13 0.666959212 ubox
7 14 0.036651021 ubox
7 18 0.191436668 ubox
7 24 0.030511105 ubox
7 25 0.077777860 ubox
7 26 0.024063897 ubox
7 30 0.004810221 ubox
7 34 0.115741076 ubox
7 37 0.186620727 ubox
7 39 0.540076036 ubox
7 40 0.254669305 ubox
7 41 0.174532230 ubox
8 17 0.194481484 ubox
8 33 0.122928475 ubox
8 36 0.188406956 ubox
8 38 0.530293136 ubox
9 16 0.194650338 ubox
9 17 0.010481003 ubox
9 20 0.080651357 ubox
9 23 0.093431996 ubox
9 29 0.010492439 ubox
9 32 0.123559324 ubox
9 33 0.031726220 ubox
9 35 0.186805542 ubox
9 36 0.159107865 ubox
10 16 0.011626982 ubox
10 19 0.080681560 ubox
10 22 0.093513389 ubox
10 28 0.010495830 ubox
10 32 0.034701668 ubox
10 35 0.174508766 ubox
12 33 0.062015973 ubox
12 36 0.305291616 ubox
13 20 0.179483100 ubox
13 23 0.018554451 ubox
13 29 0.047935495 ubox
13 32 0.062263670 ubox
13 33 0.069331995 ubox
13 35 0.310005328 ubox
13 36 0.018971621 ubox
14 19 0.179523403 ubox
14 20 0.035908907 ubox
14 22 0.018563971 ubox
14 23 0.011791321 ubox
14 28 0.046661065 ubox
14 29 0.197128201 ubox
14 32 0.052879423 ubox
14 33 0.623222374 ubox
14 35 0.017795459 ubox
14 36 0.049198905 ubox
15 19 0.035404302 ubox
15 22 0.011765811 ubox
15 28 0.197635351 ubox
15 32 0.648421092 ubox
15 35 0.051319629 ubox
15 38 0.017187723 ubox
16 25 0.011224264 ubox
16 26 0.044463318 ubox
16 27 0.197863137 ubox
16 31 0.650157394 ubox
16 34 0.051308753 ubox
16 37 0.017758174 ubox
16 40 0.007565555 ubox
16 41 0.004677563 ubox
17 24 0.013394773 ubox
17 25 0.043166994 ubox
17 26 0.182829626 ubox
17 30 0.643720429 ubox
17 39 0.007761886 ubox
17 40 0.003544404 ubox
18 23 0.016279686 ubox
18 28 0.468306045 ubox
18 29 0.457892918 ubox
18 32 0.052970325 ubox
18 35 0.073233337 ubox
18 36 0.003364195 ubox
18 38 0.010528209 ubox
19 25 0.150570978 ubox
19 26 0.137725123 ubox
19 27 0.655141917 ubox
19 31 0.052987386 ubox
19 34 0.072179914 ubox
19 37 0.010456061 ubox
19 40 0.324162685 ubox
19 41 0.075515505 ubox
20 24 0.150055382 ubox
20 25 0.142114821 ubox
20 26 0.653916297 ubox
20 30 0.052820627 ubox
20 34 0.020517354 ubox
20 37 0.008632494 ubox
20 39 0.325337479 ubox
20 40 0.057325276 ubox
21 33 0.024332714 ubox
21 36 0.009128421 ubox
21 38 0.325292349 ubox
22 31 0.079677057 ubox
22 37 0.316671496 ubox
22 40 0.611615975 ubox
22 41 0.030965426 ubox
23 30 0.080881690 ubox
23 34 0.242117141 ubox
23 37 0.065283619 ubox
23 39 0.615001695 ubox
23 40 0.024833148 ubox
24 29 0.080124260 ubox
24 33 0.250429872 ubox
24 36 0.088009203 ubox
24 38 0.613775819 ubox
25 32 0.250429113 ubox
25 33 0.072043244 ubox
25 35 0.087740088 ubox
25 36 0.050605773 ubox
26 32 0.074639396 ubox
26 33 0.081147844 ubox
26 35 0.053958429 ubox
26 36 0.632462299 ubox
27 32 0.083871980 ubox
27 35 0.633824493 ubox
28 34 0.632662626 ubox
28 40 0.015084093 ubox
28 41 0.176196757 ubox
29 37 0.009902507 ubox
29 39 0.016676498 ubox
29 40 0.198141110 ubox
30 36 0.010433884 ubox
30 38 0.013225861 ubox
31 35 0.010271160 ubox
31 38 0.198669696 ubox
32 37 0.199223350 ubox
32 40 0.007673876 ubox
32 41 0.015075675 ubox
33 39 0.007555249 ubox
33 40 0.015040662 ubox
34 38 0.003693249 ubox
35 41 0.020681656 ubox
36 40 0.018744216 ubox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
