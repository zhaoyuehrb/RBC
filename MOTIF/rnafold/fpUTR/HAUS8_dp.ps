%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HAUS8)
} def

/sequence { (\
GCCUCGCAGCCACCCCUCCUGCGUCUCCACAAAUGGUCCGACCCGCAAGCAAGGGGGCGGGUCCGGCUUUGAAAAGCCGGCGGGUCGGGCCUUGAGGUGGAAGGCGGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.487458169 ubox
1 10 0.528000119 ubox
1 105 0.289973409 ubox
2 6 0.484278439 ubox
2 9 0.526881856 ubox
2 104 0.290189890 ubox
2 107 0.035431710 ubox
2 108 0.072041305 ubox
3 9 0.070263405 ubox
3 103 0.290071338 ubox
3 106 0.035511205 ubox
3 107 0.072202352 ubox
3 108 0.058356823 ubox
4 8 0.074846991 ubox
4 101 0.004406242 ubox
4 102 0.273874669 ubox
4 106 0.062679380 ubox
4 107 0.058481180 ubox
4 108 0.004735602 ubox
4 109 0.010048481 ubox
5 23 0.280997375 ubox
5 106 0.063780913 ubox
5 107 0.006053955 ubox
5 108 0.010469899 ubox
6 22 0.309849021 ubox
6 105 0.030243872 ubox
7 21 0.310370257 ubox
7 104 0.030086771 ubox
8 17 0.032681298 ubox
8 20 0.309924251 ubox
9 16 0.050630497 ubox
9 19 0.307289385 ubox
9 22 0.012731669 ubox
9 24 0.007778775 ubox
9 105 0.004365256 ubox
10 21 0.012383725 ubox
10 23 0.008194395 ubox
10 100 0.023711953 ubox
10 104 0.004442669 ubox
10 108 0.008239295 ubox
11 21 0.009277315 ubox
11 99 0.023788321 ubox
11 103 0.004519667 ubox
11 107 0.008239794 ubox
12 20 0.009142788 ubox
12 98 0.023560040 ubox
13 97 0.022042557 ubox
13 100 0.009352832 ubox
13 107 0.007232944 ubox
13 108 0.028847455 ubox
14 96 0.021301476 ubox
14 99 0.009368233 ubox
14 104 0.004616373 ubox
14 106 0.007216514 ubox
14 107 0.028450576 ubox
14 108 0.163780856 ubox
15 97 0.012724625 ubox
15 103 0.004636107 ubox
15 104 0.007096742 ubox
15 106 0.026482990 ubox
15 107 0.164248401 ubox
15 108 0.024815842 ubox
16 96 0.013718835 ubox
16 103 0.007289012 ubox
16 106 0.163653773 ubox
16 107 0.024827823 ubox
16 108 0.010490074 ubox
17 95 0.016318497 ubox
17 101 0.005099407 ubox
17 102 0.006942637 ubox
17 106 0.014634434 ubox
17 107 0.008793920 ubox
17 108 0.012029080 ubox
17 109 0.888199364 ubox
18 94 0.016439378 ubox
18 100 0.005516779 ubox
18 104 0.161775037 ubox
18 106 0.006131641 ubox
18 107 0.015411253 ubox
18 108 0.933390735 ubox
19 99 0.005485593 ubox
19 100 0.004753226 ubox
19 103 0.161841217 ubox
19 106 0.014571755 ubox
19 107 0.933424643 ubox
19 108 0.033574964 ubox
20 29 0.007076940 ubox
20 31 0.009591665 ubox
20 99 0.004780365 ubox
20 102 0.161031032 ubox
20 106 0.916595601 ubox
20 107 0.030768643 ubox
21 28 0.007930965 ubox
21 30 0.010356158 ubox
21 98 0.007239602 ubox
21 105 0.913130162 ubox
22 97 0.007372377 ubox
22 99 0.010939616 ubox
22 104 0.911677027 ubox
22 106 0.179239814 ubox
23 30 0.010549069 ubox
23 98 0.010482719 ubox
23 105 0.232203477 ubox
24 29 0.009664722 ubox
24 95 0.007875839 ubox
24 97 0.010800441 ubox
24 100 0.022137053 ubox
24 101 0.074700511 ubox
24 104 0.235527638 ubox
25 94 0.007838386 ubox
25 96 0.011582709 ubox
25 99 0.025810418 ubox
25 100 0.073893096 ubox
25 103 0.347281425 ubox
25 104 0.003740923 ubox
26 95 0.011898523 ubox
26 99 0.068956580 ubox
26 100 0.004111004 ubox
26 101 0.928257684 ubox
26 102 0.246727098 ubox
26 103 0.004051358 ubox
27 94 0.011451217 ubox
27 97 0.077943923 ubox
27 99 0.004806481 ubox
27 100 0.996282133 ubox
28 96 0.077912465 ubox
28 99 0.996463871 ubox
29 98 0.996207257 ubox
30 94 0.081133764 ubox
30 97 0.994992654 ubox
31 93 0.085350541 ubox
32 92 0.072389886 ubox
32 93 0.174497041 ubox
33 92 0.181852586 ubox
34 94 0.025526406 ubox
35 91 0.999046646 ubox
35 92 0.024029983 ubox
36 90 0.999837922 ubox
36 91 0.017309953 ubox
37 89 0.999654084 ubox
38 88 0.999965757 ubox
39 87 0.999975621 ubox
40 86 0.999965220 ubox
41 62 0.007017422 ubox
41 85 0.999844062 ubox
42 61 0.008916689 ubox
42 84 0.999948172 ubox
43 60 0.014949822 ubox
43 83 0.999880247 ubox
44 59 0.019165531 ubox
44 82 0.999741700 ubox
45 58 0.041945749 ubox
45 62 0.192775471 ubox
45 81 0.974974325 ubox
46 57 0.042156388 ubox
46 61 0.351931791 ubox
46 80 0.904194869 ubox
47 69 0.041156066 ubox
47 70 0.003266589 ubox
48 68 0.042602514 ubox
49 58 0.772505382 ubox
49 62 0.050948100 ubox
49 67 0.042982938 ubox
49 77 0.488260635 ubox
50 57 0.772465606 ubox
50 61 0.052769962 ubox
50 66 0.042937682 ubox
50 71 0.020546465 ubox
50 76 0.487628516 ubox
50 80 0.003314670 ubox
51 69 0.028178217 ubox
51 70 0.032345781 ubox
52 68 0.028709813 ubox
52 69 0.031099905 ubox
52 70 0.013493105 ubox
53 63 0.050734978 ubox
53 64 0.243513844 ubox
53 67 0.028732017 ubox
53 68 0.028905660 ubox
53 69 0.013051679 ubox
53 70 0.376225674 ubox
54 62 0.049144213 ubox
54 63 0.257502673 ubox
54 64 0.217829111 ubox
54 67 0.028261032 ubox
54 68 0.011587633 ubox
54 69 0.384474107 ubox
54 70 0.281074920 ubox
55 62 0.241122650 ubox
55 63 0.227313425 ubox
55 64 0.150499212 ubox
55 67 0.009648905 ubox
55 68 0.389281193 ubox
55 69 0.288233018 ubox
55 70 0.019099944 ubox
56 62 0.216793894 ubox
56 63 0.156756658 ubox
56 64 0.043199196 ubox
56 67 0.390268163 ubox
56 68 0.291925965 ubox
56 69 0.013540555 ubox
56 70 0.005227745 ubox
56 78 0.003934626 ubox
57 62 0.106501346 ubox
57 63 0.044375696 ubox
57 67 0.292938638 ubox
57 69 0.003275086 ubox
57 77 0.003963778 ubox
58 65 0.395011817 ubox
58 66 0.286681317 ubox
58 71 0.003770989 ubox
58 76 0.003967795 ubox
59 64 0.394966263 ubox
59 68 0.005646797 ubox
59 69 0.004562419 ubox
59 70 0.003362168 ubox
59 81 0.007598437 ubox
60 67 0.005867437 ubox
60 68 0.005769251 ubox
61 67 0.006055067 ubox
61 81 0.081558397 ubox
62 66 0.005670666 ubox
62 72 0.003513360 ubox
62 80 0.013378464 ubox
63 71 0.003461058 ubox
63 79 0.031430828 ubox
63 80 0.421579098 ubox
64 79 0.787213794 ubox
65 78 0.870370573 ubox
66 77 0.870550046 ubox
67 76 0.870524747 ubox
68 74 0.027449131 ubox
68 75 0.858525671 ubox
68 76 0.004087768 ubox
69 73 0.032518089 ubox
69 74 0.746803585 ubox
69 75 0.027821114 ubox
70 74 0.032768123 ubox
70 75 0.015286601 ubox
70 79 0.011509655 ubox
71 78 0.014190043 ubox
17 109 0.9500000 lbox
18 108 0.9500000 lbox
19 107 0.9500000 lbox
20 106 0.9500000 lbox
21 105 0.9500000 lbox
22 104 0.9500000 lbox
26 101 0.9500000 lbox
27 100 0.9500000 lbox
28 99 0.9500000 lbox
29 98 0.9500000 lbox
30 97 0.9500000 lbox
35 91 0.9500000 lbox
36 90 0.9500000 lbox
37 89 0.9500000 lbox
38 88 0.9500000 lbox
39 87 0.9500000 lbox
40 86 0.9500000 lbox
41 85 0.9500000 lbox
42 84 0.9500000 lbox
43 83 0.9500000 lbox
44 82 0.9500000 lbox
45 81 0.9500000 lbox
46 80 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
64 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
