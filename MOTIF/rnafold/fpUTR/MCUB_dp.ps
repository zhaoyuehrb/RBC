%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MCUB)
} def

/sequence { (\
AGCUGGAGCCGCGGCGCGCUGAGCGAGCAGGCGGGGCGGGAGCGCCCACAGCUCGGAGCCACCAGGCGCUGACGAGGAGCCCGGCUGAGGGAGGAUGCGCCGCUGACGCCUGCGGGAGCCGCGCGCCUGGGGCGGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.003908957 ubox
2 133 0.024545293 ubox
3 8 0.005213257 ubox
3 132 0.024564902 ubox
3 135 0.101690043 ubox
3 136 0.139663022 ubox
3 138 0.912945089 ubox
3 139 0.197632119 ubox
4 131 0.023339822 ubox
4 134 0.101238132 ubox
4 135 0.132679003 ubox
4 137 0.910885695 ubox
4 138 0.200992189 ubox
5 133 0.061774041 ubox
8 133 0.994877630 ubox
9 130 0.057662019 ubox
9 131 0.049455925 ubox
9 132 0.995137912 ubox
9 135 0.062005919 ubox
9 136 0.003434952 ubox
10 129 0.057801461 ubox
10 130 0.056671106 ubox
10 131 0.994626899 ubox
10 134 0.062306169 ubox
11 128 0.057400360 ubox
11 133 0.062358258 ubox
12 129 0.988877460 ubox
12 132 0.062299356 ubox
13 127 0.971980339 ubox
13 128 0.232603083 ubox
14 126 0.985831107 ubox
14 127 0.167646120 ubox
15 125 0.998958164 ubox
16 124 0.998969918 ubox
16 126 0.044891129 ubox
17 123 0.998969859 ubox
17 125 0.044895169 ubox
18 119 0.003673388 ubox
18 122 0.998937251 ubox
18 124 0.044894710 ubox
19 118 0.004071149 ubox
19 121 0.984018170 ubox
19 123 0.044869506 ubox
20 117 0.005044035 ubox
20 121 0.174336446 ubox
21 120 0.809569871 ubox
21 122 0.004040503 ubox
23 119 0.990124277 ubox
24 114 0.008332020 ubox
24 118 0.990108113 ubox
25 113 0.003540393 ubox
27 113 0.999742415 ubox
28 112 0.999984741 ubox
29 111 0.999754160 ubox
30 110 0.999987423 ubox
31 109 0.999994248 ubox
32 105 0.004246498 ubox
32 108 0.999954044 ubox
33 104 0.014914110 ubox
33 107 0.996734054 ubox
34 47 0.035427907 ubox
34 103 0.031179386 ubox
34 104 0.020611057 ubox
35 46 0.035475615 ubox
35 101 0.035099844 ubox
35 103 0.015681500 ubox
35 104 0.963074703 ubox
36 45 0.035477628 ubox
36 100 0.035228128 ubox
36 103 0.998288806 ubox
37 44 0.035478284 ubox
37 99 0.035242303 ubox
37 102 0.998431615 ubox
37 105 0.016548839 ubox
38 43 0.035321826 ubox
38 98 0.035179571 ubox
38 101 0.990171773 ubox
38 104 0.016842131 ubox
39 100 0.979509591 ubox
39 101 0.129024170 ubox
39 103 0.016857340 ubox
40 54 0.004875386 ubox
40 100 0.181344293 ubox
41 53 0.005049130 ubox
41 70 0.004197299 ubox
42 52 0.005188922 ubox
42 69 0.004312582 ubox
42 98 0.985506921 ubox
42 100 0.048201143 ubox
43 51 0.005189229 ubox
43 68 0.004313487 ubox
43 97 0.985899003 ubox
43 99 0.063681642 ubox
44 67 0.004314568 ubox
44 96 0.956167680 ubox
44 98 0.063751831 ubox
45 66 0.004312495 ubox
45 90 0.015747907 ubox
45 91 0.985348840 ubox
45 94 0.122925964 ubox
45 97 0.055377778 ubox
46 65 0.004302520 ubox
46 77 0.003300168 ubox
46 89 0.015638101 ubox
46 90 0.987594004 ubox
46 91 0.082473655 ubox
46 93 0.098307564 ubox
46 94 0.079935153 ubox
47 76 0.003467840 ubox
47 89 0.987547832 ubox
47 90 0.099764777 ubox
47 93 0.079805244 ubox
49 71 0.006765110 ubox
49 87 0.993662481 ubox
49 105 0.030775983 ubox
50 70 0.006793735 ubox
50 86 0.996161006 ubox
50 104 0.030907038 ubox
51 59 0.004998303 ubox
51 69 0.006796361 ubox
51 80 0.003537622 ubox
51 85 0.996480410 ubox
51 103 0.030925974 ubox
52 58 0.005030626 ubox
52 68 0.006792796 ubox
52 76 0.029079533 ubox
52 79 0.004138347 ubox
52 84 0.990625549 ubox
52 89 0.062013369 ubox
52 90 0.005116872 ubox
52 91 0.024610003 ubox
52 93 0.003835140 ubox
52 102 0.030802408 ubox
53 57 0.004541074 ubox
53 72 0.106095461 ubox
53 75 0.030847962 ubox
53 78 0.003952466 ubox
53 83 0.240303627 ubox
53 84 0.106782022 ubox
53 88 0.062089948 ubox
53 89 0.003425534 ubox
53 90 0.024705277 ubox
53 92 0.004491599 ubox
54 71 0.133977694 ubox
54 74 0.031854101 ubox
54 77 0.003781770 ubox
54 83 0.960053541 ubox
54 87 0.062008769 ubox
54 89 0.024870554 ubox
54 91 0.004494392 ubox
54 99 0.004352773 ubox
55 63 0.023178859 ubox
55 70 0.134355994 ubox
55 73 0.031330482 ubox
55 81 0.164902738 ubox
55 82 0.973405082 ubox
55 86 0.050437714 ubox
55 98 0.004388957 ubox
55 101 0.003823302 ubox
56 62 0.023212705 ubox
56 69 0.134753254 ubox
56 80 0.165936171 ubox
56 81 0.970866291 ubox
56 85 0.046712901 ubox
56 100 0.003833415 ubox
57 70 0.016034337 ubox
57 86 0.042058291 ubox
58 67 0.929401931 ubox
58 69 0.015916491 ubox
58 80 0.317122250 ubox
58 85 0.048238458 ubox
58 98 0.003503983 ubox
59 66 0.930583842 ubox
59 68 0.015801578 ubox
59 77 0.164102816 ubox
59 79 0.316471329 ubox
59 84 0.049183773 ubox
59 91 0.003442404 ubox
59 94 0.003779542 ubox
59 97 0.003364269 ubox
60 65 0.929275838 ubox
60 71 0.007819763 ubox
60 76 0.164459775 ubox
60 83 0.049027244 ubox
60 87 0.003193707 ubox
60 90 0.003549574 ubox
60 93 0.003810116 ubox
61 70 0.007837139 ubox
61 86 0.003217343 ubox
62 77 0.309898047 ubox
62 84 0.045305380 ubox
62 90 0.003286013 ubox
63 71 0.153462957 ubox
63 76 0.309630836 ubox
63 83 0.045447526 ubox
63 87 0.003592172 ubox
63 89 0.003261938 ubox
64 70 0.154562860 ubox
64 86 0.003683621 ubox
65 69 0.151223385 ubox
65 81 0.063993109 ubox
65 82 0.037059217 ubox
65 85 0.003635656 ubox
65 86 0.003292380 ubox
65 101 0.005691614 ubox
66 80 0.067018234 ubox
66 81 0.036998660 ubox
66 85 0.003334226 ubox
66 100 0.005706771 ubox
67 74 0.279256471 ubox
67 79 0.067058772 ubox
67 83 0.003539367 ubox
67 84 0.003332284 ubox
67 99 0.005708294 ubox
68 73 0.273074304 ubox
68 80 0.910729813 ubox
68 98 0.005719989 ubox
69 76 0.113307424 ubox
69 77 0.079228691 ubox
69 79 0.912627177 ubox
69 97 0.005699670 ubox
70 75 0.113546386 ubox
70 76 0.078800355 ubox
70 78 0.909057838 ubox
73 83 0.057011849 ubox
73 99 0.013953237 ubox
74 82 0.057382425 ubox
74 98 0.014193889 ubox
76 82 0.069852336 ubox
76 101 0.013345452 ubox
77 81 0.068872163 ubox
77 100 0.013342202 ubox
78 86 0.003228564 ubox
79 85 0.003344802 ubox
79 98 0.012220923 ubox
80 84 0.003333903 ubox
80 91 0.047169300 ubox
80 97 0.011576756 ubox
81 90 0.047581705 ubox
81 91 0.004987451 ubox
81 94 0.007599760 ubox
82 89 0.047576109 ubox
82 90 0.004990631 ubox
82 93 0.007635397 ubox
83 101 0.003745841 ubox
84 100 0.003753422 ubox
85 91 0.004247335 ubox
85 93 0.006065730 ubox
85 99 0.003736928 ubox
86 90 0.003836997 ubox
86 92 0.006060858 ubox
88 104 0.009132013 ubox
89 101 0.004810068 ubox
89 103 0.009352235 ubox
90 100 0.004809785 ubox
90 101 0.010775807 ubox
90 104 0.009168579 ubox
91 100 0.010781585 ubox
91 103 0.009623962 ubox
93 101 0.024378287 ubox
94 100 0.024365986 ubox
114 120 0.017976093 ubox
115 119 0.017707150 ubox
3 138 0.9500000 lbox
4 137 0.9500000 lbox
8 133 0.9500000 lbox
9 132 0.9500000 lbox
10 131 0.9500000 lbox
12 129 0.9500000 lbox
13 128 0.9500000 lbox
14 127 0.9500000 lbox
15 125 0.9500000 lbox
16 124 0.9500000 lbox
17 123 0.9500000 lbox
18 122 0.9500000 lbox
19 121 0.9500000 lbox
23 119 0.9500000 lbox
24 118 0.9500000 lbox
27 113 0.9500000 lbox
28 112 0.9500000 lbox
29 111 0.9500000 lbox
30 110 0.9500000 lbox
31 109 0.9500000 lbox
32 108 0.9500000 lbox
33 107 0.9500000 lbox
35 104 0.9500000 lbox
36 103 0.9500000 lbox
37 102 0.9500000 lbox
38 101 0.9500000 lbox
39 100 0.9500000 lbox
42 98 0.9500000 lbox
43 97 0.9500000 lbox
44 96 0.9500000 lbox
45 91 0.9500000 lbox
46 90 0.9500000 lbox
47 89 0.9500000 lbox
49 87 0.9500000 lbox
50 86 0.9500000 lbox
51 85 0.9500000 lbox
52 84 0.9500000 lbox
54 83 0.9500000 lbox
55 82 0.9500000 lbox
56 81 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
68 80 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
showpage
end
%%EOF
