%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGUGUUGUUAGCGCGCGCCUUCCGGAUCGCAGCUCUCGCGGCAGUCGCCUGAGACUUAAGGUUAUUGCUUGGCCGCGGCCUGGUAUUCCGGCGAUUCGUUUCUUGCUCGGCUUCCUGGAGCUGUGGUCCGUGUGGGCUUCCACCUCAGACAGUUGCGCUGGCUCAGCGGGGCCGGAAC\
) } def
/len { sequence length } bind def

/coor [
[70.37770081 118.15640259]
[63.47672272 131.47468567]
[56.57574463 144.79296875]
[49.67477036 158.11123657]
[42.77379608 171.42951965]
[43.29465103 187.24215698]
[30.56944466 194.98284912]
[23.66847038 208.30111694]
[16.76749420 221.61940002]
[9.86651802 234.93768311]
[16.04478455 249.30302429]
[11.49426365 264.26385498]
[-1.63642752 272.75616455]
[-17.14737701 270.77008057]
[-27.71479034 259.24343872]
[-28.34905624 243.61871338]
[-18.75069618 231.27345276]
[-3.45175982 228.03669739]
[3.44921565 214.71842957]
[10.35019112 201.40014648]
[17.25116730 188.08186340]
[16.23670578 173.22184753]
[29.45551682 164.52854919]
[36.35649109 151.21026611]
[43.25746918 137.89198303]
[50.15844345 124.57370758]
[57.05941772 111.25543213]
[57.95526505 96.28220367]
[52.69149399 82.23611450]
[47.42772293 68.19001770]
[42.16395187 54.14392853]
[36.90018082 40.09783554]
[31.63640976 26.05174255]
[26.37263870 12.00565052]
[21.10886765 -2.04044199]
[15.84509563 -16.08653450]
[10.58132553 -30.13262749]
[5.31755400 -44.17871857]
[0.05378318 -58.22481155]
[-5.20998764 -72.27090454]
[-10.47375870 -86.31699371]
[-23.18891335 -88.35852051]
[-33.57353973 -95.77743530]
[-39.51798248 -106.94026947]
[-39.87112427 -119.46670532]
[-53.30528259 -126.13928986]
[-66.73944092 -132.81187439]
[-80.17359924 -139.48446655]
[-93.60775757 -146.15704346]
[-107.04191589 -152.82963562]
[-122.84334564 -152.03887939]
[-130.80017090 -164.63008118]
[-144.23432922 -171.30265808]
[-157.66848755 -177.97525024]
[-171.10264587 -184.64784241]
[-184.79269409 -177.34288025]
[-200.15724182 -179.51319885]
[-211.28829956 -190.32424927]
[-213.90577698 -205.61897278]
[-207.00317383 -219.51623535]
[-193.23469543 -226.67224121]
[-177.89459229 -224.33537292]
[-166.88145447 -213.40420532]
[-164.43005371 -198.08200073]
[-150.99589539 -191.40940857]
[-137.56173706 -184.73681641]
[-124.12758636 -178.06423950]
[-109.28704834 -179.33226013]
[-100.36932373 -166.26379395]
[-86.93516541 -159.59120178]
[-73.50100708 -152.91862488]
[-60.06685257 -146.24603271]
[-46.63269424 -139.57345581]
[-33.19853592 -132.90086365]
[-31.66017532 -134.45765686]
[-30.00203133 -135.88618469]
[-35.74228287 -149.74438477]
[-41.48253250 -163.60256958]
[-54.81515884 -173.15103149]
[-52.94319916 -189.44299316]
[-37.79236221 -195.71867371]
[-24.94853210 -185.52220154]
[-27.62434196 -169.34283447]
[-21.88409042 -155.48463440]
[-16.14383888 -141.62644958]
[-13.02931499 -141.80471802]
[-9.91479206 -141.62644958]
[-4.17454052 -155.48463440]
[-12.23696041 -166.68109131]
[-13.69643402 -180.29196167]
[-8.27759457 -192.74458313]
[2.50351501 -200.82351685]
[15.76178646 -202.50059509]
[21.73780251 -216.25877380]
[27.71381950 -230.01693726]
[33.57216644 -243.82562256]
[39.31241608 -257.68380737]
[45.05266953 -271.54199219]
[50.79291916 -285.40020752]
[42.57075500 -298.55981445]
[43.68749619 -314.03665161]
[53.71373749 -325.87954712]
[68.79418182 -329.53466797]
[83.13008881 -323.59655762]
[91.20901489 -310.34851074]
[89.92443848 -294.88467407]
[79.77031708 -283.15124512]
[64.65111542 -279.65994263]
[58.91086197 -265.80175781]
[53.17061234 -251.94355774]
[47.43035889 -238.08537292]
[47.77625275 -230.68479919]
[41.47198868 -224.04092407]
[35.49597168 -210.28274536]
[29.51995659 -196.52458191]
[38.30411148 -182.66970825]
[37.09565735 -166.14294434]
[26.17284966 -153.46156311]
[9.68365288 -149.74438477]
[3.94340110 -135.88618469]
[14.76550388 -113.89248657]
[3.57233381 -91.58076477]
[8.83610439 -77.53467560]
[14.09987545 -63.48858261]
[19.36364746 -49.44248962]
[24.62741852 -35.39639664]
[29.89118767 -21.35030556]
[35.15496063 -7.30421305]
[40.41873169 6.74187946]
[45.68250275 20.78797150]
[50.94627380 34.83406448]
[56.21004486 48.88015747]
[61.47381592 62.92625046]
[66.73758698 76.97234344]
[72.00135803 91.01843262]
[93.92570496 64.22812653]
[134.44499207 73.98720551]
[149.26824951 76.28311157]
[164.09150696 78.57902527]
[178.91474915 80.87493896]
[194.00056458 74.44451141]
[206.94808960 84.50899506]
[204.43801880 100.71490479]
[189.05250549 106.39099884]
[176.61883545 95.69818878]
[161.79559326 93.40227509]
[146.97233582 91.10636902]
[132.14907837 88.81045532]
[127.61730957 94.78649139]
[139.56939697 103.85003662]
[151.52146912 112.91358185]
[163.47354126 121.97712708]
[175.42561340 131.04067993]
[187.37770081 140.10421753]
[199.32962036 149.16796875]
[190.26568604 161.11973572]
[178.31414795 152.05630493]
[166.36207581 142.99275208]
[154.41000366 133.92919922]
[142.45791626 124.86566162]
[130.50584412 115.80211639]
[118.55376434 106.73857117]
[114.02199554 112.71460724]
[120.23203278 126.36874390]
[126.44207001 140.02287292]
[132.65211487 153.67701721]
[138.86215210 167.33114624]
[145.07218933 180.98529053]
[151.28222656 194.63941956]
[164.93307495 203.72712708]
[163.61843872 220.07348633]
[148.69068909 226.86277771]
[135.50622559 217.11074829]
[137.62809753 200.84945679]
[131.41806030 187.19532776]
[125.20801544 173.54118347]
[118.99797821 159.88705444]
[112.78793335 146.23291016]
[106.57789612 132.57878113]
[100.36785889 118.92464447]
[92.87031555 118.73258972]
[92.48594666 133.72766113]
[77.49088287 133.34304810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[7 21]
[8 20]
[9 19]
[10 18]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 69]
[52 67]
[53 66]
[54 65]
[55 64]
[76 85]
[77 84]
[78 83]
[87 120]
[88 119]
[93 115]
[94 114]
[95 113]
[96 111]
[97 110]
[98 109]
[99 108]
[137 148]
[138 147]
[139 146]
[140 145]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
