%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGCGCCGGCCGGGCCAUGACCCCCGCUGCUCUGUCUUGCAGGCUCGUCGCCGCGGCCCCCCGAGCCCGACCGCCGCCGCCACCACCACCAGCGCCCGGGCGGGCCUCGCGCGCCUCGGGCGCGGCUCCGCAGUGAGCCCACCAAGAAGGAAGCGGCCUGCAGAGGUGCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-15.24356651 426.82528687]
[-18.60244751 411.13778687]
[-8.32067966 398.82257080]
[-8.32067966 383.82257080]
[-11.47484112 377.11270142]
[-8.18519974 368.55691528]
[-7.91897726 353.55929565]
[-7.65275478 338.56164551]
[-7.38653183 323.56402588]
[-7.12030935 308.56637573]
[-20.88768578 302.61160278]
[-31.63453674 313.07608032]
[-42.38138962 323.54055786]
[-52.94082260 334.19412231]
[-63.30950928 345.03341675]
[-73.67819977 355.87271118]
[-84.04689026 366.71200562]
[-81.14767456 381.95581055]
[-87.79269409 395.97805786]
[-101.42680359 403.38687134]
[-116.80741119 401.33343506]
[-128.02035522 390.60733032]
[-130.75402832 375.33294678]
[-123.95728302 361.38360596]
[-110.24360657 354.12313843]
[-94.88617706 356.34329224]
[-84.51749420 345.50399780]
[-74.14880371 334.66470337]
[-63.78011703 323.82540894]
[-62.99164200 319.08624268]
[-59.19788742 314.80215454]
[-52.84585953 312.79370117]
[-42.09901047 302.32922363]
[-31.35215950 291.86474609]
[-33.22452164 280.22262573]
[-30.79434204 269.11782837]
[-24.70002556 260.02819824]
[-16.04548645 254.04779053]
[-6.21244287 251.75770569]
[3.35544777 253.17861938]
[10.73987007 240.12219238]
[18.12429237 227.06576538]
[25.50871468 214.00933838]
[32.89313507 200.95291138]
[40.27755737 187.89648438]
[47.66197968 174.84005737]
[55.04640579 161.78363037]
[55.60415268 154.39041138]
[62.67951965 148.56268311]
[70.29450989 135.63937378]
[77.90949249 122.71605682]
[62.89682388 81.19712830]
[108.54435730 49.20859146]
[98.56689453 38.00813293]
[83.61009216 32.85015488]
[80.92179108 18.20016289]
[70.94432831 6.99970579]
[60.96686554 -4.20075274]
[50.98940659 -15.40121078]
[41.01194382 -26.60166931]
[27.41810417 -24.21717834]
[14.52617455 -28.83209229]
[5.67494249 -39.13740540]
[3.10024691 -52.36550903]
[7.37092590 -65.03296661]
[-2.40617633 -76.40874481]
[-18.05222893 -81.32128906]
[-21.35628510 -97.38414001]
[-8.91941738 -108.07321930]
[6.46439266 -102.39250946]
[8.96959972 -86.18584442]
[18.74670219 -74.81007385]
[35.04153061 -76.67728424]
[49.38779068 -68.39080048]
[56.04450607 -53.03837967]
[52.21240234 -36.57913208]
[62.18986130 -25.37867165]
[72.16732788 -14.17821407]
[82.14478302 -2.97775578]
[92.12224579 8.22270203]
[106.36539459 12.57954693]
[109.76734924 28.03067207]
[119.74481201 39.23112869]
[127.24215698 39.43078232]
[123.85589600 24.81800652]
[114.10838318 13.41686344]
[113.37576294 -1.56523490]
[121.96440887 -13.86300755]
[136.28266907 -18.33371735]
[150.34289551 -13.10778427]
[158.26528931 -0.37061065]
[156.73684692 14.55131531]
[146.39602661 25.41824913]
[142.23683167 39.83008957]
[149.73417664 40.02974319]
[160.29360962 29.37618256]
[170.85304260 18.72262192]
[181.41247559 8.06906033]
[191.97190857 -2.58450127]
[202.53134155 -13.23806286]
[213.09077454 -23.89162445]
[223.55525208 -34.63847733]
[233.92393494 -45.47776794]
[244.29263306 -56.31706238]
[254.66131592 -67.15635681]
[258.60949707 -82.47701263]
[272.99829102 -86.32560730]
[283.36700439 -97.16490173]
[289.94653320 -112.79007721]
[306.78247070 -110.79315948]
[309.52423096 -94.06237793]
[294.20629883 -86.79621887]
[283.83758545 -75.95692444]
[280.63104248 -61.41156769]
[265.50061035 -56.78767014]
[255.13192749 -45.94837570]
[244.76322937 -35.10908127]
[234.39454651 -24.26978683]
[232.03565979 -17.24082184]
[223.74433899 -13.33219147]
[213.18490601 -2.67862988]
[202.62547302 7.97493172]
[192.06604004 18.62849426]
[181.50660706 29.28205490]
[170.94717407 39.93561554]
[160.38774109 50.58917999]
[165.72595215 64.60714722]
[180.69702148 65.53837585]
[195.66809082 66.46960449]
[210.63916016 67.40083313]
[225.61022949 68.33206177]
[237.29040527 57.68551636]
[253.07369995 58.49985123]
[263.59616089 70.29193878]
[262.61499023 86.06574249]
[250.71232605 96.46294403]
[234.94976807 95.31507111]
[224.67900085 83.30313110]
[209.70793152 82.37190247]
[194.73686218 81.44067383]
[179.76579285 80.50944519]
[164.79472351 79.57820892]
[162.43914795 86.69869232]
[157.72799683 100.93965912]
[155.37242126 108.06014252]
[167.94523621 116.24089050]
[183.87519836 114.33935547]
[195.19236755 125.71042633]
[193.21517944 141.63117981]
[179.46037292 149.88858032]
[164.47944641 144.14825439]
[159.76448059 128.81369019]
[147.19168091 120.63294220]
[128.04238892 135.06454468]
[107.25200653 137.59945679]
[90.83280945 130.33103943]
[83.21781921 143.25434875]
[75.60282898 156.17767334]
[68.10282898 169.16804504]
[60.71841049 182.22447205]
[53.33398819 195.28089905]
[45.94956589 208.33732605]
[38.56514359 221.39375305]
[31.18071938 234.45018005]
[23.79629707 247.50660706]
[16.41187477 260.56304932]
[25.91888618 285.20043945]
[7.87732792 308.83261108]
[7.61110544 323.83023071]
[7.34488249 338.82788086]
[7.07866001 353.82550049]
[6.81243706 368.82315063]
[6.67932081 383.82257080]
[6.67932081 398.82257080]
[16.96109009 411.13778687]
[13.60220718 426.82528687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 34]
[12 33]
[13 32]
[14 29]
[15 28]
[16 27]
[17 26]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[49 158]
[50 157]
[51 156]
[53 83]
[54 82]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[65 72]
[66 71]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 118]
[103 117]
[104 116]
[105 115]
[107 113]
[108 112]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
