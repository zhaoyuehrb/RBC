%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCGCUGGCACGAGUGCAGGGUAACUGAGCCAGGGCCGCUGGCGCAUUUGGCCUGGCCGAGGCCACCCCGCGCGGCCGCUCCACUGUGCCCGAGGCUGUCCUGGAGGUGAGGCCGGCCCACAGGGACCCUGCCCGUGCCCGGGCUCCGGGCGGAUUCCUGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[77.37670135 98.09991455]
[80.36845398 87.07070923]
[65.36908722 87.20849609]
[50.36972046 87.34628296]
[35.37035370 87.48406982]
[20.37098503 87.62186432]
[5.37161779 87.75965118]
[-9.62774944 87.89743805]
[-24.62711716 88.03522491]
[-39.59611893 88.99908447]
[-54.48929214 90.78608704]
[-69.38246155 92.57308960]
[-84.27563477 94.36009216]
[-98.72821808 105.74239349]
[-114.58547211 98.26269531]
[-129.44329834 100.32300568]
[-137.55007935 104.61617279]
[-144.59272766 102.28208160]
[-159.48590088 104.06908417]
[-167.67018127 108.21260071]
[-174.66876221 105.74951935]
[-189.59225464 107.26262665]
[-204.51574707 108.77572632]
[-219.43923950 110.28883362]
[-232.38853455 119.37873840]
[-245.83137512 112.96474457]
[-260.75485229 114.47785187]
[-275.67834473 115.99095154]
[-288.62762451 125.08085632]
[-302.07049561 118.66687012]
[-316.99395752 120.17996979]
[-329.94326782 129.26988220]
[-343.38610840 122.85588837]
[-358.30960083 124.36899567]
[-373.23309326 125.88209534]
[-388.15658569 127.39519501]
[-403.08004761 128.90829468]
[-414.29531860 140.37989807]
[-430.24160767 138.62060547]
[-438.68630981 124.97998810]
[-433.15139771 109.92196655]
[-417.88272095 104.99776459]
[-404.59317017 113.98480988]
[-389.66967773 112.47171021]
[-374.74618530 110.95860291]
[-359.82269287 109.44550323]
[-344.89920044 107.93240356]
[-333.01733398 98.95072174]
[-318.50708008 105.25648499]
[-303.58358765 103.74337769]
[-291.70172119 94.76170349]
[-277.19143677 101.06746674]
[-262.26797485 99.55435944]
[-247.34446716 98.04125977]
[-235.46260071 89.05957794]
[-220.95233154 95.36534119]
[-206.02885437 93.85224152]
[-191.10536194 92.33913422]
[-176.18186951 90.82603455]
[-161.27290344 89.17591095]
[-146.37973022 87.38890839]
[-131.50360107 85.46517181]
[-116.64577484 83.40486908]
[-109.08042908 73.93547821]
[-96.69157410 72.11636353]
[-86.06264496 79.46691895]
[-71.16947174 77.67991638]
[-56.27629471 75.89291382]
[-41.38312149 74.10591125]
[-52.30608749 63.82540131]
[-52.93021011 48.83839035]
[-42.89982986 37.68529510]
[-27.93080902 36.72176361]
[-16.55331230 46.49686050]
[-15.25086117 61.44020844]
[-24.76490402 73.03585815]
[-9.76553631 72.89807129]
[5.23383045 72.76028442]
[20.23319817 72.62248993]
[35.23256302 72.48470306]
[50.23193359 72.34691620]
[65.23130035 72.20912933]
[80.23066711 72.07134247]
[94.07563782 66.29928589]
[104.73084259 55.74150848]
[115.38604736 45.18373489]
[119.29959869 36.88703156]
[126.33531952 34.53212738]
[137.18267822 24.17187881]
[148.03004456 13.81163120]
[158.87741089 3.45138383]
[169.72476196 -6.90886354]
[155.06217957 -10.07252026]
[148.22526550 -23.42379189]
[154.22859192 -37.17006302]
[168.66899109 -41.22900009]
[180.95500183 -32.62354279]
[182.07507324 -17.66475868]
[193.82705688 -26.98629379]
[205.57902527 -36.30783081]
[217.33100891 -45.62936401]
[229.08299255 -54.95090103]
[235.08670044 -69.58872223]
[249.86631775 -71.43600464]
[261.61828613 -80.75753784]
[273.37026978 -90.07907104]
[273.62026978 -105.71466064]
[283.90112305 -117.49759674]
[299.35858154 -119.86434174]
[312.69406128 -111.69739532]
[317.61096191 -96.85293579]
[311.78768921 -82.34006500]
[297.97381592 -75.01131439]
[282.69180298 -78.32709503]
[270.93981934 -69.00556183]
[259.18786621 -59.68402481]
[254.02471924 -45.71293640]
[238.40452576 -43.19892120]
[226.65254211 -33.87738800]
[214.90057373 -24.55585098]
[203.14859009 -15.23431683]
[191.39660645 -5.91278124]
[180.08500671 3.93849945]
[169.23765564 14.29874706]
[158.39028931 24.65899467]
[147.54292297 35.01924133]
[136.69555664 45.37948990]
[125.94382477 55.83893967]
[115.28862000 66.39671326]
[104.63341522 76.95449066]
[113.64878845 82.11002350]
[119.20748901 90.34556580]
[120.49108887 99.74504089]
[117.62454987 108.31610870]
[127.68197632 119.44482422]
[137.73939514 130.57353210]
[147.79681396 141.70225525]
[157.85423279 152.83096313]
[167.91166687 163.95967102]
[178.56686401 174.51745605]
[189.78749084 184.47222900]
[201.00813293 194.42698669]
[212.22875977 204.38175964]
[223.44938660 214.33653259]
[234.67001343 224.29130554]
[245.89064026 234.24607849]
[261.75164795 240.23481750]
[260.38769531 257.13381958]
[243.77154541 260.50128174]
[235.93588257 245.46670532]
[224.71524048 235.51193237]
[213.49461365 225.55715942]
[202.27398682 215.60240173]
[191.05335999 205.64762878]
[179.83273315 195.69285583]
[168.61209106 185.73808289]
[168.17088318 200.73159790]
[157.37417603 211.14460754]
[142.37451172 211.04322815]
[131.71954346 200.48522949]
[131.48103333 185.48712158]
[141.79490662 174.59565735]
[156.78294373 174.01710510]
[146.72552490 162.88838196]
[136.66810608 151.75967407]
[126.61067963 140.63095093]
[116.55326080 129.50224304]
[106.49584198 118.37352753]
[96.79167938 120.03650665]
[87.10971832 116.69909668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[8 77]
[9 76]
[10 69]
[11 68]
[12 67]
[13 66]
[15 63]
[16 62]
[18 61]
[19 60]
[21 59]
[22 58]
[23 57]
[24 56]
[26 54]
[27 53]
[28 52]
[30 50]
[31 49]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[84 130]
[85 129]
[86 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[104 116]
[105 115]
[106 114]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
