%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CBX2)
} def

/sequence { (\
GGCGGUCCGGGCGGGUGACUGGCGGCGGGCGCCGCGGUCGGGCUGGCUGCCGGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005998026 ubox
1 33 0.051303902 ubox
1 48 0.011186691 ubox
1 51 0.163331270 ubox
2 7 0.005906309 ubox
2 12 0.015861862 ubox
2 32 0.051342572 ubox
2 35 0.004002155 ubox
2 47 0.012839508 ubox
2 50 0.163453977 ubox
2 55 0.014194130 ubox
2 58 0.864177084 ubox
3 11 0.015873165 ubox
3 13 0.005149780 ubox
3 17 0.004687130 ubox
3 31 0.051264202 ubox
3 34 0.004006659 ubox
3 45 0.373751549 ubox
3 46 0.009878933 ubox
3 49 0.163404240 ubox
3 52 0.009943810 ubox
3 54 0.013980945 ubox
3 57 0.870867644 ubox
4 12 0.005191465 ubox
4 16 0.004430363 ubox
4 30 0.037392660 ubox
4 33 0.004002236 ubox
4 44 0.377011349 ubox
4 48 0.162744885 ubox
4 51 0.010326115 ubox
5 16 0.003483670 ubox
5 30 0.035212634 ubox
5 32 0.003840396 ubox
5 43 0.377720935 ubox
5 47 0.162668390 ubox
5 50 0.010319477 ubox
5 55 0.905974642 ubox
5 58 0.005309914 ubox
6 14 0.003283951 ubox
6 15 0.009947216 ubox
6 28 0.004237865 ubox
6 29 0.049698066 ubox
6 31 0.003432557 ubox
6 42 0.377635496 ubox
6 46 0.080133500 ubox
6 49 0.009313538 ubox
6 54 0.904579497 ubox
6 57 0.005126308 ubox
7 13 0.003303085 ubox
7 14 0.014517455 ubox
7 15 0.009328856 ubox
7 27 0.003467191 ubox
7 28 0.051292380 ubox
7 41 0.377954113 ubox
7 45 0.076109338 ubox
7 46 0.141436481 ubox
7 53 0.905222738 ubox
7 54 0.088381986 ubox
8 13 0.014522848 ubox
8 14 0.009453517 ubox
8 27 0.051305243 ubox
8 40 0.377981059 ubox
8 45 0.142196818 ubox
8 49 0.005401719 ubox
8 52 0.904904682 ubox
8 53 0.088817226 ubox
9 20 0.005489868 ubox
9 26 0.051179359 ubox
9 39 0.377895659 ubox
9 44 0.129586757 ubox
9 48 0.010845289 ubox
9 51 0.861148288 ubox
10 19 0.005796504 ubox
10 38 0.373906787 ubox
10 39 0.003862525 ubox
10 43 0.115274834 ubox
10 44 0.092088803 ubox
10 47 0.018997864 ubox
10 48 0.188564280 ubox
10 50 0.790674508 ubox
10 51 0.290466110 ubox
11 23 0.049101560 ubox
11 35 0.021059463 ubox
11 38 0.005013881 ubox
11 43 0.113845546 ubox
11 47 0.763649865 ubox
11 50 0.400435115 ubox
11 58 0.005069664 ubox
12 21 0.028932447 ubox
12 22 0.047433801 ubox
12 34 0.021092821 ubox
12 36 0.377058380 ubox
12 37 0.004866029 ubox
12 40 0.011036812 ubox
12 42 0.128165181 ubox
12 45 0.046107418 ubox
12 46 0.765951360 ubox
12 49 0.486023114 ubox
12 57 0.005126688 ubox
13 20 0.033410764 ubox
13 33 0.018143124 ubox
13 35 0.375520087 ubox
13 39 0.009489606 ubox
13 44 0.059517593 ubox
13 48 0.484585501 ubox
14 19 0.034352074 ubox
14 20 0.044383579 ubox
14 32 0.014597373 ubox
14 33 0.376684657 ubox
14 38 0.008637281 ubox
14 43 0.062451991 ubox
14 44 0.762232798 ubox
14 47 0.482822005 ubox
14 48 0.044098906 ubox
15 19 0.043548017 ubox
15 30 0.005006145 ubox
15 32 0.377169789 ubox
15 43 0.765125618 ubox
15 47 0.060192349 ubox
15 55 0.005702736 ubox
15 58 0.009782242 ubox
16 29 0.004812321 ubox
16 31 0.377078574 ubox
16 36 0.008150470 ubox
16 40 0.292133858 ubox
16 42 0.696911292 ubox
16 45 0.410876668 ubox
16 46 0.071653827 ubox
16 54 0.005480509 ubox
16 56 0.016109477 ubox
16 57 0.009474539 ubox
17 30 0.345603066 ubox
17 35 0.007689585 ubox
17 39 0.686052055 ubox
17 44 0.285337182 ubox
17 55 0.017464419 ubox
18 38 0.688721136 ubox
19 28 0.372508174 ubox
19 29 0.042685461 ubox
19 37 0.688975269 ubox
19 41 0.609663993 ubox
19 42 0.042514185 ubox
19 53 0.025808763 ubox
20 27 0.374786435 ubox
20 28 0.038831461 ubox
20 34 0.018400830 ubox
20 36 0.646091053 ubox
20 40 0.612035592 ubox
20 41 0.030327671 ubox
20 52 0.025946317 ubox
21 26 0.374410424 ubox
21 33 0.031193823 ubox
21 35 0.457511698 ubox
21 39 0.613855009 ubox
21 51 0.027333407 ubox
22 30 0.004325851 ubox
22 32 0.032103091 ubox
22 35 0.516456165 ubox
22 38 0.613296120 ubox
22 50 0.030066733 ubox
23 29 0.004514866 ubox
23 31 0.032110890 ubox
23 34 0.689185504 ubox
23 36 0.004420358 ubox
23 37 0.613332443 ubox
23 49 0.032205356 ubox
24 30 0.032047698 ubox
24 33 0.690192931 ubox
24 35 0.004275223 ubox
24 48 0.032825886 ubox
25 32 0.690198458 ubox
25 35 0.613226578 ubox
25 47 0.032916480 ubox
26 31 0.689200855 ubox
26 34 0.613473607 ubox
26 46 0.032914821 ubox
27 33 0.613349643 ubox
28 32 0.603448117 ubox
28 44 0.032809528 ubox
29 43 0.032915371 ubox
30 42 0.032890609 ubox
32 41 0.032867511 ubox
33 40 0.032892680 ubox
34 39 0.030771448 ubox
34 58 0.049555915 ubox
35 49 0.003213433 ubox
35 57 0.049729529 ubox
36 48 0.004507531 ubox
37 47 0.004629447 ubox
37 55 0.051232299 ubox
38 46 0.004631734 ubox
38 54 0.051327146 ubox
39 45 0.004638184 ubox
39 53 0.051259921 ubox
41 51 0.051367611 ubox
42 50 0.051396569 ubox
43 49 0.051389323 ubox
46 55 0.027691637 ubox
46 58 0.371783609 ubox
47 54 0.027726548 ubox
47 57 0.376093561 ubox
48 53 0.027199883 ubox
48 56 0.376090768 ubox
49 55 0.376223456 ubox
49 58 0.004503935 ubox
50 54 0.373488579 ubox
50 57 0.004547108 ubox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
