%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAAAGAGCUGUGGGGCCGGAGCGCCAACUCCAGCUGGAACCCAGAGACCCUGACACGCCGGAGGAGCCCGCCGGGGCGAGGAAAAAAGAGGGACAUCCCCCACGCAGCGGCUCUGCAAGUGCAAGUCCGGGUCCUCGAGGUGAAAACCGAGCGGCCCGCCUGCGCCCAACCACACUGUGACUCUCGAUCCGGCUUCCGGAGCAGCAGAGCGCACAGAAAGGAGGCGCCGAGACAGACAUCACC\
) } def
/len { sequence length } bind def

/coor [
[351.02774048 150.99926758]
[348.56866455 165.79632568]
[346.10961914 180.59338379]
[355.50442505 193.30216980]
[353.07849121 208.91915894]
[340.27108765 218.17907715]
[324.68063354 215.58818054]
[315.55664062 202.68357849]
[318.31222534 187.12138367]
[331.31256104 178.13433838]
[333.77160645 163.33728027]
[336.23068237 148.54020691]
[327.27612305 136.50625610]
[312.39630127 134.61119080]
[297.51651001 132.71611023]
[282.63668823 130.82102966]
[267.75689697 128.92594910]
[252.87707520 127.03086853]
[237.99726868 125.13578796]
[223.11746216 123.24070740]
[208.23765564 121.34563446]
[193.35784912 119.45055389]
[181.77343750 128.74232483]
[166.65618896 127.03240967]
[156.98867798 114.81861115]
[142.10887146 112.92353058]
[127.22906494 111.02845001]
[124.06332397 122.47068787]
[115.96993256 132.78739929]
[103.47297668 139.86497498]
[87.98413086 141.87210083]
[71.64808655 137.62110901]
[57.04606247 126.84796906]
[42.62480927 130.97441101]
[28.20355988 135.10084534]
[21.28442383 145.96726990]
[9.20636082 149.11621094]
[-1.43169463 143.38992310]
[-15.90405941 147.33335876]
[-30.37642479 151.27677917]
[-44.84878922 155.22021484]
[-48.90233994 171.26203918]
[-60.43176270 182.99841309]
[-76.21755219 187.28741455]
[-91.91941071 183.04803467]
[-103.26956940 171.53082275]
[-117.69081879 175.65725708]
[-132.11207581 179.78370667]
[-141.12365723 193.05664062]
[-157.12989807 194.14291382]
[-167.85215759 182.20924377]
[-165.06524658 166.41011047]
[-150.90704346 158.86524963]
[-136.23851013 165.36245728]
[-121.81726074 161.23600769]
[-107.39601135 157.10957336]
[-104.96983337 143.68284607]
[-96.96106720 132.55488586]
[-84.88382721 125.92695618]
[-71.06368256 125.14025879]
[-58.18992615 130.40489197]
[-48.79222107 140.74784851]
[-34.31985474 136.80441284]
[-19.84749031 132.86099243]
[-5.37512589 128.91755676]
[6.30732918 115.80844879]
[24.07711792 120.67960358]
[38.49837112 116.55316162]
[52.91962051 112.42671967]
[53.39458084 97.43424225]
[39.26343536 92.40325928]
[25.13228989 87.37228394]
[11.00114536 82.34130859]
[-5.02193356 85.83315277]
[-15.85585022 73.52224731]
[-10.35560036 58.07300186]
[5.82063055 55.37826920]
[16.03212357 68.21015930]
[30.16326714 73.24114227]
[44.29441452 78.27211761]
[58.42556000 83.30309296]
[62.94085693 77.31459808]
[50.96386719 68.28400421]
[38.98687363 59.25340652]
[27.00988388 50.22280884]
[15.03289318 41.19221115]
[3.05604148 32.16142654]
[12.08700848 20.18471527]
[24.06348991 29.21521950]
[36.04048157 38.24581528]
[48.01747131 47.27641296]
[59.99446487 56.30701065]
[71.97145081 65.33760834]
[76.48675537 59.34911346]
[67.76246643 47.14719772]
[59.03817368 34.94527817]
[43.40857697 32.60194016]
[34.08108902 19.84366798]
[36.58954239 4.23972034]
[49.44571686 -4.95235920]
[65.02227020 -2.27907157]
[74.07791138 10.67356873]
[71.24008942 26.22098923]
[79.96437836 38.42290497]
[88.68866730 50.62482452]
[122.82726288 67.13368988]
[129.12414551 96.14864349]
[144.00395203 98.04372406]
[158.88375854 99.93879700]
[171.30407715 90.53808594]
[186.36732483 92.67193604]
[195.25292969 104.57074738]
[210.13273621 106.46582031]
[225.01254272 108.36090088]
[239.89234924 110.25598145]
[254.77215576 112.15106201]
[269.65194702 114.04614258]
[284.53176880 115.94121552]
[299.41159058 117.83629608]
[314.29138184 119.73137665]
[329.17120361 121.62645721]
[351.73904419 102.62015533]
[372.42605591 116.83822632]
[387.41522217 116.26831055]
[402.40438843 115.69840240]
[410.35076904 104.84123993]
[422.91342163 100.59759521]
[435.44290161 104.30192566]
[443.43670654 114.38980103]
[458.43188477 114.00981140]
[473.42709351 113.62982178]
[486.54226685 106.35028839]
[494.79666138 93.82571411]
[503.05105591 81.30113983]
[511.30545044 68.77655792]
[519.55981445 56.25198364]
[527.81420898 43.72740555]
[535.98913574 31.15079880]
[544.08422852 18.52266502]
[552.17926025 5.89453030]
[552.86315918 -0.64216131]
[556.22796631 -5.18417263]
[560.64282227 -6.94735384]
[569.05517578 -19.36636543]
[577.46752930 -31.78537560]
[578.10339355 -48.17219162]
[592.73687744 -55.57450104]
[606.31427002 -46.37744141]
[604.86834717 -30.04216003]
[589.88659668 -23.37299347]
[581.47418213 -10.95398235]
[573.06182861 1.46502817]
[564.80743408 13.98960495]
[556.71234131 26.61773872]
[548.61724854 39.24587250]
[547.65576172 46.55529404]
[540.33880615 51.98179626]
[532.08441162 64.50637054]
[523.83001709 77.03095245]
[515.57562256 89.55552673]
[507.32125854 102.08010864]
[499.06686401 114.60468292]
[501.53753662 121.68604279]
[516.27355957 124.48774719]
[506.47891235 135.84877014]
[508.94961548 142.93013000]
[523.20367432 147.60151672]
[537.45770264 152.27290344]
[551.71179199 156.94429016]
[565.96582031 161.61566162]
[575.34191895 156.16281128]
[585.95312500 156.74450684]
[594.32409668 162.92924500]
[597.84545898 172.48999023]
[611.97662354 177.52096558]
[624.76062012 168.92585754]
[639.97650146 169.49974060]
[651.79705811 178.81311035]
[655.81878662 193.12966919]
[669.94989014 198.16064453]
[684.08105469 203.19161987]
[698.21221924 208.22259521]
[712.34332275 213.25358582]
[730.38586426 209.51695251]
[741.21508789 223.33923340]
[755.40887451 228.19079590]
[769.60260010 233.04237366]
[783.79632568 237.89393616]
[798.33068848 227.02037048]
[816.32470703 227.06674194]
[830.55145264 237.82502747]
[835.41082764 254.82295227]
[849.72290039 259.31338501]
[864.03497314 263.80383301]
[878.34710693 268.29428101]
[892.65917969 272.78472900]
[909.58197021 271.75735474]
[915.25390625 287.73437500]
[901.47143555 297.60754395]
[888.16876221 287.09683228]
[873.85662842 282.60638428]
[859.54455566 278.11593628]
[845.23248291 273.62548828]
[830.92034912 269.13504028]
[822.37396240 277.71829224]
[810.92462158 281.88699341]
[798.71661377 280.79531860]
[788.06402588 274.58874512]
[781.01208496 264.38812256]
[778.94476318 252.08767700]
[764.75103760 247.23611450]
[750.55725098 242.38453674]
[736.36352539 237.53297424]
[725.38433838 242.57443237]
[713.52984619 238.66731262]
[707.31237793 227.38471985]
[693.18121338 222.35374451]
[679.05010986 217.32276917]
[664.91894531 212.29179382]
[650.78778076 207.26081848]
[638.62365723 215.81488037]
[623.57708740 215.56298828]
[611.42181396 206.39218140]
[606.94561768 191.65211487]
[592.81451416 186.62112427]
[574.08258057 191.47297668]
[561.29443359 175.86972046]
[547.04040527 171.19834900]
[532.78631592 166.52696228]
[518.53228760 161.85557556]
[504.27822876 157.18418884]
[497.39657593 156.36897278]
[491.11294556 154.33293152]
[485.63085938 151.26513672]
[481.10540771 147.38595581]
[477.63903809 142.93594360]
[475.27966309 138.16413879]
[474.02130127 133.31652832]
[473.80706787 128.62500000]
[458.81188965 129.00500488]
[443.81671143 129.38499451]
[432.74856567 142.06182861]
[415.59823608 142.81443787]
[402.97430420 130.68757629]
[387.98513794 131.25747681]
[372.99594116 131.82739258]
[369.86718750 140.71452332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 121]
[14 120]
[15 119]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[22 112]
[25 109]
[26 108]
[27 107]
[33 69]
[34 68]
[35 67]
[38 65]
[39 64]
[40 63]
[41 62]
[46 56]
[47 55]
[48 54]
[70 81]
[71 80]
[72 79]
[73 78]
[94 105]
[95 104]
[96 103]
[123 246]
[124 245]
[125 244]
[129 241]
[130 240]
[131 239]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 155]
[139 154]
[140 153]
[143 152]
[144 151]
[145 150]
[166 231]
[167 230]
[168 229]
[169 228]
[170 227]
[174 225]
[175 224]
[179 220]
[180 219]
[181 218]
[182 217]
[183 216]
[185 213]
[186 212]
[187 211]
[188 210]
[192 204]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
