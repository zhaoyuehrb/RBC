%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLR2C)
} def

/sequence { (\
GGCCUCGCUGACUGACUUCCGGUGUUGGCGGUGGCGCCGCGCAGUCACCGCGGAGCAGACGCGGAGGCUGGUGGCCCCUGGGCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005470376 ubox
1 38 0.027080086 ubox
1 69 0.692751874 ubox
1 76 0.009313009 ubox
1 77 0.009086069 ubox
1 78 0.012323781 ubox
2 8 0.005797599 ubox
2 29 0.061363675 ubox
2 32 0.011320415 ubox
2 35 0.296801244 ubox
2 37 0.027790314 ubox
2 68 0.733642456 ubox
2 75 0.003719153 ubox
2 77 0.004274506 ubox
2 83 0.496324245 ubox
3 7 0.005757249 ubox
3 28 0.063185634 ubox
3 31 0.011531636 ubox
3 34 0.297096534 ubox
3 36 0.027778663 ubox
3 67 0.733840951 ubox
3 74 0.003704867 ubox
3 81 0.020994789 ubox
3 82 0.496540334 ubox
4 27 0.063199377 ubox
4 30 0.010400758 ubox
4 31 0.008721354 ubox
4 33 0.296933858 ubox
4 34 0.009495196 ubox
4 66 0.733818736 ubox
4 73 0.003681579 ubox
4 80 0.025003464 ubox
4 81 0.495989631 ubox
4 82 0.007162958 ubox
4 86 0.338152723 ubox
5 28 0.006010929 ubox
5 31 0.334062723 ubox
5 34 0.044575870 ubox
5 64 0.203807811 ubox
5 65 0.703967522 ubox
5 80 0.421036753 ubox
5 81 0.009245612 ubox
5 85 0.345762452 ubox
6 10 0.003229510 ubox
6 14 0.003416717 ubox
6 24 0.066495586 ubox
6 27 0.007983384 ubox
6 30 0.537589757 ubox
6 33 0.117147002 ubox
6 63 0.470923107 ubox
6 64 0.562884014 ubox
6 80 0.065465280 ubox
6 84 0.346581072 ubox
7 23 0.066932772 ubox
7 25 0.008732375 ubox
7 26 0.006585025 ubox
7 29 0.547566168 ubox
7 32 0.181169853 ubox
7 35 0.007959229 ubox
7 62 0.633612398 ubox
7 75 0.015232715 ubox
7 79 0.014790144 ubox
7 83 0.346543105 ubox
8 22 0.066991516 ubox
8 24 0.009086496 ubox
8 28 0.547691390 ubox
8 31 0.185106810 ubox
8 34 0.007963217 ubox
8 61 0.624562110 ubox
8 64 0.011451258 ubox
8 74 0.015263671 ubox
8 81 0.008293655 ubox
8 82 0.346292177 ubox
9 21 0.066840303 ubox
9 24 0.006260966 ubox
9 27 0.542418166 ubox
9 30 0.185283675 ubox
9 33 0.007562112 ubox
9 61 0.356582406 ubox
9 63 0.017558983 ubox
9 73 0.014430109 ubox
9 80 0.009404032 ubox
9 81 0.329073013 ubox
10 18 0.004249186 ubox
10 19 0.018784593 ubox
10 20 0.064417775 ubox
10 23 0.010623818 ubox
10 26 0.513766523 ubox
10 29 0.189333681 ubox
10 32 0.003879274 ubox
10 35 0.004548400 ubox
10 60 0.627957903 ubox
10 62 0.022914828 ubox
10 72 0.005903982 ubox
10 79 0.007184944 ubox
11 17 0.005103186 ubox
11 18 0.023657227 ubox
11 23 0.286515198 ubox
11 25 0.498867033 ubox
11 32 0.037183377 ubox
11 72 0.014241220 ubox
12 22 0.307345291 ubox
12 24 0.489065487 ubox
12 28 0.299985800 ubox
12 31 0.038276932 ubox
12 34 0.005970257 ubox
12 58 0.743063400 ubox
12 71 0.015524923 ubox
12 81 0.006806139 ubox
13 21 0.322631767 ubox
13 24 0.012482116 ubox
13 27 0.299935179 ubox
13 30 0.038238363 ubox
13 33 0.005678372 ubox
13 57 0.745093669 ubox
13 70 0.015412401 ubox
13 80 0.007080529 ubox
14 20 0.329118530 ubox
14 23 0.045815550 ubox
14 26 0.301461503 ubox
14 29 0.037952803 ubox
14 32 0.003541396 ubox
14 35 0.008409961 ubox
14 56 0.745203856 ubox
14 69 0.012528710 ubox
14 79 0.004898401 ubox
15 23 0.290949065 ubox
15 25 0.302994696 ubox
15 32 0.059972211 ubox
16 22 0.312514853 ubox
16 24 0.303029698 ubox
16 28 0.025182456 ubox
16 31 0.061645058 ubox
16 34 0.011746372 ubox
16 53 0.005426548 ubox
16 55 0.745108948 ubox
16 67 0.015525409 ubox
16 74 0.053765884 ubox
17 21 0.281685214 ubox
17 27 0.024744028 ubox
17 30 0.060489414 ubox
17 33 0.011454697 ubox
17 52 0.005397954 ubox
17 53 0.008560349 ubox
17 54 0.744974385 ubox
17 55 0.006252550 ubox
17 66 0.015524958 ubox
17 73 0.052336341 ubox
18 52 0.010063612 ubox
18 53 0.744505825 ubox
18 54 0.012791899 ubox
18 65 0.015561169 ubox
19 28 0.080128445 ubox
19 31 0.027155522 ubox
19 52 0.744538609 ubox
19 53 0.016213958 ubox
19 64 0.015575535 ubox
19 71 0.057453079 ubox
20 27 0.080523754 ubox
20 30 0.027435275 ubox
20 39 0.003168741 ubox
20 50 0.744880369 ubox
20 52 0.014952391 ubox
20 63 0.015568792 ubox
20 70 0.057475107 ubox
21 26 0.061367126 ubox
21 29 0.026899819 ubox
21 38 0.003193608 ubox
21 49 0.745394234 ubox
21 51 0.006598702 ubox
21 62 0.014895949 ubox
21 69 0.057421029 ubox
22 29 0.007053333 ubox
22 37 0.003193894 ubox
22 48 0.745430777 ubox
22 60 0.012705361 ubox
22 62 0.004050898 ubox
22 68 0.057461403 ubox
23 28 0.009108504 ubox
23 36 0.003193072 ubox
23 43 0.003632684 ubox
23 47 0.745254084 ubox
23 57 0.008625325 ubox
23 59 0.009692799 ubox
23 61 0.005698890 ubox
23 67 0.057326590 ubox
24 29 0.006272754 ubox
24 35 0.004379930 ubox
24 40 0.003449801 ubox
24 42 0.005384866 ubox
24 45 0.014427234 ubox
24 46 0.744962304 ubox
24 56 0.012537861 ubox
24 60 0.005874887 ubox
25 34 0.004375419 ubox
25 41 0.005984474 ubox
25 44 0.710277838 ubox
25 54 0.010379774 ubox
25 55 0.009972904 ubox
25 59 0.004859449 ubox
25 65 0.057378387 ubox
25 85 0.004404458 ubox
25 86 0.004148021 ubox
26 33 0.004097936 ubox
26 39 0.013663447 ubox
26 43 0.739945730 ubox
26 53 0.012481168 ubox
26 54 0.008163190 ubox
26 57 0.003799691 ubox
26 64 0.057081513 ubox
26 84 0.004751757 ubox
26 85 0.006393202 ubox
27 32 0.003517835 ubox
27 38 0.017170354 ubox
27 42 0.740093812 ubox
27 56 0.004094402 ubox
27 79 0.004136592 ubox
27 83 0.004903464 ubox
28 35 0.012998376 ubox
28 37 0.017611807 ubox
28 40 0.744506466 ubox
28 42 0.015175009 ubox
28 51 0.017129790 ubox
28 62 0.057455566 ubox
28 78 0.004231846 ubox
28 83 0.007891571 ubox
29 34 0.013033626 ubox
29 36 0.017616825 ubox
29 39 0.745057150 ubox
29 41 0.015501205 ubox
29 50 0.017215356 ubox
29 61 0.057458238 ubox
29 80 0.303422171 ubox
29 82 0.007937354 ubox
30 35 0.017706341 ubox
30 38 0.745062230 ubox
30 40 0.012220892 ubox
30 49 0.017233409 ubox
30 60 0.057250970 ubox
30 77 0.005432781 ubox
30 78 0.017136133 ubox
30 79 0.321170020 ubox
30 83 0.010078215 ubox
31 37 0.744817631 ubox
31 40 0.009085921 ubox
31 48 0.017234471 ubox
31 60 0.003974904 ubox
31 76 0.005614812 ubox
31 77 0.015934319 ubox
31 78 0.365032426 ubox
31 83 0.018838610 ubox
32 36 0.696766309 ubox
32 39 0.012725541 ubox
32 47 0.017231110 ubox
32 57 0.005202980 ubox
32 59 0.005554529 ubox
32 80 0.016168612 ubox
32 82 0.018740270 ubox
33 38 0.013037896 ubox
33 46 0.017233488 ubox
33 56 0.003877378 ubox
33 76 0.015246439 ubox
33 77 0.449879219 ubox
33 78 0.364775936 ubox
33 79 0.017078669 ubox
34 45 0.017210970 ubox
34 56 0.057278878 ubox
34 75 0.012430458 ubox
34 76 0.453445305 ubox
34 77 0.368163536 ubox
34 78 0.020866522 ubox
34 83 0.003316063 ubox
35 44 0.017211222 ubox
35 55 0.057306098 ubox
35 74 0.009301213 ubox
35 80 0.003726407 ubox
35 82 0.003337868 ubox
36 42 0.011189360 ubox
36 75 0.661522236 ubox
36 83 0.004051499 ubox
37 41 0.011144339 ubox
37 53 0.057362269 ubox
37 74 0.662317991 ubox
37 82 0.003936833 ubox
38 52 0.057458481 ubox
38 73 0.663214760 ubox
38 81 0.003838477 ubox
38 84 0.004420579 ubox
39 51 0.057458659 ubox
39 72 0.663220332 ubox
39 75 0.003228463 ubox
39 83 0.005337001 ubox
40 50 0.057456978 ubox
40 71 0.662913417 ubox
40 73 0.015318461 ubox
40 82 0.005337702 ubox
41 49 0.056370254 ubox
41 72 0.015074441 ubox
42 70 0.662573728 ubox
42 71 0.010906890 ubox
42 80 0.005314105 ubox
43 69 0.663626516 ubox
43 79 0.005281904 ubox
44 68 0.663823028 ubox
44 78 0.004878720 ubox
45 67 0.663527688 ubox
46 66 0.659646893 ubox
48 64 0.662534324 ubox
49 63 0.663842355 ubox
50 62 0.663851401 ubox
51 61 0.663850436 ubox
52 60 0.663166474 ubox
55 62 0.004169644 ubox
56 61 0.004245658 ubox
60 80 0.048619404 ubox
60 84 0.003294900 ubox
61 79 0.048113810 ubox
61 83 0.003410331 ubox
62 80 0.092451838 ubox
62 82 0.003387312 ubox
63 78 0.090883013 ubox
63 79 0.091018911 ubox
64 77 0.091575472 ubox
64 78 0.091824862 ubox
66 76 0.131013338 ubox
66 77 0.005595393 ubox
67 75 0.131133667 ubox
67 76 0.004215837 ubox
68 74 0.131150534 ubox
69 73 0.118186495 ubox
69 84 0.004089142 ubox
69 85 0.009446382 ubox
70 76 0.012731153 ubox
70 77 0.023842980 ubox
70 78 0.029537052 ubox
70 79 0.007375985 ubox
70 83 0.004835935 ubox
71 75 0.012585095 ubox
71 76 0.023786495 ubox
71 77 0.029459280 ubox
71 78 0.007656546 ubox
71 83 0.020643530 ubox
72 82 0.019842011 ubox
72 84 0.169635943 ubox
73 79 0.005636154 ubox
73 83 0.217881633 ubox
74 78 0.005740502 ubox
74 83 0.698673291 ubox
75 81 0.215260985 ubox
75 82 0.700523502 ubox
76 80 0.214742125 ubox
76 81 0.698205544 ubox
76 82 0.090293412 ubox
77 81 0.091920414 ubox
78 86 0.064535114 ubox
79 85 0.065749320 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
74 83 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
showpage
end
%%EOF
