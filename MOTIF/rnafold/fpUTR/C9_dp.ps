%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C9)
} def

/sequence { (\
AAACAAUGCUUGUUCCCUGUCCUCUGGCCCUUUGCAAAUAAAUGCCUUACCAGACCUGCCCUGCCACCCCACUCGCAGCCACCCAGCAAGAGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003419971 ubox
1 14 0.005279197 ubox
2 10 0.004662064 ubox
2 11 0.006540934 ubox
2 13 0.004749598 ubox
2 14 0.130330940 ubox
3 10 0.007132468 ubox
3 13 0.144680623 ubox
3 20 0.015895602 ubox
4 12 0.146454745 ubox
4 19 0.016829238 ubox
5 11 0.143382716 ubox
5 14 0.007290116 ubox
5 18 0.015858786 ubox
6 10 0.109324371 ubox
6 13 0.008446119 ubox
7 12 0.008117500 ubox
7 36 0.005300863 ubox
7 88 0.028082252 ubox
7 94 0.285859573 ubox
8 20 0.013631680 ubox
8 35 0.005886505 ubox
8 59 0.004800978 ubox
8 87 0.031171907 ubox
8 93 0.317280163 ubox
8 96 0.842579913 ubox
9 19 0.014317382 ubox
9 34 0.005884530 ubox
9 58 0.004811540 ubox
9 86 0.031129368 ubox
9 90 0.099529627 ubox
9 92 0.316162722 ubox
9 95 0.847943341 ubox
10 37 0.003173809 ubox
10 85 0.027887508 ubox
10 89 0.112356858 ubox
10 90 0.011490808 ubox
10 91 0.308616855 ubox
10 92 0.003528713 ubox
10 94 0.598130082 ubox
10 95 0.293279648 ubox
11 36 0.003563129 ubox
11 81 0.007460644 ubox
11 85 0.011937122 ubox
11 88 0.147822669 ubox
11 89 0.014658672 ubox
11 90 0.285616986 ubox
11 91 0.021300206 ubox
11 94 0.700922781 ubox
12 18 0.003325612 ubox
12 35 0.003689449 ubox
12 55 0.005493810 ubox
12 59 0.004066133 ubox
12 80 0.007639353 ubox
12 82 0.013627196 ubox
12 84 0.016403855 ubox
12 87 0.167364965 ubox
12 93 0.927902945 ubox
13 19 0.004590024 ubox
13 34 0.003662722 ubox
13 54 0.004484908 ubox
13 58 0.004050844 ubox
13 81 0.012795648 ubox
13 86 0.162624832 ubox
13 89 0.061763464 ubox
13 90 0.030873415 ubox
13 91 0.018591833 ubox
13 92 0.927575863 ubox
14 85 0.137789032 ubox
14 88 0.068246005 ubox
14 89 0.061296892 ubox
14 90 0.017738752 ubox
14 91 0.927134559 ubox
15 90 0.926424857 ubox
16 27 0.014170090 ubox
17 26 0.014303273 ubox
17 53 0.037962930 ubox
17 78 0.019437931 ubox
17 86 0.845901431 ubox
17 90 0.025363659 ubox
17 95 0.082689325 ubox
18 52 0.038083131 ubox
18 58 0.007133473 ubox
18 77 0.019737741 ubox
18 81 0.080307649 ubox
18 85 0.846517475 ubox
18 88 0.362569049 ubox
18 89 0.028538383 ubox
18 94 0.083650688 ubox
19 28 0.009401922 ubox
19 50 0.005609715 ubox
19 51 0.037634704 ubox
19 55 0.054539230 ubox
19 57 0.008810131 ubox
19 59 0.078440868 ubox
19 72 0.003162892 ubox
19 76 0.019757300 ubox
19 79 0.016032343 ubox
19 80 0.082434774 ubox
19 82 0.059781320 ubox
19 84 0.841301438 ubox
19 87 0.374220156 ubox
19 93 0.083714659 ubox
19 96 0.003549632 ubox
20 27 0.009278826 ubox
20 49 0.007367241 ubox
20 54 0.049225494 ubox
20 58 0.079103040 ubox
20 75 0.019067077 ubox
20 78 0.008958355 ubox
20 81 0.061413311 ubox
20 86 0.353314221 ubox
20 91 0.022604956 ubox
20 92 0.077141813 ubox
21 26 0.009258576 ubox
21 27 0.007131718 ubox
21 53 0.043539898 ubox
21 90 0.026368513 ubox
22 26 0.007175959 ubox
22 53 0.012946073 ubox
22 78 0.007072651 ubox
22 86 0.018192719 ubox
22 90 0.060021627 ubox
22 92 0.015937238 ubox
23 52 0.012258904 ubox
23 54 0.914201677 ubox
23 85 0.015987147 ubox
23 89 0.049114646 ubox
23 91 0.018479339 ubox
24 53 0.988462168 ubox
24 78 0.004343511 ubox
24 86 0.044747598 ubox
24 90 0.018562821 ubox
25 49 0.003553968 ubox
25 52 0.989148781 ubox
25 66 0.008173424 ubox
25 77 0.004203544 ubox
25 81 0.110806498 ubox
25 85 0.046662150 ubox
25 89 0.017259446 ubox
26 46 0.065147617 ubox
26 51 0.989334540 ubox
26 56 0.004280744 ubox
26 60 0.024974408 ubox
26 65 0.008882692 ubox
26 76 0.003620496 ubox
26 80 0.114717732 ubox
26 83 0.006325765 ubox
26 84 0.046598588 ubox
27 35 0.006420722 ubox
27 45 0.065930185 ubox
27 46 0.003717673 ubox
27 50 0.987589779 ubox
27 55 0.004290769 ubox
27 59 0.025093706 ubox
27 64 0.008895480 ubox
27 79 0.114664857 ubox
27 82 0.006888416 ubox
27 83 0.046084686 ubox
27 87 0.015115133 ubox
28 34 0.007461635 ubox
28 44 0.066431518 ubox
28 58 0.025062103 ubox
28 63 0.008851795 ubox
28 75 0.003424292 ubox
28 78 0.108309030 ubox
28 86 0.015126253 ubox
30 53 0.013003661 ubox
31 38 0.003841919 ubox
31 41 0.028350021 ubox
31 42 0.050004390 ubox
31 52 0.012563921 ubox
31 54 0.021667630 ubox
32 37 0.003677680 ubox
32 38 0.005068691 ubox
32 40 0.028595888 ubox
32 41 0.053508688 ubox
32 42 0.026314929 ubox
32 53 0.022955454 ubox
32 54 0.008140646 ubox
32 78 0.014552541 ubox
33 37 0.004457176 ubox
33 40 0.053072541 ubox
33 41 0.026904015 ubox
33 44 0.011526981 ubox
33 49 0.026427284 ubox
33 52 0.023170745 ubox
33 53 0.008355216 ubox
33 77 0.041311192 ubox
33 88 0.003394394 ubox
34 39 0.045409131 ubox
34 43 0.014181877 ubox
34 45 0.990258692 ubox
34 48 0.005292817 ubox
34 51 0.020628184 ubox
34 59 0.025058491 ubox
34 64 0.003417879 ubox
34 76 0.041787551 ubox
34 87 0.003552183 ubox
35 44 0.991702314 ubox
35 58 0.025132772 ubox
35 63 0.003472869 ubox
35 75 0.041721606 ubox
35 86 0.003542617 ubox
36 43 0.906300774 ubox
36 48 0.004419775 ubox
36 57 0.023882669 ubox
36 62 0.003271690 ubox
37 47 0.004410717 ubox
37 48 0.014782925 ubox
38 47 0.014863131 ubox
39 49 0.017775886 ubox
40 48 0.018297910 ubox
41 47 0.017222136 ubox
41 48 0.005193640 ubox
42 47 0.004705599 ubox
43 49 0.003882960 ubox
43 52 0.018954519 ubox
43 66 0.012659015 ubox
43 71 0.017141526 ubox
43 77 0.007884856 ubox
43 94 0.004130984 ubox
44 48 0.003477018 ubox
44 51 0.019250260 ubox
44 59 0.008815397 ubox
44 64 0.018586574 ubox
44 65 0.012106024 ubox
44 70 0.017717478 ubox
44 76 0.008065965 ubox
44 93 0.004591028 ubox
45 58 0.008831102 ubox
45 63 0.019073873 ubox
45 75 0.008053286 ubox
45 92 0.004556351 ubox
46 53 0.046863366 ubox
46 90 0.004460369 ubox
47 52 0.042966975 ubox
47 53 0.005695656 ubox
47 54 0.012603424 ubox
47 89 0.004441846 ubox
48 52 0.005297656 ubox
48 53 0.013046478 ubox
48 58 0.003980941 ubox
48 88 0.004012810 ubox
49 57 0.004228349 ubox
51 58 0.029649465 ubox
51 63 0.052370669 ubox
52 57 0.026938474 ubox
52 62 0.053520783 ubox
53 61 0.053891261 ubox
53 74 0.003839746 ubox
54 73 0.003664524 ubox
56 78 0.599285622 ubox
56 86 0.170480173 ubox
56 90 0.021379631 ubox
56 95 0.133537481 ubox
57 66 0.015250206 ubox
57 71 0.005324008 ubox
57 77 0.611560132 ubox
57 81 0.338097548 ubox
57 85 0.177742465 ubox
57 88 0.119951347 ubox
57 89 0.016294077 ubox
57 94 0.135106416 ubox
58 64 0.035420825 ubox
58 65 0.015963842 ubox
58 70 0.005885081 ubox
58 74 0.004240639 ubox
58 76 0.613746151 ubox
58 79 0.155558199 ubox
58 80 0.379537077 ubox
58 84 0.178441058 ubox
58 87 0.130517934 ubox
58 93 0.135411415 ubox
58 96 0.003245419 ubox
59 63 0.035799856 ubox
59 75 0.612789856 ubox
59 78 0.142360305 ubox
59 86 0.130342159 ubox
59 92 0.135250746 ubox
59 95 0.003191994 ubox
61 78 0.746664059 ubox
61 86 0.005376655 ubox
61 90 0.126056291 ubox
61 95 0.013667223 ubox
62 71 0.409488279 ubox
62 75 0.008527139 ubox
62 77 0.769817822 ubox
62 81 0.006561796 ubox
62 85 0.006386207 ubox
62 88 0.090831125 ubox
62 89 0.091409169 ubox
62 94 0.013898772 ubox
63 70 0.423998276 ubox
63 74 0.029364180 ubox
63 76 0.774108211 ubox
63 79 0.024469571 ubox
63 80 0.005637697 ubox
63 84 0.006435306 ubox
63 87 0.125221020 ubox
63 93 0.013938714 ubox
64 75 0.773006473 ubox
64 78 0.024821232 ubox
64 86 0.125068124 ubox
64 92 0.012868190 ubox
72 78 0.079381870 ubox
72 90 0.009127302 ubox
72 92 0.016810357 ubox
73 77 0.071854453 ubox
73 89 0.009504658 ubox
73 91 0.021030810 ubox
74 90 0.021131865 ubox
75 87 0.020685899 ubox
76 86 0.020709047 ubox
78 87 0.102595554 ubox
79 86 0.106346719 ubox
86 93 0.028867643 ubox
86 96 0.006565244 ubox
87 92 0.028945435 ubox
87 95 0.006665320 ubox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
10 94 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
19 84 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
showpage
end
%%EOF
