%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGCAUGCAGUUUUUGCCUUCCGGAACUAGAUCAGGAUCAUGCAUUUAAGCUAGAAAAUGGAAAGAGGAGUUGCUUCACCCACAGUCAGUGCUAUUGCAUCAACCAAUCCCUGCCAUUCUGCAGUUUCCUGGUGUAUCUGCCCGGAGUCACACAGUCUUUCCUGCUAAGCCUCAGCGUCUCCUCCAAGCCACAUCAAAAUCUUUCCUUCUGGGCCUUUCCCAGAAGUGAAUUCUUGCUGGAAGGUAUAAAAGA\
CCAGCUCCUCCAAGCAGAGCAACUCCCUGGCUGCCGUGAAAAGACAAGGCACUGGGCAGUG\
) } def
/len { sequence length } bind def

/coor [
[463.14730835 836.20660400]
[458.46966553 821.95458984]
[453.79202271 807.70257568]
[449.11434937 793.45062256]
[444.43670654 779.19860840]
[429.10314941 772.23132324]
[423.46685791 756.00140381]
[431.49148560 740.42797852]
[426.67282104 726.22302246]
[421.85415649 712.01806641]
[405.25015259 686.24810791]
[416.37194824 664.87493896]
[409.37075806 651.60906982]
[402.36953735 638.34320068]
[395.36834717 625.07739258]
[388.36712646 611.81152344]
[381.16949463 598.65118408]
[373.77703857 585.59930420]
[366.38458252 572.54742432]
[358.99212646 559.49554443]
[351.59963989 546.44366455]
[344.20718384 533.39178467]
[336.81472778 520.33990479]
[329.42227173 507.28802490]
[322.02981567 494.23614502]
[314.63732910 481.18429565]
[312.05325317 495.96002197]
[301.33132935 506.45004272]
[286.50262451 508.71044922]
[273.14221191 501.89141846]
[266.27313232 488.55667114]
[268.47790527 473.71957397]
[278.92764282 462.95840454]
[293.69360352 460.31893921]
[307.22344971 466.79275513]
[300.88793945 453.19638062]
[294.55239868 439.60003662]
[288.21685791 426.00366211]
[281.88134766 412.40731812]
[267.39566040 408.51306152]
[255.09654236 417.09979248]
[252.20462036 432.40582275]
[239.60923767 440.93878174]
[225.03511047 438.08743286]
[212.73599243 446.67416382]
[210.21730042 462.27645874]
[197.35510254 471.46008301]
[181.78030396 468.77658081]
[172.73316956 455.81799316]
[175.58119202 440.27243042]
[188.63468933 431.36282349]
[204.14927673 434.37503052]
[216.44837952 425.78833008]
[218.79402161 411.12429810]
[231.14474487 402.24093628]
[246.50982666 404.80068970]
[258.80892944 396.21395874]
[252.41790771 383.09255981]
[252.53735352 368.39248657]
[259.23620605 355.18853760]
[271.19732666 346.28436279]
[262.42874146 334.11425781]
[253.66012573 321.94415283]
[237.22569275 322.39382935]
[223.63671875 312.84729004]
[218.38241577 296.91778564]
[223.72985840 280.84368896]
[214.84107971 268.76107788]
[205.95230103 256.67846680]
[197.06350708 244.59585571]
[188.17472839 232.51324463]
[179.28594971 220.43063354]
[165.51150513 214.76371765]
[163.56617737 199.06257629]
[154.67739868 186.97994995]
[145.78860474 174.89733887]
[136.89982605 162.81472778]
[121.87969971 170.09449768]
[105.47106171 173.80628967]
[88.51624298 173.69827271]
[71.89958954 169.71629333]
[56.50136185 162.00979614]
[43.15106964 150.92709351]
[32.58288193 136.99990845]
[25.39534187 120.91814423]
[22.01771927 103.49570465]
[22.68477440 85.62938690]
[8.55302620 80.60010529]
[-5.58846140 87.13126373]
[-19.84841919 81.82954407]
[-25.98773575 68.30754852]
[-40.11948395 63.27826309]
[-54.25123215 58.24898148]
[-68.38298035 53.21969604]
[-84.40563965 56.71346283]
[-95.24103546 44.40386200]
[-89.74263763 28.95395279]
[-73.56672668 26.25728035]
[-63.35369492 39.08794785]
[-49.22194672 44.11723328]
[-35.09019852 49.14651489]
[-20.95845222 54.17580032]
[-7.65685034 47.57254410]
[6.74639559 52.47164154]
[13.58230972 66.46835327]
[27.71405792 71.49764252]
[31.76033401 65.18276215]
[19.13058281 57.09021378]
[6.50095701 48.99746704]
[14.59389877 36.36796570]
[27.22313499 44.46046066]
[39.85288620 52.55301285]
[43.89916229 46.23813629]
[33.42476273 35.50095749]
[22.95036697 24.76378059]
[12.47597122 14.02660084]
[-3.32822275 14.08146095]
[-14.48323917 2.88587403]
[-14.37100410 -12.91801643]
[-3.05810595 -23.95404243]
[12.74371433 -23.67472649]
[23.65951729 -12.24577999]
[23.21315002 3.55220389]
[33.68754578 14.28938293]
[44.16194153 25.02656174]
[54.63634109 35.76374054]
[56.25368881 34.64410782]
[57.89866638 33.56518936]
[52.10695267 19.72842407]
[46.31523514 5.89165974]
[40.52352142 -7.94510460]
[28.05779839 -17.68760490]
[30.28089714 -32.41537094]
[24.48918343 -46.25213623]
[18.69746780 -60.08889771]
[3.98062086 -65.84996796]
[-2.27543449 -80.36331940]
[3.64090967 -95.01843262]
[18.21959114 -101.12069702]
[32.81133652 -95.04974365]
[38.75912094 -80.40735626]
[32.53423309 -65.88061523]
[38.32594681 -52.04384995]
[44.11766052 -38.20708466]
[56.16912460 -29.45428276]
[54.36028671 -13.73681927]
[60.15200043 0.09994538]
[65.94371796 13.93670940]
[71.73542786 27.77347374]
[79.11641693 26.44265556]
[76.45478058 11.68068790]
[81.53042603 -2.43447375]
[91.21674347 9.01905251]
[93.87837982 23.78102112]
[101.25936890 22.45020294]
[101.85383606 7.46198750]
[102.44830322 -7.52622843]
[91.54189301 -18.96413803]
[92.00123596 -34.76174927]
[103.55381775 -45.54662323]
[119.34568787 -44.92028046]
[130.00781250 -33.25432205]
[129.21455383 -17.46995354]
[117.43651581 -6.93176079]
[116.84204865 8.05645466]
[116.24758148 23.04467010]
[132.38156128 28.96035385]
[146.73007202 38.18367004]
[158.63226318 50.22397995]
[167.55442810 64.46266174]
[173.11389160 80.18473816]
[175.09513855 96.61472321]
[173.45773315 112.95484161]
[168.33561707 128.42376709]
[160.02799988 142.29397583]
[148.98243713 153.92594910]
[157.87123108 166.00856018]
[166.76000977 178.09117126]
[175.64878845 190.17378235]
[190.05902100 196.70492554]
[191.36856079 211.54183960]
[200.25733948 223.62446594]
[209.14613342 235.70707703]
[218.03491211 247.78968811]
[226.92369080 259.87231445]
[235.81246948 271.95492554]
[249.52049255 270.84469604]
[261.89480591 276.59429932]
[269.76074219 287.61117554]
[271.15841675 300.96694946]
[265.83023071 313.17553711]
[274.59884644 325.34564209]
[283.36743164 337.51574707]
[281.50692749 322.63159180]
[275.33175659 308.96163940]
[276.55780029 294.01184082]
[284.87765503 281.53067017]
[298.20520020 274.64761353]
[313.19873047 275.08853149]
[326.09875488 282.74288940]
[333.67077637 295.69143677]
[334.01617432 310.68743896]
[327.04833984 323.97088623]
[314.51525879 332.21075439]
[304.97592163 343.78662109]
[318.89724731 338.20123291]
[332.81857300 332.61584473]
[346.71206665 326.96154785]
[360.57736206 321.23846436]
[374.44265747 315.51538086]
[388.30795288 309.79229736]
[402.17324829 304.06924438]
[416.03851318 298.34616089]
[429.90380859 292.62307739]
[443.76910400 286.89999390]
[451.22982788 272.69726562]
[467.01214600 269.81668091]
[479.00924683 280.46795654]
[478.01794434 296.48034668]
[464.79870605 305.57052612]
[449.49218750 300.76528931]
[435.62689209 306.48837280]
[421.76159668 312.21145630]
[407.89630127 317.93453979]
[394.03100586 323.65759277]
[380.16574097 329.38067627]
[366.30044556 335.10375977]
[352.43515015 340.82684326]
[347.47836304 346.25357056]
[338.40396118 346.53717041]
[324.48263550 352.12258911]
[310.56130981 357.70797729]
[314.67694092 385.75988770]
[295.47769165 406.07177734]
[301.81323242 419.66815186]
[308.14877319 433.26449585]
[314.48428345 446.86087036]
[320.81982422 460.45721436]
[327.68920898 473.79180908]
[335.08166504 486.84368896]
[342.47415161 499.89556885]
[349.86660767 512.94744873]
[357.25906372 525.99932861]
[364.65151978 539.05120850]
[372.04397583 552.10308838]
[379.43646240 565.15496826]
[386.82891846 578.20684814]
[394.22137451 591.25872803]
[398.62561035 593.85449219]
[401.35443115 597.50073242]
[402.28729248 601.39752197]
[401.63299561 604.81030273]
[408.63418579 618.07617188]
[415.63540649 631.34204102]
[422.63659668 644.60791016]
[429.63781738 657.87377930]
[442.36398315 655.18200684]
[456.62115479 660.86596680]
[466.89978027 675.30615234]
[479.84033203 682.89184570]
[492.78088379 690.47747803]
[508.00814819 686.24597168]
[521.72631836 694.09381104]
[525.79656982 709.36492920]
[517.80419922 722.99932861]
[502.49084473 726.90795898]
[488.94171143 718.77185059]
[485.19522095 703.41802979]
[472.25466919 695.83239746]
[459.31411743 688.24670410]
[453.50036621 692.98492432]
[455.89367676 707.79272461]
[441.87286377 702.46124268]
[436.05911255 707.19940186]
[440.87777710 721.40435791]
[445.69641113 735.60931396]
[458.35232544 740.12207031]
[466.00100708 750.93194580]
[466.04391479 763.97973633]
[458.68872070 774.52093506]
[463.36636353 788.77294922]
[468.04400635 803.02496338]
[472.72164917 817.27697754]
[477.39932251 831.52893066]
[482.21795654 845.73388672]
[487.17715454 859.89038086]
[492.13635254 874.04687500]
[497.09555054 888.20336914]
[502.05474854 902.35986328]
[507.01394653 916.51635742]
[512.11322021 930.62304688]
[517.35198975 944.67846680]
[522.59082031 958.73388672]
[537.78186035 960.60229492]
[550.35791016 969.32586670]
[557.42913818 982.89996338]
[557.37066650 998.20538330]
[550.19580078 1011.72497559]
[537.55340576 1020.35217285]
[522.34851074 1022.10437012]
[508.07513428 1016.57897949]
[498.01321411 1005.04571533]
[494.47485352 990.15484619]
[498.27319336 975.32812500]
[508.53536987 963.97265625]
[503.29656982 949.91723633]
[498.05776978 935.86181641]
[494.21124268 933.11492920]
[492.01928711 927.94555664]
[492.85745239 921.47558594]
[487.89825439 907.31909180]
[482.93905640 893.16259766]
[477.97985840 879.00610352]
[473.02066040 864.84960938]
[468.06146240 850.69311523]
[464.27014160 847.87048340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 284]
[2 283]
[3 282]
[4 281]
[5 280]
[8 276]
[9 275]
[10 274]
[12 256]
[13 255]
[14 254]
[15 253]
[16 252]
[17 248]
[18 247]
[19 246]
[20 245]
[21 244]
[22 243]
[23 242]
[24 241]
[25 240]
[26 239]
[35 238]
[36 237]
[37 236]
[38 235]
[39 234]
[40 57]
[41 56]
[44 53]
[45 52]
[61 193]
[62 192]
[63 191]
[67 186]
[68 185]
[69 184]
[70 183]
[71 182]
[72 181]
[74 179]
[75 178]
[76 177]
[77 176]
[87 106]
[88 105]
[91 102]
[92 101]
[93 100]
[94 99]
[113 126]
[114 125]
[115 124]
[116 123]
[128 149]
[129 148]
[130 147]
[131 146]
[133 144]
[134 143]
[135 142]
[155 166]
[156 165]
[157 164]
[205 232]
[206 231]
[207 230]
[208 228]
[209 227]
[210 226]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
[259 270]
[260 269]
[261 268]
[285 315]
[286 314]
[287 313]
[288 312]
[289 311]
[290 310]
[291 307]
[292 306]
[293 305]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
