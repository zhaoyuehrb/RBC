%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAGGCCUCGCACAAAACACUGUACAAACCCGAAAGGAAGUCUGAGAGACGAACCGCCUUCCUCCCUGAAGCUUCUAGAACUGGAGCAGAAAGAAGGUGUGGCCCAGGGCCAGCCCCGCCUCCUCCCCGGGCGGAAGCUGUGUCAGUUGCCGGAAGUCGGCGUGAGGUGGGGCUU\
) } def
/len { sequence length } bind def

/coor [
[221.88841248 249.11918640]
[207.02818298 251.16218567]
[193.74165344 244.20027161]
[186.96343994 230.81910706]
[189.21095276 215.98843384]
[199.64949036 205.21638489]
[214.40203857 202.50366211]
[201.63656616 194.62693787]
[188.87109375 186.75021362]
[176.10562134 178.87348938]
[163.34014893 170.99676514]
[144.04090881 171.87678528]
[134.69007874 154.03981018]
[121.65604401 146.61593628]
[106.86405945 149.10536194]
[96.97799683 160.38656616]
[87.09193420 171.66778564]
[88.38130951 187.41938782]
[78.09141541 199.41494751]
[62.32705688 200.53771973]
[50.44095612 190.12158203]
[49.48492050 174.34622192]
[60.02614975 162.57092285]
[75.81072235 161.78172302]
[85.69678497 150.50050354]
[95.58284760 139.21929932]
[91.53308105 132.90666199]
[78.90780640 141.00621033]
[66.28241730 149.10554504]
[58.18326187 136.48002625]
[70.80826569 128.38093567]
[83.43353271 120.28139496]
[79.38376617 113.96875763]
[65.00833893 118.25212097]
[54.13828659 130.53112793]
[38.12554169 126.99220276]
[33.44264221 111.27589417]
[44.90695190 99.54978943]
[60.72497559 103.87670135]
[75.10040283 99.59333801]
[74.44309235 92.12219238]
[73.12847137 77.17991638]
[72.47116089 69.70877075]
[57.56866074 68.00128174]
[42.66616058 66.29378510]
[27.76366234 64.58629608]
[11.33921337 68.79031372]
[2.75274491 54.17153168]
[14.42325211 41.87374115]
[29.47115517 49.68379593]
[44.37365341 51.39128876]
[59.27615356 53.09878159]
[74.17864990 54.80627441]
[78.86951447 48.95428085]
[67.16567993 39.57236481]
[76.54779053 27.86869049]
[88.25123596 37.25029373]
[92.94209290 31.39830017]
[88.03230286 17.22459412]
[83.12252045 3.05088663]
[78.21273041 -11.12282085]
[73.30294037 -25.29652786]
[68.39315033 -39.47023392]
[63.48336411 -53.64394379]
[50.01759720 -56.66348648]
[39.88769913 -65.87494659]
[35.67301559 -78.78801727]
[38.37486649 -91.98950958]
[47.18107986 -102.04544830]
[42.52079391 -116.30313873]
[38.58904648 -119.82434845]
[36.61806870 -124.08032227]
[36.55720520 -128.19338989]
[38.01192856 -131.43537903]
[34.10845566 -145.91856384]
[30.20498466 -160.40176392]
[26.30151176 -174.88494873]
[22.39803886 -189.36814880]
[8.14064884 -195.79161072]
[1.39437664 -209.89912415]
[5.34460497 -225.02954102]
[18.12615776 -234.03875732]
[33.70397568 -232.67288208]
[44.72269058 -221.57685852]
[45.97959900 -205.98986816]
[36.88123322 -193.27162170]
[40.78470612 -178.78842163]
[44.68817902 -164.30523682]
[48.59165192 -149.82203674]
[52.49512100 -135.33885193]
[56.77848434 -120.96342468]
[61.43877029 -106.70573425]
[77.20249939 -102.17302704]
[87.26745605 -89.01206207]
[87.51766968 -72.27944946]
[77.65706635 -58.55373001]
[82.56685638 -44.38002396]
[87.47664642 -30.20631599]
[92.38643646 -16.03260994]
[97.29622650 -1.85890198]
[102.20601654 12.31480503]
[107.11579895 26.48851204]
[149.10083008 58.88085175]
[154.06019592 104.33303070]
[129.07992554 133.58190918]
[142.11395264 141.00578308]
[152.45552063 137.51884460]
[162.79219055 140.25880432]
[169.75598145 148.08212280]
[171.21687317 158.23129272]
[183.98234558 166.10801697]
[196.74781799 173.98474121]
[209.51329041 181.86146545]
[222.27876282 189.73818970]
[235.56530762 196.70007324]
[249.30746460 202.71281433]
[263.04962158 208.72555542]
[276.79177856 214.73829651]
[290.53393555 220.75103760]
[304.27609253 226.76376343]
[318.01824951 232.77650452]
[331.76040649 238.78924561]
[345.50259399 244.80198669]
[359.24475098 250.81472778]
[372.98690796 256.82748413]
[384.34307861 248.98643494]
[397.98318481 247.79757690]
[410.32769775 253.46533203]
[418.19024658 264.40881348]
[419.59979248 277.70108032]
[433.23431396 283.95407104]
[446.86883545 290.20706177]
[465.27044678 282.20867920]
[483.36236572 290.15637207]
[489.72113037 308.54455566]
[503.66583252 314.07131958]
[517.61053467 319.59808350]
[533.29064941 317.48980713]
[542.27172852 329.37213135]
[556.21643066 334.89889526]
[570.16113281 340.42565918]
[584.10583496 345.95242310]
[598.05053711 351.47918701]
[615.00311279 351.69418335]
[619.48950195 368.04376221]
[605.02081299 376.88079834]
[592.52380371 365.42388916]
[578.57904053 359.89712524]
[564.63433838 354.37036133]
[550.68963623 348.84359741]
[536.74493408 343.31683350]
[522.06225586 345.82043457]
[512.08380127 333.54278564]
[498.13906860 328.01602173]
[484.19436646 322.48925781]
[476.17648315 328.97857666]
[466.10610962 331.55953979]
[455.79605103 329.69799805]
[447.13128662 323.66583252]
[441.72448730 314.50363159]
[440.61584473 303.84158325]
[426.98132324 297.58859253]
[413.34680176 291.33560181]
[399.31976318 299.83755493]
[382.82293701 298.29840088]
[370.36352539 287.12677002]
[366.97415161 270.56964111]
[353.23199463 264.55688477]
[339.48983765 258.54415894]
[325.74768066 252.53140259]
[312.00552368 246.51867676]
[298.26336670 240.50593567]
[284.52120972 234.49319458]
[270.77905273 228.48045349]
[257.03686523 222.46771240]
[243.29472351 216.45497131]
[229.55256653 210.44223022]
[235.71891785 224.11614990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[13 106]
[14 105]
[15 26]
[16 25]
[17 24]
[33 40]
[34 39]
[43 53]
[44 52]
[45 51]
[46 50]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[69 92]
[70 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 169]
[124 168]
[125 167]
[130 163]
[131 162]
[132 161]
[135 155]
[136 154]
[137 153]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
