%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGCGGGACGGGCGGGCGCGCGGGCGUUGUUGGGCUCCUCUGAGCGGUUGAGGUUGGGGCUGGGGUUGAGCUCGGGUUGGGUUCCUCCUGGGGCAGGAGGGAAAGGCGGGAGCCAGGGCGUCAGGGCCUGCGGACGAUGUGUGUGUGAAAGGGCGCGUCAGCCAUAAGAAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[170.81909180 679.90173340]
[169.83723450 664.81774902]
[173.34671021 650.11486816]
[181.03544617 637.10046387]
[192.21978760 626.93176270]
[205.90521240 620.51300049]
[203.80603027 605.66064453]
[194.32028198 598.12481689]
[192.46429443 585.74725342]
[199.77593994 575.09863281]
[197.93774414 560.21166992]
[196.09954834 545.32470703]
[194.26133728 530.43780518]
[185.02267456 518.75463867]
[191.01048279 504.11029053]
[189.17228699 489.22335815]
[173.35417175 481.42269897]
[165.29460144 465.55877686]
[168.37614441 447.87451172]
[181.55479431 435.45645142]
[179.19528198 420.64318848]
[176.83576965 405.82992554]
[174.47624207 391.01666260]
[172.11672974 376.20339966]
[169.75721741 361.39013672]
[160.11422729 350.03839111]
[165.58441162 335.19296265]
[163.22489929 320.37969971]
[160.86538696 305.56643677]
[158.50585938 290.75317383]
[156.14634705 275.93991089]
[153.78683472 261.12664795]
[151.42730713 246.31338501]
[149.06779480 231.50012207]
[132.08239746 216.85801697]
[137.06762695 194.32794189]
[130.45790100 180.86274719]
[123.84817505 167.39755249]
[117.23844910 153.93235779]
[110.62872314 140.46714783]
[104.01899719 127.00195312]
[97.40927887 113.53675842]
[85.78807068 104.05269623]
[71.27117920 100.27646637]
[55.96761703 104.29039764]
[45.59811020 93.59822083]
[31.08122063 89.82199097]
[16.56433105 86.04576111]
[3.92641711 95.25538635]
[-11.67100048 94.13530731]
[-22.86329842 83.21438599]
[-24.36581612 67.64915466]
[-15.46911144 54.78903580]
[-0.37393486 50.70618439]
[13.79223156 57.32839966]
[20.34055901 71.52887726]
[34.85744858 75.30509949]
[49.37434006 79.08132935]
[63.63955307 74.79730225]
[75.04740143 85.75957489]
[89.56429291 89.53580475]
[93.66930389 83.25894928]
[105.98433685 64.42839050]
[96.70568085 52.64252472]
[87.42703247 40.85666275]
[78.14837646 29.07079887]
[68.86972046 17.28493690]
[53.14855576 15.66612339]
[43.24164581 3.35236454]
[45.02658081 -12.35080528]
[57.44439316 -22.12697411]
[73.12781525 -20.17611504]
[82.77214813 -7.65563679]
[80.65558624 8.00628185]
[89.93423462 19.79214478]
[99.21289062 31.57800865]
[108.49154663 43.36387253]
[117.77020264 55.14973450]
[132.31967163 51.50104141]
[134.93879700 36.73147202]
[137.55792236 21.96190262]
[128.61448669 11.86741257]
[127.14860535 -1.34316492]
[133.47349548 -12.81156063]
[145.07836914 -18.44997406]
[147.95629883 -33.17130280]
[150.83421326 -47.89263153]
[153.71214294 -62.61396408]
[156.59007263 -77.33528900]
[159.46800232 -92.05661774]
[162.34591675 -106.77795410]
[165.22384644 -121.49928284]
[168.10177612 -136.22061157]
[165.20668030 -152.92553711]
[180.45735168 -160.33187866]
[191.79603577 -147.72749329]
[182.82310486 -133.34268188]
[179.94517517 -118.62135315]
[177.06724548 -103.90002441]
[174.18933105 -89.17869568]
[171.31140137 -74.45736694]
[168.43347168 -59.73603821]
[165.55554199 -45.01470566]
[162.67762756 -30.29337692]
[159.79969788 -15.57204819]
[169.77593994 -2.04901028]
[166.84111023 14.83999348]
[152.32748413 24.58102798]
[149.70835876 39.35059738]
[147.08923340 54.12016678]
[110.87447357 106.92703247]
[117.48419952 120.39223480]
[124.09392548 133.85743713]
[130.70364380 147.32263184]
[137.31336975 160.78782654]
[143.92309570 174.25302124]
[150.53282166 187.71821594]
[161.80026245 189.87873840]
[170.28678894 197.11140442]
[184.58483887 192.57641602]
[198.88287354 188.04141235]
[213.18090820 183.50642395]
[220.23115540 169.36183167]
[235.24449158 164.42468262]
[249.31375122 171.62408447]
[254.09190369 186.68876648]
[246.74415588 200.68112183]
[231.62979126 205.29974365]
[217.71589661 197.80445862]
[203.41786194 202.33946228]
[189.11982727 206.87445068]
[174.82179260 211.40943909]
[173.88069153 216.74919128]
[171.63658142 221.68504333]
[168.23152161 225.90455627]
[163.88105774 229.14060974]
[166.24057007 243.95387268]
[168.60009766 258.76712036]
[170.95960999 273.58038330]
[173.31912231 288.39364624]
[175.67864990 303.20690918]
[178.03816223 318.02017212]
[180.39767456 332.83343506]
[190.20944214 345.24472046]
[184.57048035 359.03063965]
[186.92999268 373.84390259]
[189.28950500 388.65713501]
[191.64903259 403.47039795]
[194.00854492 418.28366089]
[196.36805725 433.09692383]
[208.19100952 437.25823975]
[217.06315613 446.00909424]
[221.33692932 457.63793945]
[220.25570679 469.90744019]
[214.08686829 480.48474121]
[204.05923462 487.38513184]
[205.89743042 502.27209473]
[215.26757812 515.02008057]
[209.14828491 528.59960938]
[210.98648071 543.48651123]
[212.82467651 558.37347412]
[214.66288757 573.26043701]
[226.09437561 587.67938232]
[218.65841675 603.56146240]
[220.75759888 618.41381836]
[235.68585205 620.78845215]
[249.25021362 627.45922852]
[260.24456787 637.83300781]
[267.69128418 650.98742676]
[270.92822266 665.75268555]
[269.66754150 680.81597900]
[264.02136230 694.83782959]
[254.49169922 706.57141113]
[241.92596436 714.97338867]
[227.44148254 719.29675293]
[212.32620239 719.15692139]
[197.92414856 714.56646729]
[185.51596069 705.93347168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[10 162]
[11 161]
[12 160]
[13 159]
[15 157]
[16 156]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[33 137]
[34 136]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 61]
[44 60]
[46 58]
[47 57]
[48 56]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[79 110]
[80 109]
[81 108]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[119 132]
[120 131]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
