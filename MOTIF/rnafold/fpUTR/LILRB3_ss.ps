%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAGAAGGACCCAGCCUCCGAGCGGCCACACCCUGUGUGUCUCUCUGUCCUGCCAGCACUGAGGGCUCAUCCCUCUGCAGAGCGCGGGGUCACCGGAAGGAGACGCC\
) } def
/len { sequence length } bind def

/coor [
[35.21808624 326.94741821]
[27.52136803 314.07263184]
[23.85880661 299.52664185]
[24.54078102 284.54214478]
[29.50950050 270.38897705]
[38.34389496 258.26654053]
[50.29531097 249.20213318]
[64.35093689 243.96388245]
[79.31966400 242.99571228]
[93.93297577 246.37965393]
[106.95249176 253.82894897]
[117.27715302 264.71551514]
[115.18029785 249.86280823]
[113.08344269 235.01010132]
[110.98658752 220.15737915]
[108.88973236 205.30465698]
[99.44925690 193.78395081]
[105.18144989 179.03768921]
[103.08459473 164.18496704]
[100.77964783 149.36312866]
[98.26705170 134.57505798]
[95.75445557 119.78699493]
[77.16238403 108.18493652]
[77.85186768 82.41095734]
[64.52518463 75.52622986]
[51.19849777 68.64150238]
[35.38651276 69.18164062]
[27.63030434 56.46588516]
[14.30361938 49.58115768]
[0.97693521 42.69643021]
[-12.44499397 35.99927902]
[-25.95952606 29.49102211]
[-39.47406006 22.98276520]
[-52.98859406 16.47451019]
[-69.88256836 15.04973125]
[-73.19018555 -1.57843685]
[-58.12749481 -9.35992908]
[-46.48033524 2.95997691]
[-32.96580505 9.46823311]
[-19.45127106 15.97648907]
[-5.93673754 22.48474503]
[1.56250596 22.55251122]
[7.86166334 29.36974335]
[21.18834686 36.25447083]
[34.51503372 43.13920212]
[49.37380219 42.10661697]
[58.08322525 55.31481552]
[71.40991211 62.19954300]
[84.73659515 69.08427429]
[71.61846161 61.81003189]
[63.61670303 49.12256241]
[62.70439911 34.15032959]
[69.10649872 20.58518791]
[81.24437714 11.77201843]
[96.12507629 9.88397217]
[110.07932281 15.38660240]
[119.66629028 26.92307281]
[122.52201080 41.64872360]
[117.94234467 55.93251038]
[107.05758667 66.25175476]
[118.24221802 56.25655365]
[129.42684937 46.26135254]
[131.93775940 39.89278793]
[136.63418579 36.37876129]
[141.53027344 36.04093552]
[153.25773621 26.68858719]
[164.98521423 17.33624077]
[176.71267700 7.98389387]
[188.44015503 -1.36845326]
[191.65800476 -17.08548164]
[206.01721191 -24.24039459]
[220.50262451 -17.34455490]
[224.00225830 -1.68786013]
[213.83151245 10.71921253]
[197.79249573 10.35901928]
[186.06503296 19.71136665]
[174.33755493 29.06371307]
[162.61009216 38.41606140]
[150.88261414 47.76840591]
[139.42205811 57.44598770]
[128.23742676 67.44118500]
[117.05278778 77.43638611]
[124.23019409 101.20308685]
[110.54252625 117.27439880]
[113.05511475 132.06246948]
[115.56771088 146.85052490]
[120.15009308 154.92243958]
[117.93731689 162.08811951]
[120.03417206 176.94082642]
[129.62463379 189.52391052]
[123.74244690 203.20780945]
[125.83930206 218.06053162]
[127.93615723 232.91323853]
[130.03302002 247.76596069]
[132.12986755 262.61868286]
[137.42430115 269.02502441]
[137.87268066 276.48306274]
[146.89244080 288.46823120]
[162.18745422 294.38385010]
[164.44416809 310.62698364]
[151.34107971 320.48806763]
[136.35751343 313.82287598]
[134.90728760 297.48797607]
[125.88752747 285.50280762]
[126.28533173 300.49755859]
[122.34768677 314.97149658]
[114.40829468 327.69805908]
[103.13995361 337.59881592]
[89.49759674 343.83465576]
[74.63731384 345.87719727]
[59.81841660 343.55334473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 95]
[13 94]
[14 93]
[15 92]
[16 91]
[18 89]
[19 88]
[20 86]
[21 85]
[22 84]
[24 49]
[25 48]
[26 47]
[28 45]
[29 44]
[30 43]
[31 41]
[32 40]
[33 39]
[34 38]
[60 82]
[61 81]
[62 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
