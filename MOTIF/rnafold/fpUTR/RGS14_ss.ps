%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAGACACUUCCUGUGGCAGAGAAAAGAGGUAGUGAGCGGUGUUUCAGGAUGUGAGGGCCCGCAGGAGCCGAGUCAGGCUCUCUCCACUGCCUGCCCGCCACCGUGCAAGCUCUGGCCGGCGCUGCCCACAGUCCCCAUGGUGGGCAGCCCCCGCGGCGGGGACCCCUGAUCGGCAGCGGC\
) } def
/len { sequence length } bind def

/coor [
[86.82951355 319.12133789]
[71.95861053 317.15759277]
[59.64274979 308.59490967]
[52.62286377 295.33892822]
[52.46124268 280.33981323]
[59.19385910 266.93563843]
[71.32234955 258.10955811]
[86.14748383 255.82582092]
[100.36988831 260.59271240]
[110.82343292 271.34780884]
[108.51507568 256.52648926]
[106.20671844 241.70516968]
[103.89835358 226.88385010]
[101.58999634 212.06253052]
[99.28163910 197.24121094]
[96.97328186 182.41989136]
[87.36953735 171.03492737]
[92.89096069 156.20845032]
[90.58259583 141.38713074]
[79.32117462 151.29573059]
[64.79911804 155.05204773]
[50.14559555 151.84669495]
[38.51808929 142.37036133]
[32.42205048 128.66494751]
[33.17103195 113.68365479]
[40.60364532 100.65460205]
[53.11833954 92.38523102]
[68.01849365 90.65740204]
[82.09313202 95.84318542]
[69.23341370 88.12129974]
[56.37369156 80.39940643]
[43.51397324 72.67751312]
[30.65425301 64.95561981]
[17.79453468 57.23373032]
[4.93481493 49.51183701]
[-7.92490435 41.78994370]
[-30.51115036 45.21809769]
[-44.32202148 27.81433678]
[-59.07899094 25.12512589]
[-73.83596039 22.43591499]
[-88.59293365 19.74670410]
[-101.49886322 28.46878815]
[-116.42621613 25.53132629]
[-124.66185760 13.17374420]
[-139.41882324 10.48453236]
[-154.17579651 7.79532099]
[-168.93276978 5.10610962]
[-183.68972778 2.41689825]
[-197.64874268 10.32419872]
[-212.47988892 4.20727110]
[-216.80596924 -11.24150085]
[-207.30839539 -24.17114067]
[-191.27288818 -24.66313744]
[-181.00051880 -12.34007072]
[-166.24354553 -9.65085983]
[-151.48658752 -6.96164846]
[-136.72961426 -4.27243662]
[-121.97264099 -1.58322549]
[-109.90725708 -10.24128437]
[-94.90328217 -7.72425985]
[-85.90371704 4.98973417]
[-71.14675140 7.67894554]
[-56.38978195 10.36815643]
[-41.63281250 13.05736828]
[-41.02089691 12.07524204]
[-40.35783768 11.12689590]
[-48.62436295 -1.38967562]
[-56.89088821 -13.90624714]
[-65.15740967 -26.42281914]
[-73.42393494 -38.93939209]
[-81.69046021 -51.45596313]
[-97.22257996 -54.37638855]
[-106.07128906 -67.47126770]
[-102.98680878 -82.97164154]
[-89.79911041 -91.68141174]
[-74.33221436 -88.43322754]
[-65.76235962 -75.15417480]
[-69.17388916 -59.72248840]
[-60.90736389 -47.20591736]
[-52.64083862 -34.68934250]
[-44.37431717 -22.17277145]
[-36.10779190 -9.65620041]
[-27.84126663 2.86037159]
[-16.87584114 2.76047564]
[-7.08801174 8.04166126]
[-0.98234087 17.52342987]
[-0.20301236 28.93022537]
[12.65670681 36.65211868]
[25.51642609 44.37400818]
[38.37614441 52.09590149]
[51.23586655 59.81779480]
[64.09558105 67.53968811]
[76.95530701 75.26157379]
[89.81502533 82.98346710]
[104.44302368 79.66358948]
[112.70954895 67.14701843]
[120.97607422 54.63044739]
[122.12507629 38.85101700]
[135.59539795 32.49493408]
[143.86192322 19.97836304]
[152.12843323 7.46179199]
[160.39495850 -5.05478001]
[157.43962097 -20.34869003]
[166.00135803 -32.92451477]
[180.59997559 -35.64773560]
[188.86650085 -48.16430664]
[189.31060791 -64.55744171]
[203.85646057 -72.13042450]
[217.54052734 -63.09283066]
[216.28582764 -46.74175262]
[201.38307190 -39.89778137]
[193.11654663 -27.38121033]
[196.34297180 -12.88549614]
[188.13784790 -0.07415291]
[172.91152954 3.21174479]
[164.64501953 15.72831631]
[156.37849426 28.24488831]
[148.11196899 40.76145935]
[147.55424500 55.64561844]
[133.49264526 62.89697266]
[125.22612000 75.41354370]
[116.95959473 87.93011475]
[124.23549652 101.04733276]
[139.23051453 100.66110992]
[154.22554016 100.27489471]
[169.22058105 99.88867188]
[184.21560669 99.50245667]
[199.21063232 99.11623383]
[214.20565796 98.73001862]
[229.20068359 98.34379578]
[244.19570923 97.95758057]
[251.45953369 84.42493439]
[264.52496338 76.35088348]
[279.87744141 75.90729523]
[293.38723755 83.21350861]
[301.42031860 96.30416870]
[301.81576538 111.65797424]
[294.46725464 125.14481354]
[281.35147095 133.13679504]
[265.99649048 133.48413086]
[252.53276062 126.09337616]
[244.58192444 112.95260620]
[229.58689880 113.33882904]
[214.59187317 113.72504425]
[199.59684753 114.11125946]
[184.60182190 114.49748230]
[169.60679626 114.88369751]
[154.61177063 115.26992035]
[139.61674500 115.65613556]
[124.62171173 116.04235840]
[119.81726074 121.80146027]
[131.33531189 131.41055298]
[121.72602844 142.92843628]
[110.20836639 133.31967163]
[105.40391541 139.07876587]
[107.71227264 153.90008545]
[117.48112488 166.34516907]
[111.79460144 180.11154175]
[114.10295868 194.93284607]
[116.41131592 209.75416565]
[118.71967316 224.57548523]
[121.02803040 239.39680481]
[123.33639526 254.21812439]
[125.64475250 269.03945923]
[129.34016418 283.57711792]
[134.38972473 297.70162964]
[146.32109070 308.09167480]
[143.31985474 322.68078613]
[148.36941528 336.80529785]
[153.41897583 350.92980957]
[167.24641418 359.06503296]
[169.36456299 374.96765137]
[158.14857483 386.43853760]
[142.20239258 384.67819214]
[133.75856018 371.03704834]
[139.29446411 355.97937012]
[134.24490356 341.85485840]
[129.19534302 327.73034668]
[117.62516022 318.35058594]
[120.26521301 302.75119019]
[115.21565247 288.62667847]
[111.16612244 303.06970215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[18 156]
[19 155]
[29 94]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[38 64]
[39 63]
[40 62]
[41 61]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[95 122]
[96 121]
[97 120]
[99 118]
[100 117]
[101 116]
[102 115]
[105 112]
[106 111]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[165 181]
[166 180]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
