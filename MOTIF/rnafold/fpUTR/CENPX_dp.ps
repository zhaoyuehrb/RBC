%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CENPX)
} def

/sequence { (\
CUCAUUGGCUGGAGGCGCGGGGCGGGGUUCCGGUGGGCGCGCGUUGAGGCUGCGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.023245452 ubox
1 14 0.052873673 ubox
1 36 0.008584365 ubox
1 37 0.067326647 ubox
1 48 0.042681011 ubox
1 55 0.229496505 ubox
2 7 0.021522496 ubox
2 8 0.013235272 ubox
2 12 0.006327101 ubox
2 13 0.053054981 ubox
2 35 0.006546906 ubox
2 36 0.068867488 ubox
2 47 0.043830281 ubox
2 54 0.221552371 ubox
2 55 0.225113874 ubox
3 7 0.019876279 ubox
3 11 0.011125311 ubox
3 12 0.052852580 ubox
3 35 0.070908103 ubox
3 36 0.003397427 ubox
3 46 0.043947808 ubox
3 52 0.096413149 ubox
3 54 0.288613357 ubox
4 10 0.011404946 ubox
4 34 0.067905345 ubox
4 44 0.003362285 ubox
4 45 0.040983000 ubox
4 51 0.080783312 ubox
4 56 0.222362576 ubox
5 33 0.066199317 ubox
5 36 0.003690878 ubox
5 37 0.060559425 ubox
5 43 0.004619613 ubox
5 47 0.004304674 ubox
5 49 0.005955449 ubox
5 55 0.231899620 ubox
6 32 0.065374216 ubox
6 35 0.003583638 ubox
6 36 0.086431867 ubox
6 43 0.026527863 ubox
6 46 0.004593740 ubox
6 52 0.527117476 ubox
6 54 0.212863098 ubox
7 29 0.003396661 ubox
7 31 0.065319812 ubox
7 34 0.005503333 ubox
7 42 0.026505550 ubox
7 45 0.005481697 ubox
7 51 0.860900496 ubox
7 53 0.169901567 ubox
7 57 0.243756243 ubox
8 16 0.014048233 ubox
8 28 0.009439707 ubox
8 30 0.064528887 ubox
8 34 0.135828546 ubox
8 38 0.003706502 ubox
8 40 0.024521153 ubox
8 42 0.020535470 ubox
8 44 0.009180767 ubox
8 50 0.904568823 ubox
8 53 0.031082702 ubox
8 56 0.257646681 ubox
9 15 0.014112764 ubox
9 20 0.005147374 ubox
9 25 0.005283648 ubox
9 26 0.003841425 ubox
9 27 0.026324346 ubox
9 33 0.139242917 ubox
9 37 0.003736318 ubox
9 39 0.024123373 ubox
9 41 0.021612385 ubox
9 43 0.009211969 ubox
9 48 0.506559234 ubox
9 49 0.801603946 ubox
9 52 0.029319554 ubox
9 55 0.258722491 ubox
10 14 0.012723051 ubox
10 19 0.005165647 ubox
10 24 0.005276126 ubox
10 25 0.003556857 ubox
10 26 0.026390967 ubox
10 32 0.139284139 ubox
10 36 0.003416067 ubox
10 39 0.014676520 ubox
10 46 0.004706123 ubox
10 47 0.659167277 ubox
10 48 0.673361310 ubox
10 54 0.258451494 ubox
11 18 0.005188011 ubox
11 23 0.004837204 ubox
11 29 0.013779348 ubox
11 31 0.139463756 ubox
11 38 0.025371863 ubox
11 40 0.003162917 ubox
11 45 0.015719265 ubox
11 51 0.004507599 ubox
11 53 0.258001331 ubox
12 28 0.017411083 ubox
12 29 0.008681871 ubox
12 30 0.139468911 ubox
12 44 0.011575003 ubox
12 45 0.914839227 ubox
12 50 0.005610454 ubox
13 28 0.011136958 ubox
13 29 0.138305287 ubox
13 44 0.932015717 ubox
13 45 0.101584657 ubox
13 51 0.229411099 ubox
14 28 0.118217633 ubox
14 29 0.007799746 ubox
14 44 0.092507453 ubox
14 45 0.048424581 ubox
14 50 0.216845309 ubox
14 51 0.104115941 ubox
15 23 0.066261045 ubox
15 28 0.018094180 ubox
15 34 0.040664046 ubox
15 38 0.004073012 ubox
15 40 0.062284450 ubox
15 42 0.960031315 ubox
15 44 0.058578277 ubox
15 50 0.126118654 ubox
16 22 0.066276620 ubox
16 24 0.127248735 ubox
16 27 0.024016005 ubox
16 33 0.041403745 ubox
16 35 0.016791387 ubox
16 37 0.004092771 ubox
16 39 0.062401213 ubox
16 41 0.960208089 ubox
16 43 0.058821377 ubox
16 49 0.143702450 ubox
16 54 0.004957423 ubox
17 23 0.128425504 ubox
17 28 0.010575473 ubox
17 34 0.017247033 ubox
17 38 0.062553331 ubox
17 40 0.960204116 ubox
17 42 0.058790003 ubox
17 44 0.003213612 ubox
17 53 0.005122281 ubox
18 22 0.127495772 ubox
18 24 0.048377781 ubox
18 27 0.011153988 ubox
18 32 0.047947546 ubox
18 33 0.014837741 ubox
18 35 0.003783018 ubox
18 37 0.062510270 ubox
18 39 0.960170626 ubox
18 41 0.058775081 ubox
18 43 0.003375961 ubox
18 46 0.208678039 ubox
18 52 0.005122179 ubox
19 23 0.045322457 ubox
19 31 0.052350030 ubox
19 34 0.003167493 ubox
19 38 0.957292264 ubox
19 40 0.058341981 ubox
19 42 0.003288611 ubox
19 45 0.208461598 ubox
19 51 0.005095317 ubox
20 30 0.052977859 ubox
20 31 0.021204093 ubox
20 44 0.208070951 ubox
20 45 0.005190162 ubox
20 50 0.005069614 ubox
21 29 0.052880445 ubox
21 30 0.021211083 ubox
21 44 0.004621481 ubox
21 45 0.016714322 ubox
22 28 0.053091605 ubox
22 29 0.016528332 ubox
22 34 0.653600909 ubox
22 38 0.019879818 ubox
22 40 0.006317769 ubox
22 42 0.209698864 ubox
22 44 0.017701884 ubox
23 27 0.053011488 ubox
23 32 0.720091853 ubox
23 33 0.636671146 ubox
23 35 0.019100792 ubox
23 37 0.019297715 ubox
23 39 0.006744799 ubox
23 41 0.209700898 ubox
23 43 0.017840049 ubox
24 30 0.005864610 ubox
24 31 0.742777259 ubox
24 34 0.014480979 ubox
24 38 0.006651401 ubox
24 40 0.208337013 ubox
24 42 0.017788981 ubox
24 45 0.003205747 ubox
25 29 0.004306995 ubox
25 30 0.740448128 ubox
25 31 0.611380651 ubox
25 44 0.003215547 ubox
26 30 0.601894807 ubox
27 38 0.196949205 ubox
27 40 0.025145254 ubox
27 42 0.003280299 ubox
28 36 0.005647337 ubox
28 37 0.189097267 ubox
28 39 0.027293406 ubox
28 41 0.003263835 ubox
29 35 0.004987475 ubox
29 36 0.180757653 ubox
29 37 0.058703963 ubox
30 35 0.177206408 ubox
30 36 0.077653463 ubox
30 37 0.069340870 ubox
31 35 0.077281412 ubox
31 36 0.070064874 ubox
31 39 0.006840428 ubox
32 38 0.009948939 ubox
33 42 0.008205201 ubox
34 41 0.008220610 ubox
35 40 0.008354047 ubox
35 57 0.098828405 ubox
36 56 0.104377889 ubox
36 57 0.025014800 ubox
37 53 0.027808615 ubox
37 56 0.030331259 ubox
38 52 0.027879410 ubox
38 54 0.152701465 ubox
38 55 0.027558593 ubox
39 50 0.010159216 ubox
39 51 0.025660801 ubox
39 53 0.154419892 ubox
39 56 0.003886033 ubox
40 49 0.010415255 ubox
40 52 0.154362459 ubox
40 54 0.025786769 ubox
40 55 0.003781454 ubox
41 50 0.156031020 ubox
41 51 0.041701684 ubox
41 53 0.027092506 ubox
42 49 0.160307644 ubox
42 52 0.027092077 ubox
42 54 0.008926068 ubox
43 50 0.033832022 ubox
43 51 0.017199607 ubox
43 53 0.010031660 ubox
44 49 0.032485159 ubox
44 52 0.009959161 ubox
46 53 0.003351299 ubox
48 57 0.065190172 ubox
49 56 0.181185573 ubox
50 55 0.186986648 ubox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
