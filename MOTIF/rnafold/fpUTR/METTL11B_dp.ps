%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (METTL11B)
} def

/sequence { (\
UCAAAGAAACAGCAAGGCAAGCUUCCUUUCUCUGUAGGAAUCAUUAUUAUCCCCCUUUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.050433470 ubox
1 17 0.003757679 ubox
1 38 0.008956281 ubox
1 39 0.022424504 ubox
2 6 0.053454561 ubox
2 16 0.005492008 ubox
2 34 0.201837817 ubox
2 37 0.010659020 ubox
2 38 0.023841222 ubox
2 59 0.848433108 ubox
3 29 0.014893422 ubox
3 33 0.200460472 ubox
3 45 0.008815365 ubox
3 48 0.003363603 ubox
3 57 0.005923942 ubox
3 58 0.855192514 ubox
4 24 0.004742551 ubox
4 27 0.003344734 ubox
4 28 0.017002787 ubox
4 44 0.009178089 ubox
4 45 0.007303271 ubox
4 47 0.003303665 ubox
4 48 0.004268858 ubox
4 56 0.005807184 ubox
4 57 0.855751548 ubox
4 58 0.012910919 ubox
5 23 0.008137160 ubox
5 27 0.017599529 ubox
5 29 0.004508622 ubox
5 31 0.232255868 ubox
5 33 0.038678159 ubox
5 44 0.007561932 ubox
5 47 0.004129399 ubox
5 56 0.855735528 ubox
5 57 0.013018969 ubox
5 58 0.015473922 ubox
6 22 0.009355751 ubox
6 25 0.011888694 ubox
6 26 0.017098490 ubox
6 28 0.005268428 ubox
6 29 0.003982466 ubox
6 30 0.239513183 ubox
6 32 0.039799766 ubox
6 42 0.029520844 ubox
6 45 0.004552029 ubox
6 48 0.004247563 ubox
6 51 0.018082698 ubox
6 55 0.853327506 ubox
6 56 0.010832539 ubox
6 57 0.016773276 ubox
6 58 0.012079674 ubox
6 61 0.024382199 ubox
7 23 0.004525483 ubox
7 24 0.013896202 ubox
7 27 0.006166712 ubox
7 28 0.007247644 ubox
7 29 0.239421874 ubox
7 31 0.038384714 ubox
7 41 0.028348405 ubox
7 44 0.005051273 ubox
7 45 0.008704862 ubox
7 47 0.005211266 ubox
7 48 0.010420849 ubox
7 50 0.018563342 ubox
7 56 0.016151882 ubox
7 57 0.012963228 ubox
7 58 0.010806682 ubox
7 60 0.020906386 ubox
8 23 0.008991815 ubox
8 24 0.010878549 ubox
8 27 0.007957760 ubox
8 28 0.235797618 ubox
8 29 0.013858072 ubox
8 44 0.008258665 ubox
8 45 0.004520388 ubox
8 47 0.009593583 ubox
8 48 0.006215993 ubox
8 56 0.011866261 ubox
8 57 0.010842037 ubox
8 58 0.005935735 ubox
9 23 0.007884113 ubox
9 27 0.220088144 ubox
9 28 0.015264505 ubox
9 35 0.672528481 ubox
9 44 0.003881519 ubox
9 47 0.005393331 ubox
9 56 0.008004356 ubox
9 57 0.004887167 ubox
9 60 0.127949320 ubox
10 34 0.697334543 ubox
10 59 0.135859651 ubox
11 23 0.443581866 ubox
11 24 0.012510433 ubox
11 27 0.085976714 ubox
11 29 0.003373126 ubox
11 31 0.076960616 ubox
11 33 0.696169550 ubox
11 48 0.008898612 ubox
11 56 0.012115793 ubox
11 57 0.004366554 ubox
11 58 0.131312206 ubox
12 18 0.210968828 ubox
12 22 0.527150776 ubox
12 23 0.003164763 ubox
12 26 0.097158192 ubox
12 30 0.091067603 ubox
12 32 0.694121230 ubox
12 35 0.108288490 ubox
12 47 0.007969906 ubox
12 55 0.013271609 ubox
12 56 0.004640595 ubox
12 57 0.085551307 ubox
12 60 0.282630236 ubox
13 17 0.209658489 ubox
13 21 0.527237747 ubox
13 34 0.110786782 ubox
13 59 0.293039339 ubox
14 24 0.105478701 ubox
14 28 0.641508493 ubox
14 29 0.133346347 ubox
14 33 0.107905893 ubox
14 45 0.012643661 ubox
14 48 0.049113942 ubox
14 57 0.140217296 ubox
14 58 0.274619273 ubox
15 23 0.127904249 ubox
15 24 0.019735260 ubox
15 27 0.659938776 ubox
15 28 0.138606614 ubox
15 29 0.031851453 ubox
15 31 0.156070917 ubox
15 33 0.021903745 ubox
15 44 0.013391798 ubox
15 45 0.015612531 ubox
15 47 0.052592951 ubox
15 48 0.040643112 ubox
15 56 0.191000947 ubox
15 57 0.253746790 ubox
16 22 0.134543900 ubox
16 23 0.034804634 ubox
16 25 0.015415603 ubox
16 26 0.662178644 ubox
16 27 0.137964176 ubox
16 28 0.025522298 ubox
16 29 0.004687152 ubox
16 30 0.167368237 ubox
16 31 0.130697976 ubox
16 32 0.029009219 ubox
16 42 0.019608637 ubox
16 44 0.017388656 ubox
16 45 0.020259643 ubox
16 47 0.045646407 ubox
16 48 0.016002333 ubox
16 51 0.011184269 ubox
16 52 0.046648634 ubox
16 53 0.055361316 ubox
16 54 0.046261674 ubox
16 55 0.217671195 ubox
16 56 0.227719109 ubox
16 61 0.106643942 ubox
17 22 0.040689828 ubox
17 23 0.004419837 ubox
17 24 0.015200202 ubox
17 25 0.657988720 ubox
17 26 0.138294896 ubox
17 27 0.018634891 ubox
17 28 0.004215648 ubox
17 29 0.162472376 ubox
17 30 0.134492895 ubox
17 31 0.019190619 ubox
17 35 0.012193412 ubox
17 41 0.019559727 ubox
17 44 0.020321135 ubox
17 47 0.018135225 ubox
17 50 0.010726465 ubox
17 51 0.046854467 ubox
17 52 0.055426784 ubox
17 53 0.047448127 ubox
17 54 0.217196680 ubox
17 55 0.226356775 ubox
17 60 0.111193425 ubox
18 34 0.013790949 ubox
18 59 0.111558955 ubox
19 28 0.203816575 ubox
19 29 0.027379396 ubox
19 33 0.013173697 ubox
19 45 0.116038242 ubox
19 48 0.049208809 ubox
19 57 0.025794357 ubox
19 58 0.108262363 ubox
20 27 0.211146216 ubox
20 28 0.027536698 ubox
20 29 0.004976909 ubox
20 31 0.013313320 ubox
20 33 0.003956308 ubox
20 44 0.123784285 ubox
20 45 0.045261133 ubox
20 47 0.050565019 ubox
20 48 0.020579019 ubox
20 56 0.036481450 ubox
20 57 0.102685674 ubox
21 26 0.208207871 ubox
21 27 0.023298763 ubox
21 28 0.005439399 ubox
21 30 0.013601913 ubox
21 32 0.004588591 ubox
21 35 0.013300425 ubox
21 44 0.049685183 ubox
21 47 0.019944333 ubox
21 55 0.044343467 ubox
21 56 0.086305438 ubox
21 60 0.004680845 ubox
22 34 0.013625235 ubox
22 59 0.004849386 ubox
23 39 0.010599912 ubox
23 40 0.467512930 ubox
24 39 0.635670648 ubox
25 38 0.652096981 ubox
26 37 0.652166628 ubox
26 38 0.011494899 ubox
27 36 0.649372759 ubox
27 37 0.011698834 ubox
27 40 0.041982618 ubox
28 36 0.023002206 ubox
28 39 0.049732706 ubox
28 40 0.047165263 ubox
29 36 0.005120164 ubox
29 38 0.050946309 ubox
29 39 0.053100941 ubox
30 37 0.051578788 ubox
30 38 0.053676935 ubox
31 36 0.046612566 ubox
31 37 0.050283725 ubox
31 38 0.005561153 ubox
31 39 0.025302909 ubox
32 37 0.015112651 ubox
32 38 0.028372639 ubox
33 37 0.025582265 ubox
33 43 0.014569255 ubox
33 49 0.006259562 ubox
33 59 0.021436324 ubox
34 41 0.003972522 ubox
34 42 0.016237517 ubox
34 47 0.033247611 ubox
34 48 0.005131473 ubox
34 50 0.016786655 ubox
34 58 0.025573132 ubox
34 60 0.003489497 ubox
35 40 0.005275500 ubox
35 46 0.040701666 ubox
35 49 0.020539034 ubox
35 59 0.010259297 ubox
36 45 0.047621339 ubox
36 48 0.024068722 ubox
36 56 0.155317912 ubox
36 57 0.018350901 ubox
36 58 0.009961021 ubox
37 44 0.046489504 ubox
37 45 0.010251859 ubox
37 47 0.022758728 ubox
37 48 0.010562116 ubox
37 51 0.033392527 ubox
37 52 0.654933950 ubox
37 53 0.212877264 ubox
37 54 0.171085511 ubox
37 55 0.167916035 ubox
37 56 0.020217695 ubox
37 57 0.005201417 ubox
37 58 0.003455318 ubox
37 61 0.003404557 ubox
38 44 0.008514690 ubox
38 45 0.028994380 ubox
38 47 0.010445052 ubox
38 48 0.019531443 ubox
38 50 0.028762752 ubox
38 51 0.657074184 ubox
38 52 0.211086591 ubox
38 53 0.170989944 ubox
38 54 0.167857322 ubox
38 55 0.020651999 ubox
38 56 0.004198655 ubox
38 57 0.004316918 ubox
38 58 0.005811067 ubox
38 61 0.005844715 ubox
39 44 0.028087582 ubox
39 45 0.024309145 ubox
39 47 0.021497796 ubox
39 48 0.098771857 ubox
39 50 0.619469396 ubox
39 56 0.004240407 ubox
39 57 0.006082690 ubox
39 58 0.005336838 ubox
39 60 0.005577066 ubox
40 44 0.025343364 ubox
40 47 0.163569299 ubox
40 50 0.133841226 ubox
40 56 0.005650692 ubox
40 57 0.005631241 ubox
40 60 0.004176546 ubox
41 46 0.154038424 ubox
41 49 0.153135960 ubox
42 59 0.021538410 ubox
43 50 0.109985301 ubox
43 58 0.021260931 ubox
43 60 0.005857587 ubox
44 49 0.123996893 ubox
44 59 0.005990331 ubox
45 59 0.006816647 ubox
46 58 0.007681757 ubox
46 60 0.007378673 ubox
47 59 0.007404721 ubox
48 59 0.016677829 ubox
49 58 0.019005719 ubox
49 60 0.008050028 ubox
50 59 0.008428740 ubox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
showpage
end
%%EOF
