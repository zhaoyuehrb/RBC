%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CARS)
} def

/sequence { (\
GUGGGGCGCGACUUCCGGGGCGGCGGUUGCAUCAGAUUCUAGGAAGUGUCUGUAGCCGCAGCUGCGGGUCCGGGAUUCCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008532871 ubox
1 9 0.026807928 ubox
1 12 0.006241899 ubox
1 83 0.444014599 ubox
2 6 0.007990639 ubox
2 8 0.026767399 ubox
2 11 0.006050467 ubox
2 60 0.005667587 ubox
2 81 0.838738784 ubox
2 82 0.302725650 ubox
3 7 0.025531237 ubox
3 9 0.005509222 ubox
3 14 0.005037307 ubox
3 59 0.006290308 ubox
3 71 0.010965594 ubox
3 78 0.005661599 ubox
3 79 0.038711416 ubox
3 80 0.947250523 ubox
3 84 0.012199334 ubox
4 12 0.003183143 ubox
4 13 0.007563199 ubox
4 70 0.010672179 ubox
4 71 0.055516705 ubox
4 77 0.005638295 ubox
4 78 0.039424307 ubox
4 79 0.947582168 ubox
4 80 0.229942902 ubox
4 83 0.011865253 ubox
4 84 0.018794896 ubox
5 12 0.008114609 ubox
5 57 0.006316837 ubox
5 69 0.009893525 ubox
5 70 0.055608247 ubox
5 71 0.005875451 ubox
5 76 0.006847163 ubox
5 77 0.037768750 ubox
5 78 0.947036653 ubox
5 79 0.231419107 ubox
5 80 0.013944108 ubox
5 83 0.016625872 ubox
5 84 0.198745952 ubox
6 12 0.005759103 ubox
6 56 0.006318465 ubox
6 69 0.055549697 ubox
6 70 0.005684550 ubox
6 76 0.067598599 ubox
6 77 0.911706709 ubox
6 78 0.231408829 ubox
6 79 0.013970405 ubox
6 83 0.201256188 ubox
7 55 0.006311507 ubox
7 68 0.054548643 ubox
7 72 0.887133464 ubox
7 82 0.201351400 ubox
8 30 0.009089305 ubox
8 69 0.005497429 ubox
8 71 0.890772556 ubox
8 83 0.015551848 ubox
9 29 0.009098457 ubox
9 66 0.004521469 ubox
9 68 0.005692401 ubox
9 72 0.348463129 ubox
9 82 0.015588985 ubox
10 28 0.009091286 ubox
10 70 0.914990109 ubox
10 71 0.302726659 ubox
10 77 0.045946900 ubox
10 78 0.149187639 ubox
11 27 0.009097558 ubox
11 69 0.928539754 ubox
11 76 0.051136660 ubox
11 77 0.148724003 ubox
12 26 0.009097160 ubox
12 68 0.894235587 ubox
12 73 0.063986396 ubox
12 74 0.019554223 ubox
13 25 0.008922867 ubox
13 67 0.226697150 ubox
13 68 0.038793385 ubox
13 72 0.063282487 ubox
13 73 0.019300009 ubox
13 75 0.144031679 ubox
14 66 0.049056955 ubox
14 67 0.032373703 ubox
14 68 0.357975120 ubox
14 72 0.010655571 ubox
14 74 0.145820276 ubox
14 75 0.141592512 ubox
15 23 0.009087641 ubox
15 66 0.032497348 ubox
15 67 0.947281324 ubox
15 68 0.010744496 ubox
15 73 0.146325311 ubox
15 74 0.143385976 ubox
16 22 0.009095993 ubox
16 64 0.011914009 ubox
16 66 0.976059563 ubox
16 67 0.007948077 ubox
16 72 0.146338581 ubox
16 73 0.143293721 ubox
17 21 0.008509396 ubox
17 63 0.009809282 ubox
17 65 0.978390135 ubox
17 71 0.142992547 ubox
18 62 0.009117553 ubox
18 63 0.004058384 ubox
18 70 0.139519185 ubox
18 71 0.146669449 ubox
19 62 0.003457362 ubox
19 63 0.975665329 ubox
19 69 0.132386675 ubox
19 70 0.150023061 ubox
20 62 0.978918880 ubox
20 65 0.025777672 ubox
20 69 0.153139092 ubox
21 61 0.975220116 ubox
21 64 0.025793747 ubox
21 66 0.022575705 ubox
21 68 0.156266706 ubox
22 63 0.025695626 ubox
22 65 0.016347740 ubox
23 59 0.975292142 ubox
23 62 0.024661935 ubox
23 65 0.201300571 ubox
24 58 0.978996996 ubox
24 61 0.024285440 ubox
24 64 0.202005843 ubox
25 57 0.979048624 ubox
25 63 0.201867715 ubox
26 56 0.979035230 ubox
26 59 0.022370876 ubox
26 62 0.202018936 ubox
27 55 0.978402289 ubox
27 58 0.022223210 ubox
27 61 0.201924647 ubox
28 54 0.972761034 ubox
28 60 0.201819867 ubox
29 53 0.968409602 ubox
29 56 0.025314293 ubox
29 59 0.201837706 ubox
30 52 0.877366442 ubox
30 55 0.026509037 ubox
30 58 0.201551172 ubox
31 49 0.007254657 ubox
31 51 0.659053242 ubox
31 53 0.063769282 ubox
32 43 0.014677908 ubox
32 44 0.015217367 ubox
32 46 0.003248565 ubox
32 48 0.006975214 ubox
32 52 0.015729668 ubox
33 42 0.015257828 ubox
33 43 0.015188485 ubox
33 48 0.280665532 ubox
33 52 0.478679971 ubox
34 40 0.008349145 ubox
34 47 0.275264928 ubox
34 51 0.742407154 ubox
35 39 0.008592823 ubox
35 50 0.938922439 ubox
35 77 0.004732110 ubox
36 47 0.074477138 ubox
36 49 0.938774959 ubox
36 76 0.005310157 ubox
37 43 0.010870732 ubox
37 44 0.153833575 ubox
37 45 0.268381694 ubox
37 46 0.074075479 ubox
37 48 0.906126836 ubox
37 75 0.005375888 ubox
38 42 0.011245641 ubox
38 43 0.142569300 ubox
38 44 0.280283406 ubox
38 45 0.064963660 ubox
38 74 0.005372763 ubox
39 43 0.279554715 ubox
39 46 0.919235103 ubox
39 73 0.005376605 ubox
40 45 0.875841724 ubox
40 48 0.010151536 ubox
40 72 0.004768351 ubox
41 47 0.016907249 ubox
41 51 0.006134543 ubox
42 50 0.008545385 ubox
42 51 0.011495381 ubox
42 71 0.005993912 ubox
43 49 0.007266296 ubox
43 50 0.016439190 ubox
43 70 0.005997884 ubox
44 49 0.015049455 ubox
44 69 0.005948651 ubox
49 68 0.005878371 ubox
50 67 0.006010554 ubox
51 66 0.006010631 ubox
52 65 0.006022532 ubox
53 64 0.006021801 ubox
54 63 0.006020674 ubox
55 62 0.006023307 ubox
56 61 0.006003769 ubox
61 83 0.006414377 ubox
62 82 0.006429598 ubox
63 81 0.006427370 ubox
64 80 0.006419745 ubox
66 78 0.004262251 ubox
66 79 0.004790326 ubox
67 77 0.004319761 ubox
67 78 0.004786174 ubox
68 76 0.010042878 ubox
68 77 0.004364373 ubox
68 83 0.006364139 ubox
69 75 0.010937215 ubox
69 82 0.006283226 ubox
70 74 0.010987828 ubox
72 79 0.016126531 ubox
72 80 0.113237891 ubox
72 84 0.004543201 ubox
73 77 0.003846202 ubox
73 78 0.016379653 ubox
73 79 0.113498709 ubox
73 80 0.030726750 ubox
73 83 0.004642217 ubox
73 84 0.007022147 ubox
74 78 0.111670920 ubox
74 79 0.030680731 ubox
74 83 0.007102596 ubox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
10 70 0.9500000 lbox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
19 63 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
