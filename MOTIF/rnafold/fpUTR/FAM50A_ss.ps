%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGCGCGGGCGUCAGCUGACUGUUCGGCCGCCACCGCCGCUGCCGCUGCCGCUGUCGCUGUCGCCGCCGCCGCCGCCCGCCGCCGCCGCCGCCGCCGCCGCCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[164.78468323 173.07916260]
[159.14306641 162.55381775]
[159.35443115 150.49287415]
[147.04689026 141.91822815]
[134.73934937 133.34358215]
[122.43180847 124.76894379]
[110.12426758 116.19430542]
[95.84275818 118.64064026]
[83.95406342 110.35781097]
[81.30108643 96.11323547]
[68.99354553 87.53859711]
[56.68600845 78.96395111]
[44.37847137 70.38931274]
[28.63242149 68.84901428]
[22.61263466 55.22508621]
[10.30509663 46.65044403]
[-2.00244212 38.07580185]
[-14.30998039 29.50115967]
[-23.28145790 27.10964203]
[-26.83980370 20.50563049]
[-38.89976120 11.58613396]
[-50.95971680 2.66663575]
[-62.31983948 6.72355318]
[-74.09656525 4.74375963]
[-83.31720734 -2.65353012]
[-87.71266937 -13.49688435]
[-86.27530670 -24.98687935]
[-97.81132507 -34.57438278]
[-109.34734344 -44.16188812]
[-120.88336945 -53.74939346]
[-136.44206238 -56.61949539]
[-141.28477478 -70.70485687]
[-152.82080078 -80.29236603]
[-162.26664734 -78.13041687]
[-171.49031067 -80.60966492]
[-178.37577820 -87.02651215]
[-181.40689087 -95.79005432]
[-180.00016785 -104.81496429]
[-190.68154907 -115.34625244]
[-206.67924500 -118.95259857]
[-211.29589844 -134.68850708]
[-199.78228760 -146.36621094]
[-183.98262024 -141.97270203]
[-180.15025330 -126.02763367]
[-169.46887207 -115.49634552]
[-149.15925598 -112.31893921]
[-143.23329163 -91.82838440]
[-131.69726562 -82.24087524]
[-116.96370697 -80.05653381]
[-111.29586029 -65.28541565]
[-99.75984192 -55.69790649]
[-88.22382355 -46.11040497]
[-76.68780518 -36.52289963]
[-58.71501541 -39.37978363]
[-44.02037430 -28.11802673]
[-42.04021835 -9.39332104]
[-29.98026276 -0.47382346]
[-17.92030525 8.44567394]
[-5.73533821 17.19362068]
[6.57220030 25.76826286]
[18.87973976 34.34290314]
[31.18727684 42.91754913]
[46.05300903 43.84452820]
[52.95311356 58.08177185]
[65.26065063 66.65641022]
[77.56819153 75.23105621]
[89.87573242 83.80569458]
[104.15724182 81.35935974]
[116.04593658 89.64218903]
[118.69891357 103.88676453]
[131.00645447 112.46140289]
[143.31399536 121.03604889]
[155.62152100 129.61068726]
[167.92906189 138.18533325]
[186.30384827 134.07403564]
[201.67315674 144.39607239]
[204.71331787 162.33876038]
[217.48625183 170.20336914]
[230.28959656 167.98687744]
[240.80058289 174.91883850]
[243.61775208 186.77699280]
[256.16299438 194.99990845]
[271.94635010 196.09399414]
[278.34924316 209.54211426]
[290.89453125 217.76502991]
[306.67785645 218.85911560]
[313.08078003 232.30723572]
[325.62603760 240.53015137]
[341.40936279 241.62423706]
[347.81228638 255.07235718]
[360.35754395 263.29528809]
[376.75213623 263.68234253]
[384.37567139 278.20175171]
[375.38577271 291.91717529]
[359.03042603 290.71939087]
[352.13461304 275.84054565]
[339.58935547 267.61761475]
[324.70333862 267.11169434]
[317.40310669 253.07540894]
[304.85784912 244.85249329]
[289.97183228 244.34657288]
[282.67160034 230.31030273]
[270.12634277 222.08737183]
[255.24032593 221.58145142]
[247.94009399 207.54518127]
[235.39482117 199.32225037]
[217.90869141 199.34394836]
[209.62164307 182.97630310]
[196.84870911 175.11169434]
[186.42158508 180.14767456]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[10 67]
[11 66]
[12 65]
[13 64]
[15 62]
[16 61]
[17 60]
[18 59]
[20 58]
[21 57]
[22 56]
[27 53]
[28 52]
[29 51]
[30 50]
[32 48]
[33 47]
[38 45]
[39 44]
[77 109]
[78 108]
[81 106]
[82 105]
[84 103]
[85 102]
[87 100]
[88 99]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
