%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF407)
} def

/sequence { (\
ACAGGUUAUGAGUGCCAGUGAGCCGCCUUAGAUAGAAGCAUCGUCAGCACUUUAUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.022350161 ubox
2 10 0.113660826 ubox
2 18 0.024068358 ubox
2 20 0.005102140 ubox
3 9 0.114981256 ubox
3 19 0.004760563 ubox
3 28 0.013373491 ubox
3 51 0.035278261 ubox
3 52 0.033527737 ubox
3 53 0.014248287 ubox
3 56 0.084706410 ubox
4 16 0.061591177 ubox
4 24 0.032410088 ubox
4 27 0.014308498 ubox
4 50 0.037664303 ubox
4 51 0.040077903 ubox
4 52 0.008723736 ubox
4 53 0.021791939 ubox
4 55 0.092672795 ubox
4 56 0.291098308 ubox
5 15 0.061660170 ubox
5 23 0.032438431 ubox
5 26 0.014307419 ubox
5 33 0.004646945 ubox
5 48 0.045935218 ubox
5 50 0.040848427 ubox
5 51 0.003476237 ubox
5 52 0.011403746 ubox
5 55 0.324342199 ubox
6 14 0.061045528 ubox
6 21 0.017108347 ubox
6 22 0.027688813 ubox
6 25 0.013299648 ubox
6 32 0.004727526 ubox
6 47 0.045902531 ubox
6 49 0.039756369 ubox
6 54 0.311770637 ubox
7 14 0.005358648 ubox
7 20 0.021284170 ubox
7 21 0.023145085 ubox
7 31 0.004191578 ubox
7 46 0.044305633 ubox
7 54 0.245532440 ubox
7 57 0.101691829 ubox
8 13 0.006462893 ubox
8 19 0.026297220 ubox
8 44 0.045378123 ubox
8 53 0.249844861 ubox
8 55 0.334880018 ubox
8 56 0.106643309 ubox
9 17 0.017833358 ubox
9 18 0.025711878 ubox
9 25 0.003702068 ubox
9 30 0.015394905 ubox
9 43 0.045790012 ubox
9 46 0.041037111 ubox
9 54 0.361025854 ubox
9 57 0.021484819 ubox
10 16 0.018992000 ubox
10 19 0.003567950 ubox
10 24 0.009406132 ubox
10 29 0.016812787 ubox
10 42 0.045889965 ubox
10 45 0.041440997 ubox
10 52 0.874310358 ubox
10 53 0.301302520 ubox
10 56 0.018197480 ubox
11 28 0.016980297 ubox
11 41 0.040575784 ubox
11 44 0.040115832 ubox
11 51 0.964297739 ubox
11 52 0.214274511 ubox
11 53 0.007647956 ubox
11 55 0.011445028 ubox
11 56 0.005471676 ubox
12 23 0.010010975 ubox
12 26 0.005654920 ubox
12 27 0.016662160 ubox
12 39 0.017865638 ubox
12 41 0.044494488 ubox
12 50 0.994628007 ubox
12 51 0.033040247 ubox
12 55 0.005522752 ubox
13 22 0.009990683 ubox
13 25 0.006579110 ubox
13 38 0.017825286 ubox
13 40 0.057746766 ubox
13 49 0.995056630 ubox
13 54 0.005539388 ubox
14 23 0.010732418 ubox
14 24 0.004923586 ubox
14 26 0.014728804 ubox
14 39 0.059151642 ubox
14 48 0.995260481 ubox
14 53 0.005232861 ubox
15 22 0.011614240 ubox
15 25 0.014709402 ubox
15 38 0.059057368 ubox
15 47 0.994332016 ubox
17 28 0.012679209 ubox
17 51 0.030485450 ubox
17 56 0.032011367 ubox
18 26 0.047459890 ubox
18 27 0.012181740 ubox
18 33 0.010610925 ubox
18 41 0.019320836 ubox
18 44 0.456388592 ubox
18 48 0.011566718 ubox
18 50 0.032589707 ubox
18 55 0.036754166 ubox
19 25 0.047812923 ubox
19 30 0.077945808 ubox
19 32 0.009670057 ubox
19 34 0.010703286 ubox
19 40 0.019905258 ubox
19 43 0.776843077 ubox
19 46 0.510586162 ubox
19 47 0.010294352 ubox
19 49 0.032523831 ubox
19 54 0.037100187 ubox
20 24 0.045703186 ubox
20 29 0.082493959 ubox
20 33 0.008257406 ubox
20 39 0.019154720 ubox
20 42 0.841650328 ubox
20 45 0.517716616 ubox
20 48 0.032185422 ubox
20 52 0.020434711 ubox
20 53 0.035975486 ubox
21 28 0.083012376 ubox
21 29 0.003685052 ubox
21 41 0.837943656 ubox
21 44 0.508069634 ubox
21 51 0.023837619 ubox
21 52 0.034342585 ubox
22 27 0.081801527 ubox
22 28 0.003453931 ubox
22 39 0.695139939 ubox
22 44 0.087044883 ubox
22 48 0.005956832 ubox
22 50 0.025837571 ubox
22 51 0.028093841 ubox
23 38 0.694109658 ubox
23 43 0.156087958 ubox
23 47 0.006105368 ubox
24 43 0.121821684 ubox
25 39 0.590560654 ubox
25 42 0.124553442 ubox
25 44 0.010641724 ubox
25 48 0.049148849 ubox
26 38 0.546373273 ubox
26 43 0.011913761 ubox
26 47 0.048673100 ubox
27 35 0.671087047 ubox
27 38 0.385393357 ubox
27 47 0.009205329 ubox
28 34 0.666529997 ubox
28 35 0.071272505 ubox
28 36 0.356455241 ubox
28 37 0.449983129 ubox
28 38 0.010178103 ubox
28 46 0.011366328 ubox
29 34 0.070106961 ubox
29 35 0.353465851 ubox
29 36 0.426384979 ubox
29 37 0.024460393 ubox
29 46 0.006621423 ubox
31 42 0.067902757 ubox
31 45 0.060084055 ubox
31 56 0.034735835 ubox
32 41 0.067902595 ubox
32 44 0.059939464 ubox
32 55 0.036032271 ubox
33 40 0.064692893 ubox
33 43 0.054761181 ubox
33 54 0.036241587 ubox
34 53 0.036054207 ubox
35 42 0.057311085 ubox
35 45 0.010734488 ubox
35 52 0.035533477 ubox
35 53 0.005543493 ubox
36 41 0.052439774 ubox
36 44 0.010328019 ubox
36 51 0.034187323 ubox
36 52 0.006405223 ubox
37 51 0.006995188 ubox
38 44 0.005970075 ubox
38 48 0.036979445 ubox
38 50 0.006989263 ubox
39 43 0.006342678 ubox
39 47 0.037041360 ubox
43 50 0.003484429 ubox
44 49 0.003194834 ubox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
