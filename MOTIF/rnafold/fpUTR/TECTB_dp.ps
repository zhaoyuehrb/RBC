%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TECTB)
} def

/sequence { (\
AGGCUCAGGCCCUGGAAGGACCGUAAACAUUUGGCCAGCUUGGUUUGGAUACCUGGCAGAGACCAGGUUCUGAGAAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.038321707 ubox
1 41 0.036083525 ubox
1 46 0.008003173 ubox
1 71 0.003919856 ubox
2 11 0.170306270 ubox
2 12 0.033569059 ubox
2 36 0.089866459 ubox
2 40 0.044702177 ubox
2 45 0.010270440 ubox
2 70 0.004144138 ubox
3 10 0.172441389 ubox
3 11 0.024504196 ubox
3 35 0.089959945 ubox
3 39 0.045695569 ubox
3 44 0.013773626 ubox
3 78 0.209165691 ubox
4 9 0.173832952 ubox
4 15 0.004912009 ubox
4 34 0.089751678 ubox
4 38 0.045707070 ubox
4 43 0.014349757 ubox
4 48 0.008019807 ubox
4 74 0.953774653 ubox
4 77 0.194693835 ubox
5 15 0.012676035 ubox
5 33 0.070156633 ubox
5 34 0.005906357 ubox
5 37 0.042302818 ubox
5 43 0.011749356 ubox
5 48 0.023610379 ubox
5 73 0.969175276 ubox
5 75 0.017465171 ubox
5 76 0.123254646 ubox
6 14 0.016423930 ubox
6 33 0.052916642 ubox
6 42 0.024387997 ubox
6 47 0.050738344 ubox
6 72 0.976802979 ubox
6 74 0.022164562 ubox
7 13 0.016467468 ubox
7 31 0.020160399 ubox
7 32 0.052911694 ubox
7 41 0.024503341 ubox
7 46 0.052757558 ubox
7 71 0.976628324 ubox
8 12 0.016114425 ubox
8 22 0.086485775 ubox
8 30 0.011018089 ubox
8 31 0.020099345 ubox
8 36 0.054859069 ubox
8 40 0.024507720 ubox
8 45 0.053711644 ubox
8 69 0.009054985 ubox
8 70 0.976640744 ubox
8 71 0.006156565 ubox
9 21 0.086641017 ubox
9 24 0.005336495 ubox
9 30 0.016717391 ubox
9 35 0.055007981 ubox
9 39 0.024487120 ubox
9 44 0.058413351 ubox
9 68 0.067454293 ubox
9 69 0.911511963 ubox
9 70 0.007996878 ubox
10 19 0.045355970 ubox
10 23 0.005488202 ubox
10 34 0.054887843 ubox
10 38 0.022401448 ubox
10 43 0.058768443 ubox
10 67 0.077905902 ubox
11 18 0.045119380 ubox
11 19 0.075036280 ubox
11 33 0.054657886 ubox
11 34 0.003683090 ubox
11 42 0.058358956 ubox
11 43 0.023180963 ubox
11 66 0.055290236 ubox
11 67 0.972862099 ubox
12 18 0.075267639 ubox
12 19 0.008382830 ubox
12 33 0.005025087 ubox
12 38 0.024393248 ubox
12 42 0.028118811 ubox
12 43 0.007162206 ubox
12 66 0.974912577 ubox
13 17 0.067922634 ubox
13 18 0.008210424 ubox
13 23 0.029099886 ubox
13 29 0.044259524 ubox
13 37 0.043579285 ubox
13 42 0.006412664 ubox
13 65 0.976228764 ubox
14 22 0.032873192 ubox
14 28 0.044738788 ubox
14 31 0.003567748 ubox
14 32 0.005196133 ubox
14 36 0.045952641 ubox
14 40 0.063372130 ubox
14 41 0.004905356 ubox
14 64 0.976453302 ubox
15 21 0.032813738 ubox
15 31 0.006537026 ubox
15 32 0.010555975 ubox
15 35 0.045892373 ubox
15 39 0.064849258 ubox
15 63 0.972079953 ubox
16 30 0.006140214 ubox
16 31 0.010827813 ubox
16 32 0.005432411 ubox
17 30 0.010627704 ubox
17 31 0.005641646 ubox
17 40 0.003283158 ubox
17 54 0.003208002 ubox
18 30 0.005440040 ubox
18 32 0.031979029 ubox
18 36 0.989049801 ubox
18 53 0.003321113 ubox
19 31 0.031356141 ubox
19 35 0.989982167 ubox
19 52 0.003290778 ubox
20 30 0.028985625 ubox
21 34 0.992795142 ubox
21 48 0.003192984 ubox
21 56 0.024413083 ubox
22 33 0.992893899 ubox
22 47 0.003196264 ubox
22 55 0.024350428 ubox
23 30 0.037642792 ubox
23 32 0.968771780 ubox
23 35 0.005423724 ubox
23 52 0.022423712 ubox
23 54 0.009768714 ubox
24 29 0.045023391 ubox
24 33 0.008573595 ubox
24 34 0.005055647 ubox
24 51 0.023195149 ubox
25 31 0.119677826 ubox
25 32 0.032972142 ubox
25 50 0.023149597 ubox
26 30 0.095373208 ubox
26 31 0.042906130 ubox
26 32 0.014351157 ubox
27 31 0.015278948 ubox
28 47 0.023352967 ubox
29 46 0.023058176 ubox
29 50 0.005522474 ubox
30 49 0.005955894 ubox
30 60 0.018152473 ubox
30 61 0.010040553 ubox
30 62 0.009972813 ubox
31 48 0.005917135 ubox
31 59 0.018294701 ubox
31 60 0.011374105 ubox
31 61 0.009974985 ubox
32 47 0.004488505 ubox
32 58 0.017238006 ubox
32 59 0.010076289 ubox
32 60 0.009592140 ubox
33 45 0.024209985 ubox
33 46 0.003307125 ubox
33 57 0.012205745 ubox
34 44 0.026034214 ubox
34 57 0.026415190 ubox
35 43 0.026487917 ubox
35 48 0.007421264 ubox
35 56 0.029632891 ubox
36 42 0.026487720 ubox
36 47 0.007450054 ubox
36 55 0.029641904 ubox
37 41 0.021473551 ubox
37 46 0.007221656 ubox
37 54 0.029499131 ubox
37 69 0.003197603 ubox
38 45 0.005781966 ubox
38 53 0.021667822 ubox
38 57 0.971782798 ubox
38 68 0.004395648 ubox
38 78 0.196397761 ubox
39 43 0.003536333 ubox
39 48 0.010812335 ubox
39 56 0.972755979 ubox
39 59 0.005858303 ubox
39 61 0.070158950 ubox
39 67 0.004564394 ubox
39 77 0.196804868 ubox
40 47 0.010652438 ubox
40 49 0.010425804 ubox
40 55 0.918589281 ubox
40 56 0.003548203 ubox
40 58 0.005218435 ubox
40 59 0.005652881 ubox
40 60 0.070307566 ubox
40 66 0.004564240 ubox
40 75 0.005083505 ubox
40 76 0.195102216 ubox
41 48 0.010456841 ubox
41 51 0.004886286 ubox
41 55 0.015390672 ubox
41 58 0.007171809 ubox
41 59 0.061531169 ubox
41 65 0.004711770 ubox
41 74 0.006320230 ubox
41 75 0.178785590 ubox
41 76 0.010183822 ubox
41 79 0.020054129 ubox
42 50 0.005051664 ubox
42 53 0.972662255 ubox
42 54 0.004738679 ubox
42 57 0.006977093 ubox
42 64 0.004809025 ubox
42 78 0.031267752 ubox
43 50 0.005595910 ubox
43 52 0.973269962 ubox
43 53 0.004851913 ubox
43 57 0.070056675 ubox
43 63 0.004823185 ubox
43 78 0.023267941 ubox
44 49 0.007587008 ubox
44 51 0.957539295 ubox
44 56 0.069945440 ubox
44 60 0.003946174 ubox
44 62 0.004775302 ubox
44 73 0.020804864 ubox
44 74 0.165034796 ubox
44 75 0.011067412 ubox
44 76 0.029447217 ubox
44 77 0.022917173 ubox
45 55 0.059561002 ubox
45 56 0.006956188 ubox
45 59 0.004386297 ubox
45 61 0.004638391 ubox
45 72 0.016780686 ubox
45 73 0.194025050 ubox
45 74 0.012495889 ubox
45 75 0.028329443 ubox
45 76 0.019747704 ubox
46 55 0.009207836 ubox
46 58 0.004848009 ubox
46 60 0.004252100 ubox
46 72 0.197518960 ubox
46 73 0.012178291 ubox
46 74 0.026411774 ubox
46 75 0.018248532 ubox
47 53 0.069404605 ubox
47 54 0.012371565 ubox
47 57 0.004942901 ubox
47 70 0.012409407 ubox
47 71 0.204710595 ubox
48 52 0.068321074 ubox
48 53 0.013282074 ubox
48 69 0.011457876 ubox
48 70 0.209405359 ubox
49 68 0.006738031 ubox
49 69 0.203537934 ubox
51 68 0.206572519 ubox
52 67 0.215439179 ubox
53 61 0.005442167 ubox
53 66 0.215463369 ubox
54 60 0.005835551 ubox
54 65 0.215416103 ubox
55 64 0.215467216 ubox
56 63 0.214646040 ubox
68 76 0.003176480 ubox
69 75 0.007766699 ubox
70 74 0.008037962 ubox
70 77 0.007427768 ubox
71 76 0.007753817 ubox
71 79 0.003543271 ubox
72 78 0.004838454 ubox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
