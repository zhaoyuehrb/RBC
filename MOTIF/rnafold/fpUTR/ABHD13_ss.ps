%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCGGAGACGGAGAACAGGUUAUGUGGGAGCCGGCGGGGGCAUUUGCCGGCGACACCCGAGCGGGGGCCGGAAGUGGGGCCACAGCUCGCAGCAGGAGCUCCGGGCUAGACCGUGGCGCCGGCAGCGGCCCCUGGGCUGGAGGAGGAUGAUGAGGAGCGACGGAAGCGACGCGGGGGUACGCUGCUGCGCGGCGCCCGGUUUCGUGCCCGCGGCCGACUGCGCAGCCUGUCCGCGAGUCUGAGAUACUUACA\
GAGAGCUACA\
) } def
/len { sequence length } bind def

/coor [
[114.43247986 414.34140015]
[118.86593628 399.94839478]
[126.29020691 386.84518433]
[136.35804749 375.64462280]
[148.59855652 366.87057495]
[162.43922424 360.93341064]
[159.62153625 346.20043945]
[156.80386353 331.46743774]
[153.98619080 316.73446655]
[141.55731201 308.60681152]
[138.48991394 293.70559692]
[147.09922791 280.72418213]
[144.28153992 265.99121094]
[131.85267639 257.86352539]
[128.78526306 242.96234131]
[137.39457703 229.98091125]
[134.57690430 215.24792480]
[130.24838257 209.28871155]
[131.81402588 200.32437134]
[129.17053223 185.55914307]
[126.52705383 170.79391479]
[123.88356781 156.02868652]
[121.24008179 141.26345825]
[118.59659576 126.49822998]
[111.74620819 123.44500732]
[98.04543304 117.33856201]
[91.19503784 114.28533936]
[78.44727325 122.19068146]
[65.69950867 130.09602356]
[64.16100311 143.45660400]
[55.34536362 153.35437012]
[42.62966919 156.33381653]
[30.69538307 151.52766418]
[17.85514069 159.28189087]
[5.01489830 167.03613281]
[-7.82534456 174.79035950]
[-20.66558647 182.54460144]
[-33.50582886 190.29884338]
[-46.34607315 198.05307007]
[-59.18631744 205.80731201]
[-72.02655792 213.56153870]
[-79.46686554 228.17570496]
[-95.85527802 228.76898193]
[-104.33280182 214.73103333]
[-96.17848969 200.50292969]
[-79.78079224 200.72129822]
[-66.94055176 192.96707153]
[-54.10030746 185.21282959]
[-41.26006699 177.45858765]
[-28.41982269 169.70436096]
[-15.57958031 161.95011902]
[-2.73933721 154.19589233]
[10.10090542 146.44165039]
[22.94114876 138.68742371]
[26.28484917 122.18993378]
[40.82075119 113.04898071]
[57.79416275 117.34825134]
[70.54193115 109.44290924]
[83.28970337 101.53757477]
[82.09894562 94.13269806]
[79.71744537 79.32295990]
[78.52668762 71.91809082]
[63.94321060 68.40779877]
[49.35973358 64.89750671]
[34.77625275 61.38721085]
[22.97159767 71.28450012]
[7.78017950 72.32093811]
[-4.95792961 64.30816650]
[-10.46926785 50.49645996]
[-25.05274582 46.98616791]
[-39.63622284 43.47587204]
[-54.21970367 39.96557999]
[-65.93708801 50.13821793]
[-81.39884949 51.44720459]
[-94.65963745 43.38920975]
[-100.62039185 29.06269836]
[-96.98908997 13.97650242]
[-85.16204834 3.93157506]
[-69.68698883 2.79039478]
[-56.51440430 10.99176884]
[-50.70941162 25.38210297]
[-36.12593079 28.89239502]
[-21.54245377 32.40268707]
[-6.95897484 35.91298294]
[4.23361731 26.12197113]
[19.22267151 24.78321648]
[32.27854156 32.61887741]
[38.28654861 46.80373383]
[52.87002563 50.31402588]
[67.45350647 53.82431793]
[82.03697968 57.33460999]
[96.07427216 52.04740524]
[104.71817780 39.78841782]
[107.09349060 31.00385857]
[113.53727722 27.43650818]
[122.32536316 15.28046131]
[131.11344910 3.12441421]
[139.90155029 -9.03163242]
[136.81484985 -26.26685333]
[146.96205139 -40.11906052]
[163.65487671 -42.28628540]
[172.29878235 -54.54527283]
[180.94270325 -66.80426025]
[182.57176208 -82.54137421]
[196.22941589 -88.48423767]
[204.87333679 -100.74322510]
[213.51724243 -113.00221252]
[222.16114807 -125.26120758]
[230.80506897 -137.52018738]
[231.75473022 -157.67805481]
[249.69100952 -164.95281982]
[258.04296875 -177.41253662]
[266.39492798 -189.87226868]
[274.74688721 -202.33200073]
[283.09884644 -214.79171753]
[291.45080566 -227.25144958]
[293.61795044 -236.08966064]
[299.97567749 -239.80821228]
[308.47421265 -252.16842651]
[316.97274780 -264.52865601]
[325.47128296 -276.88888550]
[333.96978760 -289.24908447]
[342.46832275 -301.60931396]
[350.96685791 -313.96954346]
[359.39224243 -326.37973022]
[367.74420166 -338.83944702]
[376.09616089 -351.29916382]
[384.44812012 -363.75891113]
[392.80007935 -376.21862793]
[401.15203857 -388.67837524]
[409.50399780 -401.13809204]
[417.85592651 -413.59780884]
[425.98587036 -426.20355225]
[433.89120483 -438.95132446]
[441.79653931 -451.69906616]
[449.70187378 -464.44683838]
[442.07287598 -472.65203857]
[438.83786011 -484.94552612]
[442.03274536 -498.81668091]
[452.24212646 -510.83160400]
[456.09588623 -525.32812500]
[449.32324219 -539.87152100]
[456.59976196 -554.16949463]
[472.34353638 -557.25384521]
[484.47726440 -546.75848389]
[483.69302368 -530.73461914]
[470.59237671 -521.47436523]
[466.73861694 -506.97784424]
[473.18151855 -503.13873291]
[480.85980225 -516.02453613]
[488.53808594 -528.91033936]
[496.21636963 -541.79614258]
[503.89462280 -554.68194580]
[516.98712158 -562.00225830]
[516.78045654 -547.00366211]
[509.10217285 -534.11785889]
[501.42388916 -521.23205566]
[493.74560547 -508.34625244]
[486.06735229 -495.46044922]
[492.51025391 -491.62130737]
[503.42535400 -501.91015625]
[514.34045410 -512.19903564]
[519.07525635 -527.29510498]
[533.64379883 -530.39477539]
[544.55889893 -540.68365479]
[548.74822998 -556.53863525]
[564.64251709 -560.57641602]
[575.89111328 -548.64312744]
[570.92236328 -533.01483154]
[554.84771729 -529.76855469]
[543.93261719 -519.47967529]
[539.97851562 -505.11953735]
[524.62933350 -501.28390503]
[513.71417236 -490.99505615]
[502.79910278 -480.70620728]
[486.02984619 -456.25573730]
[462.44964600 -456.54150391]
[454.54431152 -443.79373169]
[446.63897705 -431.04595947]
[438.73364258 -418.29818726]
[439.16027832 -414.82998657]
[437.94906616 -410.98291016]
[434.94003296 -407.51968384]
[430.31567383 -405.24584961]
[421.96371460 -392.78613281]
[413.61175537 -380.32641602]
[405.25979614 -367.86666870]
[396.90783691 -355.40695190]
[388.55587769 -342.94723511]
[380.20391846 -330.48748779]
[371.85195923 -318.02777100]
[370.74185181 -310.74655151]
[363.32708740 -305.47100830]
[354.82855225 -293.11077881]
[346.33001709 -280.75057983]
[337.83148193 -268.39035034]
[329.33297729 -256.03012085]
[320.83444214 -243.66990662]
[312.33590698 -231.30967712]
[303.91052246 -218.89949036]
[295.55856323 -206.43977356]
[287.20660400 -193.98004150]
[278.85464478 -181.52030945]
[270.50268555 -169.06057739]
[262.15072632 -156.60086060]
[265.01699829 -146.83563232]
[261.98849487 -136.89021301]
[253.82942200 -130.09921265]
[243.06405640 -128.87628174]
[234.42013550 -116.61729431]
[225.77622986 -104.35830688]
[217.13232422 -92.09931946]
[208.48840332 -79.84032440]
[207.47761536 -64.98005676]
[193.20169067 -58.16035080]
[184.55776978 -45.90136337]
[175.91386414 -33.64237595]
[179.86297607 -21.39774704]
[175.99067688 -8.92492390]
[165.49357605 -0.83220732]
[152.05758667 -0.24354336]
[143.26950073 11.91250420]
[134.48141479 24.06855011]
[125.69332123 36.22459793]
[116.97717285 48.43232727]
[108.33325958 60.69131851]
[133.36183167 123.85474396]
[136.00531006 138.61997986]
[138.64878845 153.38520813]
[141.29228210 168.15043640]
[143.93576050 182.91566467]
[146.57925415 197.68089294]
[149.30987549 212.43025208]
[152.12756348 227.16322327]
[164.91947937 236.05168152]
[167.56712341 251.03315735]
[159.01452637 263.17352295]
[161.83219910 277.90649414]
[174.62411499 286.79495239]
[177.27177429 301.77642822]
[168.71916199 313.91677856]
[171.53684998 328.64978027]
[174.35452271 343.38275146]
[177.17221069 358.11572266]
[192.22694397 358.52664185]
[206.84126282 362.16470337]
[220.33164978 368.85977173]
[232.06709290 378.29870605]
[241.49873352 390.04000854]
[248.18542480 403.53451538]
[251.81442261 418.15112305]
[252.21598816 433.20611572]
[249.37135315 447.99536133]
[243.41354370 461.82714844]
[234.62123108 474.05456543]
[223.40565491 484.10565186]
[210.29136658 491.51037598]
[195.89176941 495.92233276]
[180.88034058 497.13522339]
[165.95919800 495.09228516]
[151.82623291 489.88909912]
[139.14247131 481.76898193]
[128.50114441 471.11175537]
[120.39997101 458.41589355]
[115.21786499 444.27517700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 244]
[7 243]
[8 242]
[9 241]
[12 238]
[13 237]
[16 234]
[17 233]
[19 232]
[20 231]
[21 230]
[22 229]
[23 228]
[24 227]
[27 59]
[28 58]
[29 57]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[62 91]
[63 90]
[64 89]
[65 88]
[69 84]
[70 83]
[71 82]
[72 81]
[92 226]
[93 225]
[95 224]
[96 223]
[97 222]
[98 221]
[101 217]
[102 216]
[103 215]
[105 213]
[106 212]
[107 211]
[108 210]
[109 209]
[111 205]
[112 204]
[113 203]
[114 202]
[115 201]
[116 200]
[118 199]
[119 198]
[120 197]
[121 196]
[122 195]
[123 194]
[124 193]
[125 191]
[126 190]
[127 189]
[128 188]
[129 187]
[130 186]
[131 185]
[132 184]
[133 180]
[134 179]
[135 178]
[136 177]
[140 148]
[141 147]
[160 175]
[161 174]
[162 173]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
