%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STKLD1)
} def

/sequence { (\
ACUGACCCACGCGGGGUGGGGCCAGGGGUGGACGCUCGCCCGUACGCGGUCGCUACUGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.005724275 ubox
1 50 0.006323952 ubox
2 14 0.007357940 ubox
2 19 0.020958284 ubox
2 20 0.142263647 ubox
2 21 0.009574502 ubox
2 25 0.947528637 ubox
2 26 0.073499663 ubox
2 27 0.011826527 ubox
2 42 0.005385932 ubox
2 49 0.007423056 ubox
3 13 0.007375018 ubox
3 18 0.020668728 ubox
3 19 0.142431072 ubox
3 20 0.005708745 ubox
3 24 0.950311322 ubox
3 25 0.066426859 ubox
3 26 0.011709859 ubox
3 48 0.007344940 ubox
3 52 0.134618091 ubox
4 12 0.007354079 ubox
4 17 0.006976769 ubox
4 23 0.948132180 ubox
4 47 0.006601568 ubox
4 51 0.183128213 ubox
4 61 0.006873665 ubox
5 17 0.143403752 ubox
5 50 0.183188814 ubox
5 60 0.006284571 ubox
6 14 0.006778233 ubox
6 15 0.049734115 ubox
6 16 0.143545001 ubox
6 20 0.952941345 ubox
6 21 0.182734793 ubox
6 49 0.181537907 ubox
7 13 0.006772716 ubox
7 14 0.051191047 ubox
7 15 0.143357674 ubox
7 19 0.955767143 ubox
7 20 0.169144739 ubox
7 48 0.168057014 ubox
7 49 0.025131155 ubox
8 13 0.051715046 ubox
8 14 0.143043516 ubox
8 18 0.958310514 ubox
8 19 0.153982047 ubox
8 48 0.034417889 ubox
9 17 0.960621324 ubox
10 16 0.960807264 ubox
10 18 0.134945383 ubox
10 46 0.062959894 ubox
10 48 0.069993524 ubox
11 17 0.135125261 ubox
11 43 0.069719239 ubox
11 45 0.060927110 ubox
11 47 0.150812350 ubox
12 16 0.134366779 ubox
12 42 0.073244336 ubox
12 46 0.150893238 ubox
13 41 0.064169578 ubox
13 45 0.150306474 ubox
14 23 0.004814827 ubox
14 40 0.053401297 ubox
14 41 0.173673604 ubox
15 22 0.004813969 ubox
15 23 0.004383541 ubox
15 39 0.039789709 ubox
15 40 0.177420853 ubox
15 57 0.013996200 ubox
16 22 0.004418367 ubox
16 35 0.005446542 ubox
16 39 0.180959872 ubox
16 45 0.004146369 ubox
16 53 0.004698321 ubox
16 56 0.047178039 ubox
17 21 0.004137729 ubox
17 34 0.005453118 ubox
17 38 0.184334569 ubox
17 44 0.004325874 ubox
17 52 0.004700230 ubox
17 55 0.047346759 ubox
18 33 0.005428024 ubox
18 36 0.008917152 ubox
18 37 0.184696497 ubox
18 43 0.004069688 ubox
18 51 0.004686635 ubox
18 54 0.047616853 ubox
19 35 0.012719809 ubox
19 36 0.184107225 ubox
19 37 0.009135595 ubox
19 41 0.013866218 ubox
19 50 0.004457632 ubox
19 53 0.047588428 ubox
20 35 0.183266399 ubox
20 36 0.011822500 ubox
20 40 0.013942417 ubox
20 51 0.049186370 ubox
20 61 0.006688319 ubox
21 29 0.020196311 ubox
21 35 0.014036367 ubox
21 39 0.014007201 ubox
21 43 0.011373987 ubox
21 47 0.144531398 ubox
21 50 0.050689004 ubox
21 60 0.020645447 ubox
22 28 0.020287778 ubox
22 31 0.182846578 ubox
22 34 0.013379327 ubox
22 38 0.014040644 ubox
22 42 0.011583996 ubox
22 46 0.144533718 ubox
22 49 0.050826905 ubox
23 27 0.020163645 ubox
23 30 0.183568567 ubox
23 48 0.050744321 ubox
23 58 0.150675702 ubox
24 29 0.176018343 ubox
24 36 0.005047854 ubox
24 57 0.150708834 ubox
25 35 0.005079457 ubox
25 37 0.006578115 ubox
25 41 0.010872798 ubox
25 56 0.150275707 ubox
25 57 0.004050603 ubox
25 61 0.014488157 ubox
26 36 0.006749771 ubox
26 37 0.013601991 ubox
26 40 0.009551234 ubox
26 41 0.678983258 ubox
26 54 0.004722164 ubox
26 56 0.012394236 ubox
26 57 0.043898890 ubox
26 60 0.031823087 ubox
26 61 0.030607078 ubox
27 35 0.006724536 ubox
27 36 0.013718762 ubox
27 39 0.007584204 ubox
27 40 0.679649155 ubox
27 41 0.003568963 ubox
27 53 0.003871478 ubox
27 54 0.123007026 ubox
27 56 0.033746453 ubox
27 57 0.656586674 ubox
27 60 0.016879888 ubox
27 61 0.006241943 ubox
28 35 0.013777584 ubox
28 39 0.679680638 ubox
28 47 0.012012044 ubox
28 53 0.156709841 ubox
28 56 0.690605130 ubox
28 60 0.003770871 ubox
29 34 0.013231300 ubox
29 38 0.679323384 ubox
29 46 0.012017835 ubox
29 52 0.156489546 ubox
29 55 0.691309604 ubox
29 59 0.003503845 ubox
30 36 0.009109503 ubox
30 37 0.677198148 ubox
30 45 0.011901516 ubox
30 51 0.155159687 ubox
30 54 0.691387090 ubox
30 57 0.004502918 ubox
31 35 0.082369386 ubox
31 36 0.528747668 ubox
31 37 0.032344067 ubox
31 50 0.089378396 ubox
31 51 0.022235344 ubox
31 53 0.691526952 ubox
31 56 0.004680142 ubox
32 36 0.038522568 ubox
32 43 0.009366852 ubox
32 50 0.029757075 ubox
33 42 0.012119007 ubox
33 48 0.146116341 ubox
33 49 0.029873008 ubox
33 52 0.669781640 ubox
34 41 0.011755569 ubox
34 47 0.146439329 ubox
34 50 0.174414498 ubox
34 51 0.667683167 ubox
34 53 0.006093286 ubox
35 46 0.145731070 ubox
35 49 0.288235021 ubox
35 52 0.006398004 ubox
36 48 0.053087261 ubox
36 49 0.594953196 ubox
37 46 0.027623757 ubox
37 48 0.691248989 ubox
37 52 0.013680338 ubox
38 45 0.039335936 ubox
38 47 0.693132928 ubox
38 50 0.018289600 ubox
38 51 0.014055345 ubox
38 53 0.005250491 ubox
39 46 0.691967838 ubox
39 49 0.017308757 ubox
39 52 0.005236591 ubox
40 48 0.015964795 ubox
40 49 0.020359605 ubox
41 48 0.021706793 ubox
41 58 0.007892609 ubox
42 47 0.038955671 ubox
42 51 0.010734453 ubox
42 53 0.025519971 ubox
42 56 0.494785190 ubox
42 57 0.007512154 ubox
42 60 0.014791507 ubox
43 52 0.025263108 ubox
43 55 0.495369375 ubox
43 58 0.009333831 ubox
43 59 0.015320151 ubox
44 50 0.014003554 ubox
44 54 0.491996637 ubox
44 57 0.010049952 ubox
45 49 0.014236673 ubox
45 52 0.111776866 ubox
45 58 0.008844082 ubox
46 51 0.104749745 ubox
46 53 0.495912774 ubox
46 57 0.004612647 ubox
47 52 0.495348107 ubox
47 58 0.217934972 ubox
48 54 0.007021780 ubox
48 57 0.220367979 ubox
48 61 0.367579677 ubox
49 53 0.007350354 ubox
49 56 0.220607712 ubox
49 60 0.381449121 ubox
50 55 0.198746392 ubox
50 59 0.382847395 ubox
51 58 0.382940018 ubox
52 57 0.259611500 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
showpage
end
%%EOF
