%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS33)
} def

/sequence { (\
GGAGCUGAGGACAGACAGAAGGACCACGGAGGGGGUGACGGGCUGGUGUGAGGAUUGGUGCCCCUGGGCCAGGACUCUCCUCUCUUCUCCCUGCUGGCUCCAGACCAGAGUCCAAGCCCUAGGCAGUGCCACCCUUACCCAGCCCAGCCUUGAAGACAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.661690211 ubox
1 149 0.091664371 ubox
1 150 0.043875991 ubox
1 151 0.013996338 ubox
2 24 0.661703137 ubox
2 148 0.091407870 ubox
2 149 0.051190101 ubox
2 150 0.013951032 ubox
2 151 0.036296557 ubox
3 150 0.037475482 ubox
3 151 0.011594165 ubox
4 148 0.066833465 ubox
4 149 0.032838339 ubox
4 150 0.006633689 ubox
5 14 0.416471777 ubox
5 18 0.589005993 ubox
5 21 0.518094622 ubox
5 22 0.043631263 ubox
5 29 0.341821604 ubox
5 31 0.028325084 ubox
5 32 0.009353458 ubox
5 147 0.068286540 ubox
5 155 0.064419915 ubox
5 159 0.157231799 ubox
6 13 0.418340909 ubox
6 17 0.592914722 ubox
6 20 0.512045079 ubox
6 21 0.042552323 ubox
6 26 0.007166585 ubox
6 28 0.343052319 ubox
6 30 0.027723395 ubox
6 31 0.009167243 ubox
6 146 0.065075277 ubox
6 152 0.084938433 ubox
6 154 0.060855322 ubox
6 158 0.157769734 ubox
7 12 0.416600045 ubox
7 16 0.595300232 ubox
7 25 0.008080661 ubox
7 27 0.341312239 ubox
7 145 0.035697268 ubox
7 151 0.136596114 ubox
7 157 0.156615468 ubox
8 150 0.147133280 ubox
8 151 0.012624746 ubox
9 25 0.349823199 ubox
9 149 0.147880992 ubox
9 150 0.012442388 ubox
9 151 0.011138444 ubox
10 24 0.348920004 ubox
10 148 0.147392826 ubox
10 149 0.012359779 ubox
10 150 0.006680792 ubox
10 151 0.006487366 ubox
11 36 0.004432560 ubox
11 150 0.004914056 ubox
12 35 0.004536406 ubox
12 37 0.006080809 ubox
12 152 0.082568713 ubox
13 36 0.005736033 ubox
13 150 0.010751161 ubox
13 151 0.077957940 ubox
14 149 0.012926700 ubox
14 150 0.047634401 ubox
14 151 0.010895505 ubox
15 36 0.006874840 ubox
15 150 0.008378070 ubox
16 35 0.007059056 ubox
16 37 0.017732252 ubox
16 152 0.062673562 ubox
17 36 0.017397678 ubox
17 150 0.008751174 ubox
17 151 0.056064564 ubox
18 149 0.009745771 ubox
18 150 0.027387578 ubox
18 151 0.013679417 ubox
19 150 0.011793515 ubox
19 151 0.321420776 ubox
20 150 0.341262792 ubox
20 151 0.020864325 ubox
21 149 0.344686003 ubox
21 150 0.021367552 ubox
21 151 0.003544096 ubox
22 148 0.343557044 ubox
22 149 0.021316449 ubox
22 151 0.005330057 ubox
23 36 0.254545844 ubox
23 150 0.004095465 ubox
24 32 0.359411715 ubox
24 33 0.174711954 ubox
24 34 0.060273833 ubox
24 35 0.261191363 ubox
25 31 0.361485813 ubox
25 32 0.176515930 ubox
25 33 0.060972212 ubox
25 34 0.261059229 ubox
25 37 0.275815460 ubox
25 152 0.041105493 ubox
26 36 0.276531467 ubox
26 151 0.038190556 ubox
27 35 0.276620796 ubox
27 37 0.007616571 ubox
27 40 0.006197601 ubox
27 152 0.085147024 ubox
28 36 0.007356376 ubox
28 39 0.009119415 ubox
28 149 0.007778588 ubox
28 151 0.070100717 ubox
29 148 0.007763825 ubox
29 150 0.026883265 ubox
29 151 0.055286299 ubox
30 150 0.058190350 ubox
30 151 0.085966073 ubox
31 149 0.057484004 ubox
31 150 0.086877689 ubox
31 151 0.162646198 ubox
32 148 0.056806959 ubox
32 149 0.085628251 ubox
32 150 0.208102075 ubox
32 151 0.657737998 ubox
33 148 0.084011717 ubox
33 149 0.215543483 ubox
33 150 0.844756938 ubox
33 151 0.027428850 ubox
34 148 0.213729893 ubox
34 149 0.881163145 ubox
34 150 0.013035321 ubox
35 148 0.882037945 ubox
35 149 0.012960556 ubox
36 146 0.188815351 ubox
36 147 0.877053134 ubox
37 145 0.093863453 ubox
40 144 0.011690654 ubox
40 145 0.992518873 ubox
41 143 0.008304213 ubox
41 144 0.999899442 ubox
42 143 0.999957322 ubox
43 142 0.999989718 ubox
44 141 0.999755144 ubox
45 140 0.999984652 ubox
46 139 0.999865821 ubox
47 137 0.003358036 ubox
48 138 0.999715496 ubox
49 137 0.999527432 ubox
50 136 0.999363160 ubox
51 135 0.999639893 ubox
51 136 0.007325604 ubox
52 133 0.037999022 ubox
52 134 0.999164829 ubox
52 135 0.008967417 ubox
53 132 0.053346787 ubox
53 133 0.996987544 ubox
53 134 0.013165074 ubox
56 128 0.010998459 ubox
56 131 0.969296517 ubox
57 127 0.014855168 ubox
57 130 0.999694867 ubox
58 129 0.999811781 ubox
59 125 0.066647198 ubox
59 126 0.003455896 ubox
59 128 0.995611575 ubox
60 124 0.111414261 ubox
60 127 0.989361621 ubox
61 123 0.108636612 ubox
61 126 0.989181922 ubox
62 122 0.105349778 ubox
62 123 0.337132612 ubox
63 122 0.338402883 ubox
63 123 0.931441216 ubox
64 122 0.933226829 ubox
64 123 0.051910934 ubox
65 121 0.914497207 ubox
65 122 0.047508690 ubox
66 119 0.969964558 ubox
66 120 0.242015393 ubox
67 118 0.979801209 ubox
67 119 0.199911540 ubox
68 117 0.989280166 ubox
68 118 0.145946705 ubox
69 116 0.998203482 ubox
72 113 0.999444599 ubox
73 112 0.999988973 ubox
74 111 0.999869249 ubox
75 110 0.999956547 ubox
76 109 0.999796429 ubox
77 108 0.999753087 ubox
77 110 0.005050921 ubox
78 104 0.006595741 ubox
78 107 0.981608788 ubox
78 109 0.007283315 ubox
79 97 0.024633271 ubox
79 103 0.008062073 ubox
79 108 0.008444431 ubox
80 96 0.024638491 ubox
80 103 0.047857058 ubox
80 108 0.007285874 ubox
80 110 0.003439301 ubox
81 102 0.046174634 ubox
81 104 0.865376756 ubox
81 107 0.011322633 ubox
81 109 0.005064529 ubox
82 97 0.003586458 ubox
82 103 0.872573349 ubox
82 108 0.005850664 ubox
83 97 0.012875370 ubox
83 102 0.841157888 ubox
83 104 0.461297687 ubox
83 107 0.006669836 ubox
84 96 0.023677753 ubox
84 97 0.063372758 ubox
84 103 0.470738896 ubox
85 96 0.062131529 ubox
85 97 0.006561376 ubox
85 102 0.454972333 ubox
85 103 0.007465364 ubox
85 104 0.004545997 ubox
86 96 0.004777985 ubox
86 97 0.160394149 ubox
86 102 0.022250048 ubox
86 103 0.004007163 ubox
86 104 0.025970024 ubox
87 96 0.173358336 ubox
87 97 0.090278532 ubox
87 103 0.026764957 ubox
88 96 0.081239435 ubox
88 97 0.124044998 ubox
88 102 0.026033223 ubox
88 104 0.005489490 ubox
89 96 0.137078412 ubox
89 97 0.429021128 ubox
89 103 0.005553668 ubox
90 96 0.424642685 ubox
90 97 0.856960338 ubox
91 96 0.860147441 ubox
91 97 0.029197034 ubox
91 103 0.013039714 ubox
91 108 0.005027052 ubox
92 96 0.026514553 ubox
92 102 0.014236847 ubox
92 107 0.008081203 ubox
93 101 0.015241205 ubox
93 106 0.010189208 ubox
94 103 0.054389904 ubox
94 108 0.010180208 ubox
95 102 0.055650484 ubox
95 107 0.016338610 ubox
96 101 0.056681349 ubox
96 106 0.020831816 ubox
97 105 0.020793369 ubox
149 155 0.017882573 ubox
149 159 0.021645347 ubox
150 154 0.016489854 ubox
150 156 0.008804890 ubox
150 158 0.018514066 ubox
150 159 0.090289090 ubox
150 160 0.009190428 ubox
151 155 0.011221268 ubox
151 158 0.155968699 ubox
151 159 0.016906959 ubox
152 157 0.176799643 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
32 151 0.9500000 lbox
33 150 0.9500000 lbox
34 149 0.9500000 lbox
35 148 0.9500000 lbox
36 147 0.9500000 lbox
40 145 0.9500000 lbox
41 144 0.9500000 lbox
42 143 0.9500000 lbox
43 142 0.9500000 lbox
44 141 0.9500000 lbox
45 140 0.9500000 lbox
46 139 0.9500000 lbox
48 138 0.9500000 lbox
49 137 0.9500000 lbox
50 136 0.9500000 lbox
51 135 0.9500000 lbox
52 134 0.9500000 lbox
53 133 0.9500000 lbox
56 131 0.9500000 lbox
57 130 0.9500000 lbox
58 129 0.9500000 lbox
59 128 0.9500000 lbox
60 127 0.9500000 lbox
61 126 0.9500000 lbox
63 123 0.9500000 lbox
64 122 0.9500000 lbox
65 121 0.9500000 lbox
66 119 0.9500000 lbox
67 118 0.9500000 lbox
68 117 0.9500000 lbox
69 116 0.9500000 lbox
72 113 0.9500000 lbox
73 112 0.9500000 lbox
74 111 0.9500000 lbox
75 110 0.9500000 lbox
76 109 0.9500000 lbox
77 108 0.9500000 lbox
78 107 0.9500000 lbox
81 104 0.9500000 lbox
82 103 0.9500000 lbox
83 102 0.9500000 lbox
90 97 0.9500000 lbox
91 96 0.9500000 lbox
showpage
end
%%EOF
