%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCUGCGUCCGCCACCGGAAGCGCCCUCCUAAUCCCCGCAGCGCCACCGCCAUUGCCGCCAUCGUCGUGGGGCUUCUGGGGCAGCUAGGGCUGCCCGCCGCGCUGCCUGCGCCGGACCGGGGCGGGUCCAGUCCCGGGCGGGCCGUCGCGGGAGAGAAAUAACAUCUGCUUUGCUGCCGAGCUCAGAGGAGACCCCAGACCCCUCCCGCAGCCAGAGGGCUGGAGCCUGCUCAGAGGUGCUUUGAAG\
) } def
/len { sequence length } bind def

/coor [
[230.79631042 100.07313538]
[216.41848755 95.79784393]
[202.04066467 91.52255249]
[187.66282654 87.24726868]
[173.28500366 82.97197723]
[158.90718079 78.69668579]
[144.52935791 74.42140198]
[130.15151978 70.14611053]
[130.34799194 114.07395172]
[98.09037781 124.39984131]
[92.39369202 138.27600098]
[86.69700623 152.15216064]
[81.00032043 166.02832031]
[83.72694397 182.19920349]
[70.91520691 192.43597412]
[55.74473190 186.20791626]
[53.82159424 169.92192078]
[67.12416077 160.33163452]
[72.82084656 146.45547485]
[78.51753235 132.57931519]
[84.21421814 118.70315552]
[67.28437805 106.98316956]
[61.77853012 81.57479095]
[46.82114792 82.70469666]
[31.87115669 83.92855072]
[16.92915344 85.24632263]
[1.98714900 86.56408691]
[-12.95485497 87.88185883]
[-27.89686012 89.19962311]
[-42.73994064 100.11728668]
[-58.34526062 92.06627655]
[-73.26952362 93.57170105]
[-79.63077545 102.35514069]
[-89.56589508 106.12345123]
[-99.72392273 103.86296082]
[-106.81788635 96.55158997]
[-121.77526855 97.68148804]
[-136.73265076 98.81139374]
[-151.69003296 99.94129181]
[-166.64741516 101.07119751]
[-181.62652588 111.80147552]
[-197.12944031 103.55500031]
[-212.07144165 104.87277222]
[-227.01345825 106.19053650]
[-240.08053589 115.11028290]
[-253.43832397 108.52101135]
[-268.38034058 109.83877563]
[-283.32232666 111.15653992]
[-298.26434326 112.47431183]
[-311.33142090 121.39405823]
[-324.68920898 114.80477905]
[-339.63122559 116.12254333]
[-344.53930664 130.53887939]
[-354.89144897 141.70816040]
[-368.89413452 147.69523621]
[-384.12127686 147.46279907]
[-397.93469238 141.05113220]
[-407.94110107 129.57110596]
[-412.40689087 115.01168060]
[-410.55828857 99.89537811]
[-402.71557617 86.84119415]
[-390.23757935 78.11083221]
[-375.28613281 75.21688843]
[-360.45175171 78.66075134]
[-348.30450439 87.84575653]
[-340.94900513 101.18054199]
[-326.00698853 99.86277771]
[-314.00866699 91.03728485]
[-299.58212280 97.53231049]
[-284.64010620 96.21453857]
[-269.69808960 94.89677429]
[-254.75610352 93.57900238]
[-242.75776672 84.75350952]
[-228.33122253 91.24853516]
[-213.38922119 89.93077087]
[-198.44720459 88.61299896]
[-190.45429993 79.55456543]
[-178.03431702 78.32093811]
[-167.77732849 86.11381531]
[-152.81994629 84.98390961]
[-137.86256409 83.85401154]
[-122.90517426 82.72410583]
[-107.94779205 81.59420776]
[-92.79002380 69.56539154]
[-74.77495575 78.64743805]
[-59.85068893 77.14200592]
[-51.97223663 67.98384857]
[-39.56874084 66.59425354]
[-29.21462631 74.25762177]
[-14.27262306 72.93984985]
[0.66938108 71.62208557]
[15.61138535 70.30431366]
[30.55338860 68.98654938]
[36.92396164 65.27768707]
[45.69124222 67.74730682]
[60.64862823 66.61740875]
[68.12140656 53.61134720]
[61.56466675 40.12026978]
[55.00793076 26.62919044]
[49.78757477 22.63913536]
[47.66539383 17.40154266]
[48.46073151 12.71568203]
[42.24509811 -0.93590784]
[36.02946472 -14.58749771]
[29.81382942 -28.23908615]
[15.35320187 -35.18673325]
[11.90962601 -50.85585403]
[22.12471962 -63.22644043]
[38.16233826 -62.80883789]
[47.71979141 -49.92339325]
[43.46541977 -34.45471954]
[49.68105316 -20.80313110]
[55.89668655 -7.15154171]
[62.11231995 6.50004816]
[68.49900818 20.07245445]
[75.05574799 33.56353378]
[81.61248016 47.05461121]
[88.99671173 45.74193954]
[111.14941406 41.80392075]
[112.65483856 26.87965393]
[114.16026306 11.95538902]
[115.66568756 -2.96887612]
[117.17111969 -17.89314079]
[118.67654419 -32.81740570]
[120.18196869 -47.74167252]
[109.14327240 -58.81782913]
[107.85826874 -74.40252686]
[116.93370056 -87.13714600]
[132.08442688 -91.00878906]
[146.15672302 -84.18939209]
[152.50610352 -69.89884949]
[148.13456726 -54.88473511]
[135.10623169 -46.23624802]
[133.60079956 -31.31198120]
[132.09538269 -16.38771629]
[130.58995056 -1.46345055]
[129.08453369 13.46081448]
[127.57910156 28.38508034]
[126.07367706 43.30934525]
[134.42681885 55.76828384]
[148.80464172 60.04357147]
[163.18246460 64.31886292]
[177.56028748 68.59415436]
[191.93812561 72.86943817]
[206.31594849 77.14472961]
[220.69377136 81.42002106]
[235.07159424 85.69530487]
[252.75741577 71.83604431]
[274.96401978 73.29455566]
[290.38461304 89.04107666]
[305.15307617 86.41573334]
[319.92153931 83.79039001]
[334.69000244 81.16503906]
[349.45846558 78.53969574]
[364.22692871 75.91435242]
[378.99539185 73.28900146]
[380.32183838 58.26649475]
[385.48770142 44.11025238]
[394.13522339 31.78319931]
[405.67001343 22.12218094]
[419.30194092 15.78115273]
[434.09918213 13.18691349]
[449.05209351 14.51038933]
[463.14184570 19.65538025]
[475.41009521 28.26552773]
[485.02398682 39.74898911]
[491.33279419 53.31912613]
[506.10125732 50.69377899]
[520.86968994 48.06843185]
[533.10266113 38.03521347]
[546.98767090 43.42551804]
[561.75616455 40.80017471]
[576.52459717 38.17482758]
[591.29309082 35.54948044]
[606.06152344 32.92413712]
[614.05828857 22.82527542]
[626.39483643 20.93142128]
[636.38940430 27.71751595]
[651.18969727 25.27795792]
[665.83459473 16.73608780]
[678.09674072 28.44402504]
[670.24084473 43.46805191]
[653.62927246 40.07824707]
[638.82897949 42.51780319]
[625.86389160 54.36061478]
[608.68688965 47.69260025]
[593.91839600 50.31794739]
[579.14996338 52.94329071]
[564.38146973 55.56863785]
[549.61303711 58.19398499]
[538.43640137 68.03942108]
[523.49505615 62.83689880]
[508.72659302 65.46224213]
[493.95812988 68.08759308]
[492.71270752 83.00061798]
[487.64550781 97.09389496]
[479.09631348 109.40469360]
[467.64297485 119.09040833]
[454.06228638 125.48620605]
[439.27752686 128.15068054]
[424.29541016 126.89627838]
[410.13769531 121.80254364]
[397.77154541 113.21102905]
[388.04330444 101.70246124]
[381.62075806 88.05747223]
[366.85229492 90.68281555]
[352.08383179 93.30815887]
[337.31536865 95.93350983]
[322.54687500 98.55885315]
[307.77841187 101.18419647]
[293.00994873 103.80954742]
[292.04208374 109.58065033]
[289.99719238 115.06343842]
[286.94958496 120.05889130]
[283.00985718 124.38565826]
[290.07040405 137.62002563]
[297.13098145 150.85440063]
[304.19152832 164.08876038]
[311.25210571 177.32313538]
[324.57443237 185.85691833]
[323.73867798 200.72805786]
[330.79922485 213.96243286]
[337.85977173 227.19679260]
[355.43545532 237.10247803]
[353.88534546 256.39102173]
[361.27627563 269.44375610]
[368.66717529 282.49652100]
[383.06683350 290.34393311]
[383.20004272 306.74255371]
[368.92974854 314.82284546]
[354.93603516 306.27255249]
[355.61441040 289.88742065]
[348.22351074 276.83468628]
[340.83261108 263.78192139]
[330.80935669 261.96121216]
[323.27502441 254.78282166]
[320.87234497 244.43226624]
[324.62542725 234.25735474]
[317.56484985 221.02299500]
[310.50430298 207.78862000]
[297.68698120 200.20144653]
[298.01773071 184.38369751]
[290.95715332 171.14932251]
[283.89660645 157.91494751]
[276.83605957 144.68058777]
[269.77548218 131.44621277]
[258.38864136 132.27395630]
[247.41870117 128.87733459]
[238.38734436 121.67649078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[10 21]
[11 20]
[12 19]
[13 18]
[23 96]
[24 95]
[25 93]
[26 92]
[27 91]
[28 90]
[29 89]
[31 86]
[32 85]
[36 83]
[37 82]
[38 81]
[39 80]
[40 79]
[42 76]
[43 75]
[44 74]
[46 72]
[47 71]
[48 70]
[49 69]
[51 67]
[52 66]
[97 117]
[98 116]
[99 115]
[102 114]
[103 113]
[104 112]
[105 111]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[150 211]
[151 210]
[152 209]
[153 208]
[154 207]
[155 206]
[156 205]
[167 194]
[168 193]
[169 192]
[171 190]
[172 189]
[173 188]
[174 187]
[175 186]
[178 184]
[179 183]
[215 246]
[216 245]
[217 244]
[218 243]
[219 242]
[221 240]
[222 239]
[223 238]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
