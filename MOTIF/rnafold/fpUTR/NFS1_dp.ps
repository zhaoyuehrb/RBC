%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NFS1)
} def

/sequence { (\
AGCGCCGGGCAGCACUUCCGGGAGCCUGGGGCCCAGGACUGCAGCGGCUUCGGAAGGUGGGCUCUGCCAGCGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.005299400 ubox
2 13 0.005206846 ubox
2 32 0.014617115 ubox
2 64 0.003301031 ubox
2 67 0.029826107 ubox
2 71 0.172706716 ubox
3 9 0.005304706 ubox
3 12 0.005215090 ubox
3 31 0.014989172 ubox
3 66 0.030040561 ubox
3 70 0.172180652 ubox
3 72 0.942793809 ubox
4 10 0.003591259 ubox
4 48 0.030270544 ubox
4 62 0.004424827 ubox
4 65 0.024494765 ubox
4 67 0.185629043 ubox
4 71 0.953972174 ubox
5 9 0.003575955 ubox
5 29 0.015235314 ubox
5 47 0.030315297 ubox
5 61 0.004426607 ubox
5 66 0.186207139 ubox
5 70 0.953628688 ubox
5 73 0.223062521 ubox
5 74 0.018968605 ubox
6 28 0.015241539 ubox
6 46 0.030315927 ubox
6 60 0.004415021 ubox
6 66 0.066294148 ubox
6 72 0.223856111 ubox
6 73 0.016437076 ubox
7 27 0.015231177 ubox
7 45 0.030175516 ubox
7 64 0.194554958 ubox
7 65 0.059966412 ubox
7 68 0.106234477 ubox
7 71 0.219123173 ubox
8 26 0.015242792 ubox
8 63 0.195471661 ubox
8 64 0.059787279 ubox
8 67 0.079059958 ubox
8 68 0.971972643 ubox
9 25 0.015241149 ubox
9 42 0.030073839 ubox
9 62 0.206519971 ubox
9 63 0.010675557 ubox
9 64 0.005089820 ubox
9 67 0.974982150 ubox
10 24 0.015215551 ubox
10 41 0.030090516 ubox
10 59 0.003185251 ubox
10 61 0.206466056 ubox
10 66 0.977511105 ubox
11 40 0.030081578 ubox
11 58 0.003217430 ubox
11 63 0.079920020 ubox
11 65 0.973149156 ubox
12 39 0.030057130 ubox
12 42 0.006423148 ubox
12 58 0.151105599 ubox
12 62 0.116378191 ubox
12 64 0.965942468 ubox
13 41 0.006517811 ubox
13 57 0.193059506 ubox
13 59 0.950887712 ubox
13 61 0.117490813 ubox
14 40 0.006332240 ubox
14 58 0.943885388 ubox
15 21 0.007906844 ubox
15 22 0.003253876 ubox
15 36 0.006177249 ubox
15 56 0.613060419 ubox
15 57 0.787314604 ubox
15 60 0.034267103 ubox
15 61 0.029043637 ubox
16 20 0.007128361 ubox
16 35 0.005967660 ubox
16 38 0.003702908 ubox
16 54 0.003567698 ubox
16 55 0.805089239 ubox
16 56 0.583145994 ubox
16 59 0.030091568 ubox
16 60 0.025596741 ubox
17 30 0.005787683 ubox
17 38 0.029828695 ubox
17 54 0.907767669 ubox
17 55 0.410542824 ubox
17 59 0.009126178 ubox
17 61 0.004913193 ubox
18 29 0.010822233 ubox
18 37 0.030140871 ubox
18 47 0.006936302 ubox
18 53 0.998325884 ubox
18 57 0.012167823 ubox
18 60 0.005579699 ubox
19 28 0.010868934 ubox
19 36 0.030030085 ubox
19 46 0.006978624 ubox
19 52 0.997252355 ubox
19 56 0.012101428 ubox
19 59 0.005597820 ubox
20 27 0.010814968 ubox
20 34 0.004174744 ubox
20 45 0.007094040 ubox
20 49 0.003685390 ubox
20 50 0.006786753 ubox
20 51 0.840987487 ubox
20 58 0.005404896 ubox
21 26 0.010776885 ubox
21 33 0.004111030 ubox
21 34 0.034339131 ubox
21 39 0.003378458 ubox
21 40 0.009816655 ubox
21 48 0.008037215 ubox
21 49 0.034304955 ubox
21 50 0.635956384 ubox
21 51 0.537469833 ubox
22 33 0.034464167 ubox
22 39 0.011318125 ubox
22 48 0.047774864 ubox
22 49 0.324588094 ubox
22 50 0.758120995 ubox
22 51 0.009457814 ubox
23 40 0.184767693 ubox
23 49 0.932957708 ubox
23 50 0.008302044 ubox
24 32 0.034678896 ubox
24 39 0.189084166 ubox
24 45 0.038165988 ubox
24 48 0.976551697 ubox
24 49 0.004227427 ubox
25 31 0.034766968 ubox
25 37 0.209963643 ubox
25 44 0.027589296 ubox
25 47 0.971138624 ubox
25 53 0.006092547 ubox
26 30 0.034515730 ubox
26 36 0.212916250 ubox
26 44 0.335674238 ubox
26 46 0.905853941 ubox
26 47 0.088865018 ubox
26 52 0.006008597 ubox
26 53 0.006289066 ubox
27 35 0.220930590 ubox
27 41 0.030777631 ubox
27 43 0.677594393 ubox
27 46 0.124833872 ubox
27 52 0.006434662 ubox
28 34 0.221149643 ubox
28 40 0.035279903 ubox
28 42 0.718419040 ubox
28 45 0.536393649 ubox
28 51 0.009115104 ubox
28 65 0.003312430 ubox
29 33 0.217579443 ubox
29 39 0.036798298 ubox
29 40 0.203433161 ubox
29 50 0.009233003 ubox
29 64 0.003724806 ubox
30 39 0.218027907 ubox
30 40 0.692851028 ubox
30 49 0.009540841 ubox
30 63 0.009465591 ubox
31 39 0.692866663 ubox
31 42 0.636925506 ubox
31 45 0.072930228 ubox
31 48 0.009605773 ubox
31 62 0.010973051 ubox
32 41 0.636498466 ubox
32 44 0.072898136 ubox
32 47 0.009589971 ubox
32 61 0.010989659 ubox
32 74 0.004314856 ubox
33 46 0.009560057 ubox
33 60 0.010990257 ubox
33 73 0.005708245 ubox
33 74 0.011307059 ubox
34 41 0.067142774 ubox
34 59 0.010989174 ubox
34 72 0.005705683 ubox
34 73 0.011327170 ubox
35 40 0.068460978 ubox
35 50 0.010318417 ubox
35 58 0.010439565 ubox
36 49 0.012422620 ubox
36 77 0.006686048 ubox
37 48 0.012749718 ubox
37 50 0.003188667 ubox
37 76 0.006734343 ubox
38 49 0.004070883 ubox
39 47 0.043838186 ubox
39 53 0.009073627 ubox
39 56 0.003469608 ubox
39 57 0.004025463 ubox
39 70 0.011833993 ubox
39 73 0.007499562 ubox
40 46 0.044143006 ubox
40 52 0.009084233 ubox
40 55 0.003469387 ubox
40 56 0.004000782 ubox
40 69 0.011842347 ubox
40 72 0.007512702 ubox
41 45 0.042949043 ubox
41 48 0.183011450 ubox
41 51 0.008743153 ubox
41 67 0.010574632 ubox
41 68 0.008389006 ubox
41 71 0.007442250 ubox
42 47 0.183106394 ubox
42 66 0.013506438 ubox
42 70 0.007426694 ubox
43 49 0.010065541 ubox
43 63 0.004024221 ubox
43 65 0.013548727 ubox
44 48 0.010636145 ubox
44 62 0.004306651 ubox
44 64 0.013546553 ubox
44 67 0.006453733 ubox
45 52 0.005509906 ubox
45 61 0.004305951 ubox
45 66 0.006455308 ubox
46 51 0.005512634 ubox
46 63 0.014081935 ubox
46 65 0.004738846 ubox
46 68 0.003473868 ubox
47 58 0.004146301 ubox
47 62 0.014712949 ubox
47 64 0.004270278 ubox
47 67 0.003475736 ubox
48 57 0.004219366 ubox
48 61 0.014720918 ubox
48 66 0.003370907 ubox
49 56 0.004156692 ubox
49 60 0.013134944 ubox
49 74 0.017805801 ubox
49 75 0.006741257 ubox
50 55 0.003387678 ubox
50 57 0.006061801 ubox
50 59 0.009394110 ubox
50 60 0.006781489 ubox
50 73 0.021408082 ubox
50 74 0.007244428 ubox
50 75 0.005041143 ubox
51 56 0.008088799 ubox
51 59 0.009323345 ubox
51 60 0.003268955 ubox
51 72 0.022925999 ubox
51 73 0.007370123 ubox
51 74 0.005444904 ubox
52 58 0.008854371 ubox
52 65 0.003917721 ubox
52 71 0.022916715 ubox
52 77 0.010751332 ubox
53 64 0.003956958 ubox
53 76 0.010814745 ubox
54 63 0.003302389 ubox
55 63 0.003298835 ubox
56 62 0.004349452 ubox
56 68 0.024710574 ubox
56 77 0.005635076 ubox
57 62 0.010149450 ubox
57 64 0.003559849 ubox
57 67 0.024785044 ubox
57 71 0.015108481 ubox
57 76 0.005702602 ubox
58 66 0.024723279 ubox
58 69 0.005735849 ubox
58 70 0.014173665 ubox
58 75 0.005565610 ubox
59 65 0.024383300 ubox
59 68 0.006450106 ubox
60 64 0.024085289 ubox
60 67 0.006404257 ubox
60 68 0.016430336 ubox
60 77 0.004539288 ubox
61 67 0.016526872 ubox
61 71 0.005648748 ubox
61 76 0.004598789 ubox
62 66 0.016425409 ubox
62 70 0.005653344 ubox
62 74 0.003237804 ubox
63 69 0.005420655 ubox
63 74 0.004659025 ubox
64 73 0.005798159 ubox
65 72 0.005987659 ubox
66 71 0.006085803 ubox
67 73 0.006941103 ubox
67 74 0.016825444 ubox
68 72 0.007806952 ubox
68 73 0.019368550 ubox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
showpage
end
%%EOF
