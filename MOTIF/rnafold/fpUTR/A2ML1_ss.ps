%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCACCACCUAACCUGGUGGUUACAGAAGGAGGAACACAGUCCUCCUGUGUUCCAGGUGCCAGGAGGUGACUGACUAUAGCAUCAGUCAUCACUGCACACCCUACCUGGAAUUAGUAUAUAAAGCUACGCGGAGCGAUCUCUGCCCCUGACCCUGGAAAAAUCUGUCUCACCCACAAAG\
) } def
/len { sequence length } bind def

/coor [
[106.32283020 287.27172852]
[93.84706116 278.94375610]
[84.46411133 267.24075317]
[79.04788971 253.25274658]
[78.10294342 238.28176880]
[71.32790375 251.66455078]
[64.55286407 265.04733276]
[57.77782440 278.43011475]
[51.00278854 291.81289673]
[44.22774887 305.19567871]
[49.38820648 320.13372803]
[42.39937210 334.30877686]
[27.40759850 339.31100464]
[13.30724239 332.17269897]
[8.46379089 317.12887573]
[15.75078011 303.10476685]
[30.84496689 298.42065430]
[37.62000656 285.03787231]
[44.39504242 271.65509033]
[51.17008209 258.27230835]
[57.94512177 244.88952637]
[64.72016144 231.50674438]
[63.88430786 222.35702515]
[70.42959595 214.34130859]
[73.02007294 199.56669617]
[75.61054993 184.79206848]
[78.20102692 170.01745605]
[80.79150391 155.24282837]
[69.86767578 144.96324158]
[55.27758408 148.44593811]
[40.68748856 151.92861938]
[26.09739304 155.41131592]
[11.50729847 158.89399719]
[-3.08279657 162.37669373]
[-17.67289162 165.85939026]
[-25.73357391 179.45353699]
[-41.06632614 183.28529358]
[-54.57449341 175.08132935]
[-58.24392319 159.70892334]
[-49.89760590 146.28825378]
[-34.48726654 142.78155518]
[-21.15558243 151.26928711]
[-6.56548738 147.78660583]
[8.02460766 144.30390930]
[22.61470222 140.82121277]
[37.20479584 137.33853149]
[51.79489136 133.85583496]
[66.38498688 130.37315369]
[57.44696808 100.86549377]
[69.39393616 74.52775574]
[94.01071167 63.41043854]
[89.64865875 49.05870056]
[85.28660583 34.70695877]
[80.92454529 20.35521698]
[76.56249237 6.00347519]
[72.20043945 -8.34826565]
[67.83838654 -22.70000648]
[63.47632980 -37.05174637]
[59.11427307 -51.40348816]
[54.75221634 -65.75523376]
[35.83485031 -80.28341675]
[41.45539856 -102.72280884]
[35.62506866 -116.54334259]
[29.79474068 -130.36387634]
[18.14803505 -135.94706726]
[13.58388424 -147.59970093]
[18.04584312 -158.86143494]
[12.45626068 -172.78108215]
[6.86667824 -186.70072937]
[1.27709556 -200.62037659]
[-4.31248665 -214.54002380]
[-9.90206909 -228.45967102]
[-15.49165154 -242.37931824]
[-21.08123398 -256.29895020]
[-26.67081642 -270.21859741]
[-41.75125885 -273.87371826]
[-51.77750015 -285.71661377]
[-52.89424896 -301.19345093]
[-44.67208481 -314.35305786]
[-30.27260399 -320.13534546]
[-15.23269939 -316.31683350]
[-5.33552074 -304.36587524]
[-4.38673496 -288.87783813]
[-12.75117016 -275.80819702]
[-7.16158724 -261.88854980]
[-1.57200491 -247.96888733]
[4.01757765 -234.04925537]
[9.60715961 -220.12960815]
[15.19674206 -206.20996094]
[20.78632545 -192.29031372]
[26.37590790 -178.37066650]
[31.96549034 -164.45101929]
[46.33293533 -154.39413452]
[43.61527634 -136.19421387]
[49.44560623 -122.37367249]
[55.27593613 -108.55313873]
[61.80564499 -107.87296295]
[67.84682465 -105.17390442]
[72.78672028 -100.69454956]
[76.11340332 -94.85570526]
[77.46876526 -88.22101593]
[76.68679810 -81.44259644]
[73.81318665 -75.19690704]
[69.10395813 -70.11728668]
[73.46601105 -55.76554489]
[77.82807159 -41.41380310]
[82.19012451 -27.06206131]
[86.55217743 -12.71032143]
[90.91423798 1.64142025]
[95.27629089 15.99316120]
[99.63834381 30.34490204]
[104.00039673 44.69664383]
[108.36245728 59.04838562]
[122.28210449 64.63796997]
[135.35839844 57.28878021]
[148.43469238 49.93959427]
[161.51098633 42.59040833]
[164.22642517 27.19039726]
[176.23869324 17.17841721]
[191.87593079 17.28181839]
[203.75473022 27.45177841]
[206.26628113 42.88635254]
[198.22471619 56.29780960]
[183.42700195 61.35366440]
[168.86016846 55.66670227]
[155.78387451 63.01588821]
[142.70758057 70.36507416]
[129.63128662 77.71426392]
[131.52935791 86.24419403]
[131.22154236 94.38515472]
[146.19387817 95.29582977]
[161.16619873 96.20650482]
[176.13853455 97.11717987]
[191.11087036 98.02785492]
[206.08319092 98.93852997]
[220.50729370 91.13614655]
[234.33277893 99.95590973]
[233.33715820 116.32480621]
[218.54464722 123.40391541]
[205.17251587 113.91085815]
[190.20019531 113.00018311]
[175.22785950 112.08950806]
[160.25552368 111.17883301]
[145.28320312 110.26815796]
[130.31086731 109.35748291]
[132.67131042 120.39291382]
[131.02046204 133.01860046]
[143.69653320 141.03840637]
[158.53961182 136.11730957]
[173.05412292 141.93649292]
[180.38676453 155.74830627]
[177.07528687 171.03125000]
[164.68327332 180.56916809]
[149.06184387 179.85855103]
[137.58695984 169.23493958]
[135.67672729 153.71447754]
[123.00065613 145.69467163]
[116.14202881 148.72932434]
[126.15302277 159.89982605]
[118.62265778 172.87261963]
[103.95781708 169.71945190]
[102.42475891 154.79864502]
[95.56613159 157.83331299]
[92.97565460 172.60792542]
[90.38517761 187.38255310]
[87.79470062 202.15716553]
[85.20422363 216.93179321]
[94.92736816 205.50987244]
[107.64272308 197.55249023]
[122.16596985 193.80079651]
[137.14443970 194.60421753]
[151.18304443 199.88792419]
[162.97424316 209.15979004]
[171.41981506 221.55624390]
[175.73315430 235.92271423]
[175.51251221 250.92108154]
[170.77842712 265.15444946]
[161.97184753 277.29711914]
[149.91300964 286.21810913]
[135.72505188 291.08657837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[62 96]
[63 95]
[64 94]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[114 128]
[115 127]
[116 126]
[117 125]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[147 157]
[148 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
