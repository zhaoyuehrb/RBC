%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIRT4)
} def

/sequence { (\
GCAAAUGCAAUCAGACGGUCCCACUGUGGGGUGUGAAGUGUCCGUAGAGCUGUGAGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.596019773 ubox
1 39 0.009993453 ubox
1 41 0.033316733 ubox
1 45 0.125113272 ubox
1 50 0.161884669 ubox
1 53 0.237919204 ubox
2 7 0.595760956 ubox
2 38 0.010339138 ubox
2 40 0.037247900 ubox
2 44 0.129618799 ubox
2 49 0.162009162 ubox
2 52 0.246580543 ubox
2 54 0.157792288 ubox
3 39 0.036358696 ubox
3 51 0.242610462 ubox
3 53 0.144243289 ubox
5 11 0.005270073 ubox
5 34 0.005279758 ubox
5 39 0.006212682 ubox
5 41 0.144631789 ubox
5 45 0.067913032 ubox
5 53 0.083011462 ubox
6 10 0.005353943 ubox
6 13 0.017484937 ubox
6 23 0.004227818 ubox
6 33 0.005394469 ubox
6 35 0.016609302 ubox
6 38 0.006321860 ubox
6 40 0.147802620 ubox
6 44 0.069183249 ubox
6 46 0.141148751 ubox
6 52 0.081069741 ubox
6 54 0.268222895 ubox
7 12 0.019082449 ubox
7 16 0.003456925 ubox
7 22 0.004853871 ubox
7 32 0.005546507 ubox
7 34 0.036769848 ubox
7 39 0.154416684 ubox
7 41 0.120008101 ubox
7 43 0.057071565 ubox
7 45 0.142627107 ubox
7 50 0.371296857 ubox
7 51 0.031483726 ubox
7 53 0.579320239 ubox
8 31 0.005554906 ubox
8 33 0.037460613 ubox
8 35 0.017465858 ubox
8 38 0.154967967 ubox
8 40 0.130800654 ubox
8 44 0.142329934 ubox
8 49 0.371051525 ubox
8 52 0.594566712 ubox
8 54 0.074812136 ubox
9 32 0.029960408 ubox
9 34 0.016299738 ubox
9 39 0.127468852 ubox
9 51 0.576700182 ubox
9 53 0.070732090 ubox
10 19 0.017060966 ubox
10 32 0.038948480 ubox
10 39 0.031090788 ubox
10 41 0.018679307 ubox
10 45 0.059241348 ubox
10 53 0.059700025 ubox
11 18 0.018886201 ubox
11 29 0.004736710 ubox
11 30 0.014252420 ubox
11 31 0.045182944 ubox
11 36 0.275064302 ubox
11 38 0.028692450 ubox
11 40 0.014692573 ubox
11 44 0.058432666 ubox
11 48 0.678048515 ubox
11 52 0.018641515 ubox
11 55 0.079125642 ubox
11 57 0.358663560 ubox
11 59 0.034057069 ubox
12 17 0.020221598 ubox
12 28 0.005005083 ubox
12 29 0.015881052 ubox
12 30 0.045484328 ubox
12 33 0.005325195 ubox
12 35 0.287382619 ubox
12 40 0.076179724 ubox
12 47 0.692744797 ubox
12 52 0.235955875 ubox
12 54 0.083661387 ubox
12 56 0.383205601 ubox
12 58 0.038897779 ubox
13 27 0.003353121 ubox
13 32 0.005264617 ubox
13 34 0.285768713 ubox
13 39 0.073951907 ubox
13 51 0.238707942 ubox
13 53 0.070036289 ubox
14 20 0.003782798 ubox
14 42 0.291307687 ubox
14 50 0.239014615 ubox
15 19 0.003318896 ubox
15 27 0.051189103 ubox
15 32 0.281362167 ubox
15 34 0.091106456 ubox
15 39 0.028789295 ubox
15 41 0.292118976 ubox
15 45 0.799824809 ubox
15 53 0.398052029 ubox
16 26 0.051837282 ubox
16 31 0.273174241 ubox
16 33 0.096288211 ubox
16 35 0.053061706 ubox
16 38 0.030073830 ubox
16 40 0.292073828 ubox
16 44 0.805720731 ubox
16 52 0.400712326 ubox
16 54 0.003932994 ubox
17 25 0.051866667 ubox
17 32 0.088702689 ubox
17 34 0.052400612 ubox
17 39 0.286887063 ubox
17 42 0.006850097 ubox
17 43 0.805867081 ubox
17 51 0.400246590 ubox
17 53 0.003663749 ubox
18 24 0.051871436 ubox
18 32 0.043922185 ubox
18 34 0.015739765 ubox
18 39 0.006729583 ubox
18 41 0.009056288 ubox
18 42 0.805271751 ubox
18 50 0.400352048 ubox
19 23 0.046739193 ubox
19 29 0.003333690 ubox
19 30 0.061509666 ubox
19 31 0.461880915 ubox
19 33 0.020542569 ubox
19 36 0.548135966 ubox
19 38 0.026899162 ubox
19 40 0.077464714 ubox
19 48 0.038958934 ubox
19 49 0.366882075 ubox
19 55 0.035590040 ubox
19 57 0.024607466 ubox
20 28 0.003497297 ubox
20 29 0.064366127 ubox
20 30 0.579869910 ubox
20 31 0.134760062 ubox
20 35 0.551809825 ubox
20 47 0.041583823 ubox
20 54 0.038306528 ubox
20 56 0.026568958 ubox
20 58 0.003573048 ubox
21 28 0.063853812 ubox
21 29 0.580752818 ubox
21 30 0.135382560 ubox
21 31 0.008211908 ubox
22 28 0.580743350 ubox
22 29 0.134958751 ubox
22 30 0.008205822 ubox
22 33 0.561896689 ubox
22 35 0.110795197 ubox
22 40 0.435867363 ubox
22 52 0.042586915 ubox
22 54 0.027813376 ubox
23 27 0.470743249 ubox
23 32 0.562647880 ubox
23 34 0.111240181 ubox
23 39 0.437231782 ubox
23 41 0.004129728 ubox
23 45 0.029751424 ubox
23 51 0.042455226 ubox
23 53 0.027792758 ubox
24 30 0.009846788 ubox
24 31 0.562665677 ubox
24 33 0.111255656 ubox
24 38 0.437368578 ubox
24 40 0.004166444 ubox
24 44 0.029906924 ubox
24 47 0.302162985 ubox
24 49 0.125813490 ubox
24 52 0.025822861 ubox
25 29 0.012070179 ubox
25 30 0.551980303 ubox
25 35 0.003562611 ubox
25 37 0.434728975 ubox
25 44 0.006574511 ubox
25 46 0.303910414 ubox
25 48 0.144804760 ubox
26 32 0.007260242 ubox
26 34 0.012044650 ubox
26 43 0.010832608 ubox
26 45 0.294101648 ubox
26 50 0.020777417 ubox
27 31 0.003709993 ubox
27 33 0.018519545 ubox
27 35 0.113680535 ubox
27 44 0.286593577 ubox
27 46 0.146956528 ubox
27 49 0.020128010 ubox
28 32 0.014393880 ubox
28 34 0.179631338 ubox
28 42 0.012769465 ubox
28 43 0.303879179 ubox
28 45 0.147348772 ubox
29 41 0.012641777 ubox
29 42 0.303682136 ubox
29 43 0.049024176 ubox
30 41 0.286850728 ubox
30 42 0.049990909 ubox
30 43 0.149726497 ubox
31 39 0.025982969 ubox
31 41 0.043272238 ubox
31 42 0.149994663 ubox
31 45 0.036330203 ubox
31 50 0.003241018 ubox
32 38 0.060440196 ubox
32 40 0.045227460 ubox
32 44 0.078689778 ubox
32 46 0.028854255 ubox
32 49 0.003362312 ubox
33 39 0.047235809 ubox
33 41 0.013259979 ubox
33 43 0.106439682 ubox
33 45 0.030349000 ubox
33 50 0.004754714 ubox
34 38 0.020932123 ubox
34 40 0.024085804 ubox
34 44 0.039558213 ubox
34 46 0.007103591 ubox
34 49 0.004852330 ubox
34 54 0.005887542 ubox
35 39 0.014733433 ubox
35 42 0.123120513 ubox
35 43 0.048617414 ubox
35 45 0.006934156 ubox
35 53 0.008162899 ubox
36 41 0.113269538 ubox
37 51 0.144450023 ubox
38 45 0.007676761 ubox
38 50 0.149233173 ubox
39 44 0.005867212 ubox
39 46 0.013952627 ubox
39 49 0.143721574 ubox
40 45 0.013359390 ubox
40 50 0.029262864 ubox
41 48 0.133877092 ubox
41 49 0.024657373 ubox
41 55 0.051683296 ubox
41 57 0.048454541 ubox
41 59 0.007689246 ubox
42 47 0.143420429 ubox
42 54 0.057494988 ubox
42 56 0.054004797 ubox
42 58 0.009811331 ubox
43 52 0.065465586 ubox
43 54 0.071279051 ubox
44 50 0.058135664 ubox
44 51 0.048990321 ubox
44 53 0.066488982 ubox
45 49 0.054482764 ubox
45 52 0.052411155 ubox
45 54 0.022856402 ubox
46 51 0.049978546 ubox
46 53 0.026070726 ubox
50 56 0.058563288 ubox
50 58 0.209963191 ubox
51 55 0.053134850 ubox
51 57 0.210491999 ubox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
