%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP1R14D)
} def

/sequence { (\
CACUUCCCUCUGUGGCUCUGCUCAGAACUGGCGGUUUUUCCCAGCUCCUUGCCCAGACCAAUACUUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.092438001 ubox
1 14 0.202170799 ubox
2 11 0.091006565 ubox
2 13 0.255266201 ubox
2 35 0.012586219 ubox
3 12 0.279920069 ubox
3 15 0.004803339 ubox
3 31 0.004975277 ubox
3 34 0.013468318 ubox
4 14 0.004760556 ubox
4 30 0.004940853 ubox
4 33 0.013239477 ubox
4 61 0.045451043 ubox
5 57 0.005182225 ubox
5 60 0.047323156 ubox
6 15 0.016093856 ubox
6 31 0.017471627 ubox
6 56 0.004983917 ubox
7 14 0.016200294 ubox
7 15 0.042261393 ubox
7 30 0.017567769 ubox
7 31 0.009154370 ubox
8 14 0.042732438 ubox
8 15 0.003525565 ubox
8 30 0.009224290 ubox
8 56 0.004663736 ubox
9 14 0.003199943 ubox
9 26 0.052781404 ubox
9 55 0.003471079 ubox
9 57 0.457938459 ubox
10 25 0.055153633 ubox
10 44 0.004932660 ubox
10 56 0.494606808 ubox
11 24 0.055179929 ubox
11 43 0.005248442 ubox
11 55 0.494689651 ubox
11 60 0.013585526 ubox
11 63 0.283762229 ubox
12 23 0.055106580 ubox
12 42 0.005302637 ubox
12 54 0.494667812 ubox
12 58 0.004523129 ubox
12 59 0.010026073 ubox
12 62 0.312966594 ubox
12 64 0.112525164 ubox
13 24 0.004113991 ubox
13 43 0.003350694 ubox
13 55 0.016942308 ubox
13 57 0.003928156 ubox
13 60 0.718846812 ubox
13 61 0.223602051 ubox
13 63 0.088336487 ubox
14 22 0.052039583 ubox
14 23 0.004565676 ubox
14 41 0.005400651 ubox
14 42 0.003669705 ubox
14 48 0.003963603 ubox
14 53 0.494625623 ubox
14 54 0.020106248 ubox
14 59 0.838844876 ubox
14 62 0.046380030 ubox
15 21 0.055430575 ubox
15 40 0.005412416 ubox
15 41 0.003652543 ubox
15 45 0.004035386 ubox
15 47 0.003992492 ubox
15 52 0.494374367 ubox
15 53 0.020503555 ubox
15 58 0.843610999 ubox
15 64 0.003334909 ubox
15 67 0.003491964 ubox
16 20 0.055046832 ubox
16 25 0.003469040 ubox
16 44 0.004105584 ubox
16 51 0.493484016 ubox
16 56 0.242445800 ubox
17 24 0.012595028 ubox
17 26 0.191568744 ubox
17 43 0.004261628 ubox
17 55 0.237894127 ubox
17 57 0.825578517 ubox
18 25 0.201537605 ubox
18 33 0.003829442 ubox
18 34 0.043459474 ubox
18 44 0.047412829 ubox
18 56 0.831076598 ubox
19 24 0.188928951 ubox
19 33 0.044822695 ubox
19 43 0.047795662 ubox
19 51 0.003299591 ubox
19 55 0.825050477 ubox
20 32 0.057105082 ubox
20 42 0.047663052 ubox
20 45 0.235490797 ubox
20 50 0.046196568 ubox
20 52 0.358203014 ubox
20 54 0.788382057 ubox
21 31 0.056887803 ubox
21 44 0.234075299 ubox
21 51 0.380322004 ubox
22 30 0.031131454 ubox
22 31 0.008442692 ubox
22 43 0.221484464 ubox
23 30 0.049622513 ubox
23 51 0.748860925 ubox
24 29 0.045225447 ubox
24 37 0.004466978 ubox
24 38 0.165473153 ubox
24 39 0.054498155 ubox
24 46 0.111824822 ubox
24 49 0.227120994 ubox
24 50 0.684548632 ubox
25 36 0.004417403 ubox
25 37 0.190590092 ubox
25 38 0.050681902 ubox
25 39 0.010527179 ubox
25 40 0.105071822 ubox
25 45 0.115192968 ubox
25 47 0.851873499 ubox
25 48 0.235726347 ubox
25 49 0.252569140 ubox
25 50 0.023664965 ubox
26 35 0.003715636 ubox
26 36 0.195529055 ubox
26 37 0.044010776 ubox
26 38 0.011268715 ubox
26 39 0.101497469 ubox
26 46 0.862405808 ubox
26 49 0.024776424 ubox
26 50 0.022298983 ubox
27 35 0.205011375 ubox
27 36 0.035635469 ubox
27 37 0.008717223 ubox
27 38 0.077197096 ubox
27 49 0.025416319 ubox
28 34 0.208770295 ubox
28 44 0.960559802 ubox
28 56 0.037575952 ubox
29 33 0.188088536 ubox
29 43 0.964121282 ubox
29 55 0.037755500 ubox
29 60 0.003614749 ubox
30 36 0.019862741 ubox
30 37 0.015572047 ubox
30 38 0.003915215 ubox
30 41 0.014982083 ubox
30 42 0.965727737 ubox
30 46 0.086050049 ubox
30 47 0.015068077 ubox
30 48 0.031235717 ubox
30 49 0.009097905 ubox
30 53 0.027147399 ubox
30 54 0.032341596 ubox
30 59 0.003894963 ubox
30 68 0.004871245 ubox
31 35 0.013506297 ubox
31 36 0.013150891 ubox
31 37 0.005482259 ubox
31 40 0.019510163 ubox
31 41 0.963644819 ubox
31 45 0.091413443 ubox
31 47 0.031107717 ubox
31 48 0.009973107 ubox
31 52 0.033479932 ubox
31 53 0.025520579 ubox
31 58 0.003880516 ubox
31 67 0.004928013 ubox
32 44 0.091406102 ubox
32 51 0.038731270 ubox
33 39 0.113196670 ubox
33 40 0.942276991 ubox
33 41 0.072638942 ubox
33 42 0.088419104 ubox
33 46 0.043127562 ubox
33 47 0.008147679 ubox
33 48 0.021215069 ubox
33 49 0.005179170 ubox
33 50 0.022051398 ubox
33 53 0.003790898 ubox
33 59 0.018476910 ubox
33 65 0.005110219 ubox
34 38 0.079505132 ubox
34 39 0.835681306 ubox
34 40 0.092943753 ubox
34 41 0.088216622 ubox
34 45 0.047631514 ubox
34 47 0.021358216 ubox
34 48 0.006897326 ubox
34 49 0.013695197 ubox
34 52 0.004595799 ubox
34 58 0.018506134 ubox
34 64 0.005260997 ubox
35 44 0.047713733 ubox
35 51 0.004567132 ubox
35 57 0.018351667 ubox
35 63 0.005122246 ubox
36 43 0.040752121 ubox
36 44 0.005403950 ubox
36 56 0.018043825 ubox
37 43 0.005560484 ubox
37 44 0.009867062 ubox
37 55 0.016014767 ubox
37 61 0.003517991 ubox
38 43 0.008557721 ubox
38 44 0.004115734 ubox
38 60 0.003367916 ubox
39 43 0.003851069 ubox
39 57 0.009081289 ubox
40 56 0.009703890 ubox
42 51 0.012310040 ubox
43 49 0.011634418 ubox
43 50 0.012936234 ubox
44 48 0.012306697 ubox
44 49 0.009730153 ubox
44 52 0.026762867 ubox
45 51 0.027580163 ubox
45 56 0.005436999 ubox
46 55 0.005389157 ubox
46 57 0.005915077 ubox
47 56 0.006371067 ubox
48 56 0.006007501 ubox
49 55 0.005809403 ubox
49 61 0.005754716 ubox
50 60 0.006610255 ubox
51 59 0.006716920 ubox
55 65 0.005243741 ubox
56 64 0.005670859 ubox
56 67 0.011265446 ubox
57 66 0.011593002 ubox
60 66 0.015996775 ubox
61 65 0.015289567 ubox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
