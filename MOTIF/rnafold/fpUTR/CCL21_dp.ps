%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL21)
} def

/sequence { (\
ACAUAAAUAGCAGGCCAAUCCCAGCCCACGCACAGACCCCCAACUUGCAGCUGCCCACCUCACCCUCAGCUCUGGCCUCUUACUCACCCUCUACCACAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 82 0.085417499 ubox
4 93 0.009669996 ubox
5 81 0.091151638 ubox
5 92 0.009971572 ubox
6 80 0.049981565 ubox
6 81 0.059475250 ubox
7 80 0.034519774 ubox
8 53 0.006365215 ubox
8 82 0.462331668 ubox
8 93 0.034335027 ubox
9 52 0.007583788 ubox
9 71 0.004316119 ubox
9 78 0.005555007 ubox
9 80 0.685517031 ubox
9 81 0.487288496 ubox
9 84 0.057214095 ubox
9 90 0.011528885 ubox
9 92 0.036760250 ubox
10 25 0.009921281 ubox
10 31 0.020241288 ubox
10 48 0.009695899 ubox
10 51 0.007702702 ubox
10 54 0.003737644 ubox
10 70 0.005754032 ubox
10 76 0.007785971 ubox
10 77 0.003246524 ubox
10 79 0.747964680 ubox
10 80 0.460176567 ubox
10 83 0.061350557 ubox
10 89 0.012567812 ubox
10 91 0.036678458 ubox
11 24 0.009931415 ubox
11 30 0.020254420 ubox
11 47 0.009706028 ubox
11 50 0.007695260 ubox
11 53 0.003745924 ubox
11 69 0.005746260 ubox
11 75 0.007736614 ubox
12 46 0.009619933 ubox
12 52 0.003571356 ubox
12 66 0.005038856 ubox
12 73 0.003299841 ubox
12 78 0.981583437 ubox
12 80 0.006797452 ubox
12 81 0.009021750 ubox
12 90 0.017663651 ubox
13 22 0.010368243 ubox
13 26 0.032870123 ubox
13 45 0.008630781 ubox
13 65 0.005422503 ubox
13 77 0.999040650 ubox
13 79 0.003753153 ubox
13 88 0.007012475 ubox
13 89 0.017309245 ubox
14 21 0.010307147 ubox
14 25 0.033113081 ubox
14 44 0.008589101 ubox
14 64 0.005397836 ubox
14 76 0.999133032 ubox
14 87 0.007098440 ubox
14 88 0.017072077 ubox
15 24 0.033162920 ubox
15 75 0.999097536 ubox
16 74 0.998853503 ubox
17 73 0.924394978 ubox
19 36 0.124618694 ubox
20 35 0.136075845 ubox
21 75 0.010379605 ubox
22 47 0.016465838 ubox
22 53 0.147557095 ubox
22 74 0.013999066 ubox
23 45 0.009051790 ubox
23 46 0.015871345 ubox
23 52 0.150598432 ubox
23 66 0.003397611 ubox
23 71 0.018848151 ubox
23 73 0.021597943 ubox
23 78 0.011624004 ubox
24 31 0.355937397 ubox
24 44 0.010088025 ubox
24 45 0.010710011 ubox
24 48 0.055309553 ubox
24 51 0.150950899 ubox
24 54 0.016189777 ubox
24 70 0.019188884 ubox
24 72 0.026754399 ubox
24 76 0.012534380 ubox
24 77 0.011641831 ubox
24 79 0.003170584 ubox
25 30 0.355378548 ubox
25 47 0.055136354 ubox
25 50 0.150698644 ubox
25 53 0.016212803 ubox
25 69 0.019068991 ubox
25 75 0.012813530 ubox
26 74 0.012591955 ubox
26 75 0.012560736 ubox
27 47 0.013669593 ubox
27 53 0.008455982 ubox
27 74 0.012819956 ubox
28 46 0.013199072 ubox
28 52 0.008478130 ubox
28 73 0.011621342 ubox
29 47 0.013371972 ubox
30 46 0.012164704 ubox
30 48 0.928410206 ubox
30 51 0.007533424 ubox
30 54 0.004695858 ubox
30 70 0.004636503 ubox
30 76 0.016118327 ubox
31 47 0.929338726 ubox
31 50 0.007539009 ubox
31 53 0.004686842 ubox
31 69 0.004642445 ubox
31 75 0.016138979 ubox
32 46 0.907755489 ubox
32 52 0.004388871 ubox
33 47 0.148429481 ubox
33 53 0.014052398 ubox
33 74 0.019486535 ubox
34 45 0.872774496 ubox
34 46 0.136437959 ubox
34 52 0.014159956 ubox
34 60 0.006149431 ubox
34 66 0.004230214 ubox
34 73 0.022161211 ubox
34 80 0.008288976 ubox
35 44 0.886773297 ubox
35 45 0.112138243 ubox
35 46 0.033333201 ubox
35 51 0.014155426 ubox
35 59 0.006401321 ubox
35 65 0.004348526 ubox
35 67 0.005559448 ubox
35 72 0.023918645 ubox
35 79 0.008872680 ubox
36 45 0.044363257 ubox
36 66 0.005416395 ubox
36 71 0.018783140 ubox
36 78 0.008722228 ubox
39 75 0.005986700 ubox
40 74 0.005892356 ubox
40 75 0.007101270 ubox
41 47 0.065871120 ubox
41 53 0.009314598 ubox
41 74 0.007214395 ubox
42 46 0.053862955 ubox
42 52 0.009179212 ubox
42 73 0.006980779 ubox
44 50 0.009341310 ubox
44 75 0.003516061 ubox
45 49 0.008934197 ubox
45 74 0.003420390 ubox
46 62 0.004815051 ubox
46 68 0.004221197 ubox
47 54 0.020886764 ubox
47 61 0.005321607 ubox
47 67 0.004449243 ubox
47 70 0.008067110 ubox
47 73 0.029629656 ubox
47 76 0.007274177 ubox
48 53 0.020946507 ubox
48 69 0.008048932 ubox
48 75 0.007244111 ubox
49 60 0.011029700 ubox
49 66 0.006288631 ubox
49 71 0.923282745 ubox
49 73 0.008522992 ubox
50 59 0.011597167 ubox
50 65 0.006520546 ubox
50 70 0.987172164 ubox
50 72 0.008388953 ubox
51 69 0.987470362 ubox
52 62 0.010121082 ubox
52 68 0.986499129 ubox
53 61 0.012786780 ubox
53 67 0.976826869 ubox
53 70 0.034419303 ubox
53 76 0.004105984 ubox
54 69 0.036320016 ubox
54 75 0.004074794 ubox
55 74 0.004000325 ubox
59 69 0.049308868 ubox
60 68 0.048152500 ubox
64 75 0.003540591 ubox
65 74 0.004194230 ubox
67 74 0.003549794 ubox
68 73 0.005553260 ubox
70 99 0.003182200 ubox
71 98 0.003175908 ubox
71 100 0.016129292 ubox
72 99 0.023201684 ubox
73 86 0.003616331 ubox
73 96 0.006857509 ubox
73 98 0.023170191 ubox
74 85 0.004083535 ubox
74 88 0.003402311 ubox
74 95 0.007724417 ubox
74 97 0.023109306 ubox
75 84 0.003711972 ubox
75 87 0.003428578 ubox
75 94 0.007751085 ubox
78 100 0.021745158 ubox
79 99 0.033045729 ubox
80 98 0.031266694 ubox
80 99 0.005204914 ubox
80 100 0.007219755 ubox
81 93 0.017111017 ubox
81 98 0.006801030 ubox
81 99 0.008569838 ubox
82 92 0.017407649 ubox
83 99 0.051332052 ubox
84 98 0.048778072 ubox
84 100 0.092930370 ubox
85 99 0.100319672 ubox
89 99 0.133292739 ubox
90 98 0.129003004 ubox
90 100 0.485521881 ubox
91 99 0.524641673 ubox
92 98 0.509016663 ubox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
15 75 0.9500000 lbox
16 74 0.9500000 lbox
17 73 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
showpage
end
%%EOF
