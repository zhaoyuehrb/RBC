%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGGAGCCUCUGCCAGACUGGAGAGAAGCAGGCCUGAGCCUCCCCAAAGGCAGCUCCUGGGGACUCCCAGGACCACAGGCUGAGACGAGACGCAGGGUGGCUGGAGGAAGUGAGAGGUGAACUCAGCCUGGGACUGGCUGGGCGAGACUCUCCACCUGCUCCCUGGGACCAUCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[132.68591309 228.50393677]
[128.17195129 214.19924927]
[123.65798950 199.89456177]
[119.14402771 185.58987427]
[107.93534851 175.78094482]
[111.16110229 160.29208374]
[106.64714050 145.98739624]
[102.13317871 131.68270874]
[82.96371460 126.79755402]
[70.40593719 111.51241302]
[69.33347321 91.75936127]
[56.17662048 84.55538940]
[43.01976776 77.35141754]
[29.86291504 70.14744568]
[16.70606232 62.94347000]
[3.48851657 55.85146713]
[-9.78876781 48.87194824]
[-23.06605339 41.89242554]
[-36.34333801 34.91290665]
[-51.26709747 39.37598419]
[-64.63272858 32.10861969]
[-68.79562378 17.85358810]
[-82.07290649 10.87406731]
[-95.35018921 3.89454651]
[-105.92562103 15.41954613]
[-119.10925293 23.81653214]
[-134.00357056 28.52067757]
[-149.59635925 29.21831703]
[-164.82952881 25.86786652]
[-178.67082214 18.70224190]
[-190.18386841 8.21268749]
[-198.59144592 -4.88490725]
[-203.32800293 -19.69885635]
[-204.07766724 -35.22238922]
[-200.79533386 -50.40206146]
[-214.18922424 -57.15511703]
[-227.58309937 -63.90817261]
[-240.97698975 -70.66123199]
[-254.37088013 -77.41428375]
[-267.76477051 -84.16734314]
[-287.47412109 -71.28034973]
[-314.72805786 -81.95674133]
[-329.68426514 -83.10188293]
[-344.64050293 -84.24702454]
[-359.59671021 -85.39216614]
[-371.42788696 -74.91366577]
[-387.19793701 -75.95353699]
[-397.55075073 -87.89483643]
[-396.34420776 -103.65300751]
[-384.29412842 -113.87899780]
[-368.54959106 -112.50592041]
[-358.45156860 -100.34838867]
[-343.49536133 -99.20324707]
[-328.53912354 -98.05810547]
[-313.58291626 -96.91296387]
[-310.66870117 -103.82363892]
[-319.72418213 -115.78182983]
[-304.84033203 -117.64499664]
[-301.92614746 -124.55567932]
[-313.18621826 -134.46580505]
[-324.44631958 -144.37591553]
[-335.70639038 -154.28604126]
[-346.96646118 -164.19616699]
[-358.22656250 -174.10627747]
[-369.48663330 -184.01640320]
[-385.66275024 -186.71191406]
[-391.16226196 -202.16142273]
[-380.32775879 -214.47180176]
[-364.30484009 -210.97920227]
[-359.57653809 -195.27648926]
[-348.31643677 -185.36636353]
[-337.05636597 -175.45625305]
[-325.79626465 -165.54612732]
[-314.53619385 -155.63600159]
[-303.27609253 -145.72589111]
[-292.01602173 -135.81576538]
[-275.45703125 -132.41549683]
[-263.81301880 -122.46234894]
[-259.04919434 -109.57467651]
[-261.01171875 -97.56122589]
[-247.61782837 -90.80817413]
[-234.22393799 -84.05511475]
[-220.83004761 -77.30206299]
[-207.43615723 -70.54900360]
[-194.04226685 -63.79594803]
[-184.63203430 -74.70884705]
[-172.87078857 -83.05092621]
[-159.44288635 -88.33121490]
[-145.13096619 -90.23707581]
[-130.77038574 -88.65268707]
[-117.20040894 -83.66607666]
[-105.21523285 -75.56424713]
[-95.51743317 -64.81665039]
[-88.67681885 -52.04800415]
[-85.09695435 -38.00196838]
[-84.99134064 -23.49783134]
[-88.37067413 -9.38273811]
[-75.09338379 -2.40321708]
[-61.81610107 4.57630396]
[-47.71355820 -0.07706332]
[-34.14907837 6.81202364]
[-29.36381721 21.63562012]
[-16.08653259 28.61514091]
[-2.80924726 35.59466171]
[10.46803761 42.57418442]
[17.86857224 42.90427399]
[23.91003418 49.78661728]
[37.06688690 56.99059296]
[50.22373962 64.19456482]
[63.38059235 71.39853668]
[76.53744507 78.60250854]
[87.12931824 70.97088623]
[99.89658356 68.24573517]
[112.68133545 70.88767242]
[123.32269287 78.45014954]
[130.02206421 89.65496826]
[144.95668030 88.25601959]
[159.89131165 86.85707855]
[174.82592773 85.45812988]
[189.76055908 84.05918884]
[195.13427734 69.81543732]
[206.11471558 59.35995102]
[220.48699951 54.72771835]
[235.38404846 56.78653717]
[247.85845947 65.07499695]
[255.46563721 77.90451050]
[270.40026855 76.50556946]
[285.33486938 75.10662079]
[300.26950073 73.70767975]
[315.20413208 72.30873108]
[330.13873291 70.90979004]
[345.07336426 69.51084137]
[353.81457520 56.54451752]
[368.85946655 52.28017807]
[383.10437012 58.73131561]
[389.82321167 72.85189819]
[385.84362793 87.97462463]
[373.04458618 96.95899963]
[357.46945190 95.56287384]
[346.47232056 84.44546509]
[331.53768921 85.84441376]
[316.60305786 87.24335480]
[301.66845703 88.64229584]
[286.73382568 90.04124451]
[271.79919434 91.44018555]
[256.86459351 92.83913422]
[251.77235413 106.85821533]
[241.05421448 117.31914520]
[226.79866028 122.10872650]
[211.81613159 120.22619629]
[199.08499146 111.99180603]
[191.15950012 98.99381256]
[176.22486877 100.39275360]
[161.29025269 101.79169464]
[146.35563660 103.19064331]
[131.42100525 104.58958435]
[128.74441528 113.49453735]
[123.60308838 121.24237061]
[116.43786621 127.16873932]
[120.95182800 141.47343445]
[125.46578979 155.77812195]
[136.99732971 166.61021423]
[133.44871521 181.07591248]
[137.96267700 195.38059998]
[142.47663879 209.68528748]
[146.99060059 223.98997498]
[162.45878601 236.89328003]
[157.52032471 255.57447815]
[162.51742554 269.71765137]
[167.51451111 283.86080933]
[172.51161194 298.00396729]
[187.21752930 303.32092285]
[195.02047729 316.87261963]
[192.23614502 332.26031494]
[180.17921448 342.21844482]
[164.54258728 342.04507446]
[152.70941162 331.82205200]
[150.26695251 316.37640381]
[158.36845398 303.00106812]
[153.37135315 288.85791016]
[148.37425232 274.71472168]
[143.37716675 260.57156372]
[133.77369690 256.99978638]
[127.60202789 248.54705811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[6 161]
[7 160]
[8 159]
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 105]
[17 104]
[18 103]
[19 102]
[22 99]
[23 98]
[24 97]
[35 85]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[42 55]
[43 54]
[44 53]
[45 52]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[116 156]
[117 155]
[118 154]
[119 153]
[120 152]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
