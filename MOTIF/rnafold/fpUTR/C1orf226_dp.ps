%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf226)
} def

/sequence { (\
GCCUGGCGGUUCCAGGGUGCACACCACUCCUCGUAGCAGGUCCCCUGUCUUGUGUGCUGUGUCCCCCCGAGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.020975876 ubox
1 10 0.050651120 ubox
1 18 0.006334381 ubox
1 73 0.895066147 ubox
2 6 0.020878239 ubox
2 9 0.058846321 ubox
2 16 0.031595715 ubox
2 17 0.005511209 ubox
2 72 0.993535515 ubox
3 8 0.058814816 ubox
3 15 0.035309082 ubox
3 16 0.004199779 ubox
3 71 0.994236010 ubox
3 72 0.040079673 ubox
4 14 0.041564406 ubox
4 69 0.410620581 ubox
4 70 0.880391100 ubox
4 71 0.040208263 ubox
5 12 0.004202729 ubox
5 13 0.049298706 ubox
5 65 0.005412445 ubox
5 66 0.093789102 ubox
5 67 0.176519850 ubox
5 68 0.834466763 ubox
6 12 0.048957363 ubox
6 64 0.005381287 ubox
6 65 0.094128723 ubox
6 66 0.179668197 ubox
6 67 0.834595932 ubox
6 73 0.008870464 ubox
7 69 0.489761550 ubox
7 72 0.009341327 ubox
8 63 0.013392011 ubox
8 64 0.210613231 ubox
8 65 0.438190307 ubox
8 66 0.693926619 ubox
8 67 0.052024299 ubox
8 68 0.496713446 ubox
9 62 0.013017061 ubox
9 63 0.212281186 ubox
9 64 0.437422132 ubox
9 65 0.690719177 ubox
9 66 0.054085236 ubox
9 67 0.496389376 ubox
10 61 0.004910850 ubox
10 71 0.029927592 ubox
11 69 0.003546415 ubox
11 70 0.050030786 ubox
11 72 0.008715215 ubox
12 69 0.052175646 ubox
12 71 0.011797624 ubox
12 72 0.032119329 ubox
13 59 0.012107066 ubox
13 61 0.839311973 ubox
13 71 0.032355846 ubox
14 58 0.011060496 ubox
14 60 0.841580250 ubox
15 57 0.007756044 ubox
15 58 0.006768432 ubox
15 63 0.005297833 ubox
15 64 0.041395085 ubox
15 65 0.166563365 ubox
15 66 0.500588071 ubox
15 67 0.017446364 ubox
15 68 0.032261568 ubox
16 57 0.005343209 ubox
16 58 0.840739247 ubox
16 62 0.004796887 ubox
16 63 0.041226194 ubox
16 64 0.175257778 ubox
16 65 0.500987330 ubox
16 66 0.018461734 ubox
16 67 0.032343306 ubox
17 27 0.003651759 ubox
17 57 0.843518473 ubox
17 62 0.022597704 ubox
17 63 0.175603453 ubox
17 64 0.500742689 ubox
17 65 0.018367916 ubox
17 66 0.032377665 ubox
18 26 0.003666077 ubox
18 56 0.841688499 ubox
18 59 0.003831913 ubox
18 61 0.015583419 ubox
19 25 0.003649910 ubox
19 55 0.841654011 ubox
19 57 0.052938956 ubox
19 60 0.017065665 ubox
19 62 0.526407668 ubox
20 54 0.843366006 ubox
20 56 0.055189665 ubox
20 59 0.017117296 ubox
20 61 0.534010670 ubox
21 53 0.843148158 ubox
21 55 0.055986152 ubox
21 58 0.016996695 ubox
21 60 0.533926114 ubox
21 62 0.006082413 ubox
22 47 0.003387559 ubox
22 52 0.842763571 ubox
22 54 0.056102505 ubox
22 56 0.016426341 ubox
22 59 0.534000039 ubox
22 61 0.006188042 ubox
23 34 0.126352901 ubox
23 41 0.013566060 ubox
23 46 0.004017930 ubox
23 48 0.018766263 ubox
23 51 0.804702796 ubox
23 53 0.056068603 ubox
23 55 0.016610797 ubox
23 58 0.528621595 ubox
23 60 0.006196960 ubox
24 33 0.153541248 ubox
24 40 0.018528635 ubox
24 47 0.025268998 ubox
24 52 0.053974897 ubox
24 54 0.014648237 ubox
24 59 0.006113311 ubox
25 39 0.018496645 ubox
25 47 0.081916809 ubox
25 52 0.018811660 ubox
25 54 0.043854123 ubox
25 56 0.531063524 ubox
26 34 0.296121872 ubox
26 41 0.004413854 ubox
26 46 0.079421785 ubox
26 48 0.082669486 ubox
26 51 0.023590250 ubox
26 53 0.044720043 ubox
26 55 0.531717375 ubox
27 33 0.310710600 ubox
27 36 0.056227553 ubox
27 39 0.006102548 ubox
27 40 0.004773704 ubox
27 47 0.077239360 ubox
27 52 0.044268324 ubox
27 54 0.529592734 ubox
28 35 0.057252994 ubox
28 38 0.006206180 ubox
28 39 0.004379160 ubox
29 40 0.102074844 ubox
30 36 0.029683220 ubox
30 39 0.102208727 ubox
30 40 0.008674310 ubox
31 35 0.030700208 ubox
31 38 0.096527264 ubox
31 39 0.005816543 ubox
31 40 0.027059380 ubox
32 39 0.030281883 ubox
32 52 0.278914517 ubox
32 54 0.017551180 ubox
33 41 0.003352942 ubox
33 48 0.014048565 ubox
33 51 0.269445226 ubox
33 53 0.035004768 ubox
33 57 0.011908402 ubox
34 40 0.004908273 ubox
34 47 0.011367371 ubox
34 52 0.032475810 ubox
34 56 0.011861005 ubox
35 46 0.012936853 ubox
35 50 0.699322293 ubox
35 51 0.036344597 ubox
35 53 0.007487329 ubox
35 55 0.010002061 ubox
36 45 0.012956157 ubox
36 48 0.674473661 ubox
36 49 0.701080869 ubox
36 50 0.014292002 ubox
36 53 0.089365177 ubox
37 47 0.987933674 ubox
37 52 0.090030735 ubox
38 46 0.988522255 ubox
38 50 0.005139912 ubox
38 51 0.089974428 ubox
39 45 0.988711056 ubox
39 46 0.010676921 ubox
39 49 0.005632516 ubox
39 50 0.090074647 ubox
40 44 0.972740752 ubox
40 45 0.012218365 ubox
40 48 0.004773212 ubox
40 49 0.090120320 ubox
41 47 0.007532658 ubox
62 70 0.003321215 ubox
63 69 0.003566984 ubox
63 72 0.011659544 ubox
64 71 0.011736358 ubox
64 72 0.012093498 ubox
65 71 0.012166132 ubox
65 72 0.016239518 ubox
66 71 0.016340467 ubox
66 72 0.011137210 ubox
67 71 0.011196934 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
