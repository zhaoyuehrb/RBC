%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUGCGUGCCGCUGCUGGGUUCCGCCACGCCCGUCAUGGCGGCGGCCCCGGCCGGCUCUGGCCCCGCCCCUCGGUGACGCGUCGCGAGUCACCUGACCAGGCUGCGGGCUGAGGAGAUACAAGGGAAGUGGCUAUCGCCAGAGUCGGAUUCGCCGCCGCAGCAGCCGCCGCCCCCGGGAGCCGCCGGGACCCUCGCGUCGUCGCCGCCGCCGCCGCCCAGAUCCCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[170.10366821 577.15960693]
[173.65472412 571.42047119]
[178.83842468 567.01892090]
[176.23370361 552.24676514]
[166.40388489 541.05645752]
[171.62725830 526.12237549]
[169.02253723 511.35025024]
[166.41781616 496.57812500]
[162.16780090 490.54641724]
[163.87867737 481.59030151]
[161.47250366 466.78454590]
[151.79380798 455.46325684]
[157.21720886 440.60061646]
[154.81103516 425.79486084]
[141.44252014 421.05041504]
[131.91946411 410.40789795]
[128.64021301 396.41003418]
[132.49633789 382.46066284]
[142.63279724 371.99713135]
[138.45953369 357.58935547]
[134.28627014 343.18157959]
[130.11300659 328.77380371]
[125.93975067 314.36602783]
[121.76648712 299.95825195]
[117.59323120 285.55050659]
[103.33361816 280.89608765]
[91.46403503 290.06741333]
[79.59444427 299.23870850]
[67.72486115 308.41003418]
[69.16248322 323.77026367]
[62.04722595 337.45883179]
[48.64955521 345.10772705]
[33.24461365 344.27627563]
[20.74806404 335.22973633]
[15.14750862 320.85485840]
[18.23006248 305.73858643]
[29.01209831 294.70449829]
[44.05310440 291.27349854]
[58.55355072 296.54043579]
[70.42313385 287.36914062]
[82.29271698 278.19781494]
[94.16230011 269.02651978]
[100.41017914 255.38964844]
[99.60502625 240.41127014]
[98.79988098 225.43289185]
[97.99472809 210.45451355]
[97.18958282 195.47613525]
[96.38442993 180.49775696]
[95.47875214 165.52513123]
[94.47258759 150.55891418]
[93.46642303 135.59269714]
[92.46025848 120.62648010]
[91.45409393 105.66026306]
[87.86435699 91.09613800]
[81.80012512 77.37662506]
[75.73589325 63.65710831]
[69.67166138 49.93759537]
[63.60742569 36.21807861]
[57.54319382 22.49856377]
[51.47896194 8.77904987]
[45.41473007 -4.94046450]
[39.35049438 -18.65997887]
[33.28626251 -32.37949371]
[27.22202873 -46.09900665]
[8.22361088 -57.99601746]
[11.46518993 -79.40039825]
[4.67328167 -92.77462769]
[-2.11862612 -106.14885712]
[-8.91053391 -119.52308655]
[-15.88138199 -132.80491638]
[-23.02991295 -145.99198914]
[-30.17844391 -159.17904663]
[-37.32697296 -172.36610413]
[-64.33016968 -174.25309753]
[-80.29463196 -202.84489441]
[-91.65482330 -212.64010620]
[-103.01500702 -222.43531799]
[-114.37519836 -232.23052979]
[-125.73538208 -242.02574158]
[-137.09556580 -251.82095337]
[-152.59963989 -254.97283936]
[-157.18601990 -269.14373779]
[-168.54620361 -278.93896484]
[-184.49024963 -284.70294189]
[-183.36526489 -301.61953735]
[-166.79835510 -305.22149658]
[-158.75099182 -290.29913330]
[-147.39080811 -280.50393677]
[-132.69929504 -278.05264282]
[-127.30036163 -263.18112183]
[-115.94017029 -253.38592529]
[-104.57998657 -243.59071350]
[-93.21979523 -233.79550171]
[-81.85961151 -224.00028992]
[-70.49942017 -214.20509338]
[-64.13372803 -218.17094421]
[-64.63713074 -233.16249084]
[-51.40235138 -226.10264587]
[-45.03665924 -230.06849670]
[-48.82159805 -244.58311462]
[-62.05591965 -257.39739990]
[-56.72431183 -274.12399292]
[-60.70376968 -288.58648682]
[-64.68322754 -303.04898071]
[-68.66268921 -317.51150513]
[-78.69444275 -331.17898560]
[-68.33815765 -344.60223389]
[-52.57258606 -338.36660767]
[-54.20018768 -321.49096680]
[-50.22072601 -307.02844238]
[-46.24126816 -292.56594849]
[-42.26181030 -278.10345459]
[-31.91114807 -271.86260986]
[-28.47106934 -259.85870361]
[-34.30697632 -248.36805725]
[-30.52203751 -233.85343933]
[-22.62436485 -228.37376404]
[-16.66168785 -221.34144592]
[-12.88799095 -213.36082458]
[-11.38246632 -205.05987549]
[-12.05487728 -197.04252625]
[-14.66332531 -189.84524536]
[-18.84252167 -183.90127563]
[-24.13991547 -179.51463318]
[-16.99138451 -166.32757568]
[-9.84285450 -153.14051819]
[-2.69432330 -139.95346069]
[1.53300381 -137.76246643]
[4.43675804 -132.90063477]
[4.46369457 -126.31499481]
[11.25560188 -112.94076538]
[18.04751015 -99.56653595]
[24.83941841 -86.19230652]
[32.64297485 -85.40423584]
[39.58622360 -81.55871582]
[44.50920486 -75.21374512]
[46.55651093 -67.35128021]
[45.32519531 -59.22560501]
[40.94154358 -52.16324234]
[47.00577545 -38.44372559]
[53.07001114 -24.72421265]
[59.13424301 -11.00469780]
[65.19847870 2.71481705]
[71.26271057 16.43433189]
[77.32694244 30.15384674]
[83.39117432 43.87335968]
[89.45540619 57.59287643]
[95.51963806 71.31239319]
[101.58387756 85.03190613]
[102.79430389 70.08081818]
[115.68369293 62.40856171]
[129.40322876 68.47276306]
[132.40534973 83.16926575]
[122.16314697 94.12825012]
[136.39118958 89.37823486]
[147.03100586 77.66905212]
[161.55343628 80.97784424]
[175.78147888 76.22782135]
[186.42129517 64.51863861]
[200.94374084 67.82743073]
[215.17178345 63.07740784]
[225.63549805 50.45034790]
[241.75515747 53.46504211]
[246.94825745 69.02023315]
[235.87255859 81.11406708]
[219.92179871 77.30545807]
[205.69375610 82.05547333]
[196.07162476 93.42490387]
[180.53150940 90.45587158]
[166.30346680 95.20588684]
[156.68133545 106.57531738]
[141.14120483 103.60627747]
[126.91316223 108.35630035]
[119.65603638 108.53807831]
[112.75044250 107.27528381]
[106.42031097 104.65409851]
[107.42647552 119.62031555]
[108.43264008 134.58653259]
[109.43880463 149.55274963]
[110.44496918 164.51896667]
[114.13787842 172.85572815]
[111.36280823 179.69261169]
[112.16795349 194.67098999]
[112.97310638 209.64936829]
[113.77825165 224.62774658]
[114.58340454 239.60610962]
[115.38854980 254.58448792]
[132.00099182 281.37722778]
[136.17425537 295.78500366]
[140.34751892 310.19277954]
[144.52078247 324.60055542]
[148.69404602 339.00833130]
[152.86730957 353.41607666]
[157.04057312 367.82385254]
[175.49989319 374.11349487]
[185.84254456 390.39343262]
[183.73986816 409.35073853]
[195.23054504 418.99255371]
[206.72120667 428.63436890]
[222.95637512 430.94763184]
[228.81871033 446.26315308]
[218.27754211 458.82562256]
[202.17672729 455.71185303]
[197.07939148 440.12503052]
[185.58872986 430.48321533]
[174.09805298 420.84140015]
[171.91496277 422.21627808]
[169.61679077 423.38870239]
[172.02296448 438.19445801]
[181.87376404 450.57476807]
[176.27825928 464.37838745]
[178.68443298 479.18414307]
[181.18994141 493.97338867]
[183.79466248 508.74551392]
[186.39938354 523.51763916]
[196.41551208 535.76458740]
[191.00582886 549.64208984]
[193.61054993 564.41418457]
[210.52018738 581.22821045]
[201.90036011 602.67724609]
[205.68528748 617.19183350]
[209.47023010 631.70648193]
[221.36697388 642.99365234]
[217.27780151 658.87475586]
[201.40930176 663.01275635]
[190.08563232 651.15075684]
[194.95561218 635.49139404]
[191.17066956 620.97680664]
[187.38574219 606.46215820]
[181.14332581 604.87847900]
[175.64741516 601.42364502]
[171.44802856 596.40594482]
[168.97680664 590.29199219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 218]
[4 217]
[6 215]
[7 214]
[8 213]
[10 212]
[11 211]
[13 209]
[14 208]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 42]
[27 41]
[28 40]
[29 39]
[43 187]
[44 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[66 133]
[67 132]
[68 131]
[69 130]
[70 127]
[71 126]
[72 125]
[73 124]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[82 88]
[83 87]
[99 116]
[100 115]
[102 112]
[103 111]
[104 110]
[105 109]
[154 173]
[155 172]
[157 170]
[158 169]
[160 167]
[161 166]
[197 206]
[198 205]
[199 204]
[220 229]
[221 228]
[222 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
