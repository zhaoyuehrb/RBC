%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGUAGGGGGCGGGGCCGCGCGCAGAGGGCGGGGAGGUGGGCAAGAUGGCGCUUGCCGAGUGAUUCUCCUCGAAUACCUCCUGCCGGCGCGGAGACACCGGGGCGGGGGUCCUGCCGCAACUACCUCCCUUCCUCCUCUCCCCCGCCCCCGGAGCCUUCAUCCUUCCCUUCCCCCCCCACCUCGAGGGGCGGGCCUGGUUCCCGGGACACC\
) } def
/len { sequence length } bind def

/coor [
[40.50866699 168.72056580]
[40.29050827 153.72213745]
[40.07234955 138.72372437]
[36.29218674 115.66638184]
[40.38862991 94.53447723]
[50.67471695 77.73642731]
[64.82276917 66.79651642]
[80.25099182 62.22248459]
[94.51942444 63.52564621]
[105.67941284 69.38289642]
[95.38578796 58.47229004]
[85.09216309 47.56168747]
[74.79853821 36.65108109]
[64.50491333 25.74047852]
[54.21128845 14.82987309]
[43.91766357 3.91926885]
[33.62403870 -6.99133587]
[23.33041573 -17.90194130]
[13.03679085 -28.81254578]
[6.94062185 -27.24360657]
[0.68902242 -27.43429756]
[-5.22346067 -29.34706497]
[-10.33536530 -32.80901337]
[-14.25432396 -37.52729797]
[-16.68715477 -43.11378098]
[-17.46171570 -49.11693192]
[-16.53891754 -55.05828857]
[-14.01405907 -60.47060394]
[-23.14548111 -72.37090302]
[-32.27690125 -84.27120209]
[-41.40832520 -96.17150116]
[-50.53974533 -108.07180786]
[-59.67116547 -119.97210693]
[-78.62534332 -126.84236908]
[-80.30531311 -146.10758972]
[-89.77898407 -157.73725891]
[-99.25266266 -169.36694336]
[-108.72633362 -180.99662781]
[-118.20001221 -192.62631226]
[-127.67369080 -204.25598145]
[-137.14736938 -215.88566589]
[-146.62103271 -227.51535034]
[-156.09471130 -239.14503479]
[-165.56838989 -250.77471924]
[-179.25376892 -256.91558838]
[-194.23948669 -256.26129150]
[-209.22520447 -255.60700989]
[-224.21093750 -254.95272827]
[-239.19665527 -254.29843140]
[-249.68775940 -242.47842407]
[-265.46884155 -241.62216187]
[-277.17724609 -252.23764038]
[-277.86663818 -268.02688599]
[-267.12796021 -279.62240601]
[-251.33230591 -280.14483643]
[-239.85095215 -269.28414917]
[-224.86521912 -269.93844604]
[-209.87950134 -270.59274292]
[-194.89378357 -271.24703979]
[-179.90805054 -271.90130615]
[-177.08876038 -286.63400269]
[-190.77413940 -292.77487183]
[-204.45951843 -298.91577148]
[-218.14489746 -305.05664062]
[-227.25177002 -305.71408081]
[-231.98364258 -311.38763428]
[-245.57826233 -317.72692871]
[-262.48867798 -318.94097900]
[-266.00332642 -335.52664185]
[-251.03881836 -343.49530029]
[-239.23898315 -331.32153320]
[-225.64436340 -324.98226929]
[-212.00401306 -318.74203491]
[-198.31863403 -312.60113525]
[-184.63325500 -306.46026611]
[-170.94787598 -300.31936646]
[-165.92129517 -305.88565063]
[-177.05386353 -315.93881226]
[-181.66865540 -330.21130371]
[-167.00070190 -327.07138062]
[-155.86813354 -317.01821899]
[-150.84155273 -322.58450317]
[-158.34155273 -335.57485962]
[-165.84155273 -348.56524658]
[-173.34155273 -361.55563354]
[-180.33982849 -367.42007446]
[-180.85459900 -374.78994751]
[-188.16487122 -387.88803101]
[-202.51585388 -395.82409668]
[-202.54792786 -412.22320557]
[-188.22810364 -420.21536255]
[-174.28738403 -411.57891846]
[-175.06678772 -395.19830322]
[-167.75651550 -382.10021973]
[-160.35118103 -369.05563354]
[-152.85118103 -356.06524658]
[-145.35118103 -343.07485962]
[-137.85118103 -330.08450317]
[-130.48484802 -331.49414062]
[-133.30413818 -346.22680664]
[-140.53791809 -359.36727905]
[-130.27580261 -370.30752563]
[-116.69992065 -363.92825317]
[-118.57146454 -349.04611206]
[-115.75216675 -334.31341553]
[-108.38583374 -335.72308350]
[-106.21185303 -350.56469727]
[-104.03787994 -365.40631104]
[-101.86389923 -380.24795532]
[-99.68991852 -395.08956909]
[-97.51594543 -409.93118286]
[-101.20285034 -426.47940063]
[-86.32199097 -434.60321045]
[-74.39622498 -422.55279541]
[-82.67431641 -407.75723267]
[-84.84829712 -392.91558838]
[-87.02227783 -378.07397461]
[-89.19625092 -363.23236084]
[-91.37023163 -348.39071655]
[-93.54421234 -333.54910278]
[-95.54707336 -306.45840454]
[-105.01326752 -284.20513916]
[-119.67731476 -268.57983398]
[-136.90238953 -260.55978394]
[-153.93870544 -260.24838257]
[-144.46502686 -248.61871338]
[-134.99136353 -236.98902893]
[-125.51768494 -225.35934448]
[-116.04400635 -213.72966003]
[-106.57032776 -202.09997559]
[-97.09665680 -190.47030640]
[-87.62297821 -178.84062195]
[-78.14930725 -167.21093750]
[-68.67562866 -155.58125305]
[-58.46265793 -155.46197510]
[-49.81855011 -149.61982727]
[-45.73076248 -139.78263855]
[-47.77086639 -129.10353088]
[-38.63944626 -117.20322418]
[-29.50802422 -105.30292511]
[-20.37660217 -93.40262604]
[-11.24518108 -81.50232697]
[-2.11375928 -69.60202789]
[20.72444534 -63.29649353]
[23.94739532 -39.10617065]
[34.24102020 -28.19556427]
[44.53464508 -17.28495979]
[54.82826996 -6.37435579]
[65.12189484 4.53624868]
[75.41551971 15.44685364]
[85.70914459 26.35745811]
[96.00276947 37.26806259]
[106.29639435 48.17866898]
[116.59001923 59.08927155]
[130.44821167 64.82952118]
[145.44186401 64.39324951]
[160.43551636 63.95698166]
[169.99192810 51.57921600]
[185.27978516 48.29056168]
[199.08064270 55.64382172]
[204.87815857 70.16700745]
[199.93490601 85.00271606]
[186.58494568 93.14598083]
[171.13172913 90.75180054]
[160.87179565 78.95063782]
[145.87812805 79.38690948]
[130.88447571 79.82318115]
[128.37065125 86.88934326]
[142.50297546 91.91699982]
[156.63529968 96.94466400]
[170.76754761 101.97256470]
[165.73941040 116.10472107]
[151.60763550 111.07698822]
[137.47531128 106.04932404]
[123.34298706 101.02166748]
[120.82915497 108.08782959]
[132.17837524 117.89574432]
[143.52760315 127.70365143]
[154.94784546 137.42877197]
[166.43850708 147.07058716]
[177.92918396 156.71240234]
[189.41984558 166.35421753]
[204.78741455 163.46078491]
[218.39410400 171.16737366]
[223.81527710 185.83520508]
[218.49121094 200.53854370]
[204.93576050 208.33494568]
[189.54939270 205.54316711]
[179.59709167 193.48141479]
[179.77803040 177.84487915]
[168.28736877 168.20306396]
[156.79669189 158.56124878]
[145.30603027 148.91944885]
[138.16426086 147.02865601]
[133.71968079 139.05287170]
[122.37046051 129.24496460]
[111.02124023 119.43704987]
[98.67172241 127.95111084]
[103.80201721 142.04650879]
[108.93231964 156.14189148]
[114.06262207 170.23727417]
[119.19292450 184.33267212]
[130.29193115 197.14862061]
[121.04934692 211.36167908]
[104.83313751 206.41485596]
[105.09753418 189.46296692]
[99.96723938 175.36758423]
[94.83693695 161.27220154]
[89.70663452 147.17680359]
[84.57633209 133.08142090]
[77.19993591 134.43745422]
[55.07076263 138.50556946]
[55.28892136 153.50398254]
[55.50708008 168.50239563]
[57.97777176 187.72596741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[10 154]
[11 153]
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[44 125]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[61 76]
[62 75]
[63 74]
[64 73]
[66 72]
[67 71]
[82 98]
[83 97]
[84 96]
[85 95]
[87 94]
[88 93]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
[155 167]
[156 166]
[157 165]
[176 197]
[177 196]
[178 195]
[179 193]
[180 192]
[181 191]
[182 190]
[198 210]
[199 209]
[200 208]
[201 207]
[202 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
