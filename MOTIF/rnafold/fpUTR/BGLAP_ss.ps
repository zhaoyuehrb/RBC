%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGUGGCUCACCCUCCAUCACUCCCAGGGGCCCCUGGCCCAGCAGCCGCAGCUCCCAACCACAAUAUCCUUUGGGGUUUGGCCUACGGAGCUGGGGCGGAUGACCCCCAAAUAGCCCUGGCAGAUUCCCCCUAGACCCGCCCGCACCAUGGUCAGGCAUGCCCCUCCUCAUCGCUGGGCACAGCCCAGAGGGUAUAAACAGUGCUGGAGGCUGGCGGGGCAGGCCAGCUGAGUCCUGAGCAGCAGCCCAGCGC\
AGCCACCGAGACACC\
) } def
/len { sequence length } bind def

/coor [
[436.02722168 659.76696777]
[435.16656494 644.59039307]
[440.18399048 630.24139404]
[450.31433105 618.90802002]
[464.01278687 612.31860352]
[463.14382935 597.34381104]
[462.27487183 582.36901855]
[461.40591431 567.39416504]
[460.53695679 552.41937256]
[459.66799927 537.44458008]
[455.38137817 523.07012939]
[447.90649414 510.06527710]
[434.85601807 502.88653564]
[434.68719482 487.06625366]
[427.21231079 474.06140137]
[419.73739624 461.05654907]
[412.26251221 448.05169678]
[404.78762817 435.04684448]
[397.31274414 422.04199219]
[384.26226807 414.86328125]
[384.09344482 399.04296875]
[376.61856079 386.03814697]
[369.14367676 373.03329468]
[361.66876221 360.02844238]
[353.67251587 347.33749390]
[345.16806030 334.98135376]
[336.66363525 322.62521362]
[317.72424316 280.76892090]
[306.15325928 271.22363281]
[294.58227539 261.67837524]
[283.01129150 252.13310242]
[271.44027710 242.58782959]
[259.86929321 233.04255676]
[240.59968567 231.20768738]
[233.92126465 212.16294861]
[222.13209534 202.88850403]
[210.34294128 193.61404419]
[198.55377197 184.33958435]
[186.76460266 175.06513977]
[174.97543335 165.79067993]
[163.18626404 156.51622009]
[144.02717590 160.20504761]
[128.11982727 148.38540649]
[126.05975342 128.36639404]
[113.95523071 119.50746155]
[90.91011047 128.89620972]
[65.49939728 112.21513367]
[50.51980209 112.99727631]
[35.54020691 113.77942657]
[20.56061172 114.56156921]
[12.18919373 118.12326050]
[5.40303516 115.26493835]
[-9.58461952 115.87338257]
[-24.57227325 116.48182678]
[-32.98442078 119.94623566]
[-39.73698807 117.00942993]
[-54.73068619 117.44409180]
[-69.72438812 117.87875366]
[-84.71808624 118.31341553]
[-99.71179199 118.74807739]
[-105.88586426 132.70671082]
[-117.51049805 142.59765625]
[-132.27761841 146.45701599]
[-147.25521851 143.51855469]
[-159.46945190 134.36569214]
[-166.49520874 120.81571960]
[-166.93748474 105.55900574]
[-160.70849609 91.62479401]
[-149.04499817 81.77971649]
[-134.26278687 77.97852325]
[-119.29689026 80.97594452]
[-107.11878204 90.17684937]
[-100.14645386 103.75437927]
[-85.15274811 103.31971741]
[-70.15904999 102.88505554]
[-55.16534805 102.45039368]
[-40.17164993 102.01573181]
[-25.18071747 101.49417114]
[-10.19306374 100.88572693]
[4.79459143 100.27728271]
[19.77846718 99.58197784]
[34.75806046 98.79982758]
[49.73765564 98.01768494]
[64.71724701 97.23554230]
[68.41693878 90.71156311]
[60.81674576 77.77954865]
[75.81632233 77.66360474]
[79.51601410 71.13962555]
[72.49783325 57.88273621]
[65.47966003 44.62584686]
[50.64218140 39.88380051]
[43.71359634 26.33945084]
[48.32585144 12.22340679]
[41.30767441 -1.03348470]
[34.28949738 -14.29037571]
[27.27131653 -27.54726791]
[20.25313759 -40.80415726]
[13.23495960 -54.06105042]
[6.47885561 -60.15378189]
[6.21327257 -67.51255035]
[-0.65075654 -80.84990692]
[-7.51478529 -94.18726349]
[-21.59922981 -93.27204895]
[-34.93046188 -97.77404022]
[-45.51115417 -106.98397064]
[-51.76934052 -119.48985291]
[-52.79190826 -133.39338684]
[-48.45769882 -146.59806824]
[-39.45080948 -157.12538147]
[-46.15976715 -170.54141235]
[-52.86872482 -183.95744324]
[-68.19752502 -186.36732483]
[-79.15848541 -197.35079956]
[-81.53690338 -212.68452454]
[-74.41821289 -226.47233582]
[-60.53971100 -233.41256714]
[-45.23795319 -230.83653259]
[-34.39678574 -219.73478699]
[-32.18485260 -204.37617493]
[-39.45269012 -190.66639709]
[-32.74373627 -177.25036621]
[-26.03477859 -163.83433533]
[-10.04767513 -164.37409973]
[4.62423515 -157.85632324]
[15.01603603 -145.54246521]
[19.00349236 -129.87077332]
[15.73712444 -113.97359467]
[5.82257223 -101.05129242]
[12.68660069 -87.71393585]
[19.55063057 -74.37657928]
[26.49184990 -61.07922745]
[33.51002884 -47.82233810]
[40.52820969 -34.56544495]
[47.54638672 -21.30855560]
[54.56456757 -8.05166340]
[61.58274460 5.20522785]
[75.84984589 9.32656860]
[83.15612793 22.67096519]
[78.73654938 37.60766983]
[85.75473022 50.86455917]
[92.77290344 64.12145233]
[110.58634949 68.27392578]
[122.61534882 79.84651184]
[126.55897522 94.42059326]
[122.81416321 107.40293884]
[134.91868591 116.26187134]
[144.66302490 112.07437134]
[155.18629456 112.28834534]
[164.60704041 116.79892731]
[171.26843262 124.73902130]
[174.02963257 134.64517212]
[172.46072388 144.72705078]
[184.24989319 154.00151062]
[196.03906250 163.27597046]
[207.82821655 172.55041504]
[219.61738586 181.82487488]
[231.40655518 191.09933472]
[243.19572449 200.37379456]
[253.85813904 198.46675110]
[263.61660767 202.63774109]
[269.36398315 211.29742432]
[269.41458130 221.47157288]
[280.98556519 231.01684570]
[292.55654907 240.56210327]
[304.12753296 250.10737610]
[315.69851685 259.65264893]
[327.26953125 269.19793701]
[317.54052734 257.78097534]
[315.90759277 242.87013245]
[322.93502808 229.61814880]
[336.19436646 222.60455322]
[351.10348511 224.25306702]
[362.51028442 233.99398804]
[366.47280884 248.46112061]
[361.62176514 262.65505981]
[349.63320923 271.67083740]
[363.01013184 264.88424683]
[376.38705444 258.09762573]
[389.76397705 251.31101990]
[403.14089966 244.52441406]
[416.51779175 237.73780823]
[427.90744019 225.17944336]
[443.12799072 232.64747620]
[440.16528320 249.34056091]
[423.30441284 251.11473083]
[409.92749023 257.90133667]
[396.55056763 264.68792725]
[383.17364502 271.47454834]
[369.79672241 278.26113892]
[356.41979980 285.04776001]
[354.56979370 292.31600952]
[349.01977539 314.12075806]
[357.52423096 326.47689819]
[366.02865601 338.83303833]
[368.39981079 324.02163696]
[379.67239380 314.12570190]
[394.66613770 313.69284058]
[406.49081421 322.92196655]
[409.71252441 337.57192993]
[402.85070801 350.91040039]
[389.05865479 356.80786133]
[374.67361450 352.55355835]
[382.14849854 365.55841064]
[389.62338257 378.56323242]
[397.09829712 391.56808472]
[410.68344116 399.67700195]
[410.31759644 414.56710815]
[417.79248047 427.57196045]
[425.26736450 440.57681274]
[432.74224854 453.58166504]
[440.21713257 466.58651733]
[447.69204712 479.59136963]
[461.27716064 487.70025635]
[460.91134644 502.59039307]
[468.38623047 515.59521484]
[511.57046509 512.23754883]
[522.80255127 522.17938232]
[538.26440430 525.53222656]
[542.66644287 539.76147461]
[553.89855957 549.70330811]
[565.13067627 559.64514160]
[576.36273193 569.58697510]
[589.23736572 569.57806396]
[598.38439941 578.05975342]
[599.28509521 590.10009766]
[610.40118408 600.17144775]
[623.27508545 600.31182861]
[632.32318115 608.89898682]
[633.08422852 620.94897461]
[644.08282471 631.14849854]
[655.08142090 641.34808350]
[670.27850342 638.21307373]
[684.40203857 644.64013672]
[692.02111816 658.15783691]
[690.20617676 673.56842041]
[679.65502930 684.94616699]
[664.42480469 687.91607666]
[650.37188721 681.33618164]
[642.89984131 667.73663330]
[644.88189697 652.34667969]
[633.88330078 642.14709473]
[622.88470459 631.94757080]
[605.57714844 628.95556641]
[600.32983398 611.28759766]
[589.21374512 601.21618652]
[571.87268066 598.42504883]
[566.42089844 580.81909180]
[555.18884277 570.87725830]
[543.95672607 560.93542480]
[532.72460938 550.99359131]
[518.06616211 548.35180664]
[512.86071777 533.41149902]
[501.62863159 523.46966553]
[494.88217163 526.74615479]
[481.38925171 533.29913330]
[474.64282227 536.57562256]
[475.51177979 551.55041504]
[476.38073730 566.52520752]
[477.24969482 581.50006104]
[478.11865234 596.47485352]
[478.98760986 611.44964600]
[493.35629272 616.41040039]
[504.72952271 626.49591064]
[511.37295532 640.16827393]
[512.27349854 655.34252930]
[507.29388428 669.70471191]
[497.19338989 681.06463623]
[483.51232910 687.69006348]
[468.33691406 688.57067871]
[453.98132324 683.57214355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 261]
[6 260]
[7 259]
[8 258]
[9 257]
[10 256]
[11 215]
[12 214]
[14 212]
[15 211]
[16 210]
[17 209]
[18 208]
[19 207]
[21 205]
[22 204]
[23 203]
[24 202]
[25 194]
[26 193]
[27 192]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[44 146]
[45 145]
[47 84]
[48 83]
[49 82]
[50 81]
[52 80]
[53 79]
[54 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[88 141]
[89 140]
[90 139]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[100 130]
[101 129]
[102 128]
[109 122]
[110 121]
[111 120]
[176 190]
[177 189]
[178 188]
[179 187]
[180 186]
[181 185]
[216 253]
[217 252]
[219 250]
[220 249]
[221 248]
[222 247]
[225 245]
[226 244]
[229 242]
[230 241]
[231 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
