%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUUUGGAGUCUGAAAUAUGGAGGAUGCAGCUGCACUUGACUGACCGAUUAAAAGAUUUCCCUUGACUUUGAGAAACGAUAUUUAAUCAGAACAAAAUACUGUGCACUAAAG\
) } def
/len { sequence length } bind def

/coor [
[119.46171570 137.82344055]
[106.75435638 141.99702454]
[93.37918854 142.01828003]
[80.65862274 137.88511658]
[69.85037994 130.00619507]
[62.02308273 119.16049194]
[57.95062637 106.42037201]
[58.03566742 93.04544830]
[43.90175247 88.02225494]
[29.76784134 82.99906158]
[15.63392639 77.97586823]
[1.50001276 72.95267487]
[-12.63390064 67.92948151]
[-26.76781464 62.90628815]
[-36.98352432 74.12747192]
[-50.68017197 80.56523895]
[-65.75735474 81.26676178]
[-79.91610718 76.15625000]
[-91.00942993 66.04174805]
[-97.36784363 52.48756409]
[-98.05062866 37.57236862]
[-112.18454742 32.54917526]
[-126.31845856 27.52598000]
[-140.81614685 23.67668724]
[-155.58029175 21.02713776]
[-170.34443665 18.37759018]
[-179.48358154 19.95156670]
[-185.47329712 15.44874763]
[-200.15956116 12.39690781]
[-214.84582520 9.34506798]
[-230.24107361 14.99467945]
[-242.65632629 4.28049707]
[-239.31982422 -11.77564716]
[-223.66386414 -16.65656853]
[-211.79397583 -5.34119368]
[-197.10771179 -2.28935361]
[-182.42146301 0.76248670]
[-167.69488525 3.61344743]
[-152.93074036 6.26299667]
[-138.16659546 8.91254616]
[-145.03335571 -4.42340565]
[-140.69958496 -18.78371048]
[-127.60183716 -26.09460258]
[-113.10404968 -22.24569130]
[-105.35727692 -9.40094280]
[-108.71697998 5.21796274]
[-121.29526520 13.39206505]
[-107.16135406 18.41526031]
[-93.02743530 23.43845367]
[-83.08499146 12.29946518]
[-69.59881592 5.79805231]
[-54.61045837 4.95297861]
[-40.40217209 9.92411137]
[-29.14935303 19.98332214]
[-22.58750916 33.62096405]
[-21.74462128 48.77237320]
[-7.61070681 53.79556656]
[6.52320719 58.81875992]
[20.65712166 63.84195709]
[34.79103470 68.86515045]
[48.92494965 73.88834381]
[63.05886078 78.91153717]
[73.86222076 66.44128418]
[88.59799957 59.01993942]
[105.04921722 57.76403809]
[120.74077606 62.86253738]
[133.31188965 73.54836273]
[140.87123108 88.21382904]
[142.28149414 104.65253448]
[156.66862488 108.89638519]
[171.05577087 113.14024353]
[185.44290161 117.38410187]
[199.83003235 121.62796021]
[210.98339844 111.16136169]
[225.78051758 107.70557404]
[240.22463989 112.09118652]
[250.46571350 123.04455566]
[253.82650757 137.55560303]
[268.21362305 141.79946899]
[282.60076904 146.04331970]
[298.02618408 142.52655029]
[308.04437256 153.54856873]
[322.43151855 157.79241943]
[336.81863403 162.03628540]
[351.20578003 166.28013611]
[365.59292603 170.52398682]
[376.66638184 159.88095093]
[391.58160400 156.21612549]
[406.32653809 160.51533508]
[416.93481445 171.62208557]
[420.55285645 186.54875183]
[416.20745850 201.28012085]
[405.06750488 211.85351562]
[390.12957764 215.42477417]
[375.41189575 211.03321838]
[364.87347412 199.86018372]
[361.34906006 184.91113281]
[346.96191406 180.66726685]
[332.57479858 176.42341614]
[318.18765259 172.17955017]
[303.80050659 167.93569946]
[289.40417480 171.75602722]
[278.35690308 160.43045044]
[263.96978760 156.18659973]
[249.58264160 151.94274902]
[238.88433838 162.30670166]
[224.33805847 165.94841003]
[209.82612610 161.79267883]
[199.27346802 150.85932922]
[195.58618164 136.01509094]
[181.19905090 131.77124023]
[166.81190491 127.52738190]
[152.42477417 123.28352356]
[138.03764343 119.03966522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 62]
[9 61]
[10 60]
[11 59]
[12 58]
[13 57]
[14 56]
[21 49]
[22 48]
[23 47]
[24 40]
[25 39]
[26 38]
[28 37]
[29 36]
[30 35]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[78 105]
[79 104]
[80 103]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
