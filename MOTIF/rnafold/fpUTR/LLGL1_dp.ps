%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LLGL1)
} def

/sequence { (\
GGCCGCGCGGCGCAUCCUGCGGGCGGCGGCGGCGGGCGAGGCGCCUGCAGCCGGGCGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.020514322 ubox
1 52 0.034355149 ubox
2 8 0.010685803 ubox
2 11 0.062828860 ubox
2 13 0.005574123 ubox
2 16 0.020509743 ubox
2 24 0.337472282 ubox
2 27 0.427988943 ubox
2 30 0.054473011 ubox
2 33 0.200803698 ubox
2 37 0.508158023 ubox
2 42 0.004030798 ubox
2 51 0.034325049 ubox
2 56 0.168390034 ubox
2 58 0.104352113 ubox
3 7 0.010617561 ubox
3 10 0.064401143 ubox
3 12 0.004123011 ubox
3 22 0.523643083 ubox
3 23 0.338764604 ubox
3 26 0.444015152 ubox
3 29 0.054586438 ubox
3 32 0.200983904 ubox
3 35 0.286837118 ubox
3 36 0.473411776 ubox
3 41 0.004123728 ubox
3 50 0.034300796 ubox
3 54 0.005042123 ubox
3 55 0.168433500 ubox
3 57 0.074391744 ubox
4 9 0.064333584 ubox
4 12 0.010358035 ubox
4 21 0.525158175 ubox
4 22 0.342619000 ubox
4 25 0.444256149 ubox
4 28 0.054606360 ubox
4 31 0.201058096 ubox
4 34 0.342200069 ubox
4 35 0.435038454 ubox
4 38 0.052721236 ubox
4 40 0.004311635 ubox
4 53 0.005961464 ubox
4 54 0.168109790 ubox
4 57 0.092784444 ubox
5 11 0.011351219 ubox
5 13 0.020126949 ubox
5 20 0.525066148 ubox
5 24 0.444688527 ubox
5 27 0.063779110 ubox
5 30 0.201034026 ubox
5 33 0.389480096 ubox
5 37 0.053294282 ubox
5 48 0.033692365 ubox
5 51 0.010950109 ubox
5 52 0.004662410 ubox
5 56 0.119171232 ubox
5 58 0.039403123 ubox
6 10 0.011279295 ubox
6 12 0.020148431 ubox
6 19 0.524982535 ubox
6 21 0.354218453 ubox
6 23 0.441563266 ubox
6 25 0.162809526 ubox
6 26 0.052674982 ubox
6 28 0.045697816 ubox
6 29 0.195679254 ubox
6 31 0.018992958 ubox
6 32 0.389066716 ubox
6 34 0.388026176 ubox
6 36 0.053262129 ubox
6 38 0.003906982 ubox
6 47 0.033719828 ubox
6 50 0.011433203 ubox
6 53 0.008219082 ubox
6 55 0.119136806 ubox
6 57 0.039438035 ubox
7 11 0.018873269 ubox
7 13 0.021795916 ubox
7 18 0.512500835 ubox
7 20 0.373996664 ubox
7 24 0.169416603 ubox
7 27 0.065393139 ubox
7 30 0.026174984 ubox
7 33 0.389238338 ubox
7 37 0.003922294 ubox
7 46 0.033079191 ubox
7 48 0.011731546 ubox
7 51 0.006607624 ubox
7 52 0.005152720 ubox
7 56 0.039330545 ubox
8 12 0.021829178 ubox
8 19 0.374214582 ubox
8 21 0.420301878 ubox
8 23 0.169387008 ubox
8 25 0.037554930 ubox
8 26 0.064893569 ubox
8 28 0.189728281 ubox
8 29 0.024514541 ubox
8 31 0.433253490 ubox
8 32 0.342065520 ubox
8 34 0.053122540 ubox
8 36 0.003911466 ubox
8 47 0.011765277 ubox
8 50 0.006504583 ubox
8 53 0.118366395 ubox
8 55 0.039123080 ubox
9 16 0.192926693 ubox
9 17 0.487083630 ubox
9 18 0.368411985 ubox
9 20 0.335749174 ubox
9 24 0.040180945 ubox
9 27 0.191540622 ubox
9 30 0.472480710 ubox
9 33 0.053096861 ubox
9 45 0.035828236 ubox
9 52 0.118216629 ubox
10 15 0.131196634 ubox
10 16 0.483882253 ubox
10 17 0.365609023 ubox
10 20 0.246581790 ubox
10 24 0.059037292 ubox
10 27 0.021002652 ubox
10 30 0.285495856 ubox
10 44 0.035892694 ubox
10 51 0.118011771 ubox
10 58 0.011828213 ubox
11 19 0.344957658 ubox
11 21 0.186958246 ubox
11 23 0.054370838 ubox
11 25 0.192590534 ubox
11 26 0.018374367 ubox
11 28 0.514956156 ubox
11 29 0.202563730 ubox
11 31 0.053230755 ubox
11 34 0.003845013 ubox
11 43 0.035943946 ubox
11 50 0.106697863 ubox
11 53 0.006399077 ubox
11 57 0.011857843 ubox
12 18 0.280164651 ubox
12 20 0.214438255 ubox
12 24 0.192881408 ubox
12 27 0.553775306 ubox
12 30 0.054119672 ubox
12 33 0.004095732 ubox
12 42 0.035944768 ubox
12 48 0.005910654 ubox
12 52 0.005532377 ubox
12 56 0.012186890 ubox
12 58 0.007219062 ubox
13 19 0.216829615 ubox
13 23 0.188489034 ubox
13 26 0.553870553 ubox
13 29 0.052567795 ubox
13 32 0.004105570 ubox
13 41 0.035923482 ubox
13 47 0.005870592 ubox
13 55 0.012177684 ubox
13 57 0.007224263 ubox
14 18 0.175799295 ubox
14 46 0.004559710 ubox
15 22 0.115896678 ubox
15 23 0.093408085 ubox
15 26 0.007571523 ubox
15 39 0.008267648 ubox
15 54 0.004609464 ubox
15 55 0.006696934 ubox
16 21 0.126813526 ubox
16 22 0.137967409 ubox
16 23 0.547135972 ubox
16 25 0.007267516 ubox
16 26 0.036406264 ubox
16 28 0.006488240 ubox
16 29 0.007256155 ubox
16 31 0.026967231 ubox
16 36 0.035496615 ubox
16 38 0.005530220 ubox
16 53 0.004941307 ubox
16 54 0.006894099 ubox
17 21 0.137401274 ubox
17 22 0.549193210 ubox
17 23 0.008593808 ubox
17 25 0.036383948 ubox
17 26 0.016963215 ubox
17 28 0.008720011 ubox
17 29 0.036550083 ubox
17 35 0.035892621 ubox
17 50 0.050615317 ubox
17 53 0.006582743 ubox
17 61 0.008446015 ubox
18 22 0.008012766 ubox
18 25 0.017280786 ubox
18 28 0.043296682 ubox
18 31 0.004692155 ubox
18 34 0.035911987 ubox
18 49 0.106389022 ubox
18 59 0.031976923 ubox
18 60 0.006303309 ubox
19 24 0.020794416 ubox
19 27 0.045077035 ubox
19 30 0.005650827 ubox
19 33 0.035986525 ubox
19 48 0.107110004 ubox
19 58 0.034989794 ubox
20 26 0.045080723 ubox
20 29 0.005512780 ubox
20 32 0.035928027 ubox
20 47 0.107119451 ubox
20 57 0.034971265 ubox
21 27 0.003581653 ubox
21 46 0.107056804 ubox
21 56 0.032122125 ubox
22 45 0.107148186 ubox
23 30 0.040450487 ubox
23 44 0.107148886 ubox
23 56 0.090096135 ubox
23 58 0.528275916 ubox
24 29 0.040467868 ubox
24 31 0.007909059 ubox
24 43 0.107073657 ubox
24 53 0.008391347 ubox
24 55 0.090429249 ubox
24 57 0.529648639 ubox
25 30 0.007989550 ubox
25 42 0.095001794 ubox
25 52 0.009538039 ubox
25 56 0.543773275 ubox
26 33 0.004048047 ubox
26 37 0.008738013 ubox
26 42 0.049322652 ubox
26 51 0.009528658 ubox
26 56 0.089484762 ubox
26 58 0.047980213 ubox
27 32 0.004055414 ubox
27 36 0.008737153 ubox
27 38 0.013302343 ubox
27 41 0.069628244 ubox
27 50 0.009470899 ubox
27 53 0.657840323 ubox
27 55 0.082863722 ubox
27 57 0.045365766 ubox
28 37 0.011683045 ubox
28 52 0.793544654 ubox
28 56 0.028260009 ubox
29 37 0.080485789 ubox
29 48 0.007004474 ubox
29 51 0.794077582 ubox
29 58 0.007116439 ubox
30 36 0.080797912 ubox
30 38 0.070656415 ubox
30 47 0.007010646 ubox
30 50 0.791083213 ubox
30 53 0.023195811 ubox
30 57 0.007121370 ubox
31 37 0.070935161 ubox
31 45 0.008308294 ubox
31 52 0.024234596 ubox
31 56 0.006987302 ubox
32 44 0.008392396 ubox
32 48 0.793921776 ubox
32 51 0.023195708 ubox
33 43 0.008463922 ubox
33 47 0.796937342 ubox
33 50 0.022258608 ubox
34 42 0.008440370 ubox
34 46 0.796705041 ubox
35 45 0.797326652 ubox
36 44 0.797333230 ubox
36 56 0.007568083 ubox
36 58 0.007262003 ubox
37 43 0.797259855 ubox
37 55 0.007591375 ubox
37 57 0.007232775 ubox
38 42 0.745834465 ubox
38 56 0.006956324 ubox
40 52 0.010454337 ubox
41 51 0.010466981 ubox
41 58 0.591910449 ubox
42 50 0.010465390 ubox
42 57 0.592631768 ubox
43 56 0.592681299 ubox
44 55 0.592686428 ubox
45 54 0.592676648 ubox
46 53 0.590473470 ubox
46 59 0.004784368 ubox
47 52 0.570050924 ubox
47 58 0.006953953 ubox
48 57 0.006944420 ubox
50 56 0.015921388 ubox
50 58 0.030338717 ubox
51 55 0.015828920 ubox
51 57 0.030333071 ubox
3 22 0.9500000 lbox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
