%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGAAUAGGUCUGCGGCUGCACACCGCCCGGACGCCGGGGUUCCUGCGUCCCCCGCCCCCUCUGAUCGCGGCUGGGUAGCCGAGCCGCAGGCAGCUGGGGGCCCCCGAACGCCGCCUCUGCAUCGCGCCGCCCCUGCCCCGGGCUCCGGUAGCUUUCGGGCUUCCGCACUGCCCGCCGCGCCCUGCCCACAGGGAAGCGCUUCCCCAGGCGGCGGCGGUCCUGGUGCGGACCCUCCGGCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[83.29380798 452.06481934]
[81.60137177 467.33016968]
[72.49007416 479.69464111]
[58.41080475 485.83221436]
[43.15082550 484.09194946]
[30.81498718 474.94192505]
[24.72157288 460.84347534]
[26.50967789 445.58905029]
[35.69831085 433.28195190]
[49.81577682 427.23275757]
[51.51539230 412.32934570]
[49.15653992 405.34497070]
[53.33161926 397.24908447]
[55.21912766 382.36831665]
[57.10663605 367.48754883]
[58.99414444 352.60678101]
[60.88165283 337.72598267]
[62.76916122 322.84521484]
[64.65666962 307.96444702]
[66.54418182 293.08367920]
[68.43168640 278.20291138]
[54.34243393 268.27160645]
[47.20074463 252.48493958]
[49.06286621 235.16859436]
[59.50416183 221.11801147]
[75.71162415 214.27033997]
[77.22307587 199.34667969]
[78.73452759 184.42303467]
[80.24597931 169.49937439]
[81.66325378 154.56648254]
[82.98630524 139.62493896]
[70.44244385 131.39988708]
[57.26696396 138.56973267]
[44.09148788 145.73959351]
[30.91600800 152.90943909]
[17.74053001 160.07928467]
[4.56505251 167.24914551]
[-3.85818529 180.64166260]
[-18.73573112 179.92900085]
[-31.91120911 187.09884644]
[-40.00022888 201.36418152]
[-56.39875031 201.22097778]
[-64.23738098 186.81652832]
[-55.45241165 172.96891785]
[-39.08106232 173.92337036]
[-25.90558243 166.75352478]
[-18.42474365 153.87384033]
[-2.60479951 154.07366943]
[10.57067871 146.90380859]
[23.74615669 139.73396301]
[36.92163467 132.56410217]
[50.09711456 125.39425659]
[63.27259064 118.22440338]
[61.98798370 111.08420563]
[62.02796555 104.07289124]
[63.30558395 97.42619324]
[65.69363403 91.35314178]
[52.25627899 84.68700409]
[38.81892014 78.02086639]
[25.38156128 71.35472870]
[11.94420147 64.68859100]
[-1.49315751 58.02245712]
[-19.85111809 59.59987640]
[-28.97012520 44.59386444]
[-42.49051666 38.09778976]
[-56.01091003 31.60171700]
[-65.07630157 30.71105576]
[-69.66011810 24.93744659]
[-83.09747314 18.27131081]
[-96.57662201 11.69007301]
[-110.09701538 5.19399929]
[-123.61740875 -1.30207491]
[-137.13780212 -7.79814911]
[-150.65818787 -14.29422283]
[-164.17858887 -20.79029655]
[-179.96830750 -19.79267120]
[-188.08935547 -32.27857971]
[-201.60974121 -38.77465439]
[-218.50498962 -40.18420792]
[-221.82759094 -56.80938721]
[-206.77192688 -64.60445404]
[-195.11366272 -52.29504776]
[-181.59327698 -45.79897308]
[-166.77061462 -47.26124191]
[-157.68251038 -34.31069183]
[-144.16212463 -27.81461525]
[-130.64172363 -21.31854248]
[-117.12133026 -14.82246780]
[-103.60093689 -8.32639408]
[-90.08054352 -1.83031952]
[-82.70885468 -1.76661026]
[-76.43133545 4.83395100]
[-62.99398041 11.50008774]
[-49.51483536 18.08132553]
[-35.99444199 24.57739830]
[-22.47405052 31.07347298]
[-10.97607708 27.36579704]
[0.33302668 32.64696503]
[5.17297983 44.58509827]
[18.61033821 51.25123596]
[32.04769897 57.91737366]
[45.48505783 64.58351135]
[58.92241669 71.24964905]
[72.35977173 77.91578674]
[88.16988373 66.65718842]
[107.54042816 65.43359375]
[124.64157867 74.61324310]
[137.13330078 66.30921936]
[149.62503052 58.00519562]
[152.92428589 45.55292511]
[163.47894287 38.89066696]
[175.35208130 41.12203598]
[187.94757080 32.97627258]
[200.54307556 24.83050919]
[213.13856506 16.68474770]
[225.73406982 8.53898430]
[238.32955933 0.39322156]
[250.92506409 -7.75254107]
[263.52056885 -15.89830399]
[260.54412842 -29.81329727]
[262.48806763 -43.87952423]
[269.09909058 -56.41289139]
[279.56637573 -65.91983795]
[292.62094116 -71.27532959]
[306.68948364 -71.85593414]
[320.08404541 -67.61238098]
[331.20440674 -59.07296371]
[343.90167236 -67.05916595]
[356.59893799 -75.04537201]
[369.29620361 -83.03157043]
[370.75134277 -96.40679932]
[379.51022339 -106.36180115]
[392.21325684 -109.41687775]
[404.17926025 -104.67626190]
[416.97625732 -112.50163269]
[429.77328491 -120.32700348]
[442.57028198 -128.15237427]
[455.36730957 -135.97775269]
[456.33230591 -145.31292725]
[461.39648438 -153.05064392]
[469.32620239 -157.53581238]
[478.29263306 -157.87863159]
[486.29296875 -154.12844849]
[499.37695312 -161.46395874]
[512.46093750 -168.79946899]
[525.54486084 -176.13497925]
[527.67291260 -189.41976929]
[536.92279053 -198.92024231]
[549.76379395 -201.33061218]
[561.47540283 -195.99240112]
[574.65087891 -203.16224670]
[587.82635498 -210.33210754]
[593.84960938 -217.16548157]
[601.21362305 -217.50810242]
[614.47851562 -224.51115417]
[616.94097900 -237.73803711]
[626.42767334 -247.00210571]
[639.32537842 -249.08770752]
[650.89855957 -243.45570374]
[664.25079346 -250.29083252]
[677.60296631 -257.12597656]
[690.95513916 -263.96112061]
[704.30731201 -270.79626465]
[705.71545410 -286.15921021]
[715.22387695 -298.30801392]
[729.79852295 -303.36599731]
[744.78869629 -299.71917725]
[755.41101074 -288.53125000]
[758.27600098 -273.37222290]
[752.46942139 -259.07931519]
[739.84411621 -250.21334839]
[724.42883301 -249.60337830]
[711.14245605 -257.44406128]
[697.79028320 -250.60893250]
[684.43811035 -243.77378845]
[671.08593750 -236.93864441]
[657.73370361 -230.10351562]
[653.24548340 -213.88407898]
[638.11151123 -205.78021240]
[621.48156738 -211.24627686]
[608.21667480 -204.24322510]
[594.99621582 -197.15663147]
[581.82073975 -189.98677063]
[568.64526367 -182.81692505]
[564.56762695 -166.48941040]
[549.64300537 -158.00627136]
[532.88037109 -163.05101013]
[519.79644775 -155.71549988]
[506.71246338 -148.37998962]
[493.62847900 -141.04447937]
[484.62548828 -122.45838165]
[463.19265747 -123.18074036]
[450.39566040 -115.35536194]
[437.59863281 -107.52999115]
[424.80163574 -99.70462036]
[412.00460815 -91.87924957]
[408.75585938 -75.36682892]
[394.27813721 -66.14160156]
[377.28240967 -70.33430481]
[364.58514404 -62.34810257]
[351.88787842 -54.36190033]
[339.19061279 -46.37569809]
[342.09124756 -30.78489494]
[338.77386475 -15.23798084]
[329.71823120 -2.12557793]
[316.28884888 6.52441788]
[300.52935791 9.36044312]
[284.85156250 5.91837692]
[271.66632080 -3.30280685]
[259.07083130 4.84295607]
[246.47532654 12.98871899]
[233.87983704 21.13448143]
[221.28433228 29.28024483]
[208.68884277 37.42600632]
[196.09333801 45.57176971]
[183.49784851 53.71753311]
[176.33958435 69.75174713]
[157.92904663 70.49691772]
[145.43733215 78.80094147]
[132.94560242 87.10497284]
[136.49134827 100.94214630]
[134.28498840 115.50437164]
[126.33565521 128.42793274]
[113.61067963 137.48143005]
[97.92784119 140.94798279]
[96.60479736 155.88952637]
[98.96103668 164.68853760]
[95.16963196 171.01081848]
[93.65818787 185.93447876]
[92.14673615 200.85813904]
[90.63528442 215.78179932]
[101.75962067 222.28723145]
[109.57577515 232.47441101]
[112.95456696 244.81373596]
[111.42974854 257.46911621]
[105.26203918 268.57116699]
[95.39534760 276.49340820]
[83.31245422 280.09042358]
[81.42494965 294.97119141]
[79.53743744 309.85195923]
[77.64993286 324.73272705]
[75.76242065 339.61349487]
[73.87491608 354.49426270]
[71.98740387 369.37503052]
[70.09989929 384.25582886]
[68.21238708 399.13659668]
[66.41879272 414.02896118]
[64.71917725 428.93237305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 248]
[11 247]
[13 246]
[14 245]
[15 244]
[16 243]
[17 242]
[18 241]
[19 240]
[20 239]
[21 238]
[26 231]
[27 230]
[28 229]
[29 228]
[30 226]
[31 225]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[39 46]
[40 45]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[64 96]
[65 95]
[66 94]
[68 93]
[69 92]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[77 83]
[78 82]
[107 220]
[108 219]
[109 218]
[112 216]
[113 215]
[114 214]
[115 213]
[116 212]
[117 211]
[118 210]
[119 209]
[127 202]
[128 201]
[129 200]
[130 199]
[134 196]
[135 195]
[136 194]
[137 193]
[138 192]
[143 190]
[144 189]
[145 188]
[146 187]
[150 184]
[151 183]
[152 182]
[154 181]
[155 180]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
