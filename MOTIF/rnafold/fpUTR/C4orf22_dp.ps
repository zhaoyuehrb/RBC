%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C4orf22)
} def

/sequence { (\
CUGCCCUCCUGCUUCCGUUGCUAGGGACGCUUCGGCCGAGGAUACCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.004106866 ubox
1 40 0.068933751 ubox
1 41 0.038623385 ubox
2 29 0.057775125 ubox
2 34 0.004214270 ubox
2 38 0.032126867 ubox
2 39 0.063949470 ubox
2 40 0.038118503 ubox
2 44 0.104295202 ubox
2 47 0.095346878 ubox
2 49 0.649005939 ubox
3 12 0.020476185 ubox
3 28 0.081803386 ubox
3 30 0.040948258 ubox
3 33 0.003500429 ubox
3 36 0.142074676 ubox
3 37 0.039994433 ubox
3 43 0.111775770 ubox
3 46 0.128352493 ubox
3 48 0.851858875 ubox
4 11 0.020480699 ubox
4 26 0.108346738 ubox
4 29 0.041235358 ubox
4 35 0.143329788 ubox
4 41 0.028106627 ubox
4 47 0.851271098 ubox
5 25 0.108647730 ubox
5 26 0.014517048 ubox
5 34 0.142541436 ubox
5 35 0.043150799 ubox
5 40 0.024538964 ubox
5 41 0.472033713 ubox
6 24 0.108664787 ubox
6 25 0.014253182 ubox
6 26 0.025407254 ubox
6 34 0.044955192 ubox
6 35 0.014239645 ubox
6 40 0.472880807 ubox
6 41 0.005800629 ubox
7 23 0.105335969 ubox
7 24 0.009264671 ubox
7 25 0.018445834 ubox
7 26 0.048502108 ubox
7 27 0.022543987 ubox
7 34 0.013915181 ubox
7 35 0.004865906 ubox
7 39 0.472515495 ubox
7 40 0.005277546 ubox
7 41 0.004610300 ubox
7 42 0.833769867 ubox
8 24 0.021412841 ubox
8 25 0.059608803 ubox
8 26 0.023558935 ubox
8 34 0.007661581 ubox
8 35 0.106219235 ubox
8 38 0.459146301 ubox
8 40 0.005313242 ubox
8 41 0.854737793 ubox
9 24 0.062872551 ubox
9 25 0.023406497 ubox
9 34 0.129219080 ubox
9 35 0.213900829 ubox
9 40 0.854758713 ubox
9 41 0.023293535 ubox
10 23 0.061770266 ubox
10 24 0.021459910 ubox
10 29 0.016134451 ubox
10 34 0.214129727 ubox
10 38 0.127209361 ubox
10 39 0.838959375 ubox
10 40 0.023290555 ubox
10 44 0.009863251 ubox
10 47 0.004342920 ubox
10 49 0.022206128 ubox
11 18 0.027251411 ubox
11 21 0.126899547 ubox
11 22 0.012945314 ubox
11 28 0.026953592 ubox
11 30 0.310941985 ubox
11 33 0.110289645 ubox
11 36 0.344610124 ubox
11 37 0.277493128 ubox
11 43 0.010385756 ubox
11 46 0.006369022 ubox
11 48 0.029148274 ubox
12 17 0.027540422 ubox
12 20 0.127497029 ubox
12 29 0.315619999 ubox
12 35 0.334815391 ubox
12 40 0.038425324 ubox
12 41 0.037788229 ubox
12 47 0.029032286 ubox
13 27 0.163586949 ubox
13 34 0.311732482 ubox
13 35 0.005473640 ubox
13 39 0.039953058 ubox
13 40 0.037848558 ubox
13 42 0.005374791 ubox
14 26 0.170192372 ubox
14 27 0.323583325 ubox
14 34 0.008568877 ubox
14 35 0.015870783 ubox
14 38 0.038737870 ubox
14 39 0.038655884 ubox
14 41 0.005094564 ubox
14 42 0.036598962 ubox
15 25 0.171347508 ubox
15 26 0.327024579 ubox
15 34 0.016662552 ubox
15 35 0.867278498 ubox
15 38 0.037858718 ubox
15 40 0.005090529 ubox
15 41 0.038177260 ubox
16 24 0.171581609 ubox
16 25 0.326887135 ubox
16 29 0.275017465 ubox
16 34 0.873621707 ubox
16 38 0.013174488 ubox
16 40 0.038164769 ubox
17 28 0.276835163 ubox
17 30 0.010171424 ubox
17 33 0.874800046 ubox
17 36 0.037730566 ubox
17 37 0.013546348 ubox
17 45 0.007060493 ubox
18 24 0.018144016 ubox
18 26 0.006985864 ubox
18 27 0.276646746 ubox
18 29 0.009118291 ubox
18 35 0.037802545 ubox
18 39 0.012165529 ubox
18 44 0.007161546 ubox
19 23 0.015741903 ubox
19 24 0.007281128 ubox
19 25 0.012044127 ubox
19 26 0.273276881 ubox
19 29 0.008756252 ubox
19 34 0.037625765 ubox
19 38 0.012596237 ubox
19 49 0.007795364 ubox
20 28 0.010139492 ubox
20 30 0.874752010 ubox
20 33 0.037305124 ubox
20 36 0.041567714 ubox
20 37 0.009130772 ubox
20 48 0.009905182 ubox
21 29 0.874257386 ubox
21 35 0.042571204 ubox
21 41 0.007431464 ubox
21 47 0.009873800 ubox
22 34 0.041617401 ubox
22 40 0.007399922 ubox
23 31 0.029930144 ubox
23 32 0.045819887 ubox
24 30 0.030426834 ubox
24 31 0.049674275 ubox
24 32 0.014399618 ubox
24 33 0.011065280 ubox
24 37 0.006557450 ubox
24 46 0.010541495 ubox
25 30 0.049884403 ubox
25 31 0.014908327 ubox
25 32 0.010345478 ubox
25 33 0.005229584 ubox
25 36 0.006552480 ubox
25 37 0.019359951 ubox
25 45 0.010587601 ubox
25 46 0.012607027 ubox
26 30 0.014694536 ubox
26 31 0.008148548 ubox
26 32 0.005260826 ubox
26 33 0.010628564 ubox
26 36 0.019034700 ubox
26 45 0.013777910 ubox
27 31 0.004565057 ubox
27 32 0.009634125 ubox
28 34 0.026350642 ubox
28 38 0.016276759 ubox
28 47 0.024274111 ubox
29 33 0.025293279 ubox
29 36 0.058370279 ubox
29 37 0.012463737 ubox
29 46 0.025007107 ubox
29 48 0.024397639 ubox
30 35 0.059662503 ubox
30 40 0.009654925 ubox
30 41 0.102986680 ubox
30 47 0.023891647 ubox
31 39 0.009337064 ubox
31 40 0.103919268 ubox
31 42 0.031112865 ubox
32 38 0.008639496 ubox
32 39 0.104973402 ubox
32 41 0.032549363 ubox
32 42 0.013720550 ubox
33 38 0.105919374 ubox
33 40 0.033136076 ubox
33 41 0.014392116 ubox
33 47 0.043361403 ubox
34 46 0.046805626 ubox
35 45 0.046661190 ubox
35 48 0.023002989 ubox
36 47 0.021285628 ubox
37 47 0.036042710 ubox
38 46 0.037993916 ubox
40 46 0.068441621 ubox
41 45 0.067483026 ubox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
showpage
end
%%EOF
