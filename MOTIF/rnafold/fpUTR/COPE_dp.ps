%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COPE)
} def

/sequence { (\
CUUGCUUCCGGCUGACGUGUCUUUCAGGAAGAGGAGCUGGUGAGAAGACAGCGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003301582 ubox
1 28 0.009767746 ubox
1 31 0.041787345 ubox
1 33 0.098348628 ubox
1 34 0.547569052 ubox
1 36 0.026029921 ubox
1 40 0.021434175 ubox
1 44 0.066143681 ubox
1 47 0.596672545 ubox
1 51 0.059344377 ubox
2 10 0.003171076 ubox
2 11 0.004967006 ubox
2 15 0.019025218 ubox
2 27 0.009818225 ubox
2 30 0.042006605 ubox
2 32 0.090968017 ubox
2 33 0.549603712 ubox
2 34 0.101304911 ubox
2 35 0.076600170 ubox
2 36 0.003799774 ubox
2 39 0.020729396 ubox
2 43 0.066411470 ubox
2 44 0.009191543 ubox
2 45 0.026668472 ubox
2 46 0.599430915 ubox
2 47 0.078392857 ubox
2 48 0.046071773 ubox
2 50 0.054425803 ubox
2 51 0.126505186 ubox
2 54 0.313949858 ubox
2 55 0.012175806 ubox
3 10 0.007808241 ubox
3 14 0.019298042 ubox
3 26 0.009838188 ubox
3 29 0.041555209 ubox
3 31 0.034088177 ubox
3 32 0.544040500 ubox
3 33 0.095757182 ubox
3 34 0.079412473 ubox
3 35 0.041299345 ubox
3 42 0.065042861 ubox
3 43 0.011030421 ubox
3 44 0.028608083 ubox
3 45 0.594813098 ubox
3 46 0.070220171 ubox
3 47 0.050209131 ubox
3 50 0.162251284 ubox
3 53 0.332190857 ubox
3 54 0.013763146 ubox
4 9 0.008700421 ubox
4 12 0.098127131 ubox
4 13 0.003188608 ubox
4 18 0.003513083 ubox
4 25 0.009816713 ubox
4 37 0.052850208 ubox
4 41 0.060378785 ubox
4 49 0.168956503 ubox
4 52 0.341803218 ubox
5 11 0.098301018 ubox
5 17 0.003810762 ubox
5 27 0.041678081 ubox
5 28 0.007854168 ubox
5 31 0.616008090 ubox
5 33 0.033919802 ubox
5 34 0.172071258 ubox
5 36 0.052851646 ubox
5 40 0.048739104 ubox
5 44 0.597653832 ubox
5 47 0.174415010 ubox
5 51 0.340829942 ubox
6 10 0.088562353 ubox
6 26 0.040403713 ubox
6 27 0.007766171 ubox
6 29 0.008105860 ubox
6 30 0.618173656 ubox
6 32 0.031896029 ubox
6 33 0.172689977 ubox
6 35 0.045386819 ubox
6 36 0.015807398 ubox
6 39 0.037133452 ubox
6 43 0.599453188 ubox
6 44 0.019450345 ubox
6 45 0.023666961 ubox
6 46 0.175400263 ubox
6 47 0.013175777 ubox
6 48 0.021537454 ubox
6 50 0.315291998 ubox
6 54 0.003352463 ubox
6 55 0.015008598 ubox
7 15 0.009983372 ubox
7 26 0.007091707 ubox
7 28 0.007603923 ubox
7 29 0.618763421 ubox
7 31 0.027797521 ubox
7 32 0.173242176 ubox
7 34 0.035777030 ubox
7 35 0.083303642 ubox
7 40 0.004604024 ubox
7 42 0.563261206 ubox
7 43 0.037435520 ubox
7 44 0.036026878 ubox
7 45 0.178504324 ubox
7 46 0.029125256 ubox
7 47 0.034855346 ubox
7 48 0.124356072 ubox
7 50 0.019828978 ubox
7 53 0.003272980 ubox
7 54 0.021169293 ubox
8 14 0.010685232 ubox
8 27 0.007445756 ubox
8 28 0.619032312 ubox
8 31 0.173300446 ubox
8 33 0.035269702 ubox
8 34 0.090756183 ubox
8 39 0.004186638 ubox
8 40 0.693381317 ubox
8 42 0.022842668 ubox
8 44 0.140806273 ubox
8 47 0.115566817 ubox
8 53 0.021161592 ubox
9 17 0.048825729 ubox
9 27 0.610360205 ubox
9 33 0.090782947 ubox
9 39 0.700827852 ubox
9 42 0.031319610 ubox
9 53 0.020428201 ubox
10 16 0.051345587 ubox
10 21 0.469200712 ubox
10 22 0.068997659 ubox
10 23 0.011430559 ubox
10 24 0.015298717 ubox
10 25 0.220225628 ubox
10 38 0.700957773 ubox
10 41 0.020189369 ubox
10 52 0.014931923 ubox
11 18 0.020894095 ubox
11 20 0.472140843 ubox
11 21 0.069708475 ubox
11 22 0.005597112 ubox
11 23 0.016383657 ubox
11 24 0.208070387 ubox
11 37 0.701557850 ubox
11 41 0.113251057 ubox
11 52 0.054055558 ubox
12 17 0.022916959 ubox
12 19 0.477655439 ubox
12 27 0.224814686 ubox
12 28 0.008693992 ubox
12 31 0.012947641 ubox
12 36 0.701518279 ubox
12 40 0.114685424 ubox
12 44 0.223293488 ubox
12 51 0.056114059 ubox
13 19 0.008042663 ubox
13 26 0.287851309 ubox
13 27 0.005007468 ubox
13 30 0.012912920 ubox
13 33 0.004170978 ubox
13 35 0.693683581 ubox
13 39 0.112333725 ubox
13 42 0.004150851 ubox
13 43 0.223159564 ubox
13 50 0.054546722 ubox
13 53 0.007918194 ubox
14 18 0.009879293 ubox
14 21 0.292115801 ubox
14 23 0.074224277 ubox
14 24 0.018043622 ubox
14 25 0.289617611 ubox
14 38 0.066615756 ubox
14 49 0.052555589 ubox
14 52 0.009609398 ubox
15 20 0.259086611 ubox
15 22 0.069896984 ubox
15 23 0.019893836 ubox
15 24 0.284839755 ubox
15 41 0.222901928 ubox
16 39 0.032375609 ubox
16 40 0.222084826 ubox
16 53 0.102925318 ubox
17 37 0.100693932 ubox
17 38 0.038311757 ubox
17 49 0.007907369 ubox
17 52 0.104512115 ubox
18 26 0.043206504 ubox
18 36 0.098439215 ubox
18 39 0.012106903 ubox
18 48 0.009140779 ubox
18 50 0.095713673 ubox
18 51 0.061449027 ubox
19 25 0.043790694 ubox
19 37 0.168010945 ubox
19 38 0.010536198 ubox
19 49 0.123122722 ubox
20 28 0.184539348 ubox
20 29 0.372950616 ubox
20 32 0.542518676 ubox
20 34 0.115795410 ubox
20 35 0.188059013 ubox
20 36 0.128409672 ubox
20 43 0.015538339 ubox
20 45 0.049613356 ubox
20 48 0.124009117 ubox
21 27 0.189552802 ubox
21 28 0.374966799 ubox
21 31 0.545091063 ubox
21 33 0.129986292 ubox
21 34 0.204277273 ubox
21 36 0.051686963 ubox
21 42 0.015601047 ubox
21 44 0.050032597 ubox
21 47 0.124024669 ubox
22 26 0.171285175 ubox
22 27 0.346729780 ubox
22 28 0.004091127 ubox
22 29 0.018006821 ubox
22 30 0.543927150 ubox
22 31 0.006429560 ubox
22 32 0.129831462 ubox
22 33 0.198724283 ubox
22 34 0.116623491 ubox
22 35 0.049971185 ubox
22 36 0.005533214 ubox
22 43 0.049952815 ubox
22 45 0.057392549 ubox
22 46 0.109681106 ubox
23 27 0.011818217 ubox
23 28 0.023253387 ubox
23 29 0.536430679 ubox
23 30 0.016462393 ubox
23 31 0.128718022 ubox
23 32 0.192794891 ubox
23 33 0.130978231 ubox
23 34 0.042204714 ubox
23 35 0.014241665 ubox
23 36 0.003789218 ubox
23 42 0.046964922 ubox
23 43 0.003502501 ubox
23 44 0.081154053 ubox
23 45 0.092265001 ubox
23 46 0.003645829 ubox
24 28 0.483583896 ubox
24 29 0.019667684 ubox
24 30 0.116064424 ubox
24 31 0.178679135 ubox
24 32 0.142945294 ubox
24 33 0.031831878 ubox
24 34 0.016801198 ubox
24 35 0.009704145 ubox
24 40 0.059265207 ubox
24 42 0.003200454 ubox
24 43 0.097472423 ubox
24 44 0.064251030 ubox
24 45 0.004987739 ubox
25 31 0.150651532 ubox
25 33 0.017944747 ubox
25 34 0.010461681 ubox
25 39 0.082544007 ubox
25 42 0.103762512 ubox
25 44 0.005981071 ubox
26 38 0.082745806 ubox
26 41 0.101918203 ubox
27 37 0.082818539 ubox
27 38 0.032242737 ubox
28 37 0.033995046 ubox
30 38 0.093061757 ubox
31 37 0.093874913 ubox
32 38 0.017124187 ubox
33 37 0.016864393 ubox
36 52 0.647400590 ubox
37 44 0.008471732 ubox
37 47 0.005874734 ubox
37 51 0.648479368 ubox
38 43 0.008478452 ubox
38 46 0.005923732 ubox
38 50 0.646490921 ubox
38 53 0.044391513 ubox
39 49 0.624852878 ubox
39 52 0.054737977 ubox
40 49 0.176155714 ubox
40 52 0.007411958 ubox
41 48 0.240741458 ubox
41 50 0.060084543 ubox
41 51 0.006655581 ubox
41 53 0.003210349 ubox
42 49 0.067392086 ubox
42 52 0.004184802 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
showpage
end
%%EOF
