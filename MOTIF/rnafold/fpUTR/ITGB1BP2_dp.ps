%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ITGB1BP2)
} def

/sequence { (\
CUAAGAGGUGUUCCCCAUUCGGCAGCCAGACUCCUUGAAAUACCCUUUCAGUAAUCAUUCAACCAACGCUUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.007175766 ubox
1 51 0.069132796 ubox
2 28 0.007164216 ubox
2 37 0.018928778 ubox
2 50 0.067819171 ubox
2 53 0.006101959 ubox
3 19 0.003185922 ubox
3 36 0.022501750 ubox
3 47 0.086089606 ubox
3 48 0.023371429 ubox
3 52 0.005878365 ubox
3 71 0.011725349 ubox
4 18 0.003622427 ubox
4 19 0.003639454 ubox
4 32 0.014932811 ubox
4 35 0.025289580 ubox
4 46 0.098725629 ubox
4 47 0.024212752 ubox
4 48 0.063288274 ubox
4 70 0.013361514 ubox
5 18 0.004103310 ubox
5 20 0.009004431 ubox
5 31 0.015791863 ubox
5 33 0.059990556 ubox
5 34 0.023741691 ubox
5 36 0.021498324 ubox
5 45 0.100201767 ubox
5 46 0.022461461 ubox
5 47 0.068242958 ubox
5 48 0.003544004 ubox
5 49 0.013041648 ubox
5 56 0.008750750 ubox
5 60 0.011507559 ubox
5 69 0.013435543 ubox
5 71 0.011452562 ubox
5 72 0.982693432 ubox
6 19 0.008658241 ubox
6 32 0.061047885 ubox
6 35 0.028933500 ubox
6 46 0.068700135 ubox
6 47 0.003509999 ubox
6 48 0.012824995 ubox
6 55 0.008208055 ubox
6 59 0.010954381 ubox
6 70 0.011875134 ubox
6 71 0.984851359 ubox
7 14 0.010019207 ubox
7 15 0.006411839 ubox
7 16 0.011814409 ubox
7 18 0.005067523 ubox
7 19 0.004958514 ubox
7 27 0.065169532 ubox
7 31 0.060276076 ubox
7 32 0.021435625 ubox
7 33 0.005242176 ubox
7 34 0.030905850 ubox
7 44 0.110942780 ubox
7 45 0.061880700 ubox
7 64 0.021754611 ubox
7 69 0.010092342 ubox
7 70 0.985510943 ubox
8 13 0.010042165 ubox
8 14 0.006405430 ubox
8 15 0.011780043 ubox
8 18 0.007486840 ubox
8 26 0.065392551 ubox
8 31 0.022959207 ubox
8 33 0.030866111 ubox
8 43 0.114997179 ubox
8 44 0.054037786 ubox
8 63 0.021777111 ubox
8 67 0.007464346 ubox
8 69 0.986549579 ubox
9 17 0.008927313 ubox
9 24 0.022625086 ubox
9 25 0.061265881 ubox
9 28 0.028418731 ubox
9 30 0.023051066 ubox
9 42 0.118812829 ubox
9 62 0.020895997 ubox
9 66 0.007169178 ubox
9 68 0.986061075 ubox
10 16 0.009711770 ubox
10 20 0.003211383 ubox
10 23 0.028659258 ubox
10 26 0.084927706 ubox
10 27 0.024173497 ubox
10 31 0.030370176 ubox
10 41 0.118583435 ubox
10 43 0.043067623 ubox
10 60 0.003433941 ubox
10 63 0.010656989 ubox
10 64 0.003533879 ubox
10 67 0.984463007 ubox
11 17 0.003500650 ubox
11 22 0.026457406 ubox
11 25 0.090233264 ubox
11 30 0.030052581 ubox
11 39 0.032577150 ubox
11 40 0.114042736 ubox
11 42 0.042433644 ubox
11 62 0.011837566 ubox
11 66 0.972287457 ubox
12 21 0.025037812 ubox
12 22 0.017312378 ubox
12 24 0.105643062 ubox
12 28 0.006181883 ubox
12 29 0.028891220 ubox
12 30 0.020989660 ubox
12 38 0.045987532 ubox
12 39 0.103099120 ubox
12 61 0.013861016 ubox
12 65 0.870786296 ubox
13 21 0.033107522 ubox
13 22 0.298707327 ubox
13 29 0.027596519 ubox
13 37 0.055471839 ubox
14 21 0.301459440 ubox
14 22 0.273243767 ubox
15 21 0.274807007 ubox
15 22 0.393932511 ubox
16 21 0.397414634 ubox
16 37 0.099039773 ubox
17 36 0.098301719 ubox
17 41 0.007884641 ubox
17 52 0.004522768 ubox
17 55 0.010286519 ubox
17 58 0.029182008 ubox
18 25 0.010904349 ubox
18 29 0.022701376 ubox
18 30 0.068778700 ubox
18 38 0.015146946 ubox
18 39 0.054939212 ubox
18 40 0.007299641 ubox
18 51 0.004369312 ubox
18 54 0.010789609 ubox
18 57 0.028613727 ubox
18 62 0.022269643 ubox
18 66 0.015092064 ubox
19 24 0.011188676 ubox
19 28 0.036300472 ubox
19 29 0.073755784 ubox
19 30 0.261156232 ubox
19 37 0.014907394 ubox
19 38 0.066447347 ubox
19 39 0.005761034 ubox
19 53 0.009398122 ubox
19 61 0.021277275 ubox
19 65 0.032120585 ubox
20 29 0.282329224 ubox
20 37 0.066995729 ubox
21 27 0.319115659 ubox
21 32 0.061324752 ubox
21 33 0.028268199 ubox
21 34 0.618909799 ubox
21 35 0.069380249 ubox
21 36 0.042598358 ubox
21 44 0.009166615 ubox
21 45 0.005690398 ubox
21 56 0.054777894 ubox
21 59 0.004267403 ubox
21 60 0.014446818 ubox
21 64 0.329210903 ubox
21 73 0.015371266 ubox
22 26 0.314585770 ubox
22 31 0.067400170 ubox
22 32 0.018669982 ubox
22 33 0.619641075 ubox
22 34 0.084104242 ubox
22 35 0.026396448 ubox
22 43 0.009185936 ubox
22 44 0.005673477 ubox
22 52 0.023919787 ubox
22 55 0.050913935 ubox
22 58 0.004052041 ubox
22 59 0.012789718 ubox
22 63 0.328793605 ubox
22 72 0.015471839 ubox
23 37 0.025419181 ubox
23 51 0.024546109 ubox
24 32 0.628503730 ubox
24 35 0.072669403 ubox
24 36 0.024269002 ubox
24 46 0.003956845 ubox
24 59 0.036819596 ubox
24 70 0.015641293 ubox
25 31 0.630770580 ubox
25 34 0.084467664 ubox
25 35 0.017815480 ubox
25 45 0.004138767 ubox
25 52 0.069072101 ubox
25 58 0.037253253 ubox
25 69 0.015982776 ubox
26 51 0.069580757 ubox
26 68 0.015956024 ubox
27 37 0.054882863 ubox
28 35 0.141850778 ubox
28 36 0.052699247 ubox
28 46 0.008232836 ubox
28 48 0.004556282 ubox
28 59 0.021094391 ubox
28 70 0.005197698 ubox
29 34 0.164457028 ubox
29 35 0.046349636 ubox
29 36 0.011787236 ubox
29 45 0.008681320 ubox
29 47 0.005019383 ubox
29 48 0.005721794 ubox
29 49 0.012052087 ubox
29 56 0.398614863 ubox
29 58 0.019996618 ubox
29 59 0.019373154 ubox
29 60 0.071051479 ubox
29 69 0.005554996 ubox
30 35 0.014550529 ubox
30 46 0.004764410 ubox
30 47 0.005416001 ubox
30 48 0.011304683 ubox
30 52 0.093756065 ubox
30 55 0.391415483 ubox
30 58 0.020440507 ubox
30 59 0.069181862 ubox
31 51 0.097015650 ubox
32 38 0.016864777 ubox
32 50 0.069358755 ubox
33 37 0.017615767 ubox
34 51 0.283257775 ubox
35 50 0.204641859 ubox
35 51 0.704129349 ubox
35 54 0.018300146 ubox
35 62 0.198858553 ubox
36 42 0.005193373 ubox
36 50 0.897108704 ubox
36 53 0.011967459 ubox
36 57 0.110400020 ubox
36 61 0.235799134 ubox
36 65 0.005573602 ubox
37 41 0.004746576 ubox
37 47 0.010286505 ubox
37 48 0.055219298 ubox
37 49 0.944968011 ubox
37 52 0.006855333 ubox
37 56 0.122343109 ubox
37 59 0.003942710 ubox
37 60 0.241589122 ubox
37 64 0.006727178 ubox
38 46 0.010534511 ubox
38 47 0.065140348 ubox
38 48 0.942135920 ubox
38 55 0.119618968 ubox
38 58 0.007585811 ubox
38 59 0.239107053 ubox
39 46 0.066207877 ubox
39 47 0.930548293 ubox
39 48 0.055429760 ubox
39 58 0.215229434 ubox
39 59 0.024291721 ubox
40 46 0.851504543 ubox
40 47 0.074525638 ubox
40 52 0.019234355 ubox
40 55 0.082229262 ubox
40 58 0.033438413 ubox
41 51 0.019119813 ubox
41 53 0.208148524 ubox
41 54 0.066280091 ubox
41 57 0.035292489 ubox
42 52 0.225271774 ubox
43 51 0.225495258 ubox
45 51 0.078694929 ubox
46 50 0.071595747 ubox
46 54 0.020649239 ubox
46 62 0.003380158 ubox
47 53 0.022297829 ubox
47 54 0.012200309 ubox
47 61 0.003626593 ubox
47 62 0.009609902 ubox
48 53 0.011012432 ubox
48 61 0.010858390 ubox
50 59 0.039233608 ubox
50 70 0.023547889 ubox
51 58 0.068489778 ubox
51 63 0.125049298 ubox
51 67 0.015766500 ubox
51 69 0.025491377 ubox
52 57 0.070075237 ubox
52 62 0.122779256 ubox
52 66 0.015446081 ubox
52 68 0.024938664 ubox
53 59 0.042583240 ubox
54 58 0.037199579 ubox
58 66 0.009523076 ubox
59 65 0.017338436 ubox
61 71 0.003451639 ubox
62 70 0.003565349 ubox
65 71 0.003909230 ubox
66 70 0.003364515 ubox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
