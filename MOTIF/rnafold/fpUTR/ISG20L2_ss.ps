%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUUAGCUGGACCCGUCUGGGAGGUAGGUUUGUGAGCGUGAGAGAUCGAUCUGUACCGCGGGGAUCCGAAGUAUGCUUAUCCAGGGUGUACUACAGACCUCCACAUGUUGGACAGUAGGAUUCAGCAGAGAAUGAGUCCCACAUCCUCUUUUCAUCCAUAAGCCACUCUUCCCAACUACUCUUCCGCCUUCCAUUGUCCCU\
) } def
/len { sequence length } bind def

/coor [
[159.16577148 400.03500366]
[155.50706482 414.58197021]
[151.84835815 429.12890625]
[148.18965149 443.67587280]
[144.53094482 458.22280884]
[151.49832153 472.67395020]
[144.41448975 487.06835938]
[128.71356201 490.36389160]
[116.43994904 480.03247070]
[117.00891113 463.99951172]
[129.98399353 454.56411743]
[133.64270020 440.01715088]
[137.30140686 425.47021484]
[140.96011353 410.92324829]
[144.61880493 396.37631226]
[141.93750000 388.38946533]
[145.52177429 379.64001465]
[143.44941711 364.78387451]
[139.40956116 358.59002686]
[141.46138000 349.68316650]
[139.61805725 334.79687500]
[137.77473450 319.91055298]
[135.93141174 305.02426147]
[134.08808899 290.13793945]
[132.24475098 275.25164795]
[130.40142822 260.36532593]
[116.70954895 250.60383606]
[114.26316071 233.62617493]
[125.05874634 219.86459351]
[122.98640442 205.00843811]
[120.91405487 190.15226746]
[118.84171295 175.29611206]
[116.76936340 160.43995667]
[114.69702148 145.58380127]
[112.62467194 130.72764587]
[110.55233002 115.87149048]
[94.45514679 123.03343964]
[75.30249786 113.86582947]
[60.31850052 114.55858612]
[45.33450699 115.25133514]
[33.12036896 129.72769165]
[14.52275467 130.66889954]
[1.36860251 117.94346619]
[-13.58695221 119.09732056]
[-28.54250717 120.25117493]
[-38.63344193 132.41458130]
[-54.37716675 133.79684448]
[-66.43321228 123.57787323]
[-67.64894104 107.82041168]
[-57.30307388 95.87308502]
[-41.53364182 94.82402039]
[-29.69636345 105.29562378]
[-14.74080849 104.14176178]
[0.21474621 102.98790741]
[5.58718824 92.91558838]
[15.25613976 86.62447357]
[26.88056374 85.77587891]
[37.57854080 90.69624329]
[44.64175415 100.26734161]
[59.62574768 99.57459259]
[74.60974121 98.88183594]
[81.39900970 85.50627136]
[73.11353302 73.00223541]
[64.82806396 60.49819946]
[56.54258728 47.99416351]
[42.47002411 40.76411819]
[41.88975525 25.88082123]
[33.60428238 13.37678528]
[18.22008133 12.58142662]
[6.39233732 2.99196100]
[2.52491856 -11.55132103]
[7.89843750 -25.41722488]
[-0.38703731 -37.92126083]
[-8.67251205 -50.42529678]
[-16.95798683 -62.92933273]
[-25.24346161 -75.43336487]
[-33.52893448 -87.93740082]
[-41.81441116 -100.44143677]
[-50.09988403 -112.94547272]
[-58.38536072 -125.44950867]
[-73.75876617 -130.03622437]
[-79.62401581 -144.96868896]
[-71.48178864 -158.79199219]
[-55.57810974 -160.90208435]
[-44.11291504 -149.68028259]
[-45.88132477 -133.73498535]
[-37.59584808 -121.23094940]
[-29.31037521 -108.72691345]
[-21.02490044 -96.22287750]
[-12.73942566 -83.71884155]
[-4.45395088 -71.21480560]
[3.83152390 -58.71077347]
[12.11699867 -46.20673752]
[20.40247345 -33.70270157]
[35.26618195 -33.24647141]
[47.15170670 -24.01617622]
[51.37240982 -9.38610268]
[46.10831833 5.09131098]
[54.39379120 17.59534645]
[67.87372589 23.93101692]
[69.04662323 39.70868683]
[77.33209991 52.21272278]
[85.61756897 64.71675873]
[93.90304565 77.22079468]
[101.33112335 78.25696564]
[93.68855286 65.34994507]
[99.01446533 51.32729721]
[113.29841614 46.74813461]
[125.78453064 55.06059265]
[127.07070923 70.00534821]
[116.18727875 80.32931519]
[123.61535645 81.36548615]
[135.00643921 71.60620880]
[146.39750671 61.84693527]
[148.16722107 49.06706619]
[157.86048889 41.17316055]
[169.93388367 41.97594452]
[181.47389221 32.39324188]
[187.14788818 17.62447739]
[201.88235474 15.44626904]
[213.42236328 5.86356688]
[224.96237183 -3.71913552]
[236.50238037 -13.30183792]
[248.04238892 -22.88453865]
[259.58239746 -32.46724319]
[271.12240601 -42.04994202]
[269.98513794 -57.52528381]
[278.18981934 -70.69580841]
[292.58160400 -76.49718475]
[307.62655640 -72.69866180]
[317.53961182 -60.76084518]
[318.50894165 -45.27407837]
[310.16186523 -32.19333267]
[295.70797729 -26.54842377]
[280.70510864 -30.50993347]
[269.16510010 -20.92723274]
[257.62509155 -11.34453011]
[246.08508301 -1.76182795]
[234.54507446 7.82087421]
[223.00506592 17.40357590]
[211.46505737 26.98627853]
[206.61648560 41.06962204]
[191.05659485 43.93325043]
[179.51658630 53.51595306]
[174.32890320 70.27816010]
[156.15678406 73.23800659]
[144.76570129 82.99728394]
[133.37463379 92.75656128]
[145.95135498 84.58183289]
[160.90968323 83.46460724]
[174.56121826 89.68036652]
[183.53976440 101.69643402]
[185.63137817 116.54988861]
[180.32032776 130.57817078]
[168.91621399 140.32220459]
[154.23103333 143.37928772]
[139.88587952 138.99562073]
[129.41796875 128.25212097]
[125.40848541 113.79914856]
[127.48083496 128.65530396]
[129.55317688 143.51145935]
[131.62551880 158.36761475]
[133.69786072 173.22377014]
[135.77021790 188.07992554]
[137.84255981 202.93608093]
[139.91490173 217.79223633]
[151.52888489 224.62013245]
[157.00823975 236.71455383]
[154.55590820 249.56576538]
[145.28773499 258.52200317]
[147.13107300 273.40832520]
[148.97439575 288.29461670]
[150.81771851 303.18093872]
[152.66104126 318.06723022]
[154.50436401 332.95355225]
[156.34768677 347.83984375]
[158.30558777 362.71151733]
[160.37792969 377.56768799]
[165.23666382 363.37640381]
[173.08079529 350.59088135]
[183.53070068 339.82986450]
[196.08067322 331.61413574]
[210.12336731 326.34130859]
[224.97918701 324.26654053]
[239.92918396 325.49023438]
[254.24987793 329.95315552]
[267.24819946 337.43936157]
[278.29513550 347.58654785]
[286.85604858 359.90365601]
[292.51666260 373.79458618]
[295.00299072 388.58706665]
[294.19473267 403.56527710]
[290.13101196 418.00433350]
[283.00851440 431.20547485]
[273.17187500 442.52978516]
[261.09713745 451.42929077]
[247.36869812 457.47329712]
[232.65090942 460.36929321]
[217.65603638 459.97711182]
[203.10975647 456.31573486]
[189.71601868 449.56240845]
[178.12300110 440.04388428]
[168.89175415 428.22085571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[17 178]
[18 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[38 61]
[39 60]
[40 59]
[43 54]
[44 53]
[45 52]
[62 104]
[63 103]
[64 102]
[65 101]
[67 99]
[68 98]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[80 86]
[112 148]
[113 147]
[114 146]
[117 144]
[118 143]
[120 141]
[121 140]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
