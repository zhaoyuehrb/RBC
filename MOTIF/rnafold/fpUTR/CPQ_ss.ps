%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCUUUGCCCCGCCUCUCGGCCCCGCGGCCUGGCCGGCAAGCAGGGCUGCAGUCACGGGGCGGCGCGGAGGGCCCCAGCCCAGUCAGGGGUGUGGCCGCCGCCACCGUAAGGCUAGGCCGCGAGCUUAGUCCUGGGAGCCGCCUCCGUCGCCGCCGUCAGAGCCGCCCUAUCAGAUUAUCUUAACAAGAAAACCAACUGGAAAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[94.94728088 172.35412598]
[107.94104767 164.54785156]
[105.05577850 149.82795715]
[102.17050171 135.10807800]
[96.01527405 127.42790985]
[93.04860687 119.02650452]
[83.05043793 130.20848083]
[73.05226135 141.39045715]
[63.05409241 152.57243347]
[53.05591965 163.75440979]
[43.05774689 174.93638611]
[42.99699402 187.83441162]
[34.43928909 196.94206238]
[22.36977386 197.75035095]
[12.20622635 208.78222656]
[2.04267955 219.81411743]
[3.67913079 229.10008240]
[0.90064049 237.96640015]
[-5.54892826 244.46235657]
[-14.13321304 247.22003174]
[-22.88800240 245.74128723]
[-33.53401184 256.30831909]
[-44.18001938 266.87536621]
[-54.82603073 277.44241333]
[-58.60490799 293.40023804]
[-74.38973999 297.84671021]
[-85.94244385 286.20770264]
[-81.37858582 270.45639038]
[-65.39307404 266.79641724]
[-54.74706650 256.22937012]
[-44.10105896 245.66232300]
[-33.45505142 235.09527588]
[-29.79461288 214.78355408]
[-8.98919773 209.65055847]
[1.17434919 198.61868286]
[11.33789635 187.58680725]
[14.25398064 170.28179932]
[31.87577248 164.93820190]
[41.87394333 153.75624084]
[51.87211609 142.57426453]
[61.87028885 131.39228821]
[71.86846161 120.21031189]
[81.86663055 109.02833557]
[88.35623169 74.84864044]
[132.32698059 86.13441467]
[133.44262695 71.17596436]
[134.55827332 56.21751022]
[135.67391968 41.25905609]
[136.78956604 26.30060387]
[130.10011292 11.96318054]
[138.76258850 -0.15336560]
[139.87823486 -15.11181927]
[137.35624695 -21.22337341]
[138.17620850 -26.84695625]
[141.25631714 -30.49687767]
[142.81684875 -45.41548157]
[130.49879456 -54.48260880]
[124.41325378 -68.40608215]
[126.10282135 -83.40647125]
[135.01422119 -95.46643829]
[148.67366028 -101.40660858]
[150.23417664 -116.32521057]
[151.79470825 -131.24382019]
[153.35522461 -146.16241455]
[154.91574097 -161.08102417]
[156.47627258 -175.99963379]
[158.03678894 -190.91822815]
[159.48620605 -205.84803772]
[160.82444763 -220.78822327]
[162.16267395 -235.72840881]
[163.50091553 -250.66859436]
[164.83914185 -265.60879517]
[161.19105530 -280.15841675]
[152.96224976 -292.69979858]
[144.73344421 -305.24121094]
[136.50463867 -317.78259277]
[122.46493530 -325.07626343]
[121.95201874 -339.96203613]
[113.72321320 -352.50341797]
[99.68350983 -359.79705811]
[99.17060089 -374.68283081]
[90.94178772 -387.22424316]
[82.71298218 -399.76565552]
[67.36048889 -404.42187500]
[61.56287003 -419.38073730]
[69.76756287 -433.16705322]
[85.68062592 -435.20513916]
[97.09492493 -423.93157959]
[95.25437927 -407.99444580]
[103.48319244 -395.45306396]
[111.71199799 -382.91165161]
[125.16312408 -376.51504517]
[126.26461029 -360.73223877]
[134.49342346 -348.19082642]
[147.94454956 -341.79421997]
[149.04603577 -326.01141357]
[157.27484131 -313.47000122]
[165.50364685 -300.92861938]
[173.73246765 -288.38720703]
[188.71749878 -289.05700684]
[195.79460144 -302.28253174]
[195.48362732 -318.10067749]
[208.31044006 -325.67181396]
[215.38754272 -338.89733887]
[211.03448486 -353.85357666]
[218.40008545 -367.16531372]
[232.68537903 -371.22311401]
[239.76248169 -384.44866943]
[246.83958435 -397.67419434]
[243.09062195 -407.88467407]
[245.52969360 -418.25921631]
[253.11647034 -425.42782593]
[263.18008423 -427.19897461]
[270.64782715 -440.20791626]
[278.11557007 -453.21688843]
[285.58331299 -466.22583008]
[293.05105591 -479.23477173]
[300.51876831 -492.24374390]
[307.98651123 -505.25268555]
[315.45425415 -518.26165771]
[312.66839600 -534.06097412]
[323.39144897 -545.99395752]
[339.39761353 -544.90661621]
[348.40832520 -531.63305664]
[343.51135254 -516.35565186]
[328.46322632 -510.79388428]
[320.99548340 -497.78494263]
[313.52774048 -484.77600098]
[306.05999756 -471.76702881]
[298.59225464 -458.75808716]
[291.12451172 -445.74914551]
[283.65676880 -432.74017334]
[276.18902588 -419.73123169]
[277.65130615 -400.45043945]
[260.06512451 -390.59707642]
[252.98800659 -377.37155151]
[245.91090393 -364.14602661]
[250.46029663 -350.00958252]
[243.47151184 -336.49621582]
[228.61306763 -331.82025146]
[221.53596497 -318.59472656]
[222.35314941 -303.72253418]
[209.02012634 -295.20541382]
[201.94302368 -281.97988892]
[179.77932739 -264.27053833]
[178.44110107 -249.33036804]
[177.10285950 -234.39018250]
[175.76463318 -219.44999695]
[174.42639160 -204.50981140]
[176.96061707 -197.56721497]
[172.95539856 -189.35771179]
[171.39488220 -174.43910217]
[169.83435059 -159.52050781]
[168.27383423 -144.60189819]
[166.71330261 -129.68328857]
[165.15278625 -114.76468658]
[163.59225464 -99.84608459]
[175.72674561 -91.20780182]
[181.94955444 -77.56476593]
[180.49836731 -62.53943634]
[171.66322327 -50.17670822]
[157.73544312 -43.85496140]
[156.17492676 -28.93635559]
[154.83670044 -13.99617004]
[153.72103882 0.96228307]
[160.49029541 14.22977734]
[151.74801636 27.41625214]
[150.63237000 42.37470627]
[149.51672363 57.33316040]
[148.40107727 72.29161072]
[147.28543091 87.25006866]
[152.47540283 73.17653656]
[164.21118164 63.83462143]
[179.09013367 61.93287659]
[192.79830933 68.02269745]
[201.36120605 80.33840942]
[202.29611206 95.30924988]
[195.33198547 108.59461212]
[182.48796082 116.34258270]
[167.48800659 116.30673981]
[154.68281555 108.49926758]
[164.84635925 119.53114319]
[175.00991821 130.56301880]
[185.17346191 141.59489441]
[200.35240173 149.14710999]
[197.29730225 165.82351685]
[180.42686462 167.50428772]
[174.14158630 151.75845337]
[163.97804260 140.72656250]
[153.81448364 129.69468689]
[143.65093994 118.66281891]
[136.96080017 122.05281067]
[123.58052826 128.83280945]
[116.89039612 132.22279358]
[119.77566528 146.94268799]
[122.66094208 161.66258240]
[137.64021301 163.98580933]
[150.92002869 171.29484558]
[160.89680481 182.70710754]
[166.36578369 196.84451294]
[166.66656494 211.99989319]
[161.76283264 226.34315491]
[152.24671936 238.14228821]
[139.26736450 245.97248840]
[124.39206696 248.88821411]
[109.41710663 246.53738403]
[96.15077972 239.20388794]
[86.19505310 227.77325439]
[80.75213623 213.62579346]
[80.47928619 198.46989441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[14 36]
[15 35]
[16 34]
[21 32]
[22 31]
[23 30]
[24 29]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[51 165]
[52 164]
[55 163]
[56 162]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 99]
[74 98]
[75 97]
[76 96]
[78 94]
[79 93]
[81 91]
[82 90]
[83 89]
[100 144]
[101 143]
[103 141]
[104 140]
[107 137]
[108 136]
[109 135]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
