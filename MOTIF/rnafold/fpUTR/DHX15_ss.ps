%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCCUCGUCGCCGCCGCCAUUUUAGCUGUUGGUUCCGGCCGCACCGUGUGGGCUGUAGUAGCGGGAGGGGUGGGGGUCCUCCAGAGUUAAGUGGCUGUCCUCGACUGUGCCCAUACAGCAGCCAGCUUUCUUCCUUAAUAACUGCCCGUUCGAAGAGUGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[12.19261360 114.86265564]
[-2.72905469 116.39360046]
[-17.65072441 117.92454529]
[-32.57239151 119.45549774]
[-45.51080704 128.56088257]
[-58.96130753 122.16297150]
[-73.88298035 123.69391632]
[-88.80464935 125.22486877]
[-103.72631836 126.75581360]
[-118.64798737 128.28675842]
[-126.90451813 132.28993225]
[-133.86087036 129.70483398]
[-148.80841064 130.95814514]
[-163.75596619 132.21145630]
[-178.70352173 133.46478271]
[-191.80894470 142.32807922]
[-205.13819885 135.68125916]
[-220.08573914 136.93457031]
[-229.84439087 157.43386841]
[-257.86630249 162.29078674]
[-270.94863892 169.62922668]
[-284.03094482 176.96766663]
[-297.11328125 184.30610657]
[-297.22338867 199.66461182]
[-305.01181030 212.90228271]
[-318.38354492 220.45825195]
[-333.74160767 220.30000305]
[-346.95480347 212.47010803]
[-354.46884155 199.07478333]
[-354.26245117 183.71726990]
[-346.39117432 170.52868652]
[-332.97235107 163.05668640]
[-317.61557007 163.31121826]
[-304.45172119 171.22378540]
[-291.36938477 163.88534546]
[-278.28707886 156.54690552]
[-265.20474243 149.20846558]
[-266.10876465 141.76315308]
[-267.91680908 126.87251282]
[-268.82083130 119.42720032]
[-283.27923584 115.43280792]
[-297.73760986 111.43841553]
[-312.19598389 107.44402313]
[-326.65435791 103.44963074]
[-335.80108643 104.17987061]
[-341.34307861 99.24427795]
[-355.72470093 94.98181915]
[-370.10635376 90.71936035]
[-387.01068115 92.01553345]
[-392.93576050 76.13065338]
[-379.31192017 66.03973389]
[-365.84387207 76.33772278]
[-351.46224976 80.60018158]
[-337.08062744 84.86264038]
[-322.65997314 88.99124146]
[-308.20159912 92.98563385]
[-293.74322510 96.98002625]
[-279.28482056 100.97441864]
[-264.82644653 104.96881104]
[-244.53352356 100.53137207]
[-228.20083618 108.23477173]
[-221.33906555 121.98703003]
[-206.39151001 120.73371124]
[-194.35522461 111.96004486]
[-179.95683289 118.51722717]
[-165.00927734 117.26391602]
[-150.06173706 116.01059723]
[-135.11418152 114.75727844]
[-120.17893219 113.36508942]
[-105.25726318 111.83414459]
[-90.33559418 110.30319977]
[-75.41392517 108.77224731]
[-60.49225616 107.24130249]
[-48.62113953 98.24542236]
[-34.10334015 104.53382874]
[-19.18167114 103.00287628]
[-4.26000214 101.47193146]
[10.66166687 99.94098663]
[16.40618706 91.43071747]
[26.09809494 87.42335510]
[36.60733795 89.47581482]
[44.39312363 97.14393616]
[59.36138916 96.16868591]
[74.32965088 95.19343567]
[89.29791260 94.21818542]
[75.69446564 87.89788055]
[63.09050751 79.76522064]
[55.91724777 66.59159851]
[55.92509079 51.59159851]
[63.11211777 38.42548370]
[75.72457886 30.30600357]
[90.68480682 29.21445465]
[104.34226227 35.41719055]
[113.36428833 47.40064240]
[115.54914856 62.24265671]
[108.06456757 75.24192810]
[120.86508942 67.42229462]
[133.66560364 59.60264969]
[146.46612549 51.78301239]
[159.26663208 43.96337128]
[172.06715393 36.14373398]
[157.53849792 32.41305923]
[148.68014526 20.30811691]
[149.51895142 5.33158779]
[159.67359924 -5.70847416]
[174.52798462 -7.79346228]
[187.32957458 0.02442034]
[192.25900269 14.19130993]
[187.07608032 28.26644325]
[200.78303528 22.17388535]
[214.48999023 16.08132744]
[228.19696045 9.98877048]
[241.90391541 3.89621282]
[251.10850525 -9.67609310]
[267.44299316 -8.22112465]
[274.10385132 6.76437283]
[264.23895264 19.86460304]
[247.99647522 17.60317230]
[234.28952026 23.69573021]
[220.58255005 29.78828812]
[206.87559509 35.88084412]
[193.16864014 41.97340393]
[179.88679504 48.94424820]
[167.08627319 56.76388931]
[154.28576660 64.58352661]
[141.48524475 72.40316772]
[128.68472290 80.22280884]
[115.88420868 88.04244995]
[114.49201965 102.97769928]
[125.62674713 113.02846527]
[141.05520630 116.53177643]
[145.31846619 130.80320740]
[156.45318604 140.85397339]
[167.58792114 150.90473938]
[178.72264099 160.95550537]
[189.85736084 171.00627136]
[200.99209595 181.05703735]
[211.85562134 179.87294006]
[221.37139893 184.78280640]
[226.48681641 193.93838501]
[225.71276855 204.17678833]
[236.46621704 214.63449097]
[247.21965027 225.09219360]
[262.48684692 222.31875610]
[276.45385742 229.07914734]
[283.75000000 242.77388000]
[281.56982422 258.13702393]
[270.75164795 269.26116943]
[255.45524597 271.86880493]
[241.56242371 264.95730591]
[234.41525269 251.18423462]
[236.76194763 235.84562683]
[226.00851440 225.38793945]
[215.25506592 214.93023682]
[196.22872925 211.61694336]
[190.94132996 192.19175720]
[179.80659485 182.14099121]
[168.67187500 172.09022522]
[157.53715515 162.03945923]
[146.40242004 151.98869324]
[135.26770020 141.93792725]
[120.63566589 139.15353394]
[115.57598114 124.16319275]
[104.44125366 114.11242676]
[90.27316284 109.18644714]
[75.30490112 110.16169739]
[60.33663940 111.13694763]
[45.36837387 112.11219788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[12 68]
[13 67]
[14 66]
[15 65]
[17 63]
[18 62]
[20 37]
[21 36]
[22 35]
[23 34]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[82 168]
[83 167]
[84 166]
[85 165]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[129 164]
[130 163]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
