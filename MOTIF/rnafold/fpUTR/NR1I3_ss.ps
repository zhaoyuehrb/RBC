%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAACAGACAUCUCUUGUUUUCCAGAUACUACGGGUCAUAAUCCCUAACUCCAAUCACUGGCAACUCCUGAGAUCAGAGGAAAACCAGCAACAGCGUGGGAGUUUGGGGAGAGGCAUUCCAUACCAGAUUCUGUGGCCUGCAGGUGACAUGCUGCCUAAGAGAAGCAGGAGUCUGUGACAGCCACCCCAACACGUGACGUC\
) } def
/len { sequence length } bind def

/coor [
[140.65405273 356.15774536]
[127.08743286 349.75878906]
[121.88513184 335.68981934]
[128.02497864 322.00396729]
[141.99249268 316.53509521]
[155.79203796 322.41302490]
[151.24473572 308.11889648]
[146.69744873 293.82476807]
[142.15016174 279.53063965]
[137.60287476 265.23651123]
[133.05557251 250.94238281]
[130.10301208 249.00543213]
[127.94420624 245.53945923]
[127.28876495 240.93418884]
[128.64491272 235.88203430]
[124.76262665 221.39314270]
[120.88034058 206.90426636]
[116.99805450 192.41537476]
[113.11576843 177.92648315]
[109.23348236 163.43759155]
[105.35119629 148.94871521]
[101.46891022 134.45982361]
[97.58662415 119.97093201]
[83.40134430 115.09469604]
[71.43108368 124.13421631]
[72.69878387 139.50939941]
[65.43262482 153.11845398]
[51.95120621 160.61878967]
[36.55640030 159.61705017]
[24.16063309 150.43290710]
[18.71934891 135.99697876]
[21.96884346 120.91571808]
[32.87221527 110.00151062]
[47.95023346 106.73702240]
[62.39156342 112.16395569]
[74.36182404 103.12443542]
[75.51567841 88.16887665]
[65.07366943 77.40019989]
[54.63166046 66.63152313]
[42.92961502 68.76624298]
[31.76520538 65.02288818]
[23.87755394 56.44195938]
[21.14265633 45.23539734]
[24.12808228 34.21714020]
[14.02264690 23.13200569]
[3.91721225 12.04687119]
[-6.18822241 0.96173739]
[-16.29365730 -10.12339592]
[-26.39909172 -21.20853043]
[-36.50452805 -32.29366302]
[-46.69501495 -43.30065918]
[-56.96995544 -54.22885895]
[-67.24489594 -65.15705872]
[-77.51983643 -76.08526611]
[-82.52918243 -77.59186554]
[-86.09960938 -80.57349396]
[-87.90997314 -84.23355103]
[-88.00248718 -87.76354980]
[-97.76176453 -99.15461731]
[-107.52103424 -110.54569244]
[-140.53240967 -110.80892944]
[-151.61753845 -120.91436768]
[-162.70266724 -131.01980591]
[-175.96130371 -127.24002075]
[-189.25044250 -130.48083496]
[-199.12297058 -139.79145813]
[-203.07250977 -152.66113281]
[-200.16931152 -165.69555664]
[-211.09750366 -175.97048950]
[-222.02571106 -186.24543762]
[-232.95391846 -196.52037048]
[-248.17219543 -193.48995972]
[-262.25115967 -200.01396179]
[-269.77713013 -213.58375549]
[-267.85626221 -228.98147583]
[-257.22711182 -240.28639221]
[-241.97685242 -243.15153503]
[-227.96949768 -236.47518921]
[-220.59117126 -222.82455444]
[-222.67897034 -207.44857788]
[-211.75076294 -197.17362976]
[-200.82257080 -186.89869690]
[-189.89436340 -176.62374878]
[-173.87670898 -180.20541382]
[-158.72785950 -173.46830750]
[-150.49627686 -158.88563538]
[-152.59724426 -142.10493469]
[-141.51210022 -131.99949646]
[-130.42697144 -121.89406586]
[-117.61328888 -129.69210815]
[-121.49557495 -144.18099976]
[-133.46781921 -155.38803101]
[-129.48533630 -171.29626465]
[-113.64498138 -175.54067993]
[-102.24193573 -163.75497437]
[-107.00669098 -148.06329346]
[-103.12440491 -133.57440186]
[-96.12996674 -120.30496979]
[-86.37068939 -108.91389465]
[-76.61141205 -97.52281952]
[-66.59163666 -86.36020660]
[-56.31669617 -75.43199921]
[-46.04175568 -64.50379944]
[-35.76681519 -53.57559967]
[-28.89085960 -50.85433960]
[-25.41939163 -42.39909744]
[-15.31395817 -31.31396484]
[-5.20852327 -20.22883034]
[4.89691162 -9.14369678]
[15.00234604 1.94143653]
[25.10778046 13.02657032]
[35.21321487 24.11170387]
[53.51350021 23.85117340]
[66.41801453 37.27617645]
[65.40033722 56.18951416]
[75.84234619 66.95819092]
[86.28435516 77.72686768]
[77.31764221 65.70197296]
[73.21832275 51.27299118]
[74.52333069 36.32986832]
[81.06173706 22.82989693]
[91.97712708 12.54134178]
[105.83975983 6.81182575]
[120.83387756 6.39181852]
[134.99551392 11.33633232]
[146.46972656 20.99772263]
[153.75358582 34.11051178]
[155.89305115 48.95714951]
[152.60787964 63.59298325]
[144.32836914 76.10097504]
[132.13900757 84.84278107]
[117.63858795 88.67321014]
[132.42388916 86.14435577]
[147.20918274 83.61549377]
[156.34622192 70.99994659]
[171.37663269 68.64594269]
[183.34733582 77.43447113]
[198.13261414 74.90560913]
[212.91790771 72.37675476]
[220.99633789 62.31713104]
[233.36708069 60.51772690]
[243.31669617 67.40368652]
[258.13919067 65.10281372]
[272.96166992 62.80193710]
[280.90151978 49.33001328]
[295.66055298 44.16232300]
[310.26998901 49.73889542]
[317.83172607 63.42663574]
[314.77529907 78.76261902]
[302.54391479 88.50566101]
[286.91281128 88.05538940]
[275.26254272 77.62442017]
[260.44006348 79.92529297]
[245.61756897 82.22616577]
[232.56172180 93.94916534]
[215.44677734 87.16204071]
[200.66148376 89.69090271]
[185.87619019 92.21976471]
[177.50688171 104.48721313]
[162.54852295 107.26245880]
[149.73803711 98.40078735]
[134.95274353 100.92964935]
[120.16744995 103.45850372]
[112.07550812 116.08864594]
[115.95779419 130.57752991]
[119.84008026 145.06642151]
[123.72236633 159.55531311]
[127.60465240 174.04420471]
[131.48693848 188.53308105]
[135.36923218 203.02197266]
[139.25151062 217.51086426]
[143.13380432 231.99974060]
[147.34971619 246.39509583]
[151.89700317 260.68923950]
[156.44429016 274.98336792]
[160.99157715 289.27749634]
[165.53886414 303.57162476]
[170.08616638 317.86575317]
[175.28875732 331.93460083]
[181.13554382 345.74819946]
[186.98233032 359.56176758]
[199.96775818 363.15109253]
[208.39067078 373.41525269]
[209.34803772 386.46328735]
[202.71372986 397.51312256]
[208.34710693 411.41510010]
[213.98048401 425.31707764]
[229.07235718 428.92471313]
[239.13583374 440.73596191]
[240.30128479 456.20922852]
[232.12059021 469.39465332]
[217.73939514 475.22222900]
[202.68753052 471.45111084]
[192.75279236 459.53134155]
[191.75524902 444.04638672]
[200.07849121 430.95046997]
[194.44512939 417.04846191]
[188.81175232 403.14648438]
[173.05995178 397.26135254]
[166.30276489 381.49536133]
[173.16874695 365.40856934]
[167.32196045 351.59500122]
[161.47517395 337.78140259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[15 172]
[16 171]
[17 170]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 36]
[25 35]
[37 117]
[38 116]
[39 115]
[44 112]
[45 111]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
[51 104]
[52 103]
[53 102]
[54 101]
[58 100]
[59 99]
[60 98]
[61 89]
[62 88]
[63 87]
[68 83]
[69 82]
[70 81]
[71 80]
[90 97]
[91 96]
[132 163]
[133 162]
[134 161]
[137 158]
[138 157]
[139 156]
[142 154]
[143 153]
[144 152]
[179 203]
[180 202]
[181 201]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
