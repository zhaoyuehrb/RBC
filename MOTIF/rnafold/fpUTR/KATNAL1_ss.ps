%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGCCGCGGCUGCCAUGGCAACACUACGCCGCCGCCGCCUUUUCACGCACGUCGCGAGCUAACGGACUCGGCGGCGGCGGCGGCGGCGGCCUGCGCCCCACCCGCACCCCAUCUGGACCGCAUCGCUGAAUGUGCCCGGACCUGCGCCUUCUGGGUCUCUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[332.79895020 163.82875061]
[318.28671265 160.03474426]
[303.77444458 156.24075317]
[289.26217651 152.44674683]
[274.71588135 148.78543091]
[260.13674927 145.25712585]
[245.55763245 141.72880554]
[230.97850037 138.20048523]
[216.39936829 134.67218018]
[201.82025146 131.14385986]
[187.63009644 135.67034912]
[176.03710938 124.90404510]
[161.45797729 121.37573242]
[146.87886047 117.84741974]
[132.29972839 114.31909943]
[117.72059631 110.79078674]
[103.14146423 107.26247406]
[102.94152069 114.29652405]
[99.94849396 121.27913666]
[94.23224640 127.36107635]
[81.87552643 135.86470032]
[69.51880646 144.36831665]
[69.25669861 159.88317871]
[59.89836502 172.26062012]
[45.04227448 176.74127197]
[30.40090179 171.60223389]
[21.60414886 158.81954956]
[22.03454971 143.30845642]
[31.52660370 131.03324890]
[46.43042755 126.71401978]
[61.01519012 132.01159668]
[73.37191010 123.50798035]
[85.72862244 115.00435638]
[85.18079376 100.01436615]
[72.23632050 92.43541718]
[59.29183960 84.85646820]
[46.34736252 77.27751923]
[33.40288162 69.69856262]
[20.45840645 62.11961365]
[7.51392746 54.54066467]
[-5.43055010 46.96171188]
[-18.37502861 39.38276291]
[-5.77826643 47.52656937]
[-0.08579318 61.40445709]
[-3.33548570 76.04821014]
[-14.36396980 86.21543884]
[-29.22310448 88.26632690]
[-42.59339142 81.46665955]
[-49.68833542 68.25069427]
[-47.96868896 53.35125732]
[-61.77388000 47.48468781]
[-77.12940216 52.13093185]
[-90.25364685 42.90414429]
[-91.07882690 26.88232613]
[-78.97193146 16.35604477]
[-63.22033310 19.40016365]
[-55.90731049 33.67949295]
[-42.10211563 39.54606247]
[-33.48600769 27.26752090]
[-43.69815826 16.28062057]
[-53.91030884 5.29371977]
[-64.22237396 -5.59946060]
[-74.63348389 -16.39801216]
[-89.97979736 -23.60405159]
[-87.30365753 -40.34545517]
[-70.47568512 -42.40837860]
[-63.83493042 -26.80912590]
[-53.42382050 -16.01057243]
[-46.49197769 -13.36795902]
[-42.92340851 -4.91843081]
[-32.71125793 6.06846905]
[-22.49910736 17.05536842]
[-10.79607773 26.43828392]
[2.14840031 34.01723480]
[15.09287834 41.59618759]
[28.03735542 49.17513657]
[40.98183441 56.75408554]
[53.92631149 64.33303833]
[66.87078857 71.91198730]
[79.81526947 79.49093628]
[92.75974274 87.06989288]
[106.66978455 92.68334198]
[121.24890900 96.21165466]
[135.82803345 99.73997498]
[150.40716553 103.26828766]
[164.98629761 106.79660034]
[179.56542969 110.32492065]
[194.79837036 106.05080414]
[205.34855652 116.56472778]
[219.92768860 120.09304810]
[234.50682068 123.62136078]
[249.08595276 127.14967346]
[263.66506958 130.67799377]
[278.24420166 134.20631409]
[287.35913086 133.18292236]
[293.05618286 137.93449402]
[307.56845093 141.72848511]
[322.08068848 145.52249146]
[336.59295654 149.31649780]
[351.47052002 151.22911072]
[366.47052002 151.22911072]
[381.47052002 151.22911072]
[396.47052002 151.22911072]
[409.85150146 136.28758240]
[429.60226440 135.94903564]
[443.06680298 149.98492432]
[458.04428101 149.16340637]
[473.02175903 148.34188843]
[487.99923706 147.52037048]
[492.94476318 137.99452209]
[501.34671021 131.44653320]
[511.63442993 129.01490784]
[521.92010498 131.07655334]
[530.34497070 137.19007874]
[535.41522217 146.18820190]
[550.41522217 146.18820190]
[565.41522217 146.18820190]
[580.41522217 146.18820190]
[595.41522217 146.18820190]
[605.09210205 137.62411499]
[617.60870361 137.95368958]
[626.24853516 146.45306396]
[641.24603271 146.72702026]
[656.24353027 147.00097656]
[671.24102783 147.27494812]
[686.23852539 147.54890442]
[697.44073486 136.40049744]
[713.24450684 136.52206421]
[724.27386475 147.84149170]
[723.98522949 163.64314270]
[712.54986572 174.55218506]
[696.75213623 174.09649658]
[685.96459961 162.54640198]
[670.96710205 162.27244568]
[655.96960449 161.99847412]
[640.97210693 161.72451782]
[625.97460938 161.45056152]
[611.12164307 170.76750183]
[595.41522217 161.18820190]
[580.41522217 161.18820190]
[565.41522217 161.18820190]
[550.41522217 161.18820190]
[535.41522217 161.18820190]
[522.73962402 175.94044495]
[502.99996948 176.68411255]
[488.82077026 162.49786377]
[473.84329224 163.31938171]
[458.86578369 164.14089966]
[443.88830566 164.96241760]
[439.31842041 174.22471619]
[431.24105835 180.79048157]
[421.08374023 183.41235352]
[410.67828369 181.54780579]
[401.93032837 175.46980286]
[396.47052002 166.22911072]
[381.47052002 166.22911072]
[366.47052002 166.22911072]
[351.47052002 166.22911072]
[364.14373779 174.25340271]
[372.85815430 186.46237183]
[376.32858276 201.05538940]
[374.04312134 215.88026428]
[366.33889771 228.75056458]
[354.35214233 237.76818848]
[339.85064697 241.60314941]
[324.97317505 239.68989563]
[311.91384888 232.31057739]
[302.59872437 220.55352783]
[298.40158081 206.15269470]
[299.94146729 191.23194885]
[306.99121094 177.99182129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[10 89]
[12 87]
[13 86]
[14 85]
[15 84]
[16 83]
[17 82]
[20 33]
[21 32]
[22 31]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[50 58]
[51 57]
[59 72]
[60 71]
[61 70]
[62 68]
[63 67]
[100 158]
[101 157]
[102 156]
[103 155]
[106 149]
[107 148]
[108 147]
[109 146]
[115 143]
[116 142]
[117 141]
[118 140]
[119 139]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
