%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAUCUGCAAAAGCGCAAGGAGACCAGCCCACAUUUUAGCCCCUCCUACUCAGGAUAAGACUUUCUCUAAGUCCGGAGCUGAAAAAGGAUCCUGACUGAAAGCUAGAGGCAUUGAGGAGCCUGAAGAUUCUCAGGUUUUAAAGACGCUAGAGUGCCAAAGAAGACUUUGAAGUGUGAAAACAUUUCCUGUAAUUGAAACCAAA\
) } def
/len { sequence length } bind def

/coor [
[147.91757202 530.66949463]
[132.92376709 530.23852539]
[118.49383545 526.14251709]
[105.50962830 518.63183594]
[94.76461029 508.16546631]
[86.91544342 495.38305664]
[82.44180298 481.06570435]
[81.61686707 466.09130859]
[75.61349487 479.83755493]
[69.61012268 493.58383179]
[75.61135101 508.20437622]
[69.43955994 522.75378418]
[54.75636673 528.60009766]
[40.27304840 522.27484131]
[34.58229828 507.53063965]
[41.06034088 493.11499023]
[55.86386490 487.58044434]
[61.86723709 473.83419800]
[67.87061310 460.08795166]
[71.38340759 445.50506592]
[72.29786682 430.53295898]
[73.21233368 415.56085205]
[74.12679291 400.58877563]
[75.04125214 385.61666870]
[75.95571136 370.64456177]
[62.49979401 364.17404175]
[52.51928329 353.01452637]
[47.55826569 338.84579468]
[48.40211105 323.81665039]
[54.95332336 310.21902466]
[66.24165344 300.13851929]
[80.56768036 295.13446045]
[81.48213959 280.16235352]
[82.39660645 265.19024658]
[83.31106567 250.21815491]
[84.22552490 235.24606323]
[85.13998413 220.27395630]
[86.05444336 205.30186462]
[86.96890259 190.32975769]
[87.88336182 175.35766602]
[88.79782104 160.38555908]
[74.03993988 155.65950012]
[60.93475723 147.38999939]
[50.31658173 136.10350037]
[42.86140060 122.51854706]
[39.04383087 107.50000000]
[24.04382896 107.50000000]
[9.04382896 107.50000000]
[-5.95617056 107.50000000]
[-19.87997437 116.16370392]
[-34.21540833 108.19957733]
[-34.21540833 91.80042267]
[-19.87997437 83.83629608]
[-5.95617056 92.50000000]
[9.04382896 92.50000000]
[24.04382896 92.50000000]
[39.04383087 92.50000000]
[42.54424286 78.30344391]
[49.30130005 65.33666229]
[58.93201065 54.33464050]
[50.33877945 42.04007339]
[42.85445404 36.79636002]
[41.70992661 29.49185181]
[33.30518341 17.06767082]
[24.90044022 4.64348888]
[16.49569702 -7.78069258]
[8.09095383 -20.20487404]
[4.11214352 -21.96575546]
[1.19598722 -24.63417435]
[-0.50257546 -27.76384163]
[-0.98973680 -30.90404129]
[-0.42026788 -33.65264893]
[-8.05195045 -46.56610870]
[-15.68363380 -59.47956848]
[-23.31531715 -72.39302826]
[-36.99757385 -80.33698273]
[-36.81192017 -95.23043060]
[-44.44360352 -108.14389038]
[-52.07528687 -121.05735016]
[-65.75753784 -129.00129700]
[-65.57188416 -143.89474487]
[-73.20356750 -156.80821228]
[-88.57061768 -160.50001526]
[-96.75490570 -174.02011108]
[-92.90084076 -189.34725952]
[-79.29497528 -197.38815308]
[-64.00942230 -193.37225342]
[-56.11283112 -179.68212891]
[-60.29011154 -164.43989563]
[-52.65842819 -151.52642822]
[-39.52204132 -144.50613403]
[-39.16182709 -128.68902588]
[-31.53014374 -115.77557373]
[-23.89846039 -102.86211395]
[-10.76207352 -95.84181213]
[-10.40185738 -80.02471161]
[-2.77017498 -67.11125183]
[4.86150789 -54.19779205]
[12.49319077 -41.28433228]
[20.51513481 -28.60961723]
[28.91987801 -16.18543625]
[37.32462311 -3.76125455]
[45.72936630 8.66292667]
[54.13410950 21.08710861]
[62.63334274 33.44684219]
[71.22657776 45.74140549]
[90.22021484 39.36782455]
[110.25455475 39.44631577]
[129.19767761 45.96852112]
[145.03376770 58.24039841]
[157.19586182 49.46067429]
[169.35795593 40.68095016]
[181.52003479 31.90122414]
[193.68212891 23.12150002]
[205.84422302 14.34177589]
[208.49427795 -1.00797772]
[220.95344543 -9.73861313]
[235.57075500 -7.11759043]
[247.73284912 -15.89731503]
[259.26425171 -25.49036598]
[270.11068726 -35.85158157]
[280.95712280 -46.21279526]
[291.80355835 -56.57400894]
[302.64999390 -66.93522644]
[313.49642944 -77.29644012]
[324.34289551 -87.65765381]
[324.45376587 -103.46155548]
[335.76574707 -114.49854279]
[351.56756592 -114.22057343]
[362.48434448 -102.79255676]
[362.03933716 -86.99452972]
[350.49652100 -76.19918823]
[334.70410156 -76.81121826]
[323.85766602 -66.44999695]
[313.01123047 -56.08878708]
[302.16479492 -45.72756958]
[291.31832886 -35.36635590]
[280.47189331 -25.00514221]
[269.62545776 -14.64392662]
[284.56475830 -15.99195576]
[297.91140747 -9.14596653]
[305.53213501 3.77395678]
[305.06695557 18.76674271]
[296.65994263 31.18938828]
[282.91458130 37.19481659]
[268.08758545 34.92325592]
[256.77059937 25.07816505]
[252.46830750 10.70839882]
[256.51257324 -3.73522425]
[244.35047913 5.04449987]
[242.23651123 19.74370956]
[230.02749634 28.82085037]
[214.62394714 26.50386620]
[202.46185303 35.28359222]
[190.29975891 44.06331635]
[178.13768005 52.84304047]
[165.97558594 61.62276459]
[153.81349182 70.40248871]
[158.29971313 80.68555450]
[160.84048462 91.61314392]
[161.35102844 102.82060242]
[159.81430054 113.93392944]
[156.28157043 124.58229065]
[150.87074280 134.41033936]
[143.76237488 143.09013367]
[135.19364929 150.33201599]
[125.45053101 155.89431763]
[114.85813141 159.59144592]
[103.76992035 161.30001831]
[102.85546112 176.27212524]
[101.94100189 191.24421692]
[101.02654266 206.21632385]
[100.11208344 221.18841553]
[99.19762421 236.16052246]
[98.28316498 251.13261414]
[97.36870575 266.10470581]
[96.45424652 281.07681274]
[95.53977966 296.04891968]
[109.15032196 302.75927734]
[119.12793732 314.13864136]
[123.97560883 328.43249512]
[122.98411560 343.45260620]
[116.33562469 356.91229248]
[105.07117462 366.77420044]
[90.92781067 371.55902100]
[90.01335144 386.53112793]
[89.09889221 401.50323486]
[88.18443298 416.47531128]
[87.26997375 431.44741821]
[86.35550690 446.41952515]
[93.91030884 433.46093750]
[104.41316223 422.75158691]
[117.22222137 414.94595337]
[131.55470276 410.52102661]
[146.53472900 409.74725342]
[161.24685669 412.67190552]
[174.79197693 419.11624146]
[186.34236145 428.68643188]
[195.19210815 440.79766846]
[200.80043030 454.70977783]
[202.82458496 469.57257080]
[201.14085388 484.47778320]
[195.85215759 498.51449585]
[187.28167725 510.82495117]
[175.95317078 520.65679932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 19]
[9 18]
[10 17]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[46 57]
[47 56]
[48 55]
[49 54]
[60 106]
[61 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[72 99]
[73 98]
[74 97]
[75 96]
[77 94]
[78 93]
[79 92]
[81 90]
[82 89]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 153]
[118 150]
[119 149]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
