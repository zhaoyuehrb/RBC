%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAGAUGAGCUGAUAGGGUUCCCAGGCUGCCUGGAGUUACAUAACCCAUUGUGCUUCCAGGACAGCUCACAAUCUUAGGAUUUGCCCUAACAAGCAAACUCAGAAAACUGCUGAGGAAGGCACGGGAGGGUGGCUGUGCGAGGUACUGCCGGGGCUGAGCUCUCAUGGAGGCUCUCUCUGUUCUCUGAAGUGCCUUUGGAGUUUAUGUCUGCAC\
) } def
/len { sequence length } bind def

/coor [
[118.77080536 216.42228699]
[108.69396210 204.74064636]
[106.55497742 189.46229553]
[113.03639984 175.46247864]
[126.07003021 167.20851135]
[126.07003021 152.20851135]
[126.07003021 137.20851135]
[126.07003021 122.20850372]
[104.73665619 131.49226379]
[84.19355011 124.84379578]
[74.07047272 107.68789673]
[59.07086563 107.79647827]
[44.07125854 107.90505219]
[32.01922607 120.58744049]
[14.86157703 120.62648773]
[3.21986580 108.48657990]
[-11.77659702 108.81229401]
[-26.77305984 109.13800812]
[-41.76952362 109.46372223]
[-56.76598740 109.78943634]
[-71.76245117 110.11515808]
[-86.74830627 110.76643372]
[-101.71648407 111.74296570]
[-116.68466187 112.71949768]
[-130.44396973 131.88235474]
[-153.61805725 134.55612183]
[-170.98339844 119.37638092]
[-185.73844910 122.07610321]
[-200.49349976 124.77581787]
[-215.24855042 127.47553253]
[-230.00360107 130.17524719]
[-244.73872375 132.98170471]
[-259.45315552 135.89474487]
[-274.16757202 138.80778503]
[-288.88198853 141.72082520]
[-303.59640503 144.63388062]
[-318.31082153 147.54692078]
[-333.02523804 150.45996094]
[-345.06008911 160.72998047]
[-359.04763794 155.61166382]
[-373.76205444 158.52470398]
[-388.47650146 161.43774414]
[-403.19091797 164.35078430]
[-409.57754517 178.49258423]
[-423.07342529 186.15031433]
[-438.48910522 184.37940979]
[-449.89697266 173.86082458]
[-452.91043091 158.63917542]
[-446.37075806 144.56748962]
[-432.79260254 137.05662537]
[-417.39703369 138.99464417]
[-406.10394287 149.63636780]
[-391.38952637 146.72332764]
[-376.67510986 143.81028748]
[-361.96069336 140.89724731]
[-350.97833252 130.83557129]
[-335.93829346 135.74554443]
[-321.22387695 132.83248901]
[-306.50946045 129.91944885]
[-291.79501343 127.00640869]
[-277.08059692 124.09336853]
[-262.36618042 121.18032837]
[-247.65176392 118.26728821]
[-241.70344543 113.88674164]
[-232.70330811 115.42020416]
[-217.94825745 112.72048187]
[-203.19320679 110.02076721]
[-188.43815613 107.32105255]
[-173.68310547 104.62133026]
[-172.29713440 97.73056793]
[-169.25074768 91.37193298]
[-164.72105408 85.94010162]
[-158.97761536 81.77513885]
[-152.36634827 79.14124298]
[-145.28878784 78.20999146]
[-138.17759705 79.04920959]
[-131.47023010 81.61812592]
[-125.58191681 85.76927185]
[-120.88004303 91.25685883]
[-117.66119385 97.75131989]
[-102.69301605 96.77478790]
[-87.72483826 95.79825592]
[-85.13876343 93.40770721]
[-81.26796722 92.14869690]
[-76.65583801 92.61070251]
[-72.08816528 95.11869049]
[-57.09170151 94.79297638]
[-42.09523773 94.46726227]
[-27.09877586 94.14154816]
[-12.10231304 93.81582642]
[2.89415026 93.49011230]
[10.41355896 83.02967834]
[22.76884270 78.74481964]
[35.52419662 82.41097260]
[43.96268082 92.90544891]
[58.96228790 92.79686737]
[73.96189117 92.68828583]
[80.67967224 78.58040619]
[94.79128265 69.79972076]
[112.40575409 70.01864624]
[127.96536255 80.23126221]
[128.18251038 65.23283386]
[128.39967346 50.23440933]
[128.61682129 35.23598099]
[128.83396912 20.23755264]
[116.88416290 10.15112877]
[114.26445007 -5.26545763]
[122.21179199 -18.73296547]
[136.97369385 -23.89245033]
[151.58003235 -18.30776024]
[159.13415527 -4.61581612]
[156.06921387 10.71846581]
[143.83239746 20.45470619]
[143.61524963 35.45313263]
[143.39810181 50.45156097]
[143.18093872 65.44998932]
[142.96379089 80.44841766]
[154.13031006 90.46384430]
[169.01689148 88.62262726]
[183.90345764 86.78141785]
[198.79002380 84.94020844]
[213.67658997 83.09899139]
[228.56315613 81.25778198]
[243.44973755 79.41657257]
[258.33630371 77.57536316]
[273.86535645 64.71733093]
[291.32443237 73.03402710]
[306.15145874 70.76261139]
[320.97848511 68.49119568]
[335.80551147 66.21977997]
[350.63253784 63.94836426]
[365.45956421 61.67694855]
[374.24102783 45.00675201]
[396.48239136 41.42058945]
[409.09585571 33.30267715]
[421.70932007 25.18476105]
[429.12646484 11.20990944]
[444.01617432 10.82825947]
[456.62963867 2.71034479]
[469.24310303 -5.40756989]
[481.85656738 -13.52548409]
[491.90341187 -27.18188477]
[507.80734253 -21.30814362]
[506.56582642 -4.39971638]
[489.97448730 -0.91202050]
[477.36102295 7.20589399]
[464.74755859 15.32380867]
[452.13409424 23.44172287]
[445.61914062 36.83592606]
[429.82723999 37.79822540]
[417.21377563 45.91613770]
[404.60031128 54.03405380]
[407.93811035 68.65797424]
[422.82467651 70.49918365]
[437.71124268 72.34039307]
[452.59780884 74.18161011]
[463.22726440 66.88081360]
[475.58593750 68.71797943]
[483.13122559 78.16928101]
[497.98956299 80.22581482]
[512.84790039 82.28234100]
[527.70629883 84.33887482]
[536.63134766 82.41608429]
[542.76422119 86.53423309]
[557.59124756 88.80564880]
[572.41827393 91.07706451]
[588.99035645 87.49893188]
[597.01623535 102.43283081]
[584.88775635 114.27919006]
[570.14685059 105.90409088]
[555.31982422 103.63267517]
[540.49279785 101.36125946]
[525.64971924 99.19722748]
[510.79138184 97.14070129]
[495.93304443 95.08416748]
[481.07467651 93.02764130]
[465.19439697 100.50095367]
[450.75662231 89.06817627]
[435.87005615 87.22696686]
[420.98345947 85.38574982]
[406.09689331 83.54454041]
[382.79785156 89.93384552]
[367.73098755 76.50397491]
[352.90396118 78.77539062]
[338.07693481 81.04680634]
[323.24990845 83.31822205]
[308.42288208 85.58963776]
[293.59585571 87.86105347]
[288.31674194 96.60357666]
[278.90017700 101.09362793]
[268.34912109 99.63201904]
[260.17752075 92.46192932]
[245.29093933 94.30313873]
[230.40437317 96.14435577]
[215.51780701 97.98556519]
[200.63124084 99.82677460]
[185.74465942 101.66798401]
[170.85809326 103.50920105]
[155.97152710 105.35041046]
[169.91844177 110.87159729]
[184.70835876 113.37327576]
[195.42144775 123.87230682]
[198.22108459 138.60871887]
[192.10464478 152.30505371]
[179.26258850 160.05627441]
[164.29397583 159.08648682]
[152.55943298 149.74299622]
[148.26141357 135.37223816]
[141.07003784 122.20850372]
[141.07003784 137.20851135]
[141.07003784 152.20851135]
[141.07003784 167.20851135]
[154.10366821 175.46247864]
[160.58508301 189.46229553]
[158.44610596 204.74064636]
[148.36926270 216.42228699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 212]
[6 211]
[7 210]
[8 209]
[11 97]
[12 96]
[13 95]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[22 82]
[23 81]
[24 80]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[40 55]
[41 54]
[42 53]
[43 52]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[118 199]
[119 198]
[120 197]
[121 196]
[122 195]
[123 194]
[124 193]
[125 192]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[134 152]
[135 151]
[136 150]
[138 148]
[139 147]
[140 146]
[141 145]
[153 181]
[154 180]
[155 179]
[156 178]
[159 176]
[160 175]
[161 174]
[162 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
