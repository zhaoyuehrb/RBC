%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUAACUUGUUUAACUAAGGGUGGCUCCUGUUGAGAGGUGACAGCGUGUUGGCAGCCCUCGCAGCCCUCGCUUGCUCUUGGUGCCUCCUCAGCCUCGGCGCCCACUCUGGCCGCACUUGAGGAGCCCUUCAGCCCGCUGCUGCACUGUGGGAGUCCCUUCCUGGG\
) } def
/len { sequence length } bind def

/coor [
[4.77098179 491.66644287]
[5.29224825 506.78540039]
[1.11403334 521.32495117]
[-7.35432482 533.86053467]
[-19.28318214 543.16418457]
[-33.50387192 548.32434082]
[-48.62319565 548.83551025]
[-63.15991592 544.64752197]
[-75.68987274 536.17077637]
[-84.98550415 524.23565674]
[-90.13613129 510.01153564]
[-90.63713074 494.89187622]
[-86.43943787 480.35797119]
[-77.95428467 467.83367920]
[-66.01296997 458.54605103]
[-51.78537750 453.40496826]
[-36.66538620 452.91409302]
[-32.51285172 438.50033569]
[-28.36031914 424.08657837]
[-24.47803307 409.59768677]
[-20.86735344 395.03872681]
[-17.25667191 380.47979736]
[-13.64599037 365.92083740]
[-15.09402847 358.64138794]
[-9.82928181 351.12469482]
[-5.94699669 336.63580322]
[-2.06471086 322.14691162]
[1.81757486 307.65802002]
[5.69986057 293.16912842]
[9.58214664 278.68023682]
[13.46443176 264.19134521]
[6.81054401 258.54602051]
[2.34837794 250.99649048]
[0.59391642 242.35966492]
[1.76833510 233.58106995]
[5.77056599 225.63125610]
[12.18531799 219.39860535]
[20.32600975 215.58996582]
[29.30819702 214.65061951]
[34.52626038 200.58747864]
[39.74432373 186.52433777]
[44.96238708 172.46119690]
[44.33849335 165.06539917]
[50.41173935 158.18540955]
[55.89185715 144.22230530]
[61.37197113 130.25920105]
[66.85208893 116.29609680]
[63.10543823 101.77154541]
[51.55489731 92.20154572]
[40.00435257 82.63153839]
[24.48071671 83.91780853]
[12.90315056 74.04792023]
[11.77256012 59.24057770]
[0.22201698 49.67057800]
[-11.32852650 40.10057449]
[-26.89155769 37.25406265]
[-31.75561905 23.17606163]
[-43.30616379 13.60605907]
[-59.55543900 11.39403534]
[-65.51313019 -3.88464189]
[-55.05046844 -16.51257896]
[-38.93054962 -13.49923801]
[-33.73616028 2.05551553]
[-22.18561745 11.62551785]
[-7.44875813 13.78751755]
[-1.75852430 28.55003166]
[9.79201889 38.12003326]
[21.34256363 47.69003677]
[36.10195160 46.04806137]
[47.95217133 55.58885956]
[49.57435608 71.08099365]
[61.12489700 80.65100098]
[72.67544556 90.22100067]
[83.31779480 78.32289886]
[97.82685089 74.40759277]
[111.22810364 78.77046204]
[122.03118134 68.36405182]
[132.83425903 57.95763397]
[130.83963013 42.68256760]
[138.13662720 29.31815910]
[151.74293518 22.88913536]
[166.35102844 25.67152786]
[177.15409851 15.26511192]
[181.18624878 7.02130699]
[188.25782776 4.76745892]
[199.25361633 -5.43513250]
[203.43919373 -13.60209942]
[210.55169678 -15.72332287]
[221.73632812 -25.71852112]
[232.92095947 -35.71372223]
[244.10559082 -45.70891953]
[255.29022217 -55.70411682]
[266.47485352 -65.69931793]
[277.65948486 -75.69451141]
[276.23739624 -91.03347778]
[284.02899170 -104.11569977]
[297.86618042 -110.03147125]
[312.36001587 -106.70481110]
[323.54464722 -116.70001221]
[334.72927856 -126.69520569]
[345.91390991 -136.69039917]
[342.69833374 -151.70890808]
[347.43807983 -166.31817627]
[358.85818481 -176.58836365]
[373.88668823 -179.75686646]
[388.48101807 -174.97134399]
[398.71536255 -163.51911926]
[401.83673096 -148.48074341]
[397.00549316 -133.90148926]
[385.52124023 -123.70308685]
[370.47317505 -120.62886810]
[355.90911865 -125.50577545]
[344.72448730 -115.51057434]
[333.53985596 -105.51537323]
[322.35522461 -95.52017975]
[324.03817749 -80.74501038]
[316.61032104 -67.65718842]
[302.73797607 -61.37932587]
[287.65469360 -64.50988007]
[276.47006226 -54.51468277]
[265.28543091 -44.51948547]
[254.10078430 -34.52428818]
[242.91615295 -24.52908707]
[231.73152161 -14.53388882]
[220.54689026 -4.53869057]
[209.45620728 5.56064558]
[198.46041870 15.76323700]
[187.56051636 26.06819153]
[176.75743103 36.47460556]
[178.99166870 51.17651749]
[172.05838013 64.53292084]
[158.43048096 71.32509613]
[143.24067688 68.76071167]
[132.43760681 79.16712952]
[121.63452148 89.57353973]
[124.84942627 100.19694519]
[122.95802307 111.51621246]
[116.02423096 121.12986755]
[105.21470642 126.85144043]
[92.61202240 127.20198822]
[80.81519318 121.77621460]
[75.33507538 135.73931885]
[69.85496521 149.70242310]
[64.37484741 163.66552734]
[59.02552414 177.67926025]
[53.80746078 191.74240112]
[48.58939743 205.80554199]
[43.37133408 219.86868286]
[53.98261642 238.88372803]
[47.26741791 259.30187988]
[27.95331955 268.07363892]
[24.07103348 282.56253052]
[20.18874741 297.05142212]
[16.30646324 311.54031372]
[12.42417622 326.02920532]
[8.54189110 340.51806641]
[4.65960503 355.00695801]
[0.91295809 369.53152466]
[-2.69772315 384.09045410]
[-6.30840397 398.64941406]
[-9.91908550 413.20837402]
[-8.44364834 419.72219849]
[-10.23824406 425.16973877]
[-13.94655991 428.23910522]
[-18.09909248 442.65286255]
[-22.25162506 457.06661987]
[-9.71032047 465.52658081]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 166]
[18 165]
[19 164]
[20 161]
[21 160]
[22 159]
[23 158]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[39 148]
[40 147]
[41 146]
[42 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 73]
[49 72]
[50 71]
[53 68]
[54 67]
[55 66]
[57 64]
[58 63]
[76 135]
[77 134]
[78 133]
[82 129]
[83 128]
[85 127]
[86 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[98 115]
[99 114]
[100 113]
[101 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
