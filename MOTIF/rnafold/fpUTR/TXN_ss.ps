%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCAGGCUCCAGGGGCGGGGCGUGGCCGGGGCGCAGCGACGGGCGCGGAGGUCCGGCCGGGCGCGCGCGCCCCCGCCACACGCACGCCGGGCGUGCCAGUUUAUAAAGGGAGAGAGCAAGCAGCGAGUCUUGAAGCUCUGUUUGGUGCUUUGGAUCCAUUUCCAUCGGUCCUUACAGCCGCUCGUCAGACUCCAGCAGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[47.48785400 108.30176544]
[32.48959732 108.53051758]
[18.80902100 116.47736359]
[5.96523714 108.93505859]
[-9.03301907 109.16380310]
[-24.03127480 109.39255524]
[-37.71184921 117.33940125]
[-50.55563354 109.79708862]
[-65.55388641 110.02584076]
[-80.55214691 110.25458527]
[-95.55039978 110.48333740]
[-99.20265198 112.84822083]
[-103.03234100 113.82696533]
[-106.58118439 113.53433228]
[-109.47544861 112.22232056]
[-111.46343231 110.24063873]
[-126.44773865 109.55460358]
[-141.43203735 108.86857605]
[-156.41635132 108.18254089]
[-166.45523071 116.28502655]
[-178.92393494 115.40281677]
[-187.17445374 106.55321503]
[-202.14654541 105.63875580]
[-217.13085938 104.95272827]
[-232.12387085 104.49528503]
[-247.11689758 104.03784180]
[-262.10992432 103.58039856]
[-277.10293579 103.12295532]
[-291.13265991 110.43580627]
[-303.61804199 102.31397247]
[-318.61108398 101.85652924]
[-333.60409546 101.39908600]
[-348.59710693 100.94164276]
[-363.59014893 100.48419952]
[-378.58316040 100.02675629]
[-393.57620239 99.56931305]
[-409.58761597 108.66043854]
[-424.14035034 98.85603333]
[-439.13861084 98.62728882]
[-454.13684082 98.39854431]
[-463.48535156 110.64237976]
[-478.08029175 114.98306274]
[-492.26483154 109.95685577]
[-500.66921997 97.68884277]
[-515.66748047 97.46009827]
[-530.66571045 97.23135376]
[-539.29803467 100.23046112]
[-545.89050293 96.88301086]
[-560.88354492 96.42556763]
[-575.87658691 95.96812439]
[-590.05810547 104.20317841]
[-604.14398193 95.80558014]
[-603.64385986 79.41405487]
[-589.07220459 71.89080811]
[-575.41912842 80.97510529]
[-560.42608643 81.43254852]
[-545.43304443 81.88999176]
[-530.43701172 82.23309326]
[-515.43872070 82.46184540]
[-500.44049072 82.69058990]
[-491.66586304 70.68458557]
[-477.33462524 66.09329224]
[-462.87887573 70.87705231]
[-453.90811157 83.40028381]
[-438.90985107 83.62903595]
[-423.91159058 83.85778046]
[-415.01089478 75.66240692]
[-402.51123047 75.73260498]
[-393.11874390 84.57629395]
[-378.12573242 85.03373718]
[-363.13269043 85.49118042]
[-348.13967896 85.94861603]
[-333.14666748 86.40605927]
[-318.15362549 86.86350250]
[-303.16061401 87.32094574]
[-290.20330811 79.97537994]
[-276.64550781 88.12993622]
[-261.65246582 88.58737183]
[-246.65945435 89.04481506]
[-231.66642761 89.50225830]
[-216.67341614 89.95970154]
[-212.64035034 87.39498901]
[-206.95262146 87.33927917]
[-201.23208618 90.66665649]
[-186.25999451 91.58111572]
[-171.00267029 82.91380310]
[-155.73031616 93.19824219]
[-140.74601746 93.88426971]
[-125.76171112 94.57029724]
[-110.77740479 95.25633240]
[-95.77915192 95.48507690]
[-80.78089142 95.25633240]
[-65.78263855 95.02758026]
[-50.78438187 94.79883575]
[-38.17658234 86.86834717]
[-24.26002312 94.39429474]
[-9.26176643 94.16555023]
[5.73648930 93.93679810]
[18.34428787 86.00630951]
[32.26084900 93.53225708]
[47.25910568 93.30351257]
[48.80893707 85.65007782]
[51.46315765 78.30622864]
[55.16449738 71.43038940]
[59.83310699 65.17090607]
[65.36826324 59.66281891]
[71.65056610 55.02495575]
[78.54446411 51.35737610]
[85.90124512 48.73919678]
[93.56217957 47.22690582]
[101.36201477 46.85313034]
[109.13245392 47.62593079]
[116.70587921 49.52863693]
[123.91889191 52.52019882]
[130.61589050 56.53607941]
[136.65238953 61.48964310]
[141.89814758 67.27401733]
[146.24002075 73.76441193]
[149.58430481 80.82080841]
[151.85888672 88.29096985]
[153.01466370 96.01374054]
[153.02671814 103.82251740]
[167.68612671 107.00083160]
[182.81239319 102.36330414]
[193.61125183 112.62167358]
[208.27066040 115.79999542]
[222.97682190 118.75438690]
[237.72634888 121.48417664]
[252.47586060 124.21395874]
[267.22537231 126.94374084]
[281.97491455 129.67352295]
[296.72442627 132.40330505]
[305.73632812 130.88763428]
[311.67730713 135.28881836]
[326.38348389 138.24322510]
[341.13299561 140.97300720]
[355.92242432 143.47753906]
[370.71185303 145.98208618]
[387.81658936 139.16719055]
[400.89096069 150.87054443]
[415.71688843 153.14926147]
[430.54278564 155.42796326]
[445.36868286 157.70668030]
[458.02764893 148.62985229]
[473.03076172 151.15197754]
[481.60610962 163.27629089]
[496.43200684 165.55500793]
[505.39349365 163.76519775]
[511.46594238 167.98316956]
[526.25537109 170.48770142]
[541.04479980 172.99224854]
[558.14953613 166.17735291]
[571.22393799 177.88070679]
[586.04980469 180.15942383]
[600.87573242 182.43812561]
[615.70166016 184.71684265]
[628.29510498 175.16799927]
[643.94049072 177.40361023]
[653.35565186 190.09732056]
[650.95471191 205.71817017]
[638.16217041 214.99861145]
[622.56756592 212.43269348]
[613.42291260 199.54275513]
[598.59704590 197.26403809]
[583.77111816 194.98532104]
[568.94519043 192.70661926]
[559.00689697 199.60710144]
[546.63439941 197.82730103]
[538.54028320 187.78167725]
[523.75085449 185.27714539]
[508.96139526 182.77259827]
[494.15328979 180.38090515]
[479.32739258 178.10220337]
[467.50689697 187.09170532]
[452.43884277 184.99197388]
[443.08996582 172.53257751]
[428.26406860 170.25387573]
[413.43817139 167.97515869]
[398.61227417 165.69645691]
[388.67395020 172.59692383]
[376.30145264 170.81713867]
[368.20730591 160.77151489]
[353.41787720 158.26696777]
[338.62844849 155.76243591]
[334.28240967 157.75122070]
[328.64053345 157.02818298]
[323.42907715 152.94938660]
[308.72290039 149.99499512]
[293.99462891 147.15283203]
[279.24511719 144.42304993]
[264.49560547 141.69325256]
[249.74607849 138.96347046]
[234.99656677 136.23368835]
[220.24703979 133.50390625]
[215.87118530 135.42617798]
[210.24099731 134.61718750]
[205.09233093 130.45939636]
[190.43292236 127.28108215]
[176.35519409 132.14595032]
[164.50781250 121.66024017]
[149.84840393 118.48192596]
[137.29304504 137.89028931]
[117.68767548 150.13572693]
[94.73855591 152.90333557]
[72.78408813 145.66989136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 101]
[2 100]
[4 98]
[5 97]
[6 96]
[8 94]
[9 93]
[10 92]
[11 91]
[16 90]
[17 89]
[18 88]
[19 87]
[22 85]
[23 84]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[38 66]
[39 65]
[40 64]
[44 60]
[45 59]
[46 58]
[48 57]
[49 56]
[50 55]
[122 201]
[123 200]
[125 198]
[126 197]
[127 194]
[128 193]
[129 192]
[130 191]
[131 190]
[132 189]
[134 188]
[135 187]
[136 184]
[137 183]
[138 182]
[140 179]
[141 178]
[142 177]
[143 176]
[146 173]
[147 172]
[149 171]
[150 170]
[151 169]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
