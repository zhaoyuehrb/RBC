%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GRK7)
} def

/sequence { (\
CGUUGUCUCACCCGGGAAGGGAAAGCAGCCAGCAGCCCUCCAGCCCUCUUGUGCUUUCCCUGGGAGUGCGCCCCGUGCUCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.043521377 ubox
1 62 0.036945149 ubox
1 70 0.013029662 ubox
1 75 0.010839045 ubox
2 11 0.046133903 ubox
2 13 0.043499030 ubox
2 61 0.010482227 ubox
2 69 0.014395863 ubox
2 71 0.010466881 ubox
2 74 0.011109730 ubox
2 78 0.009937560 ubox
2 83 0.418415829 ubox
3 10 0.042935650 ubox
3 15 0.014054042 ubox
3 16 0.003879539 ubox
3 17 0.011153793 ubox
3 18 0.023149263 ubox
3 63 0.010565087 ubox
3 68 0.013977254 ubox
3 70 0.008512231 ubox
3 77 0.009489862 ubox
3 82 0.416472207 ubox
4 10 0.029066969 ubox
4 14 0.017968834 ubox
4 15 0.004390915 ubox
4 16 0.009627725 ubox
4 17 0.053811311 ubox
4 18 0.023927146 ubox
4 19 0.004007955 ubox
4 62 0.011544260 ubox
4 63 0.006998783 ubox
4 70 0.012475451 ubox
4 75 0.003423403 ubox
4 81 0.382008760 ubox
5 9 0.032668479 ubox
5 11 0.033821998 ubox
5 13 0.019863234 ubox
5 67 0.009365171 ubox
5 69 0.017417009 ubox
5 71 0.006412587 ubox
5 74 0.004327050 ubox
5 78 0.005237460 ubox
5 80 0.243531000 ubox
5 83 0.063001077 ubox
6 10 0.030739612 ubox
6 15 0.057633109 ubox
6 16 0.041829266 ubox
6 17 0.877346910 ubox
6 63 0.005622632 ubox
6 65 0.014802325 ubox
6 68 0.016887615 ubox
6 70 0.006344876 ubox
6 77 0.004286890 ubox
6 82 0.051031836 ubox
7 14 0.061152205 ubox
7 15 0.053288736 ubox
7 16 0.938994171 ubox
7 62 0.006661103 ubox
7 63 0.013372491 ubox
7 64 0.017866430 ubox
7 66 0.063854960 ubox
7 82 0.015671946 ubox
8 14 0.047768750 ubox
8 15 0.937668690 ubox
8 16 0.023124340 ubox
8 17 0.060599302 ubox
8 62 0.012642958 ubox
8 63 0.019345362 ubox
8 65 0.064340779 ubox
8 81 0.014685063 ubox
9 14 0.931831228 ubox
9 15 0.039725946 ubox
9 16 0.063580271 ubox
9 62 0.020300015 ubox
9 64 0.061133559 ubox
9 68 0.011053960 ubox
9 77 0.076754542 ubox
10 61 0.014365272 ubox
10 67 0.015306481 ubox
10 76 0.076726651 ubox
11 63 0.119620763 ubox
11 64 0.178110071 ubox
11 66 0.015232869 ubox
11 75 0.073261297 ubox
12 62 0.119452253 ubox
12 63 0.243748533 ubox
12 64 0.022768022 ubox
13 19 0.003202719 ubox
13 62 0.244119430 ubox
13 63 0.025409526 ubox
13 75 0.029722992 ubox
14 60 0.026424858 ubox
14 61 0.142713913 ubox
14 72 0.013669276 ubox
14 73 0.037160913 ubox
14 74 0.040989494 ubox
14 80 0.005114507 ubox
14 84 0.033742298 ubox
15 59 0.026480361 ubox
15 60 0.089730269 ubox
15 61 0.020323397 ubox
15 71 0.013679967 ubox
15 72 0.037237944 ubox
15 73 0.040440183 ubox
15 74 0.007129140 ubox
15 79 0.005201541 ubox
15 83 0.033897190 ubox
15 84 0.026298628 ubox
16 58 0.026516590 ubox
16 59 0.063498314 ubox
16 60 0.010920546 ubox
16 71 0.037060222 ubox
16 72 0.038364058 ubox
16 73 0.006226265 ubox
16 78 0.005182230 ubox
16 83 0.026586874 ubox
17 57 0.026362889 ubox
18 39 0.007437304 ubox
18 47 0.003523262 ubox
18 56 0.024797362 ubox
18 61 0.959018000 ubox
19 38 0.008855978 ubox
19 46 0.003880031 ubox
19 55 0.022994869 ubox
19 59 0.007626555 ubox
19 60 0.995345399 ubox
19 61 0.003349031 ubox
20 37 0.008863904 ubox
20 41 0.007924591 ubox
20 45 0.003875667 ubox
20 54 0.022499047 ubox
20 58 0.008907506 ubox
20 59 0.997563762 ubox
21 36 0.008841023 ubox
21 40 0.008069226 ubox
21 44 0.003862734 ubox
21 57 0.006786887 ubox
21 58 0.999557248 ubox
22 39 0.008026480 ubox
22 56 0.005761520 ubox
22 57 0.999194566 ubox
23 50 0.020529012 ubox
23 55 0.004214635 ubox
23 56 0.998275223 ubox
24 49 0.021056527 ubox
24 50 0.004069371 ubox
24 55 0.999016218 ubox
25 33 0.009248043 ubox
25 36 0.008442438 ubox
25 48 0.021090737 ubox
25 49 0.003719167 ubox
25 52 0.006283875 ubox
25 54 0.999601136 ubox
26 32 0.009297017 ubox
26 35 0.008453080 ubox
26 51 0.008229269 ubox
26 53 0.999132108 ubox
27 47 0.024949352 ubox
27 49 0.039491438 ubox
27 50 0.011714376 ubox
27 52 0.937298531 ubox
27 55 0.006627535 ubox
28 36 0.040145844 ubox
28 44 0.037756319 ubox
28 46 0.028819846 ubox
28 48 0.056009929 ubox
28 49 0.019904798 ubox
28 52 0.310446357 ubox
28 54 0.007627611 ubox
29 35 0.040132201 ubox
29 43 0.037737048 ubox
29 51 0.527726352 ubox
29 53 0.007846165 ubox
30 51 0.231380172 ubox
31 39 0.026721635 ubox
31 47 0.392000808 ubox
31 49 0.552525943 ubox
31 50 0.224328404 ubox
32 38 0.026930731 ubox
32 44 0.149299391 ubox
32 46 0.401969643 ubox
32 48 0.569993413 ubox
32 49 0.190147876 ubox
32 52 0.036005576 ubox
33 43 0.150187039 ubox
33 51 0.044553778 ubox
34 47 0.225459836 ubox
34 49 0.014288572 ubox
34 50 0.043741631 ubox
35 44 0.958735914 ubox
35 46 0.194394548 ubox
35 48 0.014864243 ubox
35 49 0.022550019 ubox
36 43 0.960224569 ubox
41 51 0.023277493 ubox
42 49 0.010790773 ubox
42 50 0.022731754 ubox
42 55 0.009686595 ubox
43 48 0.011883866 ubox
43 49 0.019110911 ubox
43 52 0.006134162 ubox
43 54 0.010846468 ubox
44 51 0.007560224 ubox
44 53 0.010848510 ubox
51 71 0.005356483 ubox
52 70 0.005380875 ubox
53 69 0.005411156 ubox
54 68 0.005409781 ubox
56 66 0.004471721 ubox
57 65 0.005376532 ubox
58 64 0.005392507 ubox
59 63 0.005354145 ubox
60 82 0.005004740 ubox
61 70 0.009092424 ubox
61 75 0.025295867 ubox
61 81 0.011677181 ubox
62 67 0.005968121 ubox
62 69 0.035440582 ubox
62 72 0.012072258 ubox
62 73 0.077411388 ubox
62 74 0.101196473 ubox
62 80 0.017131348 ubox
62 84 0.389167259 ubox
63 71 0.016021583 ubox
63 72 0.078471224 ubox
63 73 0.101093783 ubox
63 74 0.010966675 ubox
63 79 0.012964150 ubox
63 80 0.043648568 ubox
63 83 0.391677507 ubox
63 84 0.049881983 ubox
64 71 0.078950228 ubox
64 72 0.100770226 ubox
64 73 0.010980118 ubox
64 78 0.010381890 ubox
64 79 0.020246300 ubox
64 80 0.954577418 ubox
64 83 0.046760436 ubox
65 79 0.977518910 ubox
66 78 0.980470574 ubox
66 83 0.015803036 ubox
67 75 0.003444794 ubox
67 77 0.978476518 ubox
67 81 0.013705213 ubox
67 82 0.015294054 ubox
68 74 0.004175424 ubox
68 76 0.978434455 ubox
68 78 0.132606164 ubox
68 80 0.014593195 ubox
68 83 0.005010646 ubox
69 75 0.980353026 ubox
69 77 0.133057719 ubox
69 82 0.005032174 ubox
70 74 0.917129815 ubox
70 76 0.132754636 ubox
70 78 0.019533165 ubox
70 83 0.004278591 ubox
71 75 0.132004813 ubox
71 77 0.019520367 ubox
71 82 0.004296855 ubox
75 83 0.015674321 ubox
76 82 0.015590218 ubox
77 83 0.016671859 ubox
78 82 0.016607948 ubox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
64 80 0.9500000 lbox
65 79 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
70 74 0.9500000 lbox
showpage
end
%%EOF
