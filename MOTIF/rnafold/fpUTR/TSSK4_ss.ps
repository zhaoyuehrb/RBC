%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAGAACUGCUUCUCUUUCUUUCCCCCUCCAAGUUCCUAGUGGAGGGCUGAGUCCAGCAUCCCAGACUCGUGUGACUAUAUAGGCAAGCAUUUGGGGACCUACUUCACUUUGAUACCCUAGCCUUCAGCAGCUCAAGGUGUUGGCCUUUGGAUAGGAGGCUUCCAAGUAGUAAAGCUCCCUGCUCUCAGCAAGCCCAACACC\
) } def
/len { sequence length } bind def

/coor [
[215.29954529 230.53111267]
[205.99266052 228.72192383]
[197.93647766 223.61399841]
[192.26193237 215.87443542]
[189.78376770 206.54302979]
[190.88369751 196.89273071]
[178.54899597 188.35720825]
[163.68038940 187.47744751]
[156.73510742 173.26217651]
[144.40040588 164.72666931]
[132.06570435 156.19114685]
[119.73099518 147.65562439]
[107.39629364 139.12011719]
[119.70319366 147.69567871]
[127.63539124 160.42674255]
[129.90940857 175.25337219]
[126.15729523 189.77651978]
[116.98617554 201.64624023]
[103.87997437 208.94197083]
[88.95936584 210.48320007]
[74.63858032 206.02053833]
[63.23482132 196.27610779]
[56.59326935 182.82656860]
[55.78857422 167.84817505]
[60.95093536 153.76449585]
[71.24505615 142.85435486]
[85.00782776 136.88255310]
[71.22785187 142.80812073]
[57.44787598 148.73367310]
[43.66789627 154.65922546]
[29.88792038 160.58479309]
[16.10794258 166.51034546]
[2.32796645 172.43589783]
[-0.10590241 187.67007446]
[-10.40663815 199.15476990]
[-25.28731155 203.22528076]
[-39.99955750 198.58271790]
[-49.84874725 186.70851135]
[-51.69204330 171.39166260]
[-44.94125748 157.51972961]
[-31.75053787 149.51919556]
[-16.32899666 149.94300842]
[-3.59759116 158.65592957]
[10.18238544 152.73037720]
[23.96236229 146.80480957]
[37.74234009 140.87925720]
[51.52231598 134.95370483]
[65.30229187 129.02813721]
[79.08226776 123.10258484]
[67.97446442 111.19837189]
[63.79318619 94.07415009]
[49.52733612 89.43889618]
[35.26148987 84.80364227]
[20.99564171 80.16838837]
[6.72979403 75.53313446]
[-7.53605366 70.89787292]
[-18.89608955 81.23446655]
[-33.90587616 84.49052429]
[-48.52785492 79.79017639]
[-58.82878876 68.39778900]
[-62.03777695 53.37787247]
[-57.29161835 38.77069855]
[-45.86700821 28.50552559]
[-30.83710289 25.34363365]
[-16.24487686 30.13555527]
[-6.01556444 41.59228897]
[-2.90079880 56.63203049]
[11.36504936 61.26728439]
[25.63089752 65.90254211]
[39.89674377 70.53779602]
[54.16259384 75.17304993]
[68.42843628 79.80830383]
[74.66046906 75.63555908]
[64.36326599 64.72832489]
[54.06607056 53.82109451]
[41.11296082 46.25690079]
[37.64892578 31.66236687]
[45.82117844 19.08403969]
[60.56407166 16.31870842]
[72.73909760 25.08048820]
[74.79930878 39.93884277]
[80.96191406 53.61445236]
[87.12452698 67.29006195]
[93.35655212 63.11731339]
[94.50479126 48.16132736]
[95.65303040 33.20533752]
[96.80126953 18.24935150]
[85.44766235 28.05218697]
[70.45153046 28.39275169]
[58.66460800 19.11543846]
[55.47235489 4.45905733]
[62.33330154 -8.87988472]
[76.11268616 -14.80681801]
[90.51470184 -10.61372566]
[98.95858002 1.78172040]
[101.70153046 -12.96535492]
[104.44448090 -27.71242905]
[107.18743134 -42.45950317]
[109.93037415 -57.20658112]
[96.63156891 -64.41747284]
[86.21341705 -75.38639069]
[79.69657135 -89.03871155]
[77.71949005 -104.03692627]
[80.47587585 -118.91165161]
[87.69567871 -132.20562744]
[98.67156982 -142.61642456]
[112.32826233 -149.12413025]
[127.32778931 -151.09115601]
[142.20066833 -148.32479858]
[155.48980713 -141.09609985]
[165.89324951 -130.11322021]
[172.39178467 -116.45217896]
[174.34877014 -101.45133209]
[171.57244873 -86.58031464]
[164.33483887 -73.29602814]
[153.34500122 -62.89994431]
[139.67961121 -56.41055298]
[124.67745209 -54.46363068]
[121.93450165 -39.71655655]
[119.19155121 -24.96948051]
[116.44860077 -10.22240448]
[113.70565033 4.52467012]
[111.75725555 19.39759064]
[110.60901642 34.35357666]
[109.46077728 49.30956268]
[108.31253815 64.26554871]
[129.70669556 81.78299713]
[132.04415894 107.91179657]
[115.93180847 126.78540802]
[128.26651001 135.32092285]
[140.60122681 143.85644531]
[152.93592834 152.39196777]
[165.27062988 160.92747498]
[181.02148438 162.41777039]
[187.08450317 176.02250671]
[199.41921997 184.55802917]
[219.81301880 179.45170593]
[237.10369873 190.88638306]
[240.29624939 211.07147217]
[253.13069153 218.83531189]
[265.96511841 226.59916687]
[278.79956055 234.36302185]
[291.63397217 242.12686157]
[304.46841431 249.89071655]
[317.30285645 257.65457153]
[330.13726807 265.41842651]
[345.94985962 265.94097900]
[352.83493042 279.14874268]
[365.66934204 286.91259766]
[378.50378418 294.67645264]
[391.45568848 302.24270630]
[404.52200317 309.60961914]
[417.64440918 316.87615967]
[430.82208252 324.04196167]
[444.05429077 331.10659790]
[457.34024048 338.06961060]
[470.62619019 345.03262329]
[483.91213989 351.99563599]
[499.72702026 351.54852295]
[507.40826416 364.30972290]
[520.69421387 371.27273560]
[533.98016357 378.23574829]
[547.26611328 385.19876099]
[560.55206299 392.16177368]
[573.48529053 383.87765503]
[588.82861328 383.18603516]
[602.45471191 390.27297974]
[610.69830322 403.23211670]
[611.34179688 418.57751465]
[604.21215820 432.18133545]
[591.22723389 440.38424683]
[575.87988281 440.97964478]
[562.29852295 433.80743408]
[554.13635254 420.79687500]
[553.58905029 405.44772339]
[540.30310059 398.48471069]
[527.01715088 391.52169800]
[513.73120117 384.55868530]
[500.44525146 377.59564209]
[485.58065796 378.54080200]
[476.94909668 365.28158569]
[463.66314697 358.31857300]
[450.37722778 351.35556030]
[437.09127808 344.39251709]
[429.70397949 344.07180786]
[423.65628052 337.21966553]
[410.47860718 330.05386353]
[403.09710693 329.61996460]
[397.15512085 322.67593384]
[384.08877563 315.30905151]
[379.32525635 315.70809937]
[374.26123047 313.11569214]
[370.73992920 307.51089478]
[357.90548706 299.74703979]
[345.07107544 291.98318481]
[330.17651367 292.01593018]
[322.37341309 278.25283813]
[309.53900146 270.48901367]
[296.70455933 262.72515869]
[283.87011719 254.96130371]
[271.03570557 247.19744873]
[258.20126343 239.43359375]
[245.36683655 231.66975403]
[232.53240967 223.90589905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 136]
[7 135]
[9 133]
[10 132]
[11 131]
[12 130]
[13 129]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[84 126]
[85 125]
[86 124]
[87 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[139 204]
[140 203]
[141 202]
[142 201]
[143 200]
[144 199]
[145 198]
[146 197]
[148 195]
[149 194]
[150 193]
[151 190]
[152 189]
[153 187]
[154 186]
[155 184]
[156 183]
[157 182]
[158 181]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
