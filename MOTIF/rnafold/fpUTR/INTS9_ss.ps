%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAAGACAUGAUAUCAUGCUGGGGUGGAGAGGGAGGAUGCAUUGGCGGCUGGGAUGAAUUUGAGCUGACGGAAGGAGGCGUUCGGAGAGGAAAGGGAGGAAAAGGAAAGGCGACCACAGUUCCCAUGAUGCCUGGAGGGGAGACUACAUUUCCCAUUAUUCCCCUGGAAGGGACGUGAGGAUGAAAGACUGCAAGUCCCGCGAUGCUCUCGGCUGGCAGGUGGCGGAGAUUGCACCGGAAGACGCUUCCUGGG\
UUUGAGGAGUUCAGUGACUGCUAUUGAACCACCAAAAGUCCAUU\
) } def
/len { sequence length } bind def

/coor [
[-75.43357849 932.40716553]
[-74.60181427 941.84893799]
[-77.22402191 950.89727783]
[-82.90535736 958.33959961]
[-90.84397888 963.19415283]
[-99.94402313 964.83978271]
[-104.27950287 979.19958496]
[-103.76176453 988.26989746]
[-108.73628998 993.68658447]
[-113.22190094 1008.00018311]
[-117.70751953 1022.31378174]
[-122.19313049 1036.62744141]
[-118.08966064 1052.50488281]
[-129.97622681 1063.80273438]
[-145.62495422 1058.89868164]
[-148.93777466 1042.83764648]
[-136.50672913 1032.14184570]
[-132.02111816 1017.82818604]
[-127.53550720 1003.51458740]
[-123.04989624 989.20098877]
[-118.63928986 974.86407471]
[-114.30381775 960.50427246]
[-125.39853668 943.29107666]
[-120.00263214 923.22833252]
[-101.24188232 913.63226318]
[-97.51152802 899.10351562]
[-93.78118134 884.57476807]
[-90.05083466 870.04602051]
[-86.32048798 855.51727295]
[-82.59014130 840.98852539]
[-94.47529602 827.87567139]
[-96.08740234 810.09307861]
[-86.58764648 794.78826904]
[-69.64199066 788.22778320]
[-66.21672821 773.62408447]
[-70.84331512 759.46624756]
[-60.15916061 747.79754639]
[-56.73389816 733.19384766]
[-64.97637939 723.32629395]
[-66.06162262 710.31994629]
[-59.37229538 698.88739014]
[-47.14877319 693.29974365]
[-43.57077026 678.73272705]
[-48.04884720 664.52722168]
[-37.24308777 652.97100830]
[-33.66508484 638.40399170]
[-30.08708382 623.83697510]
[-26.50908089 609.26995850]
[-22.93107986 594.70294189]
[-19.35307693 580.13592529]
[-29.32212067 572.46075439]
[-35.68564606 561.55340576]
[-37.47428513 549.00573730]
[-34.38931656 536.66430664]
[-26.85188866 526.35888672]
[-15.94589520 519.63079834]
[-3.26222038 517.50292969]
[0.62006533 503.01400757]
[4.50235081 488.52514648]
[8.38463688 474.03625488]
[12.26692200 459.54736328]
[16.14920807 445.05847168]
[20.03149414 430.56958008]
[9.77516651 421.59066772]
[4.35259438 409.01232910]
[4.87068081 395.25860596]
[11.28545189 383.00677490]
[22.39956665 374.66622925]
[36.08541870 371.90469360]
[40.11921692 357.45724487]
[44.15301514 343.00982666]
[36.33097076 332.80572510]
[35.79132843 319.76538086]
[42.95353317 308.62295532]
[55.40032196 303.55209351]
[59.58518982 289.14767456]
[63.77005768 274.74325562]
[67.95492554 260.33886719]
[72.13978577 245.93446350]
[76.32465363 231.53005981]
[80.50952148 217.12565613]
[84.69438934 202.72123718]
[88.87925720 188.31683350]
[93.06412506 173.91242981]
[97.02221680 159.44407654]
[100.75256348 144.91532898]
[104.48291779 130.38658142]
[76.75857544 135.15223694]
[48.17903900 113.56130981]
[42.19481277 70.29422760]
[31.58820915 59.68762589]
[20.98160744 49.08102417]
[2.16455388 52.84787369]
[-14.95948792 44.52565002]
[-23.48768425 27.67247963]
[-20.10562706 9.24331665]
[-31.04015732 -1.02489007]
[-41.97468567 -11.29309654]
[-52.90921402 -21.56130409]
[-63.84374619 -31.82950974]
[-76.98069000 -27.10199356]
[-90.80792999 -28.47878075]
[-102.64167023 -35.63552475]
[-110.20961761 -47.13158417]
[-112.08726501 -60.69968796]
[-107.96569824 -73.69299316]
[-118.79209900 -84.07514191]
[-134.03952026 -81.19487000]
[-148.05349731 -87.85731506]
[-155.44537354 -101.50061798]
[-153.37281799 -116.87866211]
[-142.63278198 -128.07826233]
[-127.35501862 -130.79296875]
[-113.41414642 -123.97888947]
[-106.17070770 -110.25620270]
[-108.40995789 -94.90155029]
[-97.58354950 -84.51940155]
[-82.15750122 -89.40454865]
[-66.28440094 -85.80935669]
[-54.33140945 -74.62554932]
[-49.63624573 -58.84596252]
[-53.57553864 -42.76403809]
[-42.64101028 -32.49583435]
[-31.70648003 -22.22762680]
[-20.77194977 -11.95941925]
[-9.83742046 -1.69121289]
[0.45083463 -5.78995466]
[11.57661629 -5.77591419]
[21.94941521 -1.61312962]
[30.07227898 6.13855600]
[34.75781631 16.39849281]
[35.30168152 27.71578026]
[31.58820915 38.47442245]
[42.19481277 49.08102417]
[52.80141449 59.68762589]
[59.66888428 56.67301941]
[53.63987732 42.93798828]
[67.37500000 36.90919495]
[73.40382385 50.64380264]
[80.27129364 47.62919235]
[79.64315796 32.64235306]
[79.01502228 17.65550804]
[78.38688660 2.66866636]
[77.75875092 -12.31817627]
[77.13061523 -27.30501938]
[66.34215546 -39.17888641]
[69.04116821 -54.99327469]
[83.15720367 -62.61673737]
[97.86164093 -56.20121002]
[101.87450409 -40.66813278]
[92.11746216 -27.93315315]
[92.74559784 -12.94631100]
[93.37372589 2.04053164]
[94.00186157 17.02737427]
[94.62999725 32.01421738]
[95.25813293 47.00106049]
[102.64645386 48.29052734]
[105.22538757 33.51388550]
[114.84711456 22.00639153]
[120.00202942 36.09282303]
[117.42309570 50.86946487]
[124.81141663 52.15893173]
[130.47901917 38.27087402]
[136.14663696 24.38281441]
[141.81425476 10.49475574]
[135.45956421 -3.97567964]
[141.27603149 -18.67072296]
[155.81283569 -24.87206459]
[170.44557190 -18.90055847]
[176.49287415 -4.29899549]
[170.36698914 10.26977825]
[155.70230103 16.16236687]
[150.03469849 30.05042648]
[144.36708069 43.93848419]
[138.69947815 57.82654190]
[150.97172546 66.45162201]
[162.11889648 56.41466522]
[173.26606750 46.37770462]
[184.41323853 36.34074402]
[188.66905212 28.31411171]
[195.73008728 26.25779533]
[206.98175049 16.33811760]
[218.23341370 6.41844034]
[229.48509216 -3.50123763]
[225.30895996 -18.18193245]
[227.92459106 -33.21926117]
[236.81262207 -45.62755585]
[250.20832825 -52.94313431]
[265.45199585 -53.71348572]
[279.51696777 -47.78565979]
[289.61065674 -36.33662796]
[293.72891235 -21.63960075]
[291.05410767 -6.61268806]
[282.11727905 5.76050711]
[268.69287109 13.02327824]
[253.44628906 13.73359680]
[239.40476990 7.75042820]
[228.15309143 17.67010689]
[216.90142822 27.58978462]
[205.64976501 37.50946045]
[194.45019531 47.48791885]
[183.30302429 57.52487564]
[172.15585327 67.56183624]
[161.00868225 77.59879303]
[147.84481812 99.09387207]
[129.21343994 109.48767090]
[144.16082764 108.23249817]
[159.10821533 106.97733307]
[174.04165649 105.56570435]
[188.95947266 103.99777985]
[203.87730408 102.42985535]
[218.79513550 100.86192322]
[231.71093750 91.72450256]
[245.17726135 98.08905029]
[260.09509277 96.52112579]
[275.01290894 94.95320129]
[289.93075562 93.38526917]
[301.10375977 81.87253571]
[317.05642700 83.57322693]
[325.55120850 97.18272400]
[320.07162476 112.26097870]
[304.82116699 117.24125671]
[291.49865723 108.30310059]
[276.58084106 109.87102509]
[261.66302490 111.43895721]
[246.74519348 113.00688171]
[234.89640808 122.03215790]
[220.36306763 115.77975464]
[205.44523621 117.34767914]
[190.52740479 118.91561127]
[175.60957336 120.48353577]
[171.98689270 123.52817535]
[166.42625427 124.36045074]
[160.36338806 121.92472839]
[145.41600037 123.17989349]
[130.46859741 124.43505859]
[119.01166534 134.11692810]
[115.28131104 148.64567566]
[111.55096436 163.17442322]
[112.92603302 168.11080933]
[112.35752869 172.63945007]
[110.31686401 176.09677124]
[107.46852875 178.09730530]
[103.28366089 192.50170898]
[99.09879303 206.90611267]
[94.91392517 221.31051636]
[90.72905731 235.71492004]
[86.54419708 250.11932373]
[82.35932922 264.52374268]
[78.17446136 278.92813110]
[73.98959351 293.33255005]
[69.80472565 307.73693848]
[78.51119232 322.93634033]
[73.60451508 339.39859009]
[58.60045242 347.04360962]
[54.56665421 361.49105835]
[50.53285980 375.93847656]
[62.23325729 387.65371704]
[66.39143372 403.58325195]
[61.96078873 419.34146118]
[50.24591064 430.63934326]
[34.52038193 434.45187378]
[30.63809586 448.94076538]
[26.75580978 463.42965698]
[22.87352371 477.91851807]
[18.99123764 492.40740967]
[15.10895252 506.89630127]
[11.22666740 521.38519287]
[23.95805359 533.55810547]
[28.71755791 550.42443848]
[24.27323341 567.28405762]
[11.94489861 579.48657227]
[-4.78606319 583.71392822]
[-8.36406517 598.28094482]
[-11.94206715 612.84796143]
[-15.52006912 627.41497803]
[-19.09807014 641.98199463]
[-22.67607307 656.54901123]
[-18.45391846 671.79644775]
[-29.00375557 682.31072998]
[-32.58175659 696.87774658]
[-23.24644661 711.69921875]
[-27.45944977 728.35247803]
[-42.13021469 736.61914062]
[-45.55547714 751.22277832]
[-41.17388535 766.42517090]
[-51.61304092 777.04937744]
[-55.03830338 791.65301514]
[-45.73134995 799.91571045]
[-40.83120346 811.27758789]
[-41.20526886 823.57342529]
[-46.72208023 834.48791504]
[-56.28754425 841.99176025]
[-68.06139374 844.71887207]
[-71.79174042 859.24761963]
[-75.52208710 873.77636719]
[-79.25243378 888.30511475]
[-82.98278046 902.83386230]
[-86.71313477 917.36260986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 22]
[7 21]
[9 20]
[10 19]
[11 18]
[12 17]
[25 299]
[26 298]
[27 297]
[28 296]
[29 295]
[30 294]
[34 288]
[35 287]
[37 285]
[38 284]
[42 281]
[43 280]
[45 278]
[46 277]
[47 276]
[48 275]
[49 274]
[50 273]
[57 268]
[58 267]
[59 266]
[60 265]
[61 264]
[62 263]
[63 262]
[69 257]
[70 256]
[71 255]
[75 252]
[76 251]
[77 250]
[78 249]
[79 248]
[80 247]
[81 246]
[82 245]
[83 244]
[84 243]
[85 239]
[86 238]
[87 237]
[90 135]
[91 134]
[92 133]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[106 117]
[107 116]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[162 175]
[163 174]
[164 173]
[165 172]
[176 204]
[177 203]
[178 202]
[179 201]
[181 200]
[182 199]
[183 198]
[184 197]
[206 236]
[207 235]
[208 234]
[209 231]
[210 230]
[211 229]
[212 228]
[214 226]
[215 225]
[216 224]
[217 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
