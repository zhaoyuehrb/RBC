%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCGCGCGCCGACCGCGGCGCCAAUUGGCGAGCGGCUGGAGCGCGGGGUUUCAUGGGAAGGAGUUGGCCCGGCUUGUCUCUCUGUCAGUGGCGGCUGCUGCCUGCUCUGGAGGCAGGCUGGGCGGUGGCGGCCGAGACUGGCGGGGGUGGACGCCCGGGCCGGGCUGCGCCCGCUUCUUGCAGCUGUGAAUUCCUUUGGACAAUUGAUGAUAUUUAUCAUUGUGCCCAGUUUCUACAAAUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[68.55320740 177.41218567]
[77.26029968 165.09806824]
[88.75676727 155.33682251]
[102.31994629 148.74203491]
[99.31242371 134.04663086]
[96.30490875 119.35122681]
[81.73384094 115.78977203]
[72.28668213 127.44100189]
[62.83952713 139.09223938]
[53.39236832 150.74346924]
[50.71081161 166.33576965]
[36.68510437 171.34863281]
[27.23794556 182.99986267]
[17.79078865 194.65109253]
[15.10923386 210.24339294]
[1.08352518 215.25625610]
[-8.36363316 226.90748596]
[-17.81079102 238.55871582]
[-27.25794792 250.20994568]
[-26.69386482 263.07952881]
[-34.78165817 272.58605957]
[-46.78000259 273.99673462]
[-56.37340546 285.52786255]
[-65.96681213 297.05899048]
[-75.56021118 308.59008789]
[-77.80518341 324.83483887]
[-93.09590912 330.76153564]
[-105.70260620 320.27331543]
[-102.65657806 304.15951538]
[-87.09132385 298.99667358]
[-77.49792480 287.46557617]
[-67.90451813 275.93444824]
[-58.31111526 264.40335083]
[-56.25989914 246.96405029]
[-38.90917969 240.76278687]
[-29.46202278 229.11155701]
[-20.01486397 217.46032715]
[-10.56770706 205.80909729]
[-8.56187630 191.05017090]
[6.13955641 185.20393372]
[15.58671474 173.55270386]
[25.03387260 161.90147400]
[27.03970337 147.14254761]
[41.74113464 141.29631042]
[51.18829346 129.64508057]
[60.63545227 117.99384308]
[70.08261108 106.34261322]
[74.82572174 92.11226654]
[74.25810242 77.12300873]
[73.69048309 62.13375092]
[73.12285614 47.14449692]
[64.86888123 33.64699936]
[72.11901855 20.63605118]
[71.55139923 5.64679480]
[70.98377228 -9.34246159]
[70.41615295 -24.33171844]
[69.84853363 -39.32097626]
[69.28090668 -54.31023026]
[68.71328735 -69.29948425]
[56.24647522 -86.74845123]
[66.74056244 -104.53526306]
[65.60613251 -119.49230957]
[64.47170258 -134.44934082]
[63.33726883 -149.40638733]
[62.20283508 -164.36343384]
[61.06840515 -179.32046509]
[59.93397522 -194.27751160]
[46.34691620 -205.86003113]
[48.35385132 -225.81428528]
[45.34633255 -240.50967407]
[42.33881760 -255.20507812]
[39.33129883 -269.90048218]
[36.32378387 -284.59588623]
[33.31626511 -299.29129028]
[30.30874825 -313.98669434]
[20.00562859 -321.71908569]
[17.79266739 -334.00277710]
[24.31786537 -344.16998291]
[21.49599075 -358.90216064]
[18.67411804 -373.63433838]
[15.85224533 -388.36651611]
[13.03037262 -403.09869385]
[10.02285576 -417.79409790]
[6.83017397 -432.45037842]
[3.63749170 -447.10668945]
[0.44480959 -461.76296997]
[-2.74787259 -476.41925049]
[-5.94055462 -491.07553101]
[-9.13323689 -505.73184204]
[-12.32591915 -520.38812256]
[-15.51860142 -535.04443359]
[-18.71128273 -549.70068359]
[-22.18075180 -564.29394531]
[-25.92576218 -578.81890869]
[-29.67077255 -593.34387207]
[-40.60849762 -604.77526855]
[-36.29381180 -619.03125000]
[-40.03882217 -633.55621338]
[-43.78383255 -648.08117676]
[-47.52884293 -662.60620117]
[-51.27385330 -677.13116455]
[-55.01886368 -691.65612793]
[-58.76387787 -706.18109131]
[-62.50888824 -720.70605469]
[-66.25389862 -735.23107910]
[-69.99890900 -749.75604248]
[-73.83547211 -764.25708008]
[-77.76344299 -778.73364258]
[-83.01836395 -786.17413330]
[-81.64841461 -793.41766357]
[-85.39342499 -807.94262695]
[-89.13843536 -822.46765137]
[-101.00408936 -833.78741455]
[-96.87126160 -849.65728760]
[-80.99144745 -853.75158691]
[-69.70043945 -841.85852051]
[-74.61345673 -826.21264648]
[-70.86844635 -811.68768311]
[-67.12343597 -797.16265869]
[-63.28687286 -782.66162109]
[-59.35890579 -768.18505859]
[-54.58605957 -762.56671143]
[-55.47393417 -753.50103760]
[-51.72892380 -738.97607422]
[-47.98391342 -724.45111084]
[-44.23890305 -709.92608643]
[-40.49388885 -695.40112305]
[-36.74887848 -680.87615967]
[-33.00386810 -666.35119629]
[-29.25885773 -651.82623291]
[-25.51384735 -637.30120850]
[-21.76883507 -622.77624512]
[-11.09897804 -612.38378906]
[-15.14579773 -597.08892822]
[-11.40078735 -582.56390381]
[-7.65577602 -568.03894043]
[-4.84616375 -565.94744873]
[-2.89941120 -562.40234375]
[-2.48276281 -557.81909180]
[-4.05499506 -552.89337158]
[-0.86231285 -538.23706055]
[2.33036923 -523.58081055]
[5.52305126 -508.92449951]
[8.71573353 -494.26821899]
[11.90841579 -479.61193848]
[15.10109806 -464.95565796]
[18.29377937 -450.29934692]
[21.48646164 -435.64306641]
[24.67914391 -420.98678589]
[28.12162781 -417.70898438]
[29.55680084 -412.24237061]
[27.76255035 -405.92056274]
[30.58442307 -391.18838501]
[33.40629578 -376.45620728]
[36.22816849 -361.72402954]
[39.05004120 -346.99185181]
[51.22453308 -334.33807373]
[45.00415039 -316.99420166]
[48.01166916 -302.29879761]
[51.01918411 -287.60339355]
[54.02670288 -272.90798950]
[57.03421783 -258.21258545]
[60.04173660 -243.51719666]
[63.04925156 -228.82179260]
[76.40143585 -221.98666382]
[90.08142853 -228.13952637]
[103.76142120 -234.29240417]
[117.44141388 -240.44528198]
[129.40653992 -252.45661926]
[144.26074219 -244.28416443]
[140.51971436 -227.74810791]
[123.59428406 -226.76528931]
[109.91429138 -220.61241150]
[96.23429871 -214.45953369]
[82.55431366 -208.30667114]
[74.89101410 -195.41194153]
[76.02544403 -180.45489502]
[77.15987396 -165.49786377]
[78.29431152 -150.54081726]
[79.42874146 -135.58378601]
[80.56317139 -120.62673950]
[81.69760132 -105.66970062]
[89.24968719 -101.08327484]
[93.92802429 -93.42641449]
[94.58276367 -84.33968353]
[90.94247437 -75.83871460]
[83.70254517 -69.86711121]
[84.27016449 -54.87785339]
[84.83779144 -39.88859558]
[85.40541077 -24.89933968]
[85.97303009 -9.91008377]
[86.54065704 5.07917261]
[87.10827637 20.06842804]
[95.32165527 32.49379349]
[88.11211395 46.57687378]
[88.67973328 61.56612778]
[89.24736023 76.55538177]
[89.81497955 91.54463959]
[93.17722321 84.07475281]
[101.46325684 78.63693237]
[113.14473724 78.14784241]
[125.13049316 84.38078308]
[133.56098938 97.21005249]
[145.03135681 106.87600708]
[156.50172424 116.54196167]
[167.97209167 126.20791626]
[179.44245911 135.87387085]
[187.99839783 138.99966431]
[190.99555969 145.73486328]
[202.34306335 155.54475403]
[213.69056702 165.35466003]
[225.03807068 175.16456604]
[236.38557434 184.97447205]
[252.32214355 190.75909424]
[251.17526245 207.67420959]
[234.60371399 211.25471497]
[226.57566833 196.32197571]
[215.22816467 186.51206970]
[203.88066101 176.70216370]
[192.53315735 166.89225769]
[181.18566895 157.08236694]
[169.77650452 147.34423828]
[158.30613708 137.67828369]
[146.83576965 128.01232910]
[135.36540222 118.34637451]
[123.89503479 108.68041992]
[111.00031281 116.34371185]
[114.00782776 131.03910828]
[117.01534271 145.73451233]
[132.07884216 146.47065735]
[146.48577881 150.93058777]
[159.33052063 158.83396912]
[169.80563354 169.68397522]
[177.25265503 182.79856873]
[181.20346069 197.35336304]
[181.40966797 212.43342590]
[177.85835266 227.09082031]
[170.77273560 240.40414429]
[160.59823608 251.53654480]
[147.97441101 259.78820801]
[133.69482422 264.64044189]
[118.65708160 265.78820801]
[103.80648804 263.15936279]
[90.07656097 256.91918945]
[78.33037567 247.45991516]
[69.30629730 235.37617493]
[63.57159424 221.42755127]
[61.48675156 206.49087524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 229]
[5 228]
[6 227]
[7 47]
[8 46]
[9 45]
[10 44]
[12 42]
[13 41]
[14 40]
[16 38]
[17 37]
[18 36]
[19 35]
[22 33]
[23 32]
[24 31]
[25 30]
[48 198]
[49 197]
[50 196]
[51 195]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[61 182]
[62 181]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 136]
[94 135]
[95 134]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 121]
[108 120]
[110 119]
[111 118]
[112 117]
[165 175]
[166 174]
[167 173]
[168 172]
[203 226]
[204 225]
[205 224]
[206 223]
[207 222]
[209 221]
[210 220]
[211 219]
[212 218]
[213 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
