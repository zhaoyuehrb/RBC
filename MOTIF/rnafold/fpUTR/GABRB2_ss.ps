%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGGGAAGGGAAGAAGAGGACGAGGUGGCGCGGAGACCGCGGGAGAACACAGUGCCUCCGGAGGAAAUCUGCUCGGUCCCCGGCAGCCGCCGCUUCCCCUUUGAUGUUUUGGUACGCCGUGCGCAUGCGCCUCACAUUAGAAUUACUGCACUGGGCAGACUAAGUUGGAUCUCCUCUCUUCAGUGAAACCCUCAAUUCCAUCAAAAACUAAAGGG\
) } def
/len { sequence length } bind def

/coor [
[165.06115723 294.60202026]
[171.67425537 278.40371704]
[165.61254883 264.68307495]
[159.55084229 250.96244812]
[153.39086914 237.28565979]
[147.13296509 223.65338135]
[140.87506104 210.02111816]
[134.61715698 196.38885498]
[128.35925293 182.75659180]
[116.01772308 174.41778564]
[117.29217529 158.64797974]
[111.03427124 145.01571655]
[104.77636719 131.38345337]
[98.51846313 117.75119019]
[91.02323151 111.78763580]
[88.90604401 104.07944489]
[74.10969543 101.61611176]
[59.31334686 99.15277863]
[44.51699448 96.68944550]
[29.63354492 102.05540466]
[18.34970474 92.33305359]
[3.55335331 89.86972046]
[-11.24299717 87.40638733]
[-22.31321907 98.11882019]
[-37.39233017 100.23396301]
[-50.66847992 93.14821625]
[-57.14896011 79.76384735]
[-71.94531250 77.30051422]
[-86.74166107 74.83718109]
[-101.53800964 72.37384796]
[-116.33435822 69.91051483]
[-131.13070679 67.44718170]
[-145.94435120 65.09003448]
[-160.77452087 62.83920288]
[-175.62043762 60.69480133]
[-190.48136902 58.65693665]
[-205.20475769 64.44763947]
[-216.76286316 55.05297852]
[-231.62377930 53.01511383]
[-246.48471069 50.97724915]
[-261.34564209 48.93938065]
[-276.20657349 46.90151596]
[-285.12771606 48.83535004]
[-291.26544189 44.72635269]
[-306.09561157 42.47552109]
[-320.90057373 48.05442429]
[-332.32269287 38.49493408]
[-347.15286255 36.24410248]
[-361.98303223 33.99327087]
[-367.10339355 42.44115448]
[-374.50042725 48.94398117]
[-383.48083496 52.91581345]
[-393.20983887 54.00683594]
[-402.78900146 52.13409805]
[-411.33898926 47.48754120]
[-418.08035278 40.51090240]
[-422.40460205 31.85938263]
[-423.92910767 22.33813477]
[-438.55981445 19.03029633]
[-453.19055176 15.72245789]
[-468.68212891 21.10236359]
[-480.90838623 10.17301083]
[-477.29199219 -5.82242060]
[-461.55319214 -10.42920113]
[-449.88272095 1.09173000]
[-435.25198364 4.39956808]
[-420.62127686 7.70740604]
[-406.39349365 -6.79779816]
[-386.15109253 -9.75881100]
[-368.12036133 0.19837883]
[-359.73220825 19.16310883]
[-344.90203857 21.41394043]
[-330.07186890 23.66477013]
[-316.32766724 17.92487144]
[-303.84478760 27.64535713]
[-289.01461792 29.89618874]
[-274.16870117 32.04059219]
[-259.30776978 34.07845688]
[-244.44683838 36.11632156]
[-229.58592224 38.15418625]
[-214.72499084 40.19205475]
[-201.06454468 34.25558853]
[-188.44349670 43.79600906]
[-173.58258057 45.83387756]
[-166.53294373 43.62971115]
[-158.52368164 48.00904083]
[-143.69351196 50.25987244]
[-136.61299133 48.15705872]
[-128.66737366 52.65082932]
[-113.87102509 55.11416245]
[-99.07467651 57.57749557]
[-84.27832794 60.04082870]
[-69.48197937 62.50416183]
[-54.68562698 64.96749115]
[-44.21834946 54.40462875]
[-29.36260986 52.00234604]
[-15.78210926 58.88881302]
[-8.77966404 72.61003113]
[6.01668644 75.07336426]
[20.81303787 77.53669739]
[34.63815308 71.99454498]
[46.98032761 81.89309692]
[61.77667999 84.35643005]
[76.57302856 86.81976318]
[91.36937714 89.28309631]
[105.84425354 85.34887695]
[117.35794067 75.73455811]
[128.87162781 66.12024689]
[129.85092163 47.19592285]
[144.11116028 35.20743561]
[162.28778076 37.41713333]
[173.52093506 27.47649002]
[184.75407410 17.53584671]
[195.98722839 7.59520340]
[207.22038269 -2.34544039]
[218.45352173 -12.28608418]
[219.57093811 -27.82278633]
[231.10455322 -37.74399185]
[245.90953064 -36.58296585]
[257.14266968 -46.52360916]
[268.37582397 -56.46425247]
[279.46524048 -66.56501007]
[290.40859985 -76.82379913]
[301.35195923 -87.08258820]
[312.29531860 -97.34138489]
[321.90963745 -108.85507202]
[330.05212402 -121.45267487]
[330.33428955 -137.84939575]
[344.80465698 -145.56568909]
[358.57733154 -136.66368103]
[357.48416138 -120.30101013]
[342.64974976 -113.31018066]
[334.50723267 -100.71257019]
[345.81192017 -90.85231781]
[357.11557007 -80.99293518]
[368.49014282 -90.77142334]
[369.42919922 -106.54779053]
[381.30407715 -116.97671509]
[397.06964111 -115.87091827]
[407.37243652 -103.88642883]
[406.10000610 -88.13344574]
[394.00729370 -77.95793152]
[378.26861572 -79.39683533]
[366.89404297 -69.61834717]
[363.91647339 -54.91684723]
[353.39483643 -44.22597504]
[338.74270630 -41.01425934]
[324.71380615 -46.32369614]
[315.85964966 -58.43170929]
[315.05285645 -73.40999603]
[322.55410767 -86.39801788]
[311.61074829 -76.13922882]
[300.66738892 -65.88043976]
[289.72402954 -55.62164688]
[288.67703247 -50.96746826]
[284.69882202 -46.91950226]
[278.31646729 -45.23110580]
[267.08331299 -35.29046249]
[255.85017395 -25.34981728]
[255.20182800 -10.51353645]
[243.95143127 -0.27229002]
[228.39416504 -1.05293643]
[217.16102600 8.88770676]
[205.92787170 18.82835007]
[194.69471741 28.76899529]
[183.46157837 38.70963669]
[172.22842407 48.65028000]
[174.01788330 59.91109467]
[170.11129761 70.75054169]
[161.36955261 78.43901825]
[149.88604736 80.98144531]
[138.48593140 77.63393402]
[126.97225189 87.24824524]
[115.45856476 96.86255646]
[112.15072632 111.49328613]
[118.40863037 125.12554932]
[124.66653442 138.75781250]
[130.92443848 152.39007568]
[143.71357727 161.70396423]
[141.99151611 176.49868774]
[148.24942017 190.13095093]
[154.50732422 203.76321411]
[160.76522827 217.39547729]
[167.02313232 231.02775574]
[173.44357300 237.51657104]
[173.27146912 244.90074158]
[179.33317566 258.62136841]
[185.39488220 272.34201050]
[198.42842102 275.72515869]
[207.00993347 285.84811401]
[208.17878723 298.87213135]
[201.73150635 310.02441406]
[207.59577942 323.83056641]
[213.46005249 337.63674927]
[219.32431030 351.44293213]
[234.35932922 349.88104248]
[249.18644714 352.82183838]
[262.48721313 360.00381470]
[273.07897949 370.78833008]
[280.01989746 384.21649170]
[282.69277954 399.09420776]
[280.85998535 414.09863281]
[274.68444824 427.89553833]
[264.71533203 439.25808716]
[251.83908081 447.17599487]
[237.20060730 450.94519043]
[222.10159302 450.23046875]
[207.88459778 445.09542847]
[195.81381226 435.99667358]
[186.96253967 423.74325562]
[182.11785889 409.42471313]
[181.71054077 394.31427002]
[185.77679443 379.75552368]
[193.95506287 367.04302979]
[205.51814270 357.30718994]
[199.65386963 343.50100708]
[193.78961182 329.69485474]
[187.92533875 315.88867188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[11 178]
[12 177]
[13 176]
[14 175]
[16 105]
[17 104]
[18 103]
[19 102]
[21 100]
[22 99]
[23 98]
[27 94]
[28 93]
[29 92]
[30 91]
[31 90]
[32 89]
[33 87]
[34 86]
[35 84]
[36 83]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[44 76]
[45 75]
[47 73]
[48 72]
[49 71]
[58 67]
[59 66]
[60 65]
[106 174]
[107 173]
[108 172]
[111 167]
[112 166]
[113 165]
[114 164]
[115 163]
[116 162]
[119 159]
[120 158]
[121 157]
[122 154]
[123 153]
[124 152]
[125 151]
[126 133]
[127 132]
[135 144]
[136 143]
[192 218]
[193 217]
[194 216]
[195 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
