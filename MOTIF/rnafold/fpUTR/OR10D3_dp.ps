%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10D3)
} def

/sequence { (\
CAAGGCAUUCUUCCAUGUCCUCAGCCUCCUCUUUCCUUCCUAGGACUGGCUUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.031452721 ubox
1 48 0.006582705 ubox
2 9 0.006213739 ubox
2 12 0.050291797 ubox
2 16 0.031447691 ubox
2 47 0.006099395 ubox
2 52 0.022522664 ubox
3 8 0.006677054 ubox
3 11 0.056765948 ubox
3 12 0.016359238 ubox
3 21 0.729729549 ubox
3 27 0.085658278 ubox
3 51 0.023866657 ubox
3 52 0.023603276 ubox
4 10 0.057459245 ubox
4 11 0.018968983 ubox
4 13 0.008452015 ubox
4 14 0.044240498 ubox
4 19 0.612136720 ubox
4 20 0.768520757 ubox
4 21 0.013300702 ubox
4 22 0.016012243 ubox
4 26 0.090745516 ubox
4 50 0.023663125 ubox
4 51 0.026906909 ubox
4 53 0.005150615 ubox
4 54 0.016827590 ubox
5 9 0.037233704 ubox
5 10 0.018905371 ubox
5 12 0.006878709 ubox
5 13 0.044001916 ubox
5 18 0.624976539 ubox
5 19 0.764016388 ubox
5 20 0.013758960 ubox
5 21 0.006919265 ubox
5 25 0.090767430 ubox
5 50 0.027396541 ubox
5 52 0.003483767 ubox
5 53 0.016838505 ubox
6 17 0.978591977 ubox
6 24 0.090656456 ubox
6 48 0.017516033 ubox
6 49 0.022881934 ubox
7 16 0.974567756 ubox
7 18 0.129448012 ubox
7 47 0.017356960 ubox
8 15 0.912065917 ubox
8 17 0.129602603 ubox
9 45 0.003323547 ubox
10 44 0.003367002 ubox
11 43 0.003307396 ubox
13 48 0.003331734 ubox
13 49 0.093108151 ubox
14 48 0.095541774 ubox
15 47 0.093447984 ubox
16 23 0.024862944 ubox
17 22 0.026804684 ubox
17 46 0.098529294 ubox
18 45 0.098574839 ubox
19 44 0.098587498 ubox
20 43 0.098575779 ubox
20 49 0.018285676 ubox
21 42 0.096189499 ubox
21 49 0.065737052 ubox
22 48 0.107373942 ubox
23 30 0.009538203 ubox
23 32 0.008388279 ubox
23 37 0.011966048 ubox
23 38 0.008694857 ubox
23 41 0.080948194 ubox
23 47 0.107548115 ubox
23 51 0.915955173 ubox
23 52 0.042752683 ubox
24 29 0.010174031 ubox
24 31 0.008703929 ubox
24 36 0.012505987 ubox
24 37 0.007394881 ubox
24 40 0.080865311 ubox
24 46 0.107272929 ubox
24 50 0.980050442 ubox
24 51 0.009471190 ubox
25 44 0.069351127 ubox
25 49 0.980136618 ubox
26 43 0.069334712 ubox
26 44 0.005345703 ubox
26 48 0.976467311 ubox
26 49 0.014237003 ubox
27 42 0.064832819 ubox
27 43 0.004937471 ubox
27 44 0.004974127 ubox
27 45 0.650571483 ubox
27 48 0.017908918 ubox
27 49 0.003611465 ubox
28 43 0.005187463 ubox
28 44 0.683036577 ubox
28 48 0.009879281 ubox
28 49 0.064090482 ubox
29 43 0.682848541 ubox
29 44 0.027731938 ubox
29 48 0.066533108 ubox
29 49 0.026983125 ubox
30 42 0.643897143 ubox
30 43 0.015599215 ubox
30 44 0.132796251 ubox
30 45 0.447758133 ubox
30 48 0.016643881 ubox
30 49 0.071665534 ubox
31 43 0.145773121 ubox
31 44 0.466450247 ubox
31 48 0.109036492 ubox
31 49 0.029870220 ubox
32 42 0.144724626 ubox
32 43 0.465369368 ubox
32 44 0.004243955 ubox
32 45 0.019124947 ubox
32 48 0.030433271 ubox
32 49 0.004140901 ubox
33 42 0.461410345 ubox
33 43 0.008925754 ubox
33 44 0.009269353 ubox
33 45 0.042088981 ubox
33 48 0.005033544 ubox
34 42 0.012678509 ubox
34 43 0.008542161 ubox
34 44 0.013417786 ubox
34 45 0.512343251 ubox
35 43 0.013264558 ubox
35 44 0.525887435 ubox
35 49 0.004545862 ubox
36 43 0.526128683 ubox
36 44 0.005762398 ubox
36 48 0.004606560 ubox
37 42 0.512564099 ubox
37 43 0.005939581 ubox
37 45 0.003962244 ubox
38 42 0.010586980 ubox
38 44 0.004098351 ubox
38 45 0.010803693 ubox
39 43 0.004086372 ubox
39 44 0.011072461 ubox
43 54 0.006063987 ubox
44 53 0.006128640 ubox
45 52 0.005741215 ubox
48 54 0.010103412 ubox
49 53 0.010478236 ubox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
showpage
end
%%EOF
