%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCGGCUCUUCGCAGUUUCCUCUCCUUGUUUUGCUUUCGAUCUGGACUGUUCUCAGGCAAGCCGGGGAGUAACUUUUAGUUUUGCUCCUGCGAUUAUUCAACUGACGGGCUUUCAUUUCCAUUUCACAUACCCUAGCAACACUUAUACCUUGCGGAAUUGUAUUGGUAGCGUGAAAAAAGCACACUGAGAGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[50.17605209 413.81668091]
[47.99278641 420.81237793]
[43.55797195 426.56091309]
[37.46084976 430.37579346]
[30.48516273 431.82247925]
[25.64969635 446.02172852]
[20.81423187 460.22097778]
[15.97876740 474.42019653]
[19.69142723 490.39355469]
[7.53122425 501.39636230]
[-7.99246597 496.10986328]
[-10.91020203 479.97235107]
[1.77953196 469.58474731]
[6.61499691 455.38549805]
[11.45046234 441.18624878]
[16.28592682 426.98703003]
[9.55539513 405.56857300]
[27.10853577 390.40835571]
[30.82071495 375.87496948]
[26.47382355 361.62878418]
[37.38568878 350.17269897]
[41.09786987 335.63928223]
[44.81004715 321.10589600]
[48.52222443 306.57247925]
[52.23440552 292.03909302]
[55.94658279 277.50567627]
[59.65876389 262.97229004]
[51.86354065 250.33226013]
[55.42118454 235.54045105]
[68.73205566 227.44981384]
[72.44423676 212.91641235]
[76.15641022 198.38301086]
[74.67559052 195.17468262]
[74.68001556 191.08815002]
[76.56616211 186.83154297]
[80.39824677 183.26348877]
[84.78755951 168.92005920]
[89.17686462 154.57662964]
[93.56617737 140.23320007]
[97.95549011 125.88977814]
[79.26351929 109.83052826]
[83.62834930 88.63989258]
[75.42929077 76.07901764]
[60.22087860 72.71124268]
[52.08480453 59.85593033]
[55.38919067 45.37778854]
[47.19013596 32.81691742]
[38.99107742 20.25604820]
[30.79202080 7.69517708]
[18.34823608 4.28173780]
[11.77885437 -6.35576677]
[14.14371872 -18.22407341]
[6.14197969 -30.91155434]
[-1.85975957 -43.59903336]
[-9.86149883 -56.28651428]
[-17.96214294 -68.91107941]
[-26.16119957 -81.47194672]
[-34.36025620 -94.03282166]
[-42.55931473 -106.59368896]
[-59.74477005 -102.95468903]
[-76.97628784 -106.18276978]
[-91.62021637 -115.75704193]
[-101.44897461 -130.18879700]
[-104.97985077 -147.25289917]
[-101.69864655 -164.33087158]
[-92.13436890 -178.81274414]
[-100.91316986 -190.97549438]
[-109.78675842 -203.06927490]
[-118.75457764 -215.09333801]
[-127.72240448 -227.11740112]
[-136.69023132 -239.14147949]
[-145.65805054 -251.16554260]
[-154.62586975 -263.18960571]
[-163.59368896 -275.21368408]
[-172.56152344 -287.23773193]
[-187.94401550 -286.06195068]
[-201.50939941 -293.40930176]
[-208.92903137 -306.93530273]
[-207.83531189 -322.32385254]
[-198.57725525 -334.66448975]
[-184.10906982 -340.01940918]
[-169.04750061 -336.67987061]
[-158.19863892 -325.71145630]
[-155.02432251 -310.61419678]
[-160.53744507 -296.20556641]
[-151.56962585 -284.18148804]
[-142.60180664 -272.15744019]
[-133.63398743 -260.13336182]
[-124.66616058 -248.10929871]
[-115.69833374 -236.08523560]
[-106.73051453 -224.06117249]
[-97.76268768 -212.03709412]
[-91.23844147 -208.55197144]
[-88.75041962 -199.75430298]
[-79.97161865 -187.59153748]
[-68.00451660 -191.52433777]
[-55.39648056 -191.93345642]
[-43.16491318 -188.77581787]
[-32.29965591 -182.29655457]
[-23.68291473 -173.01000977]
[-18.01761436 -161.65895081]
[-15.77006912 -149.15515137]
[-17.13161278 -136.50610352]
[-22.00235748 -124.73393250]
[-29.99844360 -114.79274750]
[-21.79938698 -102.23187256]
[-13.60033035 -89.67100525]
[-5.40127325 -77.11013031]
[0.89248151 -73.22418213]
[2.82598233 -64.28825378]
[10.82772160 -51.60077286]
[18.82946014 -38.91329193]
[26.83119965 -26.22581291]
[42.77661133 -18.90528679]
[43.35289001 -0.50387937]
[51.55194855 12.05699158]
[59.75100327 24.61786270]
[67.95005798 37.17873383]
[82.53381348 39.98046494]
[91.02775574 52.60217667]
[87.99016571 67.87995911]
[96.18921661 80.44083405]
[110.15274811 80.54883575]
[121.91034698 90.31382751]
[125.11588287 106.60705566]
[140.10443115 107.19302368]
[155.09298706 107.77899170]
[170.08152771 108.36495972]
[185.07008362 108.95092773]
[200.05862427 109.53690338]
[216.14488220 100.58276367]
[230.61421204 110.50669861]
[245.61009216 110.85833740]
[260.60595703 111.20997620]
[275.60183716 111.56161499]
[285.05038452 99.39479065]
[299.68038940 95.17384338]
[313.82324219 100.31611633]
[322.12683105 112.65258026]
[337.12271118 113.00421906]
[352.11859131 113.35585785]
[367.11447144 113.70749664]
[378.49993896 103.07692719]
[393.70288086 103.64715576]
[403.76733398 114.56697083]
[418.76321411 114.91860962]
[426.68374634 101.75954437]
[440.13040161 94.33775330]
[455.48611450 94.64967346]
[468.62030029 102.61139679]
[475.99990845 116.08125305]
[475.63983154 131.43592834]
[467.63699341 144.54508972]
[454.14407349 151.88243103]
[438.79058838 151.47424316]
[425.70660400 143.43034363]
[418.41159058 129.91448975]
[403.41571045 129.56285095]
[392.85046387 139.99891663]
[377.63751221 139.85592651]
[366.76284790 128.70336914]
[351.76696777 128.35173035]
[336.77108765 128.00009155]
[321.77520752 127.64846039]
[312.90249634 139.58215332]
[298.53414917 144.05586243]
[284.11807251 139.15380859]
[275.25021362 126.55749512]
[260.25433350 126.20585632]
[245.25845337 125.85421753]
[230.26257324 125.50257874]
[221.29261780 133.62594604]
[208.79132080 133.45080566]
[199.47265625 124.52545166]
[184.48411560 123.93948364]
[169.49555969 123.35351562]
[154.50700378 122.76754761]
[139.51846313 122.18157196]
[124.52990723 121.59560394]
[112.29891968 130.27908325]
[107.90960693 144.62251282]
[103.52029419 158.96594238]
[99.13098145 173.30937195]
[94.74166870 187.65280151]
[90.68981171 202.09518433]
[86.97763062 216.62858582]
[83.26545715 231.16198730]
[91.06590271 244.64497375]
[87.09419250 259.33102417]
[74.19216156 266.68447876]
[70.47998047 281.21786499]
[66.76780701 295.75128174]
[63.05562592 310.28466797]
[59.34344864 324.81805420]
[55.63126755 339.35147095]
[51.91909027 353.88485718]
[56.00046158 369.17059326]
[45.35411453 379.58712769]
[41.64193726 394.12054443]
[46.83830643 399.57412720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[18 199]
[19 198]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[30 187]
[31 186]
[32 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[42 122]
[43 121]
[46 118]
[47 117]
[48 116]
[49 115]
[52 113]
[53 112]
[54 111]
[55 110]
[56 108]
[57 107]
[58 106]
[59 105]
[66 95]
[67 94]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[125 179]
[126 178]
[127 177]
[128 176]
[129 175]
[130 174]
[132 171]
[133 170]
[134 169]
[135 168]
[139 164]
[140 163]
[141 162]
[142 161]
[145 158]
[146 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
