%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RFT1)
} def

/sequence { (\
GACUAAACGGAGUGGCGGCGGCAUUUCCUGGUGUCUGAGCCUGGCGCGGAGGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.543281959 ubox
2 13 0.132572940 ubox
2 32 0.212700733 ubox
2 34 0.543858656 ubox
3 10 0.028724015 ubox
3 12 0.136110574 ubox
3 15 0.010691519 ubox
3 18 0.003731102 ubox
3 21 0.005352000 ubox
3 31 0.220003013 ubox
3 33 0.541813369 ubox
3 44 0.008879911 ubox
3 49 0.013992194 ubox
3 51 0.050775211 ubox
3 52 0.028412284 ubox
4 9 0.027082372 ubox
4 11 0.132053062 ubox
4 14 0.010733249 ubox
4 17 0.003364883 ubox
4 20 0.005242126 ubox
4 30 0.221986231 ubox
4 33 0.039161669 ubox
4 37 0.007668612 ubox
4 43 0.008911342 ubox
4 48 0.013810582 ubox
4 50 0.050155767 ubox
4 51 0.027660615 ubox
5 13 0.010215154 ubox
5 29 0.217641842 ubox
5 32 0.164834889 ubox
5 36 0.007748251 ubox
5 42 0.008679317 ubox
7 13 0.014810534 ubox
7 32 0.093956234 ubox
7 34 0.012029750 ubox
8 12 0.015145034 ubox
8 14 0.006693188 ubox
8 17 0.040053619 ubox
8 20 0.004774717 ubox
8 30 0.297218312 ubox
8 31 0.093552262 ubox
8 33 0.012584809 ubox
8 37 0.048644376 ubox
8 43 0.024110819 ubox
8 46 0.051707986 ubox
8 48 0.047508874 ubox
9 13 0.004321268 ubox
9 16 0.040698604 ubox
9 19 0.005177673 ubox
9 26 0.003427967 ubox
9 27 0.292916382 ubox
9 28 0.921538405 ubox
9 29 0.090639863 ubox
9 36 0.049203401 ubox
9 41 0.024161054 ubox
9 42 0.023712078 ubox
9 45 0.054939314 ubox
9 47 0.046627476 ubox
9 54 0.005062432 ubox
10 25 0.003671557 ubox
10 26 0.296146226 ubox
10 27 0.923836254 ubox
10 28 0.076045760 ubox
10 35 0.048480460 ubox
10 40 0.024196647 ubox
10 41 0.022643450 ubox
10 53 0.005552202 ubox
11 24 0.004071533 ubox
11 25 0.330978576 ubox
11 26 0.911028661 ubox
11 29 0.003983625 ubox
11 34 0.046017164 ubox
11 36 0.008407203 ubox
11 42 0.004627124 ubox
11 54 0.008590451 ubox
12 19 0.012675387 ubox
12 22 0.011415592 ubox
12 24 0.362183317 ubox
12 25 0.843132535 ubox
12 28 0.004081265 ubox
12 35 0.007550736 ubox
12 40 0.021680731 ubox
12 45 0.034578266 ubox
12 47 0.085614671 ubox
12 53 0.009374320 ubox
13 18 0.012561701 ubox
13 20 0.011151227 ubox
13 21 0.010516820 ubox
13 23 0.385710587 ubox
13 33 0.025818675 ubox
13 37 0.011266402 ubox
13 39 0.021570684 ubox
13 43 0.010795242 ubox
13 44 0.033137699 ubox
13 46 0.085865644 ubox
13 52 0.009256408 ubox
14 19 0.013900364 ubox
14 22 0.307787445 ubox
14 25 0.005239537 ubox
14 32 0.036696163 ubox
14 35 0.134063530 ubox
14 36 0.012816456 ubox
14 41 0.132278075 ubox
14 45 0.088468896 ubox
14 47 0.004290604 ubox
14 54 0.004715541 ubox
15 22 0.922890411 ubox
15 32 0.003738126 ubox
15 34 0.136105415 ubox
15 35 0.013103503 ubox
15 40 0.132575806 ubox
15 45 0.018928726 ubox
15 47 0.010719987 ubox
15 53 0.005321826 ubox
16 21 0.952363069 ubox
16 30 0.044098702 ubox
16 31 0.003610460 ubox
16 33 0.137514218 ubox
16 37 0.021701412 ubox
16 39 0.132546966 ubox
16 43 0.088176131 ubox
16 44 0.018911624 ubox
16 46 0.010748516 ubox
16 52 0.005308771 ubox
17 28 0.007843160 ubox
17 29 0.043799226 ubox
17 32 0.136893542 ubox
17 35 0.041075065 ubox
17 36 0.019606058 ubox
17 41 0.089855515 ubox
17 42 0.024258456 ubox
17 45 0.010404256 ubox
18 27 0.007882319 ubox
18 28 0.043713322 ubox
18 34 0.041617499 ubox
18 35 0.018705138 ubox
18 40 0.091067516 ubox
18 41 0.019622516 ubox
18 47 0.009781650 ubox
18 53 0.003848736 ubox
19 30 0.137535015 ubox
19 33 0.044332305 ubox
19 37 0.066464952 ubox
19 39 0.091985407 ubox
19 43 0.010232634 ubox
19 46 0.009908409 ubox
19 52 0.003834241 ubox
20 26 0.007777233 ubox
20 27 0.041823741 ubox
20 28 0.025701420 ubox
20 29 0.135125550 ubox
20 32 0.044061158 ubox
20 35 0.156432004 ubox
20 36 0.057387373 ubox
20 41 0.008901676 ubox
20 42 0.004210737 ubox
20 45 0.009880867 ubox
20 54 0.014681525 ubox
21 25 0.005472232 ubox
21 26 0.029603028 ubox
21 27 0.025904926 ubox
21 28 0.133812860 ubox
21 32 0.005575640 ubox
21 34 0.157966643 ubox
21 35 0.057207872 ubox
21 40 0.009033319 ubox
21 41 0.003598738 ubox
21 47 0.003914375 ubox
21 53 0.016480724 ubox
22 30 0.044162108 ubox
22 31 0.006081773 ubox
22 33 0.168157505 ubox
22 39 0.009109178 ubox
22 43 0.009040158 ubox
22 46 0.003956890 ubox
22 52 0.016409945 ubox
23 29 0.041322571 ubox
23 32 0.168063569 ubox
23 34 0.003572326 ubox
23 42 0.008948535 ubox
24 31 0.166898060 ubox
24 33 0.003592431 ubox
24 38 0.004745358 ubox
24 51 0.004334625 ubox
24 52 0.008802013 ubox
25 30 0.152665081 ubox
25 31 0.003704049 ubox
25 37 0.004705351 ubox
25 50 0.004273823 ubox
25 51 0.017546339 ubox
26 30 0.003852113 ubox
26 38 0.003317573 ubox
26 49 0.003561694 ubox
26 50 0.020881624 ubox
27 37 0.003338321 ubox
27 44 0.007102953 ubox
27 48 0.003497862 ubox
27 49 0.021317264 ubox
27 52 0.013865072 ubox
28 43 0.008126581 ubox
28 48 0.021223394 ubox
28 49 0.012317315 ubox
28 51 0.018120641 ubox
29 37 0.006790234 ubox
29 48 0.012177755 ubox
29 50 0.018199783 ubox
30 36 0.009973636 ubox
30 41 0.029065241 ubox
30 47 0.009654626 ubox
30 54 0.669657352 ubox
31 35 0.010085463 ubox
31 40 0.029127185 ubox
31 47 0.054670849 ubox
31 53 0.767852424 ubox
32 39 0.028837090 ubox
32 46 0.055481836 ubox
32 52 0.766522757 ubox
33 45 0.058032728 ubox
33 53 0.092406733 ubox
34 44 0.057849169 ubox
34 50 0.768269507 ubox
34 52 0.092296968 ubox
35 43 0.057811961 ubox
35 44 0.004536613 ubox
35 49 0.769542984 ubox
35 51 0.092221612 ubox
36 43 0.004479087 ubox
36 48 0.768689542 ubox
36 50 0.091059718 ubox
37 42 0.004228408 ubox
37 47 0.762206523 ubox
38 54 0.553227181 ubox
39 45 0.765605459 ubox
39 47 0.094315507 ubox
39 53 0.605371086 ubox
40 44 0.761532413 ubox
40 46 0.094667564 ubox
40 49 0.013950904 ubox
40 52 0.605606334 ubox
41 48 0.013979164 ubox
41 49 0.008150037 ubox
41 51 0.605554833 ubox
42 48 0.014470492 ubox
42 50 0.603077578 ubox
43 47 0.025657190 ubox
43 54 0.091299347 ubox
44 53 0.104200598 ubox
45 52 0.104237076 ubox
46 53 0.073858838 ubox
47 52 0.074062264 ubox
48 54 0.005978027 ubox
49 53 0.006569726 ubox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
