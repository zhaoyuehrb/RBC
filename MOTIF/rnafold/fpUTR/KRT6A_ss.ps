%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUUUCAUACCUUUCUAGAAACUGGGUGUGAUCUCACUGUUGGUAAAGCCCAGCCCUUCCCAACCUGCAAGCUCACCUUCCAGGACUGGGCCCAGCCCAUGCUCUCCAUAUAUAAGCUGCUGCCCCGAGCCUGAUUCCUAGUCCUGCUUCUCUUCCCUCUCUCCUCCAGCCUCUCACACUCUCCUCAGCUCUCUCAUCUCCUGGAACC\
) } def
/len { sequence length } bind def

/coor [
[-39.01670074 252.57594299]
[-56.57144928 267.87097168]
[-77.52936554 277.99172974]
[-100.40489197 282.22640991]
[-123.57799530 280.28024292]
[-145.40892029 272.29592896]
[-153.48417664 284.93673706]
[-161.55943298 297.57754517]
[-169.63470459 310.21838379]
[-177.70996094 322.85919189]
[-185.78521729 335.50000000]
[-193.86047363 348.14080811]
[-201.93572998 360.78161621]
[-194.28875732 374.03991699]
[-193.69071960 389.33374023]
[-200.27905273 403.14868164]
[-212.53977966 412.31018066]
[-227.65551758 414.71295166]
[-242.15274048 409.80490112]
[-252.70011902 398.71386719]
[-256.87393188 383.98843384]
[-253.71505737 369.01245117]
[-243.94940186 357.22726440]
[-229.82104492 351.34103394]
[-214.57655334 352.70635986]
[-206.50128174 340.06555176]
[-198.42602539 327.42474365]
[-190.35076904 314.78393555]
[-182.27551270 302.14312744]
[-174.20025635 289.50228882]
[-166.12500000 276.86148071]
[-158.04972839 264.22067261]
[-163.74818420 259.45019531]
[-169.02052307 254.21261597]
[-173.82861328 248.54586792]
[-178.13764954 242.49095154]
[-181.91645813 236.09169006]
[-185.13766479 229.39439392]
[-187.77796936 222.44755554]
[-189.81825256 215.30143738]
[-204.65071106 217.53707886]
[-219.48318481 219.77270508]
[-234.31564331 222.00834656]
[-249.14810181 224.24397278]
[-258.33016968 237.10729980]
[-273.93215942 239.62789917]
[-286.69769287 230.31034851]
[-289.05319214 214.68258667]
[-279.60119629 202.01628113]
[-263.94940186 199.82612610]
[-251.38374329 209.41151428]
[-236.55126953 207.17587280]
[-221.71881104 204.94024658]
[-206.88635254 202.70460510]
[-192.05389404 200.46897888]
[-192.14234924 190.69807434]
[-191.13896179 180.97692871]
[-189.05593872 171.42716980]
[-185.91900635 162.16833496]
[-181.76712036 153.31637573]
[-176.65188599 144.98216248]
[-170.63700867 137.27014160]
[-163.79750061 130.27697754]
[-156.21865845 124.09039307]
[-147.99508667 118.78804779]
[-139.22949219 114.43655396]
[-130.03137207 111.09064484]
[-120.51568604 108.79248810]
[-110.80139160 107.57116699]
[-101.00997162 107.44229126]
[-91.26390839 108.40780640]
[-81.68517303 110.45596313]
[-72.39365387 113.56147003]
[-63.50569153 117.68579102]
[-55.13261795 122.77763367]
[-47.37935638 128.77359009]
[-40.34310150 135.59892273]
[-34.11211395 143.16847229]
[-28.76459312 151.38775635]
[-15.15421200 145.08239746]
[-1.54383171 138.77703857]
[12.06654835 132.47167969]
[25.67692947 126.16632080]
[39.28730774 119.86096191]
[52.89768982 113.55560303]
[66.50807190 107.25024414]
[67.61315155 88.80323029]
[78.13727570 73.61256409]
[95.01971436 66.09613037]
[96.14066315 51.13807678]
[97.26161957 36.18001938]
[98.38256836 21.22196198]
[90.00996399 4.82172298]
[100.45290375 -9.28148079]
[101.34996796 -24.25463295]
[102.24703217 -39.22778320]
[103.14408875 -54.20093536]
[92.93484497 -65.96567535]
[94.05789185 -81.13780212]
[105.33668518 -90.79825592]
[106.23374939 -105.77140808]
[107.13081360 -120.74456024]
[94.61413574 -129.76322937]
[88.98155975 -144.12559509]
[92.03041840 -159.24868774]
[102.78784180 -170.30677795]
[117.82116699 -173.77127075]
[132.33331299 -168.53666687]
[141.69351196 -156.27330017]
[142.91494751 -140.89436340]
[135.60787964 -127.30722809]
[122.10396576 -119.84749603]
[121.20690155 -104.87434387]
[120.30983734 -89.90119171]
[130.35455322 -78.96321869]
[129.65809631 -63.76553345]
[118.11724091 -53.30387497]
[117.22018433 -38.33072281]
[116.32312012 -23.35757065]
[115.42605591 -8.38441849]
[123.21569061 0.87084770]
[122.59038544 13.35304165]
[113.34062195 22.34291458]
[112.21967316 37.30097198]
[111.09872437 52.25902939]
[109.97776794 67.21708679]
[125.97395325 77.64760590]
[133.90386963 95.01971436]
[148.86192322 96.14066315]
[163.81997681 97.26161957]
[178.77803040 98.38256836]
[187.57032776 95.90307617]
[193.95092773 99.63381195]
[208.89054871 100.97840118]
[223.83015442 102.32299805]
[231.27772522 90.48203278]
[243.04440308 83.04073334]
[256.80334473 81.40319061]
[269.86254883 85.83235931]
[279.69168091 95.40985870]
[284.41223145 108.22566223]
[299.33004761 109.79358673]
[314.24789429 111.36151123]
[326.82092285 95.81728363]
[346.08984375 91.05667114]
[364.19003296 98.84316254]
[373.84207153 115.85549164]
[388.82696533 116.52846527]
[403.81185913 117.20143890]
[408.89602661 102.96617889]
[417.95156860 90.86293030]
[430.17327881 81.96791077]
[444.47439575 77.07205963]
[459.58328247 76.61071014]
[474.15646362 80.62487793]
[486.89810181 88.75764465]
[496.67523193 100.28582764]
[502.61846924 114.18436432]
[504.19934082 129.21740723]
[501.27728271 144.04821777]
[494.11212158 157.35806274]
[483.34097290 167.96342468]
[469.92160034 174.92129517]
[455.04727173 177.61297607]
[440.04055786 175.79913330]
[426.23587036 169.64103699]
[414.86071777 159.68627930]
[406.92654419 146.82003784]
[403.13888550 132.18634033]
[388.15399170 131.51336670]
[373.16909790 130.84039307]
[368.65698242 140.14796448]
[361.27789307 147.45079041]
[351.85482788 151.89863586]
[341.45071411 152.96162415]
[331.24853516 150.49333191]
[322.41687012 144.75030518]
[315.97595215 136.36566162]
[312.67996216 126.27934265]
[297.76211548 124.71141815]
[282.84429932 123.14348602]
[273.66900635 136.44442749]
[258.95333862 143.34320068]
[242.67333984 141.87123108]
[229.28073120 132.33595276]
[222.48556519 117.26261139]
[207.54595947 115.91802216]
[192.60633850 114.57343292]
[177.65708923 113.34062195]
[162.69903564 112.21967316]
[147.74096680 111.09872437]
[132.78291321 109.97776794]
[128.86096191 118.47485352]
[122.78645325 125.59400177]
[115.01243591 130.80426025]
[106.11873627 133.71701050]
[96.76867676 134.11500549]
[87.65961456 131.96858215]
[79.47095490 127.43781281]
[72.81343079 120.86062622]
[59.20304871 127.16598511]
[45.59266663 133.47134399]
[31.98228836 139.77670288]
[18.37190628 146.08206177]
[4.76152658 152.38742065]
[-8.84885406 158.69277954]
[-22.45923424 164.99813843]
[-17.52340317 187.79101562]
[-18.77175140 211.06924438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[79 207]
[80 206]
[81 205]
[82 204]
[83 203]
[84 202]
[85 201]
[86 200]
[89 126]
[90 125]
[91 124]
[92 123]
[94 120]
[95 119]
[96 118]
[97 117]
[100 114]
[101 113]
[102 112]
[128 192]
[129 191]
[130 190]
[131 189]
[133 188]
[134 187]
[135 186]
[141 181]
[142 180]
[143 179]
[147 171]
[148 170]
[149 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
