%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLRN2)
} def

/sequence { (\
UGGAAGAGCUGACCUUGGAGCAGAGCAUUGCCGAGUAUCUGAAAGAUGUCAAUGACCCUCGCUGCUGCUCGGAGACCUUGGGGAUGACCUGCACCCACUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.044231242 ubox
1 97 0.044319378 ubox
1 100 0.038816214 ubox
2 10 0.071347637 ubox
2 14 0.139916549 ubox
2 15 0.025408666 ubox
2 16 0.003846626 ubox
2 77 0.006073100 ubox
2 95 0.010528757 ubox
2 96 0.051981358 ubox
2 99 0.042396309 ubox
3 9 0.073526600 ubox
3 13 0.139730136 ubox
3 14 0.027412361 ubox
3 15 0.003606340 ubox
3 16 0.008836795 ubox
3 76 0.006072476 ubox
3 94 0.010634123 ubox
3 95 0.050146912 ubox
3 98 0.042611769 ubox
4 15 0.007984653 ubox
4 16 0.109976613 ubox
4 79 0.003708875 ubox
5 15 0.119649484 ubox
5 16 0.010967601 ubox
5 78 0.004168984 ubox
5 99 0.021180863 ubox
6 14 0.120756055 ubox
6 15 0.011546763 ubox
6 16 0.057780600 ubox
6 77 0.004220767 ubox
6 79 0.006260688 ubox
6 98 0.021901751 ubox
7 15 0.065977119 ubox
7 16 0.011109336 ubox
7 78 0.007512586 ubox
7 99 0.051554268 ubox
8 14 0.066522581 ubox
8 15 0.010159906 ubox
8 21 0.005623193 ubox
8 77 0.007642492 ubox
8 92 0.010256549 ubox
8 98 0.053124234 ubox
8 102 0.923604313 ubox
9 18 0.025150426 ubox
9 20 0.005921971 ubox
9 74 0.003290312 ubox
9 81 0.003377080 ubox
9 91 0.010243584 ubox
9 101 0.931540590 ubox
10 17 0.024583526 ubox
10 19 0.007429850 ubox
10 80 0.003922745 ubox
10 97 0.055021425 ubox
10 100 0.926829425 ubox
11 16 0.016054733 ubox
11 79 0.005375158 ubox
11 96 0.058997537 ubox
11 99 0.863981489 ubox
12 78 0.006114822 ubox
14 74 0.101822122 ubox
14 101 0.082708183 ubox
15 73 0.102154597 ubox
15 100 0.079778515 ubox
15 101 0.014226214 ubox
16 72 0.101606777 ubox
16 93 0.005100274 ubox
16 97 0.617119508 ubox
16 100 0.015916593 ubox
17 95 0.748881539 ubox
17 96 0.645541169 ubox
17 99 0.013323945 ubox
18 70 0.102342695 ubox
18 94 0.754403578 ubox
18 95 0.638254362 ubox
18 98 0.013329298 ubox
19 69 0.102349888 ubox
20 68 0.102363914 ubox
20 92 0.993489500 ubox
21 67 0.102304431 ubox
21 91 0.994710253 ubox
22 66 0.091291074 ubox
22 90 0.994456812 ubox
23 65 0.080422084 ubox
23 70 0.003964347 ubox
23 89 0.994153605 ubox
24 63 0.067703586 ubox
24 66 0.042828139 ubox
24 69 0.003971617 ubox
25 31 0.005602008 ubox
25 62 0.067816143 ubox
25 65 0.062945599 ubox
25 68 0.003974200 ubox
26 30 0.005603398 ubox
26 54 0.008854428 ubox
26 61 0.062921696 ubox
26 64 0.066861837 ubox
26 67 0.003974015 ubox
26 86 0.994570566 ubox
27 36 0.006206424 ubox
27 53 0.015587530 ubox
27 63 0.062175607 ubox
27 66 0.003779454 ubox
27 85 0.994318199 ubox
28 35 0.006518696 ubox
28 52 0.015778732 ubox
28 55 0.006779452 ubox
28 84 0.994202078 ubox
29 34 0.006577260 ubox
29 37 0.004690574 ubox
29 51 0.015776830 ubox
29 54 0.006854309 ubox
29 64 0.005241223 ubox
29 83 0.988500307 ubox
30 36 0.005663921 ubox
30 50 0.014909561 ubox
30 53 0.004473740 ubox
30 60 0.003628562 ubox
30 62 0.071717166 ubox
30 63 0.005208483 ubox
30 65 0.003396724 ubox
31 35 0.005713746 ubox
31 48 0.004685505 ubox
31 61 0.050901605 ubox
31 64 0.003603589 ubox
31 81 0.994615483 ubox
31 82 0.005008045 ubox
32 41 0.003456047 ubox
32 48 0.007880245 ubox
32 54 0.008984166 ubox
32 61 0.061917840 ubox
32 80 0.994687153 ubox
32 81 0.004345431 ubox
33 39 0.003456616 ubox
33 47 0.005112210 ubox
33 50 0.020949054 ubox
33 53 0.006731917 ubox
33 60 0.097111508 ubox
33 70 0.003506378 ubox
33 79 0.993555523 ubox
34 49 0.021278441 ubox
34 59 0.097125706 ubox
34 69 0.003520403 ubox
34 78 0.993078568 ubox
34 79 0.004968607 ubox
35 49 0.009275095 ubox
35 53 0.003767268 ubox
35 56 0.009109201 ubox
35 58 0.096848245 ubox
35 68 0.003528603 ubox
35 76 0.348364751 ubox
35 77 0.928122124 ubox
35 78 0.003465115 ubox
36 48 0.071676764 ubox
36 52 0.003590339 ubox
36 54 0.020913264 ubox
36 55 0.010539699 ubox
36 67 0.003517213 ubox
36 75 0.446010127 ubox
37 47 0.108552145 ubox
37 53 0.022141675 ubox
37 66 0.003260055 ubox
38 46 0.112295499 ubox
38 52 0.021797525 ubox
38 55 0.090132348 ubox
38 72 0.004161626 ubox
38 73 0.969941821 ubox
38 75 0.095520390 ubox
39 45 0.113001626 ubox
39 54 0.090398300 ubox
39 71 0.004475630 ubox
39 72 0.982866554 ubox
39 74 0.097329284 ubox
40 44 0.101807853 ubox
40 51 0.089301656 ubox
40 71 0.982091404 ubox
40 73 0.094314781 ubox
41 50 0.099609562 ubox
41 60 0.009478785 ubox
41 70 0.981730679 ubox
42 49 0.094152149 ubox
42 59 0.009309149 ubox
42 69 0.937131778 ubox
44 59 0.267596989 ubox
44 63 0.060957428 ubox
44 66 0.410656705 ubox
44 69 0.127587020 ubox
45 58 0.282371365 ubox
45 60 0.522976601 ubox
45 62 0.062694630 ubox
45 65 0.409915327 ubox
45 68 0.203257930 ubox
45 70 0.042035498 ubox
46 53 0.089099068 ubox
46 59 0.513914711 ubox
46 69 0.041621759 ubox
47 52 0.090885826 ubox
47 54 0.010850802 ubox
47 61 0.084942487 ubox
47 64 0.071672080 ubox
47 67 0.082563171 ubox
48 53 0.010177794 ubox
48 56 0.802042939 ubox
48 60 0.094078244 ubox
48 62 0.240652233 ubox
48 63 0.027845453 ubox
48 65 0.298181308 ubox
48 66 0.073294383 ubox
48 68 0.095710866 ubox
48 76 0.031743495 ubox
49 55 0.804583200 ubox
49 61 0.231759980 ubox
49 64 0.122141344 ubox
49 67 0.089949059 ubox
49 75 0.032166745 ubox
50 54 0.798242518 ubox
50 64 0.399556645 ubox
50 67 0.022350448 ubox
50 74 0.032163361 ubox
51 63 0.401087327 ubox
51 66 0.021662448 ubox
53 61 0.408181769 ubox
53 64 0.010689403 ubox
53 71 0.028126404 ubox
54 60 0.451707035 ubox
54 63 0.012831413 ubox
54 70 0.029039945 ubox
55 59 0.393093587 ubox
55 69 0.028870370 ubox
56 72 0.022151462 ubox
57 71 0.022178260 ubox
57 72 0.114032748 ubox
58 71 0.114264476 ubox
58 72 0.012428973 ubox
58 74 0.060863391 ubox
59 71 0.011794946 ubox
59 72 0.007138597 ubox
59 73 0.061001740 ubox
59 75 0.013915152 ubox
60 67 0.018863156 ubox
60 71 0.010724820 ubox
60 72 0.060671106 ubox
60 74 0.015035767 ubox
61 66 0.013536044 ubox
61 68 0.806500032 ubox
61 70 0.009826406 ubox
62 67 0.807056938 ubox
62 72 0.016852315 ubox
62 74 0.003545861 ubox
63 71 0.017054427 ubox
63 73 0.003549390 ubox
64 70 0.016811337 ubox
65 72 0.003835541 ubox
65 74 0.005190350 ubox
66 71 0.003613026 ubox
66 73 0.005186462 ubox
69 75 0.004169989 ubox
70 74 0.004484760 ubox
71 77 0.005654545 ubox
72 76 0.005699657 ubox
77 101 0.018931201 ubox
78 100 0.018106174 ubox
78 101 0.010635511 ubox
79 91 0.009955516 ubox
79 93 0.007978988 ubox
79 97 0.078277389 ubox
79 100 0.013695807 ubox
80 89 0.008182134 ubox
80 90 0.019402692 ubox
80 92 0.008982623 ubox
80 96 0.088132195 ubox
80 99 0.014319135 ubox
81 88 0.008189741 ubox
81 89 0.020228468 ubox
81 90 0.007285255 ubox
81 95 0.088031706 ubox
81 96 0.043323660 ubox
81 98 0.014184303 ubox
82 88 0.020231846 ubox
82 89 0.008285850 ubox
82 90 0.007571461 ubox
82 94 0.087827384 ubox
82 95 0.043661114 ubox
82 96 0.014979098 ubox
83 88 0.008555829 ubox
83 89 0.008574365 ubox
83 94 0.043881343 ubox
83 95 0.014969352 ubox
85 91 0.022907943 ubox
85 93 0.050334096 ubox
86 90 0.011622210 ubox
86 92 0.051405921 ubox
91 102 0.004726721 ubox
92 101 0.004802847 ubox
8 102 0.9500000 lbox
9 101 0.9500000 lbox
10 100 0.9500000 lbox
11 99 0.9500000 lbox
17 95 0.9500000 lbox
18 94 0.9500000 lbox
20 92 0.9500000 lbox
21 91 0.9500000 lbox
22 90 0.9500000 lbox
23 89 0.9500000 lbox
26 86 0.9500000 lbox
27 85 0.9500000 lbox
28 84 0.9500000 lbox
29 83 0.9500000 lbox
31 81 0.9500000 lbox
32 80 0.9500000 lbox
33 79 0.9500000 lbox
34 78 0.9500000 lbox
35 77 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
42 69 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
showpage
end
%%EOF
