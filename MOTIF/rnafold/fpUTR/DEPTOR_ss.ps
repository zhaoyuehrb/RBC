%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUUCUGGGGCCGGACUAGCCCAGCGCGUCUGCCUACCCAUAGGGAUUCCCUCUCCAGCCAAUCCAGUCAGAGCAGCGGAGCUGCCCCGAACAAAGAUGGCGCGGGAAGCGUCUGUGAGGGCAGACUGAUCCGAGCACCCAAACCCUCGGCGGACAGCGGAGCCAGUGGUAGCCGCACGGCCCUAAAACC\
) } def
/len { sequence length } bind def

/coor [
[75.72038269 334.84536743]
[67.99064636 320.38217163]
[76.87983704 306.60125732]
[77.12399292 291.60324097]
[77.36814880 276.60522461]
[77.61230469 261.60720825]
[74.57308960 254.85783386]
[77.98447418 246.36758423]
[78.47271729 231.37553406]
[78.96096802 216.38348389]
[79.44921112 201.39143372]
[79.93745422 186.39938354]
[80.42569733 171.40733337]
[80.91394043 156.41528320]
[81.40218353 141.42321777]
[74.56390381 138.34298706]
[72.93121338 153.25386047]
[58.24558640 156.30877686]
[50.80210876 143.28593445]
[60.88732910 132.18251038]
[54.04904556 129.10227966]
[43.14464951 139.40248108]
[41.25226212 155.33352661]
[27.54160690 163.66404724]
[12.53032589 158.00357056]
[7.73378944 142.69433594]
[16.83148956 129.48027039]
[32.84444809 128.49807739]
[43.74884415 118.19788361]
[45.57553864 103.30952454]
[37.48460770 90.67873383]
[29.39367867 78.04794312]
[21.30274773 65.41715240]
[13.21181774 52.78636551]
[5.12088776 40.15557480]
[-2.97004223 27.52478600]
[-11.06097221 14.89399624]
[-21.82134628 13.17964077]
[-29.69406891 5.96826363]
[-32.23641586 -4.17451525]
[-28.84136963 -13.83192825]
[-36.51688385 -26.71938133]
[-44.19240189 -39.60683441]
[-51.86791611 -52.49428940]
[-59.54343033 -65.38174438]
[-67.21894836 -78.26919556]
[-84.24591827 -82.25016785]
[-92.96067810 -97.01926422]
[-88.39623260 -113.19871521]
[-96.28049469 -125.95953369]
[-104.16476440 -138.72033691]
[-112.04903412 -151.48115540]
[-119.93330383 -164.24197388]
[-129.65103149 -163.64285278]
[-138.86166382 -166.61473083]
[-146.30691528 -172.70713806]
[-150.98596191 -181.04643250]
[-152.28987122 -190.46087646]
[-150.08058167 -199.64524841]
[-144.70417786 -207.34175110]
[-151.74145508 -220.58850098]
[-158.77873230 -233.83526611]
[-165.81602478 -247.08203125]
[-172.61622620 -253.20402527]
[-172.85804749 -260.60217285]
[-179.67877197 -273.96173096]
[-197.65417480 -276.23956299]
[-210.55899048 -288.73361206]
[-213.36726379 -306.31576538]
[-205.14277649 -321.93011475]
[-212.39474487 -335.06057739]
[-227.66497803 -337.09185791]
[-238.68235779 -347.60235596]
[-241.36643982 -362.40979004]
[-234.89410400 -375.79809570]
[-242.14607239 -388.92855835]
[-249.39804077 -402.05902100]
[-256.65002441 -415.18948364]
[-263.90197754 -428.31994629]
[-276.85238647 -439.26174927]
[-269.92321777 -454.73504639]
[-253.13642883 -452.36010742]
[-250.77151489 -435.57189941]
[-243.51954651 -422.44143677]
[-236.26757812 -409.31097412]
[-229.01560974 -396.18051147]
[-221.76365662 -383.05004883]
[-206.98490906 -381.39874268]
[-195.88102722 -371.24157715]
[-192.85179138 -356.31921387]
[-199.26428223 -342.31256104]
[-192.01231384 -329.18209839]
[-179.85923767 -329.48492432]
[-168.66685486 -324.55728149]
[-160.58866882 -315.28015137]
[-157.20739746 -303.37753296]
[-159.22529602 -291.09640503]
[-166.31922913 -280.78247070]
[-159.49848938 -267.42291260]
[-152.56925964 -254.11930847]
[-145.53196716 -240.87254333]
[-138.49468994 -227.62579346]
[-131.45741272 -214.37902832]
[-111.48637390 -210.08575439]
[-101.00241089 -192.21342468]
[-107.17248535 -172.12623596]
[-99.28822327 -159.36541748]
[-91.40395355 -146.60461426]
[-83.51968384 -133.84379578]
[-75.63542175 -121.08298492]
[-62.79559708 -119.90167236]
[-52.83496857 -111.41045380]
[-49.53970718 -98.54225922]
[-54.33149338 -85.94470978]
[-46.65597916 -73.05725861]
[-38.98046112 -60.16980362]
[-31.30494690 -47.28235245]
[-23.62943077 -34.39489746]
[-15.95391560 -21.50744438]
[1.56550133 -13.34546089]
[1.56981719 6.80306578]
[9.66074753 19.43385506]
[17.75167847 32.06464386]
[25.84260750 44.69543457]
[33.93353653 57.32622528]
[42.02446747 69.95701599]
[50.11539841 82.58780670]
[58.20632935 95.21859741]
[66.29274750 75.18550110]
[83.18910980 61.89768982]
[104.34981537 58.79304504]
[124.14971161 66.58808899]
[137.37944031 83.11627197]
[152.33921814 82.01850891]
[167.29899597 80.92074585]
[182.25877380 79.82298279]
[197.21855164 78.72522736]
[203.83163452 64.86295319]
[216.49896240 56.17764664]
[231.81306458 55.00561142]
[245.65454102 61.66212082]
[254.30010986 74.35660553]
[255.42413330 89.67430878]
[248.72427368 103.49485016]
[236.00274658 112.10057831]
[220.68159485 113.17658234]
[206.88212585 106.43343353]
[198.31631470 93.68500519]
[183.35653687 94.78276062]
[168.39675903 95.88052368]
[153.43698120 96.97828674]
[138.47720337 98.07604980]
[135.90568542 105.12142181]
[149.99642944 110.26446533]
[164.08709717 115.40773010]
[158.94360352 129.49832153]
[144.85337830 124.35520935]
[130.76263428 119.21216583]
[128.19111633 126.25753784]
[138.92640686 136.73385620]
[149.66169739 147.21018982]
[160.39700317 157.68650818]
[178.33595276 161.81173706]
[182.43708801 178.86814880]
[193.34149170 189.16835022]
[204.24588013 199.46855164]
[219.91220093 205.94950867]
[218.02137756 222.79769897]
[201.30819702 225.64480591]
[193.94567871 210.37294006]
[183.04129028 200.07273865]
[172.13688660 189.77253723]
[160.03086853 189.80088806]
[150.86097717 181.29560852]
[149.92066956 168.42181396]
[139.18537903 157.94548035]
[128.45008850 147.46916199]
[117.71478271 136.99282837]
[107.45300293 140.86691284]
[96.39423370 141.91146851]
[95.90599060 156.90351868]
[95.41774750 171.89556885]
[94.92950439 186.88761902]
[94.44126129 201.87968445]
[93.95301819 216.87173462]
[93.46477509 231.86378479]
[92.97652435 246.85583496]
[92.61031342 261.85134888]
[92.36616516 276.84936523]
[92.12200928 291.84738159]
[91.87785339 306.84539795]
[100.31377411 320.90838623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[6 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[21 29]
[22 28]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
[35 123]
[36 122]
[37 121]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 114]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[60 103]
[61 102]
[62 101]
[63 100]
[65 99]
[66 98]
[70 92]
[71 91]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[159 178]
[160 177]
[161 176]
[162 175]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
