%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTERF4)
} def

/sequence { (\
GAAGGACGGGGGAGGACCGCUGCUUCCGGCGCCGUAACUGCUGCCAUCUUCUCCGCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.019258217 ubox
1 48 0.023850714 ubox
1 51 0.083051631 ubox
1 53 0.029726816 ubox
2 25 0.018907723 ubox
2 47 0.023557170 ubox
2 50 0.081080978 ubox
2 52 0.029363284 ubox
3 24 0.018473987 ubox
3 25 0.008549949 ubox
3 49 0.078855252 ubox
3 50 0.041799788 ubox
3 52 0.007018652 ubox
3 59 0.446614687 ubox
4 23 0.017604578 ubox
4 24 0.010562294 ubox
4 26 0.006135898 ubox
4 27 0.024137861 ubox
4 33 0.004597918 ubox
4 45 0.027117115 ubox
4 48 0.074849420 ubox
4 49 0.049114302 ubox
4 51 0.007976873 ubox
4 54 0.026385229 ubox
4 58 0.494415704 ubox
4 59 0.633039952 ubox
5 23 0.012556036 ubox
5 25 0.006642386 ubox
5 26 0.024351863 ubox
5 32 0.004604751 ubox
5 44 0.027376349 ubox
5 47 0.063457328 ubox
5 48 0.054960985 ubox
5 50 0.007635584 ubox
5 51 0.003415223 ubox
5 53 0.026410075 ubox
5 58 0.703083546 ubox
6 24 0.007831813 ubox
6 25 0.022917711 ubox
6 35 0.004602594 ubox
6 47 0.059266103 ubox
6 49 0.007432722 ubox
6 50 0.003313921 ubox
6 52 0.025640496 ubox
7 19 0.005569537 ubox
7 22 0.033203071 ubox
7 28 0.013012426 ubox
7 31 0.004003526 ubox
7 34 0.004720446 ubox
7 40 0.003514429 ubox
7 43 0.034054701 ubox
7 55 0.500983106 ubox
7 57 0.819235794 ubox
8 18 0.005629895 ubox
8 21 0.033894444 ubox
8 26 0.006533539 ubox
8 27 0.022228385 ubox
8 30 0.003998293 ubox
8 33 0.004723372 ubox
8 39 0.003564991 ubox
8 42 0.034066978 ubox
8 45 0.085178305 ubox
8 48 0.004458261 ubox
8 49 0.006133996 ubox
8 50 0.013039077 ubox
8 51 0.016930997 ubox
8 52 0.003510940 ubox
8 54 0.494275704 ubox
8 56 0.821547242 ubox
9 17 0.005613099 ubox
9 18 0.004190087 ubox
9 20 0.033955798 ubox
9 25 0.006624033 ubox
9 26 0.022238515 ubox
9 32 0.004711993 ubox
9 38 0.003569811 ubox
9 41 0.034061567 ubox
9 44 0.085223073 ubox
9 45 0.005771367 ubox
9 47 0.003545042 ubox
9 48 0.006449927 ubox
9 49 0.013807662 ubox
9 50 0.016088663 ubox
9 51 0.005716777 ubox
9 53 0.485909784 ubox
9 54 0.823888667 ubox
10 17 0.004223628 ubox
10 18 0.010781444 ubox
10 24 0.008522254 ubox
10 25 0.021622805 ubox
10 27 0.049531435 ubox
10 39 0.008183524 ubox
10 42 0.035127454 ubox
10 44 0.005685737 ubox
10 45 0.003785838 ubox
10 48 0.013626086 ubox
10 49 0.014301546 ubox
10 50 0.006183823 ubox
10 51 0.012519458 ubox
10 52 0.474335485 ubox
10 53 0.829505022 ubox
10 54 0.253296193 ubox
11 17 0.010791730 ubox
11 18 0.032386473 ubox
11 23 0.009933068 ubox
11 24 0.021110526 ubox
11 26 0.049713390 ubox
11 27 0.037276410 ubox
11 38 0.009024509 ubox
11 39 0.032504263 ubox
11 41 0.038614212 ubox
11 42 0.076938818 ubox
11 44 0.003805781 ubox
11 48 0.013762594 ubox
11 49 0.008280291 ubox
11 50 0.003902479 ubox
11 51 0.465240966 ubox
11 52 0.834145988 ubox
11 53 0.252231090 ubox
11 54 0.009919076 ubox
12 17 0.032195345 ubox
12 23 0.021119102 ubox
12 25 0.049997913 ubox
12 26 0.039808694 ubox
12 38 0.032267362 ubox
12 41 0.077002868 ubox
12 47 0.012956682 ubox
12 48 0.012957562 ubox
12 50 0.455002824 ubox
12 51 0.876355076 ubox
12 52 0.025446198 ubox
12 53 0.011751198 ubox
13 21 0.019784092 ubox
13 24 0.050274207 ubox
13 25 0.039686861 ubox
13 39 0.077531071 ubox
13 42 0.003911170 ubox
13 47 0.012824790 ubox
13 49 0.452358387 ubox
13 50 0.880787307 ubox
13 52 0.013316870 ubox
14 20 0.020046278 ubox
14 21 0.012651060 ubox
14 23 0.050488050 ubox
14 24 0.039594408 ubox
14 26 0.004424668 ubox
14 27 0.090361425 ubox
14 33 0.040110353 ubox
14 38 0.077744960 ubox
14 39 0.030149644 ubox
14 41 0.003891361 ubox
14 45 0.025488625 ubox
14 48 0.436903462 ubox
14 49 0.881049971 ubox
14 51 0.013565765 ubox
15 20 0.021272866 ubox
15 23 0.041132515 ubox
15 24 0.004696361 ubox
15 25 0.008512852 ubox
15 26 0.103082890 ubox
15 32 0.044079124 ubox
15 38 0.033737717 ubox
15 41 0.005817353 ubox
15 44 0.027471688 ubox
15 47 0.353231305 ubox
15 48 0.885144386 ubox
15 50 0.013008030 ubox
16 24 0.009329525 ubox
16 25 0.101501625 ubox
16 35 0.147151350 ubox
16 47 0.873630678 ubox
16 49 0.012103412 ubox
17 29 0.049470095 ubox
17 34 0.151142723 ubox
18 28 0.050105844 ubox
18 31 0.303634708 ubox
18 34 0.048345811 ubox
18 43 0.030153949 ubox
19 27 0.052679700 ubox
19 30 0.395971671 ubox
19 32 0.097044862 ubox
19 33 0.050129809 ubox
19 35 0.007967770 ubox
19 41 0.030095086 ubox
19 42 0.011654909 ubox
19 44 0.886054643 ubox
20 29 0.396149329 ubox
20 31 0.095408878 ubox
20 34 0.008250199 ubox
20 40 0.030402186 ubox
20 43 0.884253212 ubox
21 28 0.394700514 ubox
21 31 0.084536897 ubox
21 36 0.012566665 ubox
21 40 0.007911713 ubox
21 43 0.004934594 ubox
21 46 0.043791924 ubox
22 27 0.382010652 ubox
22 30 0.145407687 ubox
22 32 0.012931111 ubox
22 35 0.012755582 ubox
22 39 0.011632806 ubox
22 41 0.874344887 ubox
22 42 0.006635952 ubox
22 44 0.036105732 ubox
22 45 0.042090683 ubox
23 29 0.145445842 ubox
23 31 0.013111977 ubox
23 34 0.012756367 ubox
23 40 0.874819669 ubox
23 43 0.036330586 ubox
24 28 0.131052039 ubox
24 37 0.339625146 ubox
25 36 0.368473338 ubox
27 34 0.673504030 ubox
27 40 0.055208741 ubox
27 43 0.063364366 ubox
28 33 0.667964578 ubox
28 39 0.137654711 ubox
28 42 0.116333816 ubox
28 45 0.176573425 ubox
28 59 0.019298699 ubox
29 35 0.335639356 ubox
29 38 0.138653861 ubox
29 41 0.117344993 ubox
29 44 0.177105725 ubox
29 58 0.023601871 ubox
30 34 0.335360731 ubox
30 40 0.117333099 ubox
30 43 0.177118870 ubox
30 57 0.023620148 ubox
31 39 0.097681634 ubox
31 41 0.145881793 ubox
31 42 0.122400855 ubox
31 44 0.242210203 ubox
31 56 0.023612805 ubox
32 40 0.145987080 ubox
32 43 0.248511570 ubox
32 55 0.022672929 ubox
33 40 0.123918324 ubox
33 43 0.029654424 ubox
33 55 0.006509898 ubox
34 39 0.090272110 ubox
34 41 0.275384538 ubox
34 42 0.019307216 ubox
34 44 0.209771830 ubox
34 47 0.004714716 ubox
34 54 0.008972899 ubox
35 40 0.264208819 ubox
35 43 0.209835973 ubox
35 46 0.005165019 ubox
36 42 0.201402255 ubox
36 50 0.003750995 ubox
37 49 0.003607429 ubox
39 46 0.051078819 ubox
40 45 0.055978231 ubox
40 58 0.005137711 ubox
41 57 0.005035611 ubox
43 56 0.005503641 ubox
44 55 0.005499305 ubox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
