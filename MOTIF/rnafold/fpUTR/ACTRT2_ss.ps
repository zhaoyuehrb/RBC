%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGAGGCCUCAGCAGGCCCAGGCCACCUGGAGGGAGAGCAGACCUGCGGCUGAGGAUGCAGGGCUCCCGGGCACGGUGCUAGCCCUGCCUUGAGACACCCCGAGAGCUGUGGGAAGAGCUGUGGGAUCCCCUAUUGCAUCACAAAGCGGCCCUGGAGGGCUGGUCUUUAUUUUGAUGAGGCUGAGAAGGGAAGGCUGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[11.72679043 200.08555603]
[5.30700207 213.64233398]
[-1.11278582 227.19911194]
[7.50114298 239.83824158]
[8.62472534 254.99192810]
[2.05607271 268.58306885]
[-10.35055542 277.00515747]
[-25.20693779 278.07916260]
[-31.62672615 291.63595581]
[-38.04651260 305.19271851]
[-44.46630096 318.74951172]
[-50.88608932 332.30630493]
[-49.01515198 348.59835815]
[-62.34838104 358.14599609]
[-77.16969299 351.12738037]
[-78.23219299 334.76269531]
[-64.44287109 325.88650513]
[-58.02308273 312.32971191]
[-51.60329437 298.77294922]
[-45.18350601 285.21615601]
[-38.76371765 271.65939331]
[-47.34669113 259.48571777]
[-48.69277573 244.55105591]
[-42.34073639 230.85733032]
[-29.90565109 222.12432861]
[-14.66956711 220.77932739]
[-8.24977970 207.22254944]
[-1.82999134 193.66575623]
[4.38231134 180.01264954]
[10.38568306 166.26640320]
[16.38905525 152.52014160]
[22.39242744 138.77389526]
[20.39560318 124.01374817]
[33.00936890 114.46369171]
[39.01274109 100.71743774]
[31.18501663 87.92185974]
[16.21291733 87.00740051]
[7.45246267 89.60857391]
[1.02001011 85.96311951]
[-13.93640327 84.82044220]
[-28.89281654 83.67776489]
[-43.84922791 82.53508759]
[-48.56161499 84.79843903]
[-53.20604324 85.00457764]
[-57.00944138 83.52455139]
[-59.45843506 80.98269653]
[-74.34693909 79.15718079]
[-89.23543549 77.33165741]
[-104.12393951 75.50614166]
[-119.01244354 73.68062592]
[-133.90093994 71.85511017]
[-144.38273621 83.29676819]
[-159.59460449 86.35922241]
[-173.68727112 79.86489868]
[-181.24183655 66.31099701]
[-179.35337830 50.90925980]
[-168.74809265 39.58198166]
[-153.50389099 36.68472290]
[-139.48249817 43.33154678]
[-132.07542419 56.96660614]
[-117.18692017 58.79212570]
[-102.29842377 60.61764145]
[-87.40991974 62.44315720]
[-72.52141571 64.26867676]
[-57.63291550 66.09419250]
[-42.70655441 67.57867432]
[-27.75014114 68.72135162]
[-12.79372692 69.86402893]
[2.16268563 71.00670624]
[17.12737656 72.03530121]
[32.09947586 72.94976044]
[39.33379745 59.80957413]
[30.55407524 47.64748383]
[21.77435112 35.48539352]
[12.99462605 23.32330132]
[4.21490192 11.16121101]
[-10.13599491 4.50070572]
[-11.31200790 -10.34740067]
[-20.09173203 -22.50949097]
[-28.87145615 -34.67158127]
[-44.04584885 -40.89009094]
[-45.97922897 -57.17486954]
[-32.68270111 -66.77353668]
[-17.83459282 -59.81180191]
[-16.70936584 -43.45130539]
[-7.92964172 -31.28921509]
[0.85008270 -19.12712479]
[14.57299519 -13.33653355]
[16.37699318 2.38148665]
[25.15671730 14.54357719]
[33.93643951 26.70566750]
[42.71616364 38.86775970]
[51.49588776 51.02985001]
[58.93296432 50.06035233]
[56.99397278 35.18620300]
[55.05498123 20.31205368]
[53.11621857 5.43787527]
[67.99042511 3.49934363]
[69.92913055 18.37306213]
[71.86811829 33.24721146]
[73.80711365 48.12136078]
[81.24418640 47.15186691]
[86.61258698 33.14542770]
[91.98098755 19.13899040]
[97.34938812 5.13255405]
[92.81925201 -6.94665432]
[97.58190918 -18.50364494]
[108.57891083 -23.54868126]
[114.16028595 -37.47162247]
[119.74165344 -51.39456558]
[125.32302856 -65.31750488]
[116.95088959 -78.38222504]
[117.89054108 -93.87081909]
[127.78066254 -105.82762146]
[142.81831360 -109.65498352]
[157.22120667 -103.88121033]
[165.45112610 -90.72644043]
[164.34350586 -75.24894714]
[154.32424927 -63.40014267]
[139.24597168 -59.73613358]
[133.66459656 -45.81319427]
[128.08322144 -31.89025116]
[122.50185394 -17.96730995]
[125.92526245 -0.75718838]
[111.35582733 10.50095367]
[105.98742676 24.50739098]
[100.61902618 38.51382828]
[95.25062561 52.52026367]
[127.08629608 70.06014252]
[133.03138733 99.99016571]
[147.64062500 103.39167023]
[162.24986267 106.79317474]
[176.85908508 110.19467163]
[186.95524597 97.43767548]
[201.55128479 90.38502502]
[217.70368958 90.40264130]
[232.17964172 97.43624878]
[242.10391235 110.03244019]
[245.53002930 125.63867188]
[260.18942261 128.81698608]
[275.31570435 124.17945862]
[286.11453247 134.43783569]
[300.77395630 137.61614990]
[315.43334961 140.79446411]
[330.11657715 143.86091614]
[344.82275391 146.81530762]
[359.52893066 149.76969910]
[374.23510742 152.72410583]
[388.94128418 155.67849731]
[403.78411865 157.84408569]
[418.72137451 159.21472168]
[433.65863037 160.58534241]
[448.59588623 161.95596313]
[463.53311157 163.32659912]
[478.47036743 164.69721985]
[493.12756348 157.34205627]
[506.67532349 166.58276367]
[505.17684937 182.91329956]
[490.17364502 189.53421021]
[477.09973145 179.63446045]
[462.16250610 178.26383972]
[447.22525024 176.89321899]
[432.28799438 175.52258301]
[417.35073853 174.15196228]
[402.41351318 172.78134155]
[412.05102539 184.27558899]
[412.17401123 199.27508545]
[402.72622681 210.92581177]
[388.02484131 213.90397644]
[374.78765869 206.84870911]
[369.06338501 192.98391724]
[373.46771240 178.64509583]
[385.98687744 170.38467407]
[371.28070068 167.43026733]
[356.57452393 164.47587585]
[341.86837769 161.52148438]
[327.16220093 158.56709290]
[319.98239136 160.33238220]
[312.25503540 155.45387268]
[297.59564209 152.27555847]
[282.93621826 149.09724426]
[268.85848999 153.96211243]
[257.01110840 143.47639465]
[242.35169983 140.29808044]
[234.36749268 151.64610291]
[222.62367249 159.11685181]
[208.87609863 161.55424500]
[195.19511414 158.55767822]
[183.65391541 150.54740906]
[176.01423645 138.70603943]
[173.45759583 124.80390930]
[158.84835815 121.40240479]
[144.23912048 118.00090790]
[129.62988281 114.59940338]
[116.86284637 132.59959412]
[93.63758087 139.86956787]
[68.59272766 130.88003540]
[52.75899506 106.72080994]
[46.75562286 120.46706390]
[48.32304764 136.21043396]
[36.13868332 144.77726746]
[30.13531113 158.52351379]
[24.13193893 172.26977539]
[18.12856674 186.01602173]
[18.48613930 192.62420654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[29 204]
[30 203]
[31 202]
[32 201]
[34 199]
[35 198]
[36 71]
[37 70]
[39 69]
[40 68]
[41 67]
[42 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[102 128]
[103 127]
[104 126]
[105 125]
[108 123]
[109 122]
[110 121]
[111 120]
[130 194]
[131 193]
[132 192]
[133 191]
[139 184]
[140 183]
[142 181]
[143 180]
[144 179]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
