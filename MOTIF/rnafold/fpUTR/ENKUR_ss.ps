%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAACGACGCUUAGCAAUCCGGAGAGAAAUAGGGUGUUUUCUUCCCGAGAGAGGACUGCUAAGAGGGGGUUAAAGGGGGACGAUGUGAAGGAGAGAACCUGUGGUCCUUCAGAAGGCGAAGAAGAAAGAAAGGGGAAGCAGUGAAGAAAGGGACGGAGAUACUGGGACAGGGAGAAAAAAGUUGUGGAGAGUAGCUUUUAAGGAGUCAUUUGGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[239.33728027 566.14733887]
[241.48054504 549.84350586]
[251.61250305 536.77252197]
[245.79846191 522.94512939]
[233.73287964 514.21179199]
[235.51634216 498.49142456]
[229.70230103 484.66403198]
[223.88825989 470.83663940]
[218.07420349 457.00924683]
[212.26016235 443.18185425]
[198.86727905 444.53198242]
[185.61941528 442.05429077]
[173.58978271 435.93988037]
[163.75563049 426.67480469]
[156.91882324 415.00155640]
[153.64047241 401.85949707]
[154.19493103 388.30923462]
[158.54679871 375.44711304]
[166.35305786 364.31646729]
[176.99008179 355.82290649]
[171.57145691 341.83581543]
[166.15283203 327.84875488]
[154.41230774 329.23229980]
[142.65016174 327.95797729]
[131.46095276 324.08605957]
[121.41123199 317.80825806]
[113.01078033 309.43817139]
[106.68682098 299.39569092]
[102.76226044 288.18585205]
[101.43920135 276.37353516]
[102.78857422 264.55493164]
[106.74629211 253.32749939]
[113.11632538 243.25967407]
[121.58039093 234.86222839]
[131.71385193 228.56222534]
[127.30222321 214.22564697]
[122.89060211 199.88906860]
[118.47898102 185.55249023]
[114.06735229 171.21589661]
[109.65573120 156.87931824]
[105.24411011 142.54273987]
[100.83248138 128.20616150]
[96.42086029 113.86957550]
[86.30957031 104.21279144]
[89.24256134 90.54204559]
[84.83093262 76.20546722]
[80.41931152 61.86888504]
[76.00769043 47.53230286]
[61.68845749 47.13932419]
[48.21043015 42.35146713]
[36.88627625 33.64909363]
[28.81455231 21.89311981]
[24.77312851 8.23986530]
[25.14424324 -5.97268009]
[29.87839508 -19.35597801]
[38.50046158 -30.60659218]
[50.15736008 -38.63314438]
[45.94997787 -53.03098679]
[41.74259186 -67.42883301]
[37.53520584 -81.82667542]
[33.32781982 -96.22451782]
[29.12043381 -110.62236023]
[8.75598145 -110.29473877]
[-10.74403572 -116.12425995]
[-27.56358719 -127.55898285]
[-40.13899994 -143.52537537]
[-47.30433655 -162.52909851]
[-48.39947891 -182.79487610]
[-43.33095169 -202.43229675]
[-32.57981491 -219.61222839]
[-17.15602303 -232.73709106]
[-23.55428696 -246.30404663]
[-29.95255089 -259.87100220]
[-46.61460114 -262.80200195]
[-58.13013458 -274.96792603]
[-60.10258484 -291.43560791]
[-51.95101166 -305.68832397]
[-58.54148102 -319.16293335]
[-65.13195038 -332.63757324]
[-71.72241974 -346.11221313]
[-78.31288910 -359.58685303]
[-84.90335846 -373.06146240]
[-91.49382782 -386.53610229]
[-104.50762177 -395.53341675]
[-103.14904785 -410.36593628]
[-109.73951721 -423.84057617]
[-113.41120148 -426.12719727]
[-115.91644287 -429.15658569]
[-117.16501617 -432.47225952]
[-117.22368622 -435.63525391]
[-116.29704285 -438.27352905]
[-122.11109161 -452.10092163]
[-127.92513275 -465.92831421]
[-142.65126038 -471.66561890]
[-148.93074036 -486.16885376]
[-143.03805542 -500.83349609]
[-128.46925354 -506.95928955]
[-113.86772156 -500.91189575]
[-107.89630890 -486.27914429]
[-114.09773254 -471.74237061]
[-108.28369141 -457.91497803]
[-102.46965027 -444.08758545]
[-96.26488495 -430.43103027]
[-89.67441559 -416.95642090]
[-77.13201904 -408.92288208]
[-78.01919556 -393.12658691]
[-71.42872620 -379.65194702]
[-64.83825684 -366.17730713]
[-58.24778748 -352.70266724]
[-51.65731812 -339.22805786]
[-45.06684875 -325.75341797]
[-38.47637939 -312.27877808]
[-25.17286873 -311.20632935]
[-14.04619694 -303.64120483]
[-8.06125641 -291.47000122]
[-8.87642384 -277.82299805]
[-16.38559723 -266.26925659]
[-9.98733330 -252.70231628]
[-3.58907032 -239.13536072]
[6.26245832 -241.67791748]
[16.39023209 -242.68363953]
[26.55587959 -242.12785339]
[36.51999283 -240.02265930]
[46.04774857 -236.41664124]
[54.91445541 -231.39378357]
[62.91085815 -225.07148743]
[69.84804535 -217.59785461]
[75.56196594 -209.14816284]
[79.91724396 -199.92082214]
[82.81043243 -190.13267517]
[84.17246246 -180.01390076]
[83.97028351 -169.80261230]
[82.20765686 -159.73930359]
[78.92510986 -150.06105042]
[74.19898987 -140.99607849]
[68.13970184 -132.75828552]
[60.88911057 -125.54221344]
[52.61724091 -119.51849365]
[43.51827621 -114.82975006]
[47.72566223 -100.43190765]
[51.93304825 -86.03405762]
[56.14043427 -71.63621521]
[60.34782028 -57.23837280]
[64.55520630 -42.84053040]
[80.28162384 -42.01887131]
[94.80016327 -35.85012436]
[106.34741974 -25.06355858]
[113.51403046 -10.95052242]
[115.41670990 4.79013872]
[111.80704498 20.25658226]
[103.10376740 33.57374573]
[90.34426880 43.12067795]
[94.75588989 57.45726013]
[99.16751862 71.79383850]
[103.57913971 86.13042450]
[113.69042969 95.78720856]
[110.75743866 109.45795441]
[115.16906738 123.79453278]
[119.58068848 138.13111877]
[123.99230957 152.46769714]
[128.40393066 166.80427551]
[132.81556702 181.14085388]
[137.22718811 195.47744751]
[141.63880920 209.81402588]
[146.05043030 224.15060425]
[164.43618774 224.53364563]
[181.56628418 231.15902710]
[195.39016724 243.21679688]
[204.25883484 259.24774170]
[207.12149048 277.31997681]
[203.65003967 295.26174927]
[194.27664185 310.92236328]
[180.13992310 322.43011475]
[185.55854797 336.41720581]
[190.97717285 350.40426636]
[207.61303711 349.85192871]
[223.40740967 355.02301025]
[236.45504761 365.27526855]
[245.18833923 379.35458374]
[248.56576538 395.54840088]
[246.19593811 411.89410400]
[238.38298035 426.41674805]
[226.08757019 437.36779785]
[231.90161133 451.19519043]
[237.71565247 465.02258301]
[243.52969360 478.84997559]
[249.34373474 492.67736816]
[261.82516479 502.39974976]
[259.62585449 517.13110352]
[265.43991089 530.95849609]
[279.38598633 531.98681641]
[291.47155762 538.88928223]
[299.36755371 550.27008057]
[301.58065796 563.87677002]
[297.73541260 577.04620361]
[288.63659668 587.22564697]
[294.25350952 601.13427734]
[299.87039185 615.04296875]
[312.21237183 624.94177246]
[309.80386353 639.64031982]
[315.42077637 653.54895020]
[321.03768921 667.45764160]
[326.65457153 681.36627197]
[332.27148438 695.27490234]
[346.91455078 701.22094727]
[352.98724365 715.81201172]
[346.88671875 730.39141846]
[332.23229980 736.30944824]
[317.71820068 730.05511475]
[311.95538330 715.33898926]
[318.36282349 700.89184570]
[312.74594116 686.98315430]
[307.12902832 673.07452393]
[301.51211548 659.16589355]
[295.89523315 645.25726318]
[283.95501709 636.35327148]
[285.96176147 620.65985107]
[280.34484863 606.75122070]
[274.72793579 592.84252930]
[258.67312622 590.98132324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[20 175]
[21 174]
[22 173]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[45 155]
[46 154]
[47 153]
[48 152]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[71 119]
[72 118]
[73 117]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[85 104]
[86 103]
[91 102]
[92 101]
[93 100]
[196 219]
[197 218]
[198 217]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
