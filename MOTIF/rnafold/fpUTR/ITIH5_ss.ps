%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGCGGGGUGGGCGGCCCCGAGAGCGUCCCGCAGUGGCUGGAGCCCUGGGCGCUGCAAAGCGUGUCCCGCCGGGUCCCCGAGCGUCCCGCGCCCUCGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[74.46159363 280.88430786]
[58.71857452 279.49401855]
[48.63383865 267.32546997]
[50.19047928 251.59803772]
[62.46497345 241.64251709]
[63.78449631 226.70066833]
[65.10401917 211.75881958]
[66.42353821 196.81697083]
[67.74306488 181.87512207]
[69.06258392 166.93327332]
[70.38211060 151.99142456]
[71.70162964 137.04957581]
[73.02115631 122.10771942]
[66.23092651 108.73264313]
[53.38982773 100.97982025]
[40.54872894 93.22700500]
[27.70762825 85.47418976]
[14.86653042 77.72136688]
[1.91300571 70.15789032]
[-11.15015411 62.78538513]
[-24.21331406 55.41287613]
[-33.38224411 53.87718201]
[-37.54714966 47.62733841]
[-50.38824844 39.87451935]
[-66.20126343 39.36553574]
[-73.09767914 26.16369057]
[-85.93878174 18.41087151]
[-95.05867767 16.60667229]
[-99.03831482 10.23725510]
[-111.64628601 2.11080933]
[-124.25424957 -6.01563644]
[-140.04551697 -6.98861742]
[-146.55139160 -20.38722610]
[-159.15936279 -28.51367188]
[-175.55642700 -28.77496147]
[-183.29113770 -43.23546982]
[-174.40669250 -57.01946640]
[-158.04263306 -55.94715500]
[-151.03291321 -41.12163925]
[-138.42495728 -32.99519348]
[-123.53549957 -32.60346985]
[-116.12780762 -18.62360573]
[-103.51983643 -10.49715996]
[-90.91186523 -2.37071371]
[-78.18596649 5.56977367]
[-65.34486389 13.32259178]
[-50.45032883 13.27704430]
[-42.63542938 27.03342056]
[-29.79433060 34.78623962]
[-16.84080505 42.34971619]
[-3.77764630 49.72222519]
[9.28551292 57.09473038]
[16.77541351 57.65005112]
[22.61934853 64.88027191]
[35.46044540 72.63308716]
[48.30154419 80.38591003]
[61.14264297 88.13872528]
[73.98374176 95.89154053]
[82.16506195 82.35490417]
[96.02979279 76.49453735]
[109.94892883 79.72072601]
[118.81449890 89.93366241]
[133.68376160 87.95758057]
[148.55302429 85.98149109]
[163.42230225 84.00540924]
[178.29156494 82.02932739]
[185.74084473 68.54546356]
[199.54017639 62.10870743]
[214.30900574 64.99756622]
[224.42375183 75.89848328]
[239.29301453 73.92240143]
[254.16227722 71.94631195]
[269.00094604 69.75216675]
[283.80578613 67.34042358]
[298.61062622 64.92868042]
[310.96029663 54.13898468]
[326.38973999 59.69460678]
[329.02642822 75.88040161]
[316.15798950 86.04580688]
[301.02236938 79.73352814]
[286.21752930 82.14527130]
[271.41268921 84.55700684]
[265.21951294 88.80571747]
[256.13836670 86.81558228]
[241.26910400 88.79166412]
[226.39982605 90.76774597]
[219.48329163 103.93207550]
[205.98161316 110.57801056]
[190.98010254 107.96880341]
[180.26765442 96.89859009]
[165.39837646 98.87467194]
[150.52911377 100.85076141]
[135.65985107 102.82684326]
[120.79058075 104.80293274]
[115.47173309 117.02512360]
[103.23505402 124.45880890]
[87.96300507 123.42724609]
[86.64347839 138.36909485]
[85.32395935 153.31094360]
[84.00443268 168.25279236]
[82.68491364 183.19464111]
[81.36538696 198.13648987]
[80.04586792 213.07833862]
[78.72634125 228.02018738]
[77.40682220 242.96203613]
[87.74659729 254.91464233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[19 52]
[20 51]
[21 50]
[23 49]
[24 48]
[26 46]
[27 45]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[62 94]
[63 93]
[64 92]
[65 91]
[66 90]
[70 86]
[71 85]
[72 84]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
