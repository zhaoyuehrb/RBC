%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FNDC10)
} def

/sequence { (\
GGAUCGCGGGGAGCGGGCAGCGGGGACGGCGGCGGCGCGGCCCGCGUGACCCAGCGCCGCGCCCCGUGGCCCCGCCGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.011981304 ubox
1 71 0.053012101 ubox
1 72 0.035174514 ubox
1 73 0.016909734 ubox
1 76 0.007022347 ubox
2 64 0.011982302 ubox
2 70 0.053202358 ubox
2 71 0.035619397 ubox
2 72 0.016581172 ubox
2 75 0.005352447 ubox
4 11 0.007975961 ubox
4 12 0.022891224 ubox
4 16 0.725134235 ubox
4 17 0.004695769 ubox
4 69 0.064598955 ubox
4 81 0.022755672 ubox
5 10 0.012344639 ubox
5 11 0.024435670 ubox
5 15 0.986331237 ubox
5 16 0.040705399 ubox
5 61 0.005813691 ubox
5 68 0.066898924 ubox
5 77 0.004289019 ubox
5 80 0.034671175 ubox
6 14 0.991480087 ubox
6 18 0.004121326 ubox
6 60 0.005848019 ubox
6 62 0.016590504 ubox
6 67 0.067005737 ubox
6 75 0.015663343 ubox
6 76 0.003202988 ubox
6 78 0.087106567 ubox
7 13 0.991336127 ubox
7 15 0.044691824 ubox
7 17 0.004117177 ubox
7 59 0.005847624 ubox
7 61 0.016614901 ubox
7 66 0.067044480 ubox
7 74 0.016057216 ubox
7 77 0.087223784 ubox
8 14 0.045023981 ubox
8 58 0.005783911 ubox
8 60 0.016611892 ubox
8 65 0.067165896 ubox
8 73 0.016058826 ubox
8 76 0.086975994 ubox
9 57 0.005727824 ubox
9 64 0.067161352 ubox
9 72 0.016028963 ubox
9 75 0.081962116 ubox
9 76 0.006300662 ubox
10 58 0.016610267 ubox
10 63 0.067154567 ubox
10 71 0.015994340 ubox
10 73 0.037411917 ubox
10 75 0.008301301 ubox
11 57 0.016587117 ubox
11 62 0.066973952 ubox
11 70 0.015825569 ubox
11 72 0.027351491 ubox
13 21 0.007271569 ubox
13 55 0.017763171 ubox
13 60 0.066837300 ubox
13 62 0.003624072 ubox
13 67 0.015484494 ubox
13 75 0.028154809 ubox
13 78 0.029828800 ubox
14 20 0.007498691 ubox
14 54 0.017790605 ubox
14 59 0.066921782 ubox
14 61 0.004564222 ubox
14 66 0.015527096 ubox
14 74 0.038149621 ubox
14 77 0.029858436 ubox
15 52 0.017894636 ubox
15 58 0.059043746 ubox
15 60 0.004584732 ubox
15 65 0.015472063 ubox
15 71 0.009549475 ubox
15 72 0.074948317 ubox
15 73 0.033504444 ubox
15 76 0.029624584 ubox
16 51 0.017984319 ubox
16 57 0.049928108 ubox
16 58 0.031984258 ubox
16 64 0.015407840 ubox
16 70 0.009420737 ubox
16 71 0.081381612 ubox
16 72 0.028041005 ubox
16 75 0.020107981 ubox
16 76 0.014556042 ubox
17 33 0.006138941 ubox
17 50 0.018003595 ubox
17 55 0.032456355 ubox
17 57 0.044855206 ubox
17 63 0.013974688 ubox
17 70 0.083450229 ubox
17 71 0.021202801 ubox
17 75 0.013744662 ubox
17 78 0.989458551 ubox
18 32 0.006123385 ubox
18 48 0.017147354 ubox
18 54 0.032445252 ubox
18 56 0.054596544 ubox
18 68 0.009642025 ubox
18 69 0.084947662 ubox
18 74 0.012916912 ubox
18 77 0.989800352 ubox
19 47 0.016497367 ubox
19 67 0.008063715 ubox
20 30 0.005962805 ubox
20 45 0.017974211 ubox
20 47 0.005082177 ubox
20 55 0.058260476 ubox
20 60 0.003887516 ubox
20 62 0.013579565 ubox
20 67 0.082264107 ubox
20 75 0.992912358 ubox
20 78 0.005644806 ubox
21 28 0.003246803 ubox
21 29 0.005487093 ubox
21 44 0.017998891 ubox
21 46 0.005198150 ubox
21 54 0.058183714 ubox
21 59 0.003887722 ubox
21 61 0.013640079 ubox
21 66 0.086640227 ubox
21 74 0.993535365 ubox
21 77 0.005629733 ubox
22 27 0.004054258 ubox
22 43 0.017974071 ubox
22 45 0.005183777 ubox
22 51 0.007848862 ubox
22 52 0.052683311 ubox
22 58 0.003840330 ubox
22 60 0.013635758 ubox
22 65 0.086648933 ubox
22 72 0.004504362 ubox
22 73 0.993627599 ubox
22 76 0.005518039 ubox
23 42 0.017946469 ubox
23 43 0.005325974 ubox
23 50 0.007896462 ubox
23 51 0.052807444 ubox
23 52 0.040219747 ubox
23 64 0.086640350 ubox
23 71 0.005931989 ubox
23 72 0.993626940 ubox
23 73 0.004750632 ubox
23 75 0.005389397 ubox
24 41 0.017904498 ubox
24 42 0.005438824 ubox
24 50 0.052766636 ubox
24 51 0.040393715 ubox
24 58 0.013415427 ubox
24 63 0.086580663 ubox
24 70 0.007062972 ubox
24 71 0.993601685 ubox
24 72 0.006584077 ubox
24 73 0.005164730 ubox
25 41 0.005439141 ubox
25 50 0.040323698 ubox
25 57 0.013412797 ubox
25 62 0.086452615 ubox
25 70 0.982136558 ubox
25 71 0.007929579 ubox
25 72 0.005143078 ubox
26 47 0.047671390 ubox
26 67 0.024130428 ubox
27 39 0.013311606 ubox
27 46 0.049480590 ubox
27 48 0.030553161 ubox
27 56 0.013161361 ubox
27 59 0.044743078 ubox
27 61 0.066837314 ubox
27 66 0.025655011 ubox
27 68 0.729298353 ubox
28 38 0.012462093 ubox
28 42 0.003791096 ubox
28 45 0.046466004 ubox
28 47 0.026885304 ubox
28 55 0.012696006 ubox
28 58 0.045124958 ubox
28 60 0.047233275 ubox
28 63 0.003596067 ubox
28 65 0.025435265 ubox
28 67 0.532171936 ubox
28 71 0.004174078 ubox
29 36 0.012363111 ubox
29 38 0.013493980 ubox
29 41 0.004197948 ubox
29 45 0.045502180 ubox
29 47 0.013683238 ubox
29 55 0.004158455 ubox
29 57 0.045155132 ubox
29 60 0.056525413 ubox
29 62 0.004704644 ubox
29 64 0.025346033 ubox
29 67 0.821995054 ubox
29 70 0.004593432 ubox
30 35 0.012374229 ubox
30 37 0.014303374 ubox
30 40 0.004300911 ubox
30 44 0.048505091 ubox
30 46 0.014933601 ubox
30 54 0.005377650 ubox
30 56 0.045144540 ubox
30 59 0.073558085 ubox
30 61 0.005443533 ubox
30 66 0.992057011 ubox
30 69 0.004880798 ubox
31 36 0.014244579 ubox
31 42 0.050982909 ubox
31 43 0.040356237 ubox
31 45 0.013136932 ubox
31 51 0.011520431 ubox
31 52 0.009991107 ubox
31 55 0.042982718 ubox
31 58 0.073654357 ubox
31 60 0.003867599 ubox
31 63 0.004778679 ubox
31 65 0.993319279 ubox
32 38 0.004302176 ubox
32 41 0.057649785 ubox
32 42 0.028814522 ubox
32 45 0.007997406 ubox
32 50 0.012254158 ubox
32 51 0.009728820 ubox
32 55 0.011470296 ubox
32 57 0.073652599 ubox
32 60 0.006731504 ubox
32 62 0.004434482 ubox
32 64 0.993216754 ubox
32 67 0.004771685 ubox
33 37 0.004282383 ubox
33 39 0.004985514 ubox
33 40 0.063514760 ubox
33 44 0.010684739 ubox
33 48 0.003334083 ubox
33 54 0.016135346 ubox
33 56 0.073634059 ubox
33 59 0.008028196 ubox
33 61 0.004114304 ubox
33 66 0.004761969 ubox
34 38 0.005557445 ubox
34 42 0.014967454 ubox
34 43 0.010099558 ubox
34 51 0.048622473 ubox
34 52 0.031779400 ubox
34 55 0.062632729 ubox
34 58 0.008235376 ubox
34 63 0.993555403 ubox
35 41 0.017692041 ubox
35 42 0.009383833 ubox
35 47 0.061404920 ubox
35 50 0.052490778 ubox
35 51 0.030455783 ubox
35 55 0.004245493 ubox
35 57 0.008282848 ubox
35 62 0.993683446 ubox
36 40 0.017938796 ubox
36 46 0.063712426 ubox
36 48 0.058834978 ubox
36 54 0.005894221 ubox
36 56 0.008285185 ubox
36 61 0.993673518 ubox
37 45 0.063774930 ubox
37 47 0.059373709 ubox
37 55 0.008295051 ubox
37 60 0.993679157 ubox
38 44 0.063770253 ubox
38 46 0.059404057 ubox
38 54 0.008288353 ubox
38 59 0.993680177 ubox
39 43 0.059657457 ubox
39 45 0.059286921 ubox
39 51 0.005586826 ubox
39 52 0.007240153 ubox
39 58 0.993669140 ubox
40 50 0.005602562 ubox
40 51 0.007194154 ubox
40 57 0.992134003 ubox
41 56 0.904435973 ubox
43 56 0.399463529 ubox
44 55 0.983157540 ubox
44 57 0.037528676 ubox
45 54 0.986706954 ubox
45 56 0.050940788 ubox
46 55 0.092762434 ubox
47 53 0.228229931 ubox
47 54 0.091478801 ubox
48 52 0.234135346 ubox
48 55 0.007495938 ubox
63 81 0.010762385 ubox
64 80 0.010940903 ubox
64 81 0.005342231 ubox
65 80 0.005501147 ubox
66 78 0.018109707 ubox
67 77 0.018142756 ubox
68 76 0.018515964 ubox
69 75 0.018563800 ubox
69 78 0.004466054 ubox
70 74 0.018429551 ubox
70 77 0.004470428 ubox
72 81 0.044103613 ubox
73 80 0.045727294 ubox
75 81 0.010260686 ubox
76 80 0.010795320 ubox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
20 75 0.9500000 lbox
21 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
showpage
end
%%EOF
