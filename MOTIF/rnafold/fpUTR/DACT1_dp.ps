%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DACT1)
} def

/sequence { (\
GGCGGUCGCGCGCAGGACUCGAGGGCUUCUAGCCACCGUCCCCGCCAGCGCCGCGCCCCGCCACAGGGCGGCAUGAGCCCACCCGCGGCCGCAGCCCUAGCGCCCUGCUCCUCCGCCUGGGCGGCCCGGCUGCGGUGACGGCUCUCGCUGCCCGACUGGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.020301042 ubox
1 57 0.026975664 ubox
1 59 0.004235191 ubox
1 62 0.005207933 ubox
1 164 0.017449857 ubox
2 51 0.020316058 ubox
2 54 0.998403198 ubox
2 56 0.027173028 ubox
2 58 0.004261832 ubox
2 61 0.005216162 ubox
2 163 0.007158579 ubox
3 50 0.020299507 ubox
3 53 0.999279716 ubox
3 55 0.027065057 ubox
3 60 0.005219672 ubox
3 162 0.007027809 ubox
4 49 0.020006114 ubox
4 52 0.999329253 ubox
4 54 0.024886905 ubox
4 57 0.009438662 ubox
4 59 0.005116435 ubox
5 51 0.999034952 ubox
5 54 0.010441733 ubox
5 56 0.009478712 ubox
5 57 0.003191189 ubox
5 58 0.005011513 ubox
6 48 0.003881321 ubox
6 50 0.213940247 ubox
6 53 0.013005428 ubox
7 50 0.975314816 ubox
7 53 0.008893461 ubox
7 55 0.010952652 ubox
8 45 0.015243822 ubox
8 49 0.997819460 ubox
8 51 0.032236972 ubox
8 52 0.008348594 ubox
8 54 0.011431714 ubox
9 44 0.015266601 ubox
9 48 0.995108353 ubox
9 50 0.037643861 ubox
9 53 0.011434850 ubox
10 43 0.015146102 ubox
10 45 0.756571668 ubox
10 49 0.040192072 ubox
10 51 0.011259810 ubox
10 52 0.008090511 ubox
11 44 0.759919178 ubox
11 48 0.040078590 ubox
11 50 0.013931688 ubox
12 43 0.754855137 ubox
12 45 0.639581575 ubox
12 49 0.013968332 ubox
13 44 0.640026487 ubox
13 48 0.013940684 ubox
15 40 0.031720977 ubox
15 41 0.864147701 ubox
15 42 0.365444898 ubox
15 43 0.338883798 ubox
15 46 0.013086648 ubox
16 39 0.029987068 ubox
16 40 0.869691755 ubox
16 41 0.354358070 ubox
16 42 0.338554260 ubox
16 45 0.013098900 ubox
17 39 0.859486521 ubox
18 38 0.698382298 ubox
20 38 0.707960077 ubox
21 37 0.951504565 ubox
21 40 0.004316632 ubox
22 39 0.004229536 ubox
23 34 0.033414839 ubox
23 37 0.022609322 ubox
24 33 0.030262844 ubox
24 34 0.999227464 ubox
24 36 0.016663396 ubox
24 37 0.003664708 ubox
25 33 0.999501342 ubox
25 36 0.003488752 ubox
26 32 0.999328000 ubox
27 31 0.900278180 ubox
53 163 0.008768434 ubox
54 162 0.008852399 ubox
55 163 0.992641705 ubox
56 161 0.059108756 ubox
56 162 0.991614950 ubox
57 160 0.065885175 ubox
57 161 0.988604195 ubox
57 162 0.101023837 ubox
58 159 0.071914218 ubox
58 160 0.985274918 ubox
58 161 0.124330314 ubox
58 162 0.051715850 ubox
59 158 0.077444465 ubox
59 159 0.954389765 ubox
59 160 0.143305302 ubox
59 161 0.052834270 ubox
60 157 0.074415802 ubox
60 163 0.004266647 ubox
61 159 0.285897572 ubox
61 160 0.004765672 ubox
61 162 0.004260274 ubox
62 158 0.374481319 ubox
62 159 0.006313874 ubox
62 161 0.004240440 ubox
63 157 0.363047432 ubox
64 158 0.042198917 ubox
65 157 0.041845014 ubox
66 153 0.999436190 ubox
66 156 0.020731125 ubox
67 152 0.999981433 ubox
67 153 0.003904593 ubox
68 151 0.999989599 ubox
69 150 0.999968737 ubox
70 149 0.999238380 ubox
71 148 0.999983489 ubox
72 147 0.999229253 ubox
75 144 0.999277987 ubox
75 146 0.021057126 ubox
76 143 0.999596097 ubox
76 145 0.021093904 ubox
77 142 0.999761106 ubox
77 144 0.020880856 ubox
78 141 0.994993492 ubox
79 140 0.985098739 ubox
79 141 0.022469911 ubox
80 87 0.018807585 ubox
80 137 0.873380286 ubox
80 140 0.030224543 ubox
81 136 0.881883960 ubox
82 88 0.015024796 ubox
82 135 0.720421258 ubox
82 141 0.010439851 ubox
83 87 0.015944464 ubox
83 134 0.509466500 ubox
83 135 0.626893157 ubox
83 140 0.012120149 ubox
83 141 0.096684735 ubox
84 134 0.807851036 ubox
84 137 0.036489492 ubox
84 140 0.141092820 ubox
85 133 0.955003388 ubox
85 136 0.016932189 ubox
85 139 0.255481193 ubox
86 132 0.955113104 ubox
86 135 0.010488801 ubox
86 137 0.095309216 ubox
86 140 0.007246379 ubox
87 131 0.954419024 ubox
87 136 0.067271368 ubox
87 139 0.016462416 ubox
88 130 0.955136038 ubox
88 136 0.286260765 ubox
89 129 0.955140874 ubox
89 135 0.295543836 ubox
90 128 0.954479724 ubox
90 134 0.295813054 ubox
91 101 0.005760717 ubox
91 125 0.337240321 ubox
91 127 0.887604594 ubox
91 133 0.296120022 ubox
92 100 0.008446584 ubox
92 124 0.368686760 ubox
92 132 0.296123771 ubox
93 131 0.296057328 ubox
94 101 0.020163980 ubox
94 122 0.516488624 ubox
94 125 0.795019795 ubox
94 130 0.296127357 ubox
95 100 0.021072166 ubox
95 121 0.517168653 ubox
95 124 0.794343705 ubox
95 129 0.295647316 ubox
96 120 0.516789134 ubox
96 121 0.037021242 ubox
96 123 0.714551355 ubox
96 124 0.060287398 ubox
96 128 0.294655016 ubox
96 129 0.016865055 ubox
97 119 0.516328505 ubox
97 120 0.051133193 ubox
97 121 0.016967298 ubox
97 123 0.070736461 ubox
97 124 0.014629267 ubox
97 128 0.023828187 ubox
98 119 0.055684368 ubox
98 120 0.014050244 ubox
98 123 0.008141567 ubox
99 109 0.017543959 ubox
99 118 0.140069261 ubox
100 108 0.019218483 ubox
100 116 0.500724982 ubox
100 117 0.135485908 ubox
100 122 0.069186547 ubox
100 125 0.111083356 ubox
101 107 0.019242986 ubox
101 115 0.502867048 ubox
101 121 0.068601052 ubox
101 123 0.456232547 ubox
101 124 0.078802311 ubox
102 106 0.011919072 ubox
102 108 0.046873110 ubox
102 114 0.487704646 ubox
102 116 0.127360402 ubox
102 122 0.851259895 ubox
102 125 0.005697416 ubox
103 107 0.050905022 ubox
103 115 0.127167733 ubox
103 120 0.067976486 ubox
103 121 0.851522812 ubox
103 124 0.005639162 ubox
104 119 0.067978808 ubox
104 120 0.851565405 ubox
104 121 0.004564711 ubox
104 123 0.005501557 ubox
105 119 0.851230242 ubox
105 120 0.005935713 ubox
105 124 0.004502553 ubox
106 115 0.016601044 ubox
106 119 0.006502156 ubox
106 123 0.004700733 ubox
107 114 0.025709379 ubox
107 116 0.847733455 ubox
107 118 0.004440259 ubox
107 122 0.009147009 ubox
108 115 0.847314054 ubox
108 121 0.009135023 ubox
109 120 0.006471493 ubox
110 119 0.006442340 ubox
110 120 0.007515933 ubox
111 119 0.007570323 ubox
113 120 0.004339497 ubox
114 119 0.004374551 ubox
115 122 0.003559561 ubox
116 121 0.003548960 ubox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
55 163 0.9500000 lbox
56 162 0.9500000 lbox
57 161 0.9500000 lbox
58 160 0.9500000 lbox
59 159 0.9500000 lbox
66 153 0.9500000 lbox
67 152 0.9500000 lbox
68 151 0.9500000 lbox
69 150 0.9500000 lbox
70 149 0.9500000 lbox
71 148 0.9500000 lbox
72 147 0.9500000 lbox
75 144 0.9500000 lbox
76 143 0.9500000 lbox
77 142 0.9500000 lbox
78 141 0.9500000 lbox
79 140 0.9500000 lbox
80 137 0.9500000 lbox
81 136 0.9500000 lbox
82 135 0.9500000 lbox
83 134 0.9500000 lbox
85 133 0.9500000 lbox
86 132 0.9500000 lbox
87 131 0.9500000 lbox
88 130 0.9500000 lbox
89 129 0.9500000 lbox
90 128 0.9500000 lbox
91 127 0.9500000 lbox
94 125 0.9500000 lbox
95 124 0.9500000 lbox
96 123 0.9500000 lbox
102 122 0.9500000 lbox
103 121 0.9500000 lbox
104 120 0.9500000 lbox
105 119 0.9500000 lbox
107 116 0.9500000 lbox
108 115 0.9500000 lbox
showpage
end
%%EOF
