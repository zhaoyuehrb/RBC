%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RIMS4)
} def

/sequence { (\
CAAGCUGCCCAAGCCGCCCGCCGCCGCCGCCGCCGCCGCGGCCGAGGCGCCCGGCGCCGGCGCGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.011834091 ubox
2 6 0.010103702 ubox
4 14 0.951718434 ubox
4 17 0.016872375 ubox
4 63 0.003565285 ubox
4 67 0.004503988 ubox
5 13 0.953946900 ubox
5 16 0.020123356 ubox
5 62 0.003489245 ubox
5 65 0.007609893 ubox
5 66 0.003842411 ubox
6 12 0.949697837 ubox
6 64 0.007891878 ubox
7 14 0.108224622 ubox
7 15 0.011000514 ubox
7 61 0.003967776 ubox
7 63 0.008168990 ubox
7 67 0.234395328 ubox
8 13 0.108564482 ubox
8 60 0.003968620 ubox
8 62 0.008167741 ubox
8 66 0.237127882 ubox
9 59 0.003962152 ubox
9 60 0.005896750 ubox
9 65 0.237153276 ubox
10 59 0.005888786 ubox
10 64 0.236848330 ubox
13 55 0.007015356 ubox
13 61 0.235298087 ubox
13 63 0.027293683 ubox
14 54 0.007017330 ubox
14 60 0.235345991 ubox
14 62 0.019397122 ubox
14 65 0.003928002 ubox
15 53 0.007017034 ubox
15 59 0.235325096 ubox
15 62 0.022622569 ubox
15 64 0.004428861 ubox
16 52 0.007000708 ubox
16 55 0.004484582 ubox
16 57 0.043922344 ubox
16 58 0.229775623 ubox
16 61 0.029826143 ubox
16 63 0.004751106 ubox
16 67 0.964049132 ubox
17 54 0.004736623 ubox
17 56 0.061314311 ubox
17 60 0.029765016 ubox
17 62 0.004736777 ubox
17 66 0.971177659 ubox
18 53 0.004665079 ubox
18 54 0.058741701 ubox
18 59 0.029554202 ubox
18 60 0.005151089 ubox
18 65 0.971359001 ubox
19 49 0.007249769 ubox
19 53 0.058749261 ubox
19 56 0.227107822 ubox
19 59 0.005526026 ubox
19 64 0.971342218 ubox
20 48 0.007318141 ubox
20 50 0.006248350 ubox
20 52 0.058120545 ubox
20 55 0.229623051 ubox
20 57 0.007371669 ubox
20 58 0.005843621 ubox
20 61 0.004127803 ubox
20 63 0.971118278 ubox
20 67 0.004777251 ubox
21 47 0.007326436 ubox
21 49 0.004766220 ubox
21 54 0.229640369 ubox
21 56 0.005230216 ubox
21 60 0.004380660 ubox
21 62 0.686778492 ubox
21 66 0.004775615 ubox
22 46 0.007316226 ubox
22 49 0.057869766 ubox
22 53 0.229567576 ubox
22 56 0.008210199 ubox
22 59 0.004649390 ubox
22 62 0.686562853 ubox
22 65 0.003715061 ubox
23 42 0.006831945 ubox
23 48 0.059300969 ubox
23 50 0.023392076 ubox
23 52 0.226872971 ubox
23 55 0.009740911 ubox
23 58 0.004569466 ubox
23 61 0.970936523 ubox
23 67 0.006000395 ubox
24 41 0.006912440 ubox
24 47 0.059475352 ubox
24 49 0.017980227 ubox
24 54 0.009742571 ubox
24 60 0.971167839 ubox
24 65 0.005552075 ubox
24 66 0.005897867 ubox
25 40 0.006922429 ubox
25 46 0.059454667 ubox
25 49 0.227248731 ubox
25 53 0.009693943 ubox
25 56 0.004846163 ubox
25 59 0.971141417 ubox
25 62 0.005541051 ubox
25 64 0.006461083 ubox
25 65 0.005746961 ubox
26 39 0.006926586 ubox
26 42 0.021271266 ubox
26 43 0.004937933 ubox
26 48 0.229376695 ubox
26 50 0.006609104 ubox
26 52 0.009384070 ubox
26 55 0.005980924 ubox
26 57 0.067760181 ubox
26 58 0.966183123 ubox
26 61 0.012420112 ubox
26 63 0.006709543 ubox
27 38 0.006918587 ubox
27 41 0.021374348 ubox
27 47 0.229384872 ubox
27 49 0.004719466 ubox
27 54 0.006179033 ubox
27 56 0.067766328 ubox
27 60 0.012432272 ubox
27 62 0.004755323 ubox
28 40 0.021374282 ubox
28 44 0.029444974 ubox
28 46 0.228979911 ubox
28 49 0.011032798 ubox
28 53 0.006173688 ubox
28 56 0.965938765 ubox
28 59 0.012437718 ubox
28 62 0.009444922 ubox
29 36 0.006908242 ubox
29 39 0.021369154 ubox
29 42 0.232552764 ubox
29 43 0.025374283 ubox
29 48 0.012043966 ubox
29 52 0.006056170 ubox
29 55 0.970231185 ubox
29 57 0.013540024 ubox
29 58 0.011906316 ubox
29 61 0.016779967 ubox
30 35 0.006897514 ubox
30 38 0.020326873 ubox
30 41 0.234109617 ubox
30 47 0.012048029 ubox
30 54 0.970249922 ubox
30 56 0.010080664 ubox
30 60 0.016794438 ubox
31 38 0.006532054 ubox
31 40 0.234109561 ubox
31 44 0.018221242 ubox
31 46 0.012027115 ubox
31 49 0.006158998 ubox
31 53 0.970154452 ubox
31 56 0.014713059 ubox
31 59 0.016801880 ubox
32 37 0.008799520 ubox
32 39 0.234107636 ubox
32 42 0.046993275 ubox
32 43 0.012999352 ubox
32 48 0.010294364 ubox
32 50 0.093162044 ubox
32 52 0.959659626 ubox
32 55 0.017264964 ubox
32 57 0.015537727 ubox
32 58 0.016760277 ubox
33 38 0.233464308 ubox
33 41 0.048814865 ubox
33 47 0.010925756 ubox
33 49 0.072285292 ubox
33 54 0.017269374 ubox
33 56 0.011027785 ubox
34 40 0.048813689 ubox
34 46 0.010915808 ubox
34 49 0.960184003 ubox
34 53 0.017255423 ubox
34 56 0.020919214 ubox
35 39 0.045666548 ubox
35 42 0.008280139 ubox
35 48 0.968856652 ubox
35 50 0.041886470 ubox
35 52 0.017044840 ubox
35 55 0.024207016 ubox
36 41 0.008344965 ubox
36 47 0.968892179 ubox
36 49 0.029928115 ubox
36 54 0.024215596 ubox
37 44 0.014516636 ubox
37 46 0.968754830 ubox
37 49 0.038708304 ubox
37 53 0.024221286 ubox
38 43 0.028825222 ubox
38 48 0.048691174 ubox
38 50 0.017508816 ubox
38 52 0.024226898 ubox
39 47 0.048693971 ubox
39 49 0.017520844 ubox
40 48 0.014498374 ubox
40 51 0.026299843 ubox
41 48 0.011454072 ubox
41 50 0.026304411 ubox
42 47 0.015099519 ubox
42 49 0.026008440 ubox
43 49 0.003822354 ubox
44 48 0.004938417 ubox
46 52 0.003613617 ubox
46 58 0.035935375 ubox
47 51 0.003560195 ubox
47 57 0.036380963 ubox
48 56 0.036384355 ubox
49 55 0.036380971 ubox
50 54 0.036116806 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
showpage
end
%%EOF
