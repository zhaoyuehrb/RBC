%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC61)
} def

/sequence { (\
UUCGUCAGUUGAACCGCUCGCGAGGAGGGUUGCUAGUGGAGAAGCAACCUUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.030663864 ubox
1 23 0.025884034 ubox
1 24 0.708885081 ubox
1 25 0.035608415 ubox
1 26 0.011553773 ubox
1 27 0.020505269 ubox
1 43 0.007515701 ubox
1 53 0.003281844 ubox
2 12 0.037919253 ubox
2 22 0.005391231 ubox
2 23 0.962920925 ubox
2 24 0.018291632 ubox
2 25 0.011455956 ubox
2 26 0.049214664 ubox
2 42 0.008646487 ubox
2 53 0.006651980 ubox
3 11 0.038696307 ubox
3 16 0.004206678 ubox
3 20 0.004962440 ubox
3 22 0.986173742 ubox
3 24 0.009987494 ubox
3 25 0.061037500 ubox
3 41 0.008768917 ubox
3 52 0.008597305 ubox
4 10 0.036212509 ubox
4 14 0.005745625 ubox
4 15 0.004308927 ubox
4 19 0.005500117 ubox
4 21 0.986616398 ubox
4 48 0.003726904 ubox
4 51 0.007457904 ubox
4 54 0.138703041 ubox
5 12 0.011249045 ubox
5 13 0.004569539 ubox
5 20 0.978181306 ubox
5 23 0.061339554 ubox
5 39 0.008499943 ubox
5 47 0.003641635 ubox
5 53 0.138888593 ubox
6 11 0.013080984 ubox
6 22 0.061348585 ubox
6 24 0.003377226 ubox
6 38 0.008735558 ubox
6 52 0.139047336 ubox
7 18 0.970303920 ubox
7 34 0.003788382 ubox
7 37 0.008597031 ubox
7 50 0.027156551 ubox
7 51 0.126286952 ubox
8 14 0.012986969 ubox
8 17 0.986110852 ubox
8 21 0.048687176 ubox
8 33 0.004124631 ubox
8 45 0.026858378 ubox
8 48 0.123742540 ubox
8 49 0.027345809 ubox
8 50 0.036282099 ubox
8 54 0.005433355 ubox
9 13 0.012340907 ubox
9 16 0.943505981 ubox
9 20 0.035355739 ubox
9 32 0.003998422 ubox
9 44 0.027108787 ubox
9 47 0.128954532 ubox
9 53 0.005405428 ubox
10 16 0.129885207 ubox
10 20 0.042875021 ubox
10 43 0.026555424 ubox
10 46 0.129462811 ubox
10 52 0.004965123 ubox
11 15 0.175457641 ubox
11 19 0.058964542 ubox
11 45 0.129425391 ubox
11 51 0.003759754 ubox
12 18 0.057210190 ubox
12 31 0.015154318 ubox
12 50 0.003433968 ubox
13 30 0.016370149 ubox
14 25 0.041497208 ubox
14 29 0.016641359 ubox
14 39 0.132330271 ubox
14 53 0.012693469 ubox
15 22 0.011865855 ubox
15 24 0.041685033 ubox
15 28 0.016728694 ubox
15 38 0.132518928 ubox
15 52 0.012744580 ubox
16 21 0.011797437 ubox
16 37 0.132474926 ubox
16 51 0.009049554 ubox
16 54 0.016484242 ubox
17 24 0.004189292 ubox
17 25 0.004518167 ubox
17 27 0.040717713 ubox
17 36 0.132522828 ubox
17 53 0.016500875 ubox
18 23 0.003931890 ubox
18 24 0.003589150 ubox
18 25 0.006936038 ubox
18 26 0.041513912 ubox
18 35 0.130384330 ubox
18 52 0.015275322 ubox
19 24 0.009613221 ubox
19 25 0.041871680 ubox
19 52 0.005177671 ubox
20 33 0.132387505 ubox
20 51 0.004021726 ubox
20 54 0.022933201 ubox
21 32 0.132519385 ubox
21 53 0.022940363 ubox
22 31 0.132057103 ubox
23 30 0.129647328 ubox
23 31 0.004869783 ubox
23 51 0.019679893 ubox
24 30 0.005357432 ubox
24 50 0.009180064 ubox
24 51 0.009314512 ubox
24 55 0.423350579 ubox
25 49 0.004569032 ubox
25 50 0.005491024 ubox
25 51 0.087748638 ubox
25 54 0.432145785 ubox
26 50 0.089103876 ubox
26 51 0.877157549 ubox
27 49 0.074116775 ubox
27 50 0.974634174 ubox
27 51 0.032411457 ubox
27 55 0.003364512 ubox
28 48 0.054227512 ubox
28 49 0.988166229 ubox
28 50 0.005049205 ubox
29 48 0.989530204 ubox
29 49 0.003652053 ubox
30 47 0.990367151 ubox
31 46 0.990472739 ubox
32 45 0.991037498 ubox
32 54 0.012234093 ubox
33 41 0.004230638 ubox
33 44 0.991005832 ubox
33 53 0.012274831 ubox
34 40 0.008628295 ubox
34 43 0.983770033 ubox
34 52 0.012261118 ubox
35 51 0.012170389 ubox
36 50 0.011233903 ubox
36 54 0.003938992 ubox
37 53 0.003942966 ubox
38 49 0.012099922 ubox
39 48 0.012093403 ubox
39 51 0.003957645 ubox
40 50 0.004135269 ubox
41 49 0.004171636 ubox
44 54 0.006565675 ubox
45 53 0.006468926 ubox
1 24 0.9500000 lbox
2 23 0.9500000 lbox
3 22 0.9500000 lbox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
showpage
end
%%EOF
