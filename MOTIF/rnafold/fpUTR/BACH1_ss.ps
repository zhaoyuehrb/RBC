%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUACUCAGCCCGGUGGCUGUCGCGCGUGGAAUCGCGUAAGAAAAGCCGAGUUUGUGGCUGGGGAGAGAAGGCCACCGUGCUGAGCUGGAUUUAGCGAAGACUGGUUUUGGGGACCGGAGAGCCCAGGACUCCCUUUGUUGGAGUUUUGCCCACGCGUUGUAAUUAAGCCUCGCACAAUAUGGUUGAUGAUAAUUAGAAGCAUGCUUUCCACUGAACUUCCCGACAACAUUUGUUAUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[410.14364624 -16.75020599]
[396.17718506 -11.27865314]
[382.21072388 -5.80709982]
[368.24426270 -0.33554649]
[354.27777100 5.13600683]
[340.34683228 10.69735813]
[326.45196533 16.34827614]
[312.55712891 21.99919510]
[298.66226196 27.65011406]
[284.76739502 33.30103302]
[270.87252808 38.95195007]
[261.99780273 50.91391373]
[246.29953003 48.94557953]
[232.40467834 54.59649658]
[218.50981140 60.24741364]
[204.61494446 65.89833069]
[190.72009277 71.54925537]
[176.82522583 77.20017242]
[162.93037415 82.85108948]
[149.03550720 88.50200653]
[140.16079712 100.46397400]
[124.46250916 98.49563599]
[110.56764984 104.14655304]
[97.96310425 112.27830505]
[87.08692169 122.60829926]
[76.21073914 132.93827820]
[65.33454895 143.26826477]
[54.45837021 153.59825134]
[54.30204391 169.40177917]
[42.95839691 180.40618896]
[27.15741920 180.08279419]
[16.27354431 168.62344360]
[16.76398659 152.82675171]
[28.33777237 142.06465149]
[44.12837982 142.72207642]
[55.00456619 132.39208984]
[65.88074493 122.06210327]
[76.75692749 111.73211670]
[87.63311768 101.40212250]
[84.19381714 94.73719788]
[70.86396790 101.61579895]
[57.53400421 108.49417877]
[50.65584564 95.16410065]
[63.98536682 88.28594971]
[77.31521606 81.40734863]
[73.87591553 74.74242401]
[59.15479279 77.62141418]
[44.43367004 80.50039673]
[29.71254921 83.37937927]
[14.99142647 86.25836945]
[6.37783480 99.50908661]
[-9.09968567 102.70626068]
[-22.25859833 93.95305634]
[-25.29195213 78.44259644]
[-16.40011215 65.37696075]
[-0.85845071 62.50776291]
[12.11244106 71.53724670]
[26.83356285 68.65825653]
[41.55468750 65.77927399]
[56.27581024 62.90029144]
[70.99693298 60.02130508]
[76.65422058 46.12903976]
[88.70551300 37.19783401]
[103.64278412 35.82748032]
[117.11795044 42.41686630]
[125.20851135 55.04789352]
[125.55938721 70.04379272]
[118.06843567 83.03939819]
[104.91672516 90.25169373]
[118.81158447 84.60077667]
[128.68016052 72.23461914]
[143.38459778 74.60714722]
[157.27944946 68.95623016]
[171.17431641 63.30530930]
[185.06916809 57.65439224]
[198.96403503 52.00347519]
[212.85888672 46.35255432]
[226.75375366 40.70163727]
[240.64860535 35.05072021]
[250.51718140 22.68456268]
[265.22161865 25.05709076]
[279.11648560 19.40617180]
[293.01135254 13.75525379]
[306.90618896 8.10433483]
[320.80105591 2.45341682]
[334.69592285 -3.19750142]
[341.44812012 -9.31589699]
[348.80624390 -8.83045673]
[362.77270508 -14.30200958]
[376.73916626 -19.77356339]
[390.70562744 -25.24511719]
[404.67208862 -30.71667099]
[417.83358765 -50.60060120]
[440.55072021 -46.33689499]
[454.05325317 -52.86999512]
[467.55578613 -59.40309906]
[481.05831909 -65.93620300]
[494.56085205 -72.46930695]
[508.06341553 -79.00241089]
[521.56591797 -85.53551483]
[524.47430420 -89.81734467]
[528.34234619 -92.31935883]
[532.33721924 -92.97323608]
[535.71844482 -92.04885101]
[549.46319580 -98.05565643]
[552.89770508 -113.07266235]
[564.38189697 -123.07099915]
[579.37402344 -124.37443542]
[592.10656738 -116.69189453]
[605.85131836 -122.69870758]
[619.59606934 -128.70552063]
[633.34082031 -134.71232605]
[647.08557129 -140.71913147]
[660.83032227 -146.72593689]
[674.57507324 -152.73274231]
[681.03985596 -173.58470154]
[700.57757568 -182.66581726]
[720.15850830 -174.38760376]
[733.48840332 -181.26620483]
[746.81823730 -188.14480591]
[760.14807129 -195.02340698]
[773.47790527 -201.90200806]
[786.80773926 -208.78060913]
[800.13763428 -215.65919495]
[801.16662598 -238.58946228]
[824.25445557 -254.54562378]
[830.26129150 -268.29037476]
[836.26806641 -282.03512573]
[842.27490234 -295.77987671]
[848.28167725 -309.52465820]
[854.28851318 -323.26940918]
[860.29528809 -337.01416016]
[866.30212402 -350.75891113]
[872.30889893 -364.50366211]
[865.19592285 -378.42984009]
[868.74896240 -393.65844727]
[881.29046631 -402.99893188]
[896.89868164 -402.04104614]
[908.20391846 -391.23709106]
[909.86816406 -375.68832397]
[901.10559082 -362.73638916]
[886.05364990 -358.49685669]
[880.04687500 -344.75210571]
[874.04003906 -331.00735474]
[868.03326416 -317.26260376]
[862.02642822 -303.51782227]
[856.01965332 -289.77307129]
[850.01281738 -276.02832031]
[844.00604248 -262.28356934]
[837.99920654 -248.53881836]
[842.42321777 -242.48255920]
[851.20886230 -254.64038086]
[865.48651123 -250.04151917]
[865.52453613 -235.04156494]
[851.27117920 -230.37005615]
[855.69519043 -224.31379700]
[870.61572266 -225.85610962]
[878.80883789 -229.84355164]
[885.73803711 -227.32096863]
[900.67718506 -228.67105103]
[913.72491455 -237.61904907]
[927.09692383 -231.05867004]
[942.03607178 -232.40875244]
[956.97515869 -233.75885010]
[971.91430664 -235.10893250]
[986.85339355 -236.45901489]
[1001.79254150 -237.80909729]
[1016.68048096 -239.63926697]
[1031.50183105 -241.94763184]
[1046.32312012 -244.25598145]
[1061.14440918 -246.56434631]
[1066.02648926 -261.07034302]
[1077.09875488 -271.63751221]
[1091.81665039 -275.83767700]
[1106.79821777 -272.70559692]
[1118.60083008 -262.96102905]
[1124.51232910 -248.84321594]
[1123.17431641 -233.59631348]
[1114.89416504 -220.72395325]
[1101.57470703 -213.18409729]
[1086.27648926 -212.70936584]
[1072.51513672 -219.40882874]
[1063.45275879 -231.74302673]
[1048.63146973 -229.43466187]
[1033.81018066 -227.12631226]
[1018.98883057 -224.81794739]
[1029.46801758 -214.08541870]
[1027.74194336 -199.18505859]
[1015.08673096 -191.13240051]
[1000.85803223 -195.88061523]
[995.57495117 -209.91943359]
[1003.14263916 -222.86997986]
[988.20349121 -221.51989746]
[973.26440430 -220.16981506]
[958.32525635 -218.81971741]
[943.38616943 -217.46963501]
[928.44702148 -216.11955261]
[916.46783447 -207.26812744]
[902.02728271 -213.73193359]
[887.08813477 -212.38185120]
[872.15802002 -210.93562317]
[857.23754883 -209.39329529]
[841.01184082 -193.28472900]
[820.92828369 -191.84400940]
[807.01623535 -202.32934570]
[793.68634033 -195.45075989]
[780.35650635 -188.57215881]
[767.02667236 -181.69355774]
[753.69683838 -174.81495667]
[740.36694336 -167.93635559]
[727.03710938 -161.05775452]
[727.33563232 -152.50761414]
[724.84094238 -144.27873230]
[719.79431152 -137.26324463]
[712.71508789 -132.23121643]
[704.34759521 -129.74601746]
[695.58264160 -130.10154724]
[687.36303711 -133.28756714]
[680.58184814 -138.98799133]
[666.83709717 -132.98118591]
[653.09234619 -126.97438049]
[639.34759521 -120.96756744]
[625.60284424 -114.96076202]
[611.85809326 -108.95395660]
[598.11334229 -102.94714355]
[595.10260010 -88.38440704]
[583.96221924 -78.26726532]
[568.82373047 -76.63078308]
[555.46997070 -84.31090546]
[541.72521973 -78.30410004]
[528.09906006 -72.03297424]
[514.59649658 -65.49987030]
[501.09396362 -58.96676636]
[487.59143066 -52.43366241]
[474.08889771 -45.90055847]
[460.58636475 -39.36745834]
[447.08380127 -32.83435440]
[446.74368286 -26.42058754]
[444.43139648 -20.37338638]
[440.34106445 -15.28879833]
[434.84362793 -11.67829132]
[428.45333862 -9.91738129]
[421.77972412 -10.20678043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 88]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[13 79]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[22 70]
[23 69]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[94 237]
[95 236]
[96 235]
[97 234]
[98 233]
[99 232]
[100 231]
[104 230]
[105 229]
[109 225]
[110 224]
[111 223]
[112 222]
[113 221]
[114 220]
[115 219]
[118 211]
[119 210]
[120 209]
[121 208]
[122 207]
[123 206]
[124 205]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[156 202]
[157 201]
[159 200]
[160 199]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[168 186]
[169 185]
[170 184]
[171 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
