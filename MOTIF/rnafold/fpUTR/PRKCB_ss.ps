%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGACGAGCGGCAGCAGCUGGGCGAGUGACAGCCCCGGCUCCGCGCGCCGCGGCCGCCAGAGCCGGCGCAGGGGAAGCGCCCGCGGCCCCGGGUGCAGCAGCGGCCGCCGCCUCCCGCGCCUCCCCGGCCCGCAGCCCGCGGUCCCGCGGCCCCGGGGCCGGCACCUCUCGGGCUCCGGCUCCCCGCGCGCAAG\
) } def
/len { sequence length } bind def

/coor [
[23.63173866 661.78393555]
[16.08550644 664.12628174]
[12.08839989 678.58386230]
[8.09129238 693.04150391]
[4.09418535 707.49914551]
[12.10456181 721.12298584]
[8.05441856 736.39953613]
[-5.65336561 744.26538086]
[-20.88620567 740.05395508]
[-28.60672760 726.26379395]
[-24.23448372 711.07635498]
[-10.36344719 703.50207520]
[-6.36633968 689.04443359]
[-2.36923265 674.58679199]
[1.62787449 660.12915039]
[-5.86342812 639.82733154]
[10.27387905 624.28723145]
[13.34597874 609.60522461]
[11.63693237 602.40661621]
[16.58504868 594.71545410]
[19.88970566 580.08398438]
[23.07818604 565.42681885]
[26.15028572 550.74475098]
[29.22238541 536.06274414]
[32.29448700 521.38067627]
[30.58543968 514.18206787]
[35.53355408 506.49090576]
[38.83821106 491.85946655]
[42.14287186 477.22802734]
[45.44752884 462.59658813]
[35.49993515 451.54290771]
[33.95031738 436.57418823]
[41.60141754 423.40933228]
[55.70029449 417.20223999]
[59.00495148 402.57080078]
[62.30960846 387.93933105]
[65.61426544 373.30789185]
[68.91892242 358.67645264]
[71.17137146 343.84652710]
[72.36011505 328.89370728]
[73.54886627 313.94088745]
[74.73761749 298.98806763]
[75.92636871 284.03524780]
[77.11511230 269.08242798]
[78.30386353 254.12959290]
[79.49261475 239.17677307]
[69.83885956 230.63310242]
[66.82689667 217.89834595]
[71.77543640 205.57395935]
[83.08448792 198.24644470]
[84.51033020 183.31437683]
[85.93616486 168.38229370]
[87.36200714 153.45021057]
[88.78784943 138.51814270]
[90.21369171 123.58605957]
[91.63952637 108.65397644]
[92.82827759 93.70115662]
[93.77964020 78.73135376]
[94.73099518 63.76155853]
[95.68235779 48.79175568]
[86.23017883 41.56017303]
[81.49555969 30.77209854]
[82.55058289 19.15855408]
[89.01734924 9.59897327]
[99.19070435 4.40730572]
[100.61654663 -10.52477360]
[101.80529785 -25.47759438]
[102.75665283 -40.44739532]
[103.70801544 -55.41719437]
[101.12718201 -64.19084167]
[104.79508209 -70.61637115]
[105.98382568 -85.56919098]
[99.36452484 -99.93914032]
[108.08612823 -112.01319885]
[109.27487946 -126.96601868]
[110.46362305 -141.91883850]
[111.65237427 -156.87165833]
[112.84112549 -171.82447815]
[106.22182465 -186.19442749]
[114.94342804 -198.26849365]
[116.13217163 -213.22131348]
[117.32092285 -228.17413330]
[118.50967407 -243.12695312]
[105.96977234 -251.88470459]
[99.53959656 -265.65240479]
[100.85531616 -280.69021606]
[109.46381378 -292.96823120]
[122.97117615 -299.24649048]
[124.15992737 -314.19931030]
[125.34867859 -329.15213013]
[115.37068939 -341.11364746]
[116.78925323 -356.26098633]
[128.25421143 -365.69976807]
[129.44296265 -380.65258789]
[130.63171387 -395.60540771]
[124.01240540 -409.97537231]
[132.73400879 -422.04943848]
[133.92276001 -437.00225830]
[135.11151123 -451.95507812]
[127.57851410 -466.52166748]
[136.65367126 -480.18087769]
[153.00125122 -478.88122559]
[159.80424500 -463.95971680]
[150.06433105 -450.76632690]
[148.87557983 -435.81350708]
[147.68682861 -420.86068726]
[154.39115906 -407.56024170]
[145.58453369 -394.41665649]
[144.39578247 -379.46383667]
[143.20703125 -364.51101685]
[153.03663635 -353.37933350]
[152.04408264 -338.19812012]
[140.30149841 -327.96340942]
[139.11274719 -313.01055908]
[137.92399597 -298.05773926]
[150.26971436 -289.72415161]
[156.83013916 -276.24020386]
[155.75334167 -261.18341064]
[147.22862244 -248.60462952]
[133.46249390 -241.93821716]
[132.27374268 -226.98538208]
[131.08499146 -212.03256226]
[129.89624023 -197.07974243]
[136.60057068 -183.77932739]
[127.79394531 -170.63574219]
[126.60519409 -155.68290710]
[125.41645050 -140.73008728]
[124.22769928 -125.77726746]
[123.03894806 -110.82444763]
[129.74328613 -97.52402496]
[120.93665314 -84.38043976]
[119.74790192 -69.42761993]
[118.67781067 -54.46583557]
[117.72645569 -39.49603653]
[116.77509308 -24.52623558]
[119.21005249 -20.40642738]
[119.07546234 -14.71153450]
[115.54862213 -9.09893227]
[114.12278748 5.83314610]
[126.60673523 19.21165657]
[125.33627319 37.78585052]
[110.65215302 49.74311447]
[109.70079803 64.71291351]
[108.74943542 79.68271637]
[107.79808044 94.65251923]
[110.28952026 99.28151703]
[110.00394440 104.97721863]
[106.57160950 110.07981873]
[105.14576721 125.01190186]
[103.71992493 139.94398499]
[102.29409027 154.87605286]
[100.86824799 169.80813599]
[99.44240570 184.74021912]
[98.01656342 199.67228699]
[109.39855194 212.94976807]
[107.69520569 230.01562500]
[94.44543457 240.36552429]
[93.25668335 255.31834412]
[92.06793976 270.27117920]
[90.87918854 285.22399902]
[89.69043732 300.17681885]
[88.50168610 315.12963867]
[87.31294250 330.08245850]
[86.12419128 345.03527832]
[96.41382599 334.12091064]
[110.94300842 330.39224243]
[125.21685791 335.00277710]
[134.81951904 346.52618408]
[136.78021240 361.39749146]
[130.49238586 375.01599121]
[117.90128326 383.16854858]
[102.90218353 383.33300781]
[90.13533020 375.45852661]
[83.55036926 361.98110962]
[80.24571228 376.61254883]
[76.94105530 391.24398804]
[73.63639832 405.87545776]
[70.33174133 420.50689697]
[80.39421844 432.17105103]
[81.64440155 447.34637451]
[73.81172943 460.19601440]
[60.07897568 465.90124512]
[56.77431870 480.53268433]
[53.46965790 495.16412354]
[50.16500092 509.79556274]
[46.97652054 524.45275879]
[43.90442276 539.13482666]
[40.83232117 553.81683350]
[37.76022339 568.49890137]
[39.06616592 577.55053711]
[34.52115250 583.38867188]
[31.21649551 598.02008057]
[28.02801514 612.67730713]
[24.95591545 627.35931396]
[30.75718117 633.39483643]
[33.66181183 641.14593506]
[33.26474762 649.31970215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[17 194]
[18 193]
[20 192]
[21 191]
[22 189]
[23 188]
[24 187]
[25 186]
[27 185]
[28 184]
[29 183]
[30 182]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 145]
[58 144]
[59 143]
[60 142]
[65 139]
[66 138]
[67 135]
[68 134]
[69 133]
[71 132]
[72 131]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[80 123]
[81 122]
[82 121]
[83 120]
[88 115]
[89 114]
[90 113]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
