%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUCCUUUCACUUUCGGUCUCUGGCUGUCACCCGGCUUGGCCCCUUCCACACCCAACUGGGGCAAGCCUGACCCGGCGACAGGAGGCAUGAGGGGCCCCCGGCCGAA\
) } def
/len { sequence length } bind def

/coor [
[95.32923889 352.71908569]
[89.93366241 338.72308350]
[92.07472992 323.87667847]
[101.20503998 311.97555542]
[114.99032593 306.06234741]
[129.90618896 307.64886475]
[142.13986206 316.33029175]
[138.77249146 301.71316528]
[135.40512085 287.09600830]
[132.03775024 272.47888184]
[118.28066254 266.83261108]
[110.39295959 254.01666260]
[111.57805634 238.83612061]
[121.59042358 227.12890625]
[118.22305298 212.51176453]
[114.85567474 197.89462280]
[111.48830414 183.27748108]
[108.12093353 168.66033936]
[97.72396088 157.99488831]
[102.16575623 142.80998230]
[98.79837799 128.19284058]
[95.43100739 113.57570648]
[86.04165649 103.21559906]
[89.95185089 89.79166412]
[86.58448029 75.17453003]
[83.21710968 60.55738449]
[79.84973907 45.94024277]
[75.47681427 40.66738892]
[74.66262817 34.85503006]
[76.73026276 30.40130615]
[74.19525146 15.61706734]
[71.66024017 0.83282858]
[69.12522888 -13.95141029]
[65.58465576 -18.18297386]
[64.26096344 -22.88642311]
[64.94417572 -27.09824944]
[67.05823517 -30.09284019]
[65.78614807 -45.03880310]
[64.51406097 -59.98476410]
[63.24197006 -74.93072510]
[61.96987915 -89.87668610]
[60.69779205 -104.82265472]
[56.80275726 -113.25090790]
[59.60731506 -120.20858002]
[58.75868988 -135.18455505]
[57.91006470 -150.16053772]
[57.06143951 -165.13650513]
[42.69948959 -170.11676025]
[31.33996010 -180.21772766]
[24.71509552 -193.89907837]
[23.83513832 -209.07452393]
[28.83427620 -223.42991638]
[38.95017624 -234.77613831]
[52.64023972 -241.38301086]
[67.81682587 -242.24299622]
[82.16562653 -237.22497559]
[93.49854279 -227.09416199]
[100.08738708 -213.39541626]
[100.92741394 -198.21771240]
[95.89052582 -183.87553406]
[85.74481201 -172.55595398]
[72.03741455 -165.98513794]
[72.88603973 -151.00915527]
[73.73466492 -136.03318787]
[74.58329010 -121.05720520]
[75.64375305 -106.09474182]
[76.91584015 -91.14878082]
[78.18793488 -76.20281219]
[79.46002197 -61.25685501]
[80.73210907 -46.31089020]
[82.00419617 -31.36492920]
[83.90946198 -16.48642159]
[86.44448090 -1.70218372]
[88.97949219 13.08205509]
[91.51450348 27.86629295]
[94.46687317 42.57287216]
[97.83424377 57.19001389]
[101.20162201 71.80715179]
[104.56899261 86.42429352]
[113.95834351 96.78440094]
[110.04814911 110.20833588]
[113.41551971 124.82546997]
[116.78289032 139.44261169]
[127.42073059 151.15359497]
[122.73807526 165.29296875]
[126.10544586 179.91011047]
[129.47282410 194.52725220]
[132.84019470 209.14439392]
[136.20756531 223.76153564]
[150.33293152 229.90811157]
[158.04040527 243.04005432]
[156.55499268 258.01528931]
[146.65489197 269.11151123]
[150.02226257 283.72863770]
[153.38963318 298.34579468]
[156.75700378 312.96292114]
[162.15234375 326.95901489]
[169.46775818 340.05422974]
[176.78318787 353.14944458]
[184.09861755 366.24462891]
[197.10182190 377.12365723]
[190.24760437 392.63031006]
[173.44952393 390.33660889]
[171.00340271 373.56005859]
[163.68797302 360.46484375]
[156.37255859 347.36962891]
[149.05712891 334.27444458]
[145.81666565 348.92022705]
[135.82562256 360.10858154]
[121.63835907 364.97903442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 96]
[8 95]
[9 94]
[10 93]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[20 83]
[21 82]
[22 81]
[24 79]
[25 78]
[26 77]
[27 76]
[30 75]
[31 74]
[32 73]
[33 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[44 65]
[45 64]
[46 63]
[47 62]
[97 107]
[98 106]
[99 105]
[100 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
