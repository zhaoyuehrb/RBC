%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGGAGCCGGAGCGGAUCCUGGAGCCGGAGCGGAGCGGAGCGGAGCGGAGCCGGGGCGGAGCGGGCCGAGCGGGCCGAGCCAGCAGCCGAGCUGGGGGCGCGGGCGGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[142.87974548 354.41317749]
[140.45301819 339.61077881]
[130.75860596 328.30291748]
[136.16136169 313.43280029]
[133.73463440 298.63040161]
[131.30789185 283.82800293]
[115.24880219 276.74026489]
[106.49462891 261.34616089]
[108.65145111 243.61216736]
[121.05437469 230.53952026]
[117.82981873 215.89021301]
[114.60526276 201.24090576]
[111.38070679 186.59159851]
[98.73155212 178.81120300]
[95.25270844 164.00065613]
[103.49925995 150.78581238]
[100.27470398 136.13650513]
[97.05014801 121.48719788]
[81.70555878 114.89518738]
[74.56436157 98.27550507]
[81.28387451 79.99288940]
[68.64514923 71.91436768]
[56.00641632 63.83584595]
[43.36768341 55.75732803]
[30.72895241 47.67880630]
[15.48092461 50.86241913]
[2.77853537 42.48960876]
[-0.16258252 27.93332291]
[-12.80131340 19.85480499]
[-25.44004440 11.77628517]
[-39.82884216 17.27798271]
[-54.52641296 13.29867935]
[-63.95110703 1.56670833]
[-64.65194702 -13.28747654]
[-77.29067993 -21.36599541]
[-91.68687439 -15.57554245]
[-106.72894287 -19.38547897]
[-116.63291931 -31.33080864]
[-117.59051514 -46.81830978]
[-109.23351288 -59.89271927]
[-94.77536011 -65.52665710]
[-79.77549744 -61.55376816]
[-70.00169373 -49.50170517]
[-69.21216583 -34.00472641]
[-56.57342911 -25.92620850]
[-42.79785919 -31.52724838]
[-28.19288635 -27.89975548]
[-18.41001892 -16.23146820]
[-17.36152458 -0.86244637]
[-4.72279406 7.21607304]
[7.91593695 15.29459286]
[22.36180687 11.85185337]
[35.29435730 19.86457825]
[38.80747223 35.04007721]
[51.44620514 43.11859512]
[64.08493805 51.19711685]
[76.72366333 59.27563477]
[89.36239624 67.35415649]
[104.29505920 65.93444061]
[115.18498993 55.61894989]
[125.93424225 45.15694427]
[136.54084778 34.55034256]
[136.70954895 18.97442245]
[147.61723328 8.36891460]
[162.46545410 8.62572861]
[173.07206726 -1.98087287]
[183.67866516 -12.58747482]
[187.96575928 -27.81676674]
[202.43640137 -31.34521103]
[213.04299927 -41.95181274]
[216.76245117 -57.92359161]
[232.53062439 -62.42878342]
[244.12657166 -50.83283615]
[239.62138367 -35.06466293]
[223.64959717 -31.34521103]
[213.04299927 -20.73860931]
[209.51455688 -6.26797104]
[194.28526306 -1.98087287]
[183.67866516 8.62572861]
[173.07206726 19.23233032]
[173.32887268 34.08055115]
[162.72337341 44.98824692]
[147.14744568 45.15694427]
[136.54084778 55.76354599]
[134.00254822 62.81192780]
[125.50048065 66.50888062]
[114.61054993 76.82437134]
[124.04715729 91.53360748]
[122.30879974 107.67273712]
[111.69945526 118.26264191]
[114.92401123 132.91194153]
[118.14856720 147.56124878]
[131.18170166 156.09208679]
[134.24317932 170.99450684]
[126.03001404 183.36703491]
[129.25457764 198.01634216]
[132.47912598 212.66564941]
[135.70368958 227.31495667]
[147.86077881 230.82048035]
[157.28350830 239.15481567]
[162.19046021 250.65907288]
[161.68975830 263.08334351]
[155.94058228 274.02670288]
[146.11029053 281.40127563]
[148.53703308 296.20367432]
[150.96376038 311.00607300]
[160.83175659 323.37268066]
[155.25541687 337.18405151]
[157.68214417 351.98645020]
[171.22105408 359.81155396]
[176.51394653 374.52615356]
[171.06170654 389.18243408]
[157.43870544 396.86019897]
[142.07730103 393.93420410]
[132.23069763 381.78601074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[4 106]
[5 105]
[6 104]
[10 98]
[11 97]
[12 96]
[13 95]
[16 92]
[17 91]
[18 90]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[28 51]
[29 50]
[30 49]
[34 45]
[35 44]
[59 87]
[60 86]
[61 84]
[62 83]
[65 80]
[66 79]
[67 78]
[69 76]
[70 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
