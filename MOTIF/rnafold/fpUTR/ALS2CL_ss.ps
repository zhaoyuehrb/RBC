%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACAGCGCUCAGGUAAGGGCGCGACGAAGGGCGCGCGUCUGCGGACGGGUGUCUGCGCUCCACGCUUAGCUCGUCCAGGUGGGGGCUCCCGCCUCCUCGGCUGCUGCGGUCCCCGCCCAGCUCCUUGGUCCCGGCGGCAGUCAUCCCCCGGCCGUCCGAGUCCCUCGAGGCCCUGAGUCCGGCACCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[-156.30490112 273.39865112]
[-167.57603455 283.29620361]
[-182.21846008 286.55187988]
[-196.62165833 282.36288452]
[-207.23410034 271.76214600]
[-211.43898010 257.36355591]
[-208.19999695 242.71864319]
[-215.41778564 255.86791992]
[-222.63557434 269.01721191]
[-229.85336304 282.16647339]
[-237.07115173 295.31576538]
[-244.28894043 308.46502686]
[-239.62977600 323.56695557]
[-247.08767700 337.50091553]
[-262.23800659 342.00015259]
[-276.09234619 334.39535522]
[-280.43115234 319.19830322]
[-272.68029785 305.42514038]
[-257.43823242 301.24725342]
[-250.22044373 288.09796143]
[-243.00263977 274.94869995]
[-235.78485107 261.79940796]
[-228.56706238 248.65013123]
[-221.34927368 235.50085449]
[-228.46035767 222.29356384]
[-243.41122437 221.08035278]
[-258.36209106 219.86715698]
[-273.31292725 218.65394592]
[-288.26379395 217.44073486]
[-306.96679688 235.52912903]
[-335.44833374 226.67459106]
[-350.25207520 229.09306335]
[-365.05584717 231.51152039]
[-379.85958862 233.92999268]
[-394.66333008 236.34844971]
[-409.46710205 238.76692200]
[-421.83920288 248.62800598]
[-435.64746094 243.04396057]
[-450.45120239 245.46243286]
[-465.25497437 247.88088989]
[-480.05871582 250.29934692]
[-492.40350342 261.09466553]
[-507.83544922 255.54603577]
[-510.47949219 239.36145020]
[-497.61566162 229.19020081]
[-482.47717285 235.49560547]
[-467.67343140 233.07713318]
[-452.86968994 230.65867615]
[-438.06591797 228.24020386]
[-426.75265503 218.55210876]
[-411.88555908 223.96316528]
[-397.08178711 221.54470825]
[-382.27804565 219.12623596]
[-367.47430420 216.70777893]
[-352.67056274 214.28930664]
[-337.86679077 211.87084961]
[-335.80859375 197.01272583]
[-349.39752197 190.66122437]
[-362.98641968 184.30972290]
[-378.49676514 188.40957642]
[-391.28622437 178.72406006]
[-391.54382324 162.68307495]
[-379.07196045 152.59188843]
[-363.43795776 156.19160461]
[-356.63491821 170.72080994]
[-343.04602051 177.07231140]
[-329.45709229 183.42381287]
[-319.92007446 179.67018127]
[-310.09490967 179.30303955]
[-301.10229492 182.09191895]
[-293.88088989 187.46099854]
[-289.08978271 194.58174133]
[-287.05059814 202.48988342]
[-272.09973145 203.70309448]
[-257.14886475 204.91629028]
[-242.19801331 206.12950134]
[-227.24716187 207.34271240]
[-196.75219727 213.90040588]
[-182.78065491 208.44183350]
[-168.80911255 202.98326111]
[-154.83757019 197.52468872]
[-140.86602783 192.06611633]
[-126.89448547 186.60754395]
[-116.69506073 172.33427429]
[-98.51818848 175.23947144]
[-84.63686371 169.55537415]
[-70.75554657 163.87127686]
[-56.87422943 158.18717957]
[-42.99291229 152.50308228]
[-29.11159325 146.81896973]
[-23.28777885 131.04855347]
[-7.55301332 124.22909546]
[8.55936146 131.02412415]
[22.34681702 125.11598969]
[36.13427353 119.20785522]
[49.92172623 113.29972076]
[63.70918274 107.39157867]
[64.80393219 88.47194672]
[75.11431885 72.57078552]
[91.94068909 63.85160446]
[110.87728882 64.59740448]
[118.09507751 51.44812775]
[125.31286621 38.29885101]
[132.53065491 25.14957237]
[139.74844360 12.00029469]
[136.89765930 -0.58844483]
[143.19140625 -11.39588451]
[154.77983093 -14.89606953]
[162.20959473 -27.92674637]
[169.63935852 -40.95742035]
[177.06913757 -53.98809814]
[179.66201782 -70.74259949]
[196.47952271 -72.88915253]
[203.19773865 -57.32310867]
[190.09980774 -46.55832672]
[182.67004395 -33.52765274]
[175.24026489 -20.49697495]
[167.81050110 -7.46629953]
[168.85705566 10.04538059]
[152.89772034 19.21808434]
[145.67993164 32.36736298]
[138.46214294 45.51663971]
[131.24435425 58.66592026]
[124.02656555 71.81519318]
[131.40470886 80.36830139]
[135.86155701 90.74756622]
[150.84385681 90.01913452]
[165.82615662 89.29070282]
[180.80847168 88.56226349]
[195.79077148 87.83383179]
[207.96168518 73.32994080]
[226.54972839 72.33023834]
[239.74569702 85.00326538]
[254.69654846 83.79006195]
[269.64739990 82.57685089]
[284.59826660 81.36364746]
[292.91256714 77.54567719]
[299.80072021 80.25384521]
[314.76925659 79.28289795]
[322.94409180 66.09382629]
[337.32269287 60.25987244]
[352.37622070 64.02431488]
[362.31628418 75.93964386]
[363.32070923 91.42417908]
[355.00326538 104.52379608]
[340.56219482 110.20142365]
[325.55041504 106.27390289]
[315.74020386 94.25144196]
[300.77166748 95.22238922]
[285.81146240 96.31450653]
[270.86062622 97.52770996]
[255.90975952 98.74091339]
[240.95889282 99.95412445]
[235.62054443 110.05599213]
[225.96517944 116.38651276]
[214.33329773 117.27259827]
[203.61216736 112.37807465]
[196.51919556 102.81613922]
[181.53689575 103.54457092]
[166.55459595 104.27300262]
[151.57229614 105.00143433]
[136.58999634 105.72986603]
[132.59083557 117.59249878]
[124.86811066 127.44514465]
[114.30414581 134.16212463]
[102.10589600 136.97599792]
[89.66704559 135.56527710]
[78.40876007 130.09114075]
[69.61731720 121.17903900]
[55.82986450 127.08717346]
[42.04240799 132.99531555]
[28.25495338 138.90344238]
[14.46749783 144.81158447]
[10.93361664 157.81759644]
[0.70065123 166.28642273]
[-12.34856701 167.29576111]
[-23.42749214 160.70028687]
[-37.30881119 166.38439941]
[-51.19012833 172.06849670]
[-65.07144928 177.75259399]
[-78.95276642 183.43669128]
[-92.83408356 189.12080383]
[-98.53471375 200.70121765]
[-110.22481537 205.14570618]
[-121.43591309 200.57908630]
[-135.40745544 206.03765869]
[-149.37899780 211.49623108]
[-163.35054016 216.95480347]
[-177.32208252 222.41337585]
[-191.29362488 227.87194824]
[-176.35179138 226.55226135]
[-162.61732483 232.58258057]
[-153.47689819 244.47596741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[38 49]
[39 48]
[40 47]
[41 46]
[57 67]
[58 66]
[59 65]
[78 190]
[79 189]
[80 188]
[81 187]
[82 186]
[83 185]
[85 182]
[86 181]
[87 180]
[88 179]
[89 178]
[90 177]
[93 173]
[94 172]
[95 171]
[96 170]
[97 169]
[101 124]
[102 123]
[103 122]
[104 121]
[105 120]
[108 118]
[109 117]
[110 116]
[111 115]
[126 162]
[127 161]
[128 160]
[129 159]
[130 158]
[133 153]
[134 152]
[135 151]
[136 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
