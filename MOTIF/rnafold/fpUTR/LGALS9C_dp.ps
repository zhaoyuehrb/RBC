%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LGALS9C)
} def

/sequence { (\
AGUCAUUCCUUCUGCAAAGGACUGCCUGGCAGGUGUCAAAGGCAGUGGUGGCCACAGAGGCGGUGGAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.008014117 ubox
2 9 0.010112086 ubox
2 49 0.003867004 ubox
2 52 0.047143073 ubox
2 61 0.009916893 ubox
2 64 0.003274036 ubox
3 48 0.013713247 ubox
3 51 0.058286463 ubox
3 60 0.009738060 ubox
3 63 0.009386292 ubox
3 66 0.752434237 ubox
3 67 0.158972752 ubox
3 69 0.065184000 ubox
4 47 0.018584204 ubox
4 50 0.071684170 ubox
4 59 0.009625930 ubox
4 62 0.012444445 ubox
4 65 0.958764853 ubox
4 66 0.151634436 ubox
4 68 0.068179821 ubox
5 46 0.017134960 ubox
5 49 0.070773985 ubox
5 64 0.961790094 ubox
6 45 0.015703608 ubox
6 48 0.064715933 ubox
6 51 0.004474513 ubox
6 63 0.946737335 ubox
6 66 0.019073885 ubox
6 67 0.030118648 ubox
6 68 0.083720953 ubox
6 69 0.012292568 ubox
6 70 0.034571751 ubox
7 21 0.060527468 ubox
7 44 0.015253270 ubox
7 47 0.047962949 ubox
7 48 0.006508987 ubox
7 50 0.006506814 ubox
7 51 0.014840623 ubox
7 60 0.003794664 ubox
7 62 0.873774010 ubox
7 63 0.201143994 ubox
7 65 0.013494442 ubox
7 66 0.029426438 ubox
7 67 0.129768099 ubox
7 68 0.009967358 ubox
7 69 0.050746085 ubox
8 20 0.145851861 ubox
8 42 0.015529697 ubox
8 47 0.008729018 ubox
8 48 0.033702171 ubox
8 50 0.024330097 ubox
8 51 0.009319727 ubox
8 59 0.004774310 ubox
8 60 0.246261955 ubox
8 62 0.259528877 ubox
8 63 0.026682302 ubox
8 65 0.028444002 ubox
8 66 0.133886079 ubox
8 68 0.051330135 ubox
9 19 0.146177358 ubox
9 20 0.010686991 ubox
9 41 0.015532984 ubox
9 47 0.034208920 ubox
9 48 0.035511063 ubox
9 50 0.009544892 ubox
9 57 0.004386712 ubox
9 59 0.245875481 ubox
9 60 0.937235127 ubox
9 62 0.025889155 ubox
9 63 0.013008217 ubox
9 65 0.133356439 ubox
9 66 0.047960959 ubox
9 68 0.041282975 ubox
9 70 0.026548848 ubox
10 17 0.007779312 ubox
10 18 0.145307518 ubox
10 19 0.010812759 ubox
10 21 0.029849685 ubox
10 40 0.015435062 ubox
10 47 0.035236246 ubox
10 48 0.003996113 ubox
10 56 0.004449390 ubox
10 57 0.007509515 ubox
10 58 0.192526633 ubox
10 59 0.937541325 ubox
10 60 0.003233897 ubox
10 62 0.012168674 ubox
10 63 0.008996136 ubox
10 65 0.046569124 ubox
10 67 0.037952231 ubox
10 68 0.051821177 ubox
10 69 0.021357437 ubox
10 70 0.044237066 ubox
11 16 0.009214780 ubox
11 17 0.135886431 ubox
11 18 0.010223984 ubox
11 20 0.066044541 ubox
11 21 0.012848244 ubox
11 33 0.013839306 ubox
11 39 0.010492128 ubox
11 47 0.003902955 ubox
11 56 0.011181626 ubox
11 57 0.113457982 ubox
11 58 0.950343310 ubox
11 60 0.007271234 ubox
11 62 0.006635657 ubox
11 63 0.040781772 ubox
11 66 0.032951144 ubox
11 67 0.068152636 ubox
11 68 0.010051054 ubox
11 69 0.072939119 ubox
12 19 0.078069008 ubox
12 20 0.026879481 ubox
12 32 0.025900845 ubox
12 45 0.053874370 ubox
12 51 0.010695927 ubox
12 57 0.962977345 ubox
12 59 0.007638898 ubox
12 60 0.003262080 ubox
12 62 0.047131146 ubox
12 63 0.105457539 ubox
12 65 0.031905442 ubox
12 66 0.072269246 ubox
12 68 0.076204794 ubox
13 18 0.077549979 ubox
13 19 0.026669439 ubox
13 31 0.026041533 ubox
13 44 0.056164641 ubox
13 50 0.011277836 ubox
13 54 0.068888720 ubox
13 56 0.958622851 ubox
13 58 0.007544422 ubox
13 59 0.003230280 ubox
13 62 0.105356665 ubox
13 65 0.071973041 ubox
13 67 0.075953770 ubox
14 30 0.026174917 ubox
14 43 0.058563244 ubox
14 49 0.012766335 ubox
14 52 0.446969730 ubox
14 53 0.070122841 ubox
14 55 0.853587447 ubox
14 61 0.103785761 ubox
14 64 0.074085480 ubox
15 29 0.026138349 ubox
15 42 0.058548079 ubox
15 47 0.012289391 ubox
15 48 0.014404698 ubox
15 50 0.432554718 ubox
15 51 0.498798760 ubox
15 60 0.103545221 ubox
15 63 0.074179187 ubox
15 65 0.075498178 ubox
16 46 0.008406609 ubox
16 49 0.433707197 ubox
16 64 0.066686945 ubox
18 27 0.026515155 ubox
19 26 0.027049369 ubox
19 53 0.248217944 ubox
20 25 0.026931208 ubox
20 37 0.060886972 ubox
20 52 0.248634843 ubox
21 36 0.060926679 ubox
21 46 0.982867707 ubox
21 49 0.022704442 ubox
21 64 0.027752503 ubox
22 32 0.007960452 ubox
22 35 0.060254535 ubox
22 45 0.995756504 ubox
22 48 0.019450991 ubox
22 51 0.019575578 ubox
22 63 0.032815304 ubox
23 31 0.008955590 ubox
23 35 0.007798101 ubox
23 44 0.996516897 ubox
23 47 0.013708855 ubox
23 50 0.019101821 ubox
23 62 0.032848328 ubox
24 30 0.009006037 ubox
24 34 0.058610224 ubox
24 43 0.996999949 ubox
24 49 0.018727178 ubox
24 61 0.032904017 ubox
25 29 0.008940984 ubox
25 33 0.060715962 ubox
25 42 0.997002341 ubox
25 48 0.018764262 ubox
25 60 0.032904847 ubox
26 32 0.060700437 ubox
26 41 0.995275034 ubox
26 47 0.018697779 ubox
26 59 0.032891253 ubox
27 31 0.054684618 ubox
27 38 0.663015146 ubox
27 40 0.693258423 ubox
27 54 0.020359944 ubox
27 58 0.025083662 ubox
28 34 0.004431430 ubox
28 37 0.974128681 ubox
28 53 0.029044696 ubox
29 36 0.983400074 ubox
29 43 0.008420561 ubox
29 46 0.008762988 ubox
29 52 0.029052190 ubox
30 35 0.983161814 ubox
30 42 0.008461754 ubox
30 45 0.009167768 ubox
30 50 0.009389642 ubox
30 51 0.027475827 ubox
31 46 0.003362466 ubox
31 49 0.013172029 ubox
32 53 0.008256070 ubox
33 43 0.006448147 ubox
33 46 0.008109509 ubox
33 52 0.008265040 ubox
33 55 0.003616475 ubox
33 61 0.007014178 ubox
34 42 0.006421088 ubox
34 44 0.035918951 ubox
34 51 0.008077083 ubox
34 54 0.003609098 ubox
34 60 0.007008195 ubox
35 43 0.037286137 ubox
36 42 0.037219282 ubox
36 48 0.007391696 ubox
36 51 0.003484015 ubox
36 58 0.007033480 ubox
37 41 0.035920880 ubox
37 47 0.007730486 ubox
37 50 0.003612816 ubox
37 57 0.007044737 ubox
38 46 0.007305575 ubox
38 49 0.003266081 ubox
41 53 0.021206864 ubox
42 52 0.021236288 ubox
43 50 0.005781797 ubox
43 51 0.020465545 ubox
44 49 0.007741326 ubox
45 52 0.003780389 ubox
45 55 0.052188126 ubox
46 51 0.004574487 ubox
46 54 0.090966620 ubox
46 56 0.006571321 ubox
46 65 0.003849575 ubox
47 53 0.206154469 ubox
47 55 0.015797896 ubox
47 64 0.012269447 ubox
48 52 0.202996176 ubox
48 55 0.019570893 ubox
48 64 0.034158087 ubox
49 54 0.018848508 ubox
49 56 0.038193973 ubox
49 62 0.014080258 ubox
49 63 0.095250602 ubox
50 55 0.043059677 ubox
50 61 0.011966039 ubox
51 61 0.190840156 ubox
51 64 0.018075555 ubox
52 60 0.191427278 ubox
52 63 0.018911592 ubox
52 66 0.083315945 ubox
53 59 0.191455348 ubox
53 62 0.019047798 ubox
53 65 0.094297652 ubox
54 64 0.094312821 ubox
55 63 0.094254112 ubox
55 65 0.006449021 ubox
56 64 0.006363559 ubox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
showpage
end
%%EOF
