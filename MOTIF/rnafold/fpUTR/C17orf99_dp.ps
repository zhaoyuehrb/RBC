%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C17orf99)
} def

/sequence { (\
GCCAGGAACUAGGAGGUUCUCACUGCCCGAGCAGAGGCCCUACACCCACCGAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.007139709 ubox
1 38 0.163999824 ubox
1 55 0.971509541 ubox
2 13 0.032287015 ubox
2 31 0.007141157 ubox
2 37 0.164548444 ubox
2 54 0.983065931 ubox
3 12 0.032391486 ubox
3 36 0.164318810 ubox
3 53 0.981956387 ubox
4 10 0.015472314 ubox
4 20 0.014750592 ubox
4 24 0.003317014 ubox
4 41 0.009540666 ubox
5 9 0.015402612 ubox
5 19 0.013220949 ubox
5 20 0.191229330 ubox
5 21 0.065867419 ubox
5 28 0.007089800 ubox
5 40 0.009777677 ubox
5 46 0.022290204 ubox
5 47 0.059041825 ubox
5 50 0.969932972 ubox
6 18 0.009918779 ubox
6 19 0.214033150 ubox
6 20 0.006386065 ubox
6 27 0.007078604 ubox
6 39 0.009614024 ubox
6 45 0.022433343 ubox
6 46 0.059120633 ubox
6 49 0.968115537 ubox
7 17 0.007481144 ubox
7 18 0.214721506 ubox
8 17 0.214902748 ubox
9 15 0.008264068 ubox
9 16 0.214973315 ubox
9 31 0.003377627 ubox
9 36 0.009015974 ubox
9 53 0.013712059 ubox
9 54 0.004932469 ubox
10 14 0.008965199 ubox
10 15 0.204627623 ubox
10 25 0.006958847 ubox
10 30 0.003294782 ubox
10 35 0.008778873 ubox
10 42 0.109399401 ubox
10 52 0.013053337 ubox
10 53 0.004797136 ubox
11 20 0.004122624 ubox
11 24 0.007970841 ubox
11 41 0.112567296 ubox
12 19 0.004471645 ubox
12 20 0.004745120 ubox
12 21 0.003254520 ubox
12 23 0.008099573 ubox
12 27 0.003613332 ubox
12 39 0.003815518 ubox
12 40 0.110253121 ubox
12 41 0.179050758 ubox
12 46 0.270721365 ubox
12 47 0.144389334 ubox
12 50 0.018239510 ubox
13 18 0.003523717 ubox
13 19 0.005310042 ubox
13 21 0.018434395 ubox
13 26 0.003619011 ubox
13 38 0.004641007 ubox
13 39 0.083697208 ubox
13 40 0.186711880 ubox
13 45 0.271049769 ubox
13 46 0.144293848 ubox
13 49 0.018256963 ubox
14 18 0.004644087 ubox
14 20 0.018605092 ubox
14 24 0.005746390 ubox
14 41 0.932002799 ubox
15 19 0.018228198 ubox
15 21 0.003996936 ubox
15 23 0.005890921 ubox
15 24 0.005508761 ubox
15 27 0.004269964 ubox
15 39 0.233427230 ubox
15 40 0.941621241 ubox
15 41 0.015264633 ubox
15 46 0.007876981 ubox
15 47 0.004060844 ubox
16 23 0.005924053 ubox
16 26 0.004316067 ubox
16 32 0.004458504 ubox
16 38 0.250451827 ubox
16 39 0.939540423 ubox
16 40 0.015458127 ubox
16 43 0.065630633 ubox
16 45 0.008014616 ubox
16 46 0.003922978 ubox
17 22 0.005446991 ubox
17 25 0.004302397 ubox
17 31 0.004457229 ubox
17 34 0.003782954 ubox
17 35 0.005211870 ubox
17 36 0.019017241 ubox
17 37 0.190468701 ubox
17 42 0.064969523 ubox
17 44 0.007951816 ubox
18 30 0.004467585 ubox
18 33 0.004162128 ubox
18 35 0.023957769 ubox
18 36 0.067801859 ubox
18 37 0.878642064 ubox
19 29 0.004466772 ubox
19 31 0.009962684 ubox
19 34 0.022754437 ubox
19 36 0.952111252 ubox
19 37 0.095221612 ubox
20 30 0.010139547 ubox
20 33 0.018900559 ubox
20 35 0.926858718 ubox
20 36 0.078032689 ubox
20 37 0.152889820 ubox
20 52 0.003920720 ubox
21 29 0.010236478 ubox
21 34 0.753404480 ubox
21 36 0.174369868 ubox
21 51 0.004939357 ubox
23 31 0.136095698 ubox
23 34 0.651530210 ubox
23 36 0.004325891 ubox
24 30 0.135927855 ubox
24 33 0.946831484 ubox
24 35 0.003243970 ubox
25 32 0.987543969 ubox
25 38 0.026524367 ubox
25 55 0.007448960 ubox
26 31 0.984376544 ubox
26 37 0.026501777 ubox
26 54 0.007565648 ubox
27 36 0.026389622 ubox
27 37 0.003917219 ubox
27 53 0.007562476 ubox
28 36 0.004612719 ubox
28 51 0.007453453 ubox
29 50 0.007396052 ubox
31 38 0.005683958 ubox
32 37 0.005694113 ubox
35 41 0.010846652 ubox
36 40 0.010936540 ubox
36 46 0.057280915 ubox
36 47 0.092979153 ubox
36 50 0.047543610 ubox
37 45 0.057472235 ubox
37 46 0.092876081 ubox
37 49 0.047469315 ubox
37 55 0.031553414 ubox
38 54 0.031335225 ubox
39 53 0.030689804 ubox
39 54 0.093148857 ubox
40 53 0.094176005 ubox
40 54 0.005920517 ubox
41 52 0.091977150 ubox
41 53 0.005832792 ubox
45 54 0.087287550 ubox
46 53 0.087381768 ubox
46 54 0.074013605 ubox
47 53 0.074781798 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
