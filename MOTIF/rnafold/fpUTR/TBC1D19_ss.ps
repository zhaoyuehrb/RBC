%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGACAAGGCAGGAACAACGGUGUGAAAAGCGUCCUCCCCGCCCCGGUCUUUUUCCGCCGGCGGAACGCAGAUGCUGUGGCCUUCAGGCGCUGAGGGGACCAGAGAGGGACGGACACAAGGCUCGGCAGUUGCCUGGUAACGCCCGCUGGAGGAGUCCCAGUGUAAUAAGGUCCCGGAGAAGUGUCACUGGCCCUGAGUGGGACCCGGUAGCCCGUUCGCUCCGCGCCGGCGGCCUGUCCCCGCGGCUUGGCGG\
GCUAGGGCAGGGGAA\
) } def
/len { sequence length } bind def

/coor [
[55.63529205 284.17443848]
[57.52029419 269.29336548]
[50.04157639 268.72875977]
[41.25295639 280.88442993]
[32.46433640 293.04010010]
[23.67571831 305.19573975]
[26.76120758 322.43234253]
[16.61126709 336.28390503]
[-0.08309348 338.44760132]
[-8.73020935 350.70434570]
[-17.37732506 362.96105957]
[-19.01050568 378.69775391]
[-32.66971970 384.63705444]
[-41.31683350 396.89376831]
[-34.99524689 410.82162476]
[-36.48402786 425.94378662]
[-45.28369522 438.20886230]
[-58.94961548 444.38128662]
[-73.77038574 442.89459229]
[-82.41750336 455.15130615]
[-91.06462097 467.40805054]
[-84.55027008 481.31698608]
[-85.87913513 496.61828613]
[-94.69376373 509.19595337]
[-108.62306213 515.66668701]
[-123.92011261 514.28985596]
[-136.47009277 505.43585205]
[-142.89712524 491.48632812]
[-141.47236633 476.19366455]
[-132.57905579 463.67150879]
[-118.60947418 457.28823853]
[-103.32135010 458.76092529]
[-94.67423248 446.50421143]
[-86.02711487 434.24746704]
[-92.39793396 420.78350830]
[-91.16588593 405.83901978]
[-82.56205750 393.43576050]
[-68.81484222 386.96191406]
[-53.57356262 388.24664307]
[-44.92644501 375.98992920]
[-43.91176605 361.12991333]
[-29.63405418 354.31393433]
[-20.98693848 342.05722046]
[-12.33982182 329.80050659]
[-16.28561401 317.55624390]
[-12.41150284 305.08544922]
[-1.91453719 296.99487305]
[11.52005386 296.40713501]
[20.30867386 284.25146484]
[29.09729195 272.09579468]
[37.88591385 259.94015503]
[44.85419846 251.20117188]
[53.23170853 245.50894165]
[61.96985626 242.94500732]
[70.08493805 243.27053833]
[76.74859619 245.96769714]
[80.02583313 231.33009338]
[83.30307007 216.69247437]
[86.58031464 202.05485535]
[89.85755157 187.41725159]
[93.13478851 172.77963257]
[96.41203308 158.14202881]
[99.68927002 143.50440979]
[102.96650696 128.86680603]
[90.35662079 127.89089203]
[79.15303802 121.57751465]
[71.53907013 110.95140076]
[69.08421326 97.89543152]
[54.24142456 95.72941589]
[39.39863586 93.56340790]
[24.55584717 91.39739227]
[9.71305752 89.23138428]
[-6.83316565 92.92716980]
[-14.96496964 78.05067444]
[-2.92096090 66.11843872]
[11.87906933 74.38859558]
[26.72185898 76.55460358]
[41.56464767 78.72061920]
[56.40743637 80.88662720]
[71.25022888 83.05264282]
[81.57659912 72.17301941]
[78.63957977 57.46336746]
[75.70256805 42.75371170]
[72.76555634 28.04405785]
[69.82854462 13.33440304]
[55.88961792 6.77600431]
[48.57078171 -6.57644844]
[50.49496841 -21.50164413]
[60.71640396 -32.30258560]
[57.77938843 -47.01224136]
[54.84237671 -61.72189331]
[51.90536118 -76.43154907]
[48.96834946 -91.14120483]
[46.03133774 -105.85086060]
[41.29813385 -113.62023163]
[43.14657593 -120.74800873]
[40.38027954 -135.49072266]
[37.61398315 -150.23342896]
[24.85312843 -159.16642761]
[22.25772476 -174.15704346]
[30.85260963 -186.26751709]
[28.08631325 -201.01022339]
[13.46035385 -210.63839722]
[10.40117264 -227.53598022]
[20.32463074 -241.13407898]
[17.38761711 -255.84373474]
[7.09799671 -267.86181641]
[12.19352055 -281.85769653]
[9.25650692 -296.56735229]
[6.31949377 -311.27700806]
[1.58629012 -319.04638672]
[3.43473244 -326.17416382]
[0.66843569 -340.91687012]
[-11.23294544 -347.17712402]
[-17.27788162 -358.97131348]
[-15.46448040 -371.90347290]
[-6.67433929 -381.29626465]
[-9.26954746 -396.07003784]
[-19.27778625 -408.32345581]
[-13.85916424 -422.19744873]
[-16.45437241 -436.97122192]
[-19.04958153 -451.74502563]
[-21.64478874 -466.51879883]
[-35.90991592 -472.39331055]
[-44.71575546 -485.06060791]
[-45.25239944 -500.47863770]
[-37.34860611 -513.72753906]
[-23.52644539 -520.57965088]
[-8.19651985 -518.84851074]
[3.74944663 -509.08645630]
[8.49954033 -494.40856934]
[4.53802347 -479.49850464]
[-6.87099838 -469.11401367]
[-4.27579021 -454.34024048]
[-1.68058157 -439.56643677]
[0.91462678 -424.79263306]
[10.73723888 -413.59597778]
[5.50424337 -398.66525269]
[8.09945202 -383.89144897]
[22.27739143 -374.81570435]
[25.55189705 -357.95852661]
[15.41114902 -343.68316650]
[18.17744637 -328.94046021]
[21.02914810 -314.21401978]
[23.96616173 -299.50436401]
[26.90317535 -284.79470825]
[36.98271942 -273.82876587]
[32.09727097 -258.78076172]
[35.03428650 -244.07109070]
[46.63151169 -238.50376892]
[53.00964355 -227.10864258]
[51.65143585 -213.92535400]
[42.82902527 -203.77651978]
[45.59532547 -189.03381348]
[57.99577713 -180.86286926]
[61.01121140 -165.95106506]
[52.35669327 -152.99972534]
[55.12299347 -138.25701904]
[57.88928986 -123.51430511]
[60.74098969 -108.78787231]
[63.67800522 -94.07821655]
[66.61502075 -79.36856079]
[69.55203247 -64.65890503]
[72.48904419 -49.94925308]
[75.42605591 -35.23959732]
[89.01155090 -29.19208336]
[96.51979828 -16.15022278]
[94.88977051 -1.01098812]
[84.53820038 10.39738941]
[87.47521210 25.10704422]
[90.41222382 39.81669998]
[93.34923553 54.52635574]
[96.28625488 69.23600769]
[115.32844543 73.82714081]
[127.43492126 88.68936920]
[128.05165100 107.42948914]
[143.02116394 106.47374725]
[157.99069214 105.51801300]
[172.96020508 104.56227112]
[187.92973328 103.60652924]
[195.59202576 86.76571655]
[210.69226074 76.22298431]
[228.97137451 74.84571838]
[245.32754517 82.93096161]
[255.24003601 98.14687347]
[270.16726685 96.67121124]
[283.13934326 87.61380768]
[296.56604004 94.06150055]
[311.49328613 92.58583832]
[326.42053223 91.11016846]
[341.34774780 89.63450623]
[356.27499390 88.15884399]
[371.18411255 86.51023102]
[386.07312012 84.68890381]
[400.96215820 82.86757660]
[411.93783569 71.16654205]
[427.91708374 72.59577179]
[436.64202881 86.05887604]
[431.41958618 101.22811127]
[416.25601196 106.46694946]
[402.78347778 97.75659180]
[387.89447021 99.57791901]
[373.00546265 101.39924622]
[369.42868042 104.51457214]
[363.86712646 105.43914795]
[357.75067139 103.08607483]
[342.82342529 104.56174469]
[327.89617920 106.03740692]
[312.96893311 107.51306915]
[298.04171753 108.98873901]
[286.13735962 117.94058228]
[271.64294434 111.59844208]
[256.71569824 113.07411194]
[253.42596436 124.32002258]
[246.52893066 133.83494568]
[236.80761719 140.49914551]
[225.37902832 143.51873779]
[213.56587219 142.52027893]
[202.74339294 137.59671021]
[194.17935181 129.29933167]
[188.88546753 118.57604980]
[173.91595459 119.53179169]
[158.94642639 120.48753357]
[143.97691345 121.44327545]
[129.00738525 122.39900970]
[117.60412598 132.14404297]
[114.32688141 146.78164673]
[111.04964447 161.41926575]
[107.77240753 176.05686951]
[104.49516296 190.69448853]
[101.21792603 205.33210754]
[97.94068909 219.96971130]
[94.66344452 234.60733032]
[91.38620758 249.24493408]
[93.29380798 264.12313843]
[100.15783691 277.46051025]
[107.02186584 290.79785156]
[113.88589478 304.13522339]
[120.74992371 317.47256470]
[127.61395264 330.80993652]
[134.47798157 344.14727783]
[141.64936829 357.32192993]
[149.12425232 370.32678223]
[156.59913635 383.33163452]
[164.07402039 396.33648682]
[179.39527893 400.21392822]
[187.41539001 413.83206177]
[183.37617493 429.11145020]
[169.67401123 436.98715210]
[154.43817139 432.78662109]
[146.70779419 419.00195312]
[151.06918335 403.81137085]
[143.59429932 390.80651855]
[136.11940002 377.80166626]
[128.64451599 364.79681396]
[126.01502228 363.92837524]
[123.56453705 361.98480225]
[121.69747925 359.02685547]
[120.78971863 355.25811768]
[121.14062500 351.01132202]
[114.27659607 337.67395020]
[107.41256714 324.33660889]
[100.54853821 310.99923706]
[93.68450928 297.66189575]
[86.82048035 284.32452393]
[79.95645142 270.98718262]
[72.47772980 270.42257690]
[72.10721588 285.41799927]
[75.01113129 300.13421631]
[62.13224411 307.82409668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 51]
[4 50]
[5 49]
[6 48]
[9 44]
[10 43]
[11 42]
[13 40]
[14 39]
[19 34]
[20 33]
[21 32]
[56 234]
[57 233]
[58 232]
[59 231]
[60 230]
[61 229]
[62 228]
[63 227]
[64 226]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[81 173]
[82 172]
[83 171]
[84 170]
[85 169]
[89 165]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[96 159]
[97 158]
[98 157]
[101 154]
[102 153]
[105 149]
[106 148]
[108 146]
[109 145]
[110 144]
[112 143]
[113 142]
[117 139]
[118 138]
[120 136]
[121 135]
[122 134]
[123 133]
[176 225]
[177 224]
[178 223]
[179 222]
[180 221]
[185 213]
[186 212]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[193 203]
[194 202]
[195 201]
[235 266]
[236 265]
[237 264]
[238 263]
[239 262]
[240 261]
[241 260]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
