%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OPN1MW3)
} def

/sequence { (\
CGUGACCCUCAGGUGACGCACCAGGGCCGGCUGCCGUCGGGGACAGGGCUUUCCAUAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.254039216 ubox
1 29 0.260635240 ubox
1 33 0.005270686 ubox
2 17 0.279619031 ubox
2 19 0.015135222 ubox
2 21 0.006441162 ubox
2 27 0.018437162 ubox
2 28 0.263295619 ubox
2 31 0.044774243 ubox
2 32 0.003329399 ubox
2 34 0.003365794 ubox
2 44 0.147947053 ubox
2 49 0.004293666 ubox
2 56 0.016149359 ubox
2 59 0.023065605 ubox
3 11 0.010036565 ubox
3 16 0.278928968 ubox
3 18 0.015087830 ubox
3 20 0.006454431 ubox
3 26 0.006639828 ubox
3 29 0.223069519 ubox
3 30 0.040577222 ubox
3 33 0.003368138 ubox
3 43 0.143899329 ubox
3 45 0.122701759 ubox
3 48 0.003919082 ubox
3 55 0.016656042 ubox
3 57 0.003877342 ubox
3 58 0.021924351 ubox
4 10 0.011205289 ubox
4 17 0.014771740 ubox
4 19 0.006454870 ubox
4 28 0.296122098 ubox
4 38 0.003610538 ubox
4 44 0.135830000 ubox
4 51 0.004921330 ubox
4 53 0.005805133 ubox
4 54 0.015417906 ubox
4 56 0.003528839 ubox
5 9 0.009752280 ubox
5 14 0.279563270 ubox
5 37 0.003525500 ubox
5 50 0.005590343 ubox
5 52 0.006188072 ubox
6 13 0.280318027 ubox
6 25 0.012561876 ubox
6 26 0.938639362 ubox
6 30 0.032892398 ubox
6 40 0.008037877 ubox
6 41 0.037646711 ubox
6 42 0.137432795 ubox
6 47 0.006796139 ubox
6 48 0.017897427 ubox
7 12 0.279329631 ubox
7 13 0.007562139 ubox
7 24 0.011732938 ubox
7 25 0.942373167 ubox
7 26 0.062680483 ubox
7 29 0.032828234 ubox
7 30 0.003823816 ubox
7 39 0.007711125 ubox
7 40 0.036837920 ubox
7 41 0.137569763 ubox
7 42 0.044642056 ubox
7 46 0.007279712 ubox
7 47 0.019332506 ubox
8 12 0.010068665 ubox
8 24 0.942298846 ubox
8 25 0.063541214 ubox
8 26 0.086429949 ubox
8 29 0.003679053 ubox
8 39 0.036292990 ubox
8 40 0.128500451 ubox
8 41 0.044747046 ubox
8 42 0.008037345 ubox
8 46 0.019577269 ubox
8 58 0.003406090 ubox
9 23 0.872441536 ubox
9 24 0.051857111 ubox
9 25 0.088024451 ubox
9 26 0.011648706 ubox
9 39 0.108780206 ubox
9 40 0.043226030 ubox
9 41 0.007992288 ubox
9 43 0.006385413 ubox
9 45 0.018068075 ubox
9 57 0.003401164 ubox
10 24 0.096343197 ubox
10 25 0.015647632 ubox
10 33 0.007362923 ubox
10 39 0.049030260 ubox
10 40 0.008832841 ubox
10 42 0.007566723 ubox
11 32 0.007368576 ubox
12 22 0.946570135 ubox
12 31 0.007360107 ubox
12 35 0.025667986 ubox
12 38 0.009936133 ubox
12 54 0.006112019 ubox
13 19 0.031210653 ubox
13 21 0.949713370 ubox
13 34 0.025626396 ubox
13 37 0.009139552 ubox
13 53 0.006114467 ubox
14 18 0.029240144 ubox
14 20 0.948574491 ubox
14 29 0.007269625 ubox
14 33 0.025259498 ubox
14 36 0.008667244 ubox
14 39 0.063135533 ubox
15 19 0.933435435 ubox
15 22 0.003515117 ubox
15 28 0.007096063 ubox
15 32 0.016824094 ubox
15 35 0.008861344 ubox
15 38 0.132226098 ubox
15 51 0.005003074 ubox
16 37 0.132294197 ubox
16 50 0.005260260 ubox
17 29 0.021941006 ubox
17 36 0.132261296 ubox
18 27 0.026915179 ubox
18 28 0.015982081 ubox
18 31 0.008568967 ubox
18 34 0.089308784 ubox
18 35 0.098986901 ubox
18 49 0.042558870 ubox
18 59 0.059464685 ubox
19 26 0.033876601 ubox
19 30 0.008453222 ubox
19 33 0.125281992 ubox
19 48 0.043053109 ubox
19 58 0.060466627 ubox
20 32 0.124585866 ubox
21 30 0.136385477 ubox
21 40 0.027771479 ubox
21 41 0.048645599 ubox
21 42 0.097369770 ubox
21 47 0.084491777 ubox
21 48 0.010740193 ubox
22 29 0.136408249 ubox
22 33 0.046939054 ubox
22 39 0.027761934 ubox
22 40 0.048292271 ubox
22 41 0.097738398 ubox
22 46 0.089585056 ubox
22 47 0.011859353 ubox
23 32 0.047109694 ubox
23 51 0.011115301 ubox
23 52 0.135093766 ubox
24 31 0.047142421 ubox
24 32 0.003292183 ubox
24 35 0.008875942 ubox
24 38 0.013704223 ubox
24 50 0.012429093 ubox
24 51 0.160432136 ubox
24 52 0.006264128 ubox
24 53 0.012290198 ubox
24 54 0.037670506 ubox
24 60 0.006775548 ubox
25 31 0.004091388 ubox
25 34 0.008728347 ubox
25 35 0.063163639 ubox
25 37 0.007559858 ubox
25 38 0.053499684 ubox
25 49 0.011741281 ubox
25 50 0.171310565 ubox
25 51 0.005358981 ubox
25 52 0.006293548 ubox
25 53 0.036672916 ubox
25 54 0.009975492 ubox
25 59 0.006668043 ubox
25 60 0.021088020 ubox
26 34 0.063267698 ubox
26 37 0.053495093 ubox
26 49 0.176702738 ubox
26 52 0.012092239 ubox
26 53 0.009866705 ubox
26 59 0.021427607 ubox
27 33 0.063168700 ubox
27 36 0.039746710 ubox
27 40 0.850872355 ubox
27 41 0.055559508 ubox
27 42 0.014319311 ubox
27 47 0.016892232 ubox
27 48 0.177051143 ubox
27 58 0.021179087 ubox
28 36 0.039760130 ubox
28 39 0.854362330 ubox
28 40 0.039944514 ubox
28 41 0.013098029 ubox
28 46 0.017810073 ubox
28 47 0.176264290 ubox
29 35 0.054002254 ubox
29 38 0.855364824 ubox
29 50 0.014907444 ubox
29 53 0.005573270 ubox
29 54 0.024722647 ubox
29 60 0.070247322 ubox
30 34 0.053153027 ubox
30 37 0.854334388 ubox
30 49 0.015814530 ubox
30 52 0.005435853 ubox
30 53 0.024670460 ubox
30 59 0.071493903 ubox
31 36 0.853385828 ubox
31 40 0.007692349 ubox
31 42 0.008072957 ubox
31 46 0.475826383 ubox
31 47 0.004467361 ubox
31 48 0.015349701 ubox
31 58 0.071474139 ubox
32 39 0.007730449 ubox
32 41 0.006908479 ubox
32 45 0.479171972 ubox
32 46 0.003470274 ubox
32 47 0.011693408 ubox
32 57 0.070559660 ubox
33 38 0.007460623 ubox
33 44 0.479673037 ubox
33 49 0.054453349 ubox
33 54 0.003567686 ubox
33 56 0.045347891 ubox
33 59 0.008401695 ubox
34 40 0.015138717 ubox
34 41 0.098620102 ubox
34 42 0.475746096 ubox
34 47 0.022232012 ubox
34 48 0.054498638 ubox
34 58 0.008427553 ubox
35 39 0.015098487 ubox
35 40 0.101758859 ubox
35 41 0.475149279 ubox
35 46 0.024133875 ubox
35 47 0.053878101 ubox
36 44 0.058934811 ubox
36 49 0.013082893 ubox
36 56 0.019552569 ubox
36 59 0.003445327 ubox
37 43 0.059407812 ubox
37 48 0.013099186 ubox
37 55 0.023434123 ubox
37 58 0.003405916 ubox
38 42 0.058942583 ubox
38 46 0.005301558 ubox
38 47 0.013124059 ubox
39 50 0.007591093 ubox
39 51 0.005108831 ubox
39 52 0.004074551 ubox
39 54 0.035732911 ubox
40 49 0.007877770 ubox
40 50 0.005907744 ubox
40 51 0.004795076 ubox
40 53 0.035780849 ubox
40 54 0.011652391 ubox
40 60 0.006754038 ubox
41 49 0.006803083 ubox
41 50 0.009083961 ubox
41 52 0.035609726 ubox
41 53 0.013311937 ubox
41 54 0.108438952 ubox
41 59 0.014505395 ubox
41 60 0.067178236 ubox
42 49 0.009604761 ubox
42 51 0.035474195 ubox
42 52 0.013106965 ubox
42 53 0.108655924 ubox
42 59 0.067916395 ubox
43 50 0.032912393 ubox
43 51 0.012879355 ubox
43 52 0.106826114 ubox
45 51 0.014972288 ubox
46 50 0.010692422 ubox
46 51 0.006349567 ubox
46 53 0.005951997 ubox
46 54 0.079128735 ubox
46 60 0.064648347 ubox
47 52 0.004798636 ubox
47 53 0.079177749 ubox
47 54 0.053267021 ubox
47 59 0.047046932 ubox
47 60 0.952627615 ubox
48 52 0.051292859 ubox
48 53 0.052467019 ubox
48 59 0.967581475 ubox
49 58 0.968704684 ubox
50 57 0.952454566 ubox
50 58 0.005741983 ubox
51 57 0.034784611 ubox
52 57 0.005585293 ubox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
showpage
end
%%EOF
