%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSMD8)
} def

/sequence { (\
CCAACUUCCGGUCACCAUCUUGAGUGACGACAGAGGCGGAGCUCCAACUGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.027097560 ubox
1 36 0.067050727 ubox
1 39 0.741607439 ubox
2 10 0.035489385 ubox
2 26 0.003813124 ubox
2 35 0.067734148 ubox
2 38 0.744333117 ubox
2 50 0.062582204 ubox
3 49 0.057602012 ubox
4 12 0.014664751 ubox
4 25 0.005669208 ubox
5 11 0.015662066 ubox
5 24 0.006374700 ubox
5 33 0.117325757 ubox
5 35 0.616310704 ubox
5 36 0.643803966 ubox
5 39 0.012962730 ubox
5 41 0.102027133 ubox
6 10 0.014505036 ubox
6 23 0.006165661 ubox
6 30 0.013015680 ubox
6 32 0.115960296 ubox
6 33 0.042912026 ubox
6 34 0.609479186 ubox
6 35 0.646340161 ubox
6 36 0.004023967 ubox
6 38 0.012675585 ubox
6 40 0.074996996 ubox
6 41 0.216256516 ubox
6 47 0.006040029 ubox
6 51 0.004837778 ubox
7 22 0.005802401 ubox
7 29 0.013466877 ubox
7 30 0.086678099 ubox
7 32 0.056887119 ubox
7 33 0.582598519 ubox
7 34 0.652527355 ubox
7 36 0.004316245 ubox
7 39 0.027081870 ubox
7 40 0.283400828 ubox
7 46 0.005864675 ubox
7 50 0.004491188 ubox
7 51 0.019116975 ubox
8 29 0.090766219 ubox
8 33 0.656631563 ubox
8 35 0.005519854 ubox
8 36 0.016185488 ubox
8 38 0.025331525 ubox
8 39 0.297492327 ubox
8 50 0.019987678 ubox
9 26 0.015569233 ubox
9 29 0.241884719 ubox
9 35 0.016294419 ubox
9 38 0.297573573 ubox
9 50 0.040781401 ubox
10 16 0.019644284 ubox
10 19 0.013648969 ubox
10 20 0.005575370 ubox
10 25 0.015725948 ubox
10 28 0.174114800 ubox
10 37 0.296603895 ubox
10 43 0.013316130 ubox
10 44 0.004698931 ubox
10 45 0.027675931 ubox
10 49 0.039537825 ubox
11 15 0.019364587 ubox
11 18 0.013157468 ubox
11 19 0.005933355 ubox
11 28 0.966346559 ubox
11 31 0.154716103 ubox
11 37 0.008374698 ubox
11 42 0.014531825 ubox
11 44 0.026029148 ubox
11 48 0.037148493 ubox
11 52 0.057295237 ubox
12 17 0.012347416 ubox
12 23 0.016133291 ubox
12 27 0.981980484 ubox
12 30 0.154133215 ubox
12 34 0.009100264 ubox
12 36 0.011251098 ubox
12 39 0.003354804 ubox
12 40 0.003338614 ubox
12 41 0.014210681 ubox
12 47 0.034640696 ubox
12 51 0.058555356 ubox
13 22 0.016311045 ubox
13 26 0.982942114 ubox
13 29 0.153654100 ubox
13 33 0.009105848 ubox
13 35 0.011162971 ubox
13 38 0.004541241 ubox
13 39 0.003495394 ubox
13 50 0.058776830 ubox
14 21 0.014751653 ubox
14 25 0.982819554 ubox
14 49 0.056686545 ubox
15 24 0.982659192 ubox
15 36 0.028213665 ubox
15 39 0.033129767 ubox
16 22 0.809279368 ubox
16 26 0.151560328 ubox
16 35 0.028191130 ubox
16 38 0.033183629 ubox
16 50 0.030511159 ubox
17 21 0.656049493 ubox
17 25 0.150954823 ubox
17 49 0.029670537 ubox
18 24 0.147090510 ubox
18 27 0.016880856 ubox
18 30 0.005623441 ubox
18 34 0.029310152 ubox
18 36 0.033812619 ubox
18 51 0.012828968 ubox
19 26 0.017315300 ubox
19 29 0.005746738 ubox
19 33 0.029382799 ubox
19 35 0.034287282 ubox
19 36 0.008056425 ubox
19 50 0.014009333 ubox
20 27 0.003236950 ubox
20 30 0.006046948 ubox
20 32 0.025567089 ubox
20 33 0.005171295 ubox
20 34 0.034124504 ubox
20 35 0.008076505 ubox
20 47 0.032457066 ubox
21 29 0.008911456 ubox
21 32 0.014243329 ubox
21 33 0.033710214 ubox
21 34 0.008365848 ubox
21 46 0.039122181 ubox
22 28 0.009682092 ubox
22 31 0.019220547 ubox
22 44 0.081756854 ubox
22 45 0.027999410 ubox
23 43 0.086599711 ubox
24 31 0.039161412 ubox
24 42 0.086673460 ubox
25 30 0.038895264 ubox
25 32 0.004037439 ubox
25 41 0.086653412 ubox
26 31 0.004279603 ubox
28 38 0.086668106 ubox
28 50 0.003564258 ubox
29 37 0.086594780 ubox
29 44 0.004294758 ubox
29 49 0.007059563 ubox
30 43 0.003600854 ubox
31 50 0.136382357 ubox
32 43 0.005816532 ubox
32 49 0.136122965 ubox
33 42 0.006301772 ubox
33 44 0.196209042 ubox
33 48 0.129106034 ubox
34 43 0.199094519 ubox
34 49 0.163671766 ubox
35 42 0.197661710 ubox
35 43 0.077976563 ubox
35 44 0.049652737 ubox
35 45 0.052389981 ubox
35 48 0.169256420 ubox
35 49 0.016975473 ubox
36 42 0.101101655 ubox
36 43 0.017566305 ubox
36 44 0.051788305 ubox
36 48 0.022179078 ubox
37 41 0.103633553 ubox
37 50 0.280822296 ubox
38 44 0.024588998 ubox
38 45 0.408150282 ubox
38 49 0.282749128 ubox
39 43 0.016333069 ubox
39 44 0.407263573 ubox
39 48 0.282902512 ubox
40 49 0.218670345 ubox
41 48 0.223655824 ubox
43 51 0.122468714 ubox
44 50 0.132077490 ubox
1 39 0.9500000 lbox
2 38 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
showpage
end
%%EOF
