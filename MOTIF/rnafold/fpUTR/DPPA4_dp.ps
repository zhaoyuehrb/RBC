%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:49:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DPPA4)
} def

/sequence { (\
AAGUGGGAGGAGACUUUGCAAAUAGCAAUCUUGGGGCAGGGGCCAUUUUGGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.209068273 ubox
1 17 0.011483152 ubox
1 32 0.017767332 ubox
1 47 0.013504526 ubox
1 48 0.369293202 ubox
1 49 0.053437798 ubox
2 15 0.367868968 ubox
2 16 0.011622017 ubox
2 17 0.005870873 ubox
2 31 0.019700256 ubox
2 32 0.004606527 ubox
2 46 0.012858079 ubox
2 47 0.469138541 ubox
2 48 0.049338834 ubox
2 49 0.019656066 ubox
3 14 0.384029847 ubox
3 15 0.003615310 ubox
3 16 0.005624980 ubox
3 19 0.140392535 ubox
3 23 0.022870716 ubox
3 26 0.022854257 ubox
3 29 0.003872899 ubox
3 30 0.019767738 ubox
3 31 0.003492792 ubox
3 37 0.120311851 ubox
3 43 0.009089068 ubox
3 46 0.502927613 ubox
3 47 0.037419658 ubox
3 48 0.014019683 ubox
3 55 0.067099279 ubox
4 13 0.383676527 ubox
4 18 0.131342204 ubox
4 20 0.274447470 ubox
4 22 0.016924008 ubox
4 24 0.004444015 ubox
4 25 0.019256804 ubox
4 27 0.005827186 ubox
4 28 0.005014547 ubox
4 33 0.039061652 ubox
4 36 0.120014519 ubox
4 38 0.112657325 ubox
4 42 0.008661703 ubox
4 45 0.507047576 ubox
4 50 0.064815826 ubox
4 54 0.066403726 ubox
5 15 0.066919186 ubox
5 16 0.029664643 ubox
5 17 0.097440252 ubox
5 19 0.305682100 ubox
5 23 0.004303502 ubox
5 26 0.006349990 ubox
5 30 0.008188794 ubox
5 31 0.014426903 ubox
5 32 0.061496736 ubox
5 37 0.125076196 ubox
5 44 0.506446056 ubox
5 47 0.012990967 ubox
5 48 0.048153936 ubox
5 49 0.103477462 ubox
6 14 0.072748011 ubox
6 15 0.051483948 ubox
6 16 0.074812621 ubox
6 17 0.173080643 ubox
6 29 0.006892255 ubox
6 30 0.015559786 ubox
6 31 0.069038158 ubox
6 32 0.006892151 ubox
6 43 0.504092633 ubox
6 44 0.032892811 ubox
6 46 0.015299230 ubox
6 47 0.060518295 ubox
6 48 0.114407889 ubox
6 49 0.067596064 ubox
7 14 0.057986795 ubox
7 15 0.039295316 ubox
7 16 0.356860841 ubox
7 17 0.286519372 ubox
7 29 0.012865717 ubox
7 30 0.069997047 ubox
7 31 0.003397658 ubox
7 32 0.078101760 ubox
7 43 0.037920128 ubox
7 46 0.064359420 ubox
7 47 0.118606135 ubox
7 48 0.079441860 ubox
7 49 0.044058599 ubox
8 15 0.414048734 ubox
8 16 0.284890103 ubox
8 17 0.008753608 ubox
8 29 0.068654968 ubox
8 31 0.081609294 ubox
8 32 0.178935780 ubox
8 46 0.117548157 ubox
8 47 0.080019214 ubox
8 48 0.044837060 ubox
8 49 0.056794849 ubox
9 14 0.424008432 ubox
9 15 0.280927115 ubox
9 16 0.011044306 ubox
9 17 0.004514527 ubox
9 30 0.081320393 ubox
9 31 0.193056785 ubox
9 32 0.026932614 ubox
9 44 0.167879402 ubox
9 46 0.074251162 ubox
9 47 0.040421193 ubox
9 48 0.058932436 ubox
9 49 0.018548092 ubox
10 14 0.275188047 ubox
10 15 0.011576675 ubox
10 16 0.008009209 ubox
10 17 0.005897666 ubox
10 29 0.079376573 ubox
10 30 0.195122770 ubox
10 31 0.014543017 ubox
10 32 0.553231006 ubox
10 43 0.167774077 ubox
10 46 0.027102758 ubox
10 47 0.058641829 ubox
10 48 0.017654836 ubox
10 49 0.018920471 ubox
11 15 0.007845963 ubox
11 16 0.006654063 ubox
11 17 0.003286601 ubox
11 29 0.194427794 ubox
11 31 0.575037988 ubox
11 32 0.016455090 ubox
11 46 0.058002639 ubox
11 47 0.016732822 ubox
11 48 0.019325576 ubox
11 49 0.006306795 ubox
12 30 0.577963858 ubox
12 31 0.010669715 ubox
12 32 0.064698633 ubox
12 46 0.010328312 ubox
12 47 0.018878911 ubox
12 48 0.006523252 ubox
13 29 0.561268810 ubox
13 31 0.068014809 ubox
13 46 0.017868217 ubox
13 47 0.006161458 ubox
14 25 0.036588505 ubox
14 34 0.082431162 ubox
14 35 0.111244040 ubox
14 36 0.025518267 ubox
14 39 0.023575365 ubox
14 40 0.046847012 ubox
14 41 0.290411174 ubox
14 42 0.028460421 ubox
14 51 0.006350618 ubox
14 54 0.134670307 ubox
15 22 0.003221261 ubox
15 24 0.036561122 ubox
15 25 0.005798699 ubox
15 28 0.082482234 ubox
15 33 0.082037767 ubox
15 34 0.110790384 ubox
15 35 0.025408379 ubox
15 38 0.021929420 ubox
15 39 0.038550335 ubox
15 40 0.293036987 ubox
15 41 0.024020421 ubox
15 50 0.005865719 ubox
15 52 0.005452282 ubox
15 53 0.134493643 ubox
15 54 0.060147439 ubox
16 21 0.003396756 ubox
16 22 0.004426736 ubox
16 24 0.006480367 ubox
16 25 0.007485259 ubox
16 27 0.060102615 ubox
16 28 0.686502687 ubox
16 33 0.065093483 ubox
16 34 0.016146696 ubox
16 36 0.017217916 ubox
16 38 0.026906536 ubox
16 39 0.295278573 ubox
16 40 0.017063656 ubox
16 51 0.006262828 ubox
16 52 0.133123741 ubox
16 53 0.102712602 ubox
16 54 0.004833539 ubox
17 21 0.004190882 ubox
17 24 0.009801813 ubox
17 27 0.833697089 ubox
17 33 0.007057950 ubox
17 35 0.018931071 ubox
17 38 0.300033432 ubox
17 39 0.008017084 ubox
17 50 0.006541472 ubox
17 51 0.130259720 ubox
17 52 0.119941269 ubox
17 53 0.006137335 ubox
18 23 0.008775891 ubox
18 26 0.858221945 ubox
18 37 0.302116699 ubox
18 43 0.003503160 ubox
18 49 0.006991553 ubox
18 55 0.018484668 ubox
19 25 0.857731235 ubox
19 33 0.025923722 ubox
19 36 0.301917247 ubox
19 42 0.003768981 ubox
19 50 0.144194862 ubox
19 54 0.018652365 ubox
20 32 0.027588790 ubox
20 48 0.127790062 ubox
20 49 0.138066933 ubox
21 31 0.025570952 ubox
21 32 0.027411109 ubox
21 47 0.139999249 ubox
21 48 0.130366050 ubox
21 49 0.006464699 ubox
22 29 0.016474084 ubox
22 31 0.028771775 ubox
22 46 0.147232314 ubox
22 47 0.118031771 ubox
22 48 0.007027343 ubox
23 28 0.016684130 ubox
23 33 0.124481646 ubox
23 45 0.148110877 ubox
23 50 0.006488207 ubox
24 31 0.234602547 ubox
24 32 0.123875646 ubox
24 47 0.003794396 ubox
24 49 0.006720391 ubox
25 30 0.233726415 ubox
25 31 0.104531316 ubox
25 37 0.013206406 ubox
25 43 0.178599401 ubox
25 46 0.004755318 ubox
25 48 0.006152778 ubox
25 55 0.256783962 ubox
26 33 0.095064088 ubox
26 36 0.013208596 ubox
26 42 0.178486741 ubox
26 50 0.091793446 ubox
26 54 0.258648860 ubox
27 32 0.085762211 ubox
27 47 0.008681072 ubox
27 48 0.006182973 ubox
27 49 0.091818569 ubox
28 46 0.010516447 ubox
28 47 0.007553866 ubox
28 48 0.087272206 ubox
29 35 0.008241860 ubox
29 36 0.009923087 ubox
29 40 0.065803757 ubox
29 41 0.275557555 ubox
29 42 0.085464615 ubox
29 45 0.010124081 ubox
29 51 0.097733934 ubox
29 52 0.473643399 ubox
30 34 0.013924848 ubox
30 35 0.013866861 ubox
30 36 0.009625117 ubox
30 39 0.072908672 ubox
30 40 0.359800916 ubox
30 41 0.116362329 ubox
30 42 0.024245304 ubox
30 50 0.130568765 ubox
30 51 0.500585154 ubox
30 54 0.042936999 ubox
31 35 0.008852982 ubox
31 38 0.067533666 ubox
31 39 0.360238923 ubox
31 40 0.115343055 ubox
31 41 0.024491605 ubox
31 42 0.005219412 ubox
31 50 0.493380403 ubox
31 51 0.015133056 ubox
31 52 0.028205774 ubox
31 53 0.043051776 ubox
31 54 0.004906651 ubox
32 38 0.360054949 ubox
32 39 0.108377167 ubox
32 40 0.024084155 ubox
32 41 0.007679939 ubox
32 45 0.126395593 ubox
32 50 0.024144664 ubox
32 51 0.030951501 ubox
32 52 0.041623840 ubox
32 53 0.006583091 ubox
33 37 0.355174037 ubox
33 44 0.148613643 ubox
33 47 0.194687922 ubox
33 48 0.129349481 ubox
33 49 0.029419492 ubox
34 43 0.148369993 ubox
34 44 0.070789718 ubox
34 46 0.187137870 ubox
34 47 0.103839471 ubox
34 48 0.035139187 ubox
34 49 0.026250822 ubox
35 43 0.064513063 ubox
35 44 0.758804184 ubox
35 46 0.011485066 ubox
35 47 0.004141386 ubox
35 48 0.003324540 ubox
36 43 0.760666027 ubox
36 55 0.024450505 ubox
37 42 0.760327835 ubox
37 50 0.040698738 ubox
37 54 0.024696317 ubox
38 48 0.003752224 ubox
38 49 0.041333487 ubox
39 46 0.003851750 ubox
39 47 0.004852775 ubox
39 48 0.041405234 ubox
39 49 0.003503889 ubox
40 46 0.005077171 ubox
40 47 0.039970407 ubox
40 48 0.004430700 ubox
40 49 0.004257912 ubox
41 46 0.035663463 ubox
41 47 0.004555186 ubox
41 48 0.004578164 ubox
42 46 0.003174308 ubox
42 47 0.003566356 ubox
42 55 0.020043970 ubox
43 51 0.224150745 ubox
43 54 0.019371692 ubox
44 50 0.225044484 ubox
45 49 0.182485298 ubox
46 52 0.019782012 ubox
46 53 0.022090835 ubox
46 54 0.021730284 ubox
47 51 0.019400675 ubox
47 52 0.022366533 ubox
47 53 0.028218532 ubox
47 54 0.017760544 ubox
48 52 0.024998426 ubox
48 53 0.019210190 ubox
48 54 0.014117590 ubox
49 53 0.014509787 ubox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
