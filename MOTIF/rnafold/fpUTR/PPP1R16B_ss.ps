%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAGAGCCAGCUCUGUCGCCGCUGGAGCAGCUGCGGCUCGGGGACCCACAGACACAGCCGGGGUCGGGAGCCGCCCGGGGCAGGGCUCGGGAGAGCGGGCCACACCAUGAGGCCCCAGCCCCACCAGAGGCCCCGCGCUGCCCUGGCCCCCGGUGCACCGUGCUAGCCCCCAGCCAGGGCGUUGGGGAGGGCGGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[102.62157440 120.13642120]
[98.92738342 134.67440796]
[95.23320007 149.21238708]
[91.53901672 163.75038147]
[100.81987000 176.33607483]
[99.78789520 191.93957520]
[88.93035126 203.19337463]
[73.37385559 204.78376770]
[60.46369934 195.95982361]
[56.29566193 180.88795471]
[62.83776855 166.68461609]
[77.00103760 160.05619812]
[80.69522095 145.51820374]
[84.38940430 130.98022461]
[88.08358765 116.44223785]
[81.72872925 112.45905304]
[62.66414642 100.50950623]
[51.19015503 110.17116547]
[39.71616745 119.83281708]
[28.24217987 129.49447632]
[16.76819229 139.15612793]
[11.19566727 153.96347046]
[-3.52351236 156.24273682]
[-14.99750042 165.90438843]
[-26.47148895 175.56604004]
[-37.94547653 185.22770691]
[-46.16683197 200.05490112]
[-62.69047165 196.25939941]
[-63.61751175 179.33082581]
[-47.60713196 173.75370789]
[-36.13314438 164.09205627]
[-24.65915680 154.43040466]
[-13.18516827 144.76873779]
[-8.43334007 130.65246582]
[7.10653639 127.68214417]
[18.58052444 118.02048492]
[30.05451202 108.35883331]
[41.52849960 98.69717407]
[53.00248718 89.03551483]
[58.58070755 75.11131287]
[56.95092392 60.20011520]
[55.32114029 45.28891754]
[53.69136047 30.37771988]
[52.06157684 15.46652317]
[50.43179703 0.55532539]
[43.93508530 14.07541275]
[32.55611420 23.84879494]
[18.21030235 28.23031425]
[3.31248713 26.48243141]
[-9.62958145 18.89936638]
[-18.43736076 6.75757933]
[-21.62823868 -7.89910173]
[-18.66509056 -22.60351562]
[-10.04670620 -34.88046265]
[2.77618146 -42.66336441]
[17.64509201 -44.64212418]
[32.05714035 -40.48365402]
[43.58634186 -30.88795090]
[50.29161072 -17.47169304]
[51.68930054 -32.40643311]
[53.08698654 -47.34117126]
[54.48467636 -62.27591324]
[55.88236618 -77.21065521]
[57.28005600 -92.14539337]
[58.67774582 -107.08013153]
[60.07543182 -122.01487732]
[61.00797653 -136.98585510]
[61.47447586 -151.97860718]
[61.94097519 -166.97134399]
[62.40747070 -181.96409607]
[59.54486465 -190.64619446]
[62.99961090 -197.18586731]
[63.69921494 -212.16954041]
[64.39881897 -227.15321350]
[49.39163971 -236.28564453]
[41.11516190 -251.68035889]
[41.76795578 -269.05755615]
[51.08029556 -283.63790894]
[66.41317749 -291.45687866]
[66.64645386 -306.45504761]
[66.87973022 -321.45324707]
[67.11300659 -336.45144653]
[67.34628296 -351.44961548]
[54.89321136 -357.34359741]
[46.56712723 -369.47082520]
[45.38649368 -385.07025146]
[52.59388733 -400.00009155]
[48.67405701 -414.47885132]
[44.75422668 -428.95764160]
[40.83440018 -443.43640137]
[28.83315086 -454.61236572]
[32.77437592 -470.53088379]
[48.60367966 -474.81634521]
[60.03723526 -463.06024170]
[55.31317520 -447.35623169]
[59.23300552 -432.87747192]
[63.15283203 -418.39868164]
[67.07266235 -403.91992188]
[82.06858063 -404.26980591]
[85.30884552 -418.91564941]
[88.54911804 -433.56149292]
[91.78938293 -448.20733643]
[95.02964783 -462.85317993]
[90.45611572 -477.99890137]
[100.76004791 -488.75430298]
[104.00032043 -503.40014648]
[101.51827240 -520.17138672]
[116.94702148 -527.19921875]
[127.97127533 -514.31890869]
[118.64615631 -500.15985107]
[115.40589142 -485.51403809]
[120.21118927 -471.41586304]
[109.67549133 -459.61291504]
[106.43522644 -444.96707153]
[103.19495392 -430.32122803]
[99.95468903 -415.67538452]
[96.71442413 -401.02954102]
[105.50644684 -380.35119629]
[98.89340210 -360.66918945]
[82.34447479 -351.21633911]
[82.11119080 -336.21813965]
[81.87791443 -321.21997070]
[81.64463806 -306.22177124]
[81.41136169 -291.22360229]
[92.89501953 -285.93743896]
[101.55651093 -276.66488647]
[106.08194733 -264.76068115]
[105.76532745 -251.98248291]
[100.61837006 -240.23139954]
[91.37406921 -231.26905823]
[79.38249969 -226.45361328]
[78.68289185 -211.46992493]
[77.98328400 -196.48625183]
[77.40021515 -181.49758911]
[76.93371582 -166.50485229]
[76.46721649 -151.51210022]
[76.00072479 -136.51936340]
[77.82736206 -134.38391113]
[78.91503143 -131.39366150]
[78.93292999 -127.82758331]
[77.65769196 -124.07946777]
[75.01016998 -120.61718750]
[73.61248779 -105.68244171]
[72.21479797 -90.74770355]
[70.81710815 -75.81296539]
[69.41941833 -60.87822342]
[68.02172852 -45.94348526]
[66.62403870 -31.00874329]
[65.22634888 -16.07400322]
[65.34299469 -1.07445693]
[66.97277832 13.83674049]
[68.60255432 28.74793816]
[70.23233795 43.65913391]
[71.86212158 58.57033157]
[73.49190521 73.48152924]
[100.78907776 60.74924088]
[130.14381409 72.17645264]
[142.70841980 102.56175995]
[152.89471436 113.57263947]
[163.08100891 124.58351898]
[173.26730347 135.59439087]
[183.45359802 146.60527039]
[193.63987732 157.61614990]
[208.69102478 162.49198914]
[211.65431213 177.08885193]
[221.84059143 188.09973145]
[226.84083557 189.64758301]
[230.38856506 192.66038513]
[232.16870117 196.33761597]
[232.23037720 199.86985779]
[241.89204407 211.34384155]
[251.55369568 222.81782532]
[261.21536255 234.29182434]
[270.87701416 245.76580811]
[280.53866577 257.23980713]
[290.20031738 268.71377563]
[305.96624756 269.81411743]
[316.27322388 281.79504395]
[315.00625610 297.54846191]
[302.91702271 307.72817993]
[287.17788696 306.29470825]
[277.12655640 294.09854126]
[278.72631836 278.37542725]
[269.06466675 266.90145874]
[259.40301514 255.42745972]
[249.74136353 243.95347595]
[240.07971191 232.47949219]
[230.41804504 221.00550842]
[220.75639343 209.53150940]
[210.82972717 198.28602600]
[200.64343262 187.27514648]
[186.32087708 183.18687439]
[182.62901306 167.80244446]
[172.44271851 156.79156494]
[162.25642395 145.78068542]
[152.07012939 134.76980591]
[141.88383484 123.75893402]
[131.69754028 112.74805450]
[124.42855072 114.59514618]
[128.12249756 129.13319397]
[113.58438110 132.82688904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[23 33]
[24 32]
[25 31]
[26 30]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 137]
[68 136]
[69 135]
[70 134]
[72 133]
[73 132]
[74 131]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[87 98]
[88 97]
[89 96]
[90 95]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
[158 198]
[159 197]
[160 196]
[161 195]
[162 194]
[163 193]
[165 191]
[166 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
