%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCUGCGCCGGGGGCGGGGCCGGCGAGGGCUGCCUCUGGGGGGUCCGCUAGUCGCGGGGCGGCGGCGGCGGCUGCGGGCGCGAGGUGAGGGGCGCGAGGUGAGGGUCGCGAGGUUCCCAGCAGGAUGCCCCGGCUCUGCAGGAAGCUGAAGUGAGAGGCCCGGAGAGGGCCCAGCCCGCCCGGGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[98.74907684 292.57052612]
[82.36968231 291.76586914]
[75.11855316 277.05691528]
[84.45503235 263.57498169]
[85.19104767 248.59306335]
[85.92706299 233.61112976]
[86.66307831 218.62919617]
[87.39909363 203.64726257]
[80.29560852 190.55567932]
[88.70072937 177.15177917]
[89.43674469 162.16984558]
[90.17276001 147.18791199]
[90.90877533 132.20597839]
[91.64479065 117.22405243]
[81.50870514 104.95472717]
[84.15215302 89.26113892]
[76.02378082 76.65441132]
[67.89540863 64.04768372]
[59.76703262 51.44095993]
[51.63865662 38.83423615]
[43.51028442 26.22750854]
[35.38190842 13.62078285]
[27.25353622 1.01405728]
[19.12516212 -11.59266853]
[10.99678898 -24.19939423]
[7.03192329 -26.05741119]
[4.16180897 -28.80922127]
[2.53344154 -31.99767685]
[2.12910223 -35.16506577]
[2.78061867 -37.90724564]
[-4.50583220 -51.01860046]
[-11.79228306 -64.12995911]
[-26.72317123 -68.56913757]
[-33.92589188 -81.96971893]
[-29.60179710 -96.17668152]
[-36.88824844 -109.28803253]
[-44.17469788 -122.39939117]
[-51.56817245 -135.45069885]
[-59.06817245 -148.44107056]
[-66.56816864 -161.43145752]
[-74.06816864 -174.42182922]
[-81.56816864 -187.41221619]
[-89.06816864 -200.40260315]
[-96.56816864 -213.39297485]
[-107.34689331 -223.82461548]
[-120.57571411 -230.89556885]
[-133.80453491 -237.96652222]
[-147.03335571 -245.03747559]
[-160.26217651 -252.10842896]
[-173.49099731 -259.17938232]
[-182.55059814 -260.46884155]
[-186.87701416 -266.47576904]
[-199.98837280 -273.76223755]
[-213.09973145 -281.04867554]
[-226.21109009 -288.33514404]
[-239.32243347 -295.62158203]
[-252.43379211 -302.90802002]
[-262.72225952 -299.31671143]
[-273.07357788 -301.93557739]
[-280.11990356 -309.66296387]
[-281.70684814 -319.77716064]
[-294.57278442 -327.48870850]
[-310.96966553 -327.21585083]
[-319.17120361 -341.41680908]
[-310.74035645 -355.48281860]
[-294.35006714 -354.94400024]
[-286.86123657 -340.35464478]
[-273.99530029 -332.64309692]
[-254.70066833 -333.75839233]
[-245.14733887 -316.01937866]
[-232.03599548 -308.73294067]
[-218.92463684 -301.44647217]
[-205.81327820 -294.16003418]
[-192.70191956 -286.87359619]
[-179.59056091 -279.58712769]
[-166.42004395 -272.40820312]
[-153.19122314 -265.33724976]
[-139.96240234 -258.26629639]
[-126.73358154 -251.19534302]
[-113.50476074 -244.12438965]
[-100.27594757 -237.05343628]
[-93.41937256 -240.09274292]
[-101.63875580 -252.64031982]
[-109.85814667 -265.18789673]
[-118.07752991 -277.73547363]
[-128.52124023 -288.50250244]
[-128.53135681 -303.50250244]
[-118.10214996 -314.28356934]
[-103.11006927 -314.77105713]
[-92.00254822 -304.69021606]
[-91.03823853 -289.72116089]
[-87.26090240 -275.20455933]
[-83.48356628 -260.68795776]
[-79.70622253 -246.17137146]
[-72.84965515 -249.21067810]
[-69.20494843 -263.76113892]
[-65.56024933 -278.31161499]
[-61.91554260 -292.86209106]
[-58.27083969 -307.41256714]
[-68.33493042 -319.22329712]
[-69.50119781 -334.69647217]
[-61.32119370 -347.88235474]
[-46.94029236 -353.71066284]
[-31.88824463 -349.94033813]
[-21.95286942 -338.02108765]
[-20.95452499 -322.53616333]
[-29.27709007 -309.43981934]
[-43.72037125 -303.76785278]
[-47.36507416 -289.21737671]
[-51.00977707 -274.66690063]
[-54.65447998 -260.11645508]
[-58.29918289 -245.56597900]
[-62.16023254 -235.07292175]
[-68.36045837 -227.23388672]
[-75.86222076 -222.47718811]
[-83.57778931 -220.89297485]
[-76.07778931 -207.90260315]
[-68.57778931 -194.91221619]
[-61.07778931 -181.92182922]
[-53.57778931 -168.93145752]
[-46.07778931 -155.94107056]
[-38.57778931 -142.95069885]
[-32.50086594 -138.72312927]
[-31.06334305 -129.68583679]
[-23.77689362 -116.57448578]
[-16.49044228 -103.46312714]
[-2.14244246 -99.63291931]
[5.43383121 -86.43994141]
[1.31907213 -71.41640472]
[8.60552311 -58.30505371]
[15.89197350 -45.19369888]
[23.60351562 -32.32777023]
[31.73188782 -19.72104263]
[39.86026382 -7.11431646]
[47.98863602 5.49240971]
[56.11700821 18.09913635]
[64.24538422 30.70586205]
[72.37375641 43.31258774]
[80.50212860 55.91931534]
[88.63050842 68.52603912]
[96.75888062 81.13276672]
[113.42536926 86.35314178]
[118.91773987 102.93198395]
[131.65577698 110.85300446]
[138.26608276 111.45284271]
[142.87948608 114.80607605]
[144.67503357 119.24736786]
[157.14707947 127.58091736]
[169.61912537 135.91447449]
[182.09117126 144.24803162]
[178.31872559 129.73014832]
[183.68217468 115.72181702]
[196.18574524 107.43562317]
[211.17674255 107.95491791]
[223.07695007 117.08646393]
[227.45820618 131.43235779]
[222.69020081 145.65438843]
[210.54716492 154.46044922]
[195.54809570 154.57389832]
[206.82569885 164.46408081]
[218.10328674 174.35426331]
[229.38088989 184.24446106]
[240.65849304 194.13464355]
[256.69680786 194.52439880]
[266.27661133 207.39321899]
[262.04913330 222.86926270]
[247.25727844 229.08061218]
[233.24813843 221.26248169]
[230.76829529 205.41224670]
[219.49070740 195.52204895]
[208.21310425 185.63186646]
[196.93551636 175.74168396]
[185.65791321 165.85148621]
[173.75761414 156.72007751]
[161.28556824 148.38652039]
[148.81352234 140.05296326]
[136.34147644 131.71940613]
[123.73475647 123.59103394]
[110.99671936 115.67002106]
[108.88580322 116.95641327]
[106.62672424 117.96006775]
[105.89070892 132.94200134]
[105.15469360 147.92393494]
[104.41867828 162.90585327]
[103.68266296 177.88778687]
[110.73349762 192.05099487]
[102.38101959 204.38328552]
[101.64500427 219.36521912]
[100.90899658 234.34715271]
[100.17298126 249.32908630]
[99.43696594 264.31100464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[30 131]
[31 130]
[32 129]
[35 126]
[36 125]
[37 124]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[61 68]
[62 67]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[143 179]
[144 178]
[147 177]
[148 176]
[149 175]
[150 174]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
