%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGGUGCUGCCCAGGGAGCAGGGAACAGGAAGUCCCGGGUGGGGAGGAAGCACCGGCGGCCACAGGCCUCAGAAGCAGCAGGAGUGAGCUGUGGGCACAGCUGUGGGGCAGCCAGGCGCGUCAGGCCUCACAUGUCUGGGAGAUGUAGGCUGCCUGGGCUGGUGGCCCCUGAGCCGC\
) } def
/len { sequence length } bind def

/coor [
[136.63032532 609.02166748]
[130.75144958 605.56030273]
[125.81445312 600.82550049]
[122.09054565 595.06573486]
[119.78695679 588.58593750]
[119.03544617 581.73168945]
[119.88478851 574.87042236]
[122.29768372 568.37194824]
[126.15232849 562.58862305]
[131.24853516 557.83587646]
[137.31814575 554.37530518]
[135.23054504 539.52130127]
[133.14294434 524.66729736]
[131.05534363 509.81326294]
[128.96775818 494.95925903]
[126.88015747 480.10522461]
[124.79256439 465.25122070]
[115.35926819 453.72460938]
[121.10065460 438.98193359]
[119.01305389 424.12789917]
[116.92546082 409.27389526]
[107.32299042 405.51187134]
[100.10281372 398.03494263]
[96.62477112 388.15429688]
[97.58411407 377.64212036]
[102.87367249 368.41384888]
[111.59119415 362.17901611]
[110.28385925 347.23608398]
[108.97652435 332.29318237]
[99.58409882 328.03378296]
[92.76512909 320.18920898]
[89.80897522 310.14007568]
[91.31716156 299.69250488]
[97.08244324 290.75372314]
[106.11432648 284.98367310]
[105.59083557 269.99279785]
[105.06733704 255.00193787]
[104.54384613 240.01107788]
[104.02035522 225.02021790]
[103.49686432 210.02935791]
[102.45051575 195.06588745]
[100.88259125 180.14805603]
[99.31465912 165.23023987]
[97.74673462 150.31240845]
[96.17881012 135.39457703]
[94.61087799 120.47675323]
[81.55622101 110.40032959]
[79.68936920 94.01517487]
[90.14273834 81.26035309]
[88.31469727 66.37216187]
[78.95325470 53.61779404]
[85.08181763 40.04244995]
[83.25377655 25.15425873]
[73.89232635 12.39989090]
[80.02088928 -1.17545366]
[78.19285583 -16.06364632]
[76.23496246 -30.93531799]
[74.14736176 -45.78934097]
[72.05976868 -60.64336014]
[56.51305389 -71.43164825]
[53.80609131 -89.83821106]
[65.19192505 -104.14684296]
[62.58720016 -118.91896057]
[59.98247910 -133.69107056]
[57.37775421 -148.46319580]
[54.77303314 -163.23530579]
[52.16830826 -178.00743103]
[49.04963303 -192.67964172]
[45.42080688 -207.23406982]
[41.79197693 -221.78851318]
[38.16314697 -236.34294128]
[28.19664955 -225.13273621]
[13.20962048 -225.75639343]
[4.20894194 -237.75587463]
[7.80495834 -252.31845093]
[21.35665703 -258.74896240]
[34.91173935 -252.32412720]
[32.56522369 -267.13946533]
[30.21870613 -281.95477295]
[27.87218857 -296.77011108]
[25.52567291 -311.58541870]
[11.63924122 -318.50979614]
[4.50479412 -332.28945923]
[6.86567211 -347.62588501]
[17.81406975 -358.62188721]
[33.14010239 -361.04928589]
[46.95060349 -353.97470093]
[53.93514633 -340.11843872]
[51.40803528 -324.80853271]
[40.34099579 -313.93194580]
[42.68751526 -299.11660767]
[45.03403091 -284.30130005]
[47.38054657 -269.48596191]
[49.72706604 -254.67065430]
[52.71758270 -239.97177124]
[56.34641266 -225.41734314]
[59.97524261 -210.86289978]
[63.60406876 -196.30847168]
[65.96563721 -194.74928284]
[67.84279633 -192.14761353]
[68.83046722 -188.68655396]
[68.59851837 -184.69404602]
[66.94042206 -180.61215210]
[69.54515076 -165.84002686]
[72.14987183 -151.06791687]
[74.75459290 -136.29580688]
[77.35931396 -121.52368164]
[79.96404266 -106.75157166]
[90.53445435 -102.37219238]
[97.74275970 -93.33258820]
[99.69963074 -81.81585693]
[95.80236816 -70.67606354]
[86.91378784 -62.73095703]
[89.00138092 -47.87693787]
[91.08898163 -33.02291489]
[95.14488220 -26.81935120]
[93.08104706 -17.89168549]
[94.90908813 -3.00349379]
[104.13977814 8.68597126]
[98.14196777 23.32621956]
[99.97000885 38.21441269]
[109.20069885 49.90387726]
[103.20288849 64.54412079]
[105.03092957 79.43231964]
[115.88835907 86.00357819]
[121.03792572 97.60302734]
[118.62965393 110.06359100]
[109.52870941 118.90882111]
[111.09663391 133.82664490]
[112.66456604 148.74447632]
[114.23249054 163.66230774]
[115.80041504 178.58013916]
[117.36834717 193.49797058]
[120.08732605 196.96470642]
[121.41077423 200.73861694]
[121.41536713 204.33782959]
[120.32804108 207.35612488]
[118.48772430 209.50585938]
[119.01121521 224.49671936]
[119.53471375 239.48757935]
[120.05820465 254.47845459]
[120.58169556 269.46929932]
[121.10518646 284.46017456]
[136.50476074 297.32434082]
[137.50900269 317.06039429]
[123.91944122 330.98583984]
[125.22678375 345.92874146]
[126.53411865 360.87167358]
[142.58584595 372.91226196]
[144.62161255 392.56872559]
[131.77947998 407.18627930]
[133.86708069 422.04031372]
[135.95468140 436.89431763]
[145.53729248 449.48336792]
[139.64657593 463.16360474]
[141.73417664 478.01763916]
[143.82177734 492.87164307]
[145.90937805 507.72567749]
[147.99696350 522.57971191]
[150.08456421 537.43371582]
[152.17216492 552.28771973]
[172.86048889 564.57299805]
[177.82771301 587.85711670]
[164.24559021 607.10217285]
[168.63116455 621.44677734]
[173.01673889 635.79132080]
[177.40231323 650.13592529]
[181.78788757 664.48046875]
[195.85816956 671.67791748]
[200.63842773 686.74194336]
[193.29263306 700.73529053]
[178.17890930 705.35601807]
[164.26397705 697.86273193]
[159.80329895 682.70098877]
[167.44332886 668.86602783]
[163.05773926 654.52148438]
[158.67216492 640.17687988]
[154.28659058 625.83233643]
[149.90101624 611.48779297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[19 153]
[20 152]
[21 151]
[27 148]
[28 147]
[29 146]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[49 124]
[50 123]
[52 121]
[53 120]
[55 118]
[56 117]
[57 115]
[58 114]
[59 113]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[68 98]
[69 97]
[70 96]
[71 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
