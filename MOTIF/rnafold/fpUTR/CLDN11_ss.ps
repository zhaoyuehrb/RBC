%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCGCUGCUGUCCCCGCCGUGCGCCCUUCGCCGCUGAGCUCGCAGCCUCCGGCGCCCACCUCCACCUCCAGUGUCCCGCCUCGGGCCGUCGCCCUCCAGCGGCUCGCGAGCGUGGGAGACGUACCUGGGCAGGCACUGUCCAGCCCAGGCCCAGGCACAGCCGUGAGGGGCGAGGCACGGGGACAUCCUGGCGGCCACC\
) } def
/len { sequence length } bind def

/coor [
[118.49013519 705.04626465]
[103.75140381 700.91967773]
[92.62658691 690.40795898]
[87.67207336 675.92651367]
[90.02638245 660.80316162]
[99.14850616 648.51312256]
[112.94224548 641.88049316]
[113.40644836 626.88769531]
[113.87065125 611.89489746]
[114.33484650 596.90203857]
[114.79904938 581.90924072]
[115.26325226 566.91644287]
[115.14717865 551.91687012]
[114.45101929 536.93304443]
[113.75485992 521.94921875]
[113.05869293 506.96536255]
[112.36253357 491.98153687]
[111.66637421 476.99771118]
[110.73841858 462.02642822]
[109.57888794 447.07131958]
[108.41935730 432.11621094]
[100.08502197 426.19067383]
[96.31204987 416.45013428]
[98.57298279 406.02713013]
[106.35666656 398.41802979]
[105.66050720 383.43417358]
[104.96434784 368.45034790]
[104.26818085 353.46652222]
[103.57202148 338.48266602]
[102.87586212 323.49884033]
[102.17969513 308.51501465]
[101.48353577 293.53115845]
[100.78737640 278.54733276]
[100.09120941 263.56347656]
[91.77156830 251.20903015]
[98.86005402 237.06463623]
[98.16388702 222.08079529]
[97.46772766 207.09695435]
[96.77156830 192.11311340]
[88.45191956 179.75865173]
[95.54040527 165.61425781]
[94.84424591 150.63043213]
[94.14807892 135.64659119]
[67.67633057 124.19403839]
[55.71019363 94.52421570]
[40.71423721 94.17604065]
[32.05583572 97.10688019]
[25.48939705 93.70465851]
[10.50062180 93.12445831]
[-4.48815298 92.54425812]
[-20.54930496 97.97341919]
[-30.21245766 84.04288483]
[-19.50136185 70.90101624]
[-3.90795445 77.55548859]
[11.08082008 78.13568878]
[26.06959534 78.71588135]
[41.06241226 79.18008423]
[56.05836868 79.52825928]
[61.17382812 74.04354858]
[48.18056107 66.54854584]
[35.18729401 59.05355072]
[22.19402504 51.55855179]
[7.61838675 48.01584625]
[-2.46536446 36.91098404]
[-4.59006548 22.06222534]
[1.97483385 8.57511711]
[14.97208023 1.08702099]
[29.93274498 2.17261934]
[41.71280289 11.45864391]
[46.26184845 25.75341988]
[54.64281464 38.19365311]
[63.02378082 50.63388824]
[71.40474701 63.07411957]
[76.52020264 57.58940887]
[75.12937927 42.65402603]
[66.14584351 29.63071823]
[72.66971588 16.24085999]
[71.27889252 1.30547905]
[69.88806915 -13.62990189]
[68.49724579 -28.56528282]
[67.10642242 -43.50066376]
[65.71559906 -58.43604660]
[64.20925140 -73.36021423]
[62.58746338 -88.27228546]
[60.96567917 -103.18435669]
[59.34389114 -118.09642792]
[57.49153519 -132.98161316]
[55.40904617 -147.83634949]
[53.32655716 -162.69108582]
[51.24406815 -177.54582214]
[49.16158295 -192.40055847]
[47.07909393 -207.25529480]
[33.02576447 -213.61985779]
[24.66347885 -226.58425903]
[24.66061401 -242.01161194]
[33.01808167 -254.97912598]
[47.06904602 -261.34890747]
[62.32989502 -259.08834839]
[73.93094635 -248.91883850]
[78.17034912 -234.08538818]
[73.69532013 -219.32131958]
[61.93383026 -209.33778381]
[64.01631927 -194.48304749]
[66.09880829 -179.62831116]
[68.18129730 -164.77357483]
[70.26378632 -149.91883850]
[72.34627533 -135.06410217]
[75.55753326 -131.52114868]
[76.57310486 -125.92137909]
[74.25595856 -119.71820831]
[75.87774658 -104.80614471]
[77.49953461 -89.89407349]
[79.12131500 -74.98200226]
[82.97221375 -68.66822815]
[80.65097809 -59.82686996]
[82.04180145 -44.89148712]
[83.43262482 -29.95610619]
[84.82344818 -15.02072620]
[86.21427155 -0.08534468]
[87.60509491 14.85003662]
[96.48915863 26.80506516]
[90.06476593 41.26320267]
[91.45558929 56.19858170]
[104.12741852 57.69968796]
[115.24505615 62.61338043]
[123.96479797 70.18864441]
[129.73699951 79.49061584]
[143.58406067 73.72356415]
[157.43112183 67.95651245]
[171.27818298 62.18946838]
[185.12525940 56.42241669]
[198.97232056 50.65536880]
[212.81938171 44.88832092]
[222.58407593 32.43997574]
[237.30786133 34.68931580]
[251.15492249 28.92226601]
[256.94219971 14.21570683]
[271.46667480 7.98552275]
[286.11123657 13.92797184]
[292.18750000 28.51750374]
[286.09054565 43.09840775]
[271.43759155 49.02009201]
[256.92196655 42.76932907]
[243.07490540 48.53637695]
[234.30064392 60.57222366]
[218.58642578 58.73538208]
[204.73936462 64.50243378]
[190.89230347 70.26947784]
[177.04524231 76.03652954]
[163.19818115 81.80358124]
[149.35112000 87.57062531]
[135.50405884 93.33767700]
[135.88656616 104.13257599]
[133.06039429 114.55796814]
[127.27821350 123.68170166]
[119.05702972 130.68800354]
[109.13191986 134.95042419]
[109.82807922 149.93426514]
[110.52423859 164.91810608]
[118.89368439 178.34431458]
[111.75540161 191.41696167]
[112.45156097 206.40080261]
[113.14772797 221.38462830]
[113.84388733 236.36846924]
[122.21332550 249.79467773]
[115.07505035 262.86734009]
[115.77120972 277.85116577]
[116.46736908 292.83499146]
[117.16353607 307.81884766]
[117.85969543 322.80267334]
[118.55585480 337.78649902]
[119.25202179 352.77035522]
[119.94818115 367.75418091]
[120.64434052 382.73800659]
[121.34050751 397.72186279]
[132.97682190 414.17755127]
[123.37447357 430.95666504]
[124.53400421 445.91180420]
[125.69353485 460.86691284]
[129.11621094 466.53558350]
[129.15206909 472.22656250]
[126.65020752 476.30154419]
[127.34637451 491.28536987]
[128.04252625 506.26922607]
[128.73869324 521.25305176]
[129.43486023 536.23687744]
[130.13101196 551.22070312]
[142.03176880 542.08990479]
[156.62799072 545.54675293]
[163.16932678 559.04534912]
[156.83793640 572.64361572]
[142.29702759 576.32629395]
[130.25607300 567.38061523]
[129.79187012 582.37347412]
[129.32766724 597.36627197]
[128.86346436 612.35906982]
[128.39926147 627.35192871]
[127.93505859 642.34472656]
[141.29206848 649.81793213]
[149.63641357 662.64880371]
[151.05061340 677.88879395]
[145.20971680 692.03601074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 179]
[20 178]
[21 177]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[36 164]
[37 163]
[38 162]
[39 161]
[41 159]
[42 158]
[43 157]
[45 58]
[46 57]
[48 56]
[49 55]
[50 54]
[74 123]
[75 122]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 113]
[84 112]
[85 111]
[86 110]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
