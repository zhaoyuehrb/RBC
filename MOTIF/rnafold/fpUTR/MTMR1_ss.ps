%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCUUGUGGGUAACGCGGGGCCGCCAGGUGACAGCUAAUGGCGGCGGCCGCCUGAGGCGGGCGGGCGGUAUAGAGCGGGCGGCAGGAGGCAAGCAGCGAAACCUUCCCGGCCGCCGCUCCCGUCCCGACGGCGGCUUCCCCAAGGCGGCAGGACUCGGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[97.13322449 138.94944763]
[89.63322449 151.93981934]
[82.13322449 164.93020630]
[74.63322449 177.92059326]
[67.13322449 190.91096497]
[59.63322449 203.90135193]
[52.13322449 216.89172363]
[44.63322449 229.88211060]
[37.13322449 242.87249756]
[29.63322639 255.86286926]
[22.13322639 268.85324097]
[24.87988663 284.65942383]
[14.12726212 296.56576538]
[-1.87615359 295.43872070]
[-10.85391045 282.14288330]
[-5.91904068 266.87765503]
[9.14284515 261.35324097]
[16.64284515 248.36286926]
[24.14284515 235.37249756]
[31.64284515 222.38211060]
[39.14284515 209.39172363]
[46.64284515 196.40135193]
[54.14284515 183.41096497]
[61.64284515 170.42059326]
[69.14284515 157.43020630]
[76.64284515 144.43981934]
[84.14284515 131.44944763]
[79.52169800 125.54224396]
[70.27941132 113.72783661]
[65.65827179 107.82064056]
[51.24451065 111.97317505]
[36.83074951 116.12570190]
[25.84954643 128.30540466]
[9.86962509 124.62109375]
[5.32975864 108.86286926]
[16.90017319 97.24144745]
[32.67821503 101.71194458]
[47.09197617 97.55941010]
[61.50573730 93.40687561]
[72.48644257 78.71001434]
[87.46194458 72.17130280]
[101.72183990 73.79976654]
[106.93990326 59.73663330]
[112.15796661 45.67349625]
[112.21395111 36.49660110]
[117.60731506 31.39771080]
[123.08743286 17.43460464]
[120.92675018 1.76163232]
[132.77899170 -7.25909758]
[138.25910950 -21.22220421]
[143.73922729 -35.18531036]
[149.21934509 -49.14841461]
[154.69946289 -63.11152267]
[160.17958069 -77.07463074]
[165.65968323 -91.03773499]
[159.04765320 -99.50289917]
[156.58676147 -109.87538910]
[158.65963745 -120.24975586]
[164.82241821 -128.74902344]
[173.89755249 -133.86422729]
[184.19834900 -134.72218323]
[190.45275879 -148.35606384]
[196.70716858 -161.98992920]
[202.96159363 -175.62379456]
[209.08825684 -189.31553650]
[215.08662415 -203.06398010]
[221.08500671 -216.81240845]
[227.08338928 -230.56083679]
[213.37329102 -224.47535706]
[198.67514038 -227.46939087]
[188.43795776 -238.43298340]
[186.45698547 -253.30158997]
[193.46659851 -266.56301880]
[206.86816406 -273.30084229]
[221.69329834 -271.01718140]
[232.44592285 -260.55862427]
[235.13999939 -245.80467224]
[243.12046814 -258.50552368]
[251.10095215 -271.20639038]
[259.08142090 -283.90725708]
[267.06192017 -296.60812378]
[268.99111938 -305.58010864]
[275.31225586 -309.46990967]
[283.52883911 -322.01931763]
[291.74539185 -334.56875610]
[299.96197510 -347.11816406]
[300.54907227 -365.50369263]
[316.47583008 -372.83059692]
[324.45632935 -385.53143311]
[332.43679810 -398.23229980]
[340.41726685 -410.93316650]
[348.39776611 -423.63403320]
[339.87835693 -436.25701904]
[337.23611450 -451.25497437]
[340.92880249 -466.02938843]
[350.31668091 -478.02053833]
[363.77319336 -485.15087891]
[378.96697998 -486.18502808]
[393.26556396 -480.94381714]
[404.19165039 -470.33532715]
[409.85223389 -456.19750977]
[409.26660156 -440.97985840]
[402.53616333 -427.31890869]
[390.82708740 -417.58151245]
[376.16796875 -413.45474243]
[361.09863281 -415.65356445]
[353.11813354 -402.95269775]
[345.13766479 -390.25183105]
[337.15719604 -377.55096436]
[329.17669678 -364.85009766]
[331.55978394 -352.96401978]
[324.97988892 -342.30776978]
[312.51138306 -338.90158081]
[304.29483032 -326.35217285]
[296.07824707 -313.80276489]
[287.86166382 -301.25332642]
[279.76278687 -288.62765503]
[271.78228760 -275.92678833]
[263.80181885 -263.22592163]
[255.82133484 -250.52505493]
[247.84085083 -237.82418823]
[240.83183289 -224.56246948]
[234.83345032 -210.81402588]
[228.83506775 -197.06559753]
[222.83668518 -183.31715393]
[223.04490662 -175.89801025]
[216.59545898 -169.36938477]
[210.34104919 -155.73551941]
[204.08662415 -142.10163879]
[197.83221436 -128.46777344]
[205.95877075 -110.80141449]
[198.41770935 -92.54843903]
[179.62280273 -85.55761719]
[174.14268494 -71.59451294]
[168.66256714 -57.63140869]
[163.18244934 -43.66830063]
[157.70233154 -29.70519447]
[152.22221375 -15.74208832]
[146.74209595 -1.77898240]
[149.29475403 12.89525414]
[137.05053711 22.91471863]
[131.57041931 36.87782669]
[126.22109985 50.89155960]
[121.00303650 64.95469666]
[115.78497314 79.01782990]
[126.24642181 99.26359558]
[116.93662262 120.06408691]
[122.93500519 133.81251526]
[128.93338013 147.56095886]
[134.93176270 161.30938721]
[141.05842590 175.00114441]
[147.31283569 188.63500977]
[162.55201721 191.55854797]
[173.13777161 202.90409851]
[174.99964905 218.30906677]
[167.42173767 231.84992981]
[153.31788635 238.31993103]
[138.11131287 235.23124695]
[127.64926910 223.77153015]
[125.95461273 208.34727478]
[133.67897034 194.88941956]
[127.42456055 181.25555420]
[121.75377655 176.46708679]
[121.18332672 167.30776978]
[115.18495178 153.55934143]
[109.18656921 139.81089783]
[103.18818665 126.06246948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[30 39]
[31 38]
[32 37]
[42 145]
[43 144]
[44 143]
[46 142]
[47 141]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[54 134]
[55 133]
[61 130]
[62 129]
[63 128]
[64 127]
[65 125]
[66 124]
[67 123]
[68 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[83 116]
[84 115]
[85 114]
[86 113]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[147 167]
[148 166]
[149 165]
[150 164]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
