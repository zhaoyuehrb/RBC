%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAGGGGUUGGCGGGAGGAGAGCGCUUGUCCCAGGUCCCUACCAGGUGCCCGUAGACGUCGGCAGGCUGGAGGUAGAAGGUGGAGUUGAGCAGCUCUUCCAGCCUGCGCGGAACGUCGUUCUCCCGGUAGUACUCCAUCGCCUGCUGCUUCAGCUUCUGCAGCUCCCUAGUGGUCCCACAGCUGCGGCCGCCGCCUUCUUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[122.64212036 383.76046753]
[122.19338989 368.76718140]
[121.74465942 353.77389526]
[121.29592896 338.78060913]
[120.84719849 323.78732300]
[120.39846039 308.79403687]
[119.94972992 293.80075073]
[119.50099945 278.80746460]
[119.05226898 263.81417847]
[118.60353851 248.82087708]
[115.80229950 244.95191956]
[115.40230560 239.28199768]
[118.37242889 233.37382507]
[118.37242889 218.37382507]
[118.37242889 203.37382507]
[118.37242889 188.37382507]
[118.37242889 173.37382507]
[118.37242889 158.37382507]
[77.74398041 145.54212952]
[62.34806824 114.03299713]
[72.69949341 88.36971283]
[60.83342743 79.19384766]
[48.96736145 70.01798248]
[37.10129547 60.84211731]
[25.23523140 51.66625595]
[13.36916542 42.49039078]
[1.50309980 33.31452560]
[11.23944283 44.72520447]
[14.28664112 59.41242981]
[9.89331722 73.75463104]
[-0.85722506 84.21530914]
[-15.31412029 88.21508026]
[-29.91259384 84.76768494]
[-41.05295944 74.72316742]
[-45.98822784 60.55831146]
[-43.50146866 45.76588058]
[-34.20585632 33.99338531]
[-20.39471436 28.14386559]
[-35.11194229 31.04270554]
[-49.82916641 33.94154358]
[-61.87390518 44.19994736]
[-75.85652161 39.06813049]
[-90.57375336 41.96696854]
[-105.29097748 44.86580658]
[-119.66302490 53.85916901]
[-132.28350830 42.53839493]
[-124.89884186 27.27723122]
[-108.18981171 30.14858055]
[-93.47258759 27.24974251]
[-78.75536346 24.35090446]
[-67.76329803 14.29984283]
[-52.72800446 19.22431755]
[-38.01078033 16.32547951]
[-23.29355431 13.42664051]
[-19.93870544 6.71881008]
[-33.35426331 0.00890540]
[-26.64414978 -13.40654850]
[-13.22900772 -6.69685125]
[-9.87415886 -13.40468216]
[-16.38241577 -26.91921425]
[-22.89067078 -40.43374634]
[-29.39892769 -53.94828033]
[-35.90718460 -67.46281433]
[-42.61688232 -80.87847137]
[-49.52651596 -94.19226074]
[-56.53554535 -107.45399475]
[-63.64357758 -120.66292572]
[-70.75160980 -133.87185669]
[-77.85963440 -147.08079529]
[-84.96766663 -160.28971863]
[-92.07569885 -173.49865723]
[-99.18372345 -186.70759583]
[-106.29175568 -199.91651917]
[-113.39978790 -213.12545776]
[-120.50781250 -226.33439636]
[-127.61584473 -239.54331970]
[-134.72387695 -252.75225830]
[-138.49815369 -254.90261841]
[-141.12699890 -257.84631348]
[-142.50166321 -261.12570190]
[-142.67324829 -264.29483032]
[-141.83502197 -266.97058105]
[-148.14038086 -280.58096313]
[-160.96188354 -289.85025024]
[-159.29138184 -304.65087891]
[-165.59674072 -318.26126099]
[-180.84674072 -321.12777710]
[-191.47485352 -332.43365479]
[-193.39433289 -347.83157349]
[-185.86711121 -361.40066528]
[-171.78756714 -367.92337036]
[-156.56954956 -364.89160156]
[-146.06471252 -353.47106934]
[-144.31237793 -338.05325317]
[-151.98635864 -324.56661987]
[-145.68099976 -310.95623779]
[-133.31050110 -302.66046143]
[-134.52999878 -286.88632202]
[-128.22463989 -273.27593994]
[-121.51494598 -259.86029053]
[-114.40691376 -246.65135193]
[-107.29888153 -233.44241333]
[-100.19085693 -220.23348999]
[-93.08282471 -207.02455139]
[-85.97479248 -193.81562805]
[-78.86676025 -180.60668945]
[-71.75873566 -167.39775085]
[-64.65070343 -154.18882751]
[-57.54267502 -140.97988892]
[-50.43464279 -127.77095795]
[-43.32661438 -114.56201935]
[-37.38836288 -110.16115570]
[-36.21273041 -101.10189819]
[-29.30309296 -87.78810883]
[-25.10058975 -85.51770782]
[-22.28011513 -80.58283234]
[-22.39265060 -73.97106934]
[-15.88439465 -60.45653534]
[-9.37613773 -46.94200516]
[-2.86788201 -33.42747116]
[3.64037395 -19.91293716]
[10.67896461 21.44845963]
[22.54503059 30.62432480]
[34.41109467 39.80018997]
[46.27716064 48.97605515]
[58.14322662 58.15191650]
[70.00929260 67.32778168]
[81.87535858 76.50364685]
[101.14804077 54.57880402]
[139.77796936 53.49447632]
[152.29655457 45.23102188]
[164.81515503 36.96756744]
[172.06996155 22.90774918]
[186.95425415 22.35367775]
[199.47285461 14.09022331]
[204.08662415 -1.27508712]
[219.02937317 -7.11404657]
[232.83833313 1.05249417]
[234.92042542 16.95986366]
[223.67846680 28.40529060]
[207.73631287 26.60882187]
[195.21771240 34.87227631]
[188.85832214 48.34103775]
[173.07861328 49.48616409]
[160.56001282 57.74961853]
[148.04141235 66.01307678]
[153.31228638 80.05722046]
[158.58265686 94.10012054]
[173.44691467 92.08662415]
[188.31115723 90.07312012]
[203.17539978 88.05962372]
[218.05957031 79.94186401]
[229.98042297 91.99713135]
[221.69630432 106.78935242]
[205.18890381 102.92387390]
[190.32466125 104.93737030]
[175.46040344 106.95086670]
[160.59616089 108.96437073]
[159.03681946 116.30047607]
[155.91815186 130.97268677]
[154.35881042 138.30879211]
[167.11901855 146.19404602]
[179.87921143 154.07931519]
[192.63941956 161.96456909]
[205.39961243 169.84982300]
[218.15982056 177.73507690]
[230.92001343 185.62033081]
[243.68022156 193.50558472]
[242.83078003 178.52966309]
[253.90686035 168.41430664]
[268.74450684 170.61535645]
[276.40713501 183.51046753]
[271.24682617 197.59489441]
[257.06817627 202.48739624]
[269.20343018 211.30418396]
[281.33868408 220.12095642]
[297.69567871 221.29608154]
[304.61209106 236.16535950]
[294.97290039 249.43254089]
[278.69409180 247.44949341]
[272.52191162 232.25621033]
[260.38665771 223.43943787]
[248.25140381 214.62265015]
[235.79496765 206.26579285]
[223.03475952 198.38053894]
[210.27456665 190.49528503]
[197.51435852 182.61001587]
[184.75415039 174.72476196]
[171.99395752 166.83950806]
[159.23374939 158.95425415]
[146.47355652 151.06900024]
[133.37243652 158.37382507]
[133.37243652 173.37382507]
[133.37243652 188.37382507]
[133.37243652 203.37382507]
[133.37243652 218.37382507]
[133.37243652 233.37382507]
[133.59681702 248.37214661]
[134.04554749 263.36544800]
[134.49429321 278.35873413]
[134.94302368 293.35202026]
[135.39175415 308.34530640]
[135.84048462 323.33859253]
[136.28921509 338.33187866]
[136.73794556 353.32516479]
[137.18667603 368.31845093]
[137.63540649 383.31173706]
[144.15287781 398.96289062]
[130.91758728 409.55831909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[21 128]
[22 127]
[23 126]
[24 125]
[25 124]
[26 123]
[27 122]
[38 54]
[39 53]
[40 52]
[42 50]
[43 49]
[44 48]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 114]
[65 113]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[82 99]
[83 98]
[85 96]
[86 95]
[130 146]
[131 145]
[132 144]
[134 142]
[135 141]
[148 158]
[149 157]
[150 156]
[151 155]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
