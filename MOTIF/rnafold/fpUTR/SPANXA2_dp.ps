%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPANXA2)
} def

/sequence { (\
ACUGAGAAGAUUCAAAACCUACAAAAGCCUGCCACUGACAUUGAAGAACCAAUAUAUACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.261862217 ubox
2 27 0.073850597 ubox
2 46 0.055047069 ubox
3 8 0.260861844 ubox
3 14 0.686636274 ubox
3 21 0.010805108 ubox
3 23 0.108702080 ubox
3 26 0.072444366 ubox
3 31 0.003707540 ubox
3 34 0.036979505 ubox
3 37 0.003812283 ubox
3 40 0.020220260 ubox
3 43 0.008116112 ubox
3 45 0.054647427 ubox
3 51 0.076965039 ubox
3 54 0.020726330 ubox
3 56 0.008936640 ubox
3 58 0.004998004 ubox
3 60 0.015444801 ubox
4 12 0.037334721 ubox
4 13 0.742056223 ubox
4 20 0.009428283 ubox
4 22 0.117468687 ubox
4 33 0.041569866 ubox
4 39 0.025481200 ubox
4 42 0.012474905 ubox
4 50 0.082853398 ubox
4 53 0.020756425 ubox
4 55 0.008620485 ubox
4 57 0.004327907 ubox
4 59 0.020110138 ubox
5 11 0.053856602 ubox
5 12 0.721605640 ubox
5 20 0.122663464 ubox
5 30 0.040798889 ubox
5 36 0.023225407 ubox
5 41 0.012784442 ubox
5 42 0.003892466 ubox
6 11 0.445243897 ubox
6 12 0.024844613 ubox
6 13 0.196919184 ubox
6 19 0.123789713 ubox
6 29 0.041982024 ubox
6 35 0.023760478 ubox
6 41 0.003405940 ubox
6 42 0.034915946 ubox
7 11 0.032852531 ubox
7 12 0.184479232 ubox
7 41 0.033064836 ubox
7 42 0.025302447 ubox
8 20 0.099127943 ubox
8 30 0.053040725 ubox
8 36 0.042959178 ubox
8 41 0.026312628 ubox
8 42 0.013432932 ubox
9 19 0.102152217 ubox
9 29 0.054160057 ubox
9 35 0.043833094 ubox
9 41 0.012607802 ubox
9 42 0.039093835 ubox
10 41 0.041594975 ubox
10 53 0.013731305 ubox
10 55 0.014880786 ubox
10 57 0.007863632 ubox
11 17 0.041852167 ubox
11 24 0.009726039 ubox
11 25 0.010483277 ubox
11 26 0.016080544 ubox
11 27 0.017491436 ubox
11 38 0.009459964 ubox
11 40 0.041252504 ubox
11 44 0.005451220 ubox
11 45 0.215449891 ubox
11 46 0.007119774 ubox
11 47 0.006181136 ubox
11 48 0.029469476 ubox
11 52 0.013669717 ubox
11 54 0.014786718 ubox
11 56 0.007596202 ubox
12 16 0.037094706 ubox
12 23 0.010065022 ubox
12 24 0.010757767 ubox
12 25 0.015525126 ubox
12 26 0.016713929 ubox
12 37 0.007069769 ubox
12 38 0.115701947 ubox
12 44 0.243867393 ubox
12 45 0.007425948 ubox
12 46 0.004148540 ubox
12 47 0.035202807 ubox
12 51 0.012060130 ubox
13 31 0.044196458 ubox
13 37 0.123294094 ubox
13 43 0.246803849 ubox
13 46 0.035621745 ubox
14 30 0.042410205 ubox
14 36 0.116064227 ubox
14 42 0.242989389 ubox
15 41 0.215336988 ubox
15 42 0.013928915 ubox
16 41 0.016703367 ubox
16 42 0.010252271 ubox
17 41 0.011127486 ubox
19 27 0.133707857 ubox
19 46 0.197254624 ubox
20 26 0.132200204 ubox
20 31 0.039120140 ubox
20 37 0.038197086 ubox
20 43 0.011757822 ubox
20 45 0.195044333 ubox
20 54 0.008864564 ubox
20 56 0.009566903 ubox
20 58 0.007926634 ubox
21 30 0.041929523 ubox
21 36 0.037943336 ubox
21 42 0.012094378 ubox
21 53 0.008315463 ubox
21 55 0.009587036 ubox
21 57 0.007991375 ubox
22 31 0.250531273 ubox
22 37 0.091554743 ubox
22 43 0.205508217 ubox
23 30 0.235409741 ubox
23 36 0.086139101 ubox
23 42 0.202633097 ubox
24 41 0.177038823 ubox
24 42 0.017213348 ubox
25 41 0.019089578 ubox
25 42 0.019570603 ubox
26 36 0.164139809 ubox
26 41 0.021987867 ubox
26 42 0.009972626 ubox
27 35 0.168753609 ubox
27 41 0.009819502 ubox
29 46 0.133806172 ubox
30 37 0.027530486 ubox
30 40 0.102052661 ubox
30 43 0.004742058 ubox
30 45 0.133405260 ubox
30 51 0.149577394 ubox
30 54 0.010527646 ubox
30 56 0.009037666 ubox
30 58 0.008434220 ubox
30 60 0.034882099 ubox
31 36 0.021330669 ubox
31 39 0.114695984 ubox
31 42 0.005063597 ubox
31 50 0.161169418 ubox
31 53 0.009065885 ubox
31 55 0.009195487 ubox
31 57 0.008784855 ubox
31 59 0.045647899 ubox
33 43 0.119853952 ubox
34 42 0.112435646 ubox
35 46 0.279881539 ubox
36 43 0.013803207 ubox
36 45 0.280947443 ubox
36 51 0.059587746 ubox
36 54 0.032910619 ubox
36 56 0.084534355 ubox
36 58 0.063033816 ubox
36 60 0.054134625 ubox
37 42 0.014105667 ubox
37 50 0.064382891 ubox
37 53 0.024799715 ubox
37 55 0.087285721 ubox
37 57 0.064943288 ubox
37 59 0.071229482 ubox
40 53 0.692438530 ubox
40 55 0.026187995 ubox
40 57 0.016237963 ubox
41 47 0.017149567 ubox
41 48 0.046373714 ubox
41 52 0.733670526 ubox
41 54 0.022558728 ubox
41 56 0.015185104 ubox
42 46 0.016624744 ubox
42 47 0.052153173 ubox
42 51 0.751324557 ubox
42 54 0.008598308 ubox
42 56 0.006350381 ubox
42 58 0.004913825 ubox
42 60 0.017797328 ubox
43 50 0.753102719 ubox
43 53 0.007981699 ubox
43 55 0.006018994 ubox
43 57 0.004627575 ubox
43 59 0.022577669 ubox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
