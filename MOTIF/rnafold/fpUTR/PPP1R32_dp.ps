%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP1R32)
} def

/sequence { (\
ACACAUUGUUUCUCCUGCUUGGCCUCCUCCAGGAGGGCUGGCUUCUCUGCAGAGCUCUGCUUCCUGCAGCCUCUCCCCGACCUCAGAGCCUCUGCAGAGGAAAGGCCCCCUGGGGCCCUGCCCCACAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.187844804 ubox
2 8 0.215850440 ubox
2 17 0.008235041 ubox
3 7 0.175146812 ubox
3 9 0.062978648 ubox
3 16 0.007924066 ubox
4 8 0.066650653 ubox
4 17 0.010394403 ubox
4 21 0.006100183 ubox
5 16 0.010132657 ubox
5 20 0.006754502 ubox
5 131 0.071454679 ubox
6 128 0.080479966 ubox
6 130 0.054617462 ubox
7 125 0.009484326 ubox
7 127 0.105680800 ubox
7 130 0.523602303 ubox
8 16 0.004891826 ubox
8 18 0.035045702 ubox
8 38 0.006802733 ubox
8 124 0.010652415 ubox
8 126 0.109362942 ubox
8 129 0.583201237 ubox
8 131 0.020344546 ubox
9 17 0.034882978 ubox
9 37 0.005603584 ubox
9 125 0.105476856 ubox
9 128 0.576737931 ubox
9 130 0.020339687 ubox
10 36 0.003910329 ubox
10 37 0.007674439 ubox
10 127 0.509417477 ubox
10 128 0.051452474 ubox
11 36 0.018890198 ubox
11 127 0.063378306 ubox
12 21 0.004586000 ubox
12 35 0.040717786 ubox
12 128 0.042315595 ubox
13 34 0.055298578 ubox
13 37 0.003886920 ubox
13 127 0.042220457 ubox
14 22 0.014158392 ubox
14 33 0.056984098 ubox
14 36 0.008892812 ubox
15 21 0.014446690 ubox
15 32 0.056996651 ubox
15 35 0.009062358 ubox
15 128 0.345006856 ubox
16 31 0.056868217 ubox
16 34 0.009209405 ubox
16 125 0.045442839 ubox
16 127 0.349781122 ubox
16 130 0.601834100 ubox
17 23 0.004318156 ubox
17 30 0.056406780 ubox
17 42 0.007403439 ubox
17 119 0.004432552 ubox
17 121 0.639014149 ubox
17 124 0.048494938 ubox
17 126 0.348013501 ubox
17 129 0.668073969 ubox
18 22 0.004340433 ubox
18 32 0.003537323 ubox
18 33 0.017027890 ubox
18 41 0.007408551 ubox
18 120 0.640293920 ubox
18 128 0.668109544 ubox
19 32 0.017287412 ubox
19 40 0.006492326 ubox
19 127 0.643069836 ubox
19 128 0.007148638 ubox
20 31 0.032020692 ubox
20 40 0.004111070 ubox
20 120 0.008900615 ubox
20 125 0.270803091 ubox
20 127 0.044861055 ubox
21 27 0.053514281 ubox
21 28 0.016809967 ubox
21 29 0.006914221 ubox
21 30 0.037513434 ubox
21 39 0.022654634 ubox
21 117 0.649301000 ubox
21 118 0.047425293 ubox
21 119 0.006288099 ubox
21 122 0.702600135 ubox
21 123 0.141748825 ubox
21 124 0.228975445 ubox
21 126 0.036166781 ubox
22 26 0.052731635 ubox
22 27 0.016930990 ubox
22 28 0.005622211 ubox
22 29 0.037216327 ubox
22 38 0.025120959 ubox
22 116 0.649931875 ubox
22 117 0.045126774 ubox
22 118 0.006781307 ubox
22 121 0.715312325 ubox
22 122 0.111657404 ubox
22 123 0.210689779 ubox
23 33 0.005530287 ubox
23 36 0.021972161 ubox
23 37 0.020971071 ubox
23 115 0.647114887 ubox
23 120 0.724797145 ubox
24 32 0.005562111 ubox
24 35 0.026821494 ubox
24 36 0.015702541 ubox
24 114 0.638476724 ubox
24 115 0.017181175 ubox
25 31 0.005341354 ubox
25 34 0.031024162 ubox
25 35 0.007153256 ubox
25 113 0.180432878 ubox
25 114 0.018756095 ubox
25 115 0.005597242 ubox
26 33 0.031865958 ubox
26 112 0.095067830 ubox
26 113 0.079807312 ubox
26 114 0.014643460 ubox
26 115 0.254104933 ubox
27 32 0.031764310 ubox
27 112 0.069888052 ubox
27 113 0.014627382 ubox
27 114 0.256467097 ubox
27 115 0.708375149 ubox
28 112 0.006344867 ubox
28 113 0.032806200 ubox
28 114 0.716841029 ubox
28 115 0.008195303 ubox
29 112 0.025685206 ubox
29 113 0.976159707 ubox
29 114 0.007843710 ubox
30 112 0.989532884 ubox
30 113 0.005873532 ubox
31 111 0.996769246 ubox
32 110 0.997617237 ubox
32 111 0.007750985 ubox
33 109 0.997504399 ubox
33 110 0.009145741 ubox
34 111 0.010222927 ubox
35 107 0.019363584 ubox
35 108 0.998197361 ubox
35 109 0.003530548 ubox
35 110 0.014812744 ubox
36 106 0.019037846 ubox
36 107 0.998811224 ubox
36 108 0.003697842 ubox
36 109 0.016943457 ubox
36 110 0.012293605 ubox
36 111 0.003212762 ubox
37 106 0.998844552 ubox
37 108 0.016945240 ubox
37 109 0.012548253 ubox
37 110 0.007159471 ubox
37 129 0.019791177 ubox
38 104 0.031784874 ubox
38 105 0.998500295 ubox
38 128 0.019839042 ubox
39 103 0.040466287 ubox
39 104 0.990763717 ubox
39 127 0.019607594 ubox
40 107 0.038524436 ubox
40 122 0.007177067 ubox
40 126 0.016933485 ubox
41 106 0.040419527 ubox
41 121 0.007509179 ubox
42 100 0.023914549 ubox
42 104 0.021294980 ubox
42 105 0.040345169 ubox
42 120 0.007503395 ubox
43 99 0.011712853 ubox
43 100 0.022936446 ubox
43 101 0.949327157 ubox
43 102 0.056551960 ubox
43 103 0.020079828 ubox
43 104 0.033950878 ubox
44 98 0.006838204 ubox
44 99 0.003492421 ubox
44 100 0.989983130 ubox
44 101 0.058360185 ubox
44 102 0.012712194 ubox
44 103 0.019394259 ubox
45 97 0.006032435 ubox
45 99 0.998828977 ubox
45 100 0.043768389 ubox
46 96 0.004104314 ubox
46 98 0.999631277 ubox
46 99 0.018968225 ubox
47 97 0.999964058 ubox
48 96 0.999745247 ubox
49 95 0.999989837 ubox
50 94 0.999989837 ubox
51 91 0.003332493 ubox
51 93 0.999747125 ubox
52 90 0.004896742 ubox
52 92 0.999957233 ubox
53 91 0.997983180 ubox
54 70 0.005752677 ubox
54 89 0.705145772 ubox
54 90 0.708732245 ubox
55 69 0.005903674 ubox
55 86 0.009277180 ubox
55 88 0.995462195 ubox
56 68 0.004037407 ubox
56 85 0.009279968 ubox
56 87 0.995068340 ubox
57 69 0.143840421 ubox
57 86 0.988108805 ubox
57 88 0.003176232 ubox
58 68 0.221319974 ubox
58 85 0.971110606 ubox
59 67 0.294419752 ubox
59 70 0.264524973 ubox
59 84 0.911623349 ubox
59 89 0.044775600 ubox
60 66 0.305794563 ubox
60 69 0.297594353 ubox
60 88 0.044767584 ubox
61 68 0.281011414 ubox
61 69 0.012509442 ubox
61 80 0.140208502 ubox
61 87 0.040611087 ubox
62 68 0.016376632 ubox
62 79 0.129455991 ubox
62 80 0.640498242 ubox
62 86 0.014345514 ubox
62 87 0.011439750 ubox
63 79 0.657119765 ubox
63 86 0.011479706 ubox
64 86 0.041951745 ubox
65 79 0.195447074 ubox
65 85 0.047391195 ubox
66 78 0.223761459 ubox
66 84 0.049404712 ubox
68 74 0.460050084 ubox
68 83 0.212234799 ubox
69 73 0.466327495 ubox
69 82 0.214638586 ubox
69 89 0.018976067 ubox
70 88 0.014711432 ubox
71 86 0.014039447 ubox
71 88 0.074061242 ubox
72 80 0.279886783 ubox
72 85 0.013413065 ubox
72 87 0.077517355 ubox
73 79 0.291008495 ubox
73 86 0.078882202 ubox
73 88 0.022273813 ubox
74 80 0.082551795 ubox
74 85 0.074984605 ubox
74 87 0.023244512 ubox
75 79 0.087118824 ubox
75 86 0.023784819 ubox
82 88 0.003519624 ubox
83 87 0.003269201 ubox
103 111 0.010094625 ubox
104 110 0.011441379 ubox
104 117 0.009533824 ubox
105 109 0.011262921 ubox
105 116 0.009709939 ubox
106 115 0.009841218 ubox
107 114 0.009835492 ubox
108 113 0.009798008 ubox
110 128 0.005053446 ubox
111 125 0.063173948 ubox
111 127 0.003914336 ubox
112 124 0.077243068 ubox
113 123 0.078433750 ubox
114 122 0.100523295 ubox
115 121 0.100880497 ubox
116 120 0.100205410 ubox
118 128 0.032305033 ubox
119 125 0.007925552 ubox
119 127 0.033316840 ubox
119 130 0.079729978 ubox
120 124 0.008814621 ubox
120 126 0.034085425 ubox
120 129 0.088542928 ubox
121 128 0.088395054 ubox
16 130 0.9500000 lbox
17 129 0.9500000 lbox
18 128 0.9500000 lbox
19 127 0.9500000 lbox
21 122 0.9500000 lbox
22 121 0.9500000 lbox
23 120 0.9500000 lbox
27 115 0.9500000 lbox
28 114 0.9500000 lbox
29 113 0.9500000 lbox
30 112 0.9500000 lbox
31 111 0.9500000 lbox
32 110 0.9500000 lbox
33 109 0.9500000 lbox
35 108 0.9500000 lbox
36 107 0.9500000 lbox
37 106 0.9500000 lbox
38 105 0.9500000 lbox
39 104 0.9500000 lbox
43 101 0.9500000 lbox
44 100 0.9500000 lbox
45 99 0.9500000 lbox
46 98 0.9500000 lbox
47 97 0.9500000 lbox
48 96 0.9500000 lbox
49 95 0.9500000 lbox
50 94 0.9500000 lbox
51 93 0.9500000 lbox
52 92 0.9500000 lbox
53 91 0.9500000 lbox
54 90 0.9500000 lbox
55 88 0.9500000 lbox
56 87 0.9500000 lbox
57 86 0.9500000 lbox
58 85 0.9500000 lbox
59 84 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
showpage
end
%%EOF
