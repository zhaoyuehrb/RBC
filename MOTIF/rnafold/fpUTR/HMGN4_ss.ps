%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUCACCUUCCCUCGCCUUCCUGUUCCUGGCGGAGCCGGGCUCCGCUCGUCUUCUCUGUCUUAGGGCUGGUGCUGGCCCUGCCCACGCCUAGGGCUCCGGCGCGUCACGGGCCUCAGCUGGGAUUCCCGCGCCCCUCGGACGGCCACGAGACUCGGACAUCUUUCCAGGAACAGCGUGAGGAGGACAGAAGCACCCAACAGGACUGCUCAAGCCACCUGCGAACACUGCUGCUACC\
) } def
/len { sequence length } bind def

/coor [
[303.17462158 561.43518066]
[298.51290894 556.65161133]
[295.04693604 550.92059326]
[292.96408081 544.53594971]
[292.38052368 537.82720947]
[293.33483887 531.14276123]
[295.78558350 524.83135986]
[299.61294556 519.22442627]
[291.24868774 506.77297974]
[282.88439941 494.32150269]
[278.47158813 492.54067993]
[275.12213135 487.97924805]
[274.46896362 481.43096924]
[266.43490601 468.76394653]
[258.40081787 456.09692383]
[250.36674500 443.42987061]
[242.33267212 430.76284790]
[234.29859924 418.09582520]
[225.46693420 417.59783936]
[217.73110962 413.03143311]
[212.88157654 405.30715942]
[212.10729980 396.08178711]
[215.70661926 387.40341187]
[208.17817688 374.42950439]
[200.64973450 361.45559692]
[193.12129211 348.48165894]
[185.59284973 335.50775146]
[178.06440735 322.53384399]
[170.53596497 309.55990601]
[163.00752258 296.58599854]
[155.47908020 283.61206055]
[140.99446106 279.71392822]
[127.97134399 287.15692139]
[114.94822693 294.59994507]
[101.92510986 302.04293823]
[88.90199280 309.48596191]
[75.87886810 316.92895508]
[62.85575104 324.37197876]
[52.10429001 337.48083496]
[36.53142166 330.77844238]
[38.66088486 313.95877075]
[55.41274261 311.34884644]
[68.43585968 303.90585327]
[81.45897675 296.46282959]
[94.48209381 289.01983643]
[107.50521851 281.57681274]
[120.52833557 274.13381958]
[133.55145264 266.69079590]
[126.44750977 249.49360657]
[129.57739258 231.95002747]
[141.12809753 219.42956543]
[135.73110962 205.43411255]
[130.33412170 191.43867493]
[124.93712616 177.44322205]
[119.26525879 163.55690002]
[113.32070923 149.78511047]
[107.37615967 136.01332092]
[101.43161011 122.24152374]
[78.26977539 118.90415955]
[65.40930939 92.87455750]
[52.19503784 85.77645111]
[38.98077011 78.67834473]
[25.76650238 71.58023834]
[12.55223370 64.48213196]
[-0.66203451 57.38402557]
[-13.87630272 50.28591919]
[-27.09057045 43.18781281]
[-42.05369186 47.51710892]
[-55.35372162 40.13037872]
[-59.38883209 25.83864975]
[-72.60310364 18.74054337]
[-85.81736755 11.64243698]
[-94.83922577 10.34316254]
[-99.15778351 4.36319399]
[-112.27761078 -2.90799212]
[-126.81031036 2.86561680]
[-141.63786316 -2.10202885]
[-149.75917053 -15.46535873]
[-147.33956909 -30.91461563]
[-135.52154541 -41.15513611]
[-119.88519287 -41.35165405]
[-107.81352997 -31.41138649]
[-105.00642395 -16.02781868]
[-91.88659668 -8.75663280]
[-78.71926117 -1.57183099]
[-65.50499725 5.52627516]
[-52.29072571 12.62438202]
[-38.14708710 8.09745407]
[-24.64482498 15.10770130]
[-19.99246407 29.97354507]
[-6.77819633 37.07165146]
[6.43607187 44.16975784]
[19.65034103 51.26786423]
[32.86460876 58.36597061]
[46.07887650 65.46407318]
[59.29314423 72.56217957]
[72.50741577 79.66028595]
[79.16062927 76.19838715]
[79.81734467 61.21277237]
[92.46705627 69.27458954]
[99.12026978 65.81269073]
[100.89067078 50.91753387]
[102.66107178 36.02237701]
[100.56892395 27.15079498]
[104.55389404 20.94354439]
[106.51992798 6.07294559]
[108.48596954 -8.79765320]
[110.45200348 -23.66825104]
[98.36218262 -38.27339172]
[100.76573181 -56.75760651]
[115.66820526 -67.41281891]
[117.24266815 -82.32995605]
[118.81713104 -97.24710083]
[120.39159393 -112.16423798]
[118.50894928 -116.02929688]
[117.99413300 -119.90398407]
[118.68414307 -123.36031342]
[120.29456329 -126.06622314]
[122.46099091 -127.81662750]
[124.81724548 -142.63040161]
[123.07647705 -151.57757568]
[127.30306244 -157.62289429]
[129.85383606 -172.40441895]
[132.40460205 -187.18595886]
[129.13978577 -203.82257080]
[144.22245789 -211.56527710]
[155.83786011 -199.21543884]
[147.18612671 -184.63517761]
[144.63536072 -169.85365295]
[142.08459473 -155.07212830]
[139.63102722 -140.27415466]
[137.27478027 -125.46037292]
[135.30873108 -110.58977509]
[133.73426819 -95.67263794]
[132.15980530 -80.75549316]
[130.58534241 -65.83835602]
[139.49771118 -58.75112152]
[143.93612671 -48.13504028]
[142.69468689 -36.57521820]
[135.96617126 -26.94731903]
[125.32260132 -21.70221329]
[123.35656738 -6.83161497]
[121.39052582 8.03898335]
[119.42449188 22.90958214]
[117.55622864 37.79278183]
[115.78582764 52.68793488]
[114.01541901 67.58309174]
[127.15563965 85.10204315]
[126.29409027 104.22069550]
[115.20339966 116.29697418]
[121.14794922 130.06877136]
[127.09249878 143.84056091]
[133.03704834 157.61235046]
[137.19429016 160.70596313]
[139.52822876 164.68324280]
[140.00666809 168.70668030]
[138.93257141 172.04623413]
[144.32955933 186.04168701]
[149.72654724 200.03712463]
[155.12353516 214.03257751]
[166.16316223 214.30227661]
[176.53593445 218.62532043]
[184.78054810 226.54504395]
[189.68125916 237.08863831]
[190.44586182 248.88543701]
[186.83032227 260.34481812]
[179.19070435 269.87069702]
[168.45300293 276.08364868]
[175.98144531 289.05755615]
[183.50988770 302.03146362]
[191.03833008 315.00540161]
[198.56677246 327.97930908]
[206.09521484 340.95321655]
[213.62365723 353.92715454]
[221.15209961 366.90106201]
[228.68054199 379.87500000]
[247.87371826 389.43289185]
[246.96563721 410.06173706]
[254.99971008 422.72879028]
[263.03378296 435.39581299]
[271.06784058 448.06283569]
[279.10192871 460.72985840]
[287.13598633 473.39691162]
[295.33587646 485.95724487]
[303.70013428 498.40869141]
[312.06442261 510.86016846]
[336.01367188 513.08532715]
[350.27450562 532.13110352]
[345.76675415 555.22912598]
[355.54214478 566.60638428]
[370.40423584 572.03118896]
[372.82992554 586.72692871]
[382.60534668 598.10418701]
[392.38076782 609.48138428]
[402.15615845 620.85864258]
[418.67813110 616.11749268]
[435.55419922 619.07519531]
[449.38922119 629.08752441]
[457.42135620 644.09576416]
[458.07345581 661.05023193]
[451.26251221 676.52960205]
[461.33361816 687.64593506]
[471.40472412 698.76226807]
[481.47583008 709.87860107]
[494.90393066 708.98785400]
[506.23110962 715.88751221]
[511.44454956 727.87121582]
[508.84881592 740.48101807]
[518.77294922 751.72875977]
[534.48150635 756.43756104]
[537.99401855 772.45611572]
[525.69714355 783.30590820]
[510.24078369 777.82562256]
[507.52517700 761.65289307]
[497.60107422 750.40509033]
[480.77804565 750.06805420]
[469.18246460 737.41259766]
[470.35949707 719.94970703]
[460.28839111 708.83337402]
[450.21728516 697.71704102]
[440.14617920 686.60070801]
[428.05014038 691.28076172]
[415.05178833 691.57830811]
[402.69378662 687.43627930]
[392.45016479 679.32598877]
[385.55047607 668.19323730]
[382.83230591 655.34826660]
[384.63949585 642.31170654]
[390.77893066 630.63403320]
[381.00354004 619.25683594]
[371.22811890 607.87957764]
[361.45269775 596.50238037]
[347.28982544 591.89129639]
[344.16491699 576.38177490]
[334.38952637 565.00457764]
[328.18856812 567.23010254]
[321.62649536 567.99481201]
[315.04373169 567.25067139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 186]
[9 185]
[10 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[23 176]
[24 175]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[51 160]
[52 159]
[53 158]
[54 157]
[55 153]
[56 152]
[57 151]
[58 150]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[70 87]
[71 86]
[72 85]
[74 84]
[75 83]
[101 147]
[102 146]
[103 145]
[105 144]
[106 143]
[107 142]
[108 141]
[111 136]
[112 135]
[113 134]
[114 133]
[119 132]
[120 131]
[122 130]
[123 129]
[124 128]
[189 235]
[190 234]
[192 232]
[193 231]
[194 230]
[195 229]
[201 221]
[202 220]
[203 219]
[204 218]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
