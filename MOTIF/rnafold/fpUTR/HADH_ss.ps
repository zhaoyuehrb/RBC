%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGUAUACCCGCUCAACGCUGGGACGUUACAGCCAGGGCCAAUGGGCAGAGCGGGACUCGAGGCCCCGCCCCCGCCUUGUGGCGUCACGGGGACGCCGGGGGCGCGCGGGCUGCAGGGCCGCGUAGGUCCCCGCCCCCAGAGUCUGGCUUUCCGCGGCUGCCCGCCUCGCGCGUCUUCCCUGCCCGGGUCUCCUCGCUGUCGCCGCCGCUGCCACACC\
) } def
/len { sequence length } bind def

/coor [
[-121.15097809 495.12991333]
[-115.10463715 479.29077148]
[-115.10463715 464.29077148]
[-115.10463715 449.29077148]
[-115.10463715 434.29077148]
[-122.09362030 431.56970215]
[-127.53573608 445.54766846]
[-132.97807312 459.52554321]
[-146.95585632 454.08297729]
[-141.51368713 440.10556030]
[-136.07157898 426.12759399]
[-143.06056213 423.40652466]
[-153.20318604 434.45764160]
[-163.34580994 445.50875854]
[-173.48843384 456.55987549]
[-171.36625671 469.85662842]
[-177.20257568 481.77481079]
[-188.66664124 488.06411743]
[-201.46746826 486.62588501]
[-211.76686096 497.53103638]
[-222.06625366 508.43621826]
[-232.36564636 519.34136963]
[-229.36933899 534.56640625]
[-235.92486572 548.63073730]
[-249.51147461 556.12628174]
[-264.90484619 554.17089844]
[-276.18594360 543.51647949]
[-279.01690674 528.25982666]
[-272.30920410 514.26745605]
[-258.64208984 506.91973877]
[-243.27081299 509.04196167]
[-232.97142029 498.13681030]
[-222.67202759 487.23165894]
[-212.37263489 476.32650757]
[-213.56898499 459.54827881]
[-202.03082275 446.84823608]
[-184.53955078 446.41726685]
[-174.39692688 435.36614990]
[-164.25430298 424.31503296]
[-154.11167908 413.26391602]
[-145.52110291 406.78695679]
[-136.36743164 403.14376831]
[-127.44854736 402.22100830]
[-119.47574615 403.70065308]
[-113.02465057 407.09429932]
[-108.49745178 411.78875732]
[-100.38784027 399.16995239]
[-92.27822876 386.55114746]
[-84.16861725 373.93234253]
[-76.05900574 361.31353760]
[-76.16664886 343.76205444]
[-59.72334290 335.46676636]
[-51.79474640 322.73342896]
[-43.86615372 310.00012207]
[-35.93755722 297.26681519]
[-28.10007858 284.47720337]
[-20.35411644 271.63195801]
[-12.60815430 258.78674316]
[-13.21695900 241.24548340]
[2.98276114 232.48399353]
[10.54450989 219.52946472]
[18.10625839 206.57492065]
[25.66800690 193.62039185]
[33.22975540 180.66586304]
[31.91397095 161.37068176]
[49.58345032 151.65849304]
[56.77218246 138.49330139]
[63.96091843 125.32811737]
[71.14965057 112.16293335]
[68.80313873 97.34761047]
[57.89797592 87.04821777]
[46.99281693 76.74882507]
[36.08765793 66.44942474]
[24.89283752 56.46564484]
[13.41748428 46.80561066]
[1.94213033 37.14557648]
[-9.53322315 27.48554230]
[-25.76470566 25.14651871]
[-31.60273361 9.82171917]
[-21.04164696 -2.72401524]
[-4.94578362 0.41529047]
[0.12681022 16.01018715]
[11.60216427 25.67022133]
[23.07751846 35.33025742]
[34.55287170 44.99028778]
[37.34796906 44.88899612]
[40.35154343 45.88505554]
[43.14719009 48.06336212]
[45.29547882 51.35712814]
[46.38705444 55.54426956]
[57.29221344 65.84366608]
[68.19737244 76.14305878]
[79.10253143 86.44245148]
[88.74222565 80.19639587]
[99.20440674 79.36576080]
[107.88539886 83.24333954]
[119.22164154 73.42042542]
[124.58426666 58.53577805]
[139.26974487 56.04864883]
[150.60598755 46.22573471]
[161.94223022 36.40282440]
[173.13705444 26.41904068]
[184.18817139 16.27641678]
[195.23928833 6.13379335]
[206.29040527 -4.00883055]
[217.34152222 -14.15145397]
[228.39263916 -24.29407692]
[239.44375610 -34.43670273]
[250.49487305 -44.57932281]
[261.47329712 -54.80059433]
[272.37844849 -65.09999084]
[283.28359985 -75.39938354]
[288.14822388 -93.16255188]
[305.37149048 -96.54260254]
[316.12847900 -106.99666595]
[326.88546753 -117.45072937]
[329.04849243 -123.68698883]
[333.38308716 -127.34941101]
[338.10205078 -128.04426575]
[349.15316772 -138.18688965]
[360.20428467 -148.32951355]
[371.25540161 -158.47213745]
[382.30651855 -168.61476135]
[393.35763550 -178.75738525]
[398.47540283 -196.44927979]
[415.74517822 -199.58303833]
[426.65036011 -209.88243103]
[437.55551147 -220.18183899]
[441.64202881 -228.34355164]
[448.69070435 -230.54905701]
[459.74182129 -240.69168091]
[460.57742310 -256.24609375]
[471.92932129 -266.37472534]
[486.75289917 -265.48223877]
[497.80401611 -275.62487793]
[496.92883301 -291.23794556]
[506.33560181 -303.72979736]
[521.58282471 -307.20214844]
[535.47113037 -300.01547241]
[541.44293213 -285.56307983]
[536.67858887 -270.66897583]
[523.42755127 -262.36566162]
[507.94665527 -264.57376099]
[496.89553833 -254.43112183]
[496.51620483 -239.58552551]
[485.45327759 -229.14204407]
[469.88442993 -229.64056396]
[458.83331299 -219.49794006]
[447.85488892 -209.27667236]
[436.94973755 -198.97727966]
[426.04458618 -188.67788696]
[425.38723755 -176.60337830]
[416.39208984 -167.93363953]
[403.50027466 -167.70626831]
[392.44915771 -157.56364441]
[381.39804077 -147.42102051]
[370.34692383 -137.27839661]
[359.29580688 -127.13577271]
[348.24468994 -116.99314880]
[337.33950806 -106.69375610]
[326.58255005 -96.23969269]
[315.82556152 -85.78562927]
[315.34069824 -73.70297241]
[306.47024536 -64.90565491]
[293.58300781 -64.49422455]
[282.67785645 -54.19482803]
[271.77267456 -43.89543533]
[269.06994629 -37.02208328]
[260.63751221 -33.52820587]
[249.58638000 -23.38558388]
[238.53526306 -13.24295998]
[227.48414612 -3.10033679]
[216.43302917 7.04228687]
[205.38191223 17.18490982]
[194.33079529 27.32753372]
[183.27967834 37.47015762]
[182.18354797 42.11234283]
[178.16363525 46.11762619]
[171.76515198 47.73906708]
[160.42890930 57.56198120]
[149.09266663 67.38488770]
[144.54087830 81.56694031]
[129.04455566 84.75667572]
[117.70831299 94.57958221]
[112.14162445 118.00302124]
[84.31483459 119.35166931]
[77.12610626 132.51686096]
[69.93737030 145.68203735]
[62.74863434 158.84722900]
[66.40889740 169.08093262]
[63.88837051 179.42745972]
[56.25262451 186.53184509]
[46.18429184 188.22760010]
[38.62254333 201.18214417]
[31.06079292 214.13667297]
[23.49904442 227.09120178]
[15.93729496 240.04574585]
[18.45547104 252.69126892]
[11.89590931 263.32373047]
[0.23708101 266.53268433]
[-7.50888109 279.37792969]
[-15.25484276 292.22317505]
[-17.00452423 301.18151855]
[-23.20423889 305.19540405]
[-31.13283539 317.92871094]
[-39.06143188 330.66204834]
[-46.99002457 343.39535522]
[-44.83398056 356.10763550]
[-51.69449234 366.54846191]
[-63.44020081 369.42315674]
[-71.54981232 382.04196167]
[-79.65942383 394.66076660]
[-87.76903534 407.27957153]
[-95.87864685 419.89837646]
[-100.10463715 434.29077148]
[-100.10463715 449.29077148]
[-100.10463715 464.29077148]
[-100.10463715 479.29077148]
[-94.05829620 495.12991333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 218]
[3 217]
[4 216]
[5 215]
[12 40]
[13 39]
[14 38]
[15 37]
[19 34]
[20 33]
[21 32]
[22 31]
[46 214]
[47 213]
[48 212]
[49 211]
[50 210]
[52 207]
[53 206]
[54 205]
[55 204]
[56 202]
[57 201]
[58 200]
[60 197]
[61 196]
[62 195]
[63 194]
[64 193]
[66 189]
[67 188]
[68 187]
[69 186]
[70 93]
[71 92]
[72 91]
[73 90]
[74 85]
[75 84]
[76 83]
[77 82]
[96 184]
[97 183]
[99 181]
[100 180]
[101 179]
[102 176]
[103 175]
[104 174]
[105 173]
[106 172]
[107 171]
[108 170]
[109 169]
[110 167]
[111 166]
[112 165]
[114 162]
[115 161]
[116 160]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[126 151]
[127 150]
[128 149]
[130 148]
[131 147]
[134 144]
[135 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
