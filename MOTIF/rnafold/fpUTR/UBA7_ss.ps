%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCUUUUCUCCAGGAAGAGAGCUGUGACCAGCAGCGUCCCUUAUUCGCUUGGCCUUGGUUCCUGUUUGCACUGGCUACAGCAGGGCACUGGCCCCUACUGUCACCGCCACCUACACAAAGACCCUAUCUCUGAGCGCUGCAGCCUACUGUUCAGCCCCAGGUUUGAGG\
) } def
/len { sequence length } bind def

/coor [
[-21.34131432 268.99282837]
[-26.12505722 282.54724121]
[-36.09006500 293.42584229]
[-49.86346054 299.69219971]
[-65.36965942 300.07714844]
[-72.71092224 313.15786743]
[-80.05219269 326.23861694]
[-87.39346313 339.31936646]
[-94.73472595 352.40011597]
[-102.07599640 365.48083496]
[-109.41725922 378.56158447]
[-116.75852966 391.64233398]
[-119.23777771 408.41403198]
[-136.04034424 410.67453003]
[-142.86393738 395.15438843]
[-129.83927917 384.30105591]
[-122.49800110 371.22030640]
[-115.15673828 358.13958740]
[-107.81546783 345.05883789]
[-100.47419739 331.97808838]
[-93.13293457 318.89736938]
[-85.79166412 305.81661987]
[-78.45040131 292.73587036]
[-88.66255188 281.74896240]
[-102.24427032 288.11581421]
[-115.82599640 294.48266602]
[-129.40771484 300.84951782]
[-142.98944092 307.21636963]
[-149.77607727 321.75326538]
[-165.40599060 325.37063599]
[-177.88925171 315.29354858]
[-177.64976501 299.25228882]
[-164.87126160 289.55230713]
[-149.35629272 293.63464355]
[-135.77456665 287.26779175]
[-122.19284821 280.90093994]
[-108.61112213 274.53408813]
[-95.02939606 268.16723633]
[-91.09814453 246.94874573]
[-76.92995453 231.74234009]
[-57.58114624 226.72622681]
[-39.32426834 232.64741516]
[-29.11211586 221.66050720]
[-18.89996529 210.67361450]
[-8.68781376 199.68670654]
[1.52433681 188.69981384]
[0.23468997 178.51785278]
[4.87744331 169.11863708]
[14.12726879 163.73320007]
[25.03264809 164.36074829]
[35.63925171 153.75415039]
[46.24585342 143.14755249]
[56.85245514 132.54093933]
[67.45905304 121.93434143]
[78.06565857 111.32774353]
[74.03688049 98.58186340]
[77.23829651 84.89633942]
[87.45145416 74.26423645]
[102.32178497 70.14294434]
[117.88060760 74.35596466]
[121.67460632 59.84370804]
[125.46860504 45.33145142]
[129.26260376 30.81919670]
[121.53824615 17.29248428]
[125.59263611 2.62903976]
[138.53588867 -4.65159988]
[142.32989502 -19.16385460]
[146.12388611 -33.67610931]
[135.00024414 -42.42605591]
[128.07875061 -54.72094727]
[126.37813568 -68.68367004]
[130.12295532 -82.19692993]
[138.71453857 -93.22427368]
[150.82640076 -100.11702728]
[164.60899353 -101.86069489]
[168.66741943 -116.30123138]
[172.72584534 -130.74177551]
[176.78425598 -145.18231201]
[170.18597412 -165.54528809]
[185.44470215 -179.41336060]
[188.70614624 -194.05450439]
[191.96760559 -208.69563293]
[195.22904968 -223.33677673]
[185.57716370 -237.90534973]
[189.35548401 -254.62216187]
[203.75660706 -263.27590942]
[206.75012207 -277.97415161]
[209.74362183 -292.67242432]
[212.73712158 -307.37069702]
[207.02642822 -322.74337769]
[217.69122314 -335.20108032]
[233.76048279 -331.92834473]
[238.70353699 -316.29190063]
[227.43537903 -304.37719727]
[224.44187927 -289.67892456]
[221.44837952 -274.98065186]
[218.45487976 -260.28240967]
[227.00852966 -250.61717224]
[228.44357300 -237.59454346]
[222.01138306 -225.95762634]
[209.87019348 -220.07531738]
[206.60874939 -205.43418884]
[203.34729004 -190.79304504]
[200.08583069 -176.15191650]
[206.04525757 -169.48399353]
[208.28132629 -160.68275452]
[206.16409302 -151.71037292]
[200.04908752 -144.62834167]
[191.22480774 -141.12390137]
[187.16638184 -126.68335724]
[183.10795593 -112.24281311]
[179.04954529 -97.80227661]
[191.22442627 -87.47847748]
[197.70999146 -72.82908630]
[197.16462708 -56.75938416]
[189.64668274 -42.48054504]
[176.61282349 -32.86792755]
[160.63615417 -29.88211060]
[156.84214783 -15.36985493]
[153.04814148 -0.85759920]
[160.77203369 11.82613850]
[157.13110352 26.59767723]
[143.77487183 34.61319733]
[139.98086548 49.12545395]
[136.18685913 63.63770676]
[132.39286804 78.14996338]
[142.67996216 67.23320007]
[150.30310059 54.31469727]
[162.88059998 46.14119339]
[177.78178406 44.42225647]
[191.88992310 49.51741409]
[202.25415039 60.36097336]
[206.70669556 74.68489838]
[204.31628418 89.49320221]
[195.58287048 101.68859100]
[182.33312988 108.72028351]
[167.33839417 109.11753082]
[153.73469543 102.79706573]
[139.07159424 99.63587952]
[150.42413330 109.43995667]
[161.77667236 119.24402618]
[173.12921143 129.04809570]
[184.65890503 138.64320374]
[196.36193848 148.02610779]
[208.06497192 157.40902710]
[224.34773254 159.35931396]
[230.55049133 174.54016113]
[220.29235840 187.33480835]
[204.12605286 184.58122253]
[198.68205261 169.11206055]
[186.97901917 159.72914124]
[175.27600098 150.34622192]
[170.48085022 149.97547913]
[165.87753296 146.56417847]
[163.32513428 140.40063477]
[151.97259521 130.59657288]
[140.62005615 120.79249573]
[129.26751709 110.98841858]
[110.04975128 126.10700226]
[88.67225647 121.93434143]
[78.06565857 132.54093933]
[67.45905304 143.14755249]
[56.85245514 153.75415039]
[46.24585342 164.36074829]
[35.63925171 174.96734619]
[31.34737396 194.63885498]
[12.51123714 198.91195679]
[2.29908586 209.89886475]
[-7.91306496 220.88575745]
[-18.12521553 231.87266541]
[-28.33736610 242.85955811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[60 126]
[61 125]
[62 124]
[63 123]
[66 120]
[67 119]
[68 118]
[75 112]
[76 111]
[77 110]
[78 109]
[80 104]
[81 103]
[82 102]
[83 101]
[86 97]
[87 96]
[88 95]
[89 94]
[139 158]
[140 157]
[141 156]
[142 155]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
