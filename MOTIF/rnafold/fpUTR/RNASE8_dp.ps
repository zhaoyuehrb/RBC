%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNASE8)
} def

/sequence { (\
CAAGACUCCCCCAUGAUGACCUAUUCAUCCACCUACCUCCUCACUCUGUUCCACUGUCUCCCUUAAGAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.008937380 ubox
1 18 0.005036474 ubox
1 48 0.042639670 ubox
1 56 0.017846677 ubox
2 14 0.010691217 ubox
2 17 0.004782677 ubox
2 47 0.038063267 ubox
2 50 0.007070087 ubox
2 55 0.016991390 ubox
2 64 0.005361602 ubox
3 22 0.007159385 ubox
3 34 0.037900074 ubox
3 38 0.079685052 ubox
3 41 0.207069295 ubox
3 45 0.028937464 ubox
3 47 0.079177958 ubox
3 49 0.006990154 ubox
3 50 0.005407348 ubox
3 55 0.014632434 ubox
3 59 0.059537734 ubox
3 63 0.005648669 ubox
4 21 0.007401341 ubox
4 26 0.007326130 ubox
4 29 0.012870865 ubox
4 33 0.039114540 ubox
4 37 0.083992198 ubox
4 39 0.212539164 ubox
4 40 0.216223646 ubox
4 42 0.171822226 ubox
4 44 0.029514496 ubox
4 46 0.083728225 ubox
4 49 0.005248595 ubox
4 50 0.068847487 ubox
4 51 0.030131049 ubox
4 54 0.015196713 ubox
4 58 0.063511292 ubox
4 62 0.005615788 ubox
5 25 0.007026190 ubox
5 28 0.011451980 ubox
5 38 0.209573797 ubox
5 41 0.167614336 ubox
5 45 0.081194045 ubox
5 49 0.074671556 ubox
5 50 0.025573507 ubox
5 57 0.063704624 ubox
6 48 0.076608768 ubox
6 56 0.063755183 ubox
6 69 0.025114722 ubox
6 71 0.050519350 ubox
7 16 0.016091969 ubox
7 19 0.006149214 ubox
7 68 0.025194414 ubox
7 70 0.049866934 ubox
8 15 0.018508979 ubox
8 18 0.006501835 ubox
8 67 0.025047589 ubox
8 69 0.046021917 ubox
12 18 0.012037844 ubox
12 48 0.036666691 ubox
12 56 0.017531455 ubox
13 17 0.009786538 ubox
13 24 0.007524172 ubox
13 28 0.192865183 ubox
13 47 0.035831804 ubox
13 49 0.025037307 ubox
13 55 0.016532240 ubox
14 23 0.008080120 ubox
14 27 0.208333365 ubox
14 31 0.194702589 ubox
14 35 0.017956985 ubox
14 43 0.040162818 ubox
14 48 0.025528238 ubox
14 53 0.006306500 ubox
15 22 0.007766923 ubox
15 25 0.009900982 ubox
15 26 0.212641378 ubox
15 29 0.956388359 ubox
15 30 0.156285222 ubox
15 34 0.004466951 ubox
15 39 0.007885413 ubox
15 42 0.044179822 ubox
15 46 0.029373757 ubox
15 47 0.003179501 ubox
15 51 0.004505631 ubox
15 52 0.005426284 ubox
15 60 0.010828978 ubox
16 24 0.020569097 ubox
16 25 0.211214846 ubox
16 28 0.972146908 ubox
16 38 0.007232499 ubox
16 41 0.043292791 ubox
16 45 0.029074054 ubox
16 50 0.004397417 ubox
16 59 0.010699027 ubox
17 23 0.026869431 ubox
17 27 0.972732081 ubox
17 31 0.007497556 ubox
17 43 0.030214725 ubox
18 22 0.022948127 ubox
18 25 0.009093350 ubox
18 26 0.973127259 ubox
18 29 0.011867410 ubox
18 30 0.008033258 ubox
18 39 0.041402023 ubox
18 42 0.030885218 ubox
18 46 0.003930741 ubox
18 50 0.005056323 ubox
18 58 0.011986019 ubox
19 24 0.043346297 ubox
19 25 0.925649545 ubox
19 28 0.011856596 ubox
19 38 0.039656913 ubox
19 41 0.028902860 ubox
19 45 0.003647084 ubox
19 49 0.005566210 ubox
19 57 0.011989191 ubox
20 48 0.005667661 ubox
20 56 0.011943678 ubox
22 35 0.024249427 ubox
23 34 0.023555092 ubox
26 48 0.005290832 ubox
27 47 0.004852561 ubox
30 48 0.046470481 ubox
30 56 0.026741343 ubox
31 47 0.042715130 ubox
31 49 0.036337319 ubox
31 55 0.024692021 ubox
31 57 0.008626394 ubox
32 48 0.038811259 ubox
32 56 0.011953457 ubox
33 67 0.010264976 ubox
33 69 0.008732721 ubox
33 71 0.015958536 ubox
34 48 0.013900389 ubox
34 56 0.012457422 ubox
34 66 0.009861384 ubox
34 68 0.008544339 ubox
34 70 0.015487950 ubox
35 47 0.014346348 ubox
35 49 0.045250527 ubox
35 55 0.012860926 ubox
35 57 0.011780037 ubox
36 48 0.048510285 ubox
36 56 0.016824965 ubox
37 67 0.005824390 ubox
37 69 0.041251160 ubox
37 71 0.082254908 ubox
38 66 0.005587578 ubox
38 68 0.041388183 ubox
38 70 0.083849657 ubox
39 67 0.040812932 ubox
39 69 0.067164621 ubox
40 67 0.035116602 ubox
40 69 0.080723393 ubox
40 71 0.116164719 ubox
41 66 0.034092400 ubox
41 68 0.092286710 ubox
41 70 0.115749428 ubox
42 48 0.086323567 ubox
42 56 0.044890961 ubox
42 67 0.092204553 ubox
42 69 0.096286915 ubox
43 47 0.070623617 ubox
43 49 0.071311663 ubox
43 55 0.042483272 ubox
43 57 0.078227125 ubox
44 48 0.075407809 ubox
44 56 0.101397793 ubox
44 67 0.031623838 ubox
44 69 0.338470733 ubox
44 71 0.350284947 ubox
45 66 0.030584439 ubox
45 68 0.352122825 ubox
45 70 0.355900534 ubox
46 67 0.353425726 ubox
46 69 0.356472882 ubox
46 71 0.013415931 ubox
47 53 0.106001150 ubox
47 56 0.017166906 ubox
47 65 0.033250403 ubox
47 66 0.350035126 ubox
47 68 0.353579331 ubox
47 70 0.012107398 ubox
48 52 0.111094313 ubox
48 54 0.106660306 ubox
48 55 0.018111061 ubox
48 57 0.007935661 ubox
48 64 0.043738456 ubox
49 53 0.096441607 ubox
49 56 0.020141893 ubox
49 66 0.295312206 ubox
49 67 0.020711919 ubox
49 68 0.009194321 ubox
49 69 0.009649786 ubox
49 71 0.013259363 ubox
50 65 0.262779690 ubox
50 66 0.021208238 ubox
50 67 0.009034069 ubox
50 68 0.016844656 ubox
50 70 0.019608731 ubox
51 67 0.019169225 ubox
51 69 0.020067646 ubox
54 67 0.041312020 ubox
54 69 0.014620062 ubox
54 71 0.533218551 ubox
55 65 0.030908743 ubox
55 66 0.041152165 ubox
55 68 0.013205021 ubox
55 70 0.537706993 ubox
56 64 0.037762670 ubox
57 68 0.541414327 ubox
57 70 0.605160198 ubox
58 67 0.543407702 ubox
58 69 0.650914139 ubox
58 71 0.069726970 ubox
59 66 0.517400085 ubox
59 68 0.651351128 ubox
59 70 0.072067918 ubox
60 67 0.650018947 ubox
60 69 0.072403962 ubox
62 69 0.021786927 ubox
62 71 0.029237237 ubox
63 68 0.020389517 ubox
63 70 0.029742089 ubox
64 69 0.028397384 ubox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
showpage
end
%%EOF
