%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGUGGGCGGCGGCGGCGGCGGCUGCGCGCUUGGGGCCCGGGGCGCGGGGCGAGGCCGUGGGGACGUGCGAGCGGGGCCGCGGUGGGGCUCGGGGGCGCGUCCACGUGGCCAGAGGGCGGCCACCCGGAGCCAGCGGAGGGACAGGCCUGUCCCCAGGCGCGGCUGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[66.59661865 450.87380981]
[51.56509781 455.18508911]
[37.30013275 448.77847290]
[30.53721046 434.67895508]
[34.46957397 419.54385376]
[47.24048233 410.51956177]
[48.31056976 395.55780029]
[41.50093460 382.31097412]
[50.20301437 369.09793091]
[51.27310181 354.13613892]
[52.34318924 339.17437744]
[53.41327667 324.21258545]
[54.48336411 309.25079346]
[55.55345154 294.28903198]
[48.75929260 291.11264038]
[28.37680626 281.58352661]
[17.58257675 291.99911499]
[6.78834724 302.41470337]
[-4.00588226 312.83029175]
[-14.80011177 323.24591064]
[-18.80405235 339.14874268]
[-34.65012741 343.37176514]
[-46.03725052 331.57070923]
[-41.25132751 315.88543701]
[-25.21570587 312.45166016]
[-14.42147636 302.03607178]
[-3.62724733 291.62048340]
[7.16698217 281.20489502]
[17.96121216 270.78927612]
[25.95788002 258.09860229]
[30.69487381 243.86622620]
[35.43186569 229.63383484]
[40.16886139 215.40144348]
[44.90585327 201.16905212]
[49.64284897 186.93667603]
[54.37984085 172.70428467]
[59.11683655 158.47189331]
[63.85382843 144.23950195]
[68.59082031 130.00711060]
[60.25727081 117.53507233]
[45.29549026 116.46498108]
[30.33370781 115.39489746]
[15.37192535 114.32480621]
[2.35458446 123.70182037]
[-13.05331993 119.23236084]
[-19.03216171 104.34501648]
[-10.99548531 90.46008301]
[4.89165831 88.22889709]
[16.44201279 99.36302185]
[31.40379524 100.43311310]
[46.36557770 101.50319672]
[61.32735825 102.57328796]
[63.01439667 92.57529449]
[67.16847229 83.62444305]
[73.36551666 76.29724121]
[81.05612183 71.02352905]
[89.61199188 68.06215668]
[88.27502441 53.12185669]
[86.93804932 38.18155670]
[85.60108185 23.24126053]
[84.26410675 8.30096149]
[82.92713928 -6.63933611]
[81.59017181 -21.57963371]
[72.65363312 -34.63524628]
[79.22574615 -48.00149536]
[77.88877106 -62.94179535]
[76.55180359 -77.88209534]
[75.21482849 -92.82238770]
[73.87786102 -107.76268768]
[72.54089355 -122.70298767]
[71.20391846 -137.64328003]
[69.86695099 -152.58358765]
[56.71475983 -160.60394287]
[50.87535477 -174.66647339]
[54.39455414 -189.29791260]
[65.71897125 -198.93614197]
[64.38200378 -213.87644958]
[63.04503250 -228.81674194]
[61.70806503 -243.75703430]
[52.77153015 -256.81265259]
[59.34363556 -270.17889404]
[58.00666809 -285.11920166]
[45.72055817 -295.06039429]
[44.14554977 -310.78598022]
[54.21607208 -322.96630859]
[69.95745850 -324.37496948]
[82.03062439 -314.17623901]
[83.27277374 -298.42083740]
[72.94696808 -286.45617676]
[74.28393555 -271.51586914]
[83.12483978 -259.52890015]
[76.64836121 -245.09400940]
[77.98532867 -230.15371704]
[79.32230377 -215.21340942]
[80.65927124 -200.27311707]
[93.51506042 -192.79870605]
[99.57620239 -179.02458191]
[96.32642365 -164.14868164]
[84.80725098 -153.92054749]
[86.14421844 -138.98025513]
[87.48118591 -124.03995514]
[88.81816101 -109.09966278]
[90.15512848 -94.15936279]
[91.49210358 -79.21906281]
[92.82907104 -64.27876282]
[94.16603851 -49.33846664]
[103.00694275 -37.35148621]
[96.53046417 -22.91660500]
[97.86743927 -7.97630644]
[99.20440674 6.96399164]
[100.54138184 21.90428925]
[101.87834930 36.84458923]
[103.21531677 51.78488541]
[104.55229187 66.72518158]
[115.06449890 69.98337555]
[123.95902252 76.46487427]
[130.28073120 85.47367096]
[133.35076904 96.04235840]
[148.26481628 97.64578247]
[163.17887878 99.24921417]
[178.09292603 100.85263824]
[192.34707642 88.41164398]
[210.85484314 90.27452850]
[221.95668030 104.80064392]
[236.91845703 105.87072754]
[248.80043030 95.79816437]
[263.95855713 97.09651947]
[273.48797607 108.48623657]
[288.44976807 109.55632019]
[303.41156006 110.62641144]
[314.16149902 99.26978302]
[329.70214844 97.53139496]
[342.69570923 106.23205566]
[347.00698853 121.26358032]
[340.60037231 135.52853394]
[326.50085449 142.29145813]
[311.36575317 138.35910034]
[302.34146118 125.58819580]
[287.37966919 124.51810455]
[272.41790771 123.44801331]
[261.36453247 133.36561584]
[246.17591858 132.49353027]
[235.84837341 120.83251190]
[220.88659668 119.76242828]
[214.06193542 128.95222473]
[203.53364563 133.74249268]
[191.88230896 132.83149719]
[182.02600098 126.33087158]
[176.48950195 115.76669312]
[161.57545471 114.16326904]
[146.66139221 112.55983734]
[131.74734497 110.95641327]
[121.99863434 127.61887360]
[103.94522095 136.82295227]
[82.82321167 134.74411011]
[78.08621979 148.97650146]
[73.34922791 163.20887756]
[68.61222839 177.44126892]
[63.87523651 191.67366028]
[59.13824463 205.90605164]
[54.40124893 220.13844299]
[49.66425705 234.37083435]
[44.92726135 248.60321045]
[40.19026947 262.83560181]
[59.83843613 269.33718872]
[70.51523590 295.35910034]
[69.44514465 310.32089233]
[68.37506104 325.28268433]
[67.30496979 340.24444580]
[66.23488617 355.20623779]
[65.16479492 370.16802979]
[71.89788818 384.48501587]
[63.27235031 396.62786865]
[62.20226288 411.58966064]
[73.55889130 422.33959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[9 171]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 52]
[41 51]
[42 50]
[43 49]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[76 95]
[77 94]
[78 93]
[79 92]
[81 90]
[82 89]
[118 152]
[119 151]
[120 150]
[121 149]
[124 144]
[125 143]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
