%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRRC2B)
} def

/sequence { (\
GCAGAUCGGGAGCGGUGCCGAGAAAAAUUUCCUUACUAGAUGACAUUUCAUCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.061983374 ubox
1 16 0.003905885 ubox
1 18 0.215278628 ubox
1 54 0.788884511 ubox
2 12 0.061984646 ubox
2 15 0.004065096 ubox
2 17 0.215747528 ubox
2 53 0.788645455 ubox
3 16 0.168934574 ubox
3 29 0.006377798 ubox
3 30 0.034176826 ubox
3 33 0.044816419 ubox
3 34 0.009825686 ubox
3 37 0.055035271 ubox
4 28 0.005257535 ubox
4 29 0.040719863 ubox
4 30 0.017055933 ubox
4 31 0.073609278 ubox
4 32 0.046759620 ubox
4 33 0.008165714 ubox
4 34 0.020302468 ubox
4 36 0.057430515 ubox
4 49 0.009127569 ubox
4 52 0.052480723 ubox
5 16 0.258031607 ubox
5 28 0.041341537 ubox
5 29 0.018381606 ubox
5 30 0.073919014 ubox
5 33 0.020157665 ubox
5 48 0.008506311 ubox
5 51 0.046999832 ubox
6 15 0.304204472 ubox
6 21 0.861812602 ubox
6 23 0.016745402 ubox
6 27 0.019625524 ubox
6 43 0.003458948 ubox
6 50 0.032679642 ubox
7 14 0.322918975 ubox
7 20 0.926364474 ubox
7 22 0.016648967 ubox
7 42 0.003702012 ubox
7 53 0.003227389 ubox
8 13 0.322730763 ubox
8 19 0.930347241 ubox
8 31 0.003690509 ubox
8 32 0.052615666 ubox
8 33 0.079454418 ubox
8 34 0.004997104 ubox
8 37 0.008407527 ubox
8 41 0.003543362 ubox
8 49 0.017988379 ubox
9 18 0.930033419 ubox
9 19 0.035556849 ubox
9 30 0.003706085 ubox
9 31 0.052638052 ubox
9 32 0.084727732 ubox
9 36 0.008772307 ubox
9 37 0.004912194 ubox
9 48 0.017896041 ubox
9 49 0.004243485 ubox
10 18 0.038015262 ubox
10 29 0.004247449 ubox
10 30 0.052266763 ubox
10 31 0.084763539 ubox
10 34 0.009830399 ubox
10 36 0.005032101 ubox
10 47 0.017799117 ubox
10 48 0.004340238 ubox
11 28 0.004695707 ubox
11 29 0.051383201 ubox
11 30 0.083643307 ubox
11 33 0.010448407 ubox
11 34 0.003885213 ubox
11 37 0.003695165 ubox
11 46 0.017493347 ubox
11 47 0.004320620 ubox
12 18 0.027458916 ubox
12 28 0.043542458 ubox
12 29 0.067427527 ubox
12 32 0.010469567 ubox
12 33 0.005200895 ubox
12 36 0.003721962 ubox
12 46 0.003899323 ubox
12 54 0.086568709 ubox
13 17 0.030210315 ubox
13 20 0.055499650 ubox
13 42 0.007614861 ubox
13 53 0.086635870 ubox
14 19 0.055053499 ubox
14 29 0.027212136 ubox
14 31 0.007118145 ubox
14 32 0.012032318 ubox
14 33 0.003214848 ubox
14 37 0.098041794 ubox
14 41 0.004645546 ubox
14 52 0.075463955 ubox
15 28 0.043545800 ubox
15 30 0.006563378 ubox
15 31 0.012000517 ubox
15 32 0.003753850 ubox
15 36 0.115393097 ubox
15 41 0.004866089 ubox
15 44 0.004369213 ubox
15 51 0.075028526 ubox
15 54 0.006044109 ubox
16 27 0.044767662 ubox
16 35 0.115161056 ubox
16 38 0.004967974 ubox
16 40 0.004865438 ubox
16 43 0.004334045 ubox
16 50 0.074919029 ubox
16 53 0.005927538 ubox
16 55 0.031268675 ubox
17 34 0.108050699 ubox
17 37 0.008365735 ubox
17 49 0.070800433 ubox
17 52 0.005044165 ubox
17 54 0.084698277 ubox
18 53 0.074141902 ubox
19 53 0.072962724 ubox
20 29 0.021743438 ubox
20 30 0.011485667 ubox
20 31 0.262030743 ubox
20 34 0.104681766 ubox
20 47 0.022723271 ubox
20 48 0.023887932 ubox
20 49 0.021885062 ubox
20 52 0.085332543 ubox
21 28 0.027351779 ubox
21 29 0.014669156 ubox
21 30 0.264155954 ubox
21 33 0.127468903 ubox
21 34 0.016553712 ubox
21 37 0.070572508 ubox
21 46 0.023304169 ubox
21 47 0.025731948 ubox
21 48 0.026165826 ubox
21 51 0.085012089 ubox
22 28 0.015479419 ubox
22 29 0.261958596 ubox
22 30 0.082776755 ubox
22 31 0.645115466 ubox
22 32 0.127164664 ubox
22 33 0.013285375 ubox
22 34 0.040045691 ubox
22 36 0.083355141 ubox
22 46 0.022535059 ubox
22 47 0.026113779 ubox
22 48 0.016292748 ubox
22 49 0.097949313 ubox
22 52 0.012458037 ubox
23 28 0.236831900 ubox
23 29 0.088732413 ubox
23 30 0.642712588 ubox
23 33 0.039639418 ubox
23 34 0.081450713 ubox
23 46 0.025064363 ubox
23 47 0.016475424 ubox
23 48 0.098373649 ubox
23 51 0.012176013 ubox
24 28 0.070209424 ubox
24 29 0.559528502 ubox
24 30 0.056343289 ubox
24 33 0.082738591 ubox
24 34 0.058115331 ubox
24 46 0.015292676 ubox
24 47 0.096594561 ubox
24 48 0.017432146 ubox
25 29 0.048356838 ubox
25 33 0.058029450 ubox
25 34 0.069186853 ubox
25 46 0.090736176 ubox
25 47 0.017166862 ubox
25 48 0.044496105 ubox
26 33 0.067726650 ubox
26 34 0.046104867 ubox
26 46 0.015702506 ubox
26 47 0.048378753 ubox
26 48 0.003714687 ubox
27 33 0.045015104 ubox
27 41 0.044463792 ubox
27 46 0.050645061 ubox
27 47 0.003577534 ubox
28 39 0.008109816 ubox
28 40 0.044823417 ubox
28 43 0.067815926 ubox
28 45 0.050037808 ubox
29 38 0.038853773 ubox
29 39 0.043844571 ubox
29 40 0.011881407 ubox
29 42 0.067518140 ubox
29 43 0.011727726 ubox
30 38 0.040738325 ubox
30 39 0.011869633 ubox
30 40 0.047124087 ubox
30 42 0.011330739 ubox
30 43 0.057124857 ubox
31 39 0.045967266 ubox
31 42 0.057783340 ubox
32 39 0.100923509 ubox
33 38 0.114183561 ubox
33 39 0.006102433 ubox
33 40 0.043876489 ubox
33 43 0.006720317 ubox
34 38 0.021966451 ubox
34 39 0.042281625 ubox
34 42 0.007284045 ubox
35 41 0.006963303 ubox
38 48 0.008636318 ubox
39 47 0.010409809 ubox
39 48 0.008776811 ubox
39 49 0.022480320 ubox
39 52 0.987506668 ubox
40 46 0.010595469 ubox
40 47 0.009545372 ubox
40 48 0.022342876 ubox
40 51 0.989620974 ubox
41 45 0.009459909 ubox
41 50 0.989927135 ubox
41 53 0.004752302 ubox
42 48 0.006146236 ubox
42 49 0.990117956 ubox
42 52 0.010273126 ubox
43 47 0.027768415 ubox
43 48 0.891651265 ubox
43 51 0.009788405 ubox
1 54 0.9500000 lbox
2 53 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
