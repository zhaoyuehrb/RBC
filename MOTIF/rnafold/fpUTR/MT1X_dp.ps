%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MT1X)
} def

/sequence { (\
ACCACGCUUUUCAUCUGUCCCGCUGCGUGUUUUCCUCUUGAUCGGGAACUCCUGCUUCUCCUUGCCUCGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.010383909 ubox
1 30 0.122005682 ubox
2 27 0.010953565 ubox
2 29 0.099429576 ubox
3 25 0.011387332 ubox
3 29 0.986194866 ubox
4 18 0.003672509 ubox
4 24 0.011353483 ubox
4 28 0.997903026 ubox
4 30 0.010330637 ubox
5 17 0.004209503 ubox
5 22 0.003857851 ubox
5 27 0.998838077 ubox
5 29 0.010993954 ubox
5 69 0.003778033 ubox
6 16 0.003329116 ubox
6 18 0.005910808 ubox
6 21 0.003685212 ubox
6 23 0.015949813 ubox
6 26 0.998854159 ubox
6 28 0.010918071 ubox
6 55 0.009662725 ubox
6 65 0.005229672 ubox
6 68 0.003618382 ubox
7 17 0.006975229 ubox
7 22 0.016254041 ubox
7 25 0.998499340 ubox
7 27 0.010903165 ubox
7 54 0.009655783 ubox
7 64 0.005237018 ubox
10 71 0.005943864 ubox
11 41 0.004150746 ubox
11 70 0.008082973 ubox
12 25 0.006864374 ubox
12 40 0.004423399 ubox
12 54 0.006603951 ubox
12 69 0.008266787 ubox
13 24 0.013181088 ubox
13 39 0.004350588 ubox
13 53 0.006726780 ubox
14 70 0.003991276 ubox
15 69 0.004258147 ubox
16 22 0.025355117 ubox
16 27 0.004311835 ubox
17 21 0.026803646 ubox
17 23 0.045738935 ubox
17 24 0.012526478 ubox
17 26 0.006146395 ubox
17 49 0.020965959 ubox
17 65 0.003559050 ubox
18 22 0.043009319 ubox
18 25 0.005921223 ubox
18 47 0.030630485 ubox
18 48 0.014845779 ubox
18 64 0.003481765 ubox
19 46 0.035457443 ubox
20 45 0.035465933 ubox
21 29 0.005950428 ubox
21 44 0.035459730 ubox
21 69 0.007399959 ubox
22 28 0.006089339 ubox
22 30 0.005949913 ubox
22 43 0.034478725 ubox
22 55 0.008480577 ubox
22 68 0.007444558 ubox
23 27 0.006110169 ubox
23 29 0.007121247 ubox
23 54 0.008485217 ubox
25 55 0.017493634 ubox
25 65 0.007459364 ubox
26 40 0.019944143 ubox
26 54 0.017521962 ubox
26 64 0.007462744 ubox
27 39 0.018697199 ubox
27 42 0.007474307 ubox
27 53 0.015909475 ubox
27 63 0.006856319 ubox
28 41 0.007493799 ubox
29 42 0.019387170 ubox
29 49 0.063303091 ubox
29 55 0.006916291 ubox
29 65 0.006054703 ubox
29 68 0.008515480 ubox
30 41 0.041336712 ubox
30 47 0.006494847 ubox
30 48 0.066028287 ubox
30 54 0.007651162 ubox
30 64 0.007197721 ubox
30 70 0.018513148 ubox
30 71 0.015569560 ubox
31 40 0.044825697 ubox
31 41 0.029056008 ubox
31 46 0.005221853 ubox
31 47 0.057834355 ubox
31 48 0.405084368 ubox
31 69 0.018899831 ubox
31 70 0.020416950 ubox
31 71 0.011363678 ubox
32 40 0.031104249 ubox
32 41 0.024334535 ubox
32 46 0.045541374 ubox
32 47 0.475310103 ubox
32 48 0.440068793 ubox
32 69 0.019245567 ubox
32 70 0.014335925 ubox
32 71 0.040842957 ubox
33 40 0.024352562 ubox
33 41 0.082574310 ubox
33 45 0.029758132 ubox
33 46 0.483650804 ubox
33 47 0.516949542 ubox
33 69 0.013397919 ubox
33 70 0.055362977 ubox
34 40 0.088223381 ubox
34 44 0.029501436 ubox
34 45 0.489104622 ubox
34 46 0.524231124 ubox
34 69 0.056528783 ubox
35 44 0.489303145 ubox
35 45 0.523484441 ubox
35 46 0.084132701 ubox
36 44 0.443034755 ubox
36 45 0.087103172 ubox
36 46 0.010272394 ubox
36 47 0.048679677 ubox
36 70 0.054380205 ubox
37 44 0.265781567 ubox
37 45 0.013989872 ubox
37 46 0.051121439 ubox
37 69 0.056849903 ubox
38 44 0.015234285 ubox
38 45 0.050176087 ubox
38 47 0.004411927 ubox
38 70 0.197649205 ubox
38 71 0.011722141 ubox
39 44 0.041255289 ubox
39 46 0.004617653 ubox
39 64 0.018674366 ubox
39 69 0.209161229 ubox
39 70 0.011147415 ubox
40 51 0.005708396 ubox
40 57 0.133823411 ubox
40 58 0.384213744 ubox
40 60 0.044054969 ubox
40 63 0.025783299 ubox
40 68 0.215833180 ubox
41 50 0.005649869 ubox
41 56 0.148683570 ubox
41 57 0.380940747 ubox
41 59 0.042791634 ubox
41 62 0.025214287 ubox
41 67 0.209872231 ubox
42 70 0.398253454 ubox
43 54 0.458335629 ubox
43 64 0.111594296 ubox
43 69 0.425745831 ubox
44 51 0.005701371 ubox
44 52 0.067772605 ubox
44 53 0.475868000 ubox
44 56 0.005521133 ubox
44 57 0.005162692 ubox
44 58 0.003276265 ubox
44 59 0.020078632 ubox
44 60 0.106945150 ubox
44 61 0.080263859 ubox
44 62 0.163293199 ubox
44 63 0.081572993 ubox
44 66 0.059822862 ubox
44 67 0.019494698 ubox
44 68 0.425419768 ubox
45 50 0.004539408 ubox
45 51 0.067826878 ubox
45 52 0.479143564 ubox
45 53 0.014981057 ubox
45 55 0.005681301 ubox
45 56 0.006842863 ubox
45 58 0.021919082 ubox
45 59 0.109015970 ubox
45 60 0.080139015 ubox
45 61 0.183941046 ubox
45 62 0.040374845 ubox
45 65 0.059767356 ubox
45 66 0.086580451 ubox
45 67 0.414899699 ubox
46 50 0.043959703 ubox
46 51 0.477642274 ubox
46 52 0.016248321 ubox
46 55 0.007653275 ubox
46 57 0.022150381 ubox
46 58 0.134319999 ubox
46 59 0.019214074 ubox
46 60 0.184153141 ubox
46 61 0.039493786 ubox
46 63 0.004698060 ubox
46 65 0.085626176 ubox
46 66 0.414338416 ubox
46 68 0.006981306 ubox
47 56 0.023377374 ubox
47 57 0.133838596 ubox
47 59 0.177729345 ubox
47 62 0.007354476 ubox
47 63 0.062567150 ubox
47 67 0.006889275 ubox
48 56 0.122853104 ubox
48 62 0.055413910 ubox
50 70 0.359409745 ubox
51 69 0.376450673 ubox
53 64 0.005082357 ubox
53 69 0.023409780 ubox
54 63 0.006938115 ubox
54 65 0.771362913 ubox
54 68 0.012752601 ubox
55 64 0.773840520 ubox
56 70 0.008214052 ubox
56 71 0.056300176 ubox
57 69 0.007840436 ubox
57 70 0.079967786 ubox
58 69 0.082264897 ubox
59 70 0.150539646 ubox
60 69 0.158058059 ubox
62 70 0.092105059 ubox
62 71 0.033547561 ubox
63 69 0.097263131 ubox
63 70 0.046943545 ubox
64 68 0.095652401 ubox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
