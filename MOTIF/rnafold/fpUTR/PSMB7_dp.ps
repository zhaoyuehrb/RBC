%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSMB7)
} def

/sequence { (\
UCUUUUUGUUUGCACCCGCCUCCGACCCGGAACUGCUUUCUUGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.031757019 ubox
1 30 0.003634367 ubox
1 31 0.015641456 ubox
1 44 0.008839188 ubox
1 45 0.041812433 ubox
1 46 0.239006120 ubox
2 24 0.035116794 ubox
2 29 0.004619758 ubox
2 30 0.016711307 ubox
2 43 0.011181265 ubox
2 44 0.053225180 ubox
2 45 0.255371254 ubox
2 48 0.242327096 ubox
3 25 0.014665806 ubox
3 29 0.016035200 ubox
3 43 0.052304360 ubox
3 44 0.252712525 ubox
3 45 0.019399632 ubox
3 46 0.038584513 ubox
3 47 0.249405922 ubox
3 48 0.028172600 ubox
4 24 0.014745581 ubox
4 25 0.021629417 ubox
4 32 0.003656635 ubox
4 43 0.235457772 ubox
4 44 0.030392121 ubox
4 45 0.040621578 ubox
4 46 0.249728875 ubox
4 47 0.045665357 ubox
4 48 0.022999841 ubox
5 24 0.021594673 ubox
5 25 0.039742646 ubox
5 31 0.004173265 ubox
5 43 0.035806799 ubox
5 44 0.041622949 ubox
5 45 0.242481607 ubox
5 46 0.048503310 ubox
5 47 0.034906282 ubox
5 48 0.024293248 ubox
6 24 0.037869469 ubox
6 25 0.373030418 ubox
6 30 0.004167502 ubox
6 43 0.041777217 ubox
6 44 0.235965348 ubox
6 45 0.044714345 ubox
6 46 0.036216648 ubox
6 47 0.036759533 ubox
6 48 0.010317246 ubox
7 14 0.116150840 ubox
7 18 0.033765959 ubox
7 24 0.407908155 ubox
7 29 0.003936322 ubox
7 43 0.223180655 ubox
7 44 0.042701307 ubox
7 45 0.030726928 ubox
7 46 0.038258134 ubox
7 47 0.012910082 ubox
8 13 0.130380080 ubox
8 15 0.060263271 ubox
8 17 0.047619987 ubox
8 19 0.066289659 ubox
8 23 0.421809315 ubox
8 26 0.019822389 ubox
8 28 0.003573004 ubox
8 33 0.022025389 ubox
8 36 0.013679179 ubox
8 42 0.187842999 ubox
9 14 0.055774796 ubox
9 18 0.065823194 ubox
9 25 0.025305776 ubox
9 32 0.021781951 ubox
9 35 0.013209616 ubox
9 44 0.029438589 ubox
9 45 0.012382925 ubox
9 46 0.021416278 ubox
9 47 0.164490963 ubox
9 48 0.033223081 ubox
10 24 0.025021449 ubox
10 25 0.037981454 ubox
10 31 0.018201258 ubox
10 43 0.028274543 ubox
10 44 0.015936666 ubox
10 45 0.020965932 ubox
10 46 0.189050581 ubox
10 47 0.050328703 ubox
10 48 0.027157499 ubox
11 18 0.026614427 ubox
11 24 0.041388227 ubox
11 30 0.015595069 ubox
11 43 0.016524721 ubox
11 44 0.020039553 ubox
11 45 0.189142198 ubox
11 46 0.051652966 ubox
11 47 0.040171704 ubox
12 17 0.036379470 ubox
12 19 0.563477171 ubox
12 23 0.034858185 ubox
12 28 0.003445519 ubox
12 36 0.368551804 ubox
12 42 0.013550636 ubox
13 18 0.563895825 ubox
13 35 0.368847928 ubox
13 43 0.191275980 ubox
14 34 0.359991416 ubox
14 42 0.184553660 ubox
15 30 0.028193943 ubox
15 44 0.035524663 ubox
15 45 0.563415603 ubox
16 29 0.027393181 ubox
16 30 0.252528723 ubox
16 43 0.035454052 ubox
16 44 0.566053662 ubox
16 45 0.046225516 ubox
17 24 0.151435154 ubox
17 29 0.252746678 ubox
17 35 0.050130724 ubox
17 43 0.565736282 ubox
17 44 0.046184674 ubox
18 23 0.145690828 ubox
18 28 0.246276795 ubox
18 34 0.054196042 ubox
18 36 0.596149340 ubox
18 42 0.162717929 ubox
19 30 0.183086842 ubox
19 35 0.600502095 ubox
19 44 0.014795451 ubox
19 45 0.018995185 ubox
20 29 0.183114085 ubox
20 30 0.005975052 ubox
20 43 0.015008059 ubox
20 44 0.018878607 ubox
20 45 0.028737552 ubox
20 48 0.043577664 ubox
21 29 0.005279019 ubox
21 30 0.004475229 ubox
21 31 0.665549778 ubox
21 43 0.013873815 ubox
21 44 0.006340299 ubox
21 45 0.062662658 ubox
21 46 0.058651123 ubox
21 47 0.041010585 ubox
22 29 0.005840328 ubox
22 30 0.673568233 ubox
22 43 0.005921446 ubox
22 44 0.081195777 ubox
22 45 0.061422659 ubox
23 29 0.673559583 ubox
23 35 0.004312102 ubox
23 43 0.081595766 ubox
23 44 0.057032981 ubox
24 28 0.630140929 ubox
24 34 0.003725392 ubox
24 39 0.004493128 ubox
24 40 0.012292667 ubox
24 42 0.081128638 ubox
25 38 0.004723296 ubox
25 39 0.011987749 ubox
25 41 0.073646671 ubox
26 44 0.126594558 ubox
26 45 0.642847764 ubox
27 43 0.128437512 ubox
27 44 0.646119121 ubox
27 45 0.033571392 ubox
28 35 0.010531261 ubox
28 43 0.645834697 ubox
28 44 0.033495183 ubox
29 34 0.008142846 ubox
29 37 0.040698913 ubox
29 38 0.007391506 ubox
29 39 0.016368376 ubox
29 40 0.118016060 ubox
29 41 0.457619036 ubox
29 42 0.457174637 ubox
30 36 0.042348261 ubox
30 37 0.008119490 ubox
30 38 0.022008720 ubox
30 39 0.126705765 ubox
30 40 0.637961690 ubox
30 41 0.119457387 ubox
30 42 0.025038524 ubox
31 37 0.023048219 ubox
31 38 0.131977627 ubox
31 39 0.635634429 ubox
31 41 0.026209480 ubox
31 42 0.008768509 ubox
32 37 0.111464605 ubox
32 38 0.572371463 ubox
32 41 0.013817873 ubox
33 44 0.026353584 ubox
33 45 0.011975978 ubox
33 48 0.047287374 ubox
34 43 0.026296217 ubox
34 44 0.011774796 ubox
34 47 0.043170775 ubox
35 42 0.017719512 ubox
36 44 0.028716953 ubox
36 45 0.059317700 ubox
36 48 0.112241736 ubox
37 43 0.029185241 ubox
37 44 0.059533978 ubox
37 45 0.006656701 ubox
37 46 0.016660862 ubox
37 47 0.127784027 ubox
37 48 0.064384030 ubox
38 43 0.054980727 ubox
38 44 0.007708686 ubox
38 45 0.017295270 ubox
38 46 0.130872655 ubox
38 47 0.104364125 ubox
39 43 0.006421425 ubox
39 44 0.014041194 ubox
39 45 0.130699758 ubox
39 46 0.111852319 ubox
39 47 0.003661254 ubox
40 44 0.126422757 ubox
40 45 0.112463635 ubox
40 48 0.019624622 ubox
41 47 0.019942451 ubox
41 48 0.006803612 ubox
42 46 0.016718888 ubox
42 47 0.010810876 ubox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
showpage
end
%%EOF
