%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGACCACGUGGGGACGCGGUGGGGCGGGUCUGGCGGGGGCGGGGCACCUCUGUGCAGGGUUCCCAGUCACCGCGACGCUCCUCGGGAAGCCAUAGGGCGCCUCCCAGCCCGUCUCCCCGCUCCAGUUUAGAACCUAAUUCCCAAUUCCCGGACCGGGCCCAGCCCUGGGCUCUUACUGUCCGCUUUUGCUGGGACCUGUUCCACAA\
) } def
/len { sequence length } bind def

/coor [
[338.91296387 387.09173584]
[329.92626953 383.69900513]
[321.67419434 378.77169800]
[314.41650391 372.46261597]
[308.38192749 364.96820068]
[303.76123047 356.52218628]
[300.70089722 347.38845825]
[299.29873657 337.85284424]
[299.60055542 328.21401978]
[301.59878540 318.77426147]
[305.23266602 309.82992554]
[310.39004517 301.66217041]
[299.86306763 290.97653198]
[289.33609009 280.29089355]
[278.80911255 269.60525513]
[268.28216553 258.91961670]
[257.75518799 248.23396301]
[243.07926941 250.63301086]
[229.64591980 243.85002136]
[222.70126343 230.29917908]
[225.09506226 215.08155823]
[214.56809998 204.39591980]
[204.04113770 193.71028137]
[192.89395142 183.67332458]
[181.16648865 174.32096863]
[169.43901062 164.96862793]
[157.71154785 155.61627197]
[145.98406982 146.26393127]
[134.25659180 136.91159058]
[122.52912903 127.55923462]
[110.80165100 118.20689392]
[98.46420288 121.11416626]
[86.67732239 116.45214081]
[79.66654205 105.89212036]
[79.94518280 93.21981812]
[68.35893250 83.69307709]
[56.77267456 74.16634369]
[45.18642044 64.63960266]
[33.60016632 55.11286926]
[22.01391220 45.58613205]
[10.28643894 36.23378372]
[-1.57962644 27.05792046]
[-10.28338242 24.28358650]
[-13.55320835 17.65496254]
[-25.28067970 8.30261517]
[-37.00815201 -1.04973221]
[-48.73562622 -10.40207958]
[-60.46309662 -19.75442696]
[-76.07663727 -22.30942726]
[-81.20308685 -36.29401779]
[-92.93055725 -45.64636612]
[-101.59184265 -48.55059052]
[-104.76213837 -55.22738647]
[-116.34839630 -64.75412750]
[-127.93464661 -74.28086090]
[-139.52090454 -83.80759430]
[-144.67208862 -84.66114044]
[-148.58872986 -87.15612030]
[-150.85227966 -90.54721069]
[-151.40069580 -94.03099060]
[-162.54786682 -104.06794739]
[-177.98066711 -107.55213165]
[-182.26161194 -121.81827545]
[-193.40878296 -131.85523987]
[-204.55595398 -141.89219666]
[-215.70312500 -151.92915344]
[-226.85029602 -161.96611023]
[-250.53749084 -164.73960876]
[-257.09213257 -186.91413879]
[-269.09411621 -195.91146851]
[-281.09613037 -204.90879822]
[-297.11718750 -204.06895447]
[-307.65454102 -216.16621399]
[-304.62484741 -231.92059326]
[-290.35220337 -239.24668884]
[-275.78540039 -232.52453613]
[-272.09878540 -216.91079712]
[-260.09680176 -207.91346741]
[-248.09478760 -198.91615295]
[-242.18110657 -201.58680725]
[-235.68034363 -202.30494690]
[-229.22535706 -200.96864319]
[-223.45448303 -197.67750549]
[-218.94834900 -192.72605896]
[-216.17160034 -186.57752991]
[-215.42501831 -179.82064819]
[-216.81333923 -173.11328125]
[-205.66616821 -163.07632446]
[-194.51899719 -153.03936768]
[-183.37182617 -143.00241089]
[-172.22463989 -132.96545410]
[-157.58917236 -130.19917297]
[-152.51091003 -115.21512604]
[-141.36373901 -105.17816162]
[-129.99417114 -95.39385223]
[-118.40791321 -85.86711884]
[-106.82165527 -76.34037781]
[-95.23540497 -66.81364441]
[-83.57821655 -57.37383652]
[-71.85073853 -48.02148819]
[-57.07603073 -46.13542938]
[-51.11074829 -31.48189926]
[-39.38327789 -22.12955093]
[-27.65580559 -12.77720451]
[-15.92833328 -3.42485738]
[-4.20086098 5.92748976]
[7.59623814 15.19185448]
[19.46230316 24.36771965]
[24.22986221 24.66123581]
[28.86345673 27.95333099]
[31.54064751 33.99987793]
[43.12690353 43.52661514]
[54.71315765 53.05334854]
[66.29940796 62.58008575]
[77.88566589 72.10682678]
[89.47191620 81.63356018]
[105.85625458 79.65618134]
[118.68167114 90.04199982]
[120.15399933 106.47941589]
[131.88146973 115.83176422]
[143.60894775 125.18411255]
[155.33641052 134.53645325]
[167.06388855 143.88880920]
[178.79136658 153.24114990]
[190.51882935 162.59350586]
[202.24630737 171.94584656]
[199.58215332 157.18434143]
[205.99893188 143.62612915]
[219.10357666 136.32762146]
[234.00885010 138.01069641]
[245.15599060 148.04768372]
[248.38780212 162.69540405]
[242.49900818 176.49111938]
[229.68577576 184.28990173]
[214.72677612 183.18330383]
[225.25373840 193.86895752]
[235.78071594 204.55459595]
[251.03244019 202.38871765]
[264.47787476 209.53529358]
[271.05914307 223.06861877]
[268.44082642 237.70700073]
[278.96780396 248.39263916]
[289.49478149 259.07827759]
[300.02172852 269.76391602]
[310.54870605 280.44955444]
[321.07568359 291.13522339]
[340.06747437 282.13235474]
[361.02502441 280.98239136]
[380.83392334 287.83462524]
[396.55859375 301.65078735]
[405.87738037 320.36224365]
[407.42523193 341.17980957]
[400.99377441 361.00942993]
[412.99578857 370.00677490]
[424.99777222 379.00408936]
[440.68075562 381.09085083]
[446.22326660 394.91583252]
[458.22528076 403.91317749]
[470.22729492 412.91049194]
[482.22927856 421.90780640]
[494.29824829 430.81512451]
[506.43350220 439.63189697]
[518.56878662 448.44866943]
[530.70404053 457.26547241]
[542.83929443 466.08224487]
[554.97454834 474.89901733]
[574.62359619 470.70788574]
[590.77160645 482.14102173]
[593.26727295 501.46096802]
[605.78582764 509.72442627]
[618.30444336 517.98791504]
[630.82305908 526.25134277]
[643.34161377 534.51483154]
[658.27709961 529.88165283]
[672.67639160 535.98046875]
[679.74053955 549.93151855]
[676.13409424 565.14758301]
[663.55993652 574.44403076]
[647.95520020 573.43145752]
[636.68792725 562.58789062]
[635.07818604 547.03338623]
[622.55957031 538.76995850]
[610.04101562 530.50646973]
[597.52239990 522.24304199]
[585.00378418 513.97955322]
[575.87255859 518.67193604]
[565.53662109 519.15399170]
[555.85839844 515.27172852]
[548.60937500 507.66357422]
[545.14636230 497.65640259]
[546.15777588 487.03427124]
[534.02252197 478.21749878]
[521.88726807 469.40072632]
[509.75198364 460.58392334]
[497.61672974 451.76715088]
[485.48147583 442.95037842]
[478.22183228 441.56185913]
[473.23196411 433.90982056]
[461.22994995 424.91250610]
[449.22796631 415.91516113]
[437.22595215 406.91784668]
[422.40142822 405.47460938]
[416.00045776 391.00610352]
[403.99844360 382.00875854]
[391.99645996 373.01144409]
[384.69177246 379.19949341]
[376.40551758 384.00491333]
[367.39654541 387.27532959]
[357.94665527 388.90646362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[21 137]
[22 136]
[23 135]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[31 119]
[35 116]
[36 115]
[37 114]
[38 113]
[39 112]
[40 111]
[41 108]
[42 107]
[44 106]
[45 105]
[46 104]
[47 103]
[48 102]
[50 100]
[51 99]
[53 98]
[54 97]
[55 96]
[56 95]
[60 94]
[61 93]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[69 79]
[70 78]
[71 77]
[153 205]
[154 204]
[155 203]
[157 201]
[158 200]
[159 199]
[160 198]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
