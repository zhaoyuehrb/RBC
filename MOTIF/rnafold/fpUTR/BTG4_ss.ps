%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAAGGGCCUCCAAGGGAGACGCCUAGAAGAUGGAGGCCCAGAUUCUUGAGACGUUUCUCUUUCUGAUCUAGCAGGAGGGACAAAGAGCUCCUCCACUCCCUCAUUCCCCAAGAAGGCCCCCAGCCUACCCAGUUUCCGUGACCAUUCCGCCCUGGGAAAGCGGCUUCCCAGACCUCCUUAUCUAUUUUUCUUGAAUC\
) } def
/len { sequence length } bind def

/coor [
[-24.37013435 285.17001343]
[-26.10699654 291.71124268]
[-29.75566864 297.35009766]
[-34.93081284 301.54974365]
[-41.10376358 303.92227173]
[-47.65645981 304.26437378]
[-53.94329071 302.57427979]
[-64.34066010 313.38604736]
[-74.73802185 324.19784546]
[-85.13539124 335.00964355]
[-95.53275299 345.82141113]
[-105.93012238 356.63320923]
[-116.32749176 367.44500732]
[-126.72485352 378.25677490]
[-137.12222290 389.06857300]
[-147.00138855 400.35583496]
[-156.34063721 412.09371948]
[-165.67988586 423.83163452]
[-163.64402771 439.50424194]
[-173.35273743 451.97488403]
[-189.04600525 453.84490967]
[-201.41328430 444.00491333]
[-203.11730957 428.29275513]
[-193.14707947 416.03018188]
[-177.41778564 414.49240112]
[-168.07853699 402.75448608]
[-158.73928833 391.01657104]
[-173.72877502 391.57833862]
[-184.82308960 381.48300171]
[-185.67402649 366.50717163]
[-175.79466248 355.22009277]
[-160.83802795 354.08032227]
[-149.36239624 363.74005127]
[-147.93400574 378.67120361]
[-137.53665161 367.85940552]
[-127.13927460 357.04763794]
[-116.74191284 346.23583984]
[-106.34454346 335.42404175]
[-95.94718170 324.61227417]
[-85.54981232 313.80047607]
[-75.15244293 302.98867798]
[-64.75508118 292.17691040]
[-61.88367462 269.23007202]
[-38.96918488 262.61557007]
[-29.62993622 250.87767029]
[-20.29068756 239.13975525]
[-10.95143890 227.40185547]
[-1.61219084 215.66394043]
[-3.54630303 200.93998718]
[5.75781202 188.90304565]
[21.21476173 186.97421265]
[30.55401039 175.23629761]
[39.89326096 163.49839783]
[49.23250961 151.76048279]
[39.93188095 142.81152344]
[32.22824860 132.18225098]
[26.42613029 120.16131592]
[22.77722931 107.09260559]
[21.47041702 93.36546326]
[22.62355042 79.40311432]
[26.27744675 65.64961243]
[32.39226913 52.55573273]
[40.84649658 40.56423569]
[51.43862152 30.09502411]
[63.89151764 21.53064537]
[77.85946655 15.20264912]
[66.04892731 5.95541525]
[54.23839951 -3.29181838]
[38.58217239 -1.13354993]
[26.03605461 -10.74450493]
[24.04343414 -26.42267609]
[33.78649521 -38.86647797]
[49.48485565 -40.69322968]
[61.82495499 -30.81914711]
[63.48563385 -15.10235023]
[75.29616547 -5.85511684]
[87.10669708 3.39211655]
[99.53788757 -5.00225449]
[95.37329102 -19.41253281]
[91.20868683 -33.82281113]
[87.04409027 -48.23308945]
[82.87948608 -62.64336777]
[78.71488953 -77.05364227]
[65.43560791 -80.76549530]
[55.80239487 -90.47859192]
[52.25691986 -103.57904816]
[55.62251282 -116.61508179]
[64.91595459 -126.20639801]
[60.97708511 -140.68000793]
[57.03821564 -155.15361023]
[47.04483795 -168.84918213]
[57.43874359 -182.24333191]
[73.18675995 -175.96348572]
[71.51181793 -159.09248352]
[75.45069122 -144.61888123]
[79.38956451 -130.14526367]
[94.91357422 -124.81975555]
[104.30076599 -111.15528107]
[103.69045258 -94.42204285]
[93.12516785 -81.21824646]
[97.28976440 -66.80796814]
[101.45436859 -52.39768982]
[105.61896515 -37.98741150]
[109.78356934 -23.57713318]
[113.94816589 -9.16685486]
[121.28182983 -7.59605265]
[124.42343140 -22.26337433]
[127.56503296 -36.93069458]
[130.70663452 -51.59801865]
[129.16204834 -66.51828003]
[142.87477112 -72.59786224]
[152.89424133 -61.43496704]
[145.37396240 -48.45641327]
[142.23236084 -33.78909302]
[139.09075928 -19.12177086]
[135.94914246 -4.45444870]
[143.28280640 -2.88364673]
[152.98435974 -14.32392406]
[162.68591309 -25.76420212]
[172.38745117 -37.20447922]
[172.51081848 -53.24705887]
[185.21879578 -63.03925323]
[200.76289368 -59.06933212]
[207.21903992 -44.38267517]
[199.63459778 -30.24563217]
[183.82772827 -27.50293159]
[174.12619019 -16.06265259]
[164.42463684 -4.62237597]
[154.72308350 6.81790209]
[158.26824951 13.42712402]
[171.48669434 6.33679628]
[184.70513916 -0.75353140]
[197.92358398 -7.84385920]
[208.30406189 -18.67186737]
[221.80982971 -12.14546871]
[219.77635193 2.71605706]
[205.01391602 5.37458467]
[191.79547119 12.46491241]
[178.57702637 19.55524063]
[165.35858154 26.64556694]
[168.90374756 33.25479126]
[183.80079651 31.50045967]
[198.69786072 29.74612999]
[207.12767029 16.57524490]
[222.06672668 11.95370674]
[236.46125793 18.06366348]
[243.51460266 32.02017975]
[239.89639282 47.23341370]
[227.31503296 56.52014542]
[211.71105957 55.49546051]
[200.45219421 44.64318848]
[185.55513000 46.39751816]
[170.65806580 48.15184784]
[179.13027954 87.76299286]
[168.67866516 123.23204803]
[182.31427002 129.48265076]
[195.94987488 135.73326111]
[209.58549500 141.98387146]
[223.22109985 148.23448181]
[236.85671997 154.48507690]
[250.49232483 160.73568726]
[265.21887207 154.99943542]
[279.65444946 161.43293762]
[285.23468018 176.21929932]
[278.64892578 190.58604431]
[263.80438232 196.00962830]
[249.50807190 189.27235413]
[244.24172974 174.37130737]
[230.60610962 168.12069702]
[216.97050476 161.87008667]
[203.33488464 155.61947632]
[189.69927979 149.36888123]
[176.06365967 143.11827087]
[162.42805481 136.86766052]
[158.41999817 142.93704224]
[153.82398987 148.57431030]
[148.68630981 153.72271729]
[143.05862427 158.33044434]
[136.99760437 162.35113525]
[130.56422424 165.74430847]
[123.82324982 168.47583008]
[116.84251404 170.51818848]
[109.69227600 171.85086060]
[102.44448853 172.46040344]
[95.17210388 172.34069824]
[87.94830322 171.49295044]
[80.84579468 169.92568970]
[73.93605804 167.65469360]
[67.28862762 164.70280457]
[60.97041321 161.09973145]
[51.63116455 172.83764648]
[42.29191589 184.57554626]
[32.95266724 196.31344604]
[34.54628372 211.80854797]
[24.90774727 223.57942200]
[10.12571526 225.00318909]
[0.78646678 236.74110413]
[-8.55278206 248.47900391]
[-17.89203072 260.21691895]
[-27.23127937 271.95483398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 27]
[17 26]
[18 25]
[44 200]
[45 199]
[46 198]
[47 197]
[48 196]
[51 193]
[52 192]
[53 191]
[54 190]
[66 77]
[67 76]
[68 75]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[88 96]
[89 95]
[90 94]
[117 129]
[118 128]
[119 127]
[120 126]
[141 153]
[142 152]
[143 151]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
