%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCGAGCCGGUUCCCGCCCCCGGCCCGAACUGGCCCGCGCGCGCUCGCAGCCCCGCGGCGGAACCCGAGGGCGGCGGCAGCGGUUUCCCUUGAACGAGCCGGGGAAUCUGGAGGGAGCACACAGGAAAGGCAGAGCCGCGAGCUGGACCAGCCGUGCAAAUCUCUAGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.87548065 132.36029053]
[92.37382507 131.61123657]
[82.65348816 127.54089355]
[74.73677826 120.57055664]
[64.32566833 131.36911011]
[60.31743240 146.67416382]
[45.91365051 150.46630859]
[35.50253677 161.26486206]
[25.09142494 172.06341553]
[14.68031216 182.86196899]
[4.26919889 193.66052246]
[-6.14191389 204.45906067]
[-16.55302620 215.25761414]
[-26.96413994 226.05616760]
[-26.84832764 241.63256836]
[-37.56050491 252.43553162]
[-52.41093826 252.44995117]
[-62.82205200 263.24850464]
[-73.23316956 274.04705811]
[-79.87391663 289.64630127]
[-96.70188904 287.58337402]
[-99.37802887 270.84197998]
[-84.03171539 263.63595581]
[-73.62060547 252.83738708]
[-63.20949173 242.03883362]
[-63.73745346 227.19778442]
[-53.33293152 216.09820557]
[-37.76269150 215.64506531]
[-27.35157967 204.84651184]
[-16.94046593 194.04795837]
[-6.52935314 183.24940491]
[3.88175964 172.45085144]
[14.29287243 161.65229797]
[24.70398521 150.85374451]
[35.11509705 140.05519104]
[38.37865829 125.52252960]
[53.52711105 120.95799255]
[63.93822479 110.15944672]
[62.84329605 95.19945526]
[50.97084808 86.03185272]
[39.09840012 76.86425018]
[26.20505524 77.72844696]
[16.49962425 69.81776428]
[14.85582161 57.81010437]
[3.15279222 48.42718887]
[-5.53468323 45.48491669]
[-8.67623997 38.76446533]
[-20.20594788 29.16936874]
[-31.73565483 19.57427406]
[-47.29246140 16.69392967]
[-52.12590027 2.60538387]
[-63.65560532 -6.98971128]
[-75.18531036 -16.58480644]
[-86.71501923 -26.17990112]
[-98.33187103 -35.66930389]
[-110.03490448 -45.05221939]
[-118.72237396 -47.99449158]
[-121.86393738 -54.71494293]
[-133.39364624 -64.31003571]
[-149.43667603 -64.28470612]
[-159.34623718 -76.90136719]
[-155.52055359 -92.48159790]
[-140.89437866 -99.07358551]
[-126.68763733 -91.62051392]
[-123.79854584 -75.83974457]
[-112.26883698 -66.24465179]
[-100.65198517 -56.75524902]
[-88.94895935 -47.37233353]
[-81.73674011 -45.63515091]
[-77.11992645 -37.70960999]
[-65.59021759 -28.11451340]
[-54.06050873 -18.51941872]
[-42.53080368 -8.92432308]
[-27.79867935 -6.73028421]
[-22.14055824 8.04456711]
[-10.61085224 17.63966179]
[0.91885519 27.23475838]
[12.53570747 36.72415924]
[24.23873711 46.10707474]
[41.68907547 47.81048584]
[48.26600647 64.99179840]
[60.13845444 74.15940857]
[72.01090240 83.32701111]
[84.25095367 71.56166840]
[100.71488953 67.57064819]
[116.91298676 72.40402222]
[122.52644348 58.49398422]
[128.13989258 44.58394623]
[133.75335693 30.67391014]
[139.36680603 16.76387405]
[144.98025513 2.85383558]
[135.45639038 -9.19570732]
[133.24913025 -24.39516640]
[138.95220947 -38.65596390]
[151.03155518 -48.14201736]
[166.23785400 -50.30162430]
[180.48071289 -44.55386353]
[189.92884827 -32.44485092]
[192.04078674 -17.23185349]
[186.24839783 -3.00708818]
[174.10983276 6.40305281]
[158.89028931 8.46728897]
[153.27684021 22.37732697]
[147.66339111 36.28736496]
[142.04992676 50.19740295]
[136.43647766 64.10743713]
[130.82302856 78.01747894]
[136.94076538 91.71321869]
[151.04652405 96.81490326]
[165.15229797 101.91658783]
[179.25807190 107.01827240]
[193.36384583 112.11996460]
[207.46961975 117.22164917]
[221.57539368 122.32333374]
[235.68116760 127.42501831]
[251.36151123 119.70951080]
[267.46011353 125.58851624]
[274.20697021 140.97550964]
[288.40356445 145.81871033]
[302.60015869 150.66192627]
[316.79675293 155.50512695]
[319.91900635 149.99894714]
[324.49105835 145.17453003]
[330.35241699 141.41336060]
[337.24288940 139.05604553]
[344.81378174 138.37667847]
[352.64535522 139.56018066]
[360.27023315 142.68446350]
[367.20086670 147.70863342]
[372.95986938 154.46852112]
[387.71035767 157.19306946]
[402.46084595 159.91763306]
[419.13473511 156.84883118]
[426.69940186 172.02157593]
[414.21371460 183.49084473]
[399.73629761 174.66810608]
[384.98580933 171.94355774]
[370.23532104 169.21900940]
[367.05187988 176.00987244]
[380.63351440 182.37693787]
[374.26620483 195.95845032]
[360.68502808 189.59159851]
[357.50161743 196.38244629]
[369.03131104 205.97755432]
[380.56103516 215.57264709]
[392.09072876 225.16773987]
[408.13311768 230.65209961]
[407.30404663 247.58576965]
[390.80267334 251.47680664]
[382.49563599 236.69744873]
[370.96594238 227.10235596]
[359.43621826 217.50726318]
[347.90652466 207.91215515]
[317.80438232 195.89198303]
[311.95355225 169.70172119]
[297.75692749 164.85852051]
[283.56033325 160.01530457]
[269.36373901 155.17210388]
[258.68676758 162.42353821]
[245.58744812 162.18638611]
[234.86567688 154.32290649]
[230.57948303 141.53079224]
[216.47370911 136.42910767]
[202.36793518 131.32742310]
[188.26216125 126.22573090]
[174.15638733 121.12404633]
[160.05061340 116.02236176]
[145.94483948 110.92067719]
[131.83906555 105.81899261]
[128.33529663 115.70550537]
[121.84909821 123.96112061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 38]
[5 37]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[17 25]
[18 24]
[19 23]
[39 83]
[40 82]
[41 81]
[44 79]
[45 78]
[47 77]
[48 76]
[49 75]
[51 73]
[52 72]
[53 71]
[54 70]
[55 68]
[56 67]
[58 66]
[59 65]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[114 163]
[115 162]
[118 158]
[119 157]
[120 156]
[121 155]
[130 138]
[131 137]
[132 136]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
