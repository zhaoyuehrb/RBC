%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYAA2)
} def

/sequence { (\
GCCCAGAGGCCCCGCUGACUCCUGCCAGCCUCCAGGUCCCCGUGGUACCAAAGCUGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.301947512 ubox
1 15 0.005118290 ubox
1 25 0.065189529 ubox
1 29 0.004630961 ubox
1 37 0.508087172 ubox
1 43 0.010049766 ubox
1 46 0.051256741 ubox
1 54 0.302100718 ubox
2 9 0.302850922 ubox
2 14 0.005113661 ubox
2 24 0.065063341 ubox
2 28 0.004643671 ubox
2 36 0.557212295 ubox
2 42 0.010392377 ubox
2 45 0.049531571 ubox
2 53 0.301927081 ubox
3 8 0.301795081 ubox
3 9 0.012932544 ubox
3 35 0.557645673 ubox
3 36 0.082796043 ubox
3 44 0.045386780 ubox
3 45 0.112114559 ubox
4 8 0.014812843 ubox
4 17 0.027540600 ubox
4 24 0.049128195 ubox
4 35 0.084107586 ubox
4 44 0.114287625 ubox
4 56 0.209668741 ubox
5 16 0.027542135 ubox
5 20 0.042874773 ubox
5 23 0.050462799 ubox
5 43 0.115364305 ubox
5 55 0.207250066 ubox
6 15 0.027479578 ubox
6 19 0.044936178 ubox
6 21 0.065200183 ubox
6 22 0.038241133 ubox
6 32 0.905065980 ubox
6 54 0.189049054 ubox
7 16 0.009081592 ubox
7 20 0.073252890 ubox
7 23 0.009578986 ubox
7 31 0.909291557 ubox
7 55 0.003560562 ubox
8 15 0.009302339 ubox
8 16 0.049818362 ubox
8 19 0.072371151 ubox
8 20 0.012725925 ubox
8 21 0.008276997 ubox
8 22 0.009806986 ubox
8 26 0.004682432 ubox
8 30 0.909928322 ubox
8 31 0.003266652 ubox
8 33 0.031451379 ubox
8 38 0.053248502 ubox
8 39 0.036915450 ubox
8 40 0.099287096 ubox
8 41 0.011470631 ubox
8 49 0.225538554 ubox
8 55 0.013376841 ubox
9 15 0.056429769 ubox
9 19 0.013222082 ubox
9 20 0.006069979 ubox
9 21 0.009714746 ubox
9 25 0.005180672 ubox
9 29 0.909630620 ubox
9 30 0.003821903 ubox
9 32 0.031438098 ubox
9 37 0.054472712 ubox
9 38 0.037902454 ubox
9 39 0.098501136 ubox
9 40 0.011252351 ubox
9 46 0.048281871 ubox
9 48 0.226459184 ubox
9 54 0.014648756 ubox
10 14 0.056055585 ubox
10 24 0.005171162 ubox
10 28 0.907830373 ubox
10 36 0.067487228 ubox
10 45 0.049569019 ubox
10 53 0.014713527 ubox
11 35 0.067403362 ubox
11 36 0.031476574 ubox
11 44 0.049503985 ubox
11 45 0.034940082 ubox
12 35 0.031475823 ubox
12 36 0.093217580 ubox
12 44 0.034381966 ubox
12 45 0.266629186 ubox
13 24 0.041843453 ubox
13 35 0.093247303 ubox
13 42 0.059358702 ubox
13 44 0.267249651 ubox
13 56 0.021046545 ubox
14 23 0.039271989 ubox
14 25 0.927864981 ubox
14 29 0.185100390 ubox
14 41 0.059229594 ubox
14 43 0.267202741 ubox
14 46 0.003571957 ubox
14 54 0.058685374 ubox
14 55 0.004343872 ubox
15 24 0.929375251 ubox
15 28 0.186622024 ubox
15 42 0.266857053 ubox
15 45 0.003671735 ubox
15 53 0.058897250 ubox
16 24 0.006342977 ubox
16 27 0.191120791 ubox
16 42 0.003292245 ubox
16 44 0.003562182 ubox
16 50 0.003507943 ubox
16 52 0.058357308 ubox
17 23 0.031379508 ubox
17 26 0.191137768 ubox
17 38 0.120555558 ubox
17 41 0.064671122 ubox
17 49 0.004953403 ubox
18 37 0.116874679 ubox
19 36 0.070133598 ubox
20 27 0.003192804 ubox
20 35 0.034555338 ubox
21 35 0.018057845 ubox
21 36 0.264595519 ubox
21 45 0.012436433 ubox
22 35 0.270984313 ubox
22 44 0.012431530 ubox
22 45 0.008300977 ubox
23 34 0.272760015 ubox
23 42 0.008768800 ubox
23 44 0.008308855 ubox
23 47 0.053494226 ubox
24 33 0.272514967 ubox
24 37 0.006788575 ubox
24 41 0.009265683 ubox
24 43 0.009455271 ubox
24 46 0.057216581 ubox
25 36 0.007170895 ubox
25 42 0.009533509 ubox
25 45 0.057375056 ubox
26 35 0.007239950 ubox
26 44 0.057373875 ubox
26 56 0.242980988 ubox
27 43 0.056977107 ubox
27 55 0.243523673 ubox
28 37 0.057821500 ubox
28 54 0.243635922 ubox
29 36 0.058036621 ubox
29 42 0.005332682 ubox
29 53 0.233404734 ubox
30 35 0.057866404 ubox
30 53 0.073688129 ubox
31 52 0.096810628 ubox
31 57 0.009988198 ubox
32 45 0.050885367 ubox
32 56 0.009940294 ubox
33 44 0.055940128 ubox
33 56 0.117676957 ubox
34 43 0.054215248 ubox
34 55 0.117476520 ubox
35 41 0.056378779 ubox
35 49 0.758812353 ubox
35 54 0.072494242 ubox
35 55 0.008485927 ubox
36 40 0.055555881 ubox
36 46 0.007269976 ubox
36 48 0.761802630 ubox
36 54 0.011311720 ubox
37 45 0.010623319 ubox
37 47 0.751062713 ubox
37 53 0.012870205 ubox
37 57 0.036174008 ubox
37 58 0.003302508 ubox
38 44 0.024545801 ubox
38 45 0.635587823 ubox
38 56 0.047984729 ubox
39 44 0.632976958 ubox
39 45 0.465967119 ubox
40 44 0.463722640 ubox
41 56 0.075985693 ubox
42 48 0.045275735 ubox
42 54 0.088536675 ubox
42 55 0.038171894 ubox
42 59 0.095239646 ubox
43 47 0.040905905 ubox
43 50 0.082738349 ubox
43 53 0.087340669 ubox
43 56 0.233125128 ubox
43 58 0.090998772 ubox
44 49 0.090872334 ubox
44 55 0.390465303 ubox
45 54 0.405346103 ubox
45 59 0.020196954 ubox
46 53 0.397776692 ubox
46 56 0.012221693 ubox
46 58 0.020222564 ubox
47 55 0.012575573 ubox
49 56 0.131503513 ubox
50 55 0.119513183 ubox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
