%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXS1)
} def

/sequence { (\
CAGGCUAUUCCGGACGCCAGCCCUGGAAGCUGAGCCUGACCCAGCAGGUCCCAGCAGCCUGGCAGCCCGGCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.058558030 ubox
1 32 0.008433491 ubox
1 38 0.043106018 ubox
1 61 0.211800576 ubox
2 9 0.008649246 ubox
2 24 0.058818652 ubox
2 31 0.007880177 ubox
2 37 0.048429793 ubox
2 60 0.346908827 ubox
3 8 0.009465435 ubox
3 9 0.004189527 ubox
3 10 0.004341081 ubox
3 11 0.010759008 ubox
3 18 0.022194716 ubox
3 22 0.043661543 ubox
3 23 0.048289909 ubox
3 30 0.005724817 ubox
3 31 0.010056723 ubox
3 36 0.048959270 ubox
3 59 0.417547049 ubox
3 67 0.018268774 ubox
3 72 0.410929741 ubox
4 8 0.003302271 ubox
4 9 0.004100442 ubox
4 10 0.010733817 ubox
4 17 0.022232211 ubox
4 21 0.055155822 ubox
4 22 0.034621179 ubox
4 30 0.012245012 ubox
4 35 0.048962568 ubox
4 58 0.428630691 ubox
4 66 0.018348463 ubox
4 71 0.411305443 ubox
4 75 0.762677729 ubox
5 16 0.022219494 ubox
5 20 0.064599925 ubox
5 29 0.013434638 ubox
5 34 0.048951577 ubox
5 57 0.428587094 ubox
5 65 0.018382794 ubox
5 70 0.340163059 ubox
5 74 0.771424612 ubox
6 19 0.063093390 ubox
6 28 0.012014377 ubox
6 32 0.011415488 ubox
6 33 0.043378076 ubox
6 56 0.408068037 ubox
6 64 0.017866428 ubox
6 69 0.214263653 ubox
6 73 0.739809261 ubox
7 31 0.017045172 ubox
8 14 0.005187524 ubox
8 27 0.019826397 ubox
8 28 0.379047938 ubox
8 29 0.005587131 ubox
8 54 0.010134541 ubox
8 65 0.003719521 ubox
8 70 0.003923502 ubox
8 74 0.018655980 ubox
9 13 0.004927145 ubox
9 26 0.019383509 ubox
9 27 0.435944021 ubox
9 28 0.010742904 ubox
9 53 0.009621543 ubox
9 64 0.003741903 ubox
9 69 0.009128745 ubox
9 70 0.044979838 ubox
9 73 0.020417953 ubox
10 25 0.019964556 ubox
10 26 0.441666670 ubox
10 62 0.007303993 ubox
10 69 0.084764242 ubox
10 70 0.822721450 ubox
11 25 0.441607354 ubox
11 32 0.015899859 ubox
11 61 0.007307864 ubox
11 69 0.861852024 ubox
12 18 0.047040822 ubox
12 22 0.039707465 ubox
12 23 0.216691653 ubox
12 24 0.382683635 ubox
12 31 0.016031267 ubox
12 51 0.018308858 ubox
12 60 0.006892844 ubox
12 67 0.208777557 ubox
12 68 0.868112947 ubox
12 72 0.014670493 ubox
13 17 0.046312426 ubox
13 21 0.040632237 ubox
13 22 0.219632099 ubox
13 23 0.380322337 ubox
13 30 0.016045121 ubox
13 50 0.018348768 ubox
13 59 0.006840132 ubox
13 66 0.224798620 ubox
13 67 0.859984754 ubox
13 71 0.014438763 ubox
14 49 0.018234879 ubox
15 48 0.018160618 ubox
15 69 0.013077497 ubox
16 35 0.018151372 ubox
16 63 0.358513941 ubox
16 66 0.807029796 ubox
16 68 0.012785188 ubox
16 71 0.010240244 ubox
17 26 0.023726739 ubox
17 34 0.018200098 ubox
17 62 0.358935689 ubox
17 65 0.809649308 ubox
17 70 0.010318181 ubox
18 25 0.023780380 ubox
18 32 0.019037272 ubox
18 61 0.358909243 ubox
18 69 0.010305125 ubox
19 24 0.021477805 ubox
19 31 0.019045658 ubox
19 60 0.357690679 ubox
20 30 0.019051772 ubox
20 58 0.100792367 ubox
20 59 0.249817774 ubox
20 63 0.814968541 ubox
20 66 0.024956436 ubox
21 29 0.019027038 ubox
21 57 0.141744016 ubox
21 62 0.810930754 ubox
21 65 0.024859850 ubox
22 61 0.805371336 ubox
22 62 0.111509464 ubox
23 54 0.137332438 ubox
23 57 0.166857286 ubox
23 61 0.143360103 ubox
23 62 0.004435296 ubox
23 74 0.005499816 ubox
24 53 0.137738552 ubox
24 56 0.166656117 ubox
24 61 0.004660400 ubox
24 73 0.005559794 ubox
25 51 0.021791426 ubox
25 52 0.136244906 ubox
25 55 0.080235867 ubox
25 59 0.851719028 ubox
25 60 0.013164146 ubox
25 72 0.005548278 ubox
26 50 0.030110922 ubox
26 51 0.134538888 ubox
26 58 0.862619483 ubox
26 59 0.013807130 ubox
26 71 0.004996034 ubox
27 49 0.034510287 ubox
28 37 0.006862660 ubox
29 35 0.013686554 ubox
29 36 0.006560567 ubox
29 45 0.042017448 ubox
29 49 0.033918330 ubox
29 55 0.984283080 ubox
29 58 0.035633412 ubox
29 66 0.009303303 ubox
29 75 0.007779598 ubox
30 34 0.013912278 ubox
30 44 0.042081653 ubox
30 47 0.032356067 ubox
30 48 0.034364336 ubox
30 54 0.987876266 ubox
30 57 0.035712093 ubox
30 65 0.009325487 ubox
30 74 0.007849463 ubox
31 43 0.042067538 ubox
31 46 0.032306037 ubox
31 47 0.034054279 ubox
31 53 0.987240752 ubox
31 56 0.035651481 ubox
31 64 0.009319423 ubox
31 73 0.007856280 ubox
32 42 0.042006611 ubox
32 45 0.031480311 ubox
32 50 0.109968038 ubox
32 52 0.983386618 ubox
32 55 0.035319506 ubox
32 63 0.009282577 ubox
32 72 0.007864792 ubox
33 49 0.097521603 ubox
34 45 0.033641462 ubox
34 49 0.974346362 ubox
34 55 0.008186501 ubox
34 71 0.007748136 ubox
35 44 0.029553671 ubox
35 48 0.995234160 ubox
35 54 0.008266629 ubox
35 70 0.007736018 ubox
36 44 0.034729143 ubox
36 47 0.995461057 ubox
36 54 0.006756824 ubox
36 69 0.007694800 ubox
37 43 0.038619552 ubox
37 46 0.995172351 ubox
37 53 0.006698600 ubox
38 42 0.038193709 ubox
38 45 0.992654796 ubox
38 50 0.055326372 ubox
38 52 0.004554872 ubox
39 49 0.059089774 ubox
40 48 0.059371623 ubox
41 47 0.059127735 ubox
41 48 0.011558903 ubox
42 47 0.012422474 ubox
44 55 0.018099015 ubox
44 58 0.011244646 ubox
44 71 0.018270747 ubox
44 75 0.018372849 ubox
45 54 0.018114470 ubox
45 57 0.011309446 ubox
45 61 0.005691620 ubox
45 70 0.018307865 ubox
45 74 0.018504245 ubox
46 60 0.006922033 ubox
47 59 0.007505800 ubox
47 67 0.018523283 ubox
47 68 0.003838288 ubox
47 72 0.019700433 ubox
48 55 0.010968047 ubox
48 58 0.007593122 ubox
48 66 0.018586113 ubox
48 67 0.003593034 ubox
48 71 0.019731173 ubox
49 54 0.010447911 ubox
49 57 0.007450188 ubox
49 65 0.018334415 ubox
49 70 0.016415944 ubox
50 69 0.016264660 ubox
50 70 0.010919662 ubox
51 62 0.025493658 ubox
51 69 0.010972604 ubox
52 61 0.025585397 ubox
53 60 0.025539358 ubox
54 59 0.025133934 ubox
54 66 0.015001667 ubox
54 75 0.006623624 ubox
55 65 0.014998645 ubox
55 74 0.006592770 ubox
57 63 0.016544036 ubox
57 66 0.009429401 ubox
57 71 0.023128487 ubox
57 75 0.065655422 ubox
58 62 0.016446090 ubox
58 65 0.009400974 ubox
58 70 0.023183732 ubox
58 74 0.046971321 ubox
59 69 0.023106814 ubox
59 70 0.005384691 ubox
59 74 0.146556608 ubox
60 69 0.007904836 ubox
60 73 0.266050181 ubox
61 67 0.019230032 ubox
61 68 0.019974167 ubox
61 72 0.392308669 ubox
62 66 0.019208349 ubox
62 67 0.020305233 ubox
62 71 0.422168435 ubox
62 75 0.063718507 ubox
63 70 0.421862938 ubox
63 74 0.064383838 ubox
65 71 0.075661161 ubox
65 75 0.036449317 ubox
66 70 0.075244002 ubox
66 74 0.036718336 ubox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
10 70 0.9500000 lbox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
22 61 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
showpage
end
%%EOF
