%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGGACAUGACGUCUUCCGGGAGGCGGCGGGGUCUUUGUCUCGCUGCAGCGGGUGCUGCAGGUCUGGCCUUCACUUUUCUGCGUCCUCUUACUCCUAGAGGCCCAGCCUCUGUGGCGCUGUGAUCUGGUUAUUGGGAGAUUCACAGCUAAGACGCCAGGAUCCCCCGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[-233.17306519 318.47155762]
[-251.46315002 318.99212646]
[-268.04788208 310.04315186]
[-279.61218262 319.59652710]
[-291.17648315 329.14993286]
[-302.74078369 338.70330811]
[-314.22219849 348.35614014]
[-325.61987305 358.10769653]
[-337.01754761 367.85925293]
[-348.41522217 377.61080933]
[-354.12814331 395.10375977]
[-371.47750854 397.66867065]
[-382.70516968 407.61550903]
[-393.93283081 417.56234741]
[-398.29614258 425.61746216]
[-405.44122314 427.58193970]
[-416.83889771 437.33349609]
[-428.23657227 447.08505249]
[-433.69250488 461.93576050]
[-448.39331055 464.33065796]
[-459.79098511 474.08221436]
[-471.18865967 483.83377075]
[-473.86212158 499.65252686]
[-487.96578979 507.29879761]
[-502.68060303 500.90704346]
[-506.71856689 485.38046265]
[-496.98211670 472.62973022]
[-480.94021606 472.43609619]
[-469.54254150 462.68453979]
[-458.14486694 452.93298340]
[-453.50418091 438.77978516]
[-437.98812866 435.68737793]
[-426.59045410 425.93582153]
[-415.19277954 416.18426514]
[-403.87966919 406.33468628]
[-392.65200806 396.38784790]
[-381.42434692 386.44100952]
[-380.37530518 374.37374878]
[-371.08004761 365.99536133]
[-358.16677856 366.21313477]
[-346.76910400 356.46157837]
[-335.37142944 346.71002197]
[-323.97375488 336.95843506]
[-320.92739868 330.20339966]
[-312.29415894 327.13900757]
[-300.72985840 317.58563232]
[-289.16555786 308.03225708]
[-277.60125732 298.47888184]
[-280.17764282 283.70178223]
[-294.29260254 278.62557983]
[-308.40756226 273.54937744]
[-322.52252197 268.47320557]
[-336.63751221 263.39700317]
[-352.67169189 266.83752441]
[-363.46612549 254.49200439]
[-357.91644287 239.06044006]
[-341.73165894 236.41751099]
[-331.56130981 249.28202820]
[-317.44635010 254.35823059]
[-303.33135986 259.43441772]
[-289.21640015 264.51062012]
[-275.10144043 269.58682251]
[-262.83258057 256.11618042]
[-246.18885803 250.52558899]
[-229.57965088 253.61918640]
[-217.08737183 263.98403931]
[-203.68719482 257.24346924]
[-190.28700256 250.50291443]
[-176.88682556 243.76235962]
[-163.48663330 237.02180481]
[-155.59370422 224.39047241]
[-139.78846741 225.10116577]
[-126.38828278 218.36061096]
[-112.98809814 211.62004089]
[-99.58792114 204.87948608]
[-99.39455414 186.78784180]
[-90.02114868 171.21345520]
[-73.97633362 162.49121094]
[-55.63921738 163.09945679]
[-40.06429291 172.95652771]
[-27.03097534 165.53140259]
[-13.99765491 158.10626221]
[-0.96433580 150.68113708]
[12.06898403 143.25599670]
[25.03773499 135.71865845]
[37.94094849 128.06967163]
[50.84416580 120.42068481]
[63.74737930 112.77169037]
[61.70247650 103.26623535]
[62.10819626 93.55177307]
[64.93857574 84.24992371]
[70.01249695 75.95590973]
[77.00529480 69.20045471]
[85.46949768 64.41583252]
[94.86349487 61.90820312]
[104.58616638 61.83803558]
[114.01538086 64.20980835]
[122.10518646 51.57829666]
[130.08566284 38.87743378]
[137.95623779 26.10816765]
[145.82679749 13.33890152]
[153.69737244 0.56963509]
[161.56793213 -12.19963169]
[169.43850708 -24.96889877]
[177.30906677 -37.73816299]
[180.47277832 -54.39431381]
[197.35380554 -55.96512222]
[203.53634644 -40.17866135]
[190.07833862 -29.86759758]
[182.20776367 -17.09833145]
[174.33720398 -4.32906437]
[166.46662903 8.44020271]
[158.59606934 21.20946884]
[150.72549438 33.97873688]
[142.85493469 46.74800110]
[142.01966858 54.11097717]
[134.73669434 59.66809845]
[126.64689636 72.29961395]
[133.23159790 80.68604279]
[137.25898743 90.55876923]
[152.23887634 89.78234863]
[167.21876526 89.00592804]
[182.19865417 88.22950745]
[197.17854309 87.45308685]
[212.15844727 86.67666626]
[227.13833618 85.90024567]
[242.11096191 84.99456787]
[257.07522583 83.95970154]
[272.03948975 82.92483521]
[278.71078491 69.09048462]
[291.41452026 60.45849991]
[306.73339844 59.35085297]
[320.54678345 66.06548309]
[329.13888550 78.79619598]
[330.19851685 94.11849213]
[323.44061279 107.91075134]
[310.68304443 116.46292114]
[295.35751343 117.47451782]
[281.58648682 110.67342377]
[273.07434082 97.88909149]
[258.11010742 98.92395782]
[243.14582825 99.95883179]
[236.67304993 103.56632996]
[227.91474915 100.88014221]
[212.93486023 101.65656281]
[197.95497131 102.43298340]
[182.97508240 103.20939636]
[167.99519348 103.98581696]
[153.01528931 104.76223755]
[138.03540039 105.53865814]
[129.12432861 125.08269501]
[111.11785126 136.79350281]
[89.63931274 137.01383972]
[71.39636993 125.67490387]
[58.49315262 133.32389832]
[45.58993912 140.97288513]
[32.68672180 148.62187195]
[26.88153458 155.70869446]
[19.49411583 156.28932190]
[6.46079588 163.71444702]
[-6.57252359 171.13958740]
[-19.60584259 178.56471252]
[-32.63916397 185.98985291]
[-31.16591072 197.96116638]
[-33.81902313 209.69186401]
[-40.26318741 219.80561829]
[-49.71974564 227.12397766]
[-61.06068802 230.80364990]
[-72.94322205 230.43357849]
[-83.96871948 226.08078003]
[-92.84735870 218.27967834]
[-106.24754333 225.02023315]
[-119.64772797 231.76078796]
[-133.04791260 238.50134277]
[-141.89932251 251.61480713]
[-156.74607849 250.42199707]
[-170.14627075 257.16253662]
[-183.54644775 263.90310669]
[-196.94664001 270.64364624]
[-210.34681702 277.38421631]
[-209.87864685 294.03265381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 48]
[4 47]
[5 46]
[6 45]
[7 43]
[8 42]
[9 41]
[10 40]
[12 37]
[13 36]
[14 35]
[16 34]
[17 33]
[18 32]
[20 30]
[21 29]
[22 28]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[72 174]
[73 173]
[74 172]
[75 171]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[85 157]
[86 156]
[87 155]
[88 154]
[97 118]
[98 117]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 142]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
