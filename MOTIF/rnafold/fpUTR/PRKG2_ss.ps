%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGGCAGCCCCGGGCCCACGCUGCGCACCGUGUGCACGGCGGGGCUGGCUGAGCUGACCUGCGCUGGGCUCCGGCGCCGCAGGCGGCUGGGGAGGGCGGCGUGGGAGAGGACGCUGAGACGCAGGGGCGGCCGCGCCGAGGUGACAAGCUGCGCACCUGGAAAGUUACCCGGCUGUCUGGUCCCUGAGCAAA\
) } def
/len { sequence length } bind def

/coor [
[79.54614258 125.89309692]
[90.41019440 115.55207062]
[78.10761261 124.13381958]
[65.80503082 132.71557617]
[64.51615906 143.53170776]
[57.62376404 151.68070984]
[47.59303284 154.62242126]
[37.81130219 151.61549377]
[25.23998070 159.79850769]
[12.66865826 167.98153687]
[0.09733679 176.16456604]
[-12.47398472 184.34757996]
[-14.84731388 189.02458191]
[-18.42365646 192.01666260]
[-22.35634995 193.14778137]
[-25.85212135 192.60482788]
[-38.80224609 200.17411804]
[-51.75237274 207.74342346]
[-64.70249939 215.31271362]
[-77.65261841 222.88201904]
[-83.49149323 229.92320251]
[-90.87152863 230.46694946]
[-103.94130707 237.82771301]
[-117.01108551 245.18847656]
[-130.08087158 252.54924011]
[-143.15065002 259.91000366]
[-151.37817383 273.42364502]
[-166.26451111 272.92749023]
[-179.33428955 280.28823853]
[-192.40406799 287.64901733]
[-205.47384644 295.00976562]
[-216.30773926 308.05059814]
[-231.83804321 301.25015259]
[-229.60258484 284.44424438]
[-212.83460999 281.94000244]
[-199.76483154 274.57922363]
[-186.69505310 267.21847534]
[-173.62527466 259.85769653]
[-166.33259583 246.87054443]
[-150.51141357 246.84020996]
[-137.44163513 239.47944641]
[-124.37184906 232.11868286]
[-111.30207062 224.75791931]
[-98.23229218 217.39717102]
[-85.22191620 209.93190002]
[-72.27179718 202.36259460]
[-59.32167053 194.79328918]
[-46.37154388 187.22399902]
[-33.42142105 179.65469360]
[-20.65700912 171.77626038]
[-8.08568668 163.59324646]
[4.48563480 155.41021729]
[17.05695724 147.22718811]
[29.62827873 139.04417419]
[37.08885956 121.21305084]
[57.22327805 120.41298676]
[69.52586365 111.83123779]
[81.82844543 103.24948883]
[83.79937744 96.03858948]
[88.20113373 90.90724182]
[93.74220276 88.47522736]
[92.06273651 73.56954956]
[90.38327026 58.66386414]
[88.70380402 43.75817871]
[87.02433777 28.85249710]
[85.34486389 13.94681358]
[83.54599762 -0.94493121]
[81.62783813 -15.82178116]
[72.18933868 -28.51922989]
[78.23558807 -42.13143539]
[76.31742859 -57.00828552]
[74.39926910 -71.88513947]
[72.36194611 -86.74613953]
[70.20559692 -101.59033203]
[68.04924011 -116.43452454]
[55.39967346 -121.92756653]
[47.18390656 -132.86883545]
[45.46421432 -146.33364868]
[50.58401489 -158.78828430]
[61.10581589 -167.01734924]
[59.18765640 -181.89419556]
[54.98184967 -190.01713562]
[57.35995483 -197.02464294]
[55.68048859 -211.93032837]
[46.44670868 -224.77742004]
[52.71035767 -238.29096985]
[51.03088760 -253.19665527]
[41.79711151 -266.04373169]
[48.06075668 -279.55728149]
[46.38129044 -294.46298218]
[44.70182419 -309.36865234]
[32.19081879 -319.02526855]
[30.25535774 -334.71060181]
[40.04371262 -347.11880493]
[55.74862671 -348.88833618]
[68.05265808 -338.96932983]
[69.65603638 -323.24661255]
[59.60750580 -311.04812622]
[61.28697205 -296.14245605]
[62.96644211 -281.23675537]
[72.08009338 -269.45581055]
[65.93656921 -254.87611389]
[67.61603546 -239.97042847]
[76.72969055 -228.18948364]
[70.58617401 -213.60978699]
[72.26564026 -198.70410156]
[74.06450653 -183.81236267]
[75.98266602 -168.93551636]
[90.62900543 -161.53448486]
[98.05633545 -146.71540833]
[95.16302490 -130.22499084]
[82.89343262 -118.59088135]
[85.04978943 -103.74668884]
[87.20614624 -88.90248871]
[91.28395844 -82.72737885]
[89.27612305 -73.80329132]
[91.19427490 -58.92644501]
[93.11243439 -44.04959488]
[102.41374207 -32.41623688]
[96.50469208 -17.73993874]
[98.42284393 -2.86308861]
[102.40116882 3.37658715]
[100.25054932 12.26734638]
[101.93001556 27.17302895]
[103.60948181 42.07871246]
[105.28895569 56.98439789]
[106.96842194 71.89007568]
[108.64788818 86.79576111]
[117.90594482 98.59780884]
[131.98297119 103.77828217]
[141.13009644 103.80657959]
[146.24299622 109.15625000]
[160.23516846 114.56168365]
[174.22735596 119.96711731]
[188.21954346 125.37255859]
[202.29656982 130.55302429]
[216.45481873 135.50721741]
[230.65232849 140.34777832]
[244.88815308 145.07440186]
[259.12399292 149.80102539]
[273.35983276 154.52764893]
[282.50317383 154.26275635]
[287.78488159 159.44578552]
[301.94314575 164.39997864]
[316.10137939 169.35417175]
[330.25964355 174.30834961]
[344.41790771 179.26254272]
[358.57614136 184.21672058]
[371.31329346 175.55233765]
[386.53207397 176.04360962]
[398.40301514 185.29266357]
[402.50238037 199.58717346]
[416.66064453 204.54136658]
[429.33853149 195.59426880]
[444.85363770 195.84146118]
[457.24008179 205.18789673]
[461.73501587 220.03965759]
[456.61004639 234.68597412]
[443.83584595 243.49501038]
[428.32434082 243.07952881]
[416.04000854 233.59927368]
[411.70645142 218.69961548]
[397.54818726 213.74542236]
[385.43069458 222.36541748]
[370.38293457 222.19522095]
[358.17810059 213.09053040]
[353.62194824 198.37496948]
[339.46371460 193.42079163]
[325.30545044 188.46659851]
[311.14721680 183.51242065]
[296.98895264 178.55822754]
[282.83071899 173.60404968]
[268.63320923 168.76348877]
[254.39736938 164.03686523]
[240.16152954 159.31024170]
[225.92570496 154.58361816]
[218.57781982 155.46066284]
[211.50064087 149.66546631]
[197.34239197 144.71127319]
[192.71702576 145.94549561]
[187.26762390 144.27839661]
[182.81411743 139.36474609]
[168.82192993 133.95930481]
[154.82974243 128.55387878]
[140.83755493 123.14843750]
[126.80249786 117.85530853]
[112.72547150 112.67483521]
[125.85815430 119.92277527]
[133.88531494 132.59419250]
[134.82762146 147.56455994]
[128.45271301 161.14250183]
[116.33251190 169.97998047]
[101.45562744 171.89782715]
[87.49037933 166.42317200]
[77.88031769 154.90592957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 58]
[3 57]
[4 56]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[16 49]
[17 48]
[18 47]
[19 46]
[20 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[28 38]
[29 37]
[30 36]
[31 35]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 121]
[68 120]
[70 118]
[71 117]
[72 116]
[73 114]
[74 113]
[75 112]
[80 108]
[81 107]
[83 106]
[84 105]
[86 103]
[87 102]
[89 100]
[90 99]
[91 98]
[129 187]
[130 186]
[132 185]
[133 184]
[134 183]
[135 182]
[136 179]
[137 178]
[138 176]
[139 175]
[140 174]
[141 173]
[143 172]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
