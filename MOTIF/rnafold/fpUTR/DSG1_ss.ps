%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCCCAAGUUUUUAGGGUGGGGAUCCAGACUGGUUAUACGUACCUUCAGUCCUUCUCCCAGAGGAAGGCAGAAACACCUCAAAGCCUGCAUGUAAGAACAUCUACUGAGAAAUUAUUUUAAUCAGACACCAGCUGAGUGGGAGAAAGAAAAAGAACAGAGAAGAACAAACAAAACUCCCUUGGUCUUGGAUGUAAGAGAAUCCAGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[-21.67910767 157.27819824]
[-33.95419312 163.74127197]
[-47.50849915 166.59025574]
[-61.30271912 165.61903381]
[-66.50225830 179.68904114]
[-71.70179749 193.75903320]
[-76.90133667 207.82902527]
[-67.53691864 220.08917236]
[-66.31018066 235.46769714]
[-73.61257935 249.05734253]
[-87.11392975 256.52172852]
[-102.50601196 255.47897339]
[-114.87726593 246.26184082]
[-120.28006744 231.81146240]
[-116.99040985 216.73892212]
[-106.05799866 205.85379028]
[-90.97133636 202.62948608]
[-85.77179718 188.55949402]
[-80.57225800 174.48950195]
[-75.37271881 160.41950989]
[-86.67289734 151.88456726]
[-95.12427521 140.52174377]
[-109.23223114 145.61738586]
[-123.34019470 150.71301270]
[-137.44815063 155.80865479]
[-140.24218750 170.84661865]
[-150.12295532 182.39077759]
[-164.36074829 187.40589905]
[-179.09857178 184.63955688]
[-190.39683533 174.93312073]
[-204.50479126 180.02876282]
[-218.61274719 185.12440491]
[-232.72070312 190.22003174]
[-246.82865906 195.31567383]
[-260.93661499 200.41131592]
[-262.44241333 215.59997559]
[-270.39651489 228.62667847]
[-283.21963501 236.90495300]
[-298.36578369 238.79115295]
[-312.82760620 233.91078186]
[-323.73373413 223.23280334]
[-328.91876221 208.87738037]
[-327.35317993 193.69477844]
[-319.34783936 180.69949341]
[-306.49218750 172.47177124]
[-291.33877563 170.64523315]
[-276.89627075 175.58251953]
[-266.03225708 186.30335999]
[-251.92430115 181.20771790]
[-237.81634521 176.11207581]
[-223.70838928 171.01644897]
[-209.60041809 165.92080688]
[-195.49246216 160.82516479]
[-193.00444031 146.13928223]
[-183.43589783 134.59376526]
[-169.27952576 129.35322571]
[-154.30241394 131.91899109]
[-142.54379272 141.70069885]
[-128.43583679 136.60505676]
[-114.32787323 131.50941467]
[-100.21991730 126.41378784]
[-100.87029266 111.17321014]
[-96.89139557 96.44682312]
[-109.53731537 88.37955475]
[-122.18322754 80.31229401]
[-134.82914734 72.24502563]
[-147.78091431 80.32056427]
[-162.95483398 81.96827698]
[-177.33810425 76.86100769]
[-188.07492065 66.01280975]
[-193.03349304 51.57759094]
[-191.22926331 36.42148590]
[-183.02049255 23.55374718]
[-170.03701782 15.52927017]
[-154.85673523 13.94132423]
[-140.49368286 19.10519600]
[-129.79966736 29.99559402]
[-124.89798737 44.45022583]
[-126.76187897 59.59910583]
[-114.11595917 67.66637421]
[-101.47004700 75.73364258]
[-88.82412720 83.80091095]
[-76.35103607 73.40430450]
[-61.17607498 67.54146576]
[-44.89236832 66.84871674]
[-29.21612740 71.41849518]
[-15.80576134 80.78759003]
[-6.08644152 93.98397827]
[8.16567135 89.30666351]
[22.41778374 84.62934113]
[36.66989517 79.95202637]
[43.78349304 66.74609375]
[39.84780884 52.27161789]
[35.91212463 37.79714203]
[31.97643852 23.32266808]
[19.96295738 12.15986061]
[23.88674545 -3.76295066]
[39.71134567 -8.06574154]
[51.15776825 3.67782998]
[46.45091248 19.38698387]
[50.38659668 33.86145782]
[54.32228088 48.33593369]
[58.25796509 62.81040573]
[65.75612640 62.97632217]
[73.54164124 50.15501785]
[80.75245667 63.30815125]
[88.25062561 63.47406769]
[92.82270813 49.18785095]
[97.39479828 34.90163422]
[101.96688080 20.61541367]
[94.98419189 6.69134188]
[99.82445526 -7.73178387]
[113.14196014 -14.30290222]
[117.71404266 -28.58912086]
[111.67529297 -43.45226288]
[119.65597534 -57.36945343]
[135.53401184 -59.66461563]
[147.12910461 -48.57709503]
[145.54652405 -32.61228943]
[132.00025940 -24.01703262]
[127.42817688 -9.73081589]
[134.45590210 3.35148597]
[130.02267456 17.90487289]
[116.25309753 25.18750000]
[111.68101501 39.47372055]
[107.10892487 53.75993729]
[102.53684235 68.04615784]
[112.88001251 73.57896423]
[119.68961334 81.91880798]
[122.45540619 91.32976532]
[137.43542480 90.55577087]
[152.41543579 89.78177643]
[167.39546204 89.00778198]
[182.37547302 88.23379517]
[171.98280334 77.41749573]
[172.14575195 62.41838074]
[182.77098083 51.83042908]
[197.77056885 51.72017670]
[208.55027771 62.15079117]
[208.93371582 77.14588928]
[198.70202637 88.11338806]
[213.69183350 88.66635895]
[228.68164062 89.21932983]
[243.67144775 89.77230835]
[258.66125488 90.32527924]
[262.04748535 75.66478729]
[268.14727783 61.91018677]
[276.74014282 49.55870056]
[287.51544189 39.05682373]
[300.08364868 30.78419113]
[313.99044800 25.03985596]
[328.73312378 22.03147125]
[343.77868652 21.86778831]
[358.58331299 24.55472565]
[372.61181641 29.99514961]
[385.35702515 37.99239349]
[396.35824585 48.25736237]
[405.21780396 60.41897964]
[411.61538696 74.03762054]
[415.31976318 88.62097168]
[416.19699097 103.64185333]
[414.21542358 118.55727386]
[409.44662476 132.82804871]
[402.06298828 145.93829346]
[392.33148193 157.41409302]
[380.60382080 166.84060669]
[367.30401611 173.87704468]
[352.91281128 178.26907349]
[337.95046997 179.85791016]
[322.95782471 178.58612061]
[308.47689819 174.49967957]
[295.03112793 167.74630737]
[283.10659790 158.57014465]
[273.13436890 147.30288696]
[265.47491455 134.35186768]
[260.40512085 120.18521881]
[258.10827637 105.31507874]
[243.11846924 104.76210785]
[228.12866211 104.20913696]
[213.13887024 103.65616608]
[198.14906311 103.10319519]
[183.14945984 103.21381378]
[168.16944885 103.98780060]
[153.18943787 104.76179504]
[138.20941162 105.53578949]
[123.22939301 106.30978394]
[107.32696533 125.70848083]
[79.95826721 121.50103760]
[68.63264465 93.39902496]
[75.25457001 106.85822296]
[81.87649536 120.31742859]
[88.49842072 133.77662659]
[95.12035370 147.23582458]
[110.43321991 149.74493408]
[121.32282257 160.79917908]
[123.60187531 176.14797974]
[116.39403534 189.88940430]
[102.47087860 196.73959351]
[87.18612671 194.06451416]
[76.41708374 182.89279175]
[74.30467224 167.52018738]
[81.66114807 153.85775757]
[75.03922272 140.39855957]
[68.41729736 126.93935394]
[61.79537201 113.48015594]
[55.17344284 100.02095032]
[41.34721375 94.20413971]
[27.09510040 98.88145447]
[12.84298801 103.55876923]
[-1.40912461 108.23609161]
[-1.07829297 122.19324493]
[-4.57767487 135.68579102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[22 61]
[23 60]
[24 59]
[25 58]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[63 82]
[64 81]
[65 80]
[66 79]
[88 210]
[89 209]
[90 208]
[91 207]
[92 103]
[93 102]
[94 101]
[95 100]
[107 127]
[108 126]
[109 125]
[110 124]
[113 121]
[114 120]
[130 186]
[131 185]
[132 184]
[133 183]
[134 182]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[189 206]
[190 205]
[191 204]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
