%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CFAP47)
} def

/sequence { (\
GGUCGUCGACGCUAAUCCUUGGCCGGACGGAUCCACAUCUGUUUUCUGGCUACCGAGAGGGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.055556677 ubox
1 13 0.035456815 ubox
1 17 0.005009109 ubox
1 18 0.012015549 ubox
1 24 0.191398689 ubox
1 33 0.273016196 ubox
1 34 0.523533798 ubox
1 39 0.004340535 ubox
1 46 0.004973469 ubox
1 54 0.008612254 ubox
1 66 0.251970749 ubox
2 6 0.036125276 ubox
2 10 0.621004446 ubox
2 12 0.037520110 ubox
2 16 0.005136622 ubox
2 17 0.012005473 ubox
2 23 0.191512983 ubox
2 28 0.008118919 ubox
2 32 0.277922336 ubox
2 33 0.522045048 ubox
2 36 0.016714127 ubox
2 38 0.004771494 ubox
2 53 0.008593396 ubox
2 62 0.147883032 ubox
2 65 0.254712600 ubox
3 9 0.621309903 ubox
3 11 0.017120317 ubox
3 15 0.005560885 ubox
3 22 0.191430334 ubox
3 26 0.003195408 ubox
3 27 0.008121808 ubox
3 30 0.417601576 ubox
3 31 0.349994373 ubox
3 35 0.014513625 ubox
3 37 0.003897795 ubox
3 52 0.008141947 ubox
3 61 0.148049582 ubox
3 64 0.251431820 ubox
4 8 0.616250957 ubox
4 11 0.037523730 ubox
4 21 0.191152200 ubox
4 25 0.007611057 ubox
4 26 0.007940740 ubox
4 29 0.561448837 ubox
4 30 0.250575104 ubox
4 60 0.148391359 ubox
5 10 0.047866104 ubox
5 12 0.017537084 ubox
5 16 0.005934614 ubox
5 20 0.172775085 ubox
5 23 0.010528653 ubox
5 24 0.007310758 ubox
5 28 0.614190612 ubox
5 32 0.008694407 ubox
5 50 0.007420864 ubox
5 62 0.247702051 ubox
5 65 0.028380418 ubox
6 11 0.016635574 ubox
6 15 0.006981287 ubox
6 22 0.011030821 ubox
6 26 0.060184695 ubox
6 27 0.612029116 ubox
6 30 0.011662219 ubox
6 31 0.009347413 ubox
6 49 0.007421256 ubox
6 56 0.006752550 ubox
6 58 0.147684351 ubox
6 60 0.007582225 ubox
6 61 0.247170394 ubox
6 64 0.027831380 ubox
7 21 0.011655934 ubox
7 25 0.112381403 ubox
7 26 0.604375135 ubox
7 29 0.018357949 ubox
7 30 0.008915552 ubox
7 48 0.007410976 ubox
7 55 0.007292950 ubox
7 57 0.147867955 ubox
7 59 0.010020040 ubox
7 60 0.236616007 ubox
8 17 0.167061652 ubox
8 20 0.011917803 ubox
8 24 0.142508993 ubox
8 28 0.018662028 ubox
8 46 0.004891708 ubox
8 47 0.005389525 ubox
8 54 0.007762583 ubox
9 16 0.155415015 ubox
9 19 0.011456367 ubox
9 45 0.004562985 ubox
10 21 0.012249454 ubox
10 25 0.131499369 ubox
10 55 0.100243053 ubox
11 20 0.011437509 ubox
11 23 0.610064288 ubox
11 24 0.095064803 ubox
11 54 0.100170281 ubox
11 62 0.382478315 ubox
11 65 0.579792042 ubox
12 22 0.619095401 ubox
12 57 0.128216843 ubox
12 59 0.148439244 ubox
12 60 0.093040103 ubox
12 61 0.380517699 ubox
12 64 0.580911725 ubox
13 21 0.618226517 ubox
13 52 0.028993566 ubox
13 56 0.112149314 ubox
13 58 0.144474721 ubox
13 59 0.108143360 ubox
13 60 0.369505344 ubox
13 63 0.562217748 ubox
14 20 0.607093551 ubox
14 51 0.018231755 ubox
15 19 0.463039069 ubox
16 27 0.003420026 ubox
16 56 0.425217614 ubox
16 58 0.086727446 ubox
16 60 0.221779956 ubox
16 61 0.477361073 ubox
17 26 0.004265109 ubox
17 55 0.430191802 ubox
17 57 0.079394440 ubox
17 59 0.229065779 ubox
17 60 0.520370179 ubox
17 61 0.136480853 ubox
18 25 0.004323831 ubox
18 57 0.247552898 ubox
18 59 0.520714209 ubox
18 60 0.135943702 ubox
19 56 0.250932964 ubox
19 57 0.026792427 ubox
19 58 0.518641032 ubox
19 59 0.134482072 ubox
20 52 0.574784940 ubox
20 55 0.234726840 ubox
20 56 0.025443808 ubox
20 57 0.407070102 ubox
20 58 0.078536663 ubox
21 46 0.003189591 ubox
21 47 0.003323469 ubox
21 51 0.730226528 ubox
21 54 0.205834601 ubox
22 46 0.003491111 ubox
22 50 0.748257919 ubox
22 53 0.139603061 ubox
23 49 0.761176126 ubox
24 48 0.761187637 ubox
25 34 0.037753098 ubox
25 43 0.006458360 ubox
25 44 0.193040402 ubox
25 45 0.017990518 ubox
25 46 0.060343319 ubox
25 47 0.748481365 ubox
26 33 0.037777827 ubox
26 42 0.004939770 ubox
26 43 0.282287063 ubox
26 44 0.024393827 ubox
26 45 0.041521693 ubox
26 46 0.730468628 ubox
27 32 0.033482542 ubox
27 42 0.550001228 ubox
27 43 0.034883856 ubox
27 44 0.043062217 ubox
27 45 0.554321733 ubox
28 41 0.783314381 ubox
28 48 0.003876179 ubox
29 40 0.784659005 ubox
29 43 0.011322142 ubox
29 44 0.035175682 ubox
29 46 0.004608279 ubox
29 47 0.004797016 ubox
29 66 0.004812403 ubox
30 39 0.785629471 ubox
30 42 0.007447862 ubox
30 43 0.038458763 ubox
30 44 0.008461170 ubox
30 45 0.005947840 ubox
30 46 0.006765296 ubox
30 65 0.005800504 ubox
31 38 0.773387252 ubox
31 42 0.038668704 ubox
31 43 0.008862904 ubox
31 44 0.007550078 ubox
31 45 0.006645704 ubox
32 37 0.696899125 ubox
32 41 0.037791275 ubox
34 41 0.016583807 ubox
35 40 0.014398306 ubox
35 42 0.025458318 ubox
36 41 0.027143204 ubox
39 48 0.003444631 ubox
39 64 0.595787268 ubox
40 63 0.605718598 ubox
41 62 0.607535496 ubox
42 60 0.003173574 ubox
42 61 0.607166641 ubox
43 58 0.007725052 ubox
43 59 0.004255236 ubox
43 60 0.604408246 ubox
44 57 0.009025085 ubox
44 58 0.005151443 ubox
44 59 0.604811650 ubox
45 56 0.010216113 ubox
45 57 0.005008988 ubox
45 58 0.607132429 ubox
46 55 0.010241783 ubox
46 57 0.607474126 ubox
46 64 0.008021452 ubox
47 55 0.241347371 ubox
47 56 0.555197548 ubox
47 63 0.008142476 ubox
48 54 0.491517292 ubox
48 62 0.007931351 ubox
48 66 0.223358311 ubox
49 53 0.484201646 ubox
49 62 0.003688670 ubox
49 65 0.226095013 ubox
50 60 0.007534158 ubox
50 61 0.004159325 ubox
50 64 0.226100245 ubox
51 59 0.007352229 ubox
51 63 0.220364234 ubox
53 60 0.126960417 ubox
53 61 0.198882876 ubox
54 59 0.128461990 ubox
54 60 0.198848127 ubox
59 66 0.022260969 ubox
60 65 0.022625431 ubox
60 66 0.005487020 ubox
61 65 0.005915789 ubox
2 10 0.9500000 lbox
3 9 0.9500000 lbox
4 8 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
