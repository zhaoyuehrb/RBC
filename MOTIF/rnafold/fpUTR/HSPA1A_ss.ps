%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAAGCCCAGGGGCAAGCGGUCCGGAUAACGGCUAGCCUGAGGAGCUGCUGCGACAGUCCACUACCUUUUUCGAGAGUGACUCCCGUUGUCCCAAGGCUUCCCAGAGCGAACCUGUGCGGCUGCAGGCACCGGCGCGUCGAGUUUCCGGCGUCCGGAAGGACCGAGCUCUUCUCGCGGAUCCAGUGUUCCGUUUCCAGCCCCCAAUCUCAGAGCGGAGCCGACAGAGAGCAGGGAACCGGC\
) } def
/len { sequence length } bind def

/coor [
[-72.52656555 90.15897369]
[-83.13489532 100.76384735]
[-98.06818390 102.17694092]
[-110.47743225 93.75016022]
[-114.67124939 79.34835815]
[-108.72618866 65.57678223]
[-95.37013245 58.75179291]
[-109.71720886 54.37442398]
[-124.09217072 50.08951187]
[-138.49441528 45.89722443]
[-147.58610535 46.50429153]
[-153.05445862 41.55714417]
[-167.40153503 37.17977524]
[-182.85894775 40.55305862]
[-192.77429199 29.43841934]
[-207.12136841 25.06105423]
[-220.94918823 32.23247147]
[-235.43681335 27.58881950]
[-242.18844604 14.36191273]
[-256.53552246 9.98454666]
[-270.88259888 5.60718012]
[-285.22967529 1.22981369]
[-294.32843018 1.71977317]
[-299.73263550 -3.29737115]
[-314.02218628 -7.85909367]
[-328.31170654 -12.42081642]
[-343.81124878 -9.24682713]
[-353.58267212 -20.48820496]
[-367.87222290 -25.04992867]
[-382.16174316 -29.61165047]
[-388.65710449 -28.58479500]
[-393.91574097 -30.66580009]
[-396.75778198 -34.47916412]
[-410.92510986 -39.40729904]
[-423.64630127 -30.71950340]
[-438.86596680 -31.18278122]
[-450.75390625 -40.40998459]
[-454.87954712 -54.69693756]
[-469.04687500 -59.62507248]
[-483.24566650 -64.46189880]
[-497.47528076 -69.20722198]
[-511.70489502 -73.95254517]
[-527.24401855 -70.97837830]
[-536.86993408 -82.34463501]
[-551.09954834 -87.08995056]
[-565.32916260 -91.83527374]
[-579.55877686 -96.58059692]
[-593.78839111 -101.32592010]
[-608.01800537 -106.07124329]
[-622.46850586 -95.08958435]
[-640.46051025 -94.99861908]
[-654.76855469 -105.64551544]
[-659.76037598 -122.60317993]
[-674.10742188 -126.98054504]
[-688.45452881 -131.35791016]
[-702.80157471 -135.73527527]
[-717.14868164 -140.11264038]
[-731.57757568 -144.21212769]
[-746.08300781 -148.03219604]
[-760.58843994 -151.85226440]
[-775.09387207 -155.67233276]
[-784.16687012 -154.83137512]
[-789.76080322 -159.63607788]
[-804.21582031 -163.64259338]
[-818.67089844 -167.64909363]
[-825.12170410 -166.37217712]
[-830.45678711 -168.24856567]
[-833.44396973 -171.94934082]
[-847.79107666 -176.32670593]
[-862.13812256 -180.70407104]
[-877.98413086 -176.48078918]
[-889.37145996 -188.28167725]
[-884.58581543 -203.96701050]
[-868.55023193 -207.40103149]
[-857.76080322 -195.05114746]
[-843.41369629 -190.67378235]
[-829.06658936 -186.29641724]
[-814.66436768 -182.10412598]
[-800.20935059 -178.09762573]
[-785.75433350 -174.09111023]
[-771.27380371 -170.17774963]
[-756.76837158 -166.35768127]
[-742.26293945 -162.53761292]
[-727.75756836 -158.71754456]
[-724.55889893 -160.15124512]
[-720.51098633 -160.11993408]
[-716.30395508 -158.24298096]
[-712.77130127 -154.45973206]
[-698.42419434 -150.08235168]
[-684.07714844 -145.70498657]
[-669.73004150 -141.32762146]
[-655.38299561 -136.95025635]
[-646.90252686 -145.60227966]
[-635.48364258 -149.86094666]
[-623.26501465 -148.86329651]
[-612.56304932 -142.73706055]
[-605.43261719 -132.58801270]
[-603.27264404 -120.30085754]
[-589.04302979 -115.55553436]
[-574.81341553 -110.81021118]
[-560.58380127 -106.06488800]
[-546.35418701 -101.31956482]
[-532.12457275 -96.57424927]
[-517.60321045 -99.88783264]
[-506.95956421 -88.18215942]
[-492.72994995 -83.43683624]
[-478.50033569 -78.69151306]
[-471.17697144 -79.55509949]
[-464.11874390 -73.79241180]
[-449.95141602 -68.86427307]
[-437.84979248 -77.50653076]
[-422.80172729 -77.36401367]
[-410.58016968 -68.28179932]
[-405.99697876 -53.57463837]
[-391.82965088 -48.64650345]
[-377.60003662 -43.90118027]
[-363.31048584 -39.33945847]
[-349.02096558 -34.77773666]
[-334.54348755 -38.27801132]
[-323.74996948 -26.71034622]
[-309.46044922 -22.14862442]
[-295.17092896 -17.58690262]
[-280.85232544 -13.11726475]
[-266.50524902 -8.73989868]
[-252.15815735 -4.36253214]
[-237.81108093 0.01483410]
[-224.82556152 -7.19016886]
[-210.21322632 -2.95527649]
[-202.74400330 10.71397495]
[-188.39692688 15.09134197]
[-173.96571350 11.40495968]
[-163.02416992 22.83269691]
[-148.67709351 27.21006393]
[-134.30213928 31.49497795]
[-119.89988708 35.68726349]
[-112.61534882 34.54152298]
[-105.33984375 40.02734756]
[-90.99276733 44.40471268]
[-76.46305847 48.13132095]
[-61.78022385 51.19960022]
[-47.09738922 54.26788330]
[-32.41455078 57.33616257]
[-25.24015999 55.63165283]
[-17.56298637 60.53962326]
[-2.92087245 63.79669189]
[11.72124195 67.05376434]
[26.36335564 70.31082916]
[41.00547028 73.56790161]
[55.64758301 76.82496643]
[69.75125885 72.03584290]
[81.54210663 82.58508301]
[96.18421936 85.84214783]
[110.86705780 82.77386475]
[122.97956848 73.92587280]
[135.09208679 65.07787323]
[147.20458984 56.22987366]
[153.33764648 41.02074051]
[169.61128235 38.99578476]
[179.28459167 52.23810959]
[172.40649414 67.12514496]
[156.05258179 68.34238434]
[143.94007874 77.19038391]
[131.82756042 86.03838348]
[119.71505737 94.88637543]
[122.30921173 109.66035461]
[136.71145630 113.85263824]
[145.80314636 113.24557495]
[151.27149963 118.19272614]
[165.61857605 122.57009125]
[179.96566772 126.94745636]
[194.31274414 131.32482910]
[208.65982056 135.70219421]
[224.11723328 132.32890320]
[234.03257751 143.44354248]
[248.37965393 147.82090759]
[262.72671509 152.19827271]
[277.48370361 154.88748169]
[292.45263672 155.85247803]
[307.42156982 156.81745911]
[322.39047241 157.78245544]
[337.35940552 158.74743652]
[347.16482544 146.72106934]
[362.17504883 142.78756714]
[376.61837769 148.45945740]
[384.94104004 161.55575562]
[383.94277954 177.04069519]
[374.00747681 188.95997620]
[358.95544434 192.73040771]
[344.57452393 186.90217590]
[336.39440918 173.71636963]
[321.42550659 172.75137329]
[306.45657349 171.78639221]
[291.48764038 170.82139587]
[276.51870728 169.85641479]
[289.48284912 177.40170288]
[299.52136230 188.54747009]
[305.67407227 202.22753906]
[307.35238647 217.13334656]
[304.39578247 231.83908081]
[297.08709717 244.93804932]
[286.12542725 255.17727661]
[272.55929565 261.57730103]
[257.68640137 263.52593994]
[242.92942810 260.83682251]
[229.69993591 253.76713562]
[219.26339722 242.99314880]
[212.61813354 229.54545593]
[210.39979553 214.71038818]
[212.82058716 199.90701294]
[219.64894104 186.55136108]
[230.23167419 175.92095947]
[243.55651855 169.03265381]
[258.34936523 166.54534912]
[244.00228882 162.16798401]
[229.65521240 157.79061890]
[215.22399902 161.47700500]
[204.28245544 150.04927063]
[189.93537903 145.67190552]
[175.58828735 141.29454041]
[161.24121094 136.91716003]
[146.89413452 132.53979492]
[132.51918030 128.25488281]
[118.11692810 124.06259918]
[110.02555847 125.32949829]
[102.63600159 124.21954346]
[96.57591248 121.20908356]
[92.26892090 116.92249298]
[89.90502167 112.05811310]
[89.43547821 107.31023407]
[90.59189606 103.29453278]
[92.92715454 100.48426056]
[78.28504181 97.22719574]
[63.13406372 101.78334808]
[52.39051437 91.46707916]
[37.74840164 88.21001434]
[23.10628700 84.95294189]
[8.46417332 81.69587708]
[-6.17794085 78.43880463]
[-20.82005501 75.18173981]
[-35.48283386 72.01899719]
[-50.16566849 68.95071411]
[-64.84850311 65.88243866]
[-79.53134155 62.81415558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 138]
[8 137]
[9 135]
[10 134]
[12 133]
[13 132]
[15 130]
[16 129]
[19 126]
[20 125]
[21 124]
[22 123]
[24 122]
[25 121]
[26 120]
[28 118]
[29 117]
[30 116]
[33 115]
[34 114]
[38 110]
[39 109]
[40 107]
[41 106]
[42 105]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 84]
[59 83]
[60 82]
[61 81]
[63 80]
[64 79]
[65 78]
[68 77]
[69 76]
[70 75]
[139 243]
[140 242]
[141 241]
[142 240]
[144 239]
[145 238]
[146 237]
[147 236]
[148 235]
[149 234]
[151 232]
[152 231]
[153 164]
[154 163]
[155 162]
[156 161]
[165 223]
[166 222]
[168 221]
[169 220]
[170 219]
[171 218]
[172 217]
[174 215]
[175 214]
[176 213]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
