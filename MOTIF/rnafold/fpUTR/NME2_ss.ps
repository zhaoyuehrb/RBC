%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGGGCAGUACCACUGCUGUGCGGCUGUCAGUCAGUGCUGCAGGCGCCGAGAGGAGGGGCUUGUGACCGCCCCAGGGAAGCUGGGCAUCACCAAAGGGAGCUUGUUUGCCAGGGACACUGCAAGUAGGAAGUGUCUACAGGUCGAUGACAGGCCUAAUCUCUAUGACAGGGUCUAGACUUUCCUCAGGGUCCAGGGGCGCACCUCAGGGUGAACUGGAAAACUCGACCGCACUUUAGUGCCAGGACC\
) } def
/len { sequence length } bind def

/coor [
[101.89298248 179.34945679]
[110.38243103 165.31874084]
[110.19543457 150.31990051]
[110.00843811 135.32106018]
[95.25284576 132.62431335]
[89.77272797 146.58741760]
[91.93341064 162.26039124]
[80.08116913 171.28112793]
[74.60105133 185.24423218]
[69.12093353 199.20733643]
[63.64082336 213.17044067]
[58.16070557 227.13354492]
[52.68059158 241.09664917]
[52.52228546 258.04986572]
[36.18778992 262.59085083]
[27.30242157 248.15179443]
[38.71748352 235.61653137]
[44.19760132 221.65342712]
[49.67771530 207.69032288]
[55.15782928 193.72721863]
[60.63794708 179.76411438]
[66.11806488 165.80101013]
[63.56540680 151.12677002]
[75.80962372 141.10729980]
[81.28974152 127.14419556]
[69.44659424 117.93877411]
[57.26752090 126.69493103]
[50.57923508 141.03289795]
[35.72888184 142.18016052]
[23.54981041 150.93630981]
[11.37073994 159.69247437]
[6.24728012 167.22201538]
[-1.01518154 168.48074341]
[-13.30246258 177.08439636]
[-25.58974266 185.68804932]
[-37.87702179 194.29168701]
[-44.31343842 209.37493896]
[-60.62437820 211.07357788]
[-70.03054047 197.64018250]
[-62.85567856 182.89389038]
[-46.48067093 182.00440979]
[-34.19338989 173.40075684]
[-21.90610886 164.79711914]
[-9.61882782 156.19346619]
[2.61458492 147.51339722]
[14.79365540 138.75724792]
[26.97272491 130.00108337]
[32.78988266 116.28941345]
[48.51136398 114.51586151]
[60.69043350 105.75970459]
[54.60647202 92.04892731]
[39.94208145 95.20417786]
[28.15221596 106.60291290]
[12.46226597 101.83242798]
[9.01270771 85.80019379]
[21.35214996 74.99879456]
[36.78683472 80.53978729]
[51.45122528 77.38453674]
[51.17079163 69.88977814]
[50.32949066 47.40551376]
[35.47031021 45.35496140]
[20.61112976 43.30440903]
[5.75194979 41.25385284]
[-9.10723019 39.20330048]
[-19.76092339 50.48507309]
[-35.01738358 53.31703949]
[-49.01018906 46.61025238]
[-56.35882187 32.94360733]
[-54.23758316 17.57220650]
[-43.46213150 6.40666819]
[-28.17584610 3.74037027]
[-14.25661945 10.59855843]
[-7.05667591 24.34411812]
[7.80250406 26.39467239]
[22.66168404 28.44522667]
[37.52086258 30.49578094]
[52.38004303 32.54633713]
[64.50429535 23.71443558]
[67.10902405 8.94231892]
[69.71374512 -5.82979774]
[72.31846619 -20.60191345]
[74.92318726 -35.37403107]
[77.52790833 -50.14614487]
[80.13263702 -64.91826630]
[82.64522552 -79.70632935]
[85.06558990 -94.50976562]
[87.48596191 -109.31320953]
[89.90632629 -124.11664581]
[92.32669067 -138.92008972]
[94.74706268 -153.72352600]
[82.32349396 -162.52218628]
[74.98203278 -175.78829956]
[74.13194275 -190.86470032]
[79.88836670 -204.75802612]
[91.06005859 -214.73313904]
[105.39549255 -218.85147095]
[107.81586456 -233.65490723]
[102.40671539 -248.52272034]
[112.09626770 -259.83474731]
[114.51663971 -274.63818359]
[116.93700409 -289.44161987]
[119.35736847 -304.24505615]
[121.77773285 -319.04849243]
[123.82829285 -333.90768433]
[125.50775909 -348.81335449]
[127.18722534 -363.71902466]
[128.86668396 -378.62472534]
[130.54615784 -393.53039551]
[132.22563171 -408.43609619]
[133.90509033 -423.34176636]
[124.18875122 -442.46047974]
[137.22937012 -458.47528076]
[138.35031128 -473.43331909]
[139.47126770 -488.39138794]
[127.81679535 -501.45410156]
[129.20159912 -518.56604004]
[142.27952576 -529.15881348]
[143.21391296 -544.12963867]
[144.14830017 -559.10052490]
[145.08270264 -574.07141113]
[146.01708984 -589.04223633]
[146.95147705 -604.01312256]
[147.88587952 -618.98400879]
[135.04469299 -627.41015625]
[128.15130615 -641.13519287]
[129.05999756 -656.46716309]
[137.52635193 -669.28186035]
[151.27293396 -676.13220215]
[166.60198975 -675.17547607]
[179.39009094 -666.66900635]
[186.19729614 -652.90100098]
[185.19250488 -637.57501221]
[176.64599609 -624.81359863]
[162.85673523 -618.04962158]
[161.92234802 -603.07873535]
[160.98796082 -588.10784912]
[160.05355835 -573.13702393]
[159.11917114 -558.16613770]
[158.18478394 -543.19525146]
[157.25038147 -528.22442627]
[167.03489685 -519.86395264]
[170.27388000 -507.20755005]
[165.57052612 -494.81106567]
[154.42932129 -487.27041626]
[153.30838013 -472.31237793]
[152.18742371 -457.35430908]
[158.96441650 -451.68939209]
[162.44180298 -443.42074585]
[161.72908020 -434.34124756]
[156.85955811 -426.48300171]
[148.81077576 -421.66229248]
[147.13130188 -406.75662231]
[145.45184326 -391.85095215]
[143.77236938 -376.94525146]
[142.09291077 -362.03958130]
[140.41343689 -347.13388062]
[138.73397827 -332.22821045]
[140.34779358 -329.96679688]
[141.17517090 -326.93817139]
[140.92248535 -323.43438721]
[139.40567017 -319.84725952]
[136.58117676 -316.62811279]
[134.16081238 -301.82467651]
[131.74044800 -287.02124023]
[129.32008362 -272.21780396]
[126.89971161 -257.41436768]
[132.48197937 -243.60540771]
[122.61930084 -231.23454285]
[120.19893646 -216.43110657]
[132.47625732 -207.96157837]
[139.88926697 -194.94786072]
[140.92109680 -179.94465637]
[135.31364441 -165.92407227]
[124.12939453 -155.68690491]
[109.55049896 -151.30316162]
[107.13013458 -136.49972534]
[104.70976257 -121.69628143]
[102.28939819 -106.89283752]
[99.86903381 -92.08940125]
[97.44866943 -77.28596497]
[99.46566010 -70.19657135]
[94.90474701 -62.31354141]
[92.30002594 -47.54142380]
[89.69530487 -32.76930618]
[87.09058380 -17.99719048]
[84.48586273 -3.22507501]
[81.88113403 11.54704094]
[79.27641296 26.31915855]
[126.14133453 20.03660774]
[172.19053650 43.42808151]
[199.02856445 92.60394287]
[212.11143494 99.94141388]
[225.19430542 107.27889252]
[238.41209412 114.37044525]
[251.76016235 121.21360779]
[265.10824585 128.05676270]
[278.45632935 134.89993286]
[291.80438232 141.74308777]
[300.78259277 136.06567383]
[311.22561646 134.62406921]
[321.25167847 137.61067200]
[329.08190918 144.42602539]
[333.35598755 153.79762268]
[333.36810303 164.01722717]
[346.45095825 171.35470581]
[359.53384399 178.69218445]
[372.61669922 186.02966309]
[388.99890137 185.28428650]
[397.60638428 199.24291992]
[389.58447266 213.54612732]
[373.18545532 213.47996521]
[365.27923584 199.11253357]
[352.19635010 191.77505493]
[339.11349487 184.43757629]
[326.03060913 177.10009766]
[307.68463135 183.71801758]
[290.13433838 174.53067017]
[284.96124268 155.09117126]
[271.61315918 148.24800110]
[258.26507568 141.40484619]
[244.91700745 134.56169128]
[231.56892395 127.71852875]
[228.14088440 128.42991638]
[224.19938660 127.53260040]
[220.49687195 124.80376434]
[217.85682678 120.36176300]
[204.77395630 113.02428436]
[191.69108582 105.68681335]
[185.94575500 110.50772095]
[195.58738708 121.99854279]
[184.09638977 131.63998413]
[174.45509338 120.14952850]
[168.70976257 124.97043610]
[173.66394043 139.12869263]
[178.61813354 153.28694153]
[183.57231140 167.44519043]
[196.34858704 177.72619629]
[193.56607056 193.88755798]
[178.08718872 199.30384827]
[165.83528137 188.40325928]
[169.41406250 172.39936829]
[164.45988464 158.24111938]
[159.50569153 144.08287048]
[154.55151367 129.92462158]
[147.16545105 131.22698975]
[132.39332581 133.83171082]
[125.00727844 135.13406372]
[125.19426727 150.13290405]
[125.38126373 165.13174438]
[134.21786499 178.94645691]
[126.43307495 193.38006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 249]
[3 248]
[4 247]
[5 25]
[6 24]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[26 50]
[27 49]
[29 47]
[30 46]
[31 45]
[33 44]
[34 43]
[35 42]
[36 41]
[51 58]
[52 57]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[78 188]
[79 187]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
[90 175]
[96 169]
[97 168]
[99 166]
[100 165]
[101 164]
[102 163]
[103 162]
[104 157]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[112 146]
[113 145]
[114 144]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[191 228]
[192 227]
[193 226]
[194 222]
[195 221]
[196 220]
[197 219]
[198 218]
[204 215]
[205 214]
[206 213]
[207 212]
[233 244]
[234 243]
[235 242]
[236 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
