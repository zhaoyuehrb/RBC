%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGGUGGGGAGCGGCAGGCGGGCAGGGUCCCCGGAGGCCCCCGGGCUCUGCCCCUCCAGCUAGAGAGGCAGCCGAACCCUAGCGGCCUGGAAGGGGCCGGGAAACCGCGGCCAGCUGGCAAGGAGUGGCCCCCGGGGGCGGGGCGCCGGCGGGUGUGUGAGUAGCCCGCCCGGCCCGGGUCCGAGUUCCAGCCCCGCG\
) } def
/len { sequence length } bind def

/coor [
[92.78616333 457.41824341]
[85.04593658 442.96069336]
[93.92513275 429.17330933]
[94.15840912 414.17510986]
[94.39168549 399.17694092]
[94.62496185 384.17874146]
[94.85823822 369.18057251]
[94.85823822 354.18057251]
[94.62496185 339.18237305]
[94.39168549 324.18420410]
[94.15840912 309.18600464]
[93.92513275 294.18783569]
[83.08509064 284.03750610]
[82.63485718 268.83053589]
[93.35495758 257.52932739]
[93.12168121 242.53112793]
[92.88840485 227.53294373]
[81.29826355 220.89836121]
[74.44653320 209.30929565]
[74.21593475 195.73997498]
[80.77371979 183.73474121]
[92.50000000 176.48228455]
[92.50000000 161.48228455]
[92.50000000 146.48228455]
[92.50000000 131.48228455]
[92.50000000 116.48228455]
[80.70758057 103.92887115]
[84.32213593 85.62821198]
[102.59970856 77.30004120]
[97.34781647 63.24950027]
[92.09591675 49.19896317]
[86.73491669 35.18969345]
[81.26514435 21.22253036]
[75.79537201 7.25537014]
[70.32559967 -6.71179104]
[66.82451630 -9.30777645]
[64.56330872 -12.55763340]
[63.59519577 -15.98983574]
[63.81430817 -19.16420364]
[64.97981262 -21.72121811]
[60.38895798 -36.00141525]
[55.79809952 -50.28161240]
[51.20723724 -64.56180573]
[46.61637878 -78.84200287]
[42.02552032 -93.12220001]
[37.43466187 -107.40239716]
[32.84380341 -121.68259430]
[28.25294495 -135.96279907]
[19.35426903 -139.11936951]
[13.00304317 -145.91877747]
[10.53391457 -154.74664307]
[12.37977982 -163.58497620]
[18.00181198 -170.47334290]
[14.08198261 -184.95211792]
[10.16215324 -199.43089294]
[-0.91257620 -210.72961426]
[3.22995090 -225.03656006]
[-0.68987793 -239.51533508]
[-4.60970688 -253.99411011]
[-8.52953529 -268.47286987]
[-21.88160896 -281.14886475]
[-16.73397446 -297.92266846]
[-20.87850189 -312.33874512]
[-25.02302742 -326.75479126]
[-29.16755295 -341.17086792]
[-33.31208038 -355.58691406]
[-45.77296448 -360.71118164]
[-52.90138245 -371.91430664]
[-52.28262711 -384.98376465]
[-44.36663055 -395.15600586]
[-48.28645706 -409.63479614]
[-52.20628738 -424.11355591]
[-63.28101730 -435.41229248]
[-59.13848877 -449.71923828]
[-63.05831909 -464.19799805]
[-79.08031464 -468.26913452]
[-90.79736328 -479.79708862]
[-95.07937622 -495.56958008]
[-90.84951782 -511.25891113]
[-79.35311890 -522.60955811]
[-83.49764252 -537.02563477]
[-87.64217377 -551.44171143]
[-90.88613129 -554.35260010]
[-92.83468628 -557.79901123]
[-93.47877502 -561.30651855]
[-92.96482849 -564.44665527]
[-91.56613159 -566.88397217]
[-94.80639648 -581.52978516]
[-98.04666901 -596.17559814]
[-101.28693390 -610.82147217]
[-104.52719879 -625.46728516]
[-117.22652435 -635.27069092]
[-117.33572388 -651.31341553]
[-104.77103424 -661.28875732]
[-89.17101288 -657.54461670]
[-82.50265503 -642.95306396]
[-89.88136292 -628.70758057]
[-86.64109039 -614.06170654]
[-83.40082550 -599.41589355]
[-80.16056061 -584.77008057]
[-76.92028809 -570.12420654]
[-73.22610474 -555.58624268]
[-69.08158112 -541.17016602]
[-64.93705750 -526.75408936]
[-51.49127579 -524.33874512]
[-40.34530258 -516.32611084]
[-33.70868301 -504.23431396]
[-32.92721558 -490.39682007]
[-38.21042633 -477.51220703]
[-48.57954407 -468.11782837]
[-44.65971375 -453.63906860]
[-33.86535645 -443.37594604]
[-37.72751236 -428.03338623]
[-33.80768204 -413.55462646]
[-29.88785362 -399.07583618]
[-14.95899105 -391.33905029]
[-10.14672852 -374.87570190]
[-18.89601517 -359.73144531]
[-14.75148964 -345.31539917]
[-10.60696316 -330.89932251]
[-6.46243715 -316.48324585]
[-2.31791139 -302.06719971]
[8.11390781 -295.93420410]
[11.68193626 -283.95217896]
[5.94923973 -272.39270020]
[9.86906910 -257.91394043]
[13.78889751 -243.43516541]
[17.70872688 -228.95639038]
[28.50308418 -218.69328308]
[24.64092827 -203.35072327]
[28.56075859 -188.87194824]
[32.48058701 -174.39317322]
[48.32979965 -161.17916870]
[42.53314209 -140.55364990]
[47.12400055 -126.27345276]
[51.71485901 -111.99325562]
[56.30571747 -97.71305847]
[60.89657593 -83.43286133]
[65.48743439 -69.15266418]
[70.07829285 -54.87247086]
[74.66915131 -40.59227371]
[79.26000977 -26.31207848]
[84.29276276 -12.18156338]
[89.76253510 1.78559721]
[95.23230743 15.75275803]
[100.70207977 29.71991920]
[106.07229614 34.80551910]
[106.14645386 43.94706726]
[111.39835358 57.99760437]
[116.65024567 72.04814148]
[127.42051697 82.48851013]
[141.62759399 87.30089569]
[155.83467102 92.11328125]
[170.04173279 96.92566681]
[184.24880981 101.73805237]
[198.45588684 106.55043793]
[212.66296387 111.36283112]
[224.66213989 101.66626740]
[240.00129700 100.01896667]
[253.78578186 106.94656372]
[261.61700439 120.23850250]
[260.99603271 135.65336609]
[252.12104797 148.27232361]
[237.82400513 154.06872559]
[222.66705322 151.19293213]
[211.48669434 140.56263733]
[207.85057068 125.56990051]
[193.64349365 120.75751495]
[179.43643188 115.94512939]
[165.22935486 111.13274384]
[151.02227783 106.32035828]
[136.81520081 101.50796509]
[122.60813141 96.69557953]
[120.41343689 105.96954346]
[114.87778473 112.89514923]
[107.50000000 116.48228455]
[107.50000000 131.48228455]
[107.50000000 146.48228455]
[107.50000000 161.48228455]
[107.50000000 176.48228455]
[121.31604767 186.23400879]
[126.54785156 202.14047241]
[121.32263947 217.87411499]
[107.88658905 227.29966736]
[108.11986542 242.29785156]
[108.35314178 257.29605103]
[119.41951752 268.25839233]
[119.44243622 283.47201538]
[108.92331696 293.95455933]
[109.15659332 308.95272827]
[109.38986969 323.95092773]
[109.62314606 338.94909668]
[109.85642242 353.94729614]
[112.92294312 359.81781006]
[112.60649109 365.50115967]
[109.85642242 369.41384888]
[109.62314606 384.41201782]
[109.38986969 399.41021729]
[109.15659332 414.40841675]
[108.92331696 429.40658569]
[117.36943054 443.46343994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[15 186]
[16 185]
[17 184]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[29 150]
[30 149]
[31 148]
[32 146]
[33 145]
[34 144]
[35 143]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[53 132]
[54 131]
[55 130]
[57 128]
[58 127]
[59 126]
[60 125]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[70 115]
[71 114]
[72 113]
[74 111]
[75 110]
[80 104]
[81 103]
[82 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
