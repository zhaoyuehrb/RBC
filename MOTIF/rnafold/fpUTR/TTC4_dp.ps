%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TTC4)
} def

/sequence { (\
AGGAUUGAGGGAAGGGAACCCGCGCCGCCGGAAGGAGCCGCUCGCUUCACGGCGCUGGGACCCGGGCUGGAAGGCAGGGCAUCAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 87 0.011871613 ubox
2 20 0.006455556 ubox
2 21 0.008366577 ubox
2 26 0.697783334 ubox
2 29 0.010811203 ubox
2 83 0.003940266 ubox
2 86 0.010483126 ubox
2 87 0.028767147 ubox
3 19 0.006477259 ubox
3 20 0.008285468 ubox
3 25 0.697665380 ubox
3 28 0.010815740 ubox
3 83 0.017017553 ubox
3 86 0.031530790 ubox
4 82 0.016836509 ubox
5 11 0.008856065 ubox
5 12 0.059327230 ubox
5 13 0.054192379 ubox
5 14 0.007046132 ubox
5 17 0.005065931 ubox
5 18 0.006711232 ubox
5 71 0.086381473 ubox
5 72 0.024727251 ubox
5 73 0.009386628 ubox
5 74 0.004384573 ubox
5 77 0.004383407 ubox
5 81 0.014083482 ubox
5 85 0.035345637 ubox
6 10 0.010096189 ubox
6 11 0.062954687 ubox
6 12 0.061691820 ubox
6 13 0.039428066 ubox
6 16 0.005090584 ubox
6 17 0.006946865 ubox
6 22 0.293728314 ubox
6 24 0.404395179 ubox
6 30 0.003631281 ubox
6 64 0.006472717 ubox
6 69 0.003804512 ubox
6 70 0.092944885 ubox
6 71 0.027618168 ubox
6 72 0.012782716 ubox
6 73 0.005849518 ubox
6 76 0.005764124 ubox
6 81 0.008542485 ubox
6 84 0.038945246 ubox
7 21 0.320286738 ubox
7 23 0.502025020 ubox
7 26 0.006770594 ubox
7 29 0.004432983 ubox
7 63 0.004390118 ubox
7 75 0.005864340 ubox
7 80 0.011027218 ubox
7 83 0.039495416 ubox
8 68 0.095797249 ubox
8 82 0.036974349 ubox
8 87 0.006497067 ubox
9 20 0.333502506 ubox
9 21 0.654705751 ubox
9 26 0.215597124 ubox
9 62 0.003909343 ubox
9 63 0.036865534 ubox
9 67 0.095815418 ubox
9 68 0.040775357 ubox
9 86 0.005557436 ubox
9 87 0.004035543 ubox
10 19 0.333684418 ubox
10 20 0.655711134 ubox
10 21 0.051430099 ubox
10 25 0.215776707 ubox
10 26 0.105388063 ubox
10 61 0.003901392 ubox
10 62 0.036834916 ubox
10 63 0.006229751 ubox
10 67 0.043090307 ubox
10 68 0.012461586 ubox
10 86 0.003826867 ubox
10 87 0.004327677 ubox
11 19 0.654179098 ubox
11 20 0.051590715 ubox
11 25 0.105457173 ubox
11 61 0.036694331 ubox
11 62 0.004844526 ubox
11 67 0.012954139 ubox
11 83 0.006543269 ubox
11 86 0.004340415 ubox
12 82 0.006135879 ubox
14 20 0.023087484 ubox
14 21 0.223808802 ubox
14 26 0.013530788 ubox
14 62 0.024722771 ubox
14 63 0.621481169 ubox
15 19 0.023117705 ubox
15 20 0.223112367 ubox
15 21 0.085781633 ubox
15 25 0.013523881 ubox
15 26 0.015902093 ubox
15 61 0.025032402 ubox
15 62 0.622237658 ubox
15 63 0.081792589 ubox
16 20 0.084495139 ubox
16 25 0.015918809 ubox
16 61 0.621783491 ubox
16 62 0.081843988 ubox
16 83 0.004313496 ubox
17 82 0.004048802 ubox
19 58 0.461829422 ubox
19 59 0.427116610 ubox
20 57 0.461328470 ubox
20 58 0.427728575 ubox
20 59 0.029591157 ubox
21 57 0.427752891 ubox
21 58 0.029613373 ubox
22 26 0.005050739 ubox
22 38 0.010801131 ubox
22 55 0.574236162 ubox
22 56 0.251398393 ubox
22 86 0.004599644 ubox
23 37 0.010832419 ubox
23 54 0.579153203 ubox
23 57 0.016846283 ubox
23 85 0.004520790 ubox
24 38 0.003471429 ubox
24 53 0.580131066 ubox
24 55 0.235106756 ubox
24 56 0.017844880 ubox
25 35 0.011257558 ubox
25 37 0.003532254 ubox
25 52 0.580029726 ubox
25 54 0.166316595 ubox
26 34 0.011280221 ubox
26 51 0.579870579 ubox
26 54 0.191014570 ubox
27 45 0.003304406 ubox
27 50 0.574567883 ubox
27 53 0.813355546 ubox
27 86 0.004789995 ubox
28 35 0.017195051 ubox
28 44 0.003607202 ubox
28 52 0.814221576 ubox
28 85 0.004780526 ubox
29 34 0.017537865 ubox
29 40 0.006964964 ubox
29 51 0.814307916 ubox
30 39 0.007817598 ubox
30 46 0.006462520 ubox
30 47 0.005094137 ubox
30 48 0.141728910 ubox
30 50 0.811663344 ubox
30 87 0.008890156 ubox
31 38 0.007798241 ubox
31 45 0.006798001 ubox
31 46 0.003443416 ubox
31 47 0.135489214 ubox
31 48 0.976654872 ubox
31 83 0.003303467 ubox
31 86 0.009908655 ubox
32 46 0.131909837 ubox
32 47 0.978025820 ubox
32 82 0.003182569 ubox
33 42 0.006070632 ubox
33 46 0.978081704 ubox
33 47 0.012801702 ubox
34 41 0.006496377 ubox
34 42 0.006202611 ubox
34 43 0.007734848 ubox
34 45 0.977332308 ubox
34 46 0.010162653 ubox
34 48 0.147869882 ubox
34 83 0.013375204 ubox
35 41 0.008990856 ubox
35 42 0.007298971 ubox
35 43 0.982521644 ubox
35 45 0.009519367 ubox
35 47 0.150671517 ubox
35 82 0.013157910 ubox
35 83 0.007609844 ubox
36 42 0.982036325 ubox
36 46 0.152634966 ubox
36 82 0.007655333 ubox
36 87 0.003617474 ubox
37 41 0.960455766 ubox
37 45 0.153228976 ubox
37 80 0.019730709 ubox
37 86 0.003958141 ubox
38 44 0.153140023 ubox
38 79 0.019744373 ubox
38 85 0.003952930 ubox
39 78 0.019726157 ubox
40 80 0.013208419 ubox
41 77 0.019399984 ubox
41 79 0.013230154 ubox
42 76 0.019305985 ubox
42 78 0.013221270 ubox
43 77 0.013196993 ubox
44 75 0.020684600 ubox
45 73 0.012509212 ubox
45 74 0.020298667 ubox
46 72 0.013173555 ubox
46 73 0.019836344 ubox
47 71 0.013583542 ubox
47 72 0.019441712 ubox
48 70 0.013965322 ubox
50 69 0.023824190 ubox
51 68 0.023852111 ubox
52 67 0.023871188 ubox
53 66 0.023853405 ubox
54 86 0.773467092 ubox
55 65 0.024171004 ubox
55 85 0.775640106 ubox
56 64 0.024278860 ubox
56 84 0.775681141 ubox
57 63 0.024344829 ubox
57 83 0.775692629 ubox
58 62 0.023952360 ubox
58 82 0.763124626 ubox
58 83 0.011319308 ubox
59 82 0.014341332 ubox
59 83 0.006756965 ubox
60 82 0.007387416 ubox
61 78 0.027906740 ubox
61 79 0.772122894 ubox
62 77 0.027666599 ubox
62 78 0.773225042 ubox
62 79 0.068026341 ubox
63 77 0.772858220 ubox
63 78 0.068420189 ubox
64 83 0.014198589 ubox
64 87 0.033462850 ubox
65 82 0.012791398 ubox
65 86 0.026323328 ubox
65 87 0.558569287 ubox
66 75 0.777072610 ubox
66 80 0.023786243 ubox
66 86 0.611695323 ubox
67 73 0.050857473 ubox
67 74 0.777661819 ubox
67 77 0.062948122 ubox
67 78 0.003897021 ubox
67 79 0.023486480 ubox
67 85 0.612498422 ubox
68 72 0.047683264 ubox
68 73 0.757419130 ubox
68 76 0.064655377 ubox
68 77 0.003863017 ubox
68 78 0.022196129 ubox
68 84 0.611298411 ubox
69 75 0.065355900 ubox
69 80 0.003960971 ubox
69 83 0.599101868 ubox
70 82 0.520854326 ubox
70 83 0.125638523 ubox
71 82 0.172458482 ubox
72 87 0.004708131 ubox
73 83 0.004320492 ubox
73 86 0.004542420 ubox
73 87 0.053106255 ubox
74 80 0.589163179 ubox
74 82 0.004042012 ubox
74 86 0.059068270 ubox
75 79 0.585122139 ubox
75 85 0.059086522 ubox
76 87 0.010560327 ubox
77 83 0.044298470 ubox
77 86 0.011656803 ubox
77 87 0.008981087 ubox
78 82 0.028924614 ubox
78 86 0.009194138 ubox
78 87 0.107312285 ubox
79 86 0.117577444 ubox
80 85 0.117567143 ubox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
54 86 0.9500000 lbox
55 85 0.9500000 lbox
56 84 0.9500000 lbox
57 83 0.9500000 lbox
58 82 0.9500000 lbox
61 79 0.9500000 lbox
62 78 0.9500000 lbox
63 77 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
