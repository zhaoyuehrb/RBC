%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGAGCUCGCACCGCCGCGCCCGGGCCGCGAGUGAUGAUAACCUAAGAGGCCGGCGCGGGCGGGCGUGAGCGGCGGAGGAGCCGGGCGCGGCGACACGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[67.51827240 144.04405212]
[53.21248245 139.53358459]
[43.40196228 128.18661499]
[41.00567627 113.37925720]
[46.73659897 99.51720428]
[58.88958740 90.72488403]
[73.84871674 89.61831665]
[87.16436768 96.52790070]
[77.11650848 85.39055634]
[67.06864166 74.25321198]
[57.02077866 63.11587143]
[46.97291565 51.97852707]
[36.92504883 40.84118271]
[19.33102989 35.66178513]
[16.17347717 18.46817398]
[5.80299139 7.63059998]
[-4.56749487 -3.20697427]
[-14.93798161 -14.04454803]
[-25.30846786 -24.88212204]
[-35.83692932 -35.56629181]
[-46.52109909 -46.09475327]
[-57.20526886 -56.62321854]
[-67.88944244 -67.15167999]
[-78.57360840 -77.68014526]
[-85.11100769 -79.78937531]
[-88.92020416 -84.27388763]
[-89.55297852 -89.15402222]
[-99.60083771 -100.29136658]
[-109.64870453 -111.42871094]
[-119.69657135 -122.56605530]
[-133.21278381 -115.84188080]
[-148.04216003 -113.01482391]
[-163.08425903 -114.29467010]
[-177.22283936 -119.58644104]
[-189.40875244 -128.49746704]
[-198.73770142 -140.36645508]
[-204.51742554 -154.31269836]
[-206.31903076 -169.30125427]
[-204.00883484 -184.21987915]
[-197.75823975 -197.96151733]
[-188.03111267 -209.50645447]
[-175.54925537 -217.99797058]
[-161.23890686 -222.80593872]
[-146.16200256 -223.57359314]
[-131.43733215 -220.24394226]
[-118.15756226 -213.06407166]
[-107.30815125 -202.56678772]
[-99.69419861 -189.53106689]
[-95.88069916 -174.92422485]
[-96.15065002 -159.83020020]
[-100.48400879 -145.36904907]
[-108.55922699 -132.61392212]
[-98.51136017 -121.47657013]
[-88.46349335 -110.33922577]
[-78.41563416 -99.20188904]
[-68.04514313 -88.36431122]
[-57.36097717 -77.83584595]
[-46.67680740 -67.30738831]
[-35.99263763 -56.77892303]
[-25.30846786 -46.25046158]
[-18.22358322 -43.75819397]
[-14.47089386 -35.25260925]
[-4.10040712 -24.41503525]
[6.27007914 -13.57746029]
[16.64056587 -2.73988652]
[27.01105118 8.09768772]
[39.19107056 8.71015549]
[47.92175293 17.79276085]
[48.06239319 30.79331779]
[58.11026001 41.93066406]
[68.15811920 53.06800461]
[78.20598602 64.20535278]
[88.25385284 75.34269714]
[98.30171204 86.48004150]
[111.96277618 92.67481995]
[126.96115875 92.89501953]
[141.95954895 93.11521912]
[153.12168884 81.92672729]
[168.92584229 81.99164581]
[179.99568176 93.27145386]
[179.76368713 109.07403564]
[168.36747742 120.02400970]
[152.56822205 119.62494659]
[141.73934937 108.11360168]
[126.74096680 107.89340210]
[111.74257660 107.67320251]
[104.75673676 120.94716644]
[113.43038940 133.18513489]
[127.72283936 139.97015381]
[128.76971436 154.82791138]
[137.44337463 167.06588745]
[146.11701965 179.30384827]
[154.79067993 191.54180908]
[170.41043091 193.94989014]
[179.68498230 206.74670410]
[177.11189270 222.34011841]
[164.21774292 231.47885132]
[148.65238953 228.74104309]
[139.65049744 215.75099182]
[142.55271912 200.21545410]
[133.87905884 187.97749329]
[125.20540619 175.73953247]
[116.53175354 163.50157166]
[102.85970306 157.59188843]
[101.19242859 141.85877991]
[92.51877594 129.62081909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 74]
[9 73]
[10 72]
[11 71]
[12 70]
[13 69]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[27 55]
[28 54]
[29 53]
[30 52]
[75 86]
[76 85]
[77 84]
[87 106]
[88 105]
[90 103]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
