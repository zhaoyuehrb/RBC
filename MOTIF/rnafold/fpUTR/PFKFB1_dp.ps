%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PFKFB1)
} def

/sequence { (\
GACAGCUAGUAAGAUAGGAAGUGAGGCCAGGUACCUUGUGGGCAGUGAUGUCAUUCGGUGCGACUCCUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.008773742 ubox
1 66 0.006916223 ubox
2 10 0.207367723 ubox
2 22 0.344439022 ubox
2 32 0.004031676 ubox
2 39 0.007777883 ubox
2 51 0.008780442 ubox
2 65 0.006205564 ubox
3 9 0.213654173 ubox
3 21 0.351829015 ubox
3 23 0.081412262 ubox
3 31 0.004155473 ubox
3 38 0.008000397 ubox
3 40 0.003687397 ubox
3 50 0.008777880 ubox
4 22 0.070589055 ubox
4 37 0.007529974 ubox
4 39 0.003488546 ubox
4 49 0.008352607 ubox
4 65 0.005039278 ubox
4 68 0.012084060 ubox
5 22 0.082300720 ubox
5 27 0.024171968 ubox
5 32 0.003751457 ubox
5 36 0.006579215 ubox
5 46 0.007896232 ubox
5 64 0.005401373 ubox
5 67 0.012482493 ubox
6 13 0.170731037 ubox
6 17 0.683491857 ubox
6 18 0.154820922 ubox
6 21 0.093134469 ubox
6 26 0.024196324 ubox
6 30 0.014983161 ubox
6 31 0.003797974 ubox
6 41 0.009227504 ubox
6 45 0.008122780 ubox
6 71 0.028458095 ubox
7 12 0.163291830 ubox
7 16 0.687880194 ubox
7 17 0.140807570 ubox
7 20 0.090185392 ubox
7 23 0.008607659 ubox
7 25 0.023554536 ubox
7 29 0.014767437 ubox
7 30 0.003643237 ubox
7 40 0.009248696 ubox
7 44 0.008066818 ubox
7 69 0.019998340 ubox
7 70 0.028655277 ubox
8 15 0.681434382 ubox
8 22 0.009284519 ubox
8 39 0.009123494 ubox
8 65 0.011761618 ubox
8 68 0.020944996 ubox
9 15 0.083941995 ubox
9 22 0.003239932 ubox
9 27 0.015982883 ubox
9 34 0.008296133 ubox
9 43 0.008184396 ubox
9 64 0.012538017 ubox
9 67 0.020811986 ubox
10 14 0.082320368 ubox
10 16 0.039231330 ubox
10 21 0.003307789 ubox
10 23 0.013030414 ubox
10 26 0.015894601 ubox
10 33 0.008368461 ubox
10 38 0.008673417 ubox
10 42 0.008112370 ubox
10 63 0.012172472 ubox
10 69 0.005955035 ubox
11 15 0.035848080 ubox
11 22 0.012405977 ubox
11 32 0.008214815 ubox
11 37 0.009366859 ubox
11 68 0.004599552 ubox
12 36 0.009383534 ubox
12 65 0.006206779 ubox
12 68 0.009879191 ubox
13 35 0.009345079 ubox
13 64 0.006400563 ubox
13 66 0.005963098 ubox
13 67 0.010113053 ubox
14 22 0.027813622 ubox
14 32 0.005977006 ubox
14 39 0.007831469 ubox
14 65 0.005595770 ubox
15 21 0.027820562 ubox
15 23 0.013000107 ubox
15 31 0.006320154 ubox
15 33 0.006883795 ubox
15 38 0.007960716 ubox
15 69 0.542137937 ubox
16 22 0.015571226 ubox
16 32 0.006952607 ubox
16 36 0.009252727 ubox
16 37 0.007430297 ubox
16 68 0.573922191 ubox
17 28 0.043264451 ubox
17 35 0.010070272 ubox
17 36 0.006844371 ubox
17 67 0.577296617 ubox
17 68 0.024403250 ubox
18 27 0.043367175 ubox
18 34 0.010068261 ubox
18 35 0.006793680 ubox
18 56 0.003694814 ubox
18 66 0.575922249 ubox
18 67 0.027139351 ubox
19 37 0.003606845 ubox
19 65 0.446929439 ubox
20 36 0.004921735 ubox
20 55 0.009023984 ubox
20 65 0.346997687 ubox
20 68 0.476711547 ubox
21 27 0.057518323 ubox
21 32 0.003220114 ubox
21 34 0.015325052 ubox
21 35 0.004363164 ubox
21 39 0.031312565 ubox
21 54 0.010410105 ubox
21 61 0.007672311 ubox
21 64 0.491047614 ubox
21 67 0.494044117 ubox
22 26 0.053974832 ubox
22 29 0.107201002 ubox
22 31 0.005334572 ubox
22 33 0.016524498 ubox
22 38 0.090552792 ubox
22 40 0.006710067 ubox
22 53 0.010793183 ubox
22 60 0.007244546 ubox
22 62 0.050942591 ubox
22 63 0.463972124 ubox
22 69 0.064669902 ubox
23 28 0.159115568 ubox
23 32 0.017457754 ubox
23 37 0.329596060 ubox
23 39 0.005929119 ubox
23 52 0.010908493 ubox
23 61 0.040049261 ubox
23 66 0.536184812 ubox
23 68 0.045129901 ubox
24 36 0.345027177 ubox
24 37 0.019919291 ubox
24 51 0.010852153 ubox
24 65 0.539175879 ubox
24 68 0.589994348 ubox
25 35 0.347009776 ubox
25 36 0.020102853 ubox
25 64 0.543139506 ubox
25 65 0.036121626 ubox
25 66 0.017756311 ubox
25 67 0.609917375 ubox
25 68 0.021910374 ubox
26 32 0.056751225 ubox
26 34 0.346104437 ubox
26 35 0.020258517 ubox
26 39 0.046420374 ubox
26 43 0.007001245 ubox
26 59 0.140683301 ubox
26 61 0.061976370 ubox
26 64 0.057411453 ubox
26 65 0.016909671 ubox
26 66 0.608948754 ubox
26 67 0.022590219 ubox
27 31 0.062253071 ubox
27 38 0.045108519 ubox
27 41 0.204152096 ubox
27 42 0.007150434 ubox
27 58 0.141133251 ubox
27 60 0.061241608 ubox
28 38 0.082041921 ubox
28 40 0.204408269 ubox
28 41 0.007809029 ubox
28 47 0.010699376 ubox
28 57 0.140652005 ubox
28 60 0.007408830 ubox
29 36 0.056624381 ubox
29 37 0.087913733 ubox
29 39 0.196650736 ubox
29 46 0.011729216 ubox
29 55 0.016838950 ubox
29 59 0.006330735 ubox
29 65 0.071974374 ubox
29 68 0.013401595 ubox
30 35 0.063386982 ubox
30 36 0.099582645 ubox
30 37 0.032297544 ubox
30 52 0.003271048 ubox
30 54 0.012228024 ubox
30 55 0.064195871 ubox
30 56 0.070639281 ubox
30 64 0.078688085 ubox
30 65 0.018376502 ubox
30 67 0.014083783 ubox
31 35 0.098778598 ubox
31 36 0.032772867 ubox
31 43 0.046442906 ubox
31 54 0.064465857 ubox
31 55 0.064596915 ubox
31 61 0.874148295 ubox
31 64 0.018983817 ubox
31 66 0.013104190 ubox
32 38 0.015487822 ubox
32 40 0.029803735 ubox
32 42 0.043828587 ubox
32 53 0.063495054 ubox
32 60 0.874990191 ubox
32 63 0.018182197 ubox
33 37 0.014230950 ubox
33 39 0.033958127 ubox
33 46 0.003341238 ubox
33 51 0.014376950 ubox
33 59 0.877125203 ubox
34 38 0.034530120 ubox
34 41 0.208082383 ubox
34 42 0.027636809 ubox
34 50 0.014318687 ubox
34 58 0.877448845 ubox
35 40 0.210270649 ubox
35 41 0.030002499 ubox
35 45 0.003370360 ubox
35 57 0.875445116 ubox
35 58 0.011138815 ubox
35 71 0.009529019 ubox
36 40 0.027169269 ubox
36 41 0.003194085 ubox
36 45 0.006465214 ubox
36 48 0.010453145 ubox
36 57 0.014890645 ubox
36 70 0.009778338 ubox
37 44 0.008348740 ubox
37 47 0.010265449 ubox
37 50 0.005790452 ubox
37 53 0.024785512 ubox
37 57 0.010722027 ubox
37 69 0.009876496 ubox
38 43 0.008852754 ubox
38 46 0.007399005 ubox
38 49 0.008323055 ubox
38 52 0.021654309 ubox
38 54 0.720946150 ubox
38 56 0.071445001 ubox
38 61 0.003930139 ubox
38 64 0.113364021 ubox
38 68 0.009542897 ubox
39 45 0.006288656 ubox
39 48 0.008458814 ubox
39 53 0.726045076 ubox
39 60 0.003724246 ubox
39 62 0.012360442 ubox
39 63 0.112261913 ubox
39 69 0.006733479 ubox
40 52 0.597435580 ubox
40 55 0.006570578 ubox
40 56 0.014140903 ubox
40 59 0.003182429 ubox
40 61 0.012259761 ubox
40 65 0.008213588 ubox
40 66 0.004376857 ubox
40 67 0.015805194 ubox
40 68 0.007337259 ubox
41 51 0.426324183 ubox
41 52 0.650268749 ubox
41 55 0.006646351 ubox
41 56 0.004524471 ubox
41 64 0.012682052 ubox
41 65 0.004160244 ubox
41 66 0.015815094 ubox
41 67 0.007413169 ubox
42 51 0.773592192 ubox
42 55 0.003442007 ubox
42 59 0.011875708 ubox
42 61 0.456824916 ubox
42 66 0.006370791 ubox
43 50 0.879180798 ubox
43 58 0.011869568 ubox
43 60 0.457350937 ubox
44 49 0.848527311 ubox
44 55 0.048084611 ubox
44 59 0.457115736 ubox
44 65 0.005294423 ubox
45 54 0.058979625 ubox
45 64 0.005339546 ubox
46 53 0.059875502 ubox
46 57 0.454526231 ubox
46 63 0.005132022 ubox
47 52 0.060016212 ubox
47 55 0.003765226 ubox
47 56 0.458551081 ubox
48 54 0.014917892 ubox
48 55 0.452034955 ubox
49 53 0.018414883 ubox
50 56 0.005853762 ubox
50 61 0.003814795 ubox
52 57 0.003248711 ubox
52 60 0.003364111 ubox
53 59 0.003506567 ubox
54 58 0.003257564 ubox
55 63 0.010862949 ubox
56 62 0.013955769 ubox
57 61 0.013112509 ubox
57 67 0.006770003 ubox
58 66 0.006770753 ubox
64 71 0.008040430 ubox
65 70 0.007571272 ubox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
24 68 0.9500000 lbox
25 67 0.9500000 lbox
26 66 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
