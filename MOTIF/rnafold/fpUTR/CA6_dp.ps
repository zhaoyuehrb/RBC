%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CA6)
} def

/sequence { (\
CUUUAAAAGAAGAGCUUCGCCGGAAUCAGUCUUCAUUACAGAUGUGCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.069642641 ubox
1 12 0.326376913 ubox
1 14 0.027005986 ubox
1 23 0.004518413 ubox
1 41 0.364534718 ubox
1 49 0.018968838 ubox
2 8 0.072936600 ubox
2 9 0.009356620 ubox
2 10 0.020484576 ubox
2 11 0.328054125 ubox
2 12 0.019023833 ubox
2 13 0.044058463 ubox
2 22 0.004378960 ubox
2 24 0.004488945 ubox
2 25 0.011789601 ubox
2 40 0.357488678 ubox
2 41 0.065978485 ubox
2 42 0.112458104 ubox
2 48 0.018252970 ubox
2 49 0.005088534 ubox
3 7 0.061507435 ubox
3 8 0.016674928 ubox
3 9 0.022539260 ubox
3 10 0.325408499 ubox
3 11 0.022624811 ubox
3 12 0.045530025 ubox
3 13 0.012460213 ubox
3 23 0.004697520 ubox
3 24 0.013619664 ubox
3 40 0.072752879 ubox
3 41 0.120261389 ubox
3 42 0.040352761 ubox
3 48 0.005574288 ubox
3 49 0.005283122 ubox
4 8 0.020521256 ubox
4 9 0.310045113 ubox
4 10 0.022854704 ubox
4 11 0.042186531 ubox
4 12 0.012915146 ubox
4 13 0.006374017 ubox
4 22 0.004282139 ubox
4 23 0.013674540 ubox
4 38 0.358614303 ubox
4 40 0.110587673 ubox
4 41 0.042100505 ubox
4 44 0.006158430 ubox
4 46 0.009496334 ubox
4 48 0.005764252 ubox
5 37 0.357717527 ubox
5 43 0.007125315 ubox
5 45 0.009544394 ubox
6 36 0.329810401 ubox
6 37 0.281349562 ubox
7 17 0.010215384 ubox
7 33 0.051767153 ubox
7 36 0.297107317 ubox
7 37 0.181124590 ubox
8 16 0.011522513 ubox
8 32 0.057766468 ubox
8 36 0.193200856 ubox
8 37 0.022041943 ubox
9 15 0.011729378 ubox
9 18 0.025519735 ubox
9 27 0.007368383 ubox
9 31 0.058381730 ubox
9 33 0.006801348 ubox
9 34 0.903879354 ubox
9 36 0.004514327 ubox
9 37 0.004402942 ubox
10 17 0.025265658 ubox
10 26 0.007316179 ubox
10 30 0.057715570 ubox
10 32 0.005258408 ubox
10 33 0.905177402 ubox
10 36 0.004289099 ubox
11 16 0.021993573 ubox
11 32 0.905313238 ubox
11 33 0.004634424 ubox
12 18 0.005533824 ubox
12 27 0.038419905 ubox
12 31 0.905716673 ubox
12 32 0.004879112 ubox
12 33 0.011100052 ubox
12 34 0.008476335 ubox
13 17 0.004836398 ubox
13 26 0.037743567 ubox
13 30 0.870646272 ubox
13 32 0.013538246 ubox
13 33 0.007658415 ubox
14 20 0.036133861 ubox
14 30 0.238082357 ubox
14 31 0.014147119 ubox
14 45 0.010440497 ubox
14 47 0.018627791 ubox
14 50 0.410666593 ubox
15 19 0.035897494 ubox
15 23 0.012985965 ubox
15 29 0.454558538 ubox
15 41 0.003479691 ubox
15 44 0.011060041 ubox
15 46 0.018594983 ubox
15 49 0.411146440 ubox
16 22 0.012544228 ubox
16 23 0.006158610 ubox
16 24 0.053533649 ubox
16 25 0.755890207 ubox
16 28 0.396394654 ubox
16 29 0.009945443 ubox
16 40 0.003364336 ubox
16 48 0.400501738 ubox
16 49 0.005208206 ubox
17 22 0.006874946 ubox
17 23 0.058986024 ubox
17 24 0.889920843 ubox
17 28 0.009352396 ubox
17 42 0.020838764 ubox
17 48 0.024958018 ubox
18 22 0.057844125 ubox
18 23 0.892887988 ubox
18 41 0.021206967 ubox
18 44 0.005438078 ubox
18 46 0.388918468 ubox
19 30 0.008193221 ubox
19 43 0.004108893 ubox
19 45 0.389907865 ubox
19 47 0.126389617 ubox
19 50 0.028980573 ubox
20 29 0.010300671 ubox
20 44 0.387816019 ubox
20 46 0.125112230 ubox
20 49 0.028959785 ubox
21 44 0.080868951 ubox
21 46 0.023173790 ubox
22 31 0.016772980 ubox
22 32 0.057530965 ubox
22 33 0.003733999 ubox
22 34 0.023509206 ubox
22 37 0.003473656 ubox
22 43 0.070118640 ubox
22 45 0.027804953 ubox
22 53 0.008699128 ubox
23 30 0.013709213 ubox
23 31 0.060733693 ubox
23 32 0.003496452 ubox
23 33 0.023370647 ubox
23 34 0.091021965 ubox
23 37 0.007778301 ubox
23 52 0.008737169 ubox
24 30 0.058263953 ubox
24 32 0.022707821 ubox
24 33 0.090896165 ubox
24 36 0.007261876 ubox
24 37 0.037169046 ubox
25 32 0.080625948 ubox
25 36 0.037913613 ubox
25 43 0.281327661 ubox
25 45 0.017664439 ubox
26 35 0.037478989 ubox
26 42 0.287679754 ubox
26 44 0.015541797 ubox
27 41 0.287060506 ubox
27 44 0.019794862 ubox
27 46 0.016198828 ubox
28 37 0.060626046 ubox
28 43 0.019402595 ubox
28 45 0.015322668 ubox
29 36 0.064923381 ubox
29 39 0.246251185 ubox
29 43 0.245997849 ubox
29 47 0.017039626 ubox
29 50 0.027441352 ubox
29 52 0.039622959 ubox
30 35 0.061294723 ubox
30 38 0.236997570 ubox
30 42 0.250096913 ubox
30 46 0.016671340 ubox
30 49 0.016189145 ubox
30 51 0.039607678 ubox
31 41 0.250290970 ubox
31 49 0.047011703 ubox
32 40 0.240855445 ubox
32 41 0.004063481 ubox
32 42 0.003750159 ubox
32 48 0.046254524 ubox
32 49 0.007326377 ubox
33 40 0.018821659 ubox
33 41 0.003593749 ubox
33 42 0.047449182 ubox
33 48 0.008714602 ubox
34 41 0.050302664 ubox
34 44 0.040523974 ubox
34 46 0.049953913 ubox
35 43 0.067476342 ubox
35 45 0.058478050 ubox
36 42 0.069653509 ubox
36 44 0.058380749 ubox
36 49 0.052339744 ubox
37 41 0.063359251 ubox
37 44 0.016784160 ubox
37 46 0.272707810 ubox
37 48 0.063379029 ubox
38 43 0.018219207 ubox
38 45 0.308111043 ubox
39 44 0.311166182 ubox
39 46 0.203324037 ubox
40 45 0.195776607 ubox
43 51 0.244532142 ubox
44 50 0.281147223 ubox
44 52 0.484215987 ubox
45 49 0.263068944 ubox
45 51 0.485829538 ubox
46 50 0.478809111 ubox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
