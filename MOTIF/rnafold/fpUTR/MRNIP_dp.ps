%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRNIP)
} def

/sequence { (\
GCAGAGCGCACGCGCUUGGCUGCCUGGCGACUGCACAAGCAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.047628801 ubox
1 9 0.094987476 ubox
1 13 0.013928793 ubox
1 15 0.011465383 ubox
1 20 0.676749489 ubox
1 23 0.245504537 ubox
1 28 0.392410584 ubox
1 34 0.214501238 ubox
1 40 0.048350906 ubox
2 6 0.047404645 ubox
2 8 0.094998584 ubox
2 12 0.014068607 ubox
2 14 0.011476171 ubox
2 18 0.243813249 ubox
2 19 0.733105557 ubox
2 22 0.247277652 ubox
2 26 0.142596185 ubox
2 27 0.380380848 ubox
2 33 0.214661911 ubox
2 39 0.048315786 ubox
3 16 0.028914869 ubox
3 17 0.208005932 ubox
3 21 0.246922701 ubox
3 25 0.172127738 ubox
3 32 0.214266965 ubox
4 15 0.034315990 ubox
4 16 0.128174853 ubox
4 17 0.714596565 ubox
4 20 0.233560801 ubox
4 24 0.174063207 ubox
4 31 0.213427662 ubox
5 16 0.855715712 ubox
5 17 0.018648748 ubox
5 21 0.028196178 ubox
5 25 0.361000696 ubox
5 32 0.012355632 ubox
6 13 0.048364859 ubox
6 15 0.868505284 ubox
6 16 0.007359095 ubox
6 20 0.030251131 ubox
6 23 0.153067283 ubox
6 24 0.365377184 ubox
6 28 0.153438079 ubox
6 31 0.016200333 ubox
6 34 0.008793628 ubox
6 40 0.024809529 ubox
7 12 0.048539825 ubox
7 14 0.868486514 ubox
7 18 0.008885369 ubox
7 19 0.030321079 ubox
7 22 0.153033912 ubox
7 26 0.008470393 ubox
7 27 0.153223603 ubox
7 29 0.178722048 ubox
7 33 0.008788008 ubox
7 39 0.024822019 ubox
8 13 0.846002046 ubox
8 15 0.042630912 ubox
8 17 0.005165983 ubox
8 20 0.111382588 ubox
8 21 0.099892849 ubox
8 23 0.392583097 ubox
8 28 0.180607802 ubox
8 32 0.007978231 ubox
8 34 0.065053939 ubox
9 14 0.042658939 ubox
9 18 0.027921305 ubox
9 19 0.113324157 ubox
9 22 0.392695983 ubox
9 26 0.116210312 ubox
9 27 0.178662528 ubox
9 33 0.065130357 ubox
10 17 0.027098933 ubox
10 21 0.390356849 ubox
10 25 0.118379786 ubox
10 32 0.064234116 ubox
11 18 0.111626547 ubox
11 22 0.009314605 ubox
11 26 0.163706279 ubox
11 29 0.020601755 ubox
12 17 0.076028744 ubox
12 20 0.402941066 ubox
12 21 0.004561836 ubox
12 23 0.129045693 ubox
12 25 0.160368035 ubox
12 28 0.020943126 ubox
13 19 0.403005223 ubox
13 22 0.129187328 ubox
13 27 0.020891304 ubox
13 29 0.124309169 ubox
14 20 0.094721814 ubox
14 21 0.069541201 ubox
14 23 0.171287481 ubox
14 28 0.126621576 ubox
14 40 0.022575676 ubox
15 19 0.096130100 ubox
15 22 0.171315833 ubox
15 27 0.126621606 ubox
15 39 0.022599960 ubox
16 26 0.119553936 ubox
16 38 0.022591589 ubox
17 26 0.006517326 ubox
17 29 0.003769882 ubox
17 37 0.022594410 ubox
17 43 0.004268558 ubox
18 24 0.125764794 ubox
18 25 0.009326581 ubox
18 28 0.004538592 ubox
18 36 0.022568026 ubox
19 23 0.123807656 ubox
19 24 0.010494349 ubox
19 28 0.091862995 ubox
19 34 0.022115782 ubox
19 40 0.009912187 ubox
20 27 0.092051872 ubox
20 33 0.022120634 ubox
20 39 0.010009891 ubox
20 42 0.474629877 ubox
20 43 0.025293325 ubox
20 44 0.003630329 ubox
21 26 0.086277187 ubox
21 29 0.241869387 ubox
21 35 0.006296272 ubox
21 38 0.009878814 ubox
21 41 0.643850302 ubox
21 42 0.017144847 ubox
21 43 0.006452423 ubox
22 28 0.298208929 ubox
22 34 0.007032023 ubox
22 40 0.668337625 ubox
23 27 0.296151233 ubox
23 33 0.007015328 ubox
23 39 0.667104642 ubox
23 43 0.275751338 ubox
23 44 0.092013899 ubox
24 39 0.031609144 ubox
24 42 0.277171565 ubox
24 43 0.095180393 ubox
24 44 0.018374279 ubox
25 35 0.023657559 ubox
25 37 0.653478424 ubox
25 38 0.032687024 ubox
25 41 0.273668056 ubox
25 42 0.081898841 ubox
25 43 0.018668531 ubox
26 32 0.003858380 ubox
26 34 0.021562881 ubox
26 36 0.659808231 ubox
26 40 0.236662644 ubox
27 31 0.004566437 ubox
27 34 0.676115295 ubox
27 40 0.166415966 ubox
28 33 0.675714809 ubox
28 39 0.215178394 ubox
31 39 0.056560313 ubox
31 42 0.642467478 ubox
31 43 0.034052023 ubox
31 44 0.004972302 ubox
32 38 0.057395375 ubox
32 41 0.645040923 ubox
32 42 0.016942998 ubox
32 43 0.003519031 ubox
33 40 0.645831029 ubox
34 39 0.644923420 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
showpage
end
%%EOF
