%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAGCGAGGCGGAGCCGGCGCCCGGAGGAGCAAGAGGAGGAGGAGGAGGAGAGGUCGGAGCCGUCUCCAGGAGCCCUUAGAGACCGAGUCCCGGCGGCGACGGCGGGGCAGCGCACCGGCAGGCGGAUUCAUUCCACUUAAAACCUGAAAACAUUGGACCACACAAAGUCUUACUGAUUUCAGGUAAAAACAAUAAUUGAAG\
) } def
/len { sequence length } bind def

/coor [
[99.49023438 146.98072815]
[92.78704071 150.34483337]
[88.94158936 164.84353638]
[85.20681000 179.37115479]
[81.58291626 193.92681885]
[88.58483887 208.36123657]
[81.53546906 222.77255249]
[65.84246826 226.10562134]
[53.54417419 215.80360413]
[54.07477951 199.76933289]
[67.02725220 190.30291748]
[70.65114594 175.74725342]
[69.21607208 168.49423218]
[74.44287872 160.99809265]
[78.28833008 146.49938965]
[70.07415009 110.73942566]
[88.92369843 94.71968842]
[76.24898529 86.69773865]
[63.57426834 78.67579651]
[50.89955139 70.65385437]
[38.22483826 62.63190842]
[22.42607307 61.78950119]
[15.80964947 48.44512939]
[3.13493419 40.42318726]
[-20.20108986 43.67107773]
[-34.23746872 25.51032829]
[-48.98698807 22.78054428]
[-63.73650360 20.05076027]
[-78.59543610 17.99840736]
[-93.53268433 16.62778282]
[-108.46993256 15.25715637]
[-117.30564117 17.58995438]
[-123.62392426 13.75003242]
[-138.53854370 12.15177536]
[-147.63679504 24.44685364]
[-161.57560730 30.49715042]
[-176.57168579 28.76964378]
[-188.60906982 19.82775497]
[-194.51466370 6.15334320]
[-209.42927551 4.55508566]
[-224.34388733 2.95682836]
[-239.25849915 1.35857093]
[-254.17309570 -0.23968662]
[-268.71911621 5.98315239]
[-280.54953003 -3.06619906]
[-295.46414185 -4.66445637]
[-303.11300659 7.04953718]
[-315.00640869 14.28987694]
[-328.79306030 15.69192123]
[-341.77593994 11.03871346]
[-351.43997192 1.29226398]
[-355.93917847 -11.60470963]
[-370.82766724 -13.43022728]
[-385.70236206 -6.52546644]
[-398.96200562 -16.17503548]
[-396.96621704 -32.45228577]
[-381.76809692 -38.61257553]
[-369.00216675 -28.31872940]
[-354.11364746 -26.49321175]
[-344.71115112 -39.63271332]
[-329.88037109 -46.27685165]
[-313.62945557 -44.52627182]
[-300.40286255 -34.76451874]
[-293.86587524 -19.57906532]
[-278.95126343 -17.98080826]
[-265.47204590 -24.31796455]
[-252.57484436 -15.15429592]
[-237.66023254 -13.55603886]
[-222.74562073 -11.95778084]
[-207.83100891 -10.35952377]
[-192.91641235 -8.76126575]
[-184.24746704 -20.87386131]
[-170.58871460 -27.06213951]
[-155.56710815 -25.57293701]
[-143.22677612 -16.70655060]
[-136.94027710 -2.76283431]
[-122.02567291 -1.16457689]
[-107.09930420 0.31990805]
[-92.16205597 1.69053400]
[-77.22480774 3.06116009]
[-85.93881989 -9.14810085]
[-83.60671234 -23.96570015]
[-71.56369781 -32.90806580]
[-56.70481491 -30.85538673]
[-47.53726959 -18.98289299]
[-49.30979156 -4.08798933]
[-61.00672150 5.30124283]
[-46.25720215 8.03102684]
[-31.50768471 10.76081085]
[-26.76493645 4.98880911]
[-20.39830017 1.08041048]
[-21.08432961 -13.90389347]
[-21.77036095 -28.88819695]
[-22.45639229 -43.87250137]
[-23.14242363 -58.85680389]
[-23.82845306 -73.84111023]
[-32.18881226 -87.27297211]
[-25.04169655 -100.34079742]
[-25.72772789 -115.32509613]
[-35.01917648 -128.83808899]
[-27.71901703 -143.52276611]
[-11.33702946 -144.27279663]
[-2.72559738 -130.31660461]
[-10.74342346 -116.01113129]
[-10.05739307 -101.02682495]
[-1.74610209 -88.66674042]
[-8.84414959 -74.52713776]
[-8.15811920 -59.54283524]
[-7.47208786 -44.55853271]
[-6.78605700 -29.57422829]
[-6.10002613 -14.58992386]
[-5.41399527 0.39437965]
[2.33478975 4.12227631]
[8.22021484 10.54773808]
[11.33626366 18.80759430]
[11.15687847 27.74847031]
[23.83159447 35.77041626]
[38.72377777 36.03903961]
[46.24678040 49.95719528]
[58.92149734 57.97913742]
[71.59621429 66.00108337]
[84.27092743 74.02302551]
[96.94564056 82.04496765]
[111.92994690 81.35894012]
[123.81863403 72.21240234]
[135.70732117 63.06586456]
[141.92707825 48.51852417]
[156.73240662 46.89024734]
[168.62109375 37.74370956]
[180.50978088 28.59716988]
[184.00106812 12.93861103]
[198.48278809 6.03503990]
[212.84580994 13.18228722]
[216.07205200 28.89759636]
[205.68661499 41.12552643]
[189.65632629 40.48585510]
[177.76763916 49.63239288]
[165.87895203 58.77893066]
[160.50955200 72.67205048]
[144.85385132 74.95455170]
[132.96516418 84.10108948]
[121.07648468 93.24762726]
[122.10266113 100.67709351]
[135.99716187 106.32888031]
[124.15501404 115.53602600]
[125.18119049 122.96549225]
[139.10412598 128.54685974]
[153.02706909 134.12823486]
[166.95001221 139.70960999]
[180.87295532 145.29096985]
[194.79589844 150.87234497]
[208.71884155 156.45372009]
[222.64178467 162.03509521]
[238.33003235 159.98828125]
[247.26445007 171.90573120]
[261.18737793 177.48709106]
[277.14071655 170.31463623]
[293.03338623 176.77030945]
[299.21728516 192.40803528]
[313.22369385 197.77644348]
[327.23013306 203.14483643]
[341.23657227 208.51324463]
[354.17211914 199.94284058]
[369.67324829 200.64617920]
[381.77944946 210.35281372]
[385.83569336 225.33035278]
[380.28225708 239.81961060]
[367.25451660 248.24919128]
[351.76193237 247.37773132]
[339.76171875 237.54032898]
[335.86819458 222.51966858]
[321.86175537 217.15127563]
[307.85531616 211.78288269]
[293.84887695 206.41447449]
[282.92791748 213.25708008]
[269.86495972 212.54843140]
[259.44271851 204.32351685]
[255.60601807 191.41003418]
[241.68307495 185.82867432]
[226.99069214 188.27468872]
[217.06040955 175.95803833]
[203.13746643 170.37666321]
[189.21452332 164.79528809]
[175.29158020 159.21391296]
[161.36863708 153.63253784]
[147.44569397 148.05117798]
[133.52276611 142.46980286]
[119.59981537 136.88842773]
[112.89662170 140.25253296]
[122.43930054 151.82565308]
[131.98197937 163.39878845]
[141.52465820 174.97190857]
[151.06733704 186.54504395]
[164.20617676 193.78179932]
[172.48245239 206.29193115]
[174.00349426 221.21461487]
[168.42150879 235.13731384]
[157.01295471 244.87614441]
[142.38677979 248.20405579]
[127.88771057 244.36000061]
[116.83139801 234.22303772]
[111.74621582 220.11131287]
[113.79564667 205.25041199]
[110.21929932 190.68298340]
[106.64294434 176.11557007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 12]
[5 11]
[17 123]
[18 122]
[19 121]
[20 120]
[21 119]
[23 117]
[24 116]
[26 89]
[27 88]
[28 87]
[29 80]
[30 79]
[31 78]
[33 77]
[34 76]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[45 65]
[46 64]
[52 59]
[53 58]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[98 105]
[99 104]
[124 142]
[125 141]
[126 140]
[128 138]
[129 137]
[130 136]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[155 179]
[156 178]
[159 174]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
