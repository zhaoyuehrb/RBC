%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LYPLAL1)
} def

/sequence { (\
GUGCGCGGCCCCGCGCGGCAACGCAGGGGCGGAACCGCAUGACUGGCAGUGGCAUCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.011879708 ubox
1 35 0.106800807 ubox
1 38 0.093748470 ubox
1 40 0.857760664 ubox
1 43 0.029727784 ubox
1 47 0.008591873 ubox
1 53 0.041163342 ubox
1 55 0.124091059 ubox
1 59 0.027671901 ubox
2 17 0.014797457 ubox
2 18 0.008421649 ubox
2 25 0.011856276 ubox
2 34 0.106519258 ubox
2 37 0.093727506 ubox
2 39 0.908022660 ubox
2 41 0.014891206 ubox
2 42 0.026654231 ubox
2 46 0.007424799 ubox
2 48 0.022189160 ubox
2 52 0.038883362 ubox
2 54 0.137932897 ubox
2 57 0.007459489 ubox
2 58 0.023125611 ubox
2 60 0.062066683 ubox
3 16 0.022479594 ubox
3 24 0.013173750 ubox
3 36 0.093359337 ubox
3 38 0.924356709 ubox
3 40 0.028768845 ubox
3 47 0.024641774 ubox
3 50 0.004370001 ubox
3 53 0.142406177 ubox
3 56 0.008526320 ubox
3 59 0.105905410 ubox
4 15 0.022518244 ubox
4 23 0.013177972 ubox
4 31 0.017662159 ubox
4 37 0.924361996 ubox
4 41 0.008117637 ubox
4 46 0.024586332 ubox
4 49 0.004535072 ubox
4 51 0.107894340 ubox
4 52 0.115822407 ubox
4 58 0.105816506 ubox
4 60 0.176982000 ubox
5 14 0.023024466 ubox
5 22 0.013171149 ubox
5 30 0.011254786 ubox
5 36 0.918791512 ubox
5 38 0.124538471 ubox
5 47 0.003704210 ubox
5 50 0.136041147 ubox
5 53 0.016065431 ubox
5 59 0.191231288 ubox
6 13 0.023025000 ubox
6 29 0.009373663 ubox
6 31 0.263604728 ubox
6 37 0.124768583 ubox
6 45 0.009169496 ubox
6 46 0.003559654 ubox
6 49 0.139254113 ubox
6 51 0.027812504 ubox
6 52 0.015397730 ubox
6 58 0.191000635 ubox
6 60 0.011234071 ubox
7 12 0.022708067 ubox
7 30 0.195082548 ubox
7 36 0.124999035 ubox
7 44 0.009154238 ubox
7 50 0.020470492 ubox
7 56 0.052503063 ubox
7 59 0.011916633 ubox
8 19 0.013186892 ubox
8 30 0.963837968 ubox
8 35 0.096007772 ubox
8 43 0.008652217 ubox
8 47 0.147987726 ubox
8 50 0.004934803 ubox
8 53 0.005184800 ubox
9 18 0.013178331 ubox
9 28 0.077574207 ubox
9 29 0.983391982 ubox
9 32 0.009844582 ubox
9 46 0.148443379 ubox
9 49 0.004905238 ubox
9 52 0.005077477 ubox
10 17 0.013147018 ubox
10 27 0.077451524 ubox
10 28 0.983445198 ubox
10 29 0.012816865 ubox
10 31 0.008589902 ubox
10 45 0.148255016 ubox
10 46 0.005355054 ubox
10 51 0.004974330 ubox
11 26 0.077278417 ubox
11 27 0.983440955 ubox
11 28 0.017221365 ubox
11 29 0.007082992 ubox
11 32 0.060483540 ubox
11 45 0.006303108 ubox
11 46 0.003519367 ubox
12 26 0.983227227 ubox
12 27 0.018532333 ubox
12 28 0.006949152 ubox
12 31 0.060513599 ubox
12 41 0.145065853 ubox
12 45 0.003505216 ubox
13 24 0.290330272 ubox
13 30 0.060521197 ubox
13 40 0.144973137 ubox
14 23 0.291190447 ubox
14 29 0.060489200 ubox
14 41 0.017806891 ubox
15 22 0.286287858 ubox
15 24 0.943628561 ubox
15 38 0.148515869 ubox
16 23 0.944607527 ubox
16 37 0.148568604 ubox
17 22 0.942091000 ubox
17 36 0.148923342 ubox
18 24 0.004147322 ubox
18 35 0.148723308 ubox
18 53 0.011151584 ubox
18 59 0.003659123 ubox
19 23 0.003881672 ubox
19 51 0.003795238 ubox
19 52 0.011074621 ubox
19 58 0.003659246 ubox
20 50 0.003812507 ubox
21 50 0.010203207 ubox
22 31 0.149324821 ubox
22 49 0.010999418 ubox
22 60 0.005629948 ubox
23 30 0.149507699 ubox
23 47 0.011145650 ubox
23 59 0.005925117 ubox
24 29 0.149256149 ubox
24 45 0.010394311 ubox
24 46 0.008291199 ubox
24 58 0.005912960 ubox
25 44 0.012857772 ubox
26 43 0.013046792 ubox
26 56 0.004727578 ubox
27 36 0.005082858 ubox
27 55 0.003878405 ubox
28 35 0.005117327 ubox
29 38 0.017948239 ubox
29 53 0.005493957 ubox
29 59 0.012477823 ubox
30 37 0.018109802 ubox
30 52 0.005381124 ubox
30 58 0.012521602 ubox
31 36 0.023015891 ubox
31 50 0.003208091 ubox
31 56 0.103544290 ubox
31 59 0.008623671 ubox
32 55 0.095052370 ubox
32 56 0.126813555 ubox
33 55 0.124766403 ubox
34 50 0.026987218 ubox
35 46 0.034005342 ubox
35 49 0.027981534 ubox
35 52 0.233414143 ubox
36 45 0.034388969 ubox
36 51 0.236122483 ubox
36 60 0.184246465 ubox
37 44 0.026202212 ubox
37 47 0.035864127 ubox
37 50 0.235885900 ubox
37 53 0.013266641 ubox
37 59 0.197738637 ubox
38 45 0.009643935 ubox
38 46 0.035423150 ubox
38 49 0.235548293 ubox
38 51 0.016784233 ubox
38 52 0.011928015 ubox
38 58 0.197472464 ubox
39 44 0.010330714 ubox
39 50 0.018957797 ubox
39 55 0.051343977 ubox
40 48 0.215719173 ubox
40 49 0.018682386 ubox
40 51 0.004757066 ubox
40 54 0.059707782 ubox
40 57 0.224794627 ubox
40 60 0.156540487 ubox
41 47 0.218069295 ubox
41 50 0.007983675 ubox
41 53 0.071745324 ubox
41 56 0.274084375 ubox
41 59 0.598552929 ubox
42 50 0.137654867 ubox
42 55 0.268682332 ubox
43 49 0.141640658 ubox
43 52 0.092885201 ubox
43 58 0.827000448 ubox
44 48 0.127652567 ubox
44 51 0.091900463 ubox
44 54 0.166802555 ubox
44 57 0.828928252 ubox
44 60 0.009949604 ubox
45 50 0.073163397 ubox
45 53 0.154029083 ubox
45 56 0.823801776 ubox
45 59 0.016254049 ubox
46 53 0.697076574 ubox
46 55 0.496160142 ubox
46 59 0.143955062 ubox
47 52 0.707732217 ubox
47 58 0.144032016 ubox
49 55 0.022921972 ubox
49 59 0.047786846 ubox
50 54 0.024233366 ubox
50 57 0.092692742 ubox
50 58 0.043785035 ubox
50 60 0.015942474 ubox
51 56 0.101011418 ubox
51 59 0.026511697 ubox
52 59 0.266890080 ubox
53 58 0.267158221 ubox
1 40 0.9500000 lbox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
