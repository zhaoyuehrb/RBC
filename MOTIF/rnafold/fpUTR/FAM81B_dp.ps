%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM81B)
} def

/sequence { (\
GUCACCCUUGGGAAGAGGCCCCAGAAACAGGAAGACCUUAGUUAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.007891608 ubox
1 28 0.050157828 ubox
1 36 0.893671314 ubox
2 13 0.009050125 ubox
2 16 0.004381382 ubox
2 18 0.007491989 ubox
2 25 0.019571455 ubox
2 27 0.048791815 ubox
2 31 0.018122464 ubox
2 32 0.041040725 ubox
2 35 0.918057247 ubox
2 46 0.010879887 ubox
3 10 0.004075375 ubox
3 12 0.009672198 ubox
3 15 0.004732256 ubox
3 17 0.007385052 ubox
3 24 0.020714640 ubox
3 30 0.022875761 ubox
3 31 0.043548259 ubox
3 34 0.922329160 ubox
3 45 0.017527897 ubox
4 9 0.003636655 ubox
4 42 0.010324512 ubox
5 11 0.010949938 ubox
5 12 0.008206829 ubox
5 18 0.015249628 ubox
5 31 0.117461984 ubox
5 41 0.010998485 ubox
5 46 0.057099728 ubox
6 10 0.010889966 ubox
6 11 0.008209307 ubox
6 12 0.007138905 ubox
6 17 0.015076409 ubox
6 18 0.042771647 ubox
6 30 0.116775934 ubox
6 31 0.941445567 ubox
6 45 0.057505870 ubox
6 46 0.069982586 ubox
7 11 0.007102515 ubox
7 15 0.014776575 ubox
7 17 0.043234156 ubox
7 18 0.003587845 ubox
7 24 0.189694899 ubox
7 30 0.941957716 ubox
7 31 0.023200187 ubox
7 34 0.009945696 ubox
7 41 0.006921849 ubox
7 45 0.071148250 ubox
7 46 0.014106459 ubox
8 14 0.014569004 ubox
8 15 0.004632392 ubox
8 16 0.043208887 ubox
8 17 0.003632445 ubox
8 23 0.173273944 ubox
8 24 0.433568541 ubox
8 25 0.047838426 ubox
8 26 0.032606133 ubox
8 27 0.029007613 ubox
8 29 0.856949070 ubox
8 30 0.022398114 ubox
8 33 0.009457072 ubox
8 40 0.005991120 ubox
8 44 0.058706326 ubox
8 45 0.014157817 ubox
9 13 0.012134490 ubox
9 14 0.005530206 ubox
9 15 0.042643076 ubox
9 16 0.003923712 ubox
9 23 0.968155278 ubox
9 24 0.050160569 ubox
9 25 0.035871653 ubox
9 26 0.035576157 ubox
9 29 0.025135081 ubox
9 32 0.006389326 ubox
9 44 0.014616525 ubox
10 20 0.010954400 ubox
10 21 0.206486769 ubox
10 22 0.976061486 ubox
10 28 0.024650277 ubox
10 38 0.003439841 ubox
10 43 0.014899667 ubox
11 19 0.011053855 ubox
11 20 0.215936871 ubox
11 21 0.974152391 ubox
11 22 0.032021488 ubox
11 37 0.003673821 ubox
11 42 0.014421145 ubox
12 19 0.223970699 ubox
12 20 0.971012243 ubox
12 21 0.032358035 ubox
12 36 0.003667824 ubox
13 39 0.006516405 ubox
14 38 0.006570780 ubox
15 37 0.006537854 ubox
15 39 0.021958724 ubox
16 38 0.023309950 ubox
17 37 0.023487423 ubox
18 36 0.023453109 ubox
19 31 0.010681790 ubox
19 46 0.007394169 ubox
20 30 0.010635624 ubox
20 31 0.022042619 ubox
20 45 0.007507615 ubox
20 46 0.013864217 ubox
21 30 0.022084012 ubox
21 31 0.027006817 ubox
21 45 0.014041904 ubox
21 46 0.025984223 ubox
22 30 0.027151166 ubox
22 45 0.027349149 ubox
23 43 0.011405319 ubox
24 42 0.012479585 ubox
24 43 0.036822666 ubox
25 39 0.007887000 ubox
25 42 0.041278199 ubox
25 43 0.027387128 ubox
26 38 0.004283759 ubox
26 39 0.010374563 ubox
26 42 0.025695845 ubox
26 43 0.193717634 ubox
27 38 0.005357200 ubox
27 42 0.207114806 ubox
28 41 0.207945317 ubox
29 38 0.224826211 ubox
29 39 0.096870081 ubox
30 37 0.243420378 ubox
30 38 0.095071788 ubox
30 39 0.007567348 ubox
31 36 0.241982581 ubox
31 37 0.095161917 ubox
31 38 0.007760046 ubox
31 39 0.011984004 ubox
32 38 0.011754499 ubox
32 39 0.007519455 ubox
32 43 0.009849102 ubox
33 38 0.006902403 ubox
33 39 0.003251484 ubox
33 42 0.010287969 ubox
33 43 0.004079060 ubox
34 42 0.003592926 ubox
34 43 0.063564947 ubox
35 42 0.066125465 ubox
36 41 0.066352247 ubox
36 46 0.326207736 ubox
37 45 0.455470624 ubox
37 46 0.157268151 ubox
38 44 0.450662681 ubox
38 45 0.158117742 ubox
38 46 0.014377459 ubox
39 44 0.133515970 ubox
39 45 0.023204720 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
showpage
end
%%EOF
