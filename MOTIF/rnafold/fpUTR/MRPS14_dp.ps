%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS14)
} def

/sequence { (\
GGCAGUGUCAAUAAAGUUUCAGCGGUUUGUAGUUUGUAGCGGACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.640354122 ubox
1 18 0.075664909 ubox
1 19 0.005786949 ubox
1 20 0.040692258 ubox
1 27 0.044351339 ubox
1 28 0.005428315 ubox
1 34 0.004174113 ubox
2 8 0.640549911 ubox
2 17 0.113279281 ubox
2 18 0.006751715 ubox
2 19 0.029529243 ubox
2 23 0.351531070 ubox
2 26 0.070002468 ubox
2 27 0.004954765 ubox
2 30 0.081252328 ubox
2 33 0.007447182 ubox
2 37 0.088590485 ubox
2 40 0.024817897 ubox
3 7 0.636974821 ubox
3 16 0.115993497 ubox
3 22 0.351272835 ubox
3 25 0.071679204 ubox
3 29 0.082832831 ubox
3 32 0.007615381 ubox
3 36 0.090318679 ubox
3 39 0.024720312 ubox
4 18 0.020384769 ubox
4 19 0.031759774 ubox
4 27 0.004733122 ubox
4 28 0.081736201 ubox
4 34 0.012814540 ubox
4 35 0.089326515 ubox
5 12 0.102687923 ubox
5 17 0.018280317 ubox
5 18 0.037789105 ubox
5 23 0.171106974 ubox
5 26 0.003537652 ubox
5 27 0.071779935 ubox
5 33 0.015772019 ubox
5 34 0.083096631 ubox
5 40 0.058162595 ubox
5 44 0.039942061 ubox
5 47 0.106839875 ubox
6 11 0.104278167 ubox
6 13 0.060507406 ubox
6 16 0.015252497 ubox
6 21 0.210149680 ubox
6 22 0.164363953 ubox
6 24 0.109025990 ubox
6 25 0.003162410 ubox
6 31 0.026565784 ubox
6 32 0.025125538 ubox
6 36 0.003846240 ubox
6 38 0.007570222 ubox
6 39 0.058150667 ubox
6 41 0.028495635 ubox
6 43 0.039206081 ubox
6 45 0.305059683 ubox
6 46 0.077013665 ubox
7 12 0.052643081 ubox
7 17 0.018635468 ubox
7 20 0.228698991 ubox
7 23 0.138157852 ubox
7 26 0.008998615 ubox
7 30 0.028161557 ubox
7 33 0.004922263 ubox
7 35 0.004314026 ubox
7 37 0.008208928 ubox
7 40 0.038584124 ubox
7 44 0.345120483 ubox
7 47 0.013075373 ubox
8 16 0.016409488 ubox
8 22 0.135244858 ubox
8 25 0.026283929 ubox
8 32 0.004933693 ubox
8 39 0.037945890 ubox
8 42 0.027104881 ubox
8 43 0.344611097 ubox
8 46 0.012714240 ubox
9 24 0.034029328 ubox
9 29 0.091061349 ubox
9 36 0.059106847 ubox
9 41 0.042100819 ubox
9 42 0.342024863 ubox
10 18 0.172349427 ubox
10 19 0.136087164 ubox
10 27 0.013893694 ubox
10 28 0.091055678 ubox
10 34 0.006985361 ubox
10 35 0.058500500 ubox
11 17 0.178000659 ubox
11 18 0.145456203 ubox
11 26 0.016705267 ubox
11 27 0.088546620 ubox
11 30 0.076128418 ubox
11 33 0.008347403 ubox
11 34 0.048679376 ubox
11 37 0.167302340 ubox
12 16 0.165639474 ubox
12 25 0.017137898 ubox
12 29 0.079866986 ubox
12 31 0.010326177 ubox
12 32 0.009025058 ubox
12 36 0.188780041 ubox
12 38 0.134144416 ubox
13 19 0.023856211 ubox
13 27 0.009820011 ubox
13 28 0.080411647 ubox
13 30 0.010405597 ubox
13 34 0.007950496 ubox
13 35 0.191090118 ubox
13 37 0.129399123 ubox
14 18 0.020222611 ubox
14 26 0.011162492 ubox
14 27 0.079497289 ubox
14 28 0.012869647 ubox
14 33 0.009155776 ubox
14 34 0.191118170 ubox
14 35 0.125791317 ubox
15 26 0.074894657 ubox
15 27 0.013253047 ubox
15 28 0.011243776 ubox
15 33 0.188081446 ubox
15 34 0.127271561 ubox
15 35 0.089141323 ubox
16 23 0.250497115 ubox
16 26 0.011439255 ubox
16 27 0.011391934 ubox
16 30 0.003802670 ubox
16 33 0.118101762 ubox
16 34 0.089924874 ubox
16 37 0.009411350 ubox
16 40 0.246008745 ubox
16 44 0.125121877 ubox
16 47 0.090975664 ubox
17 22 0.238745737 ubox
17 25 0.016316368 ubox
17 29 0.003733625 ubox
17 32 0.130508051 ubox
17 36 0.013387508 ubox
17 39 0.246262939 ubox
17 42 0.004298200 ubox
17 43 0.121076548 ubox
17 46 0.091561238 ubox
18 24 0.019904798 ubox
18 25 0.011033700 ubox
18 31 0.120388457 ubox
18 32 0.092812590 ubox
18 38 0.208630217 ubox
18 39 0.018431885 ubox
18 41 0.007189252 ubox
18 42 0.114980726 ubox
18 43 0.049766044 ubox
18 45 0.088852242 ubox
18 46 0.016223819 ubox
19 24 0.015882027 ubox
19 25 0.016461773 ubox
19 31 0.091251774 ubox
19 38 0.022044436 ubox
19 41 0.092141332 ubox
19 42 0.061061428 ubox
19 43 0.076046562 ubox
19 45 0.018864740 ubox
20 24 0.035864277 ubox
20 29 0.263021302 ubox
20 36 0.240480437 ubox
20 41 0.069632246 ubox
20 42 0.078801702 ubox
21 27 0.013007516 ubox
21 28 0.255075565 ubox
21 34 0.164972964 ubox
21 35 0.197399151 ubox
22 26 0.011216468 ubox
22 27 0.187716200 ubox
22 30 0.096707981 ubox
22 33 0.225505269 ubox
22 34 0.138842746 ubox
22 37 0.111108186 ubox
22 40 0.124638497 ubox
23 29 0.098970515 ubox
23 32 0.264360856 ubox
23 36 0.113262084 ubox
23 39 0.124865896 ubox
23 41 0.022845485 ubox
24 28 0.061130365 ubox
24 34 0.005182697 ubox
24 35 0.112593677 ubox
24 40 0.022327157 ubox
25 33 0.005997139 ubox
25 34 0.110883070 ubox
25 37 0.012807770 ubox
25 40 0.022338388 ubox
25 44 0.872173034 ubox
25 47 0.031376670 ubox
26 32 0.007455241 ubox
26 36 0.021740722 ubox
26 39 0.022978124 ubox
26 43 0.873444946 ubox
26 46 0.027726171 ubox
27 31 0.007170875 ubox
27 38 0.022035182 ubox
27 39 0.004482767 ubox
27 41 0.004158620 ubox
27 42 0.872865696 ubox
27 43 0.003706268 ubox
27 45 0.022423691 ubox
27 46 0.070096369 ubox
28 36 0.018059697 ubox
28 38 0.007725738 ubox
28 41 0.871527662 ubox
28 42 0.003500099 ubox
28 45 0.084286208 ubox
29 35 0.018866681 ubox
29 37 0.007906844 ubox
29 40 0.874273953 ubox
29 44 0.087534793 ubox
29 47 0.072498128 ubox
30 36 0.010735963 ubox
30 38 0.124773439 ubox
30 39 0.861659533 ubox
30 43 0.085167669 ubox
30 46 0.072616300 ubox
31 35 0.016504469 ubox
31 37 0.173978976 ubox
32 40 0.093395871 ubox
32 44 0.168095663 ubox
32 47 0.024315457 ubox
33 39 0.092729975 ubox
33 42 0.003897910 ubox
33 43 0.168302454 ubox
33 46 0.020191414 ubox
34 38 0.072024365 ubox
34 41 0.004592175 ubox
34 42 0.168119053 ubox
34 43 0.006431794 ubox
34 45 0.014431684 ubox
34 46 0.055906700 ubox
35 41 0.166229710 ubox
35 42 0.008102065 ubox
35 45 0.068673024 ubox
36 40 0.158900297 ubox
36 44 0.071842346 ubox
36 47 0.005405404 ubox
37 43 0.070260045 ubox
37 46 0.005474892 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
3 7 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
showpage
end
%%EOF
