%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGCAGCAGGCCAAGGGGGAGGUGCGAGCGUGGACCUGGGACGGGUCUGGGCGGCUCUCGGUGGUUGGCACGGGUUCGCACACCCAUUCAAGCGGCAGGACGCACUUGUCUUAGCAGUUCUCGCUGACCGCGCUAGCUGCGGCUUCUACGCUCCGGCACUCUGAGUUCAUCAGCAAACGCCCUGGCGUCUGUCCUCACC\
) } def
/len { sequence length } bind def

/coor [
[63.90261841 375.02932739]
[73.79834747 362.40182495]
[73.33414459 347.40899658]
[72.86994171 332.41619873]
[64.74248505 319.93444824]
[72.04900360 305.90145874]
[71.58480835 290.90863037]
[71.12060547 275.91583252]
[70.65640259 260.92300415]
[60.12266159 253.49565125]
[55.72640228 241.17276001]
[59.28454208 228.38015747]
[69.71340942 219.85040283]
[69.48128510 204.85220337]
[69.24915314 189.85398865]
[69.01702881 174.85578918]
[65.76814270 168.21214294]
[68.89916229 159.62411499]
[68.89916229 144.62411499]
[68.89916229 129.62411499]
[67.89476013 112.06566620]
[74.37920380 98.92040253]
[84.65573883 92.70653534]
[94.46950531 93.76369476]
[90.79314423 79.22119141]
[87.11678314 64.67868805]
[83.44042206 50.13618469]
[79.76406097 35.59368134]
[75.86309814 21.10981369]
[71.73845673 6.68804741]
[67.61381531 -7.73371887]
[63.48917007 -22.15548515]
[59.36452866 -36.57725143]
[55.23988724 -50.99901581]
[42.26889420 -58.53249741]
[27.69837952 -54.96877670]
[13.12786579 -51.40505219]
[-1.44264841 -47.84133148]
[-16.01316261 -44.27760696]
[-30.58367729 -40.71388626]
[-45.15419006 -37.15016174]
[-59.10331345 -27.51385880]
[-72.22452545 -38.25024796]
[-65.54003143 -53.83081055]
[-48.71791458 -51.72067642]
[-34.14739990 -55.28439713]
[-19.57688522 -58.84812164]
[-5.00637102 -62.41184235]
[9.56414318 -65.97556305]
[24.13465691 -69.53929138]
[38.70516968 -73.10301208]
[36.70722580 -91.28243256]
[44.40016174 -106.81512451]
[58.43934250 -115.25030518]
[57.04851913 -130.18568420]
[55.65769577 -145.12106323]
[54.26687241 -160.05645752]
[52.87604904 -174.99183655]
[51.48522568 -189.92721558]
[39.13738251 -196.06086731]
[31.49472427 -207.40576172]
[30.46568298 -220.93750000]
[36.21249008 -233.11183167]
[47.13661575 -240.79299927]
[45.97708893 -255.74810791]
[44.81755829 -270.70321655]
[43.65803146 -285.65835571]
[42.49850082 -300.61346436]
[41.33897018 -315.56857300]
[40.17944336 -330.52368164]
[39.01991272 -345.47879028]
[37.86038589 -360.43392944]
[19.84218979 -366.45526123]
[7.98804808 -384.22674561]
[9.58827305 -407.90753174]
[0.88455474 -420.12414551]
[-7.81916380 -432.34072876]
[-16.52288246 -444.55734253]
[-32.14850998 -446.92700195]
[-41.45448685 -459.70098877]
[-38.91975021 -475.30068970]
[-26.04810524 -484.47106934]
[-10.47607517 -481.77154541]
[-1.44226933 -468.80368042]
[-4.30628347 -453.26104736]
[4.39743519 -441.04446411]
[13.10115337 -428.82785034]
[21.80487251 -416.61126709]
[29.14178276 -418.16680908]
[21.64864731 -431.16116333]
[31.69163322 -442.30288696]
[45.39143753 -436.19427490]
[43.81560135 -421.27792358]
[51.15251541 -422.83346558]
[54.14998245 -437.53091431]
[57.14745331 -452.22839355]
[52.32391739 -467.29635620]
[62.44846725 -478.22076416]
[65.44593811 -492.91824341]
[68.32958984 -507.63842773]
[71.09925079 -522.38049316]
[73.86891937 -537.12261963]
[76.63858032 -551.86468506]
[79.40824890 -566.60675049]
[70.28276062 -579.51031494]
[73.03655243 -595.07281494]
[86.03583527 -604.06134033]
[101.56838226 -601.14318848]
[110.41899109 -588.04962158]
[107.33676147 -572.54876709]
[94.15032959 -563.83709717]
[91.38066101 -549.09503174]
[88.61100006 -534.35296631]
[85.84133148 -519.61083984]
[83.07167053 -504.86877441]
[84.92742157 -497.70989990]
[80.14338684 -489.92074585]
[77.14591980 -475.22329712]
[82.18385315 -461.20657349]
[71.84490967 -449.23092651]
[68.84743500 -434.53344727]
[65.84996796 -419.83599854]
[76.60593414 -402.33148193]
[76.51869202 -383.31665039]
[67.19865417 -368.51943970]
[52.81550217 -361.59344482]
[53.97502899 -346.63833618]
[55.13455963 -331.68322754]
[56.29408646 -316.72808838]
[57.45361710 -301.77297974]
[58.61314774 -286.81787109]
[59.77267456 -271.86276245]
[60.93220520 -256.90762329]
[62.09173203 -241.95251465]
[76.34472656 -233.81411743]
[83.00714111 -218.63270569]
[79.27312469 -202.30918884]
[66.42060852 -191.31803894]
[67.81143188 -176.38265991]
[69.20225525 -161.44728088]
[70.59307861 -146.51188660]
[71.98390198 -131.57650757]
[73.37472534 -116.64112854]
[83.39989471 -113.57358551]
[91.83721924 -106.96231842]
[97.45502472 -97.55850983]
[99.35803223 -86.53240204]
[97.12605286 -75.32836151]
[90.89199066 -65.47566223]
[81.34590912 -58.37995529]
[69.66165161 -55.12365723]
[73.78629303 -40.70189285]
[77.91093445 -26.28012657]
[82.03557587 -11.85836029]
[86.16021729 2.56340528]
[90.28485870 16.98517036]
[93.95690155 20.04798698]
[95.74006653 25.45252800]
[94.30656433 31.91732216]
[97.98292542 46.45982361]
[101.65928650 61.00232697]
[105.33564758 75.54483032]
[109.01200867 90.08733368]
[117.90373993 102.16777802]
[130.69636536 110.00030518]
[143.48899841 117.83283234]
[156.28163147 125.66536713]
[172.15339661 123.32726288]
[183.77845764 134.38337708]
[182.23905945 150.35240173]
[168.71609497 158.98426819]
[153.58323669 153.65734863]
[148.44911194 138.45799255]
[135.65647888 130.62547302]
[122.86383820 122.79293823]
[110.07120514 114.96041107]
[103.52819824 118.62633514]
[110.99967194 131.63314819]
[118.19097900 144.79692078]
[105.10487366 152.12861633]
[97.63356018 139.12191772]
[90.44217682 125.95818329]
[83.89916229 129.62411499]
[83.89916229 144.62411499]
[83.89916229 159.62411499]
[84.01522827 174.62365723]
[84.24736023 189.62185669]
[84.47948456 204.62007141]
[84.71161652 219.61827087]
[97.49113464 231.55963135]
[97.67985535 248.71122742]
[85.64922333 260.45880127]
[86.11341858 275.45162964]
[86.57762146 290.44442749]
[87.04182434 305.43725586]
[95.20248413 318.99136353]
[87.86276245 331.95199585]
[88.32695770 346.94479370]
[88.79116058 361.93762207]
[99.44911957 373.92877197]
[96.57732391 389.71267700]
[82.37876892 397.18133545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[6 195]
[7 194]
[8 193]
[9 192]
[13 189]
[14 188]
[15 187]
[16 186]
[18 185]
[19 184]
[20 183]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[75 88]
[76 87]
[77 86]
[78 85]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
