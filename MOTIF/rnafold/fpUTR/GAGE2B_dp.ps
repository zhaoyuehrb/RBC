%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE2B)
} def

/sequence { (\
ACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUAUUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.011386461 ubox
1 76 0.018450316 ubox
1 78 0.279919164 ubox
2 41 0.013119221 ubox
2 64 0.003512724 ubox
2 75 0.019483851 ubox
2 77 0.296386128 ubox
2 79 0.798993082 ubox
3 39 0.003735425 ubox
3 40 0.012996251 ubox
3 63 0.003242559 ubox
3 74 0.014321112 ubox
3 76 0.295503031 ubox
3 78 0.809803339 ubox
4 38 0.004042345 ubox
4 75 0.243817451 ubox
4 77 0.810619342 ubox
5 38 0.011694705 ubox
5 64 0.008082560 ubox
5 75 0.826416484 ubox
5 77 0.013248238 ubox
5 79 0.010906143 ubox
6 13 0.003228542 ubox
6 37 0.011298363 ubox
6 51 0.018067063 ubox
6 52 0.027767531 ubox
6 53 0.415264706 ubox
6 54 0.034273946 ubox
6 55 0.020677657 ubox
6 58 0.016294542 ubox
6 60 0.004322565 ubox
6 63 0.007689545 ubox
6 74 0.839968189 ubox
6 76 0.014429931 ubox
6 78 0.008592681 ubox
7 12 0.003231889 ubox
7 36 0.009722005 ubox
7 37 0.007834721 ubox
7 50 0.019311872 ubox
7 51 0.029968257 ubox
7 52 0.506794746 ubox
7 53 0.033240721 ubox
7 54 0.018358109 ubox
7 55 0.006923031 ubox
7 56 0.015637639 ubox
7 57 0.018531378 ubox
7 58 0.003901391 ubox
7 59 0.004525326 ubox
7 62 0.005452998 ubox
7 70 0.012736047 ubox
7 73 0.832951677 ubox
7 74 0.029192956 ubox
8 35 0.007828842 ubox
8 36 0.010645651 ubox
8 49 0.019606604 ubox
8 50 0.032562656 ubox
8 51 0.915926996 ubox
8 52 0.042201269 ubox
8 53 0.015789757 ubox
8 54 0.007654998 ubox
8 55 0.009749667 ubox
8 56 0.021100128 ubox
8 57 0.007227930 ubox
8 60 0.004158464 ubox
8 69 0.008065595 ubox
8 70 0.028905588 ubox
8 72 0.286221370 ubox
8 73 0.031396819 ubox
8 74 0.010050045 ubox
9 34 0.005195441 ubox
9 35 0.012115699 ubox
9 48 0.019711455 ubox
9 49 0.025354136 ubox
9 50 0.995983372 ubox
9 51 0.006176629 ubox
9 52 0.014090708 ubox
9 55 0.007915672 ubox
9 56 0.007735291 ubox
9 59 0.004530965 ubox
9 69 0.007900988 ubox
9 70 0.066096139 ubox
9 73 0.009210535 ubox
10 33 0.004476719 ubox
10 34 0.013409551 ubox
10 49 0.996672279 ubox
10 51 0.014434255 ubox
10 54 0.006594664 ubox
10 55 0.007268035 ubox
10 58 0.004525150 ubox
10 68 0.006844937 ubox
10 69 0.062147414 ubox
10 72 0.007833208 ubox
11 20 0.004934695 ubox
11 23 0.004506137 ubox
11 33 0.013685035 ubox
11 48 0.996924559 ubox
11 50 0.014562930 ubox
11 53 0.005466169 ubox
11 54 0.006265858 ubox
11 57 0.004502674 ubox
11 68 0.045315387 ubox
12 19 0.004943662 ubox
12 22 0.004816219 ubox
12 32 0.014226389 ubox
12 46 0.999196713 ubox
12 66 0.011853294 ubox
13 18 0.004815180 ubox
13 21 0.004830096 ubox
13 31 0.014021023 ubox
13 45 0.998565599 ubox
13 65 0.011535718 ubox
14 20 0.004837155 ubox
14 30 0.010315351 ubox
14 44 0.997405202 ubox
14 62 0.004274096 ubox
15 19 0.004525141 ubox
15 29 0.008438103 ubox
15 41 0.003988672 ubox
15 45 0.005161474 ubox
15 61 0.004419583 ubox
16 28 0.004947959 ubox
16 43 0.937132732 ubox
16 44 0.005871719 ubox
16 53 0.005121135 ubox
16 59 0.010135740 ubox
17 42 0.913091584 ubox
17 52 0.005397485 ubox
17 58 0.010155758 ubox
18 26 0.013737166 ubox
18 40 0.998336481 ubox
18 51 0.005519817 ubox
18 57 0.010045320 ubox
19 25 0.013838356 ubox
19 39 0.999798844 ubox
19 50 0.005568779 ubox
19 56 0.010010135 ubox
20 24 0.013743040 ubox
20 38 0.999794611 ubox
21 37 0.999349442 ubox
21 49 0.010207391 ubox
21 54 0.004166717 ubox
22 36 0.998079393 ubox
22 48 0.010699151 ubox
22 53 0.003943294 ubox
23 31 0.026532758 ubox
23 32 0.013819754 ubox
23 47 0.010677104 ubox
24 30 0.030244917 ubox
24 33 0.990738058 ubox
25 29 0.030268806 ubox
25 32 0.995013231 ubox
25 46 0.011757300 ubox
26 31 0.930865303 ubox
26 45 0.011775843 ubox
27 33 0.007401920 ubox
27 44 0.011727623 ubox
27 48 0.005467821 ubox
28 32 0.003360205 ubox
28 47 0.005468118 ubox
29 42 0.007233926 ubox
30 41 0.011216886 ubox
30 45 0.005437871 ubox
31 40 0.012092277 ubox
31 44 0.005435954 ubox
32 39 0.012095316 ubox
32 43 0.005425467 ubox
33 38 0.011902046 ubox
39 46 0.003691335 ubox
40 45 0.003712021 ubox
44 79 0.008397284 ubox
45 56 0.005728371 ubox
45 57 0.009981236 ubox
45 70 0.003657952 ubox
45 78 0.008446946 ubox
46 55 0.005774023 ubox
46 56 0.010371178 ubox
46 69 0.003681674 ubox
47 54 0.005792283 ubox
47 55 0.010000324 ubox
47 68 0.004017563 ubox
47 76 0.008517130 ubox
48 66 0.016160407 ubox
48 75 0.008516804 ubox
49 65 0.016268566 ubox
49 67 0.012007553 ubox
50 64 0.016279626 ubox
50 66 0.012995563 ubox
51 65 0.013118057 ubox
51 66 0.003848432 ubox
51 67 0.010939866 ubox
52 64 0.013015596 ubox
52 65 0.006376314 ubox
52 66 0.013705656 ubox
52 67 0.025662631 ubox
52 82 0.003479631 ubox
53 64 0.006595730 ubox
53 65 0.014686022 ubox
53 66 0.024840124 ubox
53 67 0.073093521 ubox
53 81 0.004403753 ubox
53 82 0.029231194 ubox
54 64 0.014661406 ubox
54 65 0.024995061 ubox
54 66 0.078084825 ubox
54 67 0.027478316 ubox
54 80 0.004233908 ubox
54 81 0.039088723 ubox
54 82 0.006257491 ubox
55 64 0.024457861 ubox
55 65 0.080373064 ubox
55 66 0.010259499 ubox
55 67 0.165758978 ubox
55 79 0.003634242 ubox
55 80 0.040927049 ubox
55 81 0.005664423 ubox
56 64 0.080597686 ubox
56 66 0.126106941 ubox
56 79 0.041055488 ubox
57 66 0.971039405 ubox
58 65 0.982037418 ubox
58 67 0.104321907 ubox
58 80 0.034948339 ubox
59 64 0.981996448 ubox
59 66 0.111608800 ubox
59 79 0.036722833 ubox
60 65 0.106314263 ubox
60 75 0.005229738 ubox
60 77 0.045779294 ubox
60 79 0.011645247 ubox
61 68 0.003869338 ubox
61 72 0.007036471 ubox
61 74 0.005341753 ubox
61 76 0.047509820 ubox
61 78 0.016003225 ubox
62 67 0.003937491 ubox
62 71 0.006011091 ubox
62 75 0.044632271 ubox
62 77 0.015343985 ubox
63 71 0.054080341 ubox
63 75 0.003802207 ubox
64 70 0.059875776 ubox
64 73 0.051739719 ubox
65 69 0.052106669 ubox
65 72 0.051274390 ubox
65 74 0.037218440 ubox
66 73 0.039180429 ubox
67 72 0.041330035 ubox
67 76 0.024247501 ubox
67 78 0.015112821 ubox
67 83 0.057813409 ubox
68 75 0.024462981 ubox
68 77 0.015340676 ubox
68 80 0.010767391 ubox
68 81 0.411063961 ubox
68 82 0.052719527 ubox
69 79 0.005926091 ubox
69 80 0.473426617 ubox
69 81 0.039343541 ubox
70 77 0.017056144 ubox
70 79 0.480964963 ubox
71 76 0.014547641 ubox
71 78 0.471739866 ubox
72 77 0.436636976 ubox
72 80 0.054478630 ubox
73 79 0.058145377 ubox
75 83 0.009064144 ubox
76 82 0.010031600 ubox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
4 77 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
