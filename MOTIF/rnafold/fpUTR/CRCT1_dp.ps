%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRCT1)
} def

/sequence { (\
GCCCAUUCCAGUUGGAGAACGUAGUGAGUCUUUCAGUGGAGCCAGGGUCUGGUUUGUCGUGAGGAGCUCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.013863232 ubox
1 22 0.355813875 ubox
1 25 0.024687321 ubox
1 29 0.013724831 ubox
1 48 0.136701678 ubox
1 67 0.028689203 ubox
1 72 0.145306602 ubox
2 11 0.015174302 ubox
2 15 0.077361137 ubox
2 21 0.368206052 ubox
2 24 0.025543577 ubox
2 28 0.015194355 ubox
2 46 0.006353376 ubox
2 47 0.149676249 ubox
2 64 0.012261426 ubox
2 66 0.028715349 ubox
2 71 0.145024431 ubox
3 14 0.074803567 ubox
3 15 0.529584152 ubox
3 39 0.006512827 ubox
3 45 0.006375006 ubox
3 46 0.149900648 ubox
3 63 0.012349835 ubox
3 64 0.028577282 ubox
4 14 0.531205568 ubox
4 26 0.027440388 ubox
4 38 0.006624569 ubox
4 45 0.149810092 ubox
4 51 0.003184342 ubox
4 56 0.007070512 ubox
4 61 0.012532392 ubox
4 63 0.028516086 ubox
5 12 0.077728736 ubox
5 13 0.522138521 ubox
5 22 0.022872851 ubox
5 25 0.030969660 ubox
5 37 0.006564828 ubox
5 50 0.003175339 ubox
5 55 0.006855195 ubox
5 60 0.012476406 ubox
6 11 0.086864784 ubox
6 16 0.034764099 ubox
6 17 0.580290271 ubox
6 18 0.052762163 ubox
6 19 0.047506166 ubox
6 21 0.020932110 ubox
6 24 0.030696668 ubox
6 28 0.003345221 ubox
6 36 0.006054741 ubox
6 41 0.144670471 ubox
6 59 0.011855781 ubox
6 62 0.003660546 ubox
6 66 0.004625233 ubox
7 15 0.027292437 ubox
7 16 0.795299019 ubox
7 17 0.031477839 ubox
7 18 0.051001632 ubox
7 23 0.027013698 ubox
7 27 0.003503501 ubox
7 35 0.003260273 ubox
7 40 0.160803441 ubox
7 65 0.005337345 ubox
8 14 0.027642421 ubox
8 15 0.814482105 ubox
8 17 0.050742166 ubox
8 26 0.003502070 ubox
8 39 0.164552773 ubox
8 52 0.005750638 ubox
8 64 0.005375650 ubox
9 14 0.813426920 ubox
9 38 0.164668813 ubox
9 51 0.005752378 ubox
9 63 0.005360306 ubox
10 37 0.163404057 ubox
10 50 0.005747562 ubox
11 20 0.089871060 ubox
11 37 0.009451709 ubox
11 49 0.005737707 ubox
11 72 0.011255409 ubox
12 18 0.003657097 ubox
12 19 0.089989497 ubox
12 36 0.138747752 ubox
12 45 0.005464501 ubox
12 71 0.007996136 ubox
13 17 0.003743321 ubox
13 18 0.088468375 ubox
13 21 0.014292486 ubox
13 23 0.004195041 ubox
13 35 0.156872445 ubox
13 44 0.006047808 ubox
13 71 0.011645703 ubox
14 20 0.020938915 ubox
14 22 0.004322582 ubox
14 31 0.004332979 ubox
14 33 0.042530641 ubox
14 34 0.157310345 ubox
14 43 0.006151067 ubox
14 70 0.016366814 ubox
15 30 0.004581462 ubox
15 32 0.064843190 ubox
15 33 0.150668488 ubox
15 34 0.016785140 ubox
15 42 0.006148322 ubox
15 69 0.016325897 ubox
16 29 0.004516685 ubox
16 31 0.079272821 ubox
16 32 0.143891465 ubox
16 33 0.017656664 ubox
16 68 0.016196761 ubox
17 30 0.090779506 ubox
17 31 0.123645921 ubox
17 32 0.017752408 ubox
17 34 0.005156825 ubox
17 67 0.015885748 ubox
18 29 0.068348070 ubox
18 31 0.017768445 ubox
18 33 0.005132510 ubox
19 25 0.043543307 ubox
19 29 0.149116894 ubox
19 32 0.004317142 ubox
20 24 0.044395834 ubox
20 26 0.017613296 ubox
20 28 0.161427067 ubox
20 71 0.095926884 ubox
20 73 0.695661671 ubox
21 25 0.011724973 ubox
21 70 0.098508038 ubox
21 72 0.731120263 ubox
22 38 0.011186806 ubox
22 71 0.726560162 ubox
23 31 0.006210242 ubox
23 37 0.012357318 ubox
23 68 0.035358188 ubox
24 30 0.006684965 ubox
24 67 0.036529206 ubox
24 72 0.589836323 ubox
25 35 0.019184428 ubox
25 66 0.036266991 ubox
25 71 0.587471442 ubox
25 73 0.005283222 ubox
26 34 0.020457015 ubox
26 69 0.890230225 ubox
26 70 0.417755376 ubox
26 72 0.003852507 ubox
27 33 0.020102262 ubox
27 68 0.983137928 ubox
28 32 0.013636343 ubox
28 67 0.983636276 ubox
29 62 0.003224488 ubox
29 64 0.013410961 ubox
29 65 0.324451926 ubox
29 66 0.880170159 ubox
30 61 0.003250270 ubox
30 63 0.028498470 ubox
30 64 0.379633471 ubox
30 66 0.284834942 ubox
31 62 0.027287518 ubox
31 63 0.324122449 ubox
31 64 0.834911144 ubox
31 65 0.271014129 ubox
32 61 0.025959081 ubox
32 62 0.257438533 ubox
32 63 0.897452669 ubox
32 64 0.199772682 ubox
32 65 0.008152810 ubox
33 61 0.163725336 ubox
33 62 0.944901464 ubox
33 63 0.084116208 ubox
33 64 0.007976030 ubox
34 56 0.004842864 ubox
34 61 0.969488908 ubox
34 63 0.007975749 ubox
35 55 0.004249971 ubox
35 60 0.963837844 ubox
36 57 0.032059863 ubox
36 60 0.029583768 ubox
36 72 0.032964542 ubox
37 56 0.017646859 ubox
37 59 0.233520332 ubox
37 71 0.032993352 ubox
38 55 0.022175802 ubox
38 58 0.255418733 ubox
38 70 0.033135921 ubox
39 54 0.015959962 ubox
39 55 0.958028655 ubox
39 57 0.167604117 ubox
39 58 0.026652235 ubox
39 69 0.033133861 ubox
40 53 0.013566701 ubox
40 54 0.977221152 ubox
40 55 0.040828270 ubox
40 57 0.025778745 ubox
40 68 0.033066685 ubox
41 53 0.986522210 ubox
41 54 0.029610834 ubox
41 67 0.032850750 ubox
41 72 0.004839344 ubox
42 52 0.988095564 ubox
42 66 0.032083479 ubox
42 71 0.004844011 ubox
43 51 0.988131697 ubox
43 56 0.008679152 ubox
43 61 0.018249468 ubox
44 50 0.985688408 ubox
44 55 0.008698821 ubox
44 60 0.018241700 ubox
45 49 0.964084496 ubox
45 54 0.008644372 ubox
45 68 0.004046187 ubox
46 53 0.008120961 ubox
46 58 0.018010142 ubox
46 67 0.004190695 ubox
47 57 0.014572302 ubox
47 72 0.007182999 ubox
48 56 0.006190232 ubox
48 62 0.020423541 ubox
48 64 0.005358038 ubox
48 65 0.008951169 ubox
48 71 0.007400704 ubox
49 61 0.020721015 ubox
49 63 0.007126736 ubox
49 64 0.009163582 ubox
50 59 0.018659753 ubox
50 62 0.007154840 ubox
50 63 0.008859850 ubox
50 71 0.057240878 ubox
50 73 0.003390147 ubox
51 58 0.021897175 ubox
51 68 0.046218822 ubox
51 69 0.010827868 ubox
51 70 0.077802957 ubox
51 72 0.005713161 ubox
52 57 0.014918515 ubox
52 60 0.005069853 ubox
52 67 0.051209437 ubox
52 69 0.077675768 ubox
52 72 0.007379040 ubox
53 62 0.004605983 ubox
53 66 0.051461096 ubox
53 71 0.006743270 ubox
54 61 0.005201014 ubox
54 62 0.004348537 ubox
54 63 0.003955470 ubox
54 65 0.051031475 ubox
54 66 0.006903922 ubox
55 61 0.004464067 ubox
55 62 0.005836363 ubox
55 63 0.003169491 ubox
55 64 0.050337737 ubox
55 65 0.006843612 ubox
55 73 0.037832328 ubox
56 67 0.018703653 ubox
56 70 0.003537555 ubox
56 72 0.064649590 ubox
57 64 0.038335045 ubox
57 65 0.067507049 ubox
57 66 0.013334587 ubox
57 71 0.018857698 ubox
58 63 0.040905472 ubox
58 64 0.068341747 ubox
58 71 0.069194512 ubox
58 73 0.095768293 ubox
59 67 0.007715921 ubox
59 70 0.071505844 ubox
59 72 0.105044589 ubox
60 66 0.007674364 ubox
60 71 0.104698285 ubox
60 73 0.012961258 ubox
61 69 0.083610701 ubox
61 70 0.094599378 ubox
61 72 0.021982279 ubox
62 68 0.092508651 ubox
63 67 0.090537086 ubox
63 69 0.051103733 ubox
63 70 0.036669039 ubox
64 68 0.033128620 ubox
64 69 0.037222295 ubox
66 72 0.011828718 ubox
67 71 0.011757998 ubox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
20 73 0.9500000 lbox
21 72 0.9500000 lbox
22 71 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
34 61 0.9500000 lbox
35 60 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
