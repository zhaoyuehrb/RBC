%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGUUGUGAAUCCAUGCUAAAGGUAAACAAACUGCAACUUAUAUCUGCAAUUUAUUUUGGUAUAGACAAGAGGUAUGCCAGUAGCACACUGGUGGCUUCAGAAGAAAUUCUCAACACCUAGCUCGCCAGAGAGUCUAUGUAUGGGAUUGAACAAUCUGUAAACUAAAGGAUCCUAAUC\
) } def
/len { sequence length } bind def

/coor [
[115.43299103 319.43576050]
[123.46816254 306.68692017]
[134.22726440 296.13519287]
[147.13003540 288.34963989]
[142.54406738 274.06787109]
[137.95808411 259.78613281]
[133.37211609 245.50434875]
[128.78613281 231.22259521]
[124.20015717 216.94082642]
[119.61417389 202.65905762]
[105.99792480 191.60566711]
[110.00381470 173.64477539]
[105.17200470 159.44430542]
[100.34020233 145.24382019]
[95.50839233 131.04333496]
[90.67658997 116.84285736]
[77.90732574 108.97229004]
[63.05011368 111.03709412]
[48.19290924 113.10189819]
[33.33570099 115.16670227]
[18.47849464 117.23149872]
[3.62128878 119.29630280]
[-11.23591805 121.36110687]
[-26.09312439 123.42591095]
[-40.95033264 125.49071503]
[-49.04422760 129.78164673]
[-56.08155823 127.46063995]
[-70.97219086 129.26869202]
[-85.86282349 131.07673645]
[-100.75345612 132.88479614]
[-104.61986542 140.34811401]
[-111.05824280 145.60397339]
[-118.96340942 147.84654236]
[-127.01594543 146.77915955]
[-133.90235901 142.65127563]
[-138.52934265 136.20532227]
[-153.50923157 136.98173523]
[-168.48912048 137.75816345]
[-183.46902466 138.53457642]
[-191.03729248 151.97798157]
[-204.68284607 159.17535400]
[-220.05143738 157.83007812]
[-232.23901367 148.37139893]
[-237.35655212 133.81755066]
[-233.77107239 118.81262207]
[-222.62667847 108.14463043]
[-207.47952271 105.21768188]
[-193.16297913 110.96576691]
[-184.24543762 123.55468750]
[-169.26554871 122.77826691]
[-154.28565979 122.00184631]
[-139.30575562 121.22542572]
[-122.43901825 107.67652130]
[-102.56150818 117.99415588]
[-87.67087555 116.18610382]
[-72.78024292 114.37805176]
[-57.88960648 112.57000732]
[-43.01513290 110.63350677]
[-28.15792656 108.56870270]
[-13.30072117 106.50389862]
[1.55648601 104.43909454]
[16.41369247 102.37429810]
[31.27089882 100.30949402]
[46.12810516 98.24468994]
[60.98531342 96.17988586]
[75.84252167 94.11508179]
[60.84607315 93.78862762]
[49.93988419 83.49032593]
[48.75484085 68.53720856]
[57.90278625 56.64960861]
[72.66061401 53.96511841]
[85.40882874 61.86974335]
[89.56531525 76.28435516]
[87.75726318 61.39372253]
[85.94921112 46.50308990]
[84.14116669 31.61245728]
[82.33311462 16.72182274]
[72.66943359 8.15366364]
[71.48258209 -4.30386877]
[78.86627197 -13.90599155]
[77.31551361 -28.82561493]
[75.76475525 -43.74523926]
[74.21399689 -58.66485977]
[72.66323853 -73.58448029]
[71.11248016 -88.50410461]
[59.61260605 -99.69036865]
[61.33165359 -115.64105988]
[74.95092010 -124.12016296]
[90.02285767 -118.62324524]
[94.98558044 -103.36707306]
[86.03209686 -90.05486298]
[87.58285522 -75.13524628]
[89.13362122 -60.21561813]
[90.68437958 -45.29599762]
[92.23513794 -30.37637329]
[93.78589630 -15.45675087]
[104.83783722 -1.83931947]
[97.22374725 14.91377258]
[99.03179932 29.80440521]
[100.83984375 44.69503784]
[102.64789581 59.58567047]
[104.45594788 74.47630310]
[119.02007294 78.06604004]
[127.54104614 65.72128296]
[136.06201172 53.37652588]
[144.58299255 41.03176498]
[145.36251831 24.65115738]
[160.06033325 17.37746620]
[173.55656433 26.69324493]
[171.96745300 43.01521683]
[156.92774963 49.55273819]
[148.40676880 61.89749527]
[139.88580322 74.24225616]
[131.36483765 86.58701324]
[135.46409607 92.86762238]
[148.02545166 84.66931152]
[156.22355652 97.23081207]
[143.66261292 105.42884827]
[147.76187134 111.70945740]
[162.49227905 108.87839508]
[174.58410645 98.67553711]
[188.54296875 103.87166595]
[203.27337646 101.04060364]
[218.00378418 98.20954132]
[232.70921326 95.25144958]
[247.38856506 92.16654968]
[262.06793213 89.08164978]
[270.49505615 75.71157837]
[285.92630005 72.29793549]
[299.20651245 80.86596680]
[302.45681763 96.33241272]
[293.74887085 109.52130890]
[278.24893188 112.60791779]
[265.15283203 103.76100159]
[250.47346497 106.84590149]
[235.79411316 109.93080139]
[229.87953186 114.39496613]
[220.83485413 112.93994904]
[206.10444641 115.77101898]
[191.37402344 118.60208130]
[180.33581543 128.60243225]
[165.32334900 123.60880280]
[150.59292603 126.43987274]
[136.45489502 128.14384460]
[123.55097198 125.92398071]
[112.77752686 120.30863190]
[104.87706757 112.01105499]
[109.70887756 126.21153259]
[114.54067993 140.41201782]
[119.37248993 154.61248779]
[124.20429230 168.81297302]
[135.42352295 175.21054077]
[139.14701843 187.15768433]
[133.89593506 198.07308960]
[138.48191833 212.35484314]
[143.06790161 226.63661194]
[147.65386963 240.91838074]
[152.23985291 255.20014954]
[156.82583618 269.48190308]
[161.41180420 283.76367188]
[176.43513489 282.58197021]
[191.32592773 284.89730835]
[205.28115845 290.58486938]
[217.54823303 299.33789062]
[227.46560669 310.68435669]
[234.49844360 324.01239014]
[238.26747131 338.60317993]
[238.56944275 353.66986084]
[235.38804626 368.39996338]
[228.89488220 381.99905396]
[219.44009399 393.73379517]
[207.53358459 402.97128296]
[193.81744385 409.21343994]
[179.03137207 412.12356567]
[163.97276306 411.54473877]
[149.45372009 407.50817871]
[136.25720215 400.23159790]
[125.09492493 390.10736084]
[116.56882477 377.68148804]
[111.13871002 363.62408447]
[109.09742737 348.69323730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 66]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[27 57]
[28 56]
[29 55]
[30 54]
[36 52]
[37 51]
[38 50]
[39 49]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[103 114]
[104 113]
[105 112]
[106 111]
[119 143]
[120 142]
[122 140]
[123 139]
[124 138]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
