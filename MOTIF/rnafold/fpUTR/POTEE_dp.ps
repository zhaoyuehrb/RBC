%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POTEE)
} def

/sequence { (\
GGUAGACGCGAUCUGUUGGCUACUACUGGCUUCUCCUGGCUGUUAAAAGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.032863075 ubox
1 14 0.012095586 ubox
1 17 0.063465723 ubox
1 21 0.065900302 ubox
1 24 0.277111682 ubox
1 27 0.682885441 ubox
1 31 0.004744092 ubox
1 33 0.007873864 ubox
1 34 0.003730342 ubox
1 35 0.010539273 ubox
1 36 0.545132887 ubox
1 37 0.107167250 ubox
1 41 0.006272639 ubox
1 44 0.004447439 ubox
2 9 0.051255774 ubox
2 12 0.032956971 ubox
2 13 0.012790290 ubox
2 16 0.071054520 ubox
2 20 0.069823108 ubox
2 23 0.295466734 ubox
2 26 0.732362709 ubox
2 30 0.005109647 ubox
2 32 0.004918514 ubox
2 33 0.004303749 ubox
2 34 0.006008244 ubox
2 35 0.546475728 ubox
2 36 0.113404199 ubox
2 40 0.006986123 ubox
2 43 0.004569785 ubox
2 50 0.014491870 ubox
3 8 0.049189298 ubox
3 11 0.032628665 ubox
3 15 0.126380598 ubox
3 18 0.009859383 ubox
3 19 0.064827798 ubox
3 22 0.295513494 ubox
3 25 0.732542308 ubox
3 29 0.004281063 ubox
3 38 0.011713219 ubox
3 39 0.006664802 ubox
3 42 0.007927961 ubox
3 45 0.009583931 ubox
3 49 0.014146684 ubox
4 14 0.139129528 ubox
4 17 0.010522960 ubox
4 21 0.295404822 ubox
4 24 0.732467813 ubox
4 27 0.003839681 ubox
4 32 0.004329320 ubox
4 34 0.551067224 ubox
4 37 0.012762633 ubox
4 41 0.008848962 ubox
4 44 0.008808623 ubox
5 13 0.140352701 ubox
5 16 0.007604563 ubox
5 17 0.102037858 ubox
5 20 0.286318566 ubox
5 23 0.731164693 ubox
5 26 0.003922891 ubox
5 32 0.033730831 ubox
5 33 0.559313464 ubox
5 35 0.008845156 ubox
5 36 0.012552650 ubox
5 40 0.008702523 ubox
5 43 0.006966167 ubox
5 44 0.055894267 ubox
6 12 0.132559957 ubox
6 16 0.124345920 ubox
6 31 0.037325585 ubox
6 32 0.552233978 ubox
6 34 0.009023950 ubox
6 43 0.058144082 ubox
7 15 0.126175000 ubox
7 18 0.244564520 ubox
7 38 0.029298547 ubox
7 42 0.058535292 ubox
8 14 0.102327009 ubox
8 16 0.181080179 ubox
8 17 0.198112962 ubox
8 20 0.723080691 ubox
8 30 0.534135750 ubox
8 37 0.028824795 ubox
8 40 0.063672373 ubox
8 41 0.017261167 ubox
8 43 0.006141820 ubox
8 50 0.018605163 ubox
9 15 0.237015473 ubox
9 18 0.178728822 ubox
9 19 0.716098081 ubox
9 28 0.021124189 ubox
9 29 0.534001099 ubox
9 38 0.010453752 ubox
9 39 0.064936813 ubox
9 42 0.006368370 ubox
9 49 0.018598450 ubox
10 14 0.146472969 ubox
10 17 0.197005336 ubox
10 27 0.025546969 ubox
10 32 0.003885831 ubox
10 33 0.021148077 ubox
10 35 0.036073767 ubox
10 37 0.009451936 ubox
10 41 0.006181355 ubox
11 16 0.177375116 ubox
11 31 0.005685415 ubox
11 32 0.021015335 ubox
11 34 0.035414400 ubox
12 19 0.032047504 ubox
12 29 0.012714213 ubox
12 39 0.008374376 ubox
13 18 0.088042771 ubox
13 19 0.011383150 ubox
13 28 0.069444296 ubox
13 29 0.009057367 ubox
13 38 0.014273529 ubox
13 39 0.004237474 ubox
13 49 0.007543609 ubox
13 52 0.081879848 ubox
14 18 0.011697265 ubox
14 22 0.014996101 ubox
14 25 0.051851943 ubox
14 28 0.014643351 ubox
14 38 0.004519451 ubox
14 45 0.009234517 ubox
14 48 0.007645812 ubox
14 51 0.084714620 ubox
15 21 0.015136050 ubox
15 23 0.464107636 ubox
15 24 0.040045565 ubox
15 26 0.201088916 ubox
15 27 0.011099404 ubox
15 30 0.040843413 ubox
15 37 0.003567202 ubox
15 40 0.004131430 ubox
15 44 0.009704179 ubox
15 50 0.085097075 ubox
16 22 0.459280771 ubox
16 25 0.192689951 ubox
16 29 0.040892550 ubox
16 39 0.004163945 ubox
16 46 0.014530863 ubox
16 49 0.084638570 ubox
16 52 0.020993775 ubox
17 25 0.064991713 ubox
17 28 0.043536811 ubox
17 38 0.004270982 ubox
17 42 0.014185219 ubox
17 45 0.021333924 ubox
17 47 0.003987584 ubox
17 48 0.081015393 ubox
17 51 0.031873718 ubox
18 24 0.086758982 ubox
18 27 0.045319392 ubox
18 31 0.208916769 ubox
18 32 0.005487988 ubox
18 33 0.005689602 ubox
18 41 0.019348896 ubox
18 44 0.023974347 ubox
18 50 0.025627714 ubox
19 23 0.086482447 ubox
19 26 0.045696861 ubox
19 30 0.217779519 ubox
19 40 0.019696493 ubox
19 43 0.024269658 ubox
19 50 0.162326805 ubox
20 29 0.217839825 ubox
20 39 0.019701093 ubox
20 42 0.024290916 ubox
20 49 0.164067478 ubox
21 28 0.215513642 ubox
21 38 0.019603026 ubox
21 45 0.018461400 ubox
21 48 0.160286252 ubox
22 27 0.187589376 ubox
22 37 0.018700938 ubox
22 43 0.067786741 ubox
22 44 0.017880638 ubox
23 29 0.005151121 ubox
23 39 0.018315883 ubox
23 42 0.068605657 ubox
23 49 0.011561483 ubox
23 52 0.006484366 ubox
24 28 0.004843041 ubox
24 38 0.018483531 ubox
24 42 0.005816132 ubox
24 45 0.123712522 ubox
24 48 0.011424066 ubox
24 51 0.006638307 ubox
25 37 0.016823358 ubox
25 41 0.007188954 ubox
25 43 0.141245671 ubox
25 44 0.125737370 ubox
26 39 0.080034122 ubox
26 42 0.148973601 ubox
26 49 0.020980722 ubox
26 52 0.034425128 ubox
27 38 0.082881054 ubox
27 42 0.197149960 ubox
27 45 0.030972561 ubox
27 48 0.020552138 ubox
27 51 0.035008092 ubox
28 34 0.032936544 ubox
28 35 0.052701425 ubox
28 36 0.210253117 ubox
28 37 0.096696977 ubox
28 41 0.569387470 ubox
28 44 0.038900736 ubox
28 50 0.028907089 ubox
29 33 0.035455510 ubox
29 34 0.037561988 ubox
29 35 0.209275435 ubox
29 36 0.097628981 ubox
29 40 0.618036989 ubox
29 43 0.041383836 ubox
29 50 0.083938414 ubox
30 39 0.620190449 ubox
30 42 0.041591914 ubox
30 49 0.085998481 ubox
30 52 0.011856372 ubox
31 38 0.609716686 ubox
31 39 0.003986981 ubox
31 47 0.005820018 ubox
31 48 0.085146745 ubox
31 51 0.011961781 ubox
32 38 0.012291578 ubox
32 39 0.045475190 ubox
32 46 0.006593270 ubox
32 47 0.076752225 ubox
32 51 0.004086562 ubox
33 38 0.091307966 ubox
33 39 0.033597172 ubox
33 49 0.004533994 ubox
33 52 0.024476001 ubox
34 38 0.030698171 ubox
34 48 0.004515525 ubox
34 51 0.024873997 ubox
36 49 0.008482555 ubox
36 52 0.284795585 ubox
37 45 0.013353879 ubox
37 48 0.008578639 ubox
37 51 0.299315946 ubox
38 44 0.013943170 ubox
38 50 0.215689831 ubox
39 43 0.009216766 ubox
39 50 0.680440398 ubox
40 49 0.713637580 ubox
40 52 0.285766758 ubox
41 48 0.709385950 ubox
41 51 0.337561574 ubox
42 50 0.405043958 ubox
43 49 0.401225508 ubox
43 52 0.011769662 ubox
44 48 0.305891458 ubox
44 51 0.016303868 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
