%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAAGGGGAGGGAAAAGGGGAGGAGGAGGAGGAUGUGAGACUGGGUUAGAGAAAUGAAAGAAAGCAAGGCUUUCUGUUGACAUUCAGUGCAGUCUACCUGCAGCACAGCACACUCCCUUUGGGCAAGGACCUGAGACCCUUGUGCUAAGUCAAGAGGCUCA\
) } def
/len { sequence length } bind def

/coor [
[198.87561035 416.89782715]
[184.25692749 413.53713989]
[173.67962646 402.90130615]
[170.39970398 388.26431274]
[175.42678833 374.13177490]
[187.21342468 364.85409546]
[202.13136292 363.28717041]
[215.58930969 369.91412354]
[209.52285767 356.19561768]
[203.45640564 342.47708130]
[187.91340637 344.24035645]
[172.56584167 341.11715698]
[158.91429138 333.40063477]
[148.29721069 321.83358765]
[141.75982666 307.53704834]
[139.95117188 291.90158081]
[143.05970764 276.45208740]
[150.79371643 262.69900513]
[162.40869141 251.99070740]
[156.08370972 238.38943481]
[149.75874329 224.78816223]
[143.43376160 211.18688965]
[137.10877991 197.58561707]
[130.78381348 183.98434448]
[124.45883179 170.38307190]
[118.13385010 156.78178406]
[103.97715759 159.47428894]
[89.58801270 158.69070435]
[75.80741119 154.47685242]
[63.44079208 147.07901001]
[53.21092987 136.92955017]
[45.71573639 124.62168121]
[41.39327621 110.87476349]
[40.49618530 96.49224854]
[43.07689285 82.31474304]
[48.98456573 69.17089081]
[57.87392044 57.82889557]
[69.22540283 48.95166016]
[63.15895462 35.23312759]
[57.09250259 21.51459503]
[51.02605057 7.79606152]
[44.57265472 -5.74475384]
[37.73751450 -19.09693909]
[30.90237617 -32.44912720]
[24.06723595 -45.80131149]
[17.23209763 -59.15349960]
[10.39695835 -72.50568390]
[-2.77877283 -81.26414490]
[-1.69095957 -96.11897278]
[-8.52609825 -109.47116089]
[-15.36123753 -122.82334900]
[-22.08725166 -129.07038879]
[-22.19668388 -136.49351501]
[-28.77791977 -149.97265625]
[-35.35915756 -163.45179749]
[-50.42135239 -161.91700745]
[-65.07234192 -165.62112427]
[-77.54857635 -174.09837341]
[-86.35511017 -186.30964661]
[-90.44468689 -200.76982117]
[-89.34230804 -215.72840881]
[-83.20027161 -229.38140869]
[-72.77748108 -240.08892822]
[-79.35871887 -253.56806946]
[-85.93995667 -267.04721069]
[-92.52119446 -280.52636719]
[-99.10243225 -294.00549316]
[-105.68367004 -307.48464966]
[-112.26490021 -320.96377563]
[-124.64760590 -332.54415894]
[-116.94767761 -347.64871216]
[-100.30186462 -344.43106079]
[-98.78575897 -327.54501343]
[-92.20452118 -314.06588745]
[-85.62328339 -300.58673096]
[-79.04204559 -287.10760498]
[-72.46081543 -273.62844849]
[-65.87957764 -260.14929199]
[-59.29833984 -246.67016602]
[-44.44516754 -248.30372620]
[-29.90204430 -244.75032043]
[-17.42881584 -236.42007446]
[-8.54164124 -224.30233765]
[-4.32870817 -209.84822083]
[-5.31702185 -194.79685974]
[-11.40655804 -180.96611023]
[-21.88001251 -170.03303528]
[-15.29877663 -156.55389404]
[-8.71753979 -143.07475281]
[-2.00905156 -129.65849304]
[4.82608747 -116.30629730]
[11.66122627 -102.95411682]
[24.34806252 -95.15068817]
[23.74914551 -79.34082031]
[30.58428383 -65.98863983]
[37.41942215 -52.63645172]
[44.25456238 -39.28426361]
[51.08970261 -25.93207932]
[57.92483902 -12.57989311]
[61.19565964 -11.15523911]
[63.92464447 -8.05143642]
[65.31916809 -3.54743099]
[64.74458313 1.72960961]
[70.81103516 15.44814301]
[76.87748718 29.16667557]
[82.94393921 42.88520813]
[98.25636292 40.41839218]
[113.68683624 41.98552704]
[128.19064331 47.48051834]
[140.78581238 56.53132248]
[150.61959839 68.52516174]
[157.02618408 82.65000153]
[159.57183838 97.94951630]
[158.08419800 113.38785553]
[152.66398621 127.91977692]
[143.67816162 140.56138611]
[131.73512268 150.45681763]
[138.06010437 164.05809021]
[144.38508606 177.65936279]
[150.71005249 191.26063538]
[157.03503418 204.86190796]
[163.36001587 218.46318054]
[169.68499756 232.06445312]
[176.00996399 245.66574097]
[190.28927612 243.65933228]
[204.53857422 245.76242065]
[217.60046387 251.79508972]
[228.41662598 261.25863647]
[236.11344910 273.37673950]
[240.07269287 287.15924072]
[239.98103333 301.48287964]
[235.85494995 315.18307495]
[228.03854370 327.14831543]
[217.17494202 336.41061401]
[223.24139404 350.12915039]
[229.30784607 363.84768677]
[236.51922607 377.00048828]
[244.82324219 389.49221802]
[253.12727356 401.98391724]
[260.51782227 407.42861938]
[261.46762085 414.79156494]
[269.53378296 427.43817139]
[277.71923828 440.00793457]
[286.02325439 452.49966431]
[294.32727051 464.99136353]
[302.63131714 477.48309326]
[318.13995361 477.99438477]
[330.36547852 487.55035400]
[334.60690308 502.47650146]
[329.23333740 517.03344727]
[316.31100464 525.62371826]
[300.80880737 524.94421387]
[288.68765259 515.25616455]
[284.60839844 500.28491211]
[290.13958740 485.78710938]
[281.83557129 473.29541016]
[273.53152466 460.80368042]
[265.22750854 448.31195068]
[258.87774658 444.46548462]
[256.88714600 435.50433350]
[248.82099915 422.85769653]
[240.63554382 410.28796387]
[232.33152771 397.79623413]
[224.02749634 385.30450439]
[222.37826538 400.21356201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 136]
[9 135]
[10 134]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[38 106]
[39 105]
[40 104]
[41 103]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[47 94]
[49 92]
[50 91]
[51 90]
[53 89]
[54 88]
[55 87]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[137 164]
[138 163]
[139 162]
[141 161]
[142 160]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
