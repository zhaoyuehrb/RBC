%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCAI)
} def

/sequence { (\
AAGCCUGGCAGAGGCGCGAGGCCCUCCUCCCGCCUCUCCGCCUACUCCAGCCUCCGCCGCCUCAGCUUCCCGAGCGAGCCCUGCGGCCGCCGGAGCAGCUCCCGCGGCGGAGCAGGAGCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 43 0.141913780 ubox
2 46 0.007717333 ubox
3 9 0.032436254 ubox
3 41 0.235309067 ubox
3 42 0.142012683 ubox
3 45 0.011325942 ubox
3 119 0.030382670 ubox
4 8 0.032234478 ubox
4 40 0.238129075 ubox
4 116 0.005293795 ubox
4 118 0.026233937 ubox
4 122 0.152724859 ubox
5 115 0.005329722 ubox
5 121 0.155359778 ubox
5 122 0.139194036 ubox
6 40 0.584513625 ubox
6 44 0.061809996 ubox
6 114 0.005098701 ubox
6 121 0.142114670 ubox
7 38 0.008683925 ubox
7 39 0.823435551 ubox
7 42 0.542320111 ubox
7 43 0.015505657 ubox
7 120 0.146070149 ubox
8 37 0.004389973 ubox
8 38 0.824034467 ubox
8 41 0.543771603 ubox
8 42 0.011671213 ubox
8 119 0.145520498 ubox
9 40 0.542418139 ubox
9 118 0.135389790 ubox
10 37 0.973881941 ubox
10 46 0.008012457 ubox
11 36 0.999457152 ubox
11 38 0.016301359 ubox
11 45 0.012177911 ubox
12 35 0.999411112 ubox
12 37 0.013324633 ubox
12 43 0.025376510 ubox
13 34 0.999622393 ubox
13 36 0.007273427 ubox
13 42 0.026011194 ubox
14 33 0.999650000 ubox
14 41 0.026014819 ubox
15 32 0.999634855 ubox
15 40 0.026014335 ubox
16 31 0.998419974 ubox
16 39 0.025930568 ubox
18 26 0.003751024 ubox
18 29 0.997262546 ubox
18 36 0.025959654 ubox
19 25 0.003775254 ubox
19 28 0.999464309 ubox
19 35 0.025996124 ubox
20 24 0.003724317 ubox
20 26 0.008509896 ubox
20 27 0.999501849 ubox
20 34 0.026023697 ubox
21 25 0.007771171 ubox
21 26 0.983342128 ubox
21 27 0.003922067 ubox
21 33 0.026030076 ubox
22 32 0.025993195 ubox
37 117 0.003248002 ubox
38 116 0.004380498 ubox
38 122 0.034452116 ubox
39 115 0.004378870 ubox
39 121 0.035448724 ubox
40 51 0.007280762 ubox
40 119 0.022524149 ubox
40 120 0.037003515 ubox
41 50 0.007237848 ubox
41 116 0.008032663 ubox
41 118 0.020378844 ubox
41 122 0.709369481 ubox
42 115 0.008059517 ubox
42 118 0.007420367 ubox
42 121 0.730284724 ubox
42 122 0.087325257 ubox
43 114 0.007961862 ubox
43 117 0.005186070 ubox
43 121 0.091055703 ubox
45 116 0.003398643 ubox
45 118 0.986225569 ubox
45 122 0.003298263 ubox
46 115 0.003269984 ubox
46 117 0.998435048 ubox
47 116 0.999835299 ubox
47 122 0.006329829 ubox
48 115 0.998129108 ubox
48 121 0.006467894 ubox
50 113 0.970084010 ubox
50 119 0.006626929 ubox
51 112 0.688130263 ubox
51 118 0.006625124 ubox
52 112 0.725049772 ubox
53 111 0.998086320 ubox
54 110 0.999982357 ubox
55 109 0.999976188 ubox
56 108 0.999981671 ubox
57 107 0.999995589 ubox
58 106 0.999978304 ubox
59 105 0.999961912 ubox
60 104 0.998734299 ubox
61 98 0.027043628 ubox
62 97 0.025059214 ubox
64 100 0.968090140 ubox
65 75 0.003512391 ubox
65 96 0.055681590 ubox
65 99 0.998261938 ubox
66 74 0.003517430 ubox
66 95 0.055944745 ubox
66 98 0.998136990 ubox
67 73 0.003494032 ubox
67 94 0.050253848 ubox
67 95 0.156516498 ubox
67 97 0.942254788 ubox
67 98 0.007784229 ubox
68 93 0.012510523 ubox
68 94 0.401901039 ubox
68 97 0.051454153 ubox
69 92 0.008102050 ubox
69 93 0.350152813 ubox
70 92 0.271913971 ubox
70 93 0.934744473 ubox
71 92 0.962111462 ubox
72 91 0.986595405 ubox
74 90 0.999869129 ubox
75 89 0.999968618 ubox
76 88 0.999437889 ubox
76 101 0.003591151 ubox
77 100 0.003600334 ubox
78 84 0.007989488 ubox
78 87 0.999816788 ubox
78 99 0.003602666 ubox
79 83 0.007936609 ubox
79 86 0.999665174 ubox
79 98 0.003588528 ubox
80 85 0.996660348 ubox
80 86 0.023287472 ubox
81 85 0.031921792 ubox
81 95 0.003523097 ubox
82 94 0.003524170 ubox
84 92 0.003545613 ubox
85 91 0.003550103 ubox
86 90 0.003492809 ubox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
41 122 0.9500000 lbox
42 121 0.9500000 lbox
45 118 0.9500000 lbox
46 117 0.9500000 lbox
47 116 0.9500000 lbox
48 115 0.9500000 lbox
50 113 0.9500000 lbox
51 112 0.9500000 lbox
53 111 0.9500000 lbox
54 110 0.9500000 lbox
55 109 0.9500000 lbox
56 108 0.9500000 lbox
57 107 0.9500000 lbox
58 106 0.9500000 lbox
59 105 0.9500000 lbox
60 104 0.9500000 lbox
64 100 0.9500000 lbox
65 99 0.9500000 lbox
66 98 0.9500000 lbox
67 97 0.9500000 lbox
70 93 0.9500000 lbox
71 92 0.9500000 lbox
72 91 0.9500000 lbox
74 90 0.9500000 lbox
75 89 0.9500000 lbox
76 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
80 85 0.9500000 lbox
showpage
end
%%EOF
