%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUCGCAGGACAGCUCUUACCUGCCGGGCCGCCGCCCCAGCCAACAGCUCAGCCGGGUGCUCCUUCCUGGGCUCCACGCCCGGAGCUGCUUCCUGACGGUGCAGCCGCAAGGCAUCGCAGGGGCCCCGCGCUACUGCCCUGCUCCCUCAAAGUCCCAGGUCCCCUCCCCUGGUGCUGAUCAUUAACCAGGAGGCCGUAUAAGGAGCUAGCGGCCCUGGCGAGAGGGAAGGACGCAACGCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-17.79943085 895.14428711]
[-32.83483124 897.56433105]
[-47.55300903 893.65344238]
[-59.40394592 884.08917236]
[-66.33439636 870.52862549]
[-67.14362335 855.32122803]
[-61.69141769 841.10174561]
[-50.92240906 830.33380127]
[-36.70239258 824.88305664]
[-35.95172882 809.90185547]
[-35.20106125 794.92065430]
[-34.45039749 779.93939209]
[-47.03469849 771.97064209]
[-53.98690796 758.68450928]
[-53.35118484 743.60266113]
[-45.19821548 730.77978516]
[-31.63307381 723.71337891]
[-30.88240814 708.73217773]
[-30.22551346 693.74652100]
[-29.66241074 678.75714111]
[-29.09930992 663.76770020]
[-28.53620911 648.77825928]
[-35.79027176 635.76947021]
[-27.54036522 622.26953125]
[-26.97726440 607.28009033]
[-26.41416359 592.29064941]
[-26.22642326 577.29180908]
[-26.41416359 562.29302979]
[-26.60190392 547.29418945]
[-26.88350296 532.29681396]
[-27.25895309 517.30151367]
[-27.63440323 502.30621338]
[-28.00985336 487.31091309]
[-28.38530350 472.31561279]
[-28.76075363 457.32031250]
[-29.13620377 442.32501221]
[-39.97386932 436.12930298]
[-45.37725067 423.17636108]
[-59.61971283 427.88296509]
[-73.86217499 432.58959961]
[-88.10463715 437.29620361]
[-101.80784607 455.04183960]
[-122.78712463 449.68856812]
[-136.77619934 455.10205078]
[-150.76527405 460.51553345]
[-158.53984070 474.54888916]
[-174.38229370 477.07797241]
[-186.13966370 466.16265869]
[-184.79269409 450.17626953]
[-171.37466431 441.38217163]
[-156.17875671 446.52645874]
[-142.18968201 441.11297607]
[-128.20059204 435.69949341]
[-126.63706970 428.03573608]
[-122.13076019 421.52838135]
[-115.34810638 417.26922607]
[-107.34413147 416.00781250]
[-99.39856720 418.02038574]
[-92.81125641 423.05374146]
[-78.56879425 418.34713745]
[-64.32633209 413.64050293]
[-50.08386993 408.93389893]
[-39.71211624 398.09753418]
[-35.63373184 383.66262817]
[-31.55534935 369.22769165]
[-27.47696877 354.79278564]
[-23.39858627 340.35787964]
[-19.32020378 325.92294312]
[-15.24182034 311.48803711]
[-23.26716614 302.12069702]
[-25.47872162 289.98553467]
[-39.25471497 284.05072021]
[-53.03070831 278.11590576]
[-66.80670166 272.18109131]
[-80.58269501 266.24630737]
[-94.35869598 260.31149292]
[-109.73701477 264.88168335]
[-122.81544495 255.59007263]
[-123.56134033 239.56436157]
[-111.40249634 229.09812927]
[-95.66615295 232.22015381]
[-88.42388153 246.53549194]
[-74.64788818 252.47030640]
[-60.87189102 258.40512085]
[-47.09589767 264.33993530]
[-33.31990433 270.27471924]
[-19.54390907 276.20953369]
[-9.77981853 269.05996704]
[2.52606845 267.57592773]
[9.56077385 254.32780457]
[8.69596291 239.45832825]
[22.00162315 230.89854431]
[29.03632736 217.65040588]
[36.07103348 204.40228271]
[43.10573578 191.15414429]
[50.14044189 177.90602112]
[57.17514801 164.65789795]
[64.20985413 151.40975952]
[71.24456024 138.16163635]
[55.14572525 119.64391327]
[50.09615707 95.01950073]
[57.97333145 70.51824188]
[77.30654907 52.63499069]
[72.51088715 38.42226410]
[67.71523285 24.20953369]
[53.83309937 17.14383125]
[49.17208481 2.66178656]
[55.99370193 -10.52916145]
[51.19804764 -24.74188995]
[46.40238953 -38.95462036]
[33.74181366 -49.37775803]
[36.70475769 -65.50701904]
[52.24319839 -70.75000000]
[64.37252045 -59.71316910]
[60.61511612 -43.75027847]
[65.41077423 -29.53754807]
[70.20643616 -15.32481956]
[83.62539673 -8.96344566]
[88.69133759 5.38196707]
[81.92796326 19.41387558]
[86.72361755 33.62660599]
[91.51927185 47.83933258]
[106.51663208 47.55773544]
[110.77536011 33.17499542]
[115.03408813 18.79225349]
[119.29282379 4.40951300]
[123.46145630 -9.99959755]
[127.53984070 -24.43451309]
[118.11215973 -36.61749268]
[117.67108154 -51.83783722]
[126.17627716 -64.25257111]
[140.19309998 -69.21911621]
[144.27148438 -83.65402985]
[136.33787537 -97.32273865]
[140.47390747 -112.57622528]
[154.22572327 -120.36486816]
[169.43463135 -116.06781006]
[177.07745361 -102.23440552]
[172.61982727 -87.07178497]
[158.70640564 -79.57565308]
[154.62802124 -65.14073181]
[163.97346497 -53.57350922]
[164.72453308 -38.54354477]
[156.38389587 -25.80435371]
[141.97476196 -20.35613060]
[137.89637756 -5.92121506]
[139.09906006 1.35115159]
[133.67556763 8.66824341]
[129.41682434 23.05098343]
[125.15810394 37.43372345]
[120.89936829 51.81646347]
[125.96903992 55.71655273]
[130.41125488 60.12074661]
[134.18020630 64.93572998]
[137.24331665 70.06472015]
[150.26487732 62.61898422]
[163.28643799 55.17324448]
[171.42576599 41.60630035]
[186.31501770 42.00548553]
[199.33657837 34.55974960]
[212.35813904 27.11401176]
[225.37968445 19.66827393]
[238.40124512 12.22253609]
[239.95365906 -3.21668816]
[250.30963135 -14.77235413]
[265.48709106 -18.00107384]
[279.64996338 -11.66133785]
[287.35238647 1.80909598]
[285.63256836 17.23056984]
[275.15185547 28.67321396]
[259.94027710 31.73709679]
[245.84698486 25.24409485]
[232.82542419 32.68983078]
[219.80386353 40.13557053]
[206.78231812 47.58130646]
[193.76075745 55.02704620]
[186.55282593 68.06142426]
[170.73217773 68.19480133]
[157.71061707 75.64054108]
[144.68905640 83.08628082]
[147.20188904 92.57256317]
[147.72377014 102.37213135]
[146.23268127 112.07164764]
[142.79151917 121.26198578]
[137.54541016 129.55549622]
[130.71566772 136.60237122]
[122.59033966 142.10537720]
[113.51216125 145.83238220]
[103.86404419 147.62620544]
[94.05294037 147.41116333]
[84.49268341 145.19633484]
[77.45798492 158.44447327]
[70.42327881 171.69259644]
[63.38857269 184.94071960]
[56.35386658 198.18885803]
[49.31916046 211.43698120]
[42.28445816 224.68511963]
[35.24975204 237.93324280]
[35.61139297 253.75032043]
[22.80890274 261.36251831]
[15.77419758 274.61062622]
[22.47147179 291.73989868]
[15.52605915 308.45709229]
[-0.80690485 315.56640625]
[-4.88528728 330.00134277]
[-8.96366978 344.43624878]
[-13.04205227 358.87115479]
[-17.12043381 373.30609131]
[-21.19881630 387.74099731]
[-25.27719879 402.17590332]
[-6.36307812 410.33691406]
[-2.33169413 428.97680664]
[-14.14090252 441.94958496]
[-13.76545238 456.94488525]
[-13.39000225 471.94018555]
[-13.01455307 486.93548584]
[-12.63910294 501.93078613]
[-12.26365280 516.92608643]
[-11.88820267 531.92138672]
[-8.55214977 540.39636230]
[-11.60307789 547.10644531]
[-11.41533852 562.10528564]
[-11.22759819 577.10406494]
[-8.91352749 580.70910645]
[-7.94803572 584.48321533]
[-8.22075558 587.98638916]
[-9.49102879 590.85827637]
[-11.42473698 592.85375977]
[-11.98783779 607.84320068]
[-12.55093956 622.83264160]
[-5.33715248 636.91351318]
[-13.54678249 649.34136963]
[-14.10988331 664.33081055]
[-14.67298508 679.32019043]
[-15.23608589 694.30963135]
[-12.43659306 702.97662354]
[-15.90120411 709.48278809]
[-16.65186882 724.46398926]
[-3.86105466 732.85107422]
[2.96926355 746.42468262]
[2.09417105 761.49456787]
[-6.15134525 774.01922607]
[-19.46919250 780.69006348]
[-20.21985817 795.67126465]
[-20.97052193 810.65246582]
[-21.72118759 825.63372803]
[-8.11727524 832.47863770]
[1.52139688 844.26916504]
[5.52486944 858.96240234]
[3.19951725 874.01275635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 246]
[10 245]
[11 244]
[12 243]
[17 238]
[18 237]
[19 235]
[20 234]
[21 233]
[22 232]
[24 230]
[25 229]
[26 228]
[27 223]
[28 222]
[29 221]
[30 219]
[31 218]
[32 217]
[33 216]
[34 215]
[35 214]
[36 213]
[38 62]
[39 61]
[40 60]
[41 59]
[43 53]
[44 52]
[45 51]
[63 210]
[64 209]
[65 208]
[66 207]
[67 206]
[68 205]
[69 204]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[89 201]
[90 200]
[92 198]
[93 197]
[94 196]
[95 195]
[96 194]
[97 193]
[98 192]
[99 191]
[103 122]
[104 121]
[105 120]
[108 117]
[109 116]
[110 115]
[123 151]
[124 150]
[125 149]
[126 148]
[127 146]
[128 145]
[132 141]
[133 140]
[155 180]
[156 179]
[157 178]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
