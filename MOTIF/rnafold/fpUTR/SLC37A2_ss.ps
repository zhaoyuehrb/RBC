%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCGGGGAAGCAAAGCACAGGAGCGCUGUGGUGCCAGCGGCCGGGCUAGGGACGACUGGCGGGUUUGCGCUGGACCCGACCCCGAGGGCGGGCGCAAGGGGGCGGGCGCUGCCGUACUCAGGCCGCGGGGCCAGGGCGGGCCGGCCGGCGGGGCAUUUAAACCCCGCUGACAGCCAGUCCAGCCCGGGACACGCGCCCAGCUCUGUAGCCUCCUCCGUCGACUCAGCCUUAGGUACCGGUCAGGCAAA\
) } def
/len { sequence length } bind def

/coor [
[337.06613159 945.67474365]
[351.44024658 941.38690186]
[366.17520142 944.19427490]
[377.96487427 953.46600342]
[373.18759155 939.24707031]
[368.41027832 925.02819824]
[363.63296509 910.80926514]
[358.85568237 896.59033203]
[354.07836914 882.37145996]
[349.30108643 868.15252686]
[337.91320801 858.55224609]
[340.85244751 843.00646973]
[336.07513428 828.78753662]
[333.65679932 827.42004395]
[331.62701416 825.02484131]
[330.37524414 821.74255371]
[330.23397827 817.85046387]
[331.43334961 813.73925781]
[327.37075806 799.29986572]
[323.21823120 784.88610840]
[318.97592163 770.49853516]
[314.73364258 756.11096191]
[310.49133301 741.72332764]
[306.24902344 727.33575439]
[303.37081909 725.34240723]
[301.30422974 721.86822510]
[300.72930908 717.30487061]
[302.12796021 712.33038330]
[298.42657471 697.79425049]
[294.72521973 683.25811768]
[291.02386475 668.72192383]
[286.34017944 663.03063965]
[287.36816406 653.98150635]
[283.84829712 639.40032959]
[280.32846069 624.81915283]
[276.80859375 610.23797607]
[273.28872681 595.65679932]
[259.61193848 593.41363525]
[247.78321838 586.10821533]
[239.60258484 574.81353760]
[236.32966614 561.21240234]
[238.48976135 547.34704590]
[245.78988647 535.31213379]
[257.15802002 526.93853760]
[253.82022095 512.31457520]
[250.48240662 497.69067383]
[247.14459229 483.06677246]
[243.80677795 468.44284058]
[240.46896362 453.81893921]
[237.13114929 439.19500732]
[233.65769958 435.95220947]
[232.16833496 430.50222778]
[233.89723206 424.16497803]
[230.92503357 409.46240234]
[227.95285034 394.75982666]
[224.98065186 380.05722046]
[210.57743835 371.35168457]
[206.86637878 354.58972168]
[216.62571716 340.05645752]
[213.47047424 325.39205933]
[210.31521606 310.72766113]
[204.92225647 296.73065186]
[197.42225647 283.74029541]
[184.35791016 276.58679199]
[184.15852356 260.76684570]
[176.65852356 247.77645874]
[169.15852356 234.78608704]
[161.65852356 221.79570007]
[154.15852356 208.80531311]
[146.65852356 195.81494141]
[139.15852356 182.82455444]
[126.09419250 175.67106628]
[125.89480591 159.85112000]
[118.39480591 146.86073303]
[110.89480591 133.87036133]
[103.39480591 120.87997437]
[80.65107727 116.95355225]
[70.99385071 91.25083923]
[60.12611771 80.91196442]
[49.25838089 70.57308960]
[38.39064789 60.23421478]
[30.03984833 56.59990692]
[27.45289040 49.69806671]
[16.71488762 39.22451401]
[5.97688484 28.75096130]
[-4.76111794 18.27740860]
[-18.12130356 21.60658646]
[-31.27930832 17.93532181]
[-40.83347702 8.32356644]
[-44.36870193 -4.64756584]
[-41.06632996 -17.56832123]
[-51.67293167 -28.17492294]
[-67.64471436 -31.89437485]
[-72.14990234 -47.66254807]
[-60.55395508 -59.25849533]
[-44.78578186 -54.75330353]
[-41.06632996 -38.78152466]
[-30.45972824 -28.17492294]
[-14.32369232 -31.25758171]
[0.61572367 -24.03385162]
[8.37405396 -9.17699909]
[5.71243429 7.53940630]
[16.45043755 18.01295853]
[27.18844032 28.48651123]
[37.92644119 38.96006393]
[48.72952271 49.36647797]
[59.59725571 59.70535278]
[70.46498871 70.04422760]
[81.33272552 80.38310242]
[94.63788605 73.45687866]
[92.40225220 58.62441254]
[90.16661835 43.79195023]
[80.45893097 31.29909897]
[86.21291351 17.56079483]
[83.97727966 2.72833323]
[81.74163818 -12.10412884]
[68.30478668 -20.10318375]
[63.20208359 -34.88480759]
[68.84288025 -49.46957397]
[82.56376648 -56.97100067]
[97.88615417 -53.84714508]
[107.57527924 -41.57299042]
[107.05623627 -25.94402504]
[96.57410431 -14.33976269]
[98.80973816 0.49269924]
[101.04537201 15.32516193]
[110.59315491 26.75709534]
[104.99908447 41.55631638]
[107.23471832 56.38877869]
[109.47035217 71.22124481]
[120.13939667 80.53119659]
[124.69464874 92.79042053]
[122.97093201 104.66505432]
[116.38518524 113.37997437]
[123.88518524 126.37035370]
[131.38519287 139.36073303]
[138.88519287 152.35112000]
[152.48597717 160.43376160]
[152.14891052 175.32455444]
[159.64891052 188.31494141]
[167.14891052 201.30531311]
[174.64891052 214.29570007]
[182.14891052 227.28608704]
[189.64891052 240.27645874]
[197.14891052 253.26684570]
[210.74969482 261.34948730]
[210.41262817 276.24029541]
[217.91262817 289.23065186]
[232.70069885 291.74325562]
[244.07026672 281.95895386]
[255.43984985 272.17465210]
[266.80941772 262.39031982]
[278.17898560 252.60601807]
[289.54858398 242.82170105]
[300.91815186 233.03739929]
[312.28771973 223.25308228]
[310.87826538 207.80015564]
[318.84988403 194.48727417]
[333.13735962 188.43351746]
[348.24682617 191.96667480]
[358.36843872 203.72817993]
[359.61016846 219.19549561]
[351.49459839 232.42111206]
[337.14230347 238.31951904]
[322.07205200 234.62265015]
[310.70245361 244.40696716]
[299.33288574 254.19128418]
[287.96331787 263.97558594]
[276.59371948 273.75988770]
[265.22415161 283.54421997]
[253.85458374 293.32852173]
[242.48500061 303.11282349]
[233.86277771 307.18231201]
[224.97961426 307.57241821]
[228.13485718 322.23681641]
[231.29011536 336.90118408]
[243.35755920 342.84802246]
[249.71139526 354.48513794]
[248.23300171 367.46551514]
[239.68324280 377.08505249]
[242.65544128 391.78762817]
[245.62762451 406.49020386]
[248.59982300 421.19281006]
[251.75506592 435.85720825]
[255.09288025 450.48110962]
[258.43069458 465.10504150]
[261.76849365 479.72894287]
[265.10632324 494.35287476]
[268.44412231 508.97677612]
[271.78195190 523.60070801]
[287.68463135 527.09973145]
[300.41979980 537.15264893]
[307.46490479 551.70336914]
[307.45288086 567.81170654]
[300.43698120 582.24713135]
[287.86990356 592.13690186]
[291.38977051 606.71807861]
[294.90960693 621.29925537]
[298.42947388 635.88043213]
[301.94934082 650.46160889]
[305.56002808 665.02056885]
[309.26138306 679.55670166]
[312.96273804 694.09289551]
[316.66409302 708.62902832]
[320.63662720 723.09344482]
[324.87893677 737.48101807]
[329.12121582 751.86865234]
[333.36352539 766.25622559]
[337.60580444 780.64385986]
[343.02066040 787.96661377]
[341.81011963 795.23730469]
[345.87271118 809.67663574]
[350.29406738 824.01025391]
[355.07135010 838.22912598]
[366.80093384 848.84649658]
[363.51998901 863.37524414]
[368.29730225 877.59417725]
[373.07458496 891.81304932]
[377.85189819 906.03198242]
[382.62918091 920.25085449]
[387.40649414 934.46978760]
[392.18377686 948.68872070]
[397.92404175 962.54687500]
[404.60028076 975.97924805]
[411.27648926 989.41162109]
[417.95272827 1002.84393311]
[434.64422607 1008.12164307]
[442.19372559 1023.54052734]
[436.36065674 1039.32702637]
[443.20379639 1052.67504883]
[450.04696655 1066.02319336]
[462.65341187 1077.35961914]
[455.24987793 1092.61157227]
[438.54440308 1089.71960449]
[436.69888306 1072.86633301]
[429.85574341 1059.51831055]
[423.01257324 1046.17016602]
[410.33041382 1043.97998047]
[401.08142090 1034.75329590]
[398.79342651 1021.69348145]
[404.52035522 1009.52014160]
[397.84414673 996.08782959]
[391.16790771 982.65545654]
[384.49169922 969.22314453]
[382.71078491 984.11700439]
[374.27618408 996.52093506]
[361.07992554 1003.65246582]
[346.08215332 1003.91186523]
[332.64718628 997.24096680]
[323.78866577 985.13610840]
[321.49377441 970.31274414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 222]
[5 221]
[6 220]
[7 219]
[8 218]
[9 217]
[10 216]
[12 214]
[13 213]
[18 212]
[19 211]
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[28 204]
[29 203]
[30 202]
[31 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[53 183]
[54 182]
[55 181]
[56 180]
[59 176]
[60 175]
[61 174]
[62 148]
[63 147]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[73 137]
[74 136]
[75 135]
[76 134]
[78 109]
[79 108]
[80 107]
[81 106]
[83 105]
[84 104]
[85 103]
[86 102]
[91 98]
[92 97]
[110 130]
[111 129]
[112 128]
[114 126]
[115 125]
[116 124]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[223 244]
[224 243]
[225 242]
[226 241]
[229 237]
[230 236]
[231 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
