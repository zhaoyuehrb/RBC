%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGGUAGAGGGCGGCUGCGCUGGACAGCUCGGGAGGGGGCGAGGGCCGGGCGGACGGCGGACGGCGGACGGCGGGCGGGACGGCCAGGACGCGCGGGCUCGGAGGACCGCGGGACGGCCGGCCGGCCGGCCGGAGCCCGCGGGGGCGGCGGGGCGGGGGCCCAGGGCAGGCGCGGAGCCGGGCCGGCAGCAAC\
) } def
/len { sequence length } bind def

/coor [
[163.97657776 466.85162354]
[162.29711914 451.94592285]
[160.61764526 437.04025269]
[158.93818665 422.13455200]
[156.90086365 407.27355957]
[154.50686646 392.46585083]
[152.11286926 377.65811157]
[140.57366943 373.84210205]
[131.70281982 365.42880249]
[127.22909546 353.97311401]
[128.06027222 341.63058472]
[134.09963989 330.75186157]
[144.25277710 323.43493652]
[142.33462524 308.55807495]
[140.41647339 293.68124390]
[131.11515808 282.04788208]
[137.02421570 267.37158203]
[135.10606384 252.49473572]
[133.18789673 237.61788940]
[131.26974487 222.74102783]
[121.96843719 211.10768127]
[127.87748718 196.43138123]
[125.95932770 181.55451965]
[124.04117584 166.67767334]
[122.12301636 151.80082703]
[104.06758118 155.73258972]
[85.86032104 153.60081482]
[69.46641541 145.73170471]
[56.62403870 133.06542969]
[43.00692749 139.35624695]
[29.38981628 145.64706421]
[15.77270603 151.93786621]
[10.55035496 166.85438538]
[-3.72601676 173.63381958]
[-18.58649063 168.25405884]
[-25.21460915 153.90681458]
[-19.67803001 139.10404968]
[-5.26150608 132.62799072]
[9.48189545 138.32075500]
[23.09900475 132.02995300]
[36.71611404 125.73913574]
[50.33322525 119.44832611]
[49.67290497 111.97744751]
[34.73113251 113.29784393]
[33.41098785 98.35604858]
[48.35226440 97.03569794]
[47.69194412 89.56482697]
[33.18251801 85.76000214]
[18.67309570 81.95518494]
[4.16367340 78.15036774]
[-9.36879444 85.86464691]
[-24.02921104 81.79932404]
[-31.30019951 68.85064697]
[-45.80962372 65.04582977]
[-60.33009338 71.86751556]
[-74.65253448 64.63928223]
[-77.78998566 48.90600586]
[-67.33567047 36.73691177]
[-51.30923843 37.46708679]
[-42.00480270 50.53640366]
[-27.49538040 54.34122086]
[-14.80588818 46.62679672]
[-0.03706887 50.27873230]
[7.96849203 63.64094543]
[22.47791481 67.44576263]
[36.98733902 71.25057983]
[51.49676132 75.05540466]
[61.42600632 64.48133087]
[73.37461090 57.28913879]
[86.29028320 53.76536942]
[99.11952972 53.88971329]
[101.27588654 39.04551697]
[103.43224335 24.20132065]
[105.58859253 9.35712528]
[99.91553497 -5.41199541]
[109.40209961 -16.89477921]
[111.55845642 -31.73897362]
[113.71481323 -46.58316803]
[108.04174805 -61.35229111]
[117.52832031 -72.83507538]
[119.68466949 -87.67926788]
[114.01161194 -102.44838715]
[123.49817657 -113.93117523]
[125.65453339 -128.77537537]
[127.81089020 -143.61956787]
[129.96723938 -158.46376038]
[132.12359619 -173.30795288]
[121.25915527 -180.31500244]
[113.88218689 -190.87477112]
[111.06146240 -203.39553833]
[113.18223572 -216.00627136]
[119.89399719 -226.83618164]
[130.16786194 -234.29228210]
[142.45416260 -237.29362488]
[145.08518982 -252.06106567]
[147.71621704 -266.82852173]
[150.34724426 -281.59597778]
[152.97827148 -296.36343384]
[147.78149414 -311.30679321]
[157.63122559 -322.47961426]
[160.26225281 -337.24707031]
[154.17512512 -352.47463989]
[164.53024292 -365.19091797]
[180.67515564 -362.31448364]
[186.00135803 -346.80435181]
[175.02970886 -334.61605835]
[172.39868164 -319.84860229]
[177.78364563 -305.96148682]
[167.74572754 -293.73239136]
[165.11470032 -278.96496582]
[162.48367310 -264.19750977]
[159.85264587 -249.43003845]
[157.22161865 -234.66259766]
[170.77996826 -224.06741333]
[177.14425659 -207.98475647]
[174.48028564 -190.80494690]
[163.43176270 -177.26707458]
[146.96778870 -171.15159607]
[144.81143188 -156.30740356]
[142.65507507 -141.46321106]
[140.49873352 -126.61901093]
[138.34237671 -111.77481842]
[144.16967773 -98.06745148]
[134.52886963 -85.52291107]
[132.37251282 -70.67871857]
[138.19981384 -56.97135162]
[128.55900574 -44.42681503]
[126.40264893 -29.58261871]
[124.24629974 -14.73842335]
[130.07359314 -1.03105855]
[120.43279266 11.51348019]
[118.27643585 26.35767555]
[116.12007904 41.20186996]
[113.96372986 56.04606628]
[127.85897827 60.09102631]
[140.47976685 68.61244202]
[150.37071228 81.17050171]
[156.23916626 96.85206604]
[171.23146057 96.37129211]
[186.22375488 95.89051819]
[201.21604919 95.40974426]
[216.20834351 94.92897034]
[225.72796631 82.52289581]
[241.00599670 79.18887329]
[254.82862854 86.50113678]
[260.66921997 101.00704956]
[255.77001953 115.85736847]
[242.44430542 124.04022217]
[226.98403931 121.69192505]
[216.68911743 109.92126465]
[201.69682312 110.40203857]
[186.70452881 110.88281250]
[171.71223450 111.36358643]
[156.71994019 111.84436035]
[154.20735168 126.63242340]
[168.19953918 132.03785706]
[184.30990601 128.97386169]
[194.81219482 141.56884766]
[188.90257263 156.86618042]
[172.66032410 159.12927246]
[162.79409790 146.03004456]
[148.80191040 140.62460327]
[136.99986267 149.88267517]
[138.91802979 164.75952148]
[140.83618164 179.63636780]
[142.75433350 194.51321411]
[152.19284058 207.21066284]
[146.14659119 220.82287598]
[148.06474304 235.69972229]
[149.98291016 250.57656860]
[151.90106201 265.45343018]
[161.33956909 278.15087891]
[155.29331970 291.76309204]
[157.21147156 306.63992310]
[159.12963867 321.51678467]
[175.28656006 329.72277832]
[183.22239685 345.83920288]
[179.93379211 363.34008789]
[166.92059326 375.26409912]
[169.31459045 390.07183838]
[171.70858765 404.87957764]
[175.02461243 408.94293213]
[176.31295776 413.42434692]
[175.75537109 417.47830200]
[173.84385681 420.45510864]
[175.52333069 435.36077881]
[177.20280457 450.26644897]
[178.88226318 465.17214966]
[192.44406128 472.71252441]
[198.95309448 486.79843140]
[195.90652466 502.01348877]
[184.47581482 512.50720215]
[169.05632019 514.24456787]
[155.57711792 506.55752563]
[149.22126770 492.40185547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 181]
[6 180]
[7 179]
[13 175]
[14 174]
[15 173]
[17 171]
[18 170]
[19 169]
[20 168]
[22 166]
[23 165]
[24 164]
[25 163]
[29 42]
[30 41]
[31 40]
[32 39]
[47 67]
[48 66]
[49 65]
[50 64]
[53 61]
[54 60]
[71 134]
[72 133]
[73 132]
[74 131]
[76 129]
[77 128]
[78 127]
[80 125]
[81 124]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[100 107]
[101 106]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
