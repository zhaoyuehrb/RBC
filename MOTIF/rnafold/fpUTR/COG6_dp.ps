%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COG6)
} def

/sequence { (\
GAUGCGCAUGCGCGGCCGAUUUGCACAUGCGCAAUACUCGCGCUGCCUCCGUGGUCCCUGCCUGGCUGAGGUGGCAGCAGGGGGCGGGACGCGCAGCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.425316723 ubox
2 35 0.163780742 ubox
2 38 0.423232772 ubox
3 33 0.912132377 ubox
3 34 0.122431845 ubox
3 36 0.019051826 ubox
4 32 0.999595352 ubox
4 99 0.020156459 ubox
5 31 0.999771152 ubox
5 98 0.020190482 ubox
6 30 0.999777620 ubox
6 97 0.020191308 ubox
7 29 0.999785490 ubox
7 96 0.020162452 ubox
8 28 0.999392414 ubox
9 25 0.005668703 ubox
9 27 0.999358896 ubox
9 95 0.020059610 ubox
10 24 0.006955834 ubox
10 26 0.999573140 ubox
10 94 0.020184441 ubox
11 23 0.007203718 ubox
11 93 0.020183857 ubox
12 22 0.005733897 ubox
12 24 0.999466187 ubox
12 92 0.020131218 ubox
13 23 0.999579580 ubox
13 91 0.020126947 ubox
14 21 0.053852428 ubox
14 22 0.956651947 ubox
14 90 0.019877794 ubox
15 20 0.053718616 ubox
15 21 0.798045888 ubox
15 24 0.012421150 ubox
15 43 0.004013903 ubox
16 23 0.012479869 ubox
16 42 0.004165836 ubox
16 87 0.017046397 ubox
16 88 0.007235683 ubox
17 40 0.004778783 ubox
17 86 0.017118025 ubox
17 87 0.007218333 ubox
18 22 0.004716746 ubox
18 39 0.005158785 ubox
18 85 0.016865799 ubox
19 35 0.004628707 ubox
19 38 0.005059375 ubox
20 34 0.004286727 ubox
21 33 0.003725793 ubox
21 34 0.015411441 ubox
22 31 0.004334738 ubox
22 33 0.017613272 ubox
23 30 0.005323776 ubox
23 32 0.018070722 ubox
23 46 0.003634488 ubox
24 29 0.005322713 ubox
24 31 0.018055250 ubox
24 45 0.003642658 ubox
25 44 0.003585970 ubox
29 43 0.007105853 ubox
30 42 0.007144809 ubox
31 41 0.007172603 ubox
32 40 0.007169144 ubox
37 82 0.007693202 ubox
37 83 0.015936180 ubox
37 96 0.004946038 ubox
38 81 0.007692184 ubox
38 82 0.015979263 ubox
38 95 0.004956699 ubox
39 80 0.007710661 ubox
39 81 0.016018067 ubox
39 93 0.005030263 ubox
39 98 0.006830428 ubox
40 92 0.005080255 ubox
40 97 0.007234509 ubox
40 99 0.998472060 ubox
41 91 0.005079944 ubox
41 96 0.007229512 ubox
41 98 0.999686430 ubox
42 78 0.018079064 ubox
42 90 0.004988666 ubox
42 94 0.006522930 ubox
42 97 0.999734277 ubox
43 77 0.018090187 ubox
43 87 0.005764269 ubox
43 93 0.006400037 ubox
43 96 0.999739911 ubox
44 76 0.018137484 ubox
44 86 0.007251196 ubox
44 93 0.028655513 ubox
44 95 0.998887725 ubox
45 75 0.018150658 ubox
45 85 0.008121216 ubox
45 92 0.061646480 ubox
45 94 0.997770715 ubox
46 74 0.018150686 ubox
46 84 0.008155664 ubox
46 91 0.067050564 ubox
46 93 0.988699994 ubox
47 53 0.024019182 ubox
47 73 0.018128335 ubox
47 83 0.008364918 ubox
47 88 0.056360524 ubox
48 82 0.008067012 ubox
48 87 0.011829940 ubox
48 88 0.134773620 ubox
48 89 0.916803603 ubox
49 53 0.005588551 ubox
49 71 0.018121045 ubox
49 81 0.008070491 ubox
49 86 0.010181026 ubox
49 87 0.165167527 ubox
49 88 0.922505212 ubox
50 70 0.018145430 ubox
50 80 0.008062088 ubox
50 86 0.170898628 ubox
50 87 0.920237687 ubox
50 91 0.095502985 ubox
50 93 0.127775806 ubox
51 78 0.005041211 ubox
51 85 0.175183164 ubox
51 90 0.088777738 ubox
51 92 0.314359236 ubox
51 94 0.010722342 ubox
52 68 0.016289502 ubox
52 77 0.004835868 ubox
52 79 0.005749907 ubox
52 84 0.170882486 ubox
52 86 0.810417183 ubox
52 89 0.080493649 ubox
52 91 0.305563243 ubox
52 93 0.013175773 ubox
53 67 0.018009644 ubox
53 78 0.005805102 ubox
53 85 0.914554920 ubox
53 90 0.233453712 ubox
53 92 0.059335508 ubox
54 66 0.018113782 ubox
54 75 0.005267270 ubox
54 85 0.054153154 ubox
54 90 0.239047452 ubox
54 92 0.003774315 ubox
55 65 0.014860059 ubox
55 74 0.004889735 ubox
55 82 0.005886628 ubox
55 83 0.924731662 ubox
55 84 0.051498730 ubox
55 87 0.008707680 ubox
55 88 0.070889657 ubox
55 89 0.311161884 ubox
55 91 0.003606384 ubox
56 64 0.014657612 ubox
56 65 0.009861184 ubox
56 73 0.004854199 ubox
56 81 0.005988152 ubox
56 82 0.937950249 ubox
56 83 0.047648461 ubox
56 84 0.009551342 ubox
56 86 0.009157944 ubox
56 87 0.117272874 ubox
56 88 0.312309648 ubox
57 64 0.009844169 ubox
57 65 0.003246119 ubox
57 71 0.003813997 ubox
57 74 0.003744094 ubox
57 80 0.005821391 ubox
57 81 0.938228642 ubox
57 82 0.042873623 ubox
57 83 0.009639178 ubox
57 84 0.007419722 ubox
57 86 0.117459292 ubox
57 87 0.309643108 ubox
57 88 0.076857286 ubox
58 64 0.003585439 ubox
58 70 0.003814112 ubox
58 73 0.003741609 ubox
58 74 0.005349052 ubox
58 77 0.010701246 ubox
58 80 0.938415176 ubox
58 81 0.036196890 ubox
58 82 0.009596910 ubox
58 83 0.007554260 ubox
58 84 0.119638341 ubox
58 86 0.306041046 ubox
58 87 0.086798894 ubox
59 69 0.003688285 ubox
59 73 0.005900727 ubox
59 76 0.018943436 ubox
59 79 0.938298299 ubox
59 80 0.027321642 ubox
59 82 0.006922304 ubox
59 83 0.125680576 ubox
59 86 0.095575608 ubox
60 72 0.013881299 ubox
60 75 0.024669304 ubox
60 78 0.938184997 ubox
60 85 0.257659665 ubox
61 71 0.021981733 ubox
61 74 0.025834932 ubox
61 77 0.826143593 ubox
61 81 0.130596238 ubox
61 82 0.045992678 ubox
61 83 0.180894612 ubox
61 84 0.256140125 ubox
62 70 0.028664528 ubox
62 71 0.020219728 ubox
62 73 0.027097644 ubox
62 74 0.041318341 ubox
62 77 0.442794558 ubox
62 80 0.131101377 ubox
62 81 0.049222649 ubox
62 82 0.182268830 ubox
62 83 0.254458663 ubox
63 69 0.028613192 ubox
63 70 0.019944225 ubox
63 73 0.038837535 ubox
63 76 0.614297062 ubox
63 79 0.128801542 ubox
63 80 0.049612723 ubox
63 81 0.181521746 ubox
63 82 0.242209041 ubox
64 72 0.033475192 ubox
64 75 0.465972604 ubox
64 78 0.092057042 ubox
65 72 0.130533924 ubox
65 75 0.806388243 ubox
65 78 0.329949269 ubox
66 71 0.133767064 ubox
66 74 0.901719377 ubox
66 77 0.342827067 ubox
66 80 0.017062774 ubox
67 73 0.879644703 ubox
67 76 0.343258864 ubox
67 79 0.017079121 ubox
68 72 0.409025159 ubox
68 75 0.342403136 ubox
68 78 0.016963223 ubox
84 92 0.004841647 ubox
85 91 0.004855141 ubox
86 90 0.004547669 ubox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
40 99 0.9500000 lbox
41 98 0.9500000 lbox
42 97 0.9500000 lbox
43 96 0.9500000 lbox
44 95 0.9500000 lbox
45 94 0.9500000 lbox
46 93 0.9500000 lbox
48 89 0.9500000 lbox
49 88 0.9500000 lbox
50 87 0.9500000 lbox
52 86 0.9500000 lbox
53 85 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
57 81 0.9500000 lbox
58 80 0.9500000 lbox
59 79 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
65 75 0.9500000 lbox
66 74 0.9500000 lbox
67 73 0.9500000 lbox
showpage
end
%%EOF
