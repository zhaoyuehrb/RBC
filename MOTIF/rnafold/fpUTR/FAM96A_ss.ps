%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGCCGCGAAGAUUGUUUUUGUCCCGCCGAAAUCGAGCAAAGCACGCUGGAACUUGUAGUCCUUGAGGCCCCUUCCCUAGGUCCUUCGAGCUACUCCGUCUGGCCCCGCCUUUUCUCUGCUCUCCUGAACCUUUAGGCUUGUCUCGGCCCAUUUGAAGACCAGGAAGUUGAUCAAUCCCGAGGCUGCUGAGAGACGGUGGCGCGAUUGGGACAGUCGCCAGGGAUGGCUGAGCGUGAAG\
) } def
/len { sequence length } bind def

/coor [
[81.22879028 262.72229004]
[90.21433258 250.42677307]
[103.42729950 242.85462952]
[101.86585999 227.93612671]
[100.30441284 213.01760864]
[98.74296570 198.09910583]
[83.89691162 195.95558167]
[78.17925262 209.82312012]
[72.46158600 223.69064331]
[66.74392700 237.55816650]
[61.02626419 251.42568970]
[55.30860138 265.29321289]
[49.59093857 279.16076660]
[49.14326859 296.10879517]
[32.73364258 300.37030029]
[24.09603691 285.78167725]
[35.72340775 273.44308472]
[41.44107056 259.57556152]
[47.15873337 245.70803833]
[52.87639618 231.84049988]
[58.59405899 217.97297668]
[64.31172180 204.10545349]
[70.02938843 190.23791504]
[73.61181641 175.67199707]
[74.97866058 160.73440552]
[76.34550476 145.79681396]
[63.01161957 138.92604065]
[51.64052582 148.70858765]
[40.33343124 158.56504822]
[29.09082222 168.49497986]
[24.39016724 184.20599365]
[8.37343216 187.72682190]
[-2.48273897 175.43554688]
[2.98955202 159.97636414]
[19.16088104 157.25238037]
[30.40349197 147.32243347]
[33.33018875 140.55256653]
[41.85797882 137.33749390]
[53.22907257 127.55494690]
[52.10895157 120.13906860]
[37.43987656 123.27246857]
[23.69240952 129.27305603]
[13.35084343 118.40788269]
[20.02258110 104.97330475]
[34.92858887 106.64616394]
[49.86871719 105.30729675]
[48.74859619 97.89141083]
[34.99551392 91.90370178]
[21.24242783 85.91599274]
[7.48934460 79.92828369]
[-6.26373959 73.94057465]
[-20.01682281 67.95285797]
[-32.37712479 76.96231079]
[-47.48768616 78.56471252]
[-61.27982330 72.42929840]
[-70.09017181 60.29531097]
[-71.63362122 45.48033905]
[-85.38670349 39.49263000]
[-99.13979340 33.50491714]
[-112.89287567 27.51720810]
[-119.46170044 27.88004494]
[-124.48354340 25.27432060]
[-126.92322540 21.18996620]
[-140.51554871 14.84577084]
[-154.10786438 8.50157452]
[-167.70018005 2.15737867]
[-181.29251099 -4.18681765]
[-194.88482666 -10.53101349]
[-208.47714233 -16.87520981]
[-223.17329407 -11.71177483]
[-236.86746216 -18.33931923]
[-241.69944763 -32.38166809]
[-255.29176331 -38.72586441]
[-268.88409424 -45.07006073]
[-284.39221191 -40.96186829]
[-297.18688965 -50.64050293]
[-297.45312500 -66.68135071]
[-284.98666382 -76.77923584]
[-269.35073853 -73.18793488]
[-262.53988647 -58.66238022]
[-248.94757080 -52.31818390]
[-235.35523987 -45.97398758]
[-221.48838806 -51.28868484]
[-207.61346436 -45.04839706]
[-202.13294983 -30.46752930]
[-188.54063416 -24.12333488]
[-174.94830322 -17.77913857]
[-161.35598755 -11.43494129]
[-147.76367188 -5.09074545]
[-134.17134094 1.25345051]
[-120.57902527 7.59764671]
[-106.90516663 13.76412392]
[-93.15207672 19.75183487]
[-79.39899445 25.73954582]
[-65.64591217 31.72725677]
[-53.74985504 22.76347160]
[-38.86525345 20.94560623]
[-24.97744370 26.86127281]
[-15.85542488 39.01386642]
[-14.02911282 54.19977570]
[-0.27602878 60.18748856]
[13.47705555 66.17519379]
[27.23013878 72.16291046]
[40.98322296 78.15061951]
[54.73630905 84.13832855]
[88.24410248 62.20496368]
[118.39698029 74.80117798]
[129.89462280 65.16768646]
[141.39227295 55.53419876]
[152.88992310 45.90070724]
[164.38757324 36.26721954]
[169.99638367 21.47357941]
[184.72111511 19.23042679]
[196.21876526 9.59693623]
[207.71640015 -0.03655357]
[219.21405029 -9.67004395]
[230.71170044 -19.30353355]
[242.20933533 -28.93702316]
[247.81816101 -43.73065948]
[262.54287720 -45.97381592]
[274.04052734 -55.60730362]
[269.35995483 -65.29345703]
[269.48171997 -77.38345337]
[275.48742676 -89.40123749]
[287.17840576 -98.45603180]
[291.42144775 -112.84340668]
[295.66448975 -127.23078156]
[299.90753174 -141.61816406]
[304.15054321 -156.00553894]
[299.77932739 -171.81137085]
[311.47323608 -183.30851746]
[327.20260620 -178.66969299]
[330.78640747 -162.66693115]
[318.53793335 -151.76249695]
[314.29489136 -137.37512207]
[310.05184937 -122.98773956]
[305.80880737 -108.60036469]
[301.56576538 -94.21298981]
[307.28308105 -89.35887909]
[321.40783691 -94.40772247]
[318.71768188 -79.65065002]
[324.43499756 -74.79653931]
[337.94345093 -81.31737518]
[351.45193481 -87.83821869]
[364.96038818 -94.35905457]
[378.46887207 -100.87989044]
[391.97732544 -107.40072632]
[405.48580933 -113.92156219]
[406.37274170 -124.51801300]
[411.52917480 -133.72529602]
[419.97079468 -139.92259216]
[430.14212036 -142.05075073]
[440.20281982 -139.79296875]
[448.36071777 -133.61987305]
[462.11383057 -139.60758972]
[475.86691284 -145.59529114]
[489.61999512 -151.58300781]
[500.23208618 -166.64318848]
[517.58374023 -163.96200562]
[531.25756836 -170.12847900]
[544.93145752 -176.29495239]
[550.28948975 -191.16326904]
[564.62707520 -197.81234741]
[579.43786621 -192.29740906]
[585.93499756 -177.89036560]
[580.26379395 -163.13865662]
[565.78881836 -156.79421997]
[551.09790039 -162.62109375]
[537.42407227 -156.45462036]
[523.75018311 -150.28813171]
[519.18548584 -139.09962463]
[507.86087036 -133.84480286]
[495.60769653 -137.82992554]
[481.85461426 -131.84220886]
[468.10153198 -125.85449982]
[454.34844971 -119.86679077]
[448.54013062 -101.25402069]
[430.62530518 -92.81223297]
[412.00662231 -100.41309357]
[398.49816895 -93.89225769]
[384.98971558 -87.37142181]
[371.48123169 -80.85058594]
[357.97277832 -74.32975006]
[344.46429443 -67.80891418]
[330.95584106 -61.28807449]
[308.86975098 -37.73783875]
[283.67401123 -44.10965729]
[272.17639160 -34.47616959]
[267.38995361 -20.37158203]
[251.84283447 -17.43937683]
[240.34518433 -7.80588722]
[228.84753418 1.82760262]
[217.34989929 11.46109295]
[205.85224915 21.09458351]
[194.35459900 30.72807312]
[189.56817627 44.83265686]
[174.02105713 47.76486588]
[162.52340698 57.39835358]
[151.02575684 67.03184509]
[139.52812195 76.66533661]
[128.03047180 86.29882050]
[131.16735840 101.42298889]
[126.66535950 116.19839478]
[137.23733521 126.83950806]
[147.80932617 137.48062134]
[158.38130188 148.12173462]
[168.95327759 158.76283264]
[179.52525330 169.40394592]
[190.09724426 180.04505920]
[205.54995728 187.02000427]
[203.12533569 203.79968262]
[186.33021545 206.11489868]
[179.45613098 190.61703491]
[168.88415527 179.97593689]
[158.31216431 169.33482361]
[147.74018860 158.69371033]
[137.16821289 148.05259705]
[126.59622955 137.41148376]
[116.02425385 126.77037048]
[110.82444000 135.15879822]
[102.45433044 142.30375671]
[91.28310394 147.16365051]
[89.91625977 162.10124207]
[88.54941559 177.03884888]
[98.04400635 177.90678406]
[107.43711853 184.49771118]
[113.66147614 196.53765869]
[115.22292328 211.45616150]
[116.78436279 226.37467957]
[118.34580994 241.29318237]
[132.84033203 245.96533203]
[144.17706299 256.13381958]
[150.39186096 270.03692627]
[150.40795898 285.26583862]
[144.22257996 299.18203735]
[132.90737915 309.37451172]
[118.42278290 314.07727051]
[103.27832794 312.47561646]
[90.09788513 304.84701538]
[81.16504669 292.51312256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 230]
[4 229]
[5 228]
[6 227]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[24 224]
[25 223]
[26 222]
[27 39]
[28 38]
[29 36]
[30 35]
[47 105]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[57 95]
[58 94]
[59 93]
[60 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[72 82]
[73 81]
[74 80]
[107 201]
[108 200]
[109 199]
[110 198]
[111 197]
[113 195]
[114 194]
[115 193]
[116 192]
[117 191]
[118 190]
[120 188]
[121 187]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[142 185]
[143 184]
[144 183]
[145 182]
[146 181]
[147 180]
[148 179]
[154 176]
[155 175]
[156 174]
[157 173]
[159 170]
[160 169]
[161 168]
[203 219]
[204 218]
[205 217]
[206 216]
[207 215]
[208 214]
[209 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
