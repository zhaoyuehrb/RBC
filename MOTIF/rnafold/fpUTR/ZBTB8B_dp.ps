%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZBTB8B)
} def

/sequence { (\
GUGUCGGUGCGCGGUGCUCCGUGGCUGCGCUGCUGGAACCCGCUGGAAGAGAUACAGGUUUGCUCUGGAGCAGCAGCAGCUGGCGGAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.066344180 ubox
1 12 0.955240154 ubox
1 15 0.006753768 ubox
1 17 0.003976685 ubox
1 55 0.003277560 ubox
2 7 0.003668751 ubox
2 9 0.065038984 ubox
2 11 0.955454746 ubox
2 13 0.059380634 ubox
2 14 0.008899356 ubox
2 16 0.004366657 ubox
2 54 0.003279470 ubox
3 8 0.032236455 ubox
3 10 0.954983853 ubox
3 12 0.077942456 ubox
3 15 0.047007364 ubox
3 53 0.003279360 ubox
4 9 0.893406623 ubox
4 11 0.063709386 ubox
4 14 0.182116552 ubox
4 52 0.003276447 ubox
5 11 0.045432434 ubox
5 13 0.244633627 ubox
5 51 0.003269252 ubox
6 10 0.043671074 ubox
6 12 0.245258040 ubox
6 34 0.003184664 ubox
7 33 0.003192056 ubox
9 15 0.008880508 ubox
9 30 0.003204668 ubox
10 14 0.009527681 ubox
10 29 0.003228829 ubox
11 28 0.003229530 ubox
12 27 0.003229479 ubox
13 26 0.003224165 ubox
14 25 0.003220785 ubox
14 89 0.004373075 ubox
15 24 0.003187661 ubox
15 90 0.785724984 ubox
16 89 0.999555877 ubox
17 88 0.999961703 ubox
18 87 0.999836581 ubox
19 86 0.999981314 ubox
20 85 0.999964535 ubox
21 84 0.998580611 ubox
22 82 0.554298721 ubox
22 83 0.811849480 ubox
23 81 0.799427992 ubox
24 80 0.999655217 ubox
25 79 0.999886208 ubox
26 78 0.999554028 ubox
27 77 0.999180070 ubox
27 80 0.012922000 ubox
28 76 0.998558346 ubox
28 79 0.012924212 ubox
29 71 0.005122910 ubox
29 74 0.995041475 ubox
29 77 0.039652322 ubox
30 70 0.005128709 ubox
30 73 0.998278268 ubox
30 76 0.043700901 ubox
31 69 0.005114979 ubox
31 72 0.998057834 ubox
31 75 0.055844700 ubox
32 71 0.998248384 ubox
32 74 0.057631467 ubox
33 46 0.005579630 ubox
33 68 0.051614209 ubox
33 70 0.996780159 ubox
33 73 0.057639257 ubox
34 42 0.132514655 ubox
34 45 0.009527078 ubox
34 62 0.003955515 ubox
34 67 0.109725798 ubox
34 69 0.956719764 ubox
34 72 0.057544630 ubox
35 41 0.554905942 ubox
35 44 0.043743956 ubox
35 61 0.015097806 ubox
35 64 0.135076882 ubox
35 65 0.096237181 ubox
35 66 0.487633481 ubox
35 71 0.056524318 ubox
36 40 0.546478864 ubox
36 43 0.046138185 ubox
36 60 0.011518983 ubox
36 61 0.119100869 ubox
36 63 0.138097602 ubox
36 64 0.069872346 ubox
36 65 0.512000494 ubox
37 59 0.008777277 ubox
37 60 0.170360749 ubox
37 61 0.051124520 ubox
37 64 0.496768718 ubox
38 59 0.241313735 ubox
38 60 0.054852197 ubox
39 46 0.104934545 ubox
39 58 0.242693971 ubox
39 68 0.177932524 ubox
40 45 0.104911387 ubox
40 46 0.089474557 ubox
40 57 0.230494603 ubox
40 58 0.070464060 ubox
40 67 0.177218916 ubox
40 68 0.201316448 ubox
41 45 0.089165261 ubox
41 57 0.070001999 ubox
41 62 0.088505012 ubox
41 67 0.201516856 ubox
42 59 0.149350458 ubox
42 61 0.082508854 ubox
42 63 0.078963536 ubox
42 66 0.115155682 ubox
42 71 0.011364388 ubox
43 49 0.026452187 ubox
43 51 0.183916073 ubox
43 57 0.501228106 ubox
43 58 0.125424677 ubox
43 62 0.078162539 ubox
43 68 0.737089335 ubox
43 70 0.012406105 ubox
44 48 0.023938562 ubox
44 50 0.183395004 ubox
44 54 0.041604105 ubox
44 56 0.526657053 ubox
44 57 0.088974835 ubox
44 62 0.003744742 ubox
44 67 0.736423355 ubox
44 69 0.013109318 ubox
45 53 0.044173141 ubox
45 55 0.529657980 ubox
45 60 0.014909821 ubox
45 61 0.015310870 ubox
45 64 0.052038288 ubox
45 65 0.026036847 ubox
45 66 0.769728311 ubox
46 59 0.014417914 ubox
46 60 0.018516474 ubox
46 61 0.027427219 ubox
46 63 0.054667985 ubox
46 64 0.020072555 ubox
46 65 0.778152926 ubox
47 59 0.017534319 ubox
47 60 0.028786605 ubox
47 61 0.012794155 ubox
47 64 0.758651230 ubox
48 59 0.028203782 ubox
48 60 0.012684669 ubox
48 61 0.064243322 ubox
48 64 0.159558314 ubox
48 66 0.187789177 ubox
49 59 0.010664572 ubox
49 60 0.077774196 ubox
49 61 0.049569745 ubox
49 63 0.224778303 ubox
49 65 0.193989162 ubox
50 59 0.077965188 ubox
50 60 0.048377831 ubox
50 61 0.765371320 ubox
50 64 0.193996152 ubox
50 66 0.020085143 ubox
51 59 0.041356219 ubox
51 60 0.768530296 ubox
51 61 0.077144783 ubox
51 63 0.193488723 ubox
51 65 0.020666013 ubox
52 59 0.765603669 ubox
52 60 0.086883907 ubox
52 64 0.019985086 ubox
53 58 0.742792024 ubox
53 62 0.121440177 ubox
53 67 0.004158964 ubox
54 61 0.111666479 ubox
54 66 0.004711578 ubox
55 62 0.072637891 ubox
55 67 0.133836411 ubox
56 61 0.065624275 ubox
56 64 0.012439483 ubox
56 66 0.134097766 ubox
57 63 0.015475281 ubox
57 64 0.007585379 ubox
57 65 0.133898878 ubox
57 66 0.008653368 ubox
58 63 0.045937709 ubox
58 64 0.107728754 ubox
58 65 0.016680646 ubox
59 68 0.005609269 ubox
60 67 0.006907904 ubox
60 68 0.004737705 ubox
60 69 0.004560643 ubox
61 67 0.005196889 ubox
61 68 0.007631261 ubox
61 90 0.003397899 ubox
62 66 0.003730551 ubox
62 71 0.004102962 ubox
62 89 0.004552517 ubox
63 70 0.004519408 ubox
63 88 0.004554649 ubox
64 69 0.004347992 ubox
64 87 0.004554037 ubox
65 86 0.004554595 ubox
66 85 0.004545485 ubox
67 84 0.004442112 ubox
71 82 0.004442201 ubox
72 81 0.004480929 ubox
73 80 0.004484766 ubox
74 79 0.004478331 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
15 90 0.9500000 lbox
16 89 0.9500000 lbox
17 88 0.9500000 lbox
18 87 0.9500000 lbox
19 86 0.9500000 lbox
20 85 0.9500000 lbox
21 84 0.9500000 lbox
22 83 0.9500000 lbox
24 80 0.9500000 lbox
25 79 0.9500000 lbox
26 78 0.9500000 lbox
27 77 0.9500000 lbox
28 76 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
32 71 0.9500000 lbox
33 70 0.9500000 lbox
34 69 0.9500000 lbox
43 68 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
