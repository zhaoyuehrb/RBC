%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASPDH)
} def

/sequence { (\
GCCUUGUGCAGCGGGCAGCGAGCAGCCCAGGGAGCCAGGCCCCAGACACCGCACUCAGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005184264 ubox
1 12 0.006691176 ubox
1 16 0.007810127 ubox
1 23 0.014648239 ubox
1 35 0.006345064 ubox
1 40 0.019384708 ubox
1 61 0.990837410 ubox
2 8 0.005177813 ubox
2 11 0.006654993 ubox
2 15 0.007804755 ubox
2 22 0.010580999 ubox
2 31 0.006292897 ubox
2 32 0.052587975 ubox
2 34 0.005185090 ubox
2 39 0.019461121 ubox
2 59 0.097769676 ubox
2 60 0.993268663 ubox
3 14 0.007792712 ubox
3 22 0.011968589 ubox
3 30 0.006320480 ubox
3 31 0.052904521 ubox
3 38 0.019494743 ubox
3 58 0.105770479 ubox
3 59 0.992471069 ubox
4 13 0.006570452 ubox
4 21 0.015715537 ubox
4 29 0.005973225 ubox
4 30 0.052867221 ubox
4 37 0.018401286 ubox
4 57 0.111416451 ubox
4 58 0.984500302 ubox
5 13 0.004180605 ubox
5 20 0.015750966 ubox
5 29 0.052792204 ubox
5 37 0.007741272 ubox
5 53 0.016909512 ubox
5 57 0.877031013 ubox
5 58 0.011997428 ubox
6 12 0.007710084 ubox
6 19 0.015670956 ubox
6 26 0.003880769 ubox
6 28 0.052372412 ubox
6 35 0.017655743 ubox
6 36 0.009752620 ubox
6 49 0.006468654 ubox
6 52 0.018551825 ubox
6 54 0.742258851 ubox
6 56 0.662575189 ubox
7 11 0.007276815 ubox
7 17 0.013232861 ubox
7 18 0.009246092 ubox
7 24 0.029475599 ubox
7 34 0.017619691 ubox
7 48 0.008613064 ubox
7 51 0.019257960 ubox
7 53 0.912806145 ubox
7 57 0.007761118 ubox
8 12 0.004479487 ubox
8 16 0.016160195 ubox
8 23 0.030136208 ubox
8 26 0.043673788 ubox
8 35 0.010236685 ubox
8 47 0.008625586 ubox
8 50 0.018805674 ubox
8 52 0.938061737 ubox
8 56 0.008763679 ubox
9 15 0.016171468 ubox
9 22 0.030109336 ubox
9 25 0.043653270 ubox
9 34 0.010230392 ubox
9 51 0.937129997 ubox
10 55 0.019413796 ubox
11 19 0.030809299 ubox
11 23 0.042640870 ubox
11 26 0.016642244 ubox
11 35 0.003390278 ubox
11 52 0.335423287 ubox
11 54 0.018442514 ubox
12 18 0.030812787 ubox
12 20 0.011223681 ubox
12 22 0.042572294 ubox
12 25 0.016675219 ubox
12 34 0.003397254 ubox
12 51 0.335700772 ubox
13 19 0.013279112 ubox
13 27 0.005784582 ubox
13 28 0.972719642 ubox
13 42 0.005269508 ubox
13 50 0.219179770 ubox
14 26 0.005370045 ubox
14 27 0.977159790 ubox
14 28 0.023424854 ubox
14 41 0.005430159 ubox
14 49 0.201908310 ubox
14 50 0.005376556 ubox
15 23 0.107370685 ubox
15 26 0.981163903 ubox
15 27 0.027406875 ubox
15 40 0.005578076 ubox
15 49 0.006962840 ubox
16 22 0.107507602 ubox
16 25 0.980975533 ubox
16 39 0.005584053 ubox
18 26 0.147301322 ubox
18 35 0.003556324 ubox
19 25 0.147825454 ubox
19 34 0.003561288 ubox
22 35 0.004656637 ubox
22 40 0.003687252 ubox
23 34 0.004661343 ubox
23 39 0.003670387 ubox
25 35 0.003610215 ubox
25 40 0.025227706 ubox
25 61 0.018037645 ubox
26 32 0.004840459 ubox
26 34 0.003603594 ubox
26 39 0.025051312 ubox
26 60 0.018081374 ubox
27 31 0.004821670 ubox
27 38 0.024791480 ubox
27 39 0.006080477 ubox
27 59 0.018081653 ubox
28 38 0.007008722 ubox
28 58 0.018051594 ubox
30 36 0.026555413 ubox
30 41 0.022544350 ubox
30 42 0.105865580 ubox
30 43 0.988111760 ubox
30 50 0.011383196 ubox
30 56 0.015806482 ubox
31 35 0.026162663 ubox
31 40 0.022614171 ubox
31 41 0.106336096 ubox
31 42 0.989111721 ubox
31 43 0.071398227 ubox
31 49 0.011122945 ubox
31 50 0.004548491 ubox
31 55 0.015900865 ubox
32 40 0.106189955 ubox
32 41 0.988949425 ubox
32 42 0.071488047 ubox
32 49 0.004536063 ubox
32 54 0.015894758 ubox
32 56 0.005459728 ubox
33 55 0.005509731 ubox
34 40 0.951514055 ubox
34 52 0.015793561 ubox
34 54 0.005496387 ubox
35 39 0.944714191 ubox
35 51 0.015750967 ubox
38 50 0.018611218 ubox
38 62 0.054187877 ubox
39 49 0.018616641 ubox
39 61 0.054681060 ubox
40 60 0.054411162 ubox
41 59 0.054137803 ubox
41 60 0.019602221 ubox
42 58 0.053773319 ubox
42 59 0.020520791 ubox
43 58 0.021221036 ubox
44 55 0.037320141 ubox
45 54 0.038754396 ubox
45 56 0.042154928 ubox
46 55 0.041601416 ubox
49 59 0.003531321 ubox
49 60 0.003414196 ubox
50 58 0.003581592 ubox
50 59 0.003432474 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
