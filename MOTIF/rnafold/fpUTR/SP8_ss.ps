%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUUGUAUUGCACACCUCUAAAAAAAACACUGCCUCUGAUUUAUCAAUAUAAAAAAGAUCCUCUGAGAGGAGGAGGGCACUUUUGUGUGAUGGCAACUUCACUUCUAGGGCGUGGUGCUUGCUCCCGAAUCAGACGCCGGCAGCCAAACUUGUCCCCUCCUGUAGAGUAGGAAGCGGCCGGGCGCCGGGGCUGUUGGGGGUGCCAGGAAGAACCGAGGUUGGGAUCGACUCCUCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[431.17861938 203.09574890]
[420.94992065 214.06723022]
[407.22561646 220.12066650]
[392.22644043 220.27655029]
[378.37930298 214.50968933]
[367.92477417 203.75315857]
[362.55444336 189.74746704]
[363.13726807 174.75878906]
[369.57894897 161.21240234]
[380.83715820 151.30017090]
[395.09030151 146.62597656]
[410.03457642 147.94685364]
[395.18725586 145.81213379]
[380.33993530 143.67739868]
[365.49261475 141.54267883]
[350.63174438 139.50437927]
[335.75796509 137.56257629]
[320.87191772 135.71736145]
[305.97415161 133.96879578]
[291.07641602 132.22024536]
[276.17868042 130.47167969]
[261.28094482 128.72312927]
[255.78460693 142.64216614]
[246.86569214 154.67337036]
[235.12736511 163.99302673]
[221.36605835 169.96116638]
[206.51742554 172.16543579]
[191.59278870 170.44963074]
[177.61016846 164.92474365]
[165.52494812 155.96182251]
[156.16448975 144.16700745]
[150.17160034 130.34056091]
[147.96026611 115.42260742]
[133.06253052 113.67404938]
[118.16479492 111.92549133]
[103.26705933 110.17693329]
[88.33809662 111.63507843]
[74.06026459 116.23328400]
[59.78243256 120.83148193]
[52.52499390 134.61434937]
[37.97973633 139.07417297]
[24.88460541 132.07038879]
[10.60677147 136.66857910]
[-3.67106271 141.26678467]
[-17.94889641 145.86499023]
[-32.22673035 150.46318054]
[-42.82435226 162.97807312]
[-58.91099548 159.79185486]
[-63.93809891 144.18223572]
[-52.73421097 132.20704651]
[-36.82493210 136.18534851]
[-22.54709625 131.58714294]
[-8.26926231 126.98894501]
[6.00857162 122.39074707]
[20.28640556 117.79254913]
[26.83316422 104.46305084]
[41.24741364 99.59642792]
[55.18423080 106.55364227]
[69.46206665 101.95544434]
[83.73989868 97.35724640]
[82.96134186 82.37746429]
[68.28375244 79.28418732]
[53.60616302 76.19091797]
[38.92857361 73.09764099]
[24.25098228 70.00436401]
[9.57339191 66.91109467]
[-5.83774710 72.51723480]
[-18.22270584 61.76805878]
[-14.84090233 45.72139359]
[0.82875568 40.88467407]
[12.66666698 52.23350143]
[27.34425735 55.32677460]
[42.02184677 58.42005157]
[56.69943619 61.51332474]
[71.37702942 64.60659790]
[86.05461884 67.69987488]
[89.08140564 60.83776474]
[95.13497925 47.11354446]
[98.16176605 40.25143433]
[85.98089600 31.49778748]
[73.80001831 22.74414253]
[61.61914444 13.99049759]
[45.25627518 12.90032673]
[38.26274490 -1.93283057]
[47.83289719 -15.24989414]
[64.12178040 -13.35140991]
[70.37278748 1.80962348]
[82.55366516 10.56326866]
[94.73454285 19.31691360]
[106.91541290 28.07055855]
[115.22748566 46.19551086]
[117.41842651 64.46498108]
[113.79353333 81.30708313]
[105.01561737 95.27919769]
[119.91335297 97.02775574]
[134.81109619 98.77631378]
[149.70883179 100.52487183]
[155.31433105 86.52438354]
[164.34588623 74.46137238]
[176.18305969 65.15452576]
[190.01521301 59.23353958]
[204.89710999 57.09650803]
[219.81344604 58.88315964]
[233.74812317 64.46573639]
[245.75350952 73.45812225]
[255.01483154 85.24253082]
[260.90551758 99.01194763]
[263.02951050 113.82539368]
[277.92724609 115.57395172]
[292.82498169 117.32250214]
[307.72271729 119.07106018]
[322.62045288 120.81961823]
[331.48715210 118.71469879]
[337.69976807 122.68878937]
[352.57354736 124.63059235]
[361.46682739 122.64096069]
[367.62734985 126.69535828]
[382.47467041 128.83007812]
[397.32199097 130.96481323]
[412.16931152 133.09953308]
[419.54440308 125.89001465]
[429.29550171 123.17922974]
[438.95828247 125.45978546]
[452.26095581 118.52875519]
[465.56362915 111.59773254]
[478.86627197 104.66670227]
[492.16894531 97.73567200]
[505.47161865 90.80464935]
[518.77429199 83.87361908]
[532.07696533 76.94259644]
[535.92388916 71.60688782]
[541.10650635 69.33965302]
[545.81616211 70.00939178]
[559.29425049 63.42604446]
[572.77233887 56.84270096]
[575.64971924 43.69738007]
[585.42529297 34.73524475]
[598.38482666 33.05802917]
[609.77569580 39.05519485]
[623.33813477 32.64736938]
[636.90057373 26.23954391]
[650.46301270 19.83172035]
[664.02545166 13.42389488]
[670.43127441 6.94204140]
[677.80578613 7.02219677]
[691.45031738 0.79097140]
[705.09478760 -5.44025373]
[706.81579590 -19.10421562]
[714.99444580 -30.04990005]
[727.41204834 -35.48649597]
[740.78710938 -34.09392166]
[751.64233398 -26.34160233]
[765.36657715 -32.39517593]
[779.09075928 -38.44875336]
[792.81500244 -44.50232697]
[798.60449219 -58.96329117]
[812.60906982 -64.90697479]
[826.35968018 -59.29845428]
[840.08392334 -65.35202789]
[853.80810547 -71.40560150]
[863.31201172 -84.05419159]
[878.07934570 -82.11132812]
[891.80358887 -88.16490173]
[901.04669189 -101.71099854]
[917.37701416 -100.20960999]
[923.99523926 -85.20523834]
[914.09313965 -72.13310242]
[897.85717773 -74.44068146]
[884.13293457 -68.38710785]
[875.61071777 -56.17151260]
[859.86169434 -57.68138504]
[846.13751221 -51.62780762]
[832.41326904 -45.57423401]
[827.28363037 -31.63786507]
[813.45153809 -25.30317116]
[798.86859131 -30.77810860]
[785.14434814 -24.72453308]
[771.42016602 -18.67095757]
[757.69592285 -12.61738205]
[754.73687744 3.53917313]
[742.60406494 14.85624695]
[725.95031738 16.72247887]
[711.32598877 8.20422649]
[697.68151855 14.43545151]
[684.03704834 20.66667557]
[670.43328857 26.98633385]
[656.87084961 33.39416122]
[643.30841064 39.80198288]
[629.74597168 46.20980835]
[616.18353271 52.61763382]
[611.18432617 68.68505096]
[595.80377197 76.30644989]
[579.35571289 70.32081604]
[565.87762451 76.90415955]
[552.39947510 83.48750305]
[539.00799561 90.24526215]
[525.70532227 97.17628479]
[512.40264893 104.10731506]
[499.09997559 111.03833771]
[485.79730225 117.96936798]
[472.49465942 124.90039062]
[459.19198608 131.83142090]
[445.88931274 138.76245117]
[441.66333008 153.15484619]
[449.10705566 166.17755127]
[456.55075073 179.20027161]
[463.99447632 192.22297668]
[471.43820190 205.24569702]
[478.88192749 218.26841736]
[491.08596802 222.40031433]
[497.02142334 233.38305664]
[493.99111938 245.08039856]
[501.26516724 258.19863892]
[516.19183350 262.65194702]
[523.38189697 276.05935669]
[519.04431152 290.26220703]
[526.31835938 303.38046265]
[533.59240723 316.49871826]
[549.00988770 318.25381470]
[560.42852783 328.76068115]
[563.45758057 343.97924805]
[556.93237305 358.05761719]
[543.36187744 365.58239746]
[527.96435547 363.66015625]
[516.66040039 353.03002930]
[513.79656982 337.77951050]
[520.47418213 323.77273560]
[513.20013428 310.65447998]
[505.92608643 297.53625488]
[491.58172607 293.69244385]
[484.01794434 280.49230957]
[488.14691162 265.47268677]
[480.87289429 252.35443115]
[465.36087036 244.12915039]
[465.85919189 225.71212769]
[458.41549683 212.68940735]
[450.97177124 199.66670227]
[443.52804565 186.64398193]
[436.08432007 173.62127686]
[428.64062500 160.59855652]
[435.36245728 174.00813293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 120]
[13 119]
[14 118]
[15 117]
[16 115]
[17 114]
[18 112]
[19 111]
[20 110]
[21 109]
[22 108]
[33 97]
[34 96]
[35 95]
[36 94]
[37 60]
[38 59]
[39 58]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[79 90]
[80 89]
[81 88]
[82 87]
[123 203]
[124 202]
[125 201]
[126 200]
[127 199]
[128 198]
[129 197]
[130 196]
[133 195]
[134 194]
[135 193]
[139 190]
[140 189]
[141 188]
[142 187]
[143 186]
[145 185]
[146 184]
[147 183]
[152 179]
[153 178]
[154 177]
[155 176]
[158 173]
[159 172]
[160 171]
[162 169]
[163 168]
[204 240]
[205 239]
[206 238]
[207 237]
[208 236]
[209 235]
[212 233]
[213 232]
[216 229]
[217 228]
[218 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
