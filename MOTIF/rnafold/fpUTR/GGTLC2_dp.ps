%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GGTLC2)
} def

/sequence { (\
AGCUUAACGGAUUAAUAAGCGCAGCCAGGCCAGCUCUGGGGUCUCGGCAGGUGGUCCACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.006894190 ubox
2 12 0.007889363 ubox
2 20 0.615901017 ubox
2 22 0.031064811 ubox
2 25 0.127246862 ubox
2 52 0.010088218 ubox
2 55 0.007278093 ubox
3 10 0.027829133 ubox
3 19 0.620813486 ubox
3 21 0.030763690 ubox
3 24 0.127537001 ubox
3 51 0.010724229 ubox
3 54 0.007522723 ubox
4 9 0.025541409 ubox
4 10 0.003733564 ubox
4 11 0.009653493 ubox
4 15 0.041079909 ubox
4 18 0.619747719 ubox
4 19 0.007978863 ubox
4 23 0.125670119 ubox
4 50 0.010697719 ubox
4 53 0.004784966 ubox
4 61 0.041240667 ubox
5 9 0.003583133 ubox
5 10 0.010270753 ubox
5 14 0.061175698 ubox
5 17 0.614865462 ubox
5 18 0.008660826 ubox
5 23 0.006168541 ubox
5 49 0.010406675 ubox
5 60 0.044241435 ubox
6 13 0.067510149 ubox
6 16 0.589339565 ubox
7 12 0.062167262 ubox
7 55 0.004789219 ubox
8 21 0.127554839 ubox
8 46 0.009925816 ubox
8 54 0.005063834 ubox
9 20 0.127690864 ubox
9 26 0.018839643 ubox
9 45 0.009805275 ubox
9 56 0.003743741 ubox
9 57 0.757886549 ubox
10 25 0.018809289 ubox
10 43 0.010081373 ubox
10 56 0.758674250 ubox
11 42 0.010117503 ubox
11 55 0.756941147 ubox
12 18 0.020080899 ubox
12 19 0.012382362 ubox
12 24 0.007267998 ubox
12 41 0.010055846 ubox
12 54 0.750219353 ubox
12 61 0.013725255 ubox
13 17 0.019807331 ubox
13 18 0.022243981 ubox
13 23 0.006706104 ubox
13 40 0.009598798 ubox
13 53 0.353682652 ubox
13 60 0.015264850 ubox
14 52 0.213091755 ubox
15 52 0.040940412 ubox
15 55 0.014127483 ubox
16 51 0.050251854 ubox
16 53 0.020526508 ubox
16 54 0.022274068 ubox
17 52 0.016362122 ubox
18 35 0.008766066 ubox
18 37 0.003541669 ubox
19 25 0.015929757 ubox
19 34 0.009080284 ubox
19 36 0.003591989 ubox
19 48 0.064405951 ubox
19 52 0.185322214 ubox
19 55 0.030027071 ubox
20 24 0.015878858 ubox
20 33 0.009060420 ubox
20 46 0.047292595 ubox
20 47 0.063057045 ubox
20 51 0.202451920 ubox
20 53 0.682064154 ubox
20 54 0.026075855 ubox
21 30 0.006794757 ubox
21 34 0.003671376 ubox
21 42 0.018017639 ubox
21 45 0.048720255 ubox
21 48 0.018076461 ubox
21 52 0.742675380 ubox
21 55 0.039688371 ubox
22 29 0.006953138 ubox
22 33 0.003669003 ubox
22 41 0.019002291 ubox
22 47 0.017753031 ubox
22 51 0.751135523 ubox
22 53 0.046599387 ubox
22 54 0.040932840 ubox
23 44 0.059803748 ubox
23 52 0.046145003 ubox
24 30 0.006706667 ubox
24 42 0.026330171 ubox
24 43 0.059843932 ubox
24 48 0.901287534 ubox
24 52 0.041562730 ubox
24 55 0.017519974 ubox
25 29 0.006682011 ubox
25 39 0.061957458 ubox
25 40 0.006848543 ubox
25 41 0.043481344 ubox
25 47 0.901929818 ubox
25 51 0.044526483 ubox
25 54 0.018168419 ubox
26 38 0.062292344 ubox
26 39 0.005598485 ubox
26 40 0.043211810 ubox
26 46 0.901687020 ubox
26 50 0.044515751 ubox
26 53 0.018167129 ubox
27 35 0.004719103 ubox
27 37 0.062850572 ubox
27 44 0.895916927 ubox
27 52 0.016591853 ubox
28 34 0.004868371 ubox
28 36 0.062853099 ubox
28 37 0.009086415 ubox
28 43 0.901475894 ubox
28 44 0.036782820 ubox
28 45 0.007149222 ubox
28 56 0.354829612 ubox
28 57 0.219417337 ubox
29 34 0.022022850 ubox
29 35 0.049059453 ubox
29 36 0.009179407 ubox
29 42 0.901184229 ubox
29 43 0.037157877 ubox
29 44 0.003756386 ubox
29 48 0.046723660 ubox
29 52 0.005281118 ubox
29 55 0.359766477 ubox
29 56 0.218262914 ubox
30 39 0.050526818 ubox
30 40 0.030339743 ubox
30 41 0.901473216 ubox
30 47 0.046743771 ubox
30 51 0.006663533 ubox
30 54 0.421168460 ubox
31 38 0.053746387 ubox
31 39 0.040834467 ubox
31 40 0.900634964 ubox
31 46 0.046725781 ubox
31 50 0.006659949 ubox
31 53 0.421190660 ubox
32 37 0.056144438 ubox
32 44 0.039078575 ubox
32 52 0.420429845 ubox
33 42 0.024993936 ubox
33 43 0.038950394 ubox
33 48 0.007192803 ubox
33 52 0.010844165 ubox
34 40 0.007921839 ubox
34 41 0.044332759 ubox
34 47 0.007126155 ubox
34 50 0.420304802 ubox
34 51 0.018338506 ubox
35 39 0.012679778 ubox
35 40 0.040766326 ubox
35 41 0.011269888 ubox
35 46 0.005764309 ubox
35 49 0.418829557 ubox
35 50 0.010041527 ubox
35 51 0.010655559 ubox
36 40 0.012564274 ubox
36 46 0.004958800 ubox
36 47 0.420280428 ubox
36 50 0.019048525 ubox
37 46 0.420071048 ubox
37 49 0.019294178 ubox
38 44 0.007079400 ubox
38 45 0.419205751 ubox
38 48 0.019470094 ubox
39 43 0.051200741 ubox
39 44 0.327502284 ubox
39 45 0.018747555 ubox
40 44 0.014494527 ubox
40 57 0.006148131 ubox
41 56 0.006152873 ubox
42 54 0.003213881 ubox
43 53 0.003340536 ubox
43 54 0.005120315 ubox
44 51 0.003241317 ubox
44 53 0.003935676 ubox
45 50 0.003993854 ubox
45 53 0.003503796 ubox
46 52 0.003325859 ubox
46 56 0.003189645 ubox
47 55 0.003240528 ubox
48 54 0.003720567 ubox
50 56 0.015844923 ubox
50 57 0.310653165 ubox
51 55 0.010410219 ubox
51 56 0.310117485 ubox
51 59 0.210147517 ubox
51 62 0.046208345 ubox
52 58 0.210282953 ubox
52 60 0.090173458 ubox
52 61 0.043040581 ubox
53 57 0.207207173 ubox
53 59 0.112202299 ubox
54 62 0.021411621 ubox
55 61 0.020987417 ubox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
showpage
end
%%EOF
