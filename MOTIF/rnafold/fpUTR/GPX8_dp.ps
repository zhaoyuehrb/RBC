%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPX8)
} def

/sequence { (\
AAACUAAGCCGGUUUCAAGUUUCAGCUCCUCCUUGAAUUCCAGGCUGCUGAGACUUCCCUCUAGAAUCCUCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.007035779 ubox
1 15 0.215098334 ubox
2 13 0.006481666 ubox
2 14 0.273838512 ubox
2 15 0.011318078 ubox
3 13 0.286608772 ubox
3 14 0.008997132 ubox
4 12 0.288387102 ubox
4 64 0.399606355 ubox
5 11 0.279685344 ubox
5 47 0.009787955 ubox
5 63 0.400935811 ubox
6 14 0.008435106 ubox
6 15 0.009480745 ubox
6 46 0.007651082 ubox
6 49 0.003266777 ubox
6 62 0.325513163 ubox
7 13 0.009587452 ubox
7 14 0.010480601 ubox
7 15 0.004385351 ubox
7 46 0.093799896 ubox
7 60 0.152066645 ubox
7 62 0.302100398 ubox
7 70 0.038631894 ubox
8 13 0.007794945 ubox
8 14 0.004394205 ubox
8 45 0.097311365 ubox
8 59 0.152860231 ubox
8 61 0.380598497 ubox
8 69 0.037714106 ubox
9 44 0.097329269 ubox
10 43 0.097264113 ubox
11 40 0.016982952 ubox
11 41 0.094323165 ubox
11 55 0.003273456 ubox
11 56 0.004076767 ubox
11 57 0.026754565 ubox
11 58 0.450281181 ubox
11 59 0.237018530 ubox
11 60 0.053003477 ubox
11 61 0.063320331 ubox
11 62 0.143212033 ubox
11 68 0.116662291 ubox
11 69 0.751975161 ubox
11 70 0.030510808 ubox
11 71 0.016743774 ubox
11 72 0.066491104 ubox
12 39 0.016151336 ubox
12 40 0.094592245 ubox
12 54 0.003462218 ubox
12 56 0.019815718 ubox
12 57 0.450998777 ubox
12 58 0.236532556 ubox
12 59 0.058077431 ubox
12 60 0.057634406 ubox
12 61 0.151250376 ubox
12 67 0.117433734 ubox
12 68 0.751169921 ubox
12 69 0.033273356 ubox
12 70 0.012869086 ubox
12 71 0.066147965 ubox
12 75 0.006628171 ubox
13 37 0.003222821 ubox
13 53 0.003454052 ubox
13 64 0.007971155 ubox
13 65 0.014038510 ubox
13 66 0.122799576 ubox
13 74 0.006671984 ubox
14 37 0.094200962 ubox
14 52 0.003414624 ubox
14 63 0.008625528 ubox
14 64 0.015652529 ubox
14 65 0.116035204 ubox
14 66 0.697540250 ubox
14 73 0.005877378 ubox
15 36 0.097062039 ubox
15 51 0.003305312 ubox
15 63 0.014963961 ubox
15 64 0.104284258 ubox
15 65 0.754808785 ubox
16 35 0.097367322 ubox
16 50 0.003290622 ubox
16 64 0.756265300 ubox
17 34 0.097299669 ubox
17 56 0.952096916 ubox
18 27 0.005859811 ubox
18 33 0.096996880 ubox
18 55 0.989844793 ubox
18 56 0.013454186 ubox
18 60 0.013090767 ubox
18 62 0.033729342 ubox
19 26 0.006755597 ubox
19 32 0.096477765 ubox
19 54 0.994850789 ubox
19 59 0.009046688 ubox
19 61 0.023555299 ubox
20 25 0.006821850 ubox
20 53 0.994927655 ubox
21 52 0.994091460 ubox
22 51 0.994637236 ubox
23 50 0.995216133 ubox
24 30 0.017718827 ubox
24 46 0.003535293 ubox
24 49 0.994989479 ubox
25 29 0.018068251 ubox
25 45 0.003719768 ubox
25 48 0.995219726 ubox
26 44 0.003702818 ubox
26 47 0.994810856 ubox
27 36 0.008506395 ubox
27 43 0.003507419 ubox
27 44 0.009474278 ubox
28 35 0.008537514 ubox
28 43 0.011007968 ubox
28 44 0.539882672 ubox
29 43 0.539896417 ubox
29 44 0.157413531 ubox
30 36 0.029362445 ubox
30 42 0.502632750 ubox
30 43 0.138944754 ubox
30 44 0.022517931 ubox
31 35 0.037034008 ubox
31 43 0.044639433 ubox
31 44 0.679047689 ubox
32 43 0.679760896 ubox
32 44 0.452338490 ubox
33 42 0.589386011 ubox
33 43 0.457445935 ubox
33 44 0.003251973 ubox
34 42 0.584656854 ubox
34 43 0.004882301 ubox
35 41 0.680449355 ubox
42 70 0.003339889 ubox
43 69 0.003569702 ubox
44 68 0.003565744 ubox
46 73 0.007419065 ubox
47 72 0.014307135 ubox
48 64 0.053207772 ubox
49 63 0.052299274 ubox
49 73 0.019954001 ubox
50 61 0.062775200 ubox
50 62 0.011557502 ubox
50 68 0.004924777 ubox
50 71 0.069034664 ubox
50 72 0.016284078 ubox
51 60 0.063384139 ubox
51 62 0.013026967 ubox
51 67 0.004925452 ubox
51 70 0.070712284 ubox
52 59 0.063234793 ubox
52 61 0.015321419 ubox
52 68 0.011777288 ubox
52 69 0.070068260 ubox
52 71 0.007433218 ubox
53 60 0.014337234 ubox
53 67 0.014948013 ubox
53 70 0.007360863 ubox
54 64 0.005945029 ubox
55 63 0.007006080 ubox
55 66 0.074715667 ubox
56 63 0.009150375 ubox
56 64 0.003644110 ubox
56 65 0.088902435 ubox
57 64 0.094106869 ubox
63 70 0.092089633 ubox
64 69 0.099140024 ubox
64 71 0.124455503 ubox
65 70 0.117001656 ubox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
showpage
end
%%EOF
