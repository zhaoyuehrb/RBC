%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADAM8)
} def

/sequence { (\
GCGGAAAAGAGCCUCGGGCCAGGAGCGCAGGAACCAGACCGUGUCCCGCGGGGCUGUCACCUCCGCCUCUGCUCCCCGACCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.116115844 ubox
1 66 0.006625090 ubox
1 85 0.063989060 ubox
2 11 0.117135342 ubox
2 65 0.006647563 ubox
2 78 0.006653246 ubox
2 83 0.090221466 ubox
2 84 0.052552304 ubox
3 13 0.057342383 ubox
3 14 0.005679690 ubox
3 64 0.006657822 ubox
3 77 0.006740407 ubox
3 81 0.031168147 ubox
3 82 0.097796411 ubox
3 86 0.021298158 ubox
4 12 0.057326099 ubox
4 13 0.007837459 ubox
4 63 0.006657337 ubox
4 76 0.006701211 ubox
4 80 0.032539310 ubox
4 81 0.097246110 ubox
4 85 0.016722646 ubox
5 14 0.003812614 ubox
5 62 0.006508308 ubox
8 14 0.009649546 ubox
9 13 0.012676618 ubox
9 15 0.005260647 ubox
9 74 0.009878936 ubox
10 14 0.004717752 ubox
10 55 0.006369760 ubox
10 73 0.009902430 ubox
11 19 0.003879106 ubox
11 54 0.006657224 ubox
11 72 0.009901357 ubox
11 85 0.982131430 ubox
12 18 0.003905410 ubox
12 53 0.006657863 ubox
12 71 0.009871665 ubox
12 84 0.984587177 ubox
13 17 0.003877879 ubox
13 52 0.006656736 ubox
13 83 0.983996303 ubox
13 84 0.012465783 ubox
14 51 0.006623993 ubox
14 79 0.988410097 ubox
14 83 0.005647864 ubox
14 84 0.031797892 ubox
15 50 0.006512764 ubox
15 78 0.998233516 ubox
15 83 0.044513785 ubox
16 49 0.005974960 ubox
16 68 0.008929327 ubox
16 74 0.011507225 ubox
16 75 0.014176830 ubox
16 76 0.051374410 ubox
16 77 0.997102593 ubox
16 81 0.007344512 ubox
16 82 0.050238728 ubox
17 67 0.009631110 ubox
17 73 0.014652616 ubox
17 74 0.015026266 ubox
17 75 0.071615120 ubox
17 76 0.995815552 ubox
17 80 0.007358065 ubox
17 81 0.050290047 ubox
18 66 0.009637108 ubox
18 72 0.039107736 ubox
18 73 0.016611641 ubox
18 74 0.087038920 ubox
18 75 0.993099544 ubox
18 80 0.050206051 ubox
19 65 0.009599043 ubox
19 71 0.039169537 ubox
20 71 0.949273504 ubox
21 70 0.949596816 ubox
21 73 0.026164958 ubox
22 46 0.005895189 ubox
22 47 0.004525007 ubox
22 64 0.009604606 ubox
22 68 0.036751562 ubox
22 69 0.945671392 ubox
22 70 0.303440931 ubox
22 72 0.025346127 ubox
22 73 0.003221306 ubox
22 75 0.053044825 ubox
22 76 0.005712141 ubox
23 45 0.006203311 ubox
23 46 0.004592066 ubox
23 63 0.009657003 ubox
23 67 0.296571325 ubox
23 68 0.845372512 ubox
23 69 0.316739613 ubox
23 74 0.056192438 ubox
23 75 0.004094230 ubox
24 44 0.005295439 ubox
24 62 0.009630353 ubox
24 68 0.326474546 ubox
24 70 0.014452421 ubox
24 73 0.056356812 ubox
25 44 0.006178600 ubox
25 61 0.009575605 ubox
25 66 0.966789816 ubox
25 67 0.247241922 ubox
25 69 0.009391758 ubox
25 72 0.056266910 ubox
26 43 0.008230094 ubox
26 65 0.991158710 ubox
26 71 0.056218067 ubox
27 42 0.008321380 ubox
27 44 0.003956902 ubox
27 49 0.015123786 ubox
27 57 0.009094174 ubox
27 64 0.989725136 ubox
27 66 0.122289769 ubox
27 70 0.043236568 ubox
28 41 0.008303078 ubox
28 43 0.004313424 ubox
28 48 0.015151268 ubox
28 56 0.009190186 ubox
28 65 0.121998045 ubox
29 42 0.004140853 ubox
29 55 0.009179583 ubox
29 62 0.972564509 ubox
29 68 0.040650869 ubox
30 40 0.009418236 ubox
30 46 0.017775846 ubox
30 47 0.005940283 ubox
30 54 0.009143847 ubox
30 61 0.995018292 ubox
30 62 0.010177213 ubox
30 63 0.008303893 ubox
30 64 0.084016802 ubox
30 67 0.040953049 ubox
31 39 0.009405791 ubox
31 45 0.017882913 ubox
31 46 0.005931832 ubox
31 58 0.021952461 ubox
31 60 0.993421403 ubox
31 61 0.011377585 ubox
31 62 0.006343310 ubox
31 63 0.084111907 ubox
31 66 0.040444640 ubox
32 44 0.016453914 ubox
32 57 0.031932346 ubox
32 62 0.082634859 ubox
33 42 0.014255993 ubox
33 44 0.007059974 ubox
33 57 0.180998343 ubox
34 41 0.014395336 ubox
34 43 0.008380829 ubox
34 53 0.011822207 ubox
34 56 0.139749864 ubox
35 43 0.008003664 ubox
35 52 0.011874858 ubox
35 56 0.982327921 ubox
36 42 0.008215215 ubox
36 55 0.992677282 ubox
36 62 0.005865851 ubox
37 45 0.008478270 ubox
37 54 0.990298327 ubox
37 58 0.074641542 ubox
37 61 0.005591787 ubox
38 44 0.008502262 ubox
38 57 0.074789342 ubox
39 43 0.008424595 ubox
39 51 0.875059058 ubox
39 52 0.106299747 ubox
39 53 0.464875949 ubox
39 56 0.072608203 ubox
40 50 0.877873369 ubox
40 51 0.082919750 ubox
40 52 0.464747972 ubox
40 56 0.017838484 ubox
41 49 0.880751508 ubox
41 54 0.020100574 ubox
41 55 0.023000220 ubox
42 48 0.878880649 ubox
42 50 0.462911758 ubox
42 53 0.019525342 ubox
43 47 0.837119434 ubox
43 49 0.464855851 ubox
43 54 0.073217553 ubox
44 48 0.434887237 ubox
44 51 0.017567572 ubox
44 52 0.005617425 ubox
44 53 0.073025689 ubox
45 50 0.017472038 ubox
45 51 0.009970125 ubox
45 52 0.073327269 ubox
45 53 0.009230624 ubox
46 50 0.009945791 ubox
46 51 0.073290879 ubox
46 52 0.009323984 ubox
47 51 0.009292412 ubox
47 65 0.003544439 ubox
48 64 0.003677979 ubox
48 66 0.014379987 ubox
48 72 0.003180115 ubox
49 65 0.015149957 ubox
49 71 0.003184073 ubox
50 63 0.004363184 ubox
50 64 0.015280915 ubox
50 69 0.014847315 ubox
51 62 0.004563449 ubox
51 63 0.015246431 ubox
51 68 0.014957323 ubox
52 61 0.014016044 ubox
52 62 0.009914388 ubox
52 67 0.015440208 ubox
53 60 0.014009911 ubox
53 61 0.009811333 ubox
53 66 0.015445107 ubox
54 65 0.015397369 ubox
56 64 0.005230224 ubox
75 84 0.003215090 ubox
76 83 0.003242889 ubox
76 84 0.012899931 ubox
77 83 0.013204510 ubox
78 82 0.012433032 ubox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
16 77 0.9500000 lbox
17 76 0.9500000 lbox
18 75 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
