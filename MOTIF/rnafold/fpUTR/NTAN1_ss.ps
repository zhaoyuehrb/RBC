%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACGAGGCGGGACGCGCGGCCCGAGGGGCGGGGGCGGCGGGCGGCCCGGGGCUGCAAAGCGGGGGGCCGCCGCCUCCCUGGGCCUGCCUGGGCGGCCGCCUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[65.81739807 397.59735107]
[55.65236282 409.11117554]
[41.08718109 413.98468018]
[26.03981781 410.90692139]
[14.55793858 400.70587158]
[9.73011017 386.12545776]
[12.85499477 371.08782959]
[23.09201431 359.63796997]
[37.68746185 354.85586548]
[40.69327545 340.16012573]
[43.69909286 325.46438599]
[46.70490646 310.76861572]
[49.71072388 296.07287598]
[43.28110504 285.71438599]
[45.77346039 273.36886597]
[56.37474823 265.84906006]
[59.80281448 251.24603271]
[63.02009201 236.59512329]
[66.02590942 221.89936829]
[60.99593353 207.87979126]
[71.34168243 195.90998840]
[74.34749603 181.21423340]
[77.35331726 166.51849365]
[80.35913086 151.82273865]
[78.58927917 144.52841187]
[83.66912842 136.74957275]
[87.09719849 122.14655304]
[90.52526855 107.54352570]
[93.53108215 92.84777832]
[96.11215210 78.07151031]
[98.69321442 63.29524231]
[91.93337250 46.24292374]
[103.53667450 33.16458130]
[105.69084167 18.32006836]
[107.84501648 3.47555614]
[109.99919128 -11.36895657]
[104.32395172 -26.13724327]
[113.80883026 -37.62142181]
[115.96300507 -52.46593475]
[118.11717987 -67.31044769]
[120.27134705 -82.15496063]
[122.42552185 -96.99946594]
[120.54499054 -106.09775543]
[124.86163330 -112.23828888]
[127.44269562 -127.01455688]
[130.02375793 -141.79083252]
[132.60482788 -156.56709290]
[135.18589783 -171.34336853]
[137.76696777 -186.11962891]
[127.14300537 -197.27479553]
[125.14798737 -212.37026978]
[132.33921814 -225.58958435]
[145.77476501 -231.96328735]
[148.35583496 -246.73956299]
[150.93690491 -261.51583862]
[144.79830933 -276.72271729]
[155.11035156 -289.47393799]
[171.26490784 -286.65213013]
[176.64352417 -271.16009521]
[165.71316528 -258.93475342]
[163.13209534 -244.15849304]
[160.55104065 -229.38221741]
[171.03022766 -218.83117676]
[173.31414795 -203.95677185]
[166.31976318 -190.43153381]
[152.54322815 -183.53855896]
[149.96215820 -168.76229858]
[147.38110352 -153.98602295]
[144.80003357 -139.20976257]
[142.21896362 -124.43349457]
[139.63789368 -109.65722656]
[137.27003479 -94.84529877]
[135.11585999 -80.00078583]
[132.96168518 -65.15627289]
[130.80751038 -50.31175995]
[128.65335083 -35.46724701]
[134.48266602 -21.76074028]
[124.84370422 -9.21478367]
[122.68952942 5.62972832]
[120.53535461 20.47424126]
[118.38118744 35.31875229]
[125.39689636 45.28961945]
[123.61993408 57.75823593]
[113.46948242 65.87630463]
[110.88842010 80.65257263]
[108.30735016 95.42884064]
[110.34894562 100.44001770]
[109.34764099 106.23204041]
[105.12829590 110.97159576]
[101.70022583 125.57462311]
[98.27215576 140.17764282]
[95.05487823 154.82855225]
[92.04906464 169.52430725]
[89.04325104 184.22006226]
[86.03742981 198.91580200]
[90.85240936 213.98652649]
[80.72165680 224.90518188]
[77.71584320 239.60093689]
[79.06908417 248.79244995]
[74.40583801 254.67410278]
[70.97776794 269.27713013]
[76.74397278 286.69055176]
[64.40647125 299.07870483]
[61.40065765 313.77444458]
[58.39484406 328.47018433]
[55.38902664 343.16595459]
[52.38320923 357.86169434]
[63.92881393 367.99060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[16 101]
[17 100]
[18 98]
[19 97]
[21 95]
[22 94]
[23 93]
[24 92]
[26 91]
[27 90]
[28 89]
[29 86]
[30 85]
[31 84]
[33 81]
[34 80]
[35 79]
[36 78]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[53 62]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
