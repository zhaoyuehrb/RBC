%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACGUCCCGGAUUCCUCCCACGAGGGGGCGGGCUGCGGCCAAAUCUCCCGCCAGGUCAGCGGCCGGGCGCUGAUUGGCCCCAUGGCGGCGGGGCCGGCUCGUGAUUGGCCAGCACGCCGUGGUUUAAAGCGGUCGGCGCGGGAACCAGGGGCUUACUGCGGGACGGCCUUGGAGAGUACUCGGGUUCGUGAACUUCCCGGAGGCGCA\
) } def
/len { sequence length } bind def

/coor [
[315.57412720 469.39453125]
[315.35079956 454.39620972]
[315.12747192 439.39785767]
[314.90414429 424.39953613]
[298.64053345 411.96557617]
[293.37280273 393.55236816]
[299.68475342 376.87408447]
[289.68658447 365.69210815]
[279.68841553 354.51013184]
[269.69021606 343.32815552]
[259.69204712 332.14620972]
[249.61091614 321.03897095]
[239.44737244 310.00708008]
[232.60331726 307.21768188]
[229.21614075 298.73446655]
[219.21795654 287.55249023]
[209.21978760 276.37051392]
[199.22161865 265.18853760]
[189.22344971 254.00657654]
[174.22344971 254.00657654]
[164.22528076 265.18853760]
[154.22709656 276.37051392]
[151.40475464 292.52499390]
[135.91256714 297.90310669]
[123.68757629 286.97232056]
[127.30580139 270.97732544]
[143.04513550 266.37234497]
[153.04330444 255.19038391]
[163.04147339 244.00840759]
[156.40203857 225.41864014]
[163.55906677 209.26046753]
[155.14443970 196.84297180]
[141.59957886 190.64733887]
[140.26322937 174.88267517]
[131.84860229 162.46517944]
[123.43398285 150.04768372]
[115.01937103 137.63018799]
[106.60475159 125.21269226]
[98.19013214 112.79519653]
[85.89929199 104.19663239]
[71.34967041 100.54854584]
[56.80005264 96.90045166]
[42.25043106 93.25236511]
[27.70081139 89.60427856]
[13.15119076 85.95619202]
[4.06612206 86.90453339]
[-1.58708668 82.14396667]
[-16.08078003 78.27965546]
[-26.88254356 86.32555389]
[-40.15234375 86.67608643]
[-51.03979874 79.42726898]
[-55.69421768 67.41203308]
[-70.12876892 63.33236313]
[-84.56332397 59.25269699]
[-98.99787903 55.17303085]
[-114.38220215 58.86532211]
[-124.52532959 47.95815659]
[-138.95988464 43.87849045]
[-153.39443970 39.79882050]
[-167.82899475 35.71915436]
[-184.71551514 37.22967529]
[-190.84165955 21.42123985]
[-177.34690857 11.15829563]
[-163.74932861 21.28460121]
[-149.31477356 25.36426926]
[-134.88021851 29.44393539]
[-120.44566345 33.52360153]
[-106.09378815 29.53950691]
[-94.91821289 40.73847961]
[-80.48365784 44.81814575]
[-66.04910278 48.89781189]
[-51.61455154 52.97747803]
[-37.30067062 44.14845657]
[-20.70327759 48.48912048]
[-12.21647453 63.78596497]
[2.27721882 67.65026855]
[16.79927826 71.40657043]
[31.34889793 75.05465698]
[45.89851761 78.70274353]
[60.44813919 82.35083771]
[74.99775696 85.99892426]
[89.54737854 89.64701080]
[101.16464233 80.15811157]
[100.49485779 65.17307281]
[99.82507324 50.18803406]
[99.15528870 35.20299530]
[98.48550415 20.21795654]
[97.81571960 5.23291779]
[97.14593506 -9.75212097]
[96.47615051 -24.73715973]
[95.69482422 -39.71679688]
[94.80200958 -54.69020462]
[85.69064331 -63.81959152]
[85.25527191 -76.30935669]
[93.18421173 -85.44491577]
[92.51442719 -100.42995453]
[91.84464264 -115.41499329]
[91.17485809 -130.40003967]
[90.50507355 -145.38507080]
[89.83528900 -160.37011719]
[77.31015778 -169.73254395]
[73.78375244 -184.96731567]
[80.92112732 -198.88105774]
[95.35224152 -204.90409851]
[110.26316071 -200.19255066]
[118.61339569 -186.97106934]
[116.46023560 -171.48243713]
[104.82032776 -161.03990173]
[105.49011230 -146.05485535]
[106.15989685 -131.06982422]
[106.82968140 -116.08477783]
[107.49946594 -101.09973907]
[108.16925049 -86.11470032]
[118.39691162 -71.85420227]
[109.77541351 -55.58301926]
[110.66822815 -40.60961151]
[114.20428467 -34.11976624]
[111.46118927 -25.40694427]
[112.13097382 -10.42190647]
[112.80075836 4.56313276]
[113.47054291 19.54817200]
[114.14032745 34.53321075]
[114.81011200 49.51824951]
[115.47989655 64.50328827]
[116.14968109 79.48832703]
[130.20700073 74.25459290]
[144.25064087 79.52487183]
[151.39398193 92.71474457]
[148.13407898 107.35623169]
[136.06950378 116.26949310]
[121.11645508 115.08370209]
[110.60762787 104.38057709]
[119.02224731 116.79807281]
[127.43686676 129.21556091]
[135.85148621 141.63305664]
[144.26609802 154.05055237]
[152.68072510 166.46804810]
[166.82745361 173.55186462]
[167.56193542 188.42834473]
[175.97656250 200.84584045]
[196.27824402 202.97642517]
[208.12553406 221.58798218]
[200.40542603 244.00840759]
[210.40359497 255.19038391]
[220.40176392 266.37234497]
[230.39993286 277.55432129]
[240.39811707 288.73629761]
[250.47924805 299.84353638]
[260.64279175 310.87542725]
[268.75900269 315.06646729]
[270.87402344 322.14801025]
[280.87219238 333.32998657]
[290.87036133 344.51196289]
[300.86856079 355.69393921]
[310.86672974 366.87591553]
[327.67828369 362.92160034]
[344.52792358 369.91262817]
[354.63143921 386.25665283]
[353.22467041 406.39514160]
[364.62713623 416.14108276]
[380.14468384 419.22589111]
[384.79232788 433.37680054]
[396.19479370 443.12277222]
[407.59725952 452.86874390]
[418.99972534 462.61468506]
[430.40219116 472.36065674]
[442.22845459 481.58776855]
[454.45495605 490.27758789]
[466.68142700 498.96740723]
[478.97225952 507.56597900]
[491.32678223 516.07281494]
[503.68127441 524.57965088]
[510.23065186 525.48382568]
[514.67327881 529.02777100]
[516.27185059 533.52819824]
[528.36761475 542.39910889]
[540.46331787 551.27001953]
[556.81494141 552.51818848]
[563.66485596 567.41821289]
[553.96649170 580.64221191]
[537.69671631 578.58648682]
[531.59246826 563.36572266]
[519.49670410 554.49487305]
[507.40093994 545.62396240]
[495.17446899 536.93414307]
[482.81994629 528.42730713]
[470.46545410 519.92047119]
[463.17355347 518.71618652]
[457.99160767 511.19390869]
[445.76513672 502.50405884]
[433.53863525 493.81423950]
[434.96496582 508.74627686]
[425.52169800 520.40069580]
[410.61840820 522.10125732]
[398.79235840 512.87390137]
[396.81805420 498.00439453]
[405.82644653 486.01071167]
[420.65621948 483.76312256]
[409.25375366 474.01715088]
[397.85128784 464.27117920]
[386.44885254 454.52523804]
[375.04638672 444.77926636]
[360.34439087 442.39157104]
[354.88116455 427.54354858]
[343.47869873 417.79757690]
[329.90249634 424.17620850]
[330.12582397 439.17453003]
[330.34915161 454.17288208]
[330.57247925 469.17120361]
[333.04980469 488.39392090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[12 149]
[13 148]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 29]
[21 28]
[22 27]
[31 140]
[32 139]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[40 82]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[47 76]
[48 75]
[52 72]
[53 71]
[54 70]
[55 69]
[57 67]
[58 66]
[59 65]
[60 64]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 116]
[92 115]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[159 205]
[160 204]
[162 202]
[163 201]
[164 200]
[165 199]
[166 198]
[167 191]
[168 190]
[169 189]
[170 187]
[171 186]
[172 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
