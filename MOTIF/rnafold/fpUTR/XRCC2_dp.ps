%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (XRCC2)
} def

/sequence { (\
UUUGACUGGCCGUAGAGUCUGCGCAGUUGGUGAAUGGCGUUGGUGGCGGGAAAGUUGAGUCUCUCCUGCGCCGAGCCUUCGGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.045656916 ubox
1 33 0.015104982 ubox
1 34 0.026670797 ubox
1 59 0.006318671 ubox
1 82 0.008591773 ubox
1 83 0.016275509 ubox
1 84 0.011762021 ubox
2 29 0.043809995 ubox
2 30 0.531330692 ubox
2 32 0.015242412 ubox
2 33 0.031200703 ubox
2 34 0.134060223 ubox
2 58 0.008294636 ubox
2 81 0.006776882 ubox
2 82 0.018771478 ubox
2 83 0.014796826 ubox
2 84 0.008205651 ubox
3 21 0.006677207 ubox
3 25 0.007499929 ubox
3 29 0.727571136 ubox
3 32 0.029986010 ubox
3 33 0.152855527 ubox
3 57 0.008481603 ubox
3 81 0.016856147 ubox
3 82 0.012865540 ubox
3 83 0.008449433 ubox
3 86 0.011119288 ubox
4 19 0.111650323 ubox
4 24 0.007906400 ubox
4 28 0.919675077 ubox
4 31 0.015561079 ubox
4 56 0.008952204 ubox
4 80 0.013822892 ubox
4 85 0.018131849 ubox
5 18 0.111871269 ubox
5 27 0.940633496 ubox
5 31 0.284174575 ubox
5 55 0.009039457 ubox
5 79 0.007689216 ubox
6 15 0.004804142 ubox
6 17 0.111891505 ubox
6 26 0.943101488 ubox
6 30 0.296941010 ubox
6 54 0.009045865 ubox
6 82 0.006018354 ubox
6 83 0.004459771 ubox
6 84 0.003982720 ubox
7 14 0.005286851 ubox
7 16 0.111704967 ubox
7 25 0.936905036 ubox
7 29 0.295806543 ubox
7 53 0.008947281 ubox
7 81 0.005902558 ubox
7 82 0.004212705 ubox
7 83 0.003747580 ubox
7 86 0.013109743 ubox
8 13 0.006253991 ubox
8 19 0.011253155 ubox
8 24 0.856412776 ubox
8 28 0.292002789 ubox
8 80 0.005386365 ubox
8 85 0.023467053 ubox
9 18 0.012407053 ubox
9 22 0.102798492 ubox
9 24 0.381136906 ubox
9 27 0.296390062 ubox
9 31 0.004302507 ubox
9 38 0.005505756 ubox
9 85 0.052247515 ubox
10 17 0.012536883 ubox
10 21 0.101300677 ubox
10 23 0.371309840 ubox
10 26 0.294872570 ubox
10 30 0.004607108 ubox
10 37 0.005524898 ubox
10 49 0.008619259 ubox
10 82 0.003614174 ubox
10 83 0.023501769 ubox
10 84 0.052304667 ubox
11 21 0.053643167 ubox
11 23 0.894269447 ubox
11 29 0.004416902 ubox
11 36 0.005516395 ubox
11 48 0.008786466 ubox
11 81 0.003768364 ubox
11 82 0.023346725 ubox
11 83 0.051707966 ubox
12 18 0.009374341 ubox
12 20 0.047290911 ubox
12 22 0.986150261 ubox
12 24 0.013953836 ubox
12 28 0.003264892 ubox
12 35 0.005338206 ubox
12 47 0.008942934 ubox
13 17 0.006421519 ubox
13 21 0.986065246 ubox
13 23 0.013428258 ubox
13 34 0.005172031 ubox
13 46 0.008855566 ubox
14 20 0.984614449 ubox
14 78 0.003284284 ubox
15 19 0.963290613 ubox
15 77 0.003423009 ubox
15 79 0.004453304 ubox
15 80 0.009774525 ubox
16 78 0.004725752 ubox
16 79 0.009549923 ubox
17 24 0.004970082 ubox
17 77 0.004664474 ubox
17 78 0.007671405 ubox
18 23 0.004701873 ubox
18 30 0.003403467 ubox
18 33 0.004463097 ubox
18 43 0.007638856 ubox
19 29 0.004151759 ubox
19 30 0.003165654 ubox
19 32 0.004577625 ubox
19 42 0.008325392 ubox
19 75 0.004494403 ubox
20 29 0.003176744 ubox
20 39 0.003960436 ubox
20 74 0.004361849 ubox
20 86 0.013331522 ubox
21 27 0.004137964 ubox
21 31 0.009152587 ubox
21 38 0.005199654 ubox
21 40 0.031363672 ubox
21 85 0.024007074 ubox
22 26 0.004302606 ubox
22 29 0.004755182 ubox
22 30 0.009685557 ubox
22 32 0.010861667 ubox
22 37 0.005194671 ubox
22 39 0.037848926 ubox
22 84 0.024012000 ubox
22 86 0.080084399 ubox
23 28 0.003674144 ubox
23 31 0.023631655 ubox
23 38 0.038147937 ubox
23 85 0.086719013 ubox
24 30 0.024995839 ubox
24 32 0.006494282 ubox
24 36 0.005068867 ubox
24 37 0.037908967 ubox
24 84 0.086694851 ubox
25 31 0.006813392 ubox
25 35 0.005089499 ubox
26 35 0.034729565 ubox
26 85 0.088325437 ubox
27 34 0.037945671 ubox
27 82 0.017163949 ubox
27 83 0.011536618 ubox
27 84 0.088308591 ubox
28 33 0.037420187 ubox
28 81 0.014241952 ubox
28 82 0.015122757 ubox
28 83 0.085769104 ubox
28 86 0.027631981 ubox
29 38 0.005757042 ubox
29 80 0.013559633 ubox
29 85 0.118410972 ubox
30 38 0.020807368 ubox
30 79 0.010717348 ubox
30 85 0.234005016 ubox
31 37 0.020733474 ubox
31 39 0.003746640 ubox
31 81 0.708834924 ubox
31 84 0.219317016 ubox
31 86 0.007587150 ubox
32 38 0.005432579 ubox
32 79 0.012456671 ubox
32 80 0.969839376 ubox
32 85 0.012010411 ubox
33 78 0.013384865 ubox
33 79 0.969344818 ubox
34 78 0.923389226 ubox
35 73 0.007988006 ubox
35 81 0.010394886 ubox
36 72 0.012838039 ubox
36 77 0.996346685 ubox
36 78 0.014294578 ubox
36 80 0.004559298 ubox
37 71 0.012846502 ubox
37 76 0.996713543 ubox
37 77 0.015248368 ubox
37 85 0.004754875 ubox
38 70 0.012844322 ubox
38 75 0.995396778 ubox
38 84 0.004757278 ubox
39 69 0.011764292 ubox
39 76 0.005880941 ubox
40 68 0.010989287 ubox
40 74 0.950568319 ubox
40 75 0.004937995 ubox
41 73 0.990838523 ubox
41 74 0.008975737 ubox
42 66 0.008850901 ubox
42 72 0.999778425 ubox
43 65 0.008808723 ubox
43 71 0.999794075 ubox
44 70 0.965927350 ubox
45 61 0.006437960 ubox
45 63 0.003186501 ubox
45 66 0.007571812 ubox
45 69 0.684694614 ubox
46 60 0.006543948 ubox
46 64 0.003247438 ubox
46 65 0.007745423 ubox
46 69 0.728134014 ubox
47 59 0.006686911 ubox
47 68 0.997527732 ubox
48 63 0.009620840 ubox
48 66 0.017096390 ubox
48 67 0.998896318 ubox
49 62 0.009936927 ubox
49 64 0.003238888 ubox
49 65 0.016552838 ubox
49 66 0.999713648 ubox
50 61 0.010250645 ubox
50 63 0.010252668 ubox
50 64 0.011303935 ubox
50 65 0.999704049 ubox
51 60 0.010207616 ubox
51 62 0.009637523 ubox
51 64 0.977072956 ubox
53 62 0.971784668 ubox
53 64 0.040255790 ubox
54 60 0.008410407 ubox
54 61 0.987664645 ubox
54 63 0.067011946 ubox
55 59 0.062786589 ubox
57 63 0.030779415 ubox
57 65 0.003206265 ubox
58 62 0.026797188 ubox
58 64 0.004276467 ubox
59 63 0.005476657 ubox
67 86 0.005331362 ubox
68 85 0.010166563 ubox
69 84 0.010177439 ubox
71 82 0.010697932 ubox
72 81 0.010706780 ubox
73 80 0.010720403 ubox
74 79 0.010026710 ubox
75 85 0.077730470 ubox
76 83 0.007478895 ubox
76 84 0.077762337 ubox
77 82 0.008499899 ubox
77 83 0.077689875 ubox
78 82 0.070033736 ubox
78 83 0.004001673 ubox
78 84 0.003935668 ubox
79 83 0.003812361 ubox
80 86 0.020319634 ubox
81 85 0.033680468 ubox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
31 81 0.9500000 lbox
32 80 0.9500000 lbox
33 79 0.9500000 lbox
34 78 0.9500000 lbox
36 77 0.9500000 lbox
37 76 0.9500000 lbox
38 75 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
