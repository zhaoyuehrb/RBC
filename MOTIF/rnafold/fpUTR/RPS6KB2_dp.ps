%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS6KB2)
} def

/sequence { (\
GGAGAGAUGAUGUUUAGGUCCGGGACUGUCAGUCAGUGCGCGGCCAGGUACGGGCCGACGGGCCCGCGGGGCCGGCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.006549554 ubox
1 20 0.008607218 ubox
1 21 0.453568094 ubox
1 27 0.003440374 ubox
1 30 0.010146920 ubox
1 34 0.021372127 ubox
1 79 0.070886888 ubox
1 82 0.145224000 ubox
2 14 0.007832342 ubox
2 15 0.011088361 ubox
2 19 0.008177690 ubox
2 20 0.453855353 ubox
2 26 0.003645240 ubox
2 29 0.008542035 ubox
2 30 0.070677077 ubox
2 33 0.014859284 ubox
2 34 0.171919427 ubox
2 78 0.052803405 ubox
2 81 0.146241960 ubox
3 13 0.007934075 ubox
3 14 0.011676161 ubox
3 15 0.018939508 ubox
3 19 0.448386990 ubox
3 27 0.009990684 ubox
3 29 0.070757234 ubox
3 33 0.171843786 ubox
4 13 0.013206222 ubox
4 14 0.040912927 ubox
4 15 0.083319684 ubox
4 20 0.034806514 ubox
4 26 0.010177530 ubox
4 30 0.008290999 ubox
4 34 0.236641762 ubox
5 13 0.040826204 ubox
5 14 0.083828668 ubox
5 15 0.185964836 ubox
5 19 0.035534544 ubox
5 27 0.070471085 ubox
5 29 0.008104110 ubox
5 33 0.232506008 ubox
6 13 0.070882566 ubox
6 14 0.221084198 ubox
6 15 0.183511279 ubox
6 20 0.051639050 ubox
6 26 0.070375060 ubox
6 30 0.173533055 ubox
6 34 0.288493421 ubox
7 13 0.221610365 ubox
7 14 0.194833913 ubox
7 19 0.052079946 ubox
7 29 0.173361087 ubox
7 33 0.282939591 ubox
7 37 0.041882027 ubox
8 12 0.205422077 ubox
8 16 0.215136675 ubox
8 18 0.052335435 ubox
8 22 0.029302681 ubox
8 28 0.169899956 ubox
8 31 0.339022543 ubox
8 32 0.185355117 ubox
8 35 0.682847013 ubox
8 36 0.025884049 ubox
8 80 0.005511735 ubox
9 15 0.215150943 ubox
9 20 0.122270797 ubox
9 21 0.024251366 ubox
9 27 0.071581652 ubox
9 30 0.379368235 ubox
9 34 0.758201421 ubox
9 79 0.006930401 ubox
10 14 0.183595424 ubox
10 19 0.124626948 ubox
10 29 0.379425971 ubox
10 33 0.757040358 ubox
11 18 0.123951290 ubox
11 22 0.026772872 ubox
11 28 0.364452075 ubox
11 31 0.173809131 ubox
11 32 0.738097678 ubox
11 35 0.022974724 ubox
11 77 0.004209891 ubox
12 21 0.028076111 ubox
12 26 0.291640411 ubox
12 27 0.080784232 ubox
12 29 0.007867997 ubox
12 30 0.205557336 ubox
12 34 0.025462275 ubox
12 76 0.004752747 ubox
12 79 0.003255413 ubox
12 81 0.005724048 ubox
13 18 0.003785207 ubox
13 23 0.008555292 ubox
13 24 0.021459184 ubox
13 25 0.293180720 ubox
13 28 0.019118216 ubox
13 32 0.017824666 ubox
13 75 0.004667078 ubox
13 80 0.005533904 ubox
14 22 0.008112493 ubox
14 23 0.029242141 ubox
14 24 0.290738518 ubox
14 25 0.057476024 ubox
14 31 0.026282262 ubox
14 32 0.007910984 ubox
14 74 0.003547946 ubox
15 22 0.030603282 ubox
15 23 0.274513620 ubox
15 24 0.058988043 ubox
15 28 0.411389450 ubox
15 31 0.010975111 ubox
16 27 0.423560467 ubox
17 26 0.410491425 ubox
17 27 0.694172707 ubox
17 45 0.009213972 ubox
17 73 0.008888662 ubox
17 79 0.013885070 ubox
17 82 0.052009188 ubox
18 26 0.709978106 ubox
18 44 0.009224102 ubox
18 72 0.008901785 ubox
18 78 0.013546054 ubox
18 81 0.052384323 ubox
19 25 0.717800799 ubox
19 43 0.007900480 ubox
19 71 0.008813110 ubox
19 77 0.012879245 ubox
19 80 0.045030737 ubox
20 24 0.712139246 ubox
20 42 0.007877789 ubox
20 43 0.004763552 ubox
20 70 0.008706523 ubox
20 75 0.006506632 ubox
21 28 0.003968555 ubox
21 40 0.008206644 ubox
21 42 0.004805254 ubox
21 66 0.004448096 ubox
21 69 0.007818756 ubox
21 74 0.006490018 ubox
21 80 0.047582833 ubox
22 27 0.003471648 ubox
22 30 0.019427994 ubox
22 34 0.011700336 ubox
22 37 0.011006598 ubox
22 39 0.010144043 ubox
22 41 0.004884405 ubox
22 65 0.011738732 ubox
22 73 0.006315102 ubox
22 79 0.065186486 ubox
22 82 0.107491458 ubox
23 29 0.018593203 ubox
23 30 0.013232715 ubox
23 33 0.010088221 ubox
23 34 0.023476563 ubox
23 64 0.011758199 ubox
23 72 0.006291722 ubox
23 78 0.055947169 ubox
23 79 0.037879275 ubox
23 81 0.107852320 ubox
23 82 0.043765785 ubox
24 29 0.009800891 ubox
24 30 0.015051362 ubox
24 33 0.014587366 ubox
24 34 0.407547109 ubox
24 63 0.011538295 ubox
24 78 0.029598639 ubox
24 81 0.043732798 ubox
25 29 0.013130733 ubox
25 33 0.408512072 ubox
25 37 0.229561118 ubox
26 32 0.408642965 ubox
26 36 0.236134584 ubox
26 61 0.011812746 ubox
26 69 0.006159418 ubox
27 31 0.368145586 ubox
27 35 0.236833473 ubox
27 60 0.011900405 ubox
27 68 0.006154867 ubox
28 34 0.236757070 ubox
28 59 0.011930675 ubox
28 67 0.006134577 ubox
28 79 0.003849038 ubox
28 81 0.003308938 ubox
29 58 0.011930061 ubox
29 66 0.005917691 ubox
29 80 0.003263478 ubox
30 57 0.011907029 ubox
32 55 0.011919079 ubox
32 63 0.003163825 ubox
32 81 0.081296070 ubox
33 54 0.011911413 ubox
33 80 0.080139073 ubox
34 53 0.011691665 ubox
36 51 0.012790661 ubox
36 78 0.760610665 ubox
36 81 0.516406940 ubox
37 50 0.012890223 ubox
37 77 0.763027807 ubox
37 80 0.514787746 ubox
38 49 0.012899127 ubox
38 76 0.768501367 ubox
38 78 0.520898383 ubox
38 79 0.365627424 ubox
38 81 0.034575414 ubox
39 48 0.012901835 ubox
39 60 0.004006738 ubox
39 75 0.767963419 ubox
39 77 0.637470924 ubox
39 80 0.034654373 ubox
40 59 0.004068727 ubox
40 76 0.636608489 ubox
40 78 0.022448002 ubox
40 79 0.033641061 ubox
40 81 0.023954005 ubox
41 57 0.004869116 ubox
41 74 0.888722747 ubox
41 75 0.450915094 ubox
41 77 0.023217929 ubox
41 80 0.024008024 ubox
42 56 0.005105405 ubox
42 73 0.998172312 ubox
42 76 0.015543325 ubox
42 79 0.024003599 ubox
43 55 0.005106852 ubox
43 72 0.998973946 ubox
43 76 0.030995200 ubox
43 78 0.023856419 ubox
44 54 0.005090332 ubox
44 70 0.025956629 ubox
44 71 0.998637075 ubox
44 75 0.034463114 ubox
44 77 0.023695762 ubox
45 53 0.005070632 ubox
45 69 0.036649551 ubox
45 70 0.997839382 ubox
45 74 0.034438852 ubox
47 73 0.041836105 ubox
48 67 0.752920742 ubox
48 72 0.041853333 ubox
49 66 0.435883636 ubox
49 71 0.040970639 ubox
51 66 0.887031399 ubox
51 68 0.006180204 ubox
52 64 0.003763091 ubox
52 65 0.999135419 ubox
53 63 0.003309906 ubox
53 64 0.999896283 ubox
54 63 0.999900396 ubox
55 61 0.008226743 ubox
55 62 0.999871603 ubox
56 60 0.011216873 ubox
56 61 0.999509214 ubox
61 73 0.003467739 ubox
62 72 0.003696706 ubox
63 71 0.003751594 ubox
64 70 0.003755876 ubox
65 69 0.003729521 ubox
66 81 0.009256726 ubox
67 80 0.009423358 ubox
68 79 0.009390225 ubox
68 82 0.006955065 ubox
69 78 0.009375473 ubox
69 81 0.007002455 ubox
70 79 0.007597459 ubox
71 78 0.007617044 ubox
72 77 0.007607722 ubox
74 82 0.007762653 ubox
75 81 0.008183088 ubox
76 80 0.008126595 ubox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
36 78 0.9500000 lbox
37 77 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
51 66 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
