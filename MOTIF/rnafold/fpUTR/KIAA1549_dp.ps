%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1549)
} def

/sequence { (\
GACCCGAGAGCCGCUGAGCCGCGAGGCCGGGCCGGGGCGCCGGCCGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 26 0.205902694 ubox
3 31 0.016321755 ubox
3 36 0.008889400 ubox
3 47 0.038352697 ubox
3 48 0.863359819 ubox
4 25 0.205590543 ubox
4 26 0.335997133 ubox
4 30 0.019072180 ubox
4 35 0.012024374 ubox
4 43 0.022676677 ubox
4 46 0.037985585 ubox
4 47 0.867240011 ubox
4 48 0.046166522 ubox
5 13 0.036573546 ubox
5 16 0.017160025 ubox
5 21 0.013674633 ubox
5 23 0.163617638 ubox
5 25 0.339460222 ubox
5 29 0.027342137 ubox
5 34 0.012052333 ubox
5 42 0.023231515 ubox
5 46 0.866931603 ubox
5 47 0.045915844 ubox
6 12 0.075059648 ubox
6 15 0.016734471 ubox
6 20 0.014045482 ubox
6 22 0.156244659 ubox
6 28 0.033192095 ubox
6 33 0.012033786 ubox
6 41 0.023369367 ubox
6 45 0.757462135 ubox
7 15 0.114052127 ubox
8 14 0.119619661 ubox
9 15 0.052482851 ubox
10 14 0.053840200 ubox
10 19 0.159523359 ubox
10 22 0.385538496 ubox
10 27 0.174627497 ubox
10 32 0.017905814 ubox
10 38 0.116030858 ubox
10 40 0.010954566 ubox
10 44 0.268947107 ubox
11 18 0.160124927 ubox
11 21 0.385220274 ubox
11 26 0.180889968 ubox
11 30 0.304252228 ubox
11 31 0.020149794 ubox
11 35 0.058782847 ubox
11 36 0.004253472 ubox
11 37 0.116056364 ubox
11 39 0.009113112 ubox
11 43 0.269136541 ubox
11 47 0.038195364 ubox
11 48 0.025184188 ubox
12 21 0.032560745 ubox
12 23 0.327603186 ubox
12 25 0.166442658 ubox
12 29 0.314567119 ubox
12 30 0.022073349 ubox
12 34 0.058954219 ubox
12 35 0.004528027 ubox
12 36 0.115948304 ubox
12 39 0.013019881 ubox
12 42 0.268740406 ubox
12 46 0.038332351 ubox
12 47 0.025092131 ubox
13 19 0.384127247 ubox
13 20 0.037232482 ubox
13 22 0.361178455 ubox
13 27 0.020906857 ubox
13 28 0.310775613 ubox
13 32 0.064173442 ubox
13 33 0.043591512 ubox
13 38 0.019583289 ubox
13 40 0.074544902 ubox
13 41 0.252941897 ubox
13 44 0.040650883 ubox
13 45 0.029120267 ubox
14 18 0.381806999 ubox
14 21 0.360987508 ubox
14 25 0.015992663 ubox
14 26 0.027242692 ubox
14 30 0.624793925 ubox
14 31 0.075438462 ubox
14 35 0.122301318 ubox
14 36 0.020114681 ubox
14 37 0.019947141 ubox
14 39 0.105188966 ubox
14 43 0.041064798 ubox
15 21 0.017712080 ubox
15 23 0.042810642 ubox
15 24 0.017625397 ubox
15 25 0.026376515 ubox
15 29 0.656321794 ubox
15 30 0.076245050 ubox
15 34 0.122740557 ubox
15 35 0.020534319 ubox
15 36 0.018766275 ubox
15 39 0.048935645 ubox
15 42 0.041022595 ubox
16 20 0.041412719 ubox
16 22 0.046927078 ubox
16 28 0.679204945 ubox
16 33 0.123022766 ubox
16 38 0.035779910 ubox
16 41 0.041314194 ubox
18 27 0.772256701 ubox
18 32 0.124872012 ubox
18 38 0.257847206 ubox
18 40 0.029628272 ubox
19 26 0.773846412 ubox
19 30 0.022013919 ubox
19 31 0.124753889 ubox
19 35 0.034494780 ubox
19 36 0.006631351 ubox
19 37 0.258185175 ubox
19 39 0.021036019 ubox
20 25 0.773576589 ubox
20 29 0.023663070 ubox
20 30 0.124512194 ubox
20 34 0.034501833 ubox
20 35 0.006752744 ubox
20 36 0.258143328 ubox
20 39 0.022318101 ubox
21 27 0.017609976 ubox
21 28 0.022277709 ubox
21 32 0.025116543 ubox
21 33 0.024475813 ubox
21 38 0.030620560 ubox
21 40 0.003216269 ubox
22 26 0.019488897 ubox
22 29 0.120660275 ubox
22 31 0.033873386 ubox
22 34 0.229634918 ubox
22 37 0.030613572 ubox
22 39 0.003624088 ubox
23 28 0.119665899 ubox
23 33 0.125232540 ubox
23 38 0.003375995 ubox
25 33 0.226706533 ubox
25 45 0.211410989 ubox
26 32 0.245558361 ubox
26 44 0.223754125 ubox
27 31 0.243927779 ubox
27 35 0.005143572 ubox
27 43 0.223814478 ubox
27 47 0.091507430 ubox
27 48 0.471599248 ubox
28 34 0.005216231 ubox
28 42 0.223813413 ubox
28 46 0.093897113 ubox
28 47 0.478837057 ubox
29 33 0.004889912 ubox
29 41 0.222988065 ubox
29 45 0.078620019 ubox
30 40 0.221941873 ubox
30 41 0.022209403 ubox
30 44 0.055808818 ubox
30 45 0.598482770 ubox
31 38 0.219773648 ubox
31 40 0.032470183 ubox
31 44 0.923034521 ubox
32 37 0.219224866 ubox
32 39 0.037473150 ubox
32 43 0.926102466 ubox
32 47 0.010323592 ubox
32 48 0.010507383 ubox
33 39 0.009968333 ubox
33 42 0.926404365 ubox
33 46 0.010374683 ubox
33 47 0.010535098 ubox
34 38 0.010692103 ubox
34 41 0.927173678 ubox
34 45 0.010070746 ubox
35 40 0.926186968 ubox
35 41 0.012068479 ubox
35 44 0.009986068 ubox
35 45 0.005330979 ubox
36 40 0.014571851 ubox
36 44 0.004385953 ubox
36 45 0.058684335 ubox
37 44 0.061518179 ubox
38 43 0.061615041 ubox
40 47 0.004006757 ubox
40 48 0.007060909 ubox
41 46 0.004018345 ubox
41 47 0.007080897 ubox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
