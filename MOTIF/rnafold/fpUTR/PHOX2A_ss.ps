%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCGUUGCACCCGGGCUGAGUGCGGCCGCGACGGGGCGGGCGGACUCUCGGGCGCUCAGAGCUGGCCUCGGGUCCUCGGAGCCUGGCGCUCGAACCUCCCUUCCGACCUCCACCCGGACCCCGACCCCGACCCGGCCUGGCCCGGCCCCCGCCCCCGCCCCCCGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[113.01259613 163.70262146]
[99.06504059 169.22218323]
[89.15396118 157.96293640]
[96.39794159 144.82832336]
[100.29325104 130.34294128]
[104.18856812 115.85754395]
[96.89659119 114.10339355]
[86.53346252 124.94800568]
[76.17033386 135.79261780]
[65.80721283 146.63723755]
[55.44408417 157.48184204]
[55.62896347 173.05757141]
[44.96479416 183.90792847]
[30.11457062 183.98820496]
[19.75144386 194.83280945]
[9.38831711 205.67742920]
[5.44798946 221.00009155]
[-8.93883419 224.85607910]
[-19.30195999 235.70068359]
[-25.87347603 251.32923889]
[-42.71043015 249.34095764]
[-45.46078110 232.61157227]
[-30.14657211 225.33755493]
[-19.78344536 214.49295044]
[-16.58435822 199.94595337]
[-1.45629442 195.31430054]
[8.90683270 184.46968079]
[19.26995850 173.62507629]
[18.67619514 158.78649902]
[29.03139305 147.64089966]
[44.59947205 147.11871338]
[54.96259689 136.27410889]
[65.32572174 125.42948914]
[75.68885040 114.58487701]
[86.05197906 103.74026489]
[94.17200470 91.12816620]
[99.75460052 77.20571136]
[105.33720398 63.28326416]
[110.91979980 49.36081696]
[116.50240326 35.43836594]
[122.08499908 21.51591873]
[127.66759491 7.59346914]
[133.25019836 -6.32897997]
[133.54437256 -15.49527550]
[139.06263733 -20.45205688]
[144.89714050 -34.27083969]
[144.18717957 -38.63697433]
[144.85728455 -42.59487915]
[146.60414124 -45.75587845]
[149.02830505 -47.87218094]
[151.68942261 -48.85615158]
[158.51141357 -62.21506119]
[165.33340454 -75.57397461]
[172.15539551 -88.93287659]
[178.97738647 -102.29178619]
[185.79937744 -115.65069580]
[185.52171326 -120.93479919]
[187.15626526 -125.34264374]
[190.04034424 -128.28778076]
[193.37396240 -129.53614807]
[200.91323853 -142.50376892]
[208.45252991 -155.47138977]
[210.07057190 -164.49853516]
[216.24827576 -168.60424805]
[224.02178955 -181.43283081]
[231.79530334 -194.26141357]
[239.56881714 -207.08999634]
[247.34231567 -219.91857910]
[245.03283691 -232.63203430]
[251.80030823 -243.16566467]
[263.54580688 -246.15097046]
[271.55096436 -258.83630371]
[279.55615234 -271.52160645]
[287.56134033 -284.20690918]
[295.56649780 -296.89221191]
[292.54870605 -307.38900757]
[295.75958252 -317.59793091]
[303.90090942 -324.20013428]
[314.11489868 -325.19046021]
[322.57540894 -337.57675171]
[331.03591919 -349.96301270]
[335.85214233 -364.16879272]
[336.66891479 -379.14654541]
[337.48568726 -394.12426758]
[338.30245972 -409.10202026]
[328.70654297 -421.95883179]
[332.91464233 -437.44015503]
[347.69869995 -443.67004395]
[361.71762085 -435.86947632]
[364.21731567 -420.02233887]
[353.28021240 -408.28524780]
[352.46343994 -393.30749512]
[351.64666748 -378.32977295]
[350.82989502 -363.35202026]
[357.38107300 -359.70071411]
[364.68365479 -372.80310059]
[371.98620605 -385.90548706]
[379.28878784 -399.00787354]
[386.59155273 -412.11016846]
[399.69372559 -404.80718994]
[392.39117432 -391.70532227]
[385.08859253 -378.60293579]
[377.78604126 -365.50054932]
[370.48345947 -352.39816284]
[377.03466797 -348.74688721]
[389.34359741 -357.31951904]
[401.65255737 -365.89215088]
[413.96148682 -374.46475220]
[413.28582764 -389.87731934]
[421.06982422 -403.19696045]
[434.82965088 -410.17343140]
[450.17456055 -408.58056641]
[462.20806885 -398.92666626]
[467.09033203 -384.29220581]
[463.26342773 -369.34704590]
[451.94851685 -358.86007690]
[436.75613403 -356.17770386]
[422.53411865 -362.15582275]
[410.22518921 -353.58319092]
[397.91622925 -345.01055908]
[385.60729980 -336.43792725]
[372.41772461 -330.85366821]
[359.87072754 -330.59222412]
[349.78576660 -334.65716553]
[343.42221069 -341.50250244]
[334.96170044 -329.11621094]
[326.50115967 -316.72994995]
[326.49191284 -297.41455078]
[308.25183105 -288.88705444]
[300.24664307 -276.20172119]
[292.24145508 -263.51641846]
[284.23629761 -250.83111572]
[276.23110962 -238.14579773]
[276.50332642 -220.61413574]
[260.17089844 -212.14506531]
[252.39738464 -199.31648254]
[244.62388611 -186.48789978]
[236.85037231 -173.65931702]
[229.07685852 -160.83073425]
[221.42015076 -147.93209839]
[213.88085938 -134.96447754]
[206.34158325 -121.99685669]
[199.15827942 -108.82871246]
[192.33628845 -95.46980286]
[185.51429749 -82.11089325]
[178.69230652 -68.75198364]
[171.87031555 -55.39307022]
[165.04832458 -42.03416443]
[158.71591187 -28.43634987]
[152.88142395 -14.61756802]
[147.17265320 -0.74638087]
[141.59004211 13.17606831]
[136.00744629 27.09851646]
[130.42485046 41.02096558]
[124.84224701 54.94341660]
[119.25965118 68.86586761]
[113.67705536 82.78831482]
[108.09445190 96.71076202]
[126.26622009 100.10874176]
[140.43579102 116.82278442]
[144.73301697 131.19407654]
[149.03022766 145.56535339]
[153.32743835 159.93664551]
[163.65795898 173.37973022]
[153.60000610 187.02795410]
[137.70085144 181.14128113]
[138.95614624 164.23387146]
[134.65893555 149.86257935]
[130.36172485 135.49128723]
[126.06450653 121.11999512]
[118.77252960 119.36584473]
[115.65372467 134.03804016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[14 28]
[15 27]
[16 26]
[18 24]
[19 23]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[45 150]
[46 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[60 142]
[61 141]
[62 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[79 127]
[80 126]
[81 125]
[82 94]
[83 93]
[84 92]
[85 91]
[105 121]
[106 120]
[107 119]
[108 118]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
