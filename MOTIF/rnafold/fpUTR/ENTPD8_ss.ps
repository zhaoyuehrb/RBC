%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGUGCACAGCGCAUCGCCCGAGGCUGUCACCGCCCUGCCCCGCCCACCCCAGCUGUCCUGGACCCAGGGGCAGGGAGAGGCUGGACGCCAGGUGCGCGGACACAGAAGCGUCUAAGCACAGCUUCCUCCUUGCCGCUCCGGGAAGUGGGCAGCCAGCCCAGGAACCAGUACCACCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[94.64112091 172.66142273]
[102.63851929 159.97180176]
[104.81036377 145.12986755]
[97.33737946 144.49382019]
[88.31581116 156.47761536]
[79.29423523 168.46141052]
[70.27265930 180.44519043]
[67.60235596 189.20506287]
[60.99474335 192.55413818]
[51.77097702 204.38301086]
[42.54721069 216.21188354]
[33.32344055 228.04075623]
[24.09967613 239.86961365]
[30.91795158 253.52516174]
[31.12750053 268.78683472]
[24.68671799 282.62445068]
[12.87442589 292.29049683]
[-1.96403706 295.86578369]
[-16.88248253 292.64047241]
[-28.91884422 283.25491333]
[-35.68329239 269.57260132]
[-35.83273697 254.31022644]
[-29.33751488 240.49809265]
[-17.48724937 230.87864685]
[-2.63482165 227.36180115]
[12.27080727 230.64585876]
[21.49457359 218.81698608]
[30.71833992 206.98811340]
[39.94210815 195.15924072]
[49.16587448 183.33038330]
[58.28887177 171.42361450]
[67.31044769 159.43983459]
[76.33201599 147.45603943]
[85.35359192 135.47224426]
[72.32008362 116.97691345]
[73.51683807 97.90627289]
[59.50553513 92.55057526]
[45.49423599 87.19488525]
[31.48293686 81.83918762]
[17.47163773 76.48348999]
[3.46033788 71.12779236]
[-10.55096149 65.77209473]
[-24.56226158 60.41639709]
[-38.57355881 55.06069946]
[-47.52341843 64.81526184]
[-59.23048782 70.92675018]
[-72.28696442 72.68479919]
[-85.13110352 69.90107727]
[-96.23400879 62.92921448]
[-104.28166199 52.62002182]
[-108.33038330 40.21773529]
[-107.91746521 27.20984840]
[-121.73882294 21.38146400]
[-135.56018066 15.55307961]
[-149.38154602 9.72469425]
[-164.72415161 14.41337013]
[-177.87385559 5.22289944]
[-178.74333191 -10.79657555]
[-166.66557312 -21.35628510]
[-150.90562439 -18.35572243]
[-143.55316162 -4.09666348]
[-129.73179626 1.73172152]
[-115.91043854 7.56010628]
[-102.08908081 13.38849068]
[-89.76737213 1.85656345]
[-73.59497070 -3.15657282]
[-56.80175400 -0.59921491]
[-42.76366043 9.06332588]
[-34.32405853 23.93250275]
[-33.21786499 41.04940033]
[-19.20656395 46.40509796]
[-5.19526482 51.76079559]
[8.81603432 57.11649323]
[22.82733345 62.47218704]
[36.83863449 67.82788849]
[50.84993362 73.18358612]
[64.86122894 78.53927612]
[78.87252808 83.89497375]
[93.86300659 71.12638092]
[115.58537292 71.51334381]
[133.15191650 87.51695251]
[136.05123901 113.15695953]
[148.54975891 104.86315918]
[161.04827881 96.56935883]
[173.54679871 88.27555847]
[186.04530334 79.98175812]
[198.54382324 71.68795776]
[201.79650879 56.45451355]
[214.58993530 48.22146606]
[229.09263611 51.41628647]
[241.59115601 43.12248611]
[254.08967590 34.82868576]
[255.76171875 20.34455872]
[265.83636475 10.19625187]
[279.75131226 8.48742008]
[287.50717163 -4.35183287]
[295.26306152 -17.19108582]
[303.01892090 -30.03033829]
[299.45019531 -45.19285583]
[307.49865723 -58.10319901]
[321.97579956 -61.41198730]
[329.73168945 -74.25124359]
[337.48754883 -87.09049225]
[345.24343872 -99.92974854]
[339.09027100 -114.17468262]
[342.51806641 -129.30841064]
[354.20877075 -139.51170349]
[369.66705322 -140.86119080]
[382.94888306 -132.83795166]
[388.94714355 -118.52710724]
[385.35537720 -103.43144989]
[373.55468750 -93.35558319]
[358.08267212 -92.17387390]
[350.32681274 -79.33461761]
[342.57092285 -66.49536896]
[334.81506348 -53.65611267]
[338.62249756 -39.30205917]
[330.93984985 -26.17074394]
[315.85818481 -22.27446365]
[308.10229492 -9.43521023]
[300.34643555 3.40404201]
[292.59054565 16.24329376]
[293.97424316 18.22749519]
[295.12304688 20.35633278]
[310.07928467 19.21119118]
[325.03549194 18.06604958]
[339.99172974 16.92090797]
[354.94793701 15.77576637]
[369.90417480 14.63062477]
[384.86038208 13.48548317]
[390.36563110 -0.75021571]
[401.50817871 -11.18123722]
[416.07571411 -15.73649502]
[431.17578125 -13.51153851]
[443.81030273 -4.94813585]
[451.47064209 8.25344467]
[452.63586426 23.47201920]
[447.07461548 37.68592834]
[435.89108276 48.07299042]
[421.30572510 52.57084656]
[406.21453857 50.28644180]
[393.61383057 41.67335129]
[386.00552368 28.44170761]
[371.04931641 29.58684921]
[356.09307861 30.73199081]
[341.13687134 31.87713242]
[326.18063354 33.02227402]
[311.22442627 34.16741562]
[296.26818848 35.31255722]
[282.79421997 50.09288406]
[262.38348389 47.32720184]
[249.88496399 55.62100220]
[237.38644409 63.91480255]
[234.69506836 78.51932526]
[222.13793945 87.10845947]
[206.83761597 84.18647003]
[194.33911133 92.48027039]
[181.84059143 100.77407074]
[169.34207153 109.06787109]
[156.84356689 117.36167145]
[144.34504700 125.65547180]
[140.56536865 140.17146301]
[147.43191528 153.50753784]
[154.29844666 166.84359741]
[161.16497803 180.17967224]
[176.47038269 180.23583984]
[189.99111938 187.40861511]
[198.62019348 200.04971313]
[200.37474060 215.25431824]
[194.85154724 229.52853394]
[183.31982422 239.59222412]
[168.42947388 243.13285828]
[153.60218811 239.33679199]
[142.24516296 229.07635498]
[136.96817017 214.70930481]
[138.98381042 199.53710938]
[147.82891846 187.04620361]
[140.96237183 173.71012878]
[134.09584045 160.37406921]
[127.22930908 147.03799438]
[119.75632477 146.40196228]
[119.38862610 161.39744568]
[125.12636566 175.25668335]
[116.26978302 187.36291504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 34]
[5 33]
[6 32]
[7 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[52 64]
[53 63]
[54 62]
[55 61]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[90 153]
[91 152]
[92 151]
[95 122]
[96 121]
[97 120]
[98 119]
[101 116]
[102 115]
[103 114]
[104 113]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[162 180]
[163 179]
[164 178]
[165 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
