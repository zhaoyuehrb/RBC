%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CA5A)
} def

/sequence { (\
CAGACAGCAGGGAACAUCACCCUCUUCAGACUGGAGUCAGUGGGAACAGACCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.092630738 ubox
1 42 0.003444180 ubox
2 25 0.051711223 ubox
2 26 0.014796249 ubox
2 32 0.095420747 ubox
2 41 0.003805030 ubox
3 24 0.055324163 ubox
3 25 0.007941801 ubox
3 26 0.028141850 ubox
3 27 0.826088759 ubox
3 31 0.095923355 ubox
3 38 0.196690637 ubox
4 23 0.043827211 ubox
4 25 0.021282359 ubox
4 26 0.819410464 ubox
4 37 0.196786535 ubox
4 41 0.014695585 ubox
5 33 0.019742292 ubox
5 36 0.196065092 ubox
5 40 0.016614024 ubox
6 23 0.015651151 ubox
6 25 0.899108901 ubox
6 26 0.090092284 ubox
6 32 0.020935522 ubox
7 22 0.016387346 ubox
7 24 0.922018137 ubox
7 25 0.109774897 ubox
7 31 0.020942865 ubox
7 37 0.004388981 ubox
7 41 0.007666140 ubox
8 33 0.168791994 ubox
8 36 0.004489855 ubox
8 40 0.009524446 ubox
9 23 0.965392571 ubox
9 25 0.037503726 ubox
9 26 0.004776275 ubox
9 32 0.162023470 ubox
10 18 0.004594554 ubox
10 21 0.094554996 ubox
10 22 0.976305142 ubox
10 23 0.056367731 ubox
10 24 0.039780104 ubox
10 25 0.004589496 ubox
10 26 0.009442692 ubox
10 27 0.004107150 ubox
10 31 0.151424163 ubox
10 32 0.003651983 ubox
10 52 0.010909664 ubox
10 53 0.094193616 ubox
11 17 0.004534295 ubox
11 18 0.006800472 ubox
11 20 0.096536564 ubox
11 21 0.976666865 ubox
11 22 0.090849959 ubox
11 23 0.028119815 ubox
11 24 0.006221740 ubox
11 25 0.041265933 ubox
11 26 0.004339969 ubox
11 27 0.025564818 ubox
11 31 0.006242361 ubox
11 51 0.010954629 ubox
11 52 0.094287568 ubox
11 53 0.006079653 ubox
12 17 0.004353476 ubox
12 18 0.051036699 ubox
12 20 0.974060485 ubox
12 21 0.091112278 ubox
12 22 0.028074681 ubox
12 23 0.004930573 ubox
12 24 0.041730152 ubox
12 26 0.025143115 ubox
12 27 0.071686873 ubox
12 51 0.094111426 ubox
12 52 0.006075372 ubox
13 17 0.053551657 ubox
13 23 0.040271408 ubox
13 25 0.024226360 ubox
13 26 0.071370147 ubox
14 25 0.063316904 ubox
17 30 0.010639569 ubox
17 43 0.053695204 ubox
17 45 0.036865399 ubox
17 50 0.011610190 ubox
18 29 0.010697492 ubox
18 42 0.054915485 ubox
18 44 0.037496643 ubox
18 49 0.011610098 ubox
19 41 0.055088009 ubox
20 40 0.055028053 ubox
20 43 0.049944040 ubox
20 44 0.057579208 ubox
21 42 0.049960712 ubox
21 43 0.057736149 ubox
21 44 0.005398396 ubox
22 29 0.016554816 ubox
22 36 0.035848740 ubox
22 40 0.048170354 ubox
22 42 0.057636013 ubox
22 43 0.005425926 ubox
22 49 0.015010775 ubox
23 28 0.015402960 ubox
23 30 0.031494473 ubox
23 34 0.006599804 ubox
23 35 0.040657446 ubox
23 39 0.044848102 ubox
23 42 0.005209650 ubox
23 45 0.004954634 ubox
23 48 0.014999370 ubox
23 50 0.013058031 ubox
24 29 0.038527116 ubox
24 33 0.013545675 ubox
24 34 0.043815734 ubox
24 36 0.137992295 ubox
24 40 0.053214950 ubox
24 44 0.005966391 ubox
24 49 0.017233186 ubox
24 56 0.013055674 ubox
25 33 0.043282152 ubox
25 35 0.147887781 ubox
25 36 0.016586213 ubox
25 39 0.052262504 ubox
25 40 0.006389929 ubox
25 43 0.005602877 ubox
25 45 0.010763213 ubox
25 46 0.034415104 ubox
25 48 0.014575477 ubox
25 55 0.013445215 ubox
26 33 0.003221852 ubox
26 34 0.151200972 ubox
26 35 0.049471995 ubox
26 39 0.007692256 ubox
26 42 0.005077688 ubox
26 43 0.004980238 ubox
26 44 0.012611816 ubox
26 45 0.049221753 ubox
26 54 0.009394023 ubox
26 55 0.006882965 ubox
27 33 0.152723579 ubox
27 34 0.051601105 ubox
27 42 0.006799715 ubox
27 43 0.013325403 ubox
27 44 0.050429889 ubox
28 32 0.123859718 ubox
28 41 0.007262876 ubox
29 38 0.308925257 ubox
30 37 0.309034504 ubox
30 41 0.450514459 ubox
31 36 0.307730675 ubox
31 40 0.509549150 ubox
31 49 0.006520326 ubox
31 56 0.236426798 ubox
32 39 0.509987151 ubox
32 48 0.006558928 ubox
32 54 0.680265203 ubox
32 55 0.170028149 ubox
33 38 0.508569622 ubox
33 47 0.006555930 ubox
33 52 0.003793030 ubox
33 53 0.751743317 ubox
34 51 0.003447971 ubox
34 52 0.751929701 ubox
36 51 0.752509251 ubox
37 43 0.003309601 ubox
37 45 0.003316477 ubox
37 50 0.752546121 ubox
38 42 0.003264989 ubox
38 44 0.003626773 ubox
38 49 0.749787698 ubox
40 47 0.706363658 ubox
40 51 0.004835957 ubox
41 46 0.701947137 ubox
41 48 0.207739231 ubox
41 50 0.004805359 ubox
41 54 0.423275917 ubox
42 47 0.224257791 ubox
42 52 0.036443282 ubox
42 53 0.646844424 ubox
43 51 0.036754231 ubox
43 52 0.647227526 ubox
43 53 0.026733245 ubox
44 51 0.644760091 ubox
44 52 0.026752898 ubox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
