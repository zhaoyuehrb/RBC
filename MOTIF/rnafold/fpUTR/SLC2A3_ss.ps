%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUGCUUCAGGGGGGUGGGGUGGGGUGGGGUGGGGCUGGGGGCUUGUCGCCCUUUCAGGCUCCACCCUUUGCGGAGAUUAUAAAUAGUCAUGAUCCCAGCGAGACCCAGAGAUGCUGUAAUGGUAAGACUUUGGAUCCUUCCUGAGGACGUGGAGAAAACUUGCUGCUGAGAAGGACAUUUUGAAGGUUUUGUUGGCUGAAAAAGCUGUUUCUGGAAUCACCCCUAGAUCUUUCUUGAAGACUUGAAUUAGAU\
UACAGCG\
) } def
/len { sequence length } bind def

/coor [
[69.01873779 498.65615845]
[70.57993317 483.67694092]
[75.32514954 469.38369751]
[83.03244019 456.44491577]
[93.34131622 445.46582031]
[105.76962280 436.95983887]
[119.73606110 431.32489014]
[117.23924255 416.53414917]
[114.74242401 401.74343872]
[112.24560547 386.95269775]
[109.74878693 372.16195679]
[107.25196075 357.37121582]
[104.75514221 342.58047485]
[102.25832367 327.78973389]
[99.76150513 312.99899292]
[97.26468658 298.20828247]
[94.76786041 283.41754150]
[81.28306580 280.22940063]
[69.99281311 272.12167358]
[62.61722946 260.28906250]
[60.29543304 246.49674988]
[63.40970612 232.81712341]
[71.52300262 221.31837463]
[83.43995667 213.75181580]
[81.11999512 198.93231201]
[78.80002594 184.11279297]
[76.48005676 169.29328918]
[74.16008759 154.47378540]
[71.84012604 139.65428162]
[58.77573013 132.28396606]
[44.89196014 137.96208191]
[31.00819397 143.64019775]
[17.12442780 149.31831360]
[3.24066067 154.99642944]
[-10.64310646 160.67454529]
[-24.52687263 166.35266113]
[-38.41064072 172.03077698]
[-52.29440689 177.70889282]
[-66.17817688 183.38700867]
[-79.95797729 189.31297302]
[-93.62939453 195.48487854]
[-107.30081177 201.65676880]
[-120.97222900 207.82867432]
[-134.64364624 214.00056458]
[-148.31506348 220.17247009]
[-155.30897522 234.61077881]
[-170.98902893 238.00418091]
[-183.32685852 227.74952698]
[-182.85791016 211.71333313]
[-169.94194031 202.19717407]
[-154.48696899 206.50105286]
[-140.81555176 200.32914734]
[-127.14413452 194.15725708]
[-113.47271729 187.98535156]
[-99.80129242 181.81346130]
[-86.12987518 175.64155579]
[-84.54959106 172.52339172]
[-81.39708710 170.00473022]
[-76.96537781 168.80883789]
[-71.85629272 169.50325012]
[-57.97252274 163.82513428]
[-44.08875656 158.14701843]
[-30.20499039 152.46890259]
[-16.32122421 146.79078674]
[-2.43745637 141.11265564]
[11.44631100 135.43453979]
[25.33007812 129.75642395]
[39.21384430 124.07830811]
[53.09761047 118.40019226]
[54.08238220 103.43255615]
[41.06224442 95.98433685]
[28.04210091 88.53612518]
[15.02196026 81.08790588]
[2.00181961 73.63968658]
[-11.06257439 66.26937103]
[-24.17075539 58.97721100]
[-33.15946198 57.54852295]
[-37.39120483 51.51885223]
[-50.41134644 44.07063293]
[-63.43148804 36.62241745]
[-76.45162964 29.17420197]
[-89.47177124 21.72598457]
[-102.49191284 14.27776909]
[-116.58642578 20.76808929]
[-131.79742432 17.70131111]
[-142.27597046 6.25667143]
[-143.99284363 -9.16513062]
[-136.28787231 -22.63409805]
[-122.12377930 -28.97113800]
[-106.94694519 -25.73952866]
[-96.59317017 -14.18189144]
[-95.04369354 1.25762773]
[-82.02355194 8.70584393]
[-69.00341034 16.15406036]
[-55.98326874 23.60227776]
[-42.96313095 31.05049324]
[-29.94298935 38.49871063]
[-16.87859535 45.86903000]
[-3.77041411 53.16119003]
[3.57879376 53.66494751]
[9.45003605 60.61954880]
[22.47017670 68.06776428]
[35.49031830 75.51598358]
[48.51045990 82.96419525]
[61.53060150 90.41241455]
[76.01729584 72.84934235]
[96.05645752 67.43187714]
[113.63555908 73.96915436]
[123.75656128 62.89823532]
[133.87756348 51.82731247]
[143.99856567 40.75639343]
[154.11956787 29.68547058]
[164.24057007 18.61454964]
[174.36157227 7.54362822]
[184.48257446 -3.52729321]
[194.53727722 -14.65846539]
[204.52531433 -25.84949112]
[214.51336670 -37.04051971]
[208.75393677 -51.13272476]
[209.68040466 -66.26641846]
[217.05555725 -79.44319153]
[229.36982727 -88.07566833]
[244.15000916 -90.49550629]
[258.45587158 -86.27559662]
[268.44390869 -97.46662140]
[278.43194580 -108.65764618]
[288.14981079 -120.08407593]
[297.59194946 -131.73937988]
[307.03405762 -143.39469910]
[316.47619629 -155.05000305]
[325.91833496 -166.70532227]
[335.36044312 -178.36062622]
[344.80258179 -190.01593018]
[354.24468994 -201.67124939]
[356.91952515 -217.26470947]
[370.94305420 -222.28361511]
[380.38519287 -233.93893433]
[389.54620361 -245.81646729]
[398.42086792 -257.90945435]
[407.29553223 -270.00244141]
[416.17019653 -282.09542847]
[425.04483032 -294.18841553]
[427.58676147 -302.92779541]
[434.09844971 -306.37200928]
[443.11691284 -318.35812378]
[445.23135376 -334.03741455]
[459.06607056 -339.55554199]
[468.08453369 -351.54165649]
[461.93737793 -362.85867310]
[460.52090454 -375.61236572]
[464.00961304 -387.91265869]
[471.85369873 -397.95001221]
[482.86529541 -404.26162720]
[495.39837646 -405.94454956]
[507.59466553 -402.78482056]
[516.89691162 -414.55209351]
[526.19909668 -426.31933594]
[528.03741455 -442.61514282]
[543.17523193 -448.92211914]
[556.04010010 -438.75219727]
[553.39776611 -422.56732178]
[537.96636963 -417.01712036]
[528.66412354 -405.24984741]
[519.36193848 -393.48257446]
[526.29663086 -377.69479370]
[524.25012207 -360.48306274]
[513.69860840 -346.61941528]
[497.48883057 -339.99389648]
[480.07067871 -342.52316284]
[471.05218506 -330.53704834]
[469.58282471 -315.71511841]
[455.10302734 -309.33966064]
[446.08456421 -297.35351562]
[437.13784790 -285.31375122]
[428.26318359 -273.22076416]
[419.38851929 -261.12777710]
[410.51385498 -249.03479004]
[401.63919067 -236.94180298]
[401.90994263 -234.18222046]
[401.12161255 -231.15055847]
[399.16577148 -228.24325562]
[396.07714844 -225.88859558]
[392.04049683 -224.49679565]
[382.59838867 -212.84149170]
[380.59890747 -198.08169556]
[365.89999390 -192.22912598]
[356.45788574 -180.57380676]
[347.01574707 -168.91850281]
[337.57363892 -157.26318359]
[328.13150024 -145.60787964]
[318.68936157 -133.95257568]
[309.24725342 -122.29725647]
[299.80511475 -110.64195251]
[299.94375610 -107.87258911]
[299.01153564 -104.88203430]
[296.91906738 -102.07147217]
[293.72149658 -99.86701202]
[289.62298584 -98.66960907]
[279.63494873 -87.47858429]
[269.64691162 -76.28755188]
[275.45962524 -62.55154800]
[274.72900391 -47.59241486]
[267.54644775 -34.37983704]
[255.28958130 -25.56003380]
[240.35813904 -22.92584038]
[225.70439148 -27.05247879]
[215.71635437 -15.86145210]
[205.72830200 -4.67042637]
[203.62591553 2.38964128]
[195.55349731 6.59370947]
[185.43249512 17.66463089]
[175.31149292 28.73555183]
[165.19049072 39.80647278]
[155.06948853 50.87739563]
[144.94848633 61.94831848]
[134.82748413 73.01924133]
[124.70648193 84.09015656]
[131.91200256 101.57804871]
[127.03440857 121.45920563]
[110.18840790 135.65394592]
[86.65962982 137.33432007]
[88.97959900 152.15382385]
[91.29956055 166.97332764]
[93.61952972 181.79283142]
[95.93949890 196.61233521]
[98.25946808 211.43183899]
[113.88489532 216.02218628]
[125.89597321 226.93389893]
[131.91719055 241.94018555]
[130.78776550 258.01150513]
[122.78503418 271.92718506]
[109.55860138 280.92071533]
[112.05541992 295.71145630]
[114.55223846 310.50219727]
[117.04905701 325.29293823]
[119.54588318 340.08364868]
[122.04270172 354.87438965]
[124.53952026 369.66513062]
[127.03633881 384.45587158]
[129.53315735 399.24661255]
[132.02998352 414.03735352]
[134.52679443 428.82809448]
[149.56906128 429.56607056]
[164.10086060 433.52090454]
[177.44253540 440.50759888]
[188.97007751 450.19934082]
[198.14431763 462.14285278]
[204.53614807 475.77951050]
[207.84663391 490.47149658]
[207.92091370 505.53167725]
[204.75552368 520.25561523]
[198.49851990 533.95465088]
[189.44253540 545.98809814]
[178.01116943 555.79309082]
[164.73905945 562.91101074]
[150.24696350 567.00897217]
[135.21272278 567.89532471]
[120.33950806 565.52862549]
[106.32295990 560.01947021]
[93.81866455 551.62561035]
[83.41146851 540.73968506]
[75.58813477 527.87072754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 242]
[8 241]
[9 240]
[10 239]
[11 238]
[12 237]
[13 236]
[14 235]
[15 234]
[16 233]
[17 232]
[24 226]
[25 225]
[26 224]
[27 223]
[28 222]
[29 221]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 99]
[76 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[108 217]
[109 216]
[110 215]
[111 214]
[112 213]
[113 212]
[114 211]
[115 210]
[116 208]
[117 207]
[118 206]
[124 200]
[125 199]
[126 198]
[127 193]
[128 192]
[129 191]
[130 190]
[131 189]
[132 188]
[133 187]
[134 186]
[136 184]
[137 183]
[138 178]
[139 177]
[140 176]
[141 175]
[142 174]
[144 173]
[145 172]
[147 170]
[148 169]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
