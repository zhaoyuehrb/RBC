%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAT)
} def

/sequence { (\
ACUCGGGGCAACAGGCAGAUUUGCCUGCUGAGGGUGGAGACCCACGAGCCGAGGCCUCCUGCAGUGUUCUGCACAGCAAACCGCACGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.049733576 ubox
1 65 0.014292918 ubox
2 8 0.004307009 ubox
2 32 0.183991266 ubox
2 33 0.009546845 ubox
2 34 0.052680613 ubox
2 48 0.076890387 ubox
2 53 0.895675594 ubox
2 54 0.022206675 ubox
2 64 0.015287011 ubox
2 76 0.020812182 ubox
3 7 0.003923904 ubox
3 31 0.186980422 ubox
3 32 0.005569662 ubox
3 33 0.052749762 ubox
3 47 0.078558547 ubox
3 52 0.898877310 ubox
3 53 0.012211644 ubox
3 54 0.016715468 ubox
3 63 0.015548841 ubox
3 75 0.020897166 ubox
4 30 0.187319201 ubox
4 32 0.052644698 ubox
4 33 0.005259333 ubox
4 46 0.079077929 ubox
4 51 0.899348088 ubox
4 53 0.028946783 ubox
4 61 0.018655354 ubox
4 71 0.107811486 ubox
4 83 0.129377645 ubox
4 87 0.034668706 ubox
5 29 0.185121339 ubox
5 45 0.078334040 ubox
5 50 0.892814521 ubox
5 56 0.010428707 ubox
5 57 0.005501443 ubox
5 58 0.255785881 ubox
5 59 0.190019538 ubox
5 60 0.023524875 ubox
5 70 0.116442474 ubox
5 82 0.135727326 ubox
5 86 0.034469002 ubox
5 89 0.008724850 ubox
6 26 0.020247807 ubox
6 28 0.184160433 ubox
6 29 0.015333873 ubox
6 43 0.026587992 ubox
6 49 0.887753190 ubox
6 50 0.045132738 ubox
6 55 0.010418717 ubox
6 56 0.005858991 ubox
6 57 0.258839642 ubox
6 58 0.189658643 ubox
6 59 0.025506232 ubox
6 60 0.004901728 ubox
6 69 0.117725999 ubox
6 81 0.135327880 ubox
6 82 0.036156980 ubox
6 88 0.009599236 ubox
6 89 0.008305626 ubox
7 25 0.032590282 ubox
7 28 0.027336955 ubox
7 29 0.213986342 ubox
7 42 0.026539217 ubox
7 43 0.003528207 ubox
7 49 0.059850524 ubox
7 50 0.121550912 ubox
7 55 0.005376849 ubox
7 56 0.310920826 ubox
7 57 0.082494842 ubox
7 58 0.025104076 ubox
7 59 0.007096031 ubox
7 68 0.117450495 ubox
7 70 0.005182987 ubox
7 81 0.036399340 ubox
7 82 0.024569837 ubox
7 88 0.008625919 ubox
7 89 0.054550638 ubox
8 16 0.003892246 ubox
8 24 0.032668814 ubox
8 28 0.227964094 ubox
8 41 0.026413363 ubox
8 49 0.131566075 ubox
8 55 0.311163057 ubox
8 56 0.080434917 ubox
8 57 0.018298511 ubox
8 58 0.006568569 ubox
8 62 0.003320728 ubox
8 67 0.117722902 ubox
8 69 0.005751049 ubox
8 72 0.009872811 ubox
8 77 0.065356491 ubox
8 81 0.024508901 ubox
8 84 0.026125804 ubox
8 88 0.059743247 ubox
9 15 0.003904704 ubox
9 23 0.032675068 ubox
9 27 0.214181695 ubox
9 30 0.756859761 ubox
9 48 0.139332307 ubox
9 54 0.309833920 ubox
9 61 0.003313189 ubox
9 66 0.117753616 ubox
9 71 0.009881841 ubox
9 76 0.065140562 ubox
9 83 0.026049070 ubox
9 87 0.059509352 ubox
10 22 0.032125841 ubox
10 26 0.150462134 ubox
10 29 0.753778556 ubox
10 65 0.102374476 ubox
10 68 0.009369345 ubox
10 70 0.008389573 ubox
11 20 0.003480650 ubox
11 21 0.028193921 ubox
11 65 0.056787309 ubox
11 67 0.012979063 ubox
12 23 0.003359660 ubox
12 27 0.953252284 ubox
12 30 0.024759139 ubox
12 61 0.034042249 ubox
12 64 0.080297458 ubox
12 66 0.013282610 ubox
13 21 0.003762697 ubox
13 22 0.003470156 ubox
13 26 0.977097266 ubox
13 29 0.022863722 ubox
13 60 0.034404678 ubox
13 65 0.013163041 ubox
14 20 0.006047790 ubox
14 21 0.003651592 ubox
14 25 0.990561196 ubox
14 28 0.016068346 ubox
14 29 0.029826287 ubox
14 50 0.041468233 ubox
14 59 0.034520037 ubox
15 24 0.990596306 ubox
15 28 0.036506765 ubox
15 49 0.041342858 ubox
15 58 0.034489400 ubox
15 62 0.113657384 ubox
15 72 0.013271675 ubox
16 23 0.990427153 ubox
16 27 0.039916970 ubox
16 48 0.041208592 ubox
16 61 0.113686884 ubox
16 71 0.013277989 ubox
17 22 0.892261006 ubox
17 26 0.040163624 ubox
17 57 0.034048353 ubox
17 60 0.113598117 ubox
17 70 0.013274834 ubox
18 25 0.040088709 ubox
18 56 0.034134085 ubox
18 58 0.027335856 ubox
18 59 0.110021041 ubox
18 69 0.013275805 ubox
19 57 0.038209481 ubox
19 68 0.013169132 ubox
23 35 0.003449636 ubox
23 55 0.118774457 ubox
23 67 0.012052137 ubox
24 33 0.040641966 ubox
24 34 0.003611410 ubox
24 54 0.118905418 ubox
24 66 0.012116931 ubox
25 32 0.040759065 ubox
25 33 0.004003850 ubox
25 53 0.118916089 ubox
25 64 0.012903521 ubox
26 31 0.040389676 ubox
26 32 0.003962063 ubox
26 51 0.016104006 ubox
26 52 0.109529127 ubox
26 63 0.013117414 ubox
26 78 0.025681043 ubox
27 49 0.183328193 ubox
27 50 0.024621619 ubox
27 55 0.021977475 ubox
27 62 0.013169884 ubox
27 77 0.039023756 ubox
27 88 0.006165889 ubox
28 34 0.004605362 ubox
28 37 0.005209181 ubox
28 39 0.010276188 ubox
28 48 0.300782749 ubox
28 53 0.085072483 ubox
28 54 0.032347661 ubox
28 61 0.013171409 ubox
28 64 0.007649105 ubox
28 76 0.041123463 ubox
28 87 0.006741420 ubox
29 33 0.005565263 ubox
29 36 0.005075630 ubox
29 38 0.010307329 ubox
29 44 0.013307725 ubox
29 46 0.255266303 ubox
29 47 0.277644666 ubox
29 51 0.023146507 ubox
29 52 0.082687016 ubox
29 53 0.047791692 ubox
29 63 0.007795998 ubox
29 75 0.041244215 ubox
29 85 0.010497645 ubox
30 43 0.011749866 ubox
30 45 0.373324286 ubox
30 50 0.033073951 ubox
30 58 0.021702449 ubox
30 62 0.007795230 ubox
30 74 0.041051673 ubox
30 84 0.011519116 ubox
31 57 0.021854280 ubox
31 60 0.011325227 ubox
31 89 0.008164285 ubox
32 42 0.015062674 ubox
32 43 0.914142507 ubox
32 50 0.103470091 ubox
32 56 0.021809960 ubox
32 59 0.012356249 ubox
32 60 0.003885585 ubox
32 82 0.013660954 ubox
32 88 0.009629598 ubox
33 41 0.014911406 ubox
33 42 0.915417181 ubox
33 43 0.008394362 ubox
33 49 0.103477457 ubox
33 50 0.013547055 ubox
33 55 0.020382594 ubox
33 58 0.012181250 ubox
33 59 0.007183769 ubox
33 81 0.014133385 ubox
33 82 0.086638800 ubox
33 88 0.010258062 ubox
33 89 0.024813523 ubox
34 41 0.915362713 ubox
34 42 0.007501850 ubox
34 45 0.378311438 ubox
34 49 0.012955582 ubox
34 57 0.003163057 ubox
34 58 0.006167600 ubox
34 62 0.008232480 ubox
34 74 0.026902257 ubox
34 81 0.086538747 ubox
34 84 0.010681623 ubox
34 86 0.017121991 ubox
34 88 0.027090051 ubox
35 40 0.906204453 ubox
35 44 0.378829339 ubox
35 46 0.005373341 ubox
35 48 0.010955046 ubox
35 61 0.007958597 ubox
35 73 0.026869458 ubox
35 80 0.083876943 ubox
35 83 0.010617607 ubox
35 85 0.016375722 ubox
35 87 0.026455687 ubox
36 42 0.007188051 ubox
36 43 0.379214172 ubox
36 45 0.006696857 ubox
36 50 0.003746725 ubox
36 56 0.006912614 ubox
36 59 0.126068148 ubox
36 72 0.026723115 ubox
36 82 0.009436901 ubox
36 84 0.004967202 ubox
36 86 0.012855488 ubox
37 41 0.009321691 ubox
37 42 0.377938303 ubox
37 49 0.003739972 ubox
37 55 0.006912646 ubox
37 58 0.126972168 ubox
37 81 0.009091765 ubox
38 57 0.126970715 ubox
38 70 0.026649715 ubox
39 56 0.126663619 ubox
39 69 0.026732851 ubox
40 68 0.026164891 ubox
41 54 0.107700576 ubox
42 53 0.106890922 ubox
42 54 0.065800555 ubox
43 53 0.067124119 ubox
43 66 0.026421892 ubox
44 60 0.010605085 ubox
44 65 0.026565591 ubox
45 51 0.128608721 ubox
45 64 0.026579869 ubox
45 87 0.020067329 ubox
46 50 0.121862826 ubox
46 58 0.151680284 ubox
46 69 0.005775705 ubox
46 86 0.024591419 ubox
47 57 0.151833530 ubox
47 68 0.005781250 ubox
47 89 0.101778539 ubox
48 55 0.145026538 ubox
48 56 0.109949117 ubox
48 62 0.026801282 ubox
48 67 0.005772582 ubox
48 77 0.004552383 ubox
48 84 0.038846620 ubox
48 88 0.111823523 ubox
49 54 0.179269491 ubox
49 61 0.026361624 ubox
49 66 0.005607354 ubox
49 76 0.004552476 ubox
49 83 0.037532172 ubox
49 87 0.097291987 ubox
50 61 0.005743626 ubox
50 83 0.026257163 ubox
50 87 0.077740381 ubox
51 58 0.020894399 ubox
51 60 0.004263514 ubox
51 82 0.028286113 ubox
51 86 0.096712251 ubox
52 57 0.019598845 ubox
52 60 0.062838150 ubox
52 89 0.005542505 ubox
53 59 0.072241154 ubox
53 60 0.004436199 ubox
53 82 0.056229793 ubox
53 88 0.006520992 ubox
53 89 0.031947951 ubox
54 58 0.072803442 ubox
54 59 0.024032094 ubox
54 62 0.047434422 ubox
54 77 0.340721936 ubox
54 81 0.057509532 ubox
54 84 0.604535719 ubox
54 88 0.157967586 ubox
55 61 0.047401985 ubox
55 76 0.327037519 ubox
55 83 0.604392023 ubox
55 87 0.158024852 ubox
56 64 0.003507066 ubox
56 76 0.140385722 ubox
57 63 0.003480734 ubox
57 75 0.166721258 ubox
59 76 0.048751833 ubox
60 73 0.644915426 ubox
60 75 0.036679977 ubox
60 78 0.634440952 ubox
60 83 0.003582378 ubox
60 85 0.056896988 ubox
60 87 0.004275042 ubox
61 72 0.712214821 ubox
61 74 0.017497053 ubox
61 77 0.662830174 ubox
61 82 0.003597779 ubox
61 84 0.062744846 ubox
61 86 0.005459232 ubox
61 88 0.163461914 ubox
62 71 0.712564639 ubox
62 76 0.661952628 ubox
62 83 0.062712079 ubox
62 87 0.163241700 ubox
63 70 0.712030011 ubox
63 89 0.032022131 ubox
64 69 0.709481730 ubox
64 72 0.010909195 ubox
64 74 0.661809893 ubox
64 81 0.034381147 ubox
64 84 0.048634953 ubox
64 86 0.164949014 ubox
64 88 0.035536765 ubox
65 71 0.010752998 ubox
65 73 0.664193354 ubox
65 75 0.015906995 ubox
65 78 0.023722430 ubox
65 80 0.031634979 ubox
65 83 0.048606352 ubox
65 85 0.165089904 ubox
65 87 0.035520683 ubox
66 70 0.005053991 ubox
66 72 0.664147517 ubox
66 74 0.017334614 ubox
66 77 0.027376018 ubox
66 81 0.053553433 ubox
66 82 0.044332801 ubox
66 84 0.164850488 ubox
66 86 0.035359576 ubox
66 88 0.005475682 ubox
67 71 0.621305394 ubox
67 73 0.016626059 ubox
67 76 0.027316768 ubox
67 79 0.008083707 ubox
67 80 0.057653153 ubox
67 83 0.161894478 ubox
67 85 0.028700481 ubox
67 87 0.005392881 ubox
68 75 0.023306911 ubox
68 78 0.008189509 ubox
68 79 0.059882773 ubox
69 76 0.020558927 ubox
70 75 0.019307783 ubox
70 78 0.173780108 ubox
70 85 0.022818084 ubox
71 77 0.179370798 ubox
71 82 0.003844578 ubox
71 84 0.033716112 ubox
71 88 0.034089458 ubox
72 76 0.178087157 ubox
72 83 0.033753419 ubox
72 87 0.034726488 ubox
75 89 0.320488544 ubox
76 84 0.440759675 ubox
76 88 0.355814294 ubox
77 83 0.441008566 ubox
77 87 0.355721017 ubox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
54 84 0.9500000 lbox
55 83 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
62 76 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
67 71 0.9500000 lbox
showpage
end
%%EOF
