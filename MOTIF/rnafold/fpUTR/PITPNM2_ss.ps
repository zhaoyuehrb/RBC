%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGCUGGCACGUGUGUCCUGGUCCUCAACAACCUUCUGUGAGCCUAGGGACCCAUUUCUCCUCCUUUGACAGGGACAUCAGUGGAGCCUUCUCAGACCCACAGGGGUCCUUGGUGAAUUUUGUCAUGGUUAUUUAAGGAACCUUGCCUAGAAGUCCCAACUUGCAGUUCCCCAUCGACGGGAAGGCUUGGACUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[96.87621307 193.43788147]
[96.17312622 178.45437622]
[95.47004700 163.47085571]
[84.31729889 153.66516113]
[83.39082336 138.47975159]
[93.75157166 126.84821320]
[93.04848480 111.86470032]
[87.40486145 106.92511749]
[76.11760712 97.04595184]
[70.47397614 92.10636902]
[55.52936935 93.39424133]
[40.58475876 94.68211365]
[30.42812920 106.49230957]
[15.25382328 107.58550262]
[4.05720091 97.82992554]
[-10.88741016 99.11779785]
[-25.83201981 100.40567017]
[-40.77663040 101.69354248]
[-55.72124100 102.98141479]
[-70.66585541 104.26928711]
[-85.61046600 105.55715942]
[-98.69536591 114.45074463]
[-112.03994751 107.83475494]
[-126.98455811 109.12262726]
[-141.92916870 110.41049957]
[-156.33944702 114.57510376]
[-169.66709900 121.45796967]
[-182.99473572 128.34083557]
[-196.32238770 135.22370911]
[-202.51754761 141.94747925]
[-209.91255188 142.10815430]
[-223.34614563 148.78187561]
[-228.14418030 163.84024048]
[-242.22294617 171.02107239]
[-257.22973633 166.06408691]
[-264.26129150 151.91020203]
[-259.14593506 136.95664978]
[-244.91850281 130.07511902]
[-230.01986694 135.34829712]
[-216.58627319 128.67456055]
[-203.20526123 121.89605713]
[-189.87760925 115.01319122]
[-176.54995728 108.13032532]
[-163.22232056 101.24745941]
[-164.27384949 93.82153320]
[-179.12573242 95.92437744]
[-181.22833252 81.07247925]
[-166.37692261 78.96969604]
[-167.42846680 71.54377747]
[-182.14309692 68.63179779]
[-196.85772705 65.71981812]
[-211.57235718 62.80783463]
[-222.86466980 73.45036316]
[-238.26010132 75.38950348]
[-251.83880615 67.87960815]
[-258.37948608 53.80839539]
[-255.36711121 38.58652496]
[-243.96002197 28.06712151]
[-228.54446411 26.29510880]
[-215.04801941 33.95186234]
[-208.66036987 48.09320450]
[-193.94573975 51.00518417]
[-179.23110962 53.91716766]
[-164.51647949 56.82915115]
[-155.54411316 61.59091187]
[-148.63095093 67.83886719]
[-143.97590637 74.96083069]
[-141.62048340 82.33097076]
[-141.45227051 89.34709930]
[-143.21704102 95.46588898]
[-128.27243042 94.17801666]
[-113.32781982 92.89014435]
[-101.31185913 84.08867645]
[-86.89833832 90.61254883]
[-71.95372772 89.32467651]
[-57.00911331 88.03680420]
[-42.06450272 86.74893188]
[-27.11989212 85.46105957]
[-12.17528152 84.17318726]
[2.76932859 82.88531494]
[12.13187122 71.35802460]
[27.26948547 69.83905029]
[39.29688644 79.73750305]
[54.24149704 78.44963074]
[69.18610382 77.16175842]
[110.21235657 84.64982605]
[124.03666687 78.82845306]
[137.86097717 73.00707245]
[151.68528748 67.18569183]
[165.50959778 61.36431503]
[179.33390808 55.54293823]
[193.15821838 49.72156143]
[206.98252869 43.90018463]
[220.80683899 38.07880402]
[234.63114929 32.25742722]
[224.53981018 21.56024933]
[221.10443115 4.43241024]
[222.50904846 -10.50167942]
[223.91366577 -25.43577003]
[225.31829834 -40.36985779]
[226.72291565 -55.30394745]
[219.40112305 -69.97785187]
[228.67265320 -83.50452423]
[244.99974060 -81.96888733]
[251.58648682 -66.95066833]
[241.65699768 -53.89932632]
[240.25238037 -38.96523666]
[238.84776306 -24.03114700]
[237.44313049 -9.09705734]
[236.03851318 5.83703232]
[240.97810364 11.48065853]
[249.37055969 -0.95182592]
[257.76300049 -13.38431072]
[261.53805542 -27.90151024]
[273.04071045 -37.52901459]
[287.99581909 -38.68859482]
[300.84506226 -30.94926834]
[306.81277466 -17.18749619]
[303.68096924 -2.51808023]
[292.61361694 7.60683250]
[277.72650146 9.42459679]
[264.29187012 16.09625435]
[250.85726929 22.76791191]
[255.79684448 28.41153908]
[270.78540039 28.99750710]
[285.77395630 29.58347702]
[300.76663208 30.05229378]
[315.76248169 30.40393257]
[330.75836182 30.75557137]
[345.75424194 31.10721016]
[334.74356079 20.92071724]
[331.70465088 6.23177576]
[337.76962280 -7.48740482]
[350.67907715 -15.12588596]
[365.62368774 -13.83803082]
[377.03601074 -4.10361767]
[380.66452026 10.45090103]
[375.15740967 24.40339088]
[362.56628418 32.55601120]
[377.40124512 34.77508545]
[392.23620605 36.99415970]
[407.07113647 39.21323013]
[421.90609741 41.43230438]
[428.19985962 39.36518097]
[433.75616455 40.60625839]
[437.16711426 43.95956802]
[451.92547607 46.64121628]
[466.68380737 49.32286453]
[470.73352051 47.70628357]
[474.68832397 47.48931503]
[478.11853027 48.46931839]
[480.70492554 50.32458878]
[482.26797485 52.66085052]
[496.82995605 56.25933838]
[511.39190674 59.85782623]
[525.95385742 63.45631790]
[541.54949951 58.38592529]
[553.55572510 69.55654144]
[549.62158203 85.47679901]
[533.79418945 89.76929474]
[522.35540771 78.01828766]
[507.79342651 74.41979218]
[493.23144531 70.82130432]
[478.66949463 67.22281647]
[464.00216675 64.08121490]
[449.24383545 61.39956284]
[434.48547363 58.71791458]
[419.68701172 56.26725388]
[404.85208130 54.04817963]
[390.01712036 51.82910538]
[375.18215942 49.61003494]
[360.34722900 47.39096069]
[345.40261841 46.10308838]
[330.40673828 45.75144958]
[315.41085815 45.39981079]
[300.41497803 45.04817200]
[293.64880371 48.03663635]
[285.18798828 44.57202530]
[270.19943237 43.98605728]
[255.21087646 43.40008926]
[240.45252991 46.08173752]
[226.62821960 51.90311432]
[212.80390930 57.72449493]
[198.97959900 63.54587173]
[185.15528870 69.36724854]
[171.33097839 75.18862915]
[157.50666809 81.01000214]
[143.68235779 86.83138275]
[129.85804749 92.65276337]
[116.03373718 98.47413635]
[108.03199768 111.16162109]
[108.73508453 126.14513397]
[120.13949585 136.75537109]
[120.63907623 151.96080017]
[110.45355988 162.76777649]
[111.15663910 177.75128174]
[111.85972595 192.73480225]
[121.16654205 206.23721313]
[113.88310242 220.93019104]
[97.50198364 221.69885254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[6 192]
[7 191]
[10 85]
[11 84]
[12 83]
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 75]
[21 74]
[23 72]
[24 71]
[25 70]
[26 44]
[27 43]
[28 42]
[29 41]
[31 40]
[32 39]
[49 64]
[50 63]
[51 62]
[52 61]
[86 190]
[87 189]
[88 188]
[89 187]
[90 186]
[91 185]
[92 184]
[93 183]
[94 182]
[95 181]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[124 180]
[125 179]
[126 178]
[127 176]
[128 175]
[129 174]
[130 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[146 167]
[147 166]
[148 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
