%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUUGCUGGCCUUCUGACAAGCUAGCUGUUUGGAUAUUGUGAGGGAUGAGGUUGCUGCAGCAAAAAGUGGGUUACACGACAGCACAGCCUCGCUGCUGGAGAUGAAAAACCAAUAAUCCCAGAAAACAGCGCAUAGGGUAGGCUGGGCCAGCCGAGGAUUAUGUGAAGGUUCGUUGGGACCCUCCGGAGGCCAGUGGGGUACUGCAAAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[116.62742615 311.24627686]
[110.92549896 304.68716431]
[107.64389038 296.59262085]
[107.16377258 287.82788086]
[109.56521606 279.33975220]
[114.61551666 272.05429077]
[121.79137421 266.77581787]
[119.18665314 252.00370789]
[116.58193207 237.23158264]
[113.97721100 222.45947266]
[111.37248993 207.68736267]
[108.76776123 192.91523743]
[106.16304016 178.14312744]
[103.55831909 163.37100220]
[100.95359802 148.59889221]
[98.34887695 133.82678223]
[78.51570892 127.32111359]
[65.81024170 110.08471680]
[65.44491577 88.13436890]
[78.18073273 69.59350586]
[67.57413483 80.20011139]
[56.96753311 90.80670929]
[46.36093140 101.41331482]
[35.75432968 112.01991272]
[34.31645966 127.99840546]
[20.84863663 136.71604919]
[5.68222380 131.48541260]
[0.45159423 116.31900787]
[9.16923904 102.85118866]
[25.14772797 101.41331482]
[35.75432968 90.80670929]
[46.36093140 80.20011139]
[56.96753311 69.59350586]
[67.57413483 58.98690796]
[66.54113770 51.55838776]
[52.14789581 55.78147888]
[37.75465012 60.00457382]
[23.36140633 64.22766876]
[12.61602879 74.69364929]
[-2.23242044 76.82051849]
[-15.48371220 69.79177094]
[-22.05075455 56.30570602]
[-19.41250229 41.53954315]
[-8.58176231 31.16191864]
[6.28360939 29.15674400]
[19.47699356 36.29390335]
[34.47637939 36.42971802]
[49.47576523 36.56553268]
[64.47515106 36.70134354]
[63.44215393 29.27282524]
[50.34406662 21.96254921]
[37.24598312 14.65227222]
[24.14789581 7.34199619]
[11.04980850 0.03172043]
[-2.04827762 -7.27855539]
[-15.14636421 -14.58883190]
[-24.16128731 -16.03749084]
[-28.38066673 -22.10187149]
[-41.37104797 -29.60187149]
[-54.36142731 -37.10187149]
[-63.12129211 -30.03850365]
[-73.59016418 -25.98492050]
[-84.76950836 -25.31041336]
[-95.59828949 -28.06279945]
[-105.05365753 -33.96540833]
[-112.24758148 -42.44481277]
[-116.51024628 -52.68649673]
[-117.45237732 -63.71308899]
[-115.00076294 -74.47763062]
[-127.53308105 -82.72026062]
[-140.06539917 -90.96289825]
[-156.00454712 -89.13993073]
[-167.26551819 -100.56665802]
[-165.20985413 -116.47746277]
[-151.41450500 -124.66694641]
[-136.46205139 -118.85283661]
[-131.82275391 -103.49521637]
[-119.29044342 -95.25257874]
[-106.75812531 -87.00994873]
[-90.34166718 -96.39524841]
[-71.35173035 -96.13174438]
[-55.06215286 -86.20936584]
[-46.03915024 -69.31205750]
[-46.86142731 -50.09225082]
[-33.87104797 -42.59225082]
[-20.88066673 -35.09225082]
[-7.83608818 -27.68691826]
[5.26199818 -20.37664223]
[18.36008453 -13.06636620]
[31.45817184 -5.75609016]
[44.55625916 1.55418599]
[57.65434265 8.86446190]
[70.75242615 16.17473793]
[84.20552063 9.54040718]
[86.37950134 -5.30121708]
[88.55347443 -20.14284134]
[90.72745514 -34.98446655]
[92.46884918 -49.88304138]
[93.77618408 -64.82595825]
[95.08351898 -79.76888275]
[96.39085388 -94.71179962]
[94.02191162 -103.52971649]
[97.82742310 -109.86201477]
[99.35194397 -124.78433990]
[100.87647247 -139.70666504]
[87.84227753 -147.64848328]
[79.55191040 -160.46380615]
[77.65142059 -175.60813904]
[82.51816559 -190.07456970]
[93.18583679 -200.99076843]
[107.53636932 -206.18933105]
[122.72045135 -204.63806152]
[135.72326660 -196.64497375]
[143.96310425 -183.79710388]
[145.80393982 -168.64540100]
[140.88026428 -154.19824219]
[130.16969299 -143.32414246]
[115.79879761 -138.18214417]
[114.27426910 -123.25981140]
[112.74974823 -108.33748627]
[111.33377838 -93.40446472]
[110.02644348 -78.46154785]
[108.71910858 -63.51862717]
[107.41176605 -48.57570648]
[109.10442352 -46.34566498]
[110.01741791 -43.31201935]
[109.84072113 -39.76774979]
[108.37575531 -36.11241531]
[105.56907654 -32.81048965]
[103.39510345 -17.96886444]
[101.22112274 -3.12723899]
[99.04714203 11.71438503]
[110.74541473 21.10323715]
[124.76469421 15.76847649]
[138.78398132 10.43371487]
[152.80326843 5.09895325]
[166.82255554 -0.23580812]
[180.84182739 -5.57056952]
[183.30838013 -21.92192841]
[193.62614441 -34.72416687]
[208.90460205 -40.54166031]
[224.93893433 -37.87471771]
[237.36723328 -27.54487228]
[251.30744934 -33.08296585]
[265.24765015 -38.62105560]
[279.18786621 -44.15914917]
[293.12808228 -49.69724274]
[305.61581421 -61.16429901]
[320.09167480 -52.33900452]
[315.61859131 -35.98578262]
[298.66616821 -35.75703049]
[284.72595215 -30.21893692]
[270.78576660 -24.68084335]
[256.84555054 -19.14275169]
[242.90533447 -13.60466003]
[241.82157898 0.00738169]
[234.94636536 11.88192749]
[223.57174683 19.67366982]
[209.88470459 21.81540298]
[196.54681396 17.83296204]
[186.17658997 8.44871426]
[172.15730286 13.78347588]
[158.13803101 19.11823654]
[144.11874390 24.45299911]
[130.09945679 29.78775978]
[116.08017731 35.12252045]
[115.64390564 50.11617661]
[129.32928467 56.25706100]
[145.08757019 54.84755325]
[153.53181458 67.11719513]
[167.21719360 73.25807953]
[180.90257263 79.39896393]
[194.58795166 85.53984833]
[208.27333069 91.68073273]
[224.52368164 89.47662354]
[234.34228516 102.61158752]
[227.62860107 117.57348633]
[211.28909302 118.97080994]
[202.13244629 105.36610413]
[188.44706726 99.22521973]
[174.76168823 93.08433533]
[161.07630920 86.94345093]
[147.39093018 80.80256653]
[132.61151123 82.65131378]
[123.18839264 69.94243622]
[109.50302124 63.80155182]
[135.55737305 97.48714447]
[113.12098694 131.22204590]
[115.72571564 145.99417114]
[118.33043671 160.76628113]
[120.93515778 175.53840637]
[123.53987885 190.31051636]
[126.14459991 205.08262634]
[128.74932861 219.85475159]
[131.35404968 234.62686157]
[133.95877075 249.39898682]
[136.56349182 264.17111206]
[155.31581116 275.31893921]
[159.63053894 296.41314697]
[147.09753418 313.56906128]
[150.76869202 328.11288452]
[154.43983459 342.65670776]
[165.31933594 354.14352417]
[160.93225098 368.37738037]
[164.60340881 382.92120361]
[176.41137695 394.30117798]
[172.19796753 410.14981079]
[156.29754639 414.16339111]
[145.06712341 402.21310425]
[150.05958557 386.59237671]
[146.38844299 372.04855347]
[135.77153015 361.60198975]
[139.89602661 346.32785034]
[136.22486877 331.78402710]
[132.55372620 317.24020386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[56 87]
[58 86]
[59 85]
[60 84]
[69 79]
[70 78]
[71 77]
[94 132]
[95 131]
[96 130]
[97 129]
[98 124]
[99 123]
[100 122]
[101 121]
[103 120]
[104 119]
[105 118]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[167 186]
[168 185]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
[200 215]
[201 214]
[202 213]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
