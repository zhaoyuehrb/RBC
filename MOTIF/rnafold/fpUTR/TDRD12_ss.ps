%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUGCGCGGGCAUCCGGUGGGUGCGGGAGGCCCGAGGCCAGGCAGGCAGGGAUCCCGCAGCGAGGGGCUGGUUACUGCCAGGACGGAGCGCAUUGCCUCGAGCCGACCCCGGGGUCCGCGAGGGCUCCUGGGGACGAGGAGUGUGGGGCACCUGCCGCGGGGGGCCCAGGCGCUAAAGGUGGAGGGAAGGAACGCACUCGCGGCGGGGGCCUGGCCGGGGCGGACGCAGCCAGCCUCACCCGCGACGGUAGGG\
GACUUCCAGGGCGAGGGGGCCCAUCUGCCCUCGGGCGCCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[457.04089355 1077.74584961]
[453.64892578 1057.37963867]
[463.41677856 1039.02966309]
[456.07553101 1025.94897461]
[448.73425293 1012.86822510]
[442.74975586 1008.59405518]
[441.38543701 999.61242676]
[434.18109131 986.45574951]
[426.97674561 973.29913330]
[419.77239990 960.14245605]
[412.56805420 946.98583984]
[405.36370850 933.82916260]
[393.28155518 934.09564209]
[382.15896606 929.18817139]
[374.11651611 919.97564697]
[370.71572876 908.15399170]
[372.65603638 895.93402100]
[379.63204956 885.62792969]
[372.70388794 872.32373047]
[365.70639038 859.05590820]
[358.63977051 845.82482910]
[351.57312012 832.59368896]
[338.75231934 825.01239014]
[339.07580566 809.19445801]
[332.00915527 795.96337891]
[324.94253540 782.73223877]
[317.87588501 769.50109863]
[304.56521606 768.90930176]
[293.18728638 761.77075195]
[286.76034546 749.85333252]
[287.05111694 736.20831299]
[294.09051514 724.38970947]
[287.16235352 711.08557129]
[280.23422241 697.78143311]
[273.30606079 684.47723389]
[261.89303589 680.56158447]
[256.00128174 669.57550049]
[259.25531006 657.12744141]
[252.46638489 643.75170898]
[245.67745972 630.37597656]
[238.88853455 617.00024414]
[232.09960938 603.62451172]
[225.31068420 590.24871826]
[218.52175903 576.87298584]
[211.73283386 563.49725342]
[209.18121338 578.27862549]
[199.09846497 589.38439941]
[184.63165283 593.34814453]
[170.29623413 588.93273926]
[160.56666565 577.51629639]
[158.47978210 562.66217041]
[164.68693542 549.00671387]
[177.25074768 540.81213379]
[192.24971008 540.63623047]
[205.00158691 548.53302002]
[199.49717712 534.57946777]
[193.99278259 520.62591553]
[188.48838806 506.67233276]
[182.98399353 492.71878052]
[177.47959900 478.76522827]
[165.61167908 469.76513672]
[167.74508667 454.08843994]
[162.24069214 440.13488770]
[156.73629761 426.18133545]
[151.23190308 412.22778320]
[145.72750854 398.27423096]
[137.07818604 400.03070068]
[127.38894653 398.09310913]
[118.27541351 392.02523804]
[111.49468231 382.09359741]
[96.49978638 381.70223999]
[81.50489044 381.31088257]
[66.50999451 380.91955566]
[51.51510239 380.52819824]
[37.37000275 388.82568359]
[23.24723244 380.49023438]
[23.67508698 364.09667969]
[38.21342468 356.50927734]
[51.90645218 365.53329468]
[66.90134430 365.92465210]
[81.89624023 366.31600952]
[96.89113617 366.70733643]
[111.88603210 367.09869385]
[116.86170197 361.48687744]
[102.16606903 358.48046875]
[97.42196655 344.25045776]
[107.37355804 333.02700806]
[122.06912994 336.03372192]
[126.81304932 350.26318359]
[131.78872681 344.65136719]
[129.60470581 329.81121826]
[127.42068481 314.97106934]
[112.08775330 304.90664673]
[108.97602081 286.50613403]
[120.53755951 271.45059204]
[118.04425812 256.65927124]
[108.29907227 245.39512634]
[113.63487244 230.50083923]
[111.14157867 215.70951843]
[108.64827728 200.91818237]
[106.15497589 186.12684631]
[96.50302124 178.88604736]
[94.28170013 166.61936951]
[101.21180725 155.77886963]
[98.87302399 140.96232605]
[96.53423309 126.14577484]
[78.27906036 121.58737946]
[65.40177155 104.36920929]
[66.26630402 80.18607330]
[57.85967255 67.76316833]
[49.45304108 55.34026337]
[41.04640961 42.91735840]
[32.63977814 30.49445534]
[24.23314667 18.07155037]
[15.82651520 5.64864731]
[7.35516834 -6.73021698]
[-1.18066335 -19.06470490]
[-9.71649551 -31.39919090]
[-18.25232697 -43.73367691]
[-33.29989624 -50.25308228]
[-34.90865707 -66.57312775]
[-21.42365456 -75.90515137]
[-6.71710014 -68.64916992]
[-5.91783953 -52.26951218]
[2.61799216 -39.93502426]
[11.15382385 -27.60053635]
[19.68965530 -15.26604843]
[26.04867554 -11.57209301]
[28.24942017 -2.75798440]
[36.65605164 9.66491985]
[45.06268311 22.08782387]
[53.46931458 34.51072693]
[61.87594604 46.93363190]
[70.28257751 59.35653687]
[78.68920898 71.77944183]
[86.02639771 70.22520447]
[82.91793823 55.55082703]
[79.80971527 40.87639236]
[94.48419952 37.76841354]
[97.59231567 52.44235992]
[100.70078278 67.11673737]
[108.03797150 65.56250763]
[110.68550873 50.79800415]
[113.33304596 36.03350449]
[115.98059082 21.26900101]
[118.62812805 6.50449800]
[111.99140167 -10.69608974]
[123.87980652 -23.63271713]
[126.37310028 -38.42404938]
[128.86639404 -53.21537781]
[131.35969543 -68.00670624]
[126.02389526 -82.90099335]
[135.76908875 -94.16512299]
[138.26239014 -108.95645142]
[140.75567627 -123.74778748]
[131.39031982 -136.47828674]
[133.85238647 -152.08961487]
[146.68119812 -161.31985474]
[162.26562500 -158.69287109]
[171.35972595 -145.76719666]
[168.56811523 -130.21141052]
[155.54701233 -121.25448608]
[153.05371094 -106.46315765]
[150.56040955 -91.67182159]
[156.07455444 -77.83551025]
[146.15103149 -65.51341248]
[143.65773010 -50.72208023]
[141.16442871 -35.93075180]
[138.67112732 -21.13941956]
[145.41610718 -11.13467693]
[143.49346924 1.18235326]
[133.39262390 9.15203667]
[130.74508667 23.91654015]
[128.09754944 38.68104172]
[125.45001221 53.44554520]
[122.80247498 68.21004486]
[132.66474915 85.02127075]
[132.61975098 102.89984131]
[124.27594757 116.86879730]
[111.35078430 123.80699158]
[113.68956757 138.62353516]
[116.02835083 153.44007874]
[127.93695831 167.51458740]
[120.94631195 183.63356018]
[123.43960571 198.42488098]
[125.93290710 213.21621704]
[128.42620850 228.00755310]
[138.34973145 240.32965088]
[132.83558655 254.16595459]
[135.32888794 268.95727539]
[146.12135315 273.80319214]
[153.18040466 283.14746094]
[154.85733032 294.61688232]
[150.85240173 305.36688232]
[142.26083374 312.78704834]
[144.44485474 327.62719727]
[146.62887573 342.46734619]
[171.53215027 367.20275879]
[159.68106079 392.76983643]
[165.18545532 406.72338867]
[170.68984985 420.67694092]
[176.19424438 434.63049316]
[181.69863892 448.58404541]
[193.96028137 458.58218384]
[191.43315125 473.26083374]
[196.93754578 487.21438599]
[202.44194031 501.16793823]
[207.94633484 515.12152100]
[213.45072937 529.07507324]
[218.95513916 543.02862549]
[225.10858154 556.70831299]
[231.89750671 570.08410645]
[238.68643188 583.45983887]
[245.47535706 596.83557129]
[252.26428223 610.21130371]
[259.05319214 623.58703613]
[265.84213257 636.96276855]
[272.63104248 650.33856201]
[288.29592896 660.06054688]
[286.61019897 677.54913330]
[293.53836060 690.85327148]
[300.46652222 704.15740967]
[307.39468384 717.46160889]
[324.17764282 719.74444580]
[336.16113281 731.47741699]
[338.74618530 747.87939453]
[331.10702515 762.43444824]
[338.17364502 775.66558838]
[345.24029541 788.89672852]
[352.30691528 802.12786865]
[365.63317871 810.65551758]
[364.80422974 825.52703857]
[371.87088013 838.75817871]
[378.93753052 851.98931885]
[385.70715332 858.04766846]
[386.00805664 865.39556885]
[392.93618774 878.69976807]
[410.97784424 880.86901855]
[423.96524048 893.35186768]
[426.79721069 910.98162842]
[418.52038574 926.62481689]
[425.72473145 939.78149414]
[432.92904663 952.93811035]
[440.13339233 966.09478760]
[447.33773804 979.25140381]
[454.54208374 992.40808105]
[461.81500244 1005.52691650]
[469.15628052 1018.60766602]
[476.49752808 1031.68847656]
[486.19271851 1030.54663086]
[495.75921631 1032.33801270]
[504.33236694 1036.88305664]
[511.14263916 1043.75378418]
[515.58459473 1052.31457520]
[517.27081299 1061.78076172]
[516.06555176 1071.29052734]
[512.09545898 1079.98339844]
[505.73669434 1087.07775879]
[512.38568115 1100.52368164]
[519.03460693 1113.96948242]
[525.68359375 1127.41540527]
[532.33251953 1140.86120605]
[544.25122070 1145.70764160]
[549.52325439 1157.00415039]
[545.82653809 1168.48999023]
[552.33477783 1182.00451660]
[558.84301758 1195.51904297]
[565.35131836 1209.03356934]
[582.50347900 1219.68408203]
[580.09973145 1238.89831543]
[586.88867188 1252.27404785]
[593.67761230 1265.64978027]
[600.46655273 1279.02551270]
[607.25543213 1292.40124512]
[614.04437256 1305.77697754]
[629.14343262 1310.44543457]
[636.44494629 1324.46203613]
[631.61712646 1339.51086426]
[617.52416992 1346.66381836]
[602.52722168 1341.67712402]
[595.52368164 1327.50927734]
[600.66864014 1312.56591797]
[593.87969971 1299.19018555]
[587.09075928 1285.81445312]
[580.30187988 1272.43872070]
[573.51293945 1259.06298828]
[566.72399902 1245.68725586]
[556.82086182 1243.42211914]
[549.62908936 1235.94042969]
[547.67602539 1225.52526855]
[551.83679199 1215.54187012]
[545.32849121 1202.02734375]
[538.82025146 1188.51281738]
[532.31201172 1174.99829102]
[517.29498291 1165.87792969]
[518.88665771 1147.51025391]
[512.23767090 1134.06433105]
[505.58874512 1120.61853027]
[498.93978882 1107.17260742]
[492.29083252 1093.72668457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 249]
[4 248]
[5 247]
[7 246]
[8 245]
[9 244]
[10 243]
[11 242]
[12 241]
[18 237]
[19 236]
[20 234]
[21 233]
[22 232]
[24 230]
[25 229]
[26 228]
[27 227]
[32 223]
[33 222]
[34 221]
[35 220]
[38 218]
[39 217]
[40 216]
[41 215]
[42 214]
[43 213]
[44 212]
[45 211]
[55 210]
[56 209]
[57 208]
[58 207]
[59 206]
[60 205]
[62 203]
[63 202]
[64 201]
[65 200]
[66 199]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[90 197]
[91 196]
[92 195]
[95 190]
[96 189]
[98 187]
[99 186]
[100 185]
[101 184]
[104 182]
[105 181]
[106 180]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 127]
[117 126]
[118 125]
[119 124]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[148 169]
[149 168]
[150 167]
[151 166]
[153 164]
[154 163]
[155 162]
[258 300]
[259 299]
[260 298]
[261 297]
[262 296]
[265 294]
[266 293]
[267 292]
[268 291]
[270 287]
[271 286]
[272 285]
[273 284]
[274 283]
[275 282]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
