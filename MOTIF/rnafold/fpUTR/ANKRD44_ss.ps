%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAAACCCCACUAGCCAGUGUCAGCCUCUCGGCGGGAGGAGGCGGCGGCGGAGGAGGAGCAGGGGGAGGGCUGUCAAAUUCGGGAGCCAGAUUUUUUCCCUUCUCCUGGCAAUCCCUUCCGCUUCCCCGGCUCCCGGCGUGACAUCUGCGGGCCGGGGACCUGCAUGUGUGUGCGCGCGAAGGAGCGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[302.89385986 521.65014648]
[296.54235840 508.06124878]
[290.19085693 494.47235107]
[283.83935547 480.88342285]
[267.80471802 475.83233643]
[260.22918701 460.44729614]
[266.23376465 444.02395630]
[259.66305542 430.53967285]
[253.09233093 417.05541992]
[246.52160645 403.57113647]
[231.47018433 394.55953979]
[232.89570618 376.20724487]
[226.10749817 362.83114624]
[213.44815063 354.98321533]
[214.10258484 339.17553711]
[207.31437683 325.79943848]
[193.12057495 321.43234253]
[186.04582214 307.96377563]
[190.72267151 293.10559082]
[183.93446350 279.72949219]
[177.14625549 266.35339355]
[170.35806274 252.97727966]
[163.56985474 239.60118103]
[156.78164673 226.22506714]
[149.88536072 212.90435791]
[142.88143921 199.63992310]
[135.87753296 186.37548828]
[122.53541565 185.71180725]
[111.17432404 178.48110962]
[104.82231140 166.48370361]
[105.23482513 152.80642700]
[112.41101074 141.02867126]
[105.62281036 127.65256500]
[98.83460236 114.27645874]
[87.22676086 106.48226166]
[87.78929138 92.51174927]
[81.00108337 79.13564301]
[74.31723022 72.88818359]
[74.21323395 65.48751831]
[67.64251709 52.00324249]
[61.07180405 38.51896286]
[54.50109100 25.03468895]
[47.93037415 11.55041218]
[41.35966110 -1.93386364]
[34.78894424 -15.41813946]
[28.21822929 -28.90241623]
[15.21763706 -37.91879654]
[16.59794426 -52.74930954]
[10.02722931 -66.23358154]
[3.44541740 -72.58844757]
[3.46127701 -79.98983002]
[-2.89022493 -93.57874298]
[-9.24172688 -107.16764832]
[-28.45668411 -112.99296570]
[-37.08067703 -130.78712463]
[-29.97038841 -148.91145325]
[-36.97430420 -162.17588806]
[-43.97821808 -175.44030762]
[-50.98213577 -188.70474243]
[-57.98604965 -201.96917725]
[-71.27178955 -210.55984497]
[-70.37245178 -225.42727661]
[-77.37636566 -238.69171143]
[-84.38027954 -251.95614624]
[-91.38419342 -265.22058105]
[-98.38811493 -278.48501587]
[-105.39202881 -291.74945068]
[-112.39594269 -305.01388550]
[-119.39985657 -318.27828979]
[-126.93489075 -331.24838257]
[-134.98869324 -343.90289307]
[-143.04249573 -356.55737305]
[-151.09629822 -369.21188354]
[-165.03334045 -376.69985962]
[-165.33941650 -391.59130859]
[-173.39321899 -404.24581909]
[-188.87376404 -407.42831421]
[-197.49989319 -420.67089844]
[-194.15388489 -436.11691284]
[-180.82086182 -444.60253906]
[-165.41107178 -441.09341431]
[-157.06687927 -427.67144775]
[-160.73872375 -412.29962158]
[-152.68492126 -399.64511108]
[-139.32395935 -393.06228638]
[-138.44180298 -377.26568604]
[-130.38800049 -364.61117554]
[-122.33419800 -351.95669556]
[-114.28039551 -339.30218506]
[-108.45285797 -353.12390137]
[-94.05912781 -357.34536743]
[-81.68946075 -348.86059570]
[-80.44487762 -333.91232300]
[-91.24108887 -323.49877930]
[-106.13542938 -325.28222656]
[-99.13150787 -312.01779175]
[-92.12759399 -298.75335693]
[-85.12368011 -285.48892212]
[-78.11976624 -272.22448730]
[-71.11584473 -258.96005249]
[-64.11193085 -245.69563293]
[-57.10801697 -232.43119812]
[-44.32324219 -224.78929138]
[-44.72161865 -208.97309875]
[-37.71770096 -195.70866394]
[-30.71378708 -182.44422913]
[-23.70987129 -169.17979431]
[-16.70595551 -155.91535950]
[-6.42021894 -155.63728333]
[2.89138842 -151.07243347]
[9.51346397 -142.98695374]
[12.19513893 -132.80207825]
[10.38593578 -122.34458160]
[4.34718132 -113.51914978]
[10.69868374 -99.93024445]
[17.05018425 -86.34133148]
[23.51150513 -72.80429840]
[30.08222008 -59.32002258]
[42.61283112 -51.26812744]
[41.70250702 -35.47312927]
[48.27322006 -21.98885536]
[54.84393692 -8.50457859]
[61.41464996 4.97969723]
[67.98536682 18.46397400]
[74.55608368 31.94824982]
[81.12680054 45.43252563]
[87.69750977 58.91680145]
[94.37718964 72.34743500]
[101.16539764 85.72354126]
[112.77323914 93.51773834]
[112.21070862 107.48825073]
[118.99891663 120.86435699]
[125.78712463 134.24046326]
[142.51745605 136.68215942]
[154.38179016 148.49378967]
[156.84846497 164.88456726]
[149.14196777 179.37158203]
[156.14587402 192.63601685]
[163.14979553 205.90043640]
[169.93392944 212.03884888]
[170.15776062 219.43685913]
[176.94595337 232.81297302]
[183.73416138 246.18907166]
[190.52236938 259.56518555]
[197.31057739 272.94128418]
[204.09878540 286.31741333]
[218.85215759 291.31497192]
[225.54582214 304.97692871]
[220.69049072 319.01123047]
[227.47868347 332.38732910]
[240.62358093 341.19201660]
[239.48361206 356.04293823]
[246.27180481 369.41903687]
[258.27536011 374.16436768]
[263.65078735 385.45669556]
[260.00588989 397.00042725]
[266.57659912 410.48468018]
[273.14730835 423.96896362]
[279.71801758 437.45324707]
[292.88031006 440.35134888]
[301.83609009 450.16098022]
[303.47793579 463.14578247]
[297.42825317 474.53192139]
[303.77975464 488.12084961]
[310.13125610 501.70974731]
[316.48275757 515.29864502]
[328.52960205 513.59887695]
[340.59136963 515.07458496]
[351.84631348 519.61779785]
[361.52954102 526.91156006]
[368.98507690 536.45257568]
[373.71023560 547.58532715]
[375.38964844 559.54766846]
[373.91613770 571.52258301]
[369.39761353 582.69415283]
[362.14920044 592.30322266]
[352.67126465 599.69891357]
[358.12985229 613.67047119]
[363.58840942 627.64202881]
[378.16302490 633.75402832]
[384.06961060 648.41308594]
[377.80386353 662.92224121]
[363.08319092 668.67346191]
[348.64105225 662.25469971]
[343.04577637 647.47406006]
[349.61688232 633.10058594]
[344.15829468 619.12902832]
[338.69973755 605.15753174]
[320.71856689 605.46136475]
[303.96081543 598.84234619]
[290.99200439 586.28576660]
[283.80834961 569.68829346]
[283.52932739 551.57116699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[7 159]
[8 158]
[9 157]
[10 156]
[12 153]
[13 152]
[15 150]
[16 149]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 139]
[26 138]
[27 137]
[32 133]
[33 132]
[34 131]
[36 129]
[37 128]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[45 121]
[46 120]
[48 118]
[49 117]
[51 116]
[52 115]
[53 114]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
