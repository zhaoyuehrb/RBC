%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZZEF1)
} def

/sequence { (\
GACAGGUCGAGGCGGGGAGGCGGCGGCGGCGGCUGCAGAGCCAGGCGCCCAAGACGGAGACCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.025985299 ubox
2 7 0.023052900 ubox
5 49 0.004302289 ubox
5 50 0.007982826 ubox
5 62 0.383046001 ubox
5 63 0.031914760 ubox
5 64 0.016215223 ubox
6 13 0.020326638 ubox
6 27 0.099538713 ubox
6 46 0.007390697 ubox
6 48 0.004312042 ubox
6 49 0.005335741 ubox
6 55 0.912563889 ubox
6 61 0.384242249 ubox
6 62 0.024059144 ubox
6 63 0.008349667 ubox
7 12 0.019367671 ubox
7 26 0.099589093 ubox
7 45 0.007417219 ubox
7 54 0.913766797 ubox
7 57 0.018760957 ubox
7 58 0.008174779 ubox
7 60 0.384051498 ubox
8 25 0.099716120 ubox
8 44 0.007477892 ubox
8 47 0.005644101 ubox
8 53 0.913772243 ubox
8 56 0.030510370 ubox
8 57 0.009458444 ubox
8 59 0.383024974 ubox
9 13 0.003715396 ubox
9 24 0.100701432 ubox
9 27 0.004122099 ubox
9 46 0.005879263 ubox
9 55 0.045146729 ubox
11 42 0.014432816 ubox
11 49 0.970946590 ubox
11 50 0.169359812 ubox
11 64 0.004335995 ubox
12 21 0.102542677 ubox
12 24 0.008510331 ubox
12 41 0.014451031 ubox
12 46 0.014929247 ubox
12 48 0.981526021 ubox
12 49 0.120058449 ubox
12 63 0.004226357 ubox
13 20 0.102548435 ubox
13 22 0.007692489 ubox
13 23 0.007541747 ubox
13 40 0.014446396 ubox
13 45 0.015021277 ubox
13 47 0.988777127 ubox
13 56 0.058494209 ubox
14 21 0.008736316 ubox
14 42 0.007282112 ubox
14 46 0.987479144 ubox
14 49 0.003311016 ubox
14 50 0.045856812 ubox
14 55 0.057376299 ubox
14 62 0.004174450 ubox
14 63 0.022841652 ubox
14 64 0.057614060 ubox
15 41 0.008011602 ubox
15 42 0.054317871 ubox
15 48 0.003582581 ubox
15 49 0.046243033 ubox
15 50 0.053385843 ubox
15 61 0.004161541 ubox
15 62 0.022921850 ubox
15 63 0.058067420 ubox
16 41 0.054297742 ubox
16 42 0.097888594 ubox
16 48 0.046230903 ubox
16 49 0.053396732 ubox
16 50 0.007702758 ubox
16 61 0.022920662 ubox
16 62 0.058068508 ubox
17 41 0.098082319 ubox
17 48 0.053315113 ubox
17 49 0.007283280 ubox
17 61 0.057973016 ubox
19 34 0.016104759 ubox
19 42 0.983100338 ubox
19 49 0.038144359 ubox
19 50 0.011425742 ubox
20 27 0.018946976 ubox
20 33 0.016291147 ubox
20 36 0.074063094 ubox
20 41 0.984532964 ubox
20 46 0.025202054 ubox
20 48 0.038410405 ubox
20 49 0.007985480 ubox
21 26 0.018958116 ubox
21 32 0.016294235 ubox
21 35 0.074089097 ubox
21 40 0.982876288 ubox
21 45 0.025127209 ubox
21 47 0.038537630 ubox
21 56 0.059994549 ubox
22 27 0.003616959 ubox
22 34 0.074070654 ubox
22 42 0.019733993 ubox
22 46 0.036983465 ubox
22 49 0.021042236 ubox
22 50 0.004368141 ubox
22 55 0.060015376 ubox
23 30 0.035895405 ubox
23 33 0.074105823 ubox
23 36 0.985717191 ubox
23 41 0.019818237 ubox
23 46 0.008388105 ubox
23 48 0.022131444 ubox
23 49 0.003839988 ubox
24 29 0.035923835 ubox
24 31 0.024836858 ubox
24 32 0.069824275 ubox
24 35 0.987992738 ubox
24 40 0.019731269 ubox
24 45 0.011276273 ubox
24 47 0.022135501 ubox
24 56 0.007976695 ubox
25 30 0.035020227 ubox
25 34 0.987333695 ubox
25 42 0.015682207 ubox
25 46 0.017674596 ubox
25 49 0.039350356 ubox
25 50 0.008305299 ubox
25 55 0.008017665 ubox
26 33 0.988075265 ubox
26 36 0.037475716 ubox
26 41 0.015739148 ubox
26 46 0.014165381 ubox
26 48 0.039843829 ubox
26 49 0.007097798 ubox
27 32 0.987752238 ubox
27 35 0.037502459 ubox
27 40 0.015714431 ubox
27 45 0.019456032 ubox
27 47 0.039946941 ubox
28 34 0.037218063 ubox
28 42 0.007324140 ubox
28 46 0.037840008 ubox
28 49 0.112552221 ubox
28 50 0.009338114 ubox
29 33 0.036421302 ubox
29 36 0.017269453 ubox
29 41 0.007344398 ubox
29 46 0.014312771 ubox
29 48 0.113216357 ubox
29 49 0.006629218 ubox
30 35 0.017276358 ubox
30 40 0.007340480 ubox
30 45 0.018952248 ubox
30 47 0.113412194 ubox
31 42 0.057576179 ubox
31 46 0.113099071 ubox
32 41 0.057856244 ubox
33 40 0.057854716 ubox
33 44 0.113012501 ubox
34 39 0.057276879 ubox
34 43 0.112917868 ubox
35 41 0.040382869 ubox
35 42 0.104936284 ubox
36 40 0.056484604 ubox
40 46 0.004663656 ubox
41 45 0.004809419 ubox
44 50 0.005883821 ubox
45 49 0.005795029 ubox
48 57 0.013356751 ubox
49 56 0.013836316 ubox
49 57 0.059240444 ubox
50 56 0.082134004 ubox
56 62 0.231313555 ubox
56 63 0.655073496 ubox
56 64 0.315362823 ubox
57 61 0.228272145 ubox
57 62 0.654359342 ubox
57 63 0.316825495 ubox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
19 42 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
