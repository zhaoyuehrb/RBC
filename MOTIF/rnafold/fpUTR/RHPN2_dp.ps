%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RHPN2)
} def

/sequence { (\
CUCUCGGGCCAGCCUCAGCCGCCGCGCCUCAGUCCGCCGUCCGCCCUCCGCGCCCGCGCCGCUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.031344299 ubox
1 8 0.014635020 ubox
1 12 0.009340555 ubox
1 18 0.016949287 ubox
1 32 0.047126135 ubox
1 65 0.097232002 ubox
2 6 0.029009991 ubox
2 7 0.014043402 ubox
2 8 0.007293408 ubox
2 11 0.009551681 ubox
2 17 0.017694761 ubox
2 31 0.046965135 ubox
2 64 0.097673715 ubox
3 7 0.011604856 ubox
3 12 0.011464089 ubox
3 18 0.070796437 ubox
3 32 0.157799848 ubox
3 65 0.059283162 ubox
4 11 0.011172697 ubox
4 17 0.073572523 ubox
4 31 0.157919282 ubox
4 64 0.057953044 ubox
5 21 0.043729007 ubox
5 24 0.095591124 ubox
5 26 0.362680266 ubox
5 36 0.039245463 ubox
5 39 0.009096315 ubox
5 43 0.040952313 ubox
5 50 0.003196568 ubox
5 56 0.541263895 ubox
5 58 0.013534660 ubox
5 61 0.116588872 ubox
6 14 0.190884112 ubox
6 15 0.176670691 ubox
6 16 0.100425648 ubox
6 20 0.049434789 ubox
6 23 0.095230732 ubox
6 25 0.396822780 ubox
6 28 0.076660108 ubox
6 29 0.230064684 ubox
6 30 0.069275921 ubox
6 35 0.079835982 ubox
6 38 0.009132575 ubox
6 42 0.045751496 ubox
6 46 0.149206035 ubox
6 47 0.003567404 ubox
6 49 0.005609680 ubox
6 54 0.003627515 ubox
6 55 0.597666073 ubox
6 57 0.011784367 ubox
6 60 0.117861763 ubox
6 63 0.005531310 ubox
7 13 0.191186857 ubox
7 14 0.197454721 ubox
7 15 0.079423807 ubox
7 16 0.014306517 ubox
7 19 0.043217268 ubox
7 20 0.347098825 ubox
7 22 0.079137709 ubox
7 23 0.518976475 ubox
7 27 0.076339784 ubox
7 28 0.249898987 ubox
7 29 0.015557942 ubox
7 34 0.079880966 ubox
7 35 0.004398592 ubox
7 37 0.004467084 ubox
7 38 0.017164349 ubox
7 41 0.045305878 ubox
7 45 0.149405105 ubox
7 46 0.003811577 ubox
7 48 0.005185184 ubox
7 54 0.597742935 ubox
7 55 0.005737246 ubox
7 59 0.104491956 ubox
7 60 0.035622100 ubox
7 63 0.023583410 ubox
8 13 0.196451073 ubox
8 14 0.078832557 ubox
8 15 0.011214193 ubox
8 19 0.351905486 ubox
8 22 0.521196264 ubox
8 25 0.077150206 ubox
8 27 0.250094128 ubox
8 28 0.014282171 ubox
8 33 0.079768162 ubox
8 34 0.004415750 ubox
8 37 0.017734715 ubox
8 40 0.044872749 ubox
8 44 0.149400735 ubox
8 45 0.003681132 ubox
8 47 0.004035344 ubox
8 48 0.003172013 ubox
8 53 0.597701750 ubox
8 54 0.005586694 ubox
8 57 0.088224840 ubox
8 59 0.036450943 ubox
8 62 0.024375643 ubox
8 66 0.160588721 ubox
9 18 0.352587646 ubox
9 21 0.521925779 ubox
9 24 0.077144143 ubox
9 26 0.249628021 ubox
9 32 0.079615548 ubox
9 36 0.017883859 ubox
9 39 0.044744707 ubox
9 43 0.149078329 ubox
9 52 0.594851727 ubox
9 56 0.088147902 ubox
9 58 0.036435126 ubox
9 61 0.024358534 ubox
9 65 0.162361994 ubox
11 29 0.036932639 ubox
11 47 0.019817893 ubox
11 63 0.162694736 ubox
12 19 0.544233290 ubox
12 22 0.223551281 ubox
12 25 0.117971737 ubox
12 27 0.045975309 ubox
12 28 0.035574699 ubox
12 33 0.017390027 ubox
12 37 0.040781441 ubox
12 40 0.045365830 ubox
12 44 0.012430551 ubox
12 46 0.020526752 ubox
12 51 0.541277055 ubox
12 53 0.052130051 ubox
12 57 0.014503298 ubox
12 59 0.012313274 ubox
12 62 0.166039931 ubox
12 66 0.094511979 ubox
13 18 0.543195416 ubox
13 21 0.223707004 ubox
13 24 0.118311298 ubox
13 26 0.047868324 ubox
13 32 0.017072689 ubox
13 36 0.040788038 ubox
13 39 0.045246244 ubox
13 43 0.012477029 ubox
13 50 0.542875735 ubox
13 52 0.051905155 ubox
13 56 0.014505189 ubox
13 58 0.012032668 ubox
13 61 0.165775142 ubox
13 65 0.089923968 ubox
14 32 0.042898613 ubox
14 65 0.073342280 ubox
15 31 0.042531044 ubox
15 64 0.084458223 ubox
17 29 0.040339035 ubox
17 47 0.100698325 ubox
17 63 0.277233129 ubox
18 25 0.098265621 ubox
18 27 0.037555332 ubox
18 28 0.038997687 ubox
18 33 0.006718300 ubox
18 37 0.028234422 ubox
18 40 0.038898465 ubox
18 44 0.554248367 ubox
18 46 0.100295550 ubox
18 51 0.018515159 ubox
18 53 0.006900733 ubox
18 57 0.066437181 ubox
18 59 0.148838568 ubox
18 62 0.289546059 ubox
18 66 0.051815642 ubox
19 24 0.098068564 ubox
19 26 0.039205666 ubox
19 32 0.006837961 ubox
19 36 0.025037963 ubox
19 39 0.039294885 ubox
19 43 0.550073128 ubox
19 50 0.018301414 ubox
19 52 0.006136701 ubox
19 56 0.060850027 ubox
19 58 0.118193469 ubox
19 61 0.288145092 ubox
19 65 0.052642606 ubox
20 26 0.035930594 ubox
20 36 0.018265873 ubox
20 39 0.122951554 ubox
20 43 0.151876148 ubox
20 50 0.005659928 ubox
20 52 0.006627570 ubox
20 56 0.078767708 ubox
20 58 0.273988700 ubox
20 61 0.020090043 ubox
21 25 0.034600380 ubox
21 27 0.046493758 ubox
21 33 0.007616359 ubox
21 35 0.023117342 ubox
21 37 0.053555009 ubox
21 38 0.122924331 ubox
21 40 0.505932099 ubox
21 42 0.162781254 ubox
21 44 0.086387739 ubox
21 49 0.005915784 ubox
21 51 0.009925327 ubox
21 53 0.019662166 ubox
21 55 0.082671753 ubox
21 57 0.300099641 ubox
21 59 0.148910847 ubox
21 60 0.027551325 ubox
21 62 0.307981149 ubox
21 66 0.072247880 ubox
22 26 0.046260597 ubox
22 32 0.007805153 ubox
22 36 0.051912329 ubox
22 39 0.516982920 ubox
22 43 0.086227070 ubox
22 50 0.009880959 ubox
22 52 0.014204553 ubox
22 56 0.299567536 ubox
22 58 0.144663261 ubox
22 61 0.308018704 ubox
22 65 0.072721359 ubox
23 36 0.103960265 ubox
23 39 0.269620701 ubox
23 43 0.007878762 ubox
23 52 0.043095977 ubox
23 56 0.119933841 ubox
23 58 0.047614620 ubox
23 61 0.016386693 ubox
24 33 0.080684151 ubox
24 35 0.106827884 ubox
24 37 0.549909348 ubox
24 38 0.259856172 ubox
24 40 0.084447934 ubox
24 42 0.009253791 ubox
24 44 0.014044422 ubox
24 51 0.047538622 ubox
24 53 0.341456587 ubox
24 55 0.064925701 ubox
24 57 0.059348251 ubox
24 59 0.312945728 ubox
24 60 0.016263365 ubox
24 62 0.188080881 ubox
24 66 0.048459615 ubox
25 32 0.084288744 ubox
25 36 0.557081215 ubox
25 39 0.086177321 ubox
25 43 0.014070039 ubox
25 50 0.047547391 ubox
25 52 0.344915257 ubox
25 56 0.059196086 ubox
25 58 0.313349023 ubox
25 61 0.188322301 ubox
25 65 0.048241361 ubox
26 33 0.118223896 ubox
26 35 0.550911178 ubox
26 37 0.258683395 ubox
26 38 0.063184031 ubox
26 40 0.007814056 ubox
26 42 0.012826280 ubox
26 44 0.004772296 ubox
26 49 0.046824058 ubox
26 51 0.345181292 ubox
26 53 0.047445982 ubox
26 55 0.051986974 ubox
26 57 0.312672138 ubox
26 59 0.021027548 ubox
26 60 0.186266417 ubox
26 62 0.026316454 ubox
26 66 0.249519438 ubox
27 32 0.138028560 ubox
27 36 0.265244969 ubox
27 39 0.008487134 ubox
27 43 0.004919138 ubox
27 50 0.344618524 ubox
27 52 0.047647919 ubox
27 56 0.307522435 ubox
27 58 0.026275438 ubox
27 61 0.026323346 ubox
27 65 0.240463899 ubox
28 65 0.294163860 ubox
29 64 0.307442146 ubox
31 47 0.306840661 ubox
31 63 0.499418203 ubox
32 40 0.003715394 ubox
32 44 0.045593954 ubox
32 46 0.319554677 ubox
32 51 0.157336351 ubox
32 53 0.111181740 ubox
32 57 0.019463093 ubox
32 59 0.038183212 ubox
32 62 0.513242245 ubox
32 66 0.043818248 ubox
33 39 0.004375168 ubox
33 43 0.042817927 ubox
33 50 0.153698903 ubox
33 52 0.088398815 ubox
33 56 0.018943100 ubox
33 58 0.024675350 ubox
33 61 0.502550356 ubox
33 65 0.044047000 ubox
35 43 0.232546933 ubox
35 50 0.075822269 ubox
35 52 0.161209718 ubox
35 56 0.014794994 ubox
35 58 0.341373672 ubox
35 61 0.125828175 ubox
36 42 0.228294151 ubox
36 44 0.292779976 ubox
36 49 0.072072754 ubox
36 51 0.168680943 ubox
36 53 0.074750143 ubox
36 55 0.023469542 ubox
36 57 0.346538579 ubox
36 59 0.478273852 ubox
36 60 0.124279546 ubox
36 62 0.068919834 ubox
36 66 0.009377947 ubox
37 43 0.292791287 ubox
37 50 0.158589351 ubox
37 52 0.072273499 ubox
37 56 0.273692775 ubox
37 58 0.479270931 ubox
37 61 0.068728035 ubox
37 65 0.009509176 ubox
38 50 0.088771454 ubox
38 52 0.032366372 ubox
38 56 0.528295012 ubox
38 58 0.149644058 ubox
38 61 0.006670502 ubox
39 49 0.103941164 ubox
39 51 0.037854863 ubox
39 53 0.053045290 ubox
39 55 0.581512860 ubox
39 57 0.159968737 ubox
39 59 0.014344143 ubox
39 60 0.007535509 ubox
39 62 0.006782636 ubox
39 66 0.017854374 ubox
40 50 0.035462672 ubox
40 52 0.043671035 ubox
40 56 0.158950307 ubox
40 58 0.013247824 ubox
40 61 0.006630411 ubox
40 65 0.017799194 ubox
42 50 0.045699857 ubox
42 52 0.638091941 ubox
42 56 0.006843911 ubox
42 58 0.013308940 ubox
42 61 0.005353964 ubox
43 49 0.047025372 ubox
43 51 0.649351212 ubox
43 53 0.043990427 ubox
43 55 0.005814241 ubox
43 57 0.014051742 ubox
43 59 0.004232631 ubox
43 60 0.005490243 ubox
43 62 0.045012031 ubox
43 66 0.028517181 ubox
44 50 0.648592436 ubox
44 52 0.044009784 ubox
44 56 0.014028656 ubox
44 58 0.004009849 ubox
44 61 0.045043322 ubox
44 65 0.028867293 ubox
46 65 0.015554301 ubox
47 64 0.016306569 ubox
49 56 0.004722407 ubox
49 58 0.088491416 ubox
49 61 0.046410845 ubox
50 55 0.006775020 ubox
50 57 0.091977971 ubox
50 59 0.083547490 ubox
50 60 0.043880715 ubox
50 62 0.109025755 ubox
50 66 0.014500673 ubox
51 56 0.091855751 ubox
51 58 0.085925196 ubox
51 61 0.109139666 ubox
51 65 0.014591464 ubox
52 57 0.083723550 ubox
52 59 0.080142670 ubox
52 60 0.084346133 ubox
52 62 0.012306764 ubox
52 66 0.017420082 ubox
53 58 0.105202923 ubox
53 61 0.012327994 ubox
53 65 0.017696539 ubox
55 61 0.011667450 ubox
56 60 0.012992919 ubox
56 62 0.102550856 ubox
56 66 0.162503774 ubox
57 61 0.103023827 ubox
57 65 0.174117806 ubox
58 66 0.231273225 ubox
59 65 0.232760255 ubox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
showpage
end
%%EOF
