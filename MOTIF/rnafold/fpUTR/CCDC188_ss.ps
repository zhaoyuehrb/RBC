%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCCAGGUGGGCCUGAGGGAUUCAUUAGGGAGGGAGGUCUUCGUGCAGUAGGCCAGUGGGCCCAGCGGGGAGGUACUGGCCACCCUGCUGAUGCUGCCCAAGCCCAUCCUGGGCCCCACCCUCAGAACGAGCUGCAGCAGAUCCGCCUGUGCUUUGAGAGGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[130.14642334 282.46163940]
[126.06488037 268.02761841]
[121.98332214 253.59361267]
[117.90177155 239.15959167]
[114.98040009 237.12179565]
[112.91705322 233.54980469]
[112.43009186 228.87010193]
[114.01656342 223.81724548]
[110.73635101 209.18029785]
[107.45613098 194.54335022]
[104.17591858 179.90640259]
[100.89569855 165.26947021]
[97.61548615 150.63252258]
[94.33526611 135.99557495]
[71.85221100 109.79295349]
[82.97157288 84.29226685]
[75.83235931 71.10015869]
[68.69315338 57.90805435]
[61.55393982 44.71594620]
[54.41473007 31.52384186]
[47.27551651 18.33173561]
[40.13630676 5.13962889]
[23.90867043 6.04256582]
[8.96172905 -0.19080842]
[-1.73902130 -12.26893711]
[-6.09447432 -27.74618721]
[-3.28355145 -43.51795578]
[6.08255529 -56.44341660]
[-1.29780090 -69.50214386]
[-8.67815685 -82.56086731]
[-16.05851364 -95.61959839]
[-23.43886948 -108.67832184]
[-30.81922531 -121.73705292]
[-44.34519196 -129.94429016]
[-43.87136078 -144.83135986]
[-51.25171661 -157.89009094]
[-58.63207245 -170.94880676]
[-76.43672943 -180.34835815]
[-75.51473236 -199.64041138]
[-83.36982727 -212.41918945]
[-87.04287720 -197.87585449]
[-99.11361694 -188.97096252]
[-114.09317780 -189.75379944]
[-125.16995239 -199.86839294]
[-127.30704498 -214.71537781]
[-119.53266907 -227.54344177]
[-105.38202667 -232.51931763]
[-91.28943634 -227.38006592]
[-97.44079590 -241.06072998]
[-103.59215546 -254.74140930]
[-109.74351501 -268.42208862]
[-115.89487457 -282.10275269]
[-122.04623413 -295.78341675]
[-131.58209229 -307.36218262]
[-143.82972717 -316.02215576]
[-156.07736206 -324.68215942]
[-168.32499695 -333.34213257]
[-184.69573975 -334.30682373]
[-191.80279541 -349.08590698]
[-182.33503723 -362.47598267]
[-166.03207397 -360.70242310]
[-159.66500854 -345.58978271]
[-147.41737366 -336.92977905]
[-135.16973877 -328.26980591]
[-122.92209625 -319.60980225]
[-110.44049072 -327.92904663]
[-113.72071075 -342.56597900]
[-117.00092316 -357.20291138]
[-120.28114319 -371.83987427]
[-123.56135559 -386.47680664]
[-126.84157562 -401.11376953]
[-130.12179565 -415.75070190]
[-133.40200806 -430.38766479]
[-143.96987915 -442.16180420]
[-139.20306396 -456.27304077]
[-142.48327637 -470.90997314]
[-145.76348877 -485.54693604]
[-157.26237488 -497.23913574]
[-152.62590027 -512.96917725]
[-136.62365723 -516.55535889]
[-125.71740723 -504.30853271]
[-131.12654114 -488.82714844]
[-127.84632874 -474.19018555]
[-124.56610870 -459.55325317]
[-114.23287201 -448.82601929]
[-118.76506042 -433.66787720]
[-115.48484802 -419.03091431]
[-112.20462799 -404.39398193]
[-108.92441559 -389.75701904]
[-105.64419556 -375.12008667]
[-102.36398315 -360.48315430]
[-99.08376312 -345.84619141]
[-95.80354309 -331.20925903]
[-97.09449768 -311.74267578]
[-108.36556244 -301.93478394]
[-102.21420288 -288.25411987]
[-96.06284332 -274.57342529]
[-89.91148376 -260.89276123]
[-83.76012421 -247.21209717]
[-77.60876465 -233.53141785]
[-70.59103394 -220.27429199]
[-62.73594284 -207.49549866]
[-52.57863617 -206.01434326]
[-44.76319504 -199.02510071]
[-42.04916763 -188.67002869]
[-45.57334518 -178.32916260]
[-38.19298935 -165.27044678]
[-30.81263161 -152.21171570]
[-17.81455994 -144.93852234]
[-17.76049995 -129.11740112]
[-10.38014317 -116.05867767]
[-2.99978685 -102.99995422]
[4.38056946 -89.94122314]
[11.76092529 -76.88249969]
[19.14128113 -63.82377243]
[32.94324112 -65.41223907]
[46.34854126 -61.60145569]
[57.31902695 -52.93640900]
[64.17363739 -40.70271301]
[65.84595490 -26.73595428]
[62.04997635 -13.14627552]
[53.32841492 -1.99958193]
[60.46762466 11.19252396]
[67.60683441 24.38463020]
[74.74604797 37.57673645]
[81.88525391 50.76884460]
[89.02446747 63.96094894]
[96.16368103 77.15305328]
[102.96385193 74.79490662]
[110.75616455 74.59226990]
[118.82948303 76.89911652]
[126.35934448 81.83071136]
[132.48815918 89.23054504]
[136.41407776 98.66389465]
[150.55599976 103.66450500]
[166.57154846 100.13823700]
[177.43188477 112.42583466]
[171.96482849 127.88687134]
[155.79443359 130.61634827]
[145.55538940 117.80641937]
[131.41346741 112.80581665]
[125.80315399 117.78320312]
[128.81422424 132.47787476]
[114.58252716 127.73796844]
[108.97221375 132.71536255]
[112.25242615 147.35229492]
[115.53264618 161.98924255]
[118.81285858 176.62619019]
[122.09307861 191.26313782]
[125.37329102 205.90008545]
[128.65350342 220.53703308]
[132.33580017 235.07803345]
[136.41734314 249.51205444]
[140.49890137 263.94607544]
[144.58044434 278.38009644]
[159.69969177 279.46826172]
[173.53369141 285.66476440]
[184.41191101 296.22128296]
[191.02076721 309.86306763]
[192.56219482 324.94287109]
[188.85006714 339.63964844]
[180.33264160 352.17877197]
[168.03843689 361.04602051]
[153.45202637 365.17065430]
[138.33480835 364.05462646]
[124.51225281 357.83267212]
[113.65350342 347.25610352]
[107.06980133 333.60214233]
[105.55616760 318.51956177]
[109.29537964 303.82962036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[28 115]
[29 114]
[30 113]
[31 112]
[32 111]
[33 110]
[35 108]
[36 107]
[37 106]
[39 102]
[40 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 65]
[55 64]
[56 63]
[57 62]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
