%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGGCCUCCUCCUGGCGCGCCUCCGCACCGCAUUGGUGGACCGGCCCCCAGCCCGUCCAUGGGCGUUGUGGCCGCCACCGCAGGUUCCGCCUCCCGUUCCCUCCGCCCUCAACGUACGUCGCACCGCCUCUCUGUAGCCGCCCGCGGAGCAUCGCAGCCGGCCCGGGCCCCCGCCAGCCUCCCUCCUCGCGUCCCUCGGUGUCCUCCGCGGGCCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[91.92445374 141.75538635]
[73.05523682 132.90449524]
[60.65710449 116.15124512]
[45.99377441 119.31143188]
[31.33044624 122.47161865]
[16.66711617 125.63181305]
[7.00095797 141.93263245]
[-11.20009518 145.91497803]
[-26.26428032 135.50352478]
[-40.83230591 139.07740784]
[-55.40033340 142.65127563]
[-64.60132599 159.21911621]
[-82.68239594 163.71493530]
[-98.03517914 153.73394775]
[-112.49623108 157.71865845]
[-126.95729065 161.70336914]
[-141.41835022 165.68806458]
[-155.87939453 169.67277527]
[-163.31417847 174.96534729]
[-170.57331848 173.61000061]
[-185.08930969 177.38967896]
[-199.60531616 181.16934204]
[-203.31025696 184.82354736]
[-207.61511230 186.52638245]
[-211.67814636 186.37542725]
[-214.81773376 184.78738403]
[-229.48106384 187.94757080]
[-244.14439392 191.10777283]
[-256.00473022 201.57881165]
[-270.07644653 196.69654846]
[-284.73977661 199.85673523]
[-299.40310669 203.01692200]
[-303.77780151 214.06092834]
[-312.84521484 221.54814148]
[-324.28195190 223.70996094]
[-335.22888184 220.12355042]
[-343.00579834 211.78858948]
[-357.75268555 214.53256226]
[-372.49957275 217.27653503]
[-387.24645996 220.02049255]
[-401.99334717 222.76446533]
[-416.74023438 225.50843811]
[-428.89215088 235.63964844]
[-442.82003784 230.36112976]
[-457.56692505 233.10510254]
[-472.31381226 235.84906006]
[-482.54037476 248.21017456]
[-498.57760620 247.77770996]
[-508.12310791 234.88340759]
[-503.85440063 219.41868591]
[-489.04605103 213.24674988]
[-475.05776978 221.10218811]
[-460.31088257 218.35821533]
[-445.56399536 215.61424255]
[-434.46688843 205.67929077]
[-419.48419189 210.76155090]
[-404.73730469 208.01757812]
[-389.99041748 205.27360535]
[-375.24353027 202.52964783]
[-360.49664307 199.78567505]
[-345.74975586 197.04170227]
[-336.31134033 181.34953308]
[-318.08569336 177.48133850]
[-302.56329346 188.35359192]
[-287.89996338 185.19340515]
[-273.23663330 182.03321838]
[-262.42510986 171.78820801]
[-247.30458069 176.44444275]
[-232.64125061 173.28425598]
[-217.97793579 170.12405396]
[-203.38497925 166.65335083]
[-188.86898804 162.87367249]
[-174.35299683 159.09400940]
[-159.86410522 155.21171570]
[-145.40304565 151.22702026]
[-130.94200134 147.24230957]
[-116.48094177 143.25759888]
[-102.01988220 139.27290344]
[-98.67356110 128.37547302]
[-90.39913177 120.36100769]
[-79.16928864 117.30109406]
[-67.73999023 120.06644440]
[-58.97421265 128.08325195]
[-44.40618515 124.50937653]
[-29.83815956 120.93550110]
[-26.18479156 110.13713837]
[-17.68688011 102.36003876]
[-6.37493944 99.61914062]
[4.97152328 102.70681763]
[13.50692749 110.96848297]
[28.17025566 107.80829620]
[42.83358383 104.64810181]
[57.49691391 101.48791504]
[58.09045029 92.76702881]
[60.45437241 84.35168457]
[64.48883057 76.59737396]
[70.02337646 69.83166504]
[76.82423401 64.34035492]
[84.60411072 60.35541916]
[93.03435516 58.04519272]
[101.75884247 57.50726318]
[110.40903473 58.76435852]
[116.58755493 45.09593201]
[122.76607513 31.42750359]
[128.94459534 17.75907516]
[135.12310791 4.09064865]
[141.30163574 -9.57777882]
[130.82557678 -19.34695053]
[123.88806152 -31.85461426]
[121.15544128 -45.87211990]
[122.88173676 -60.02716827]
[128.88511658 -72.93816376]
[138.56694031 -83.34905243]
[150.97140503 -90.25151825]
[164.87994385 -92.98263550]
[178.93087769 -91.28852844]
[185.30220032 -104.86815643]
[191.67352295 -118.44778442]
[198.04484558 -132.02740479]
[187.77586365 -143.23529053]
[182.58235168 -157.52149963]
[183.25625610 -172.70748901]
[189.69480896 -186.47750854]
[200.91619873 -196.73173523]
[215.20922852 -201.90644836]
[230.39431763 -201.21257019]
[244.15585327 -194.75590515]
[254.39529419 -183.52104187]
[259.55120850 -169.22122192]
[258.83737183 -154.03704834]
[252.36259460 -140.28402710]
[241.11427307 -130.05937195]
[226.80767822 -124.92226410]
[211.62446594 -125.65608978]
[205.25314331 -112.07646179]
[198.88182068 -98.49683380]
[192.51051331 -84.91720581]
[203.75912476 -73.89567566]
[210.56399536 -59.66383362]
[212.08535767 -43.93536758]
[208.12086487 -28.61116600]
[199.13230896 -15.54959297]
[186.19187927 -6.34112310]
[170.85429382 -2.11467957]
[154.97006226 -3.39926004]
[148.79153442 10.26916790]
[142.61302185 23.93759537]
[136.43450928 37.60602188]
[130.25598145 51.27444839]
[124.07746887 64.94287872]
[134.55250549 75.20382690]
[140.92010498 88.41243744]
[142.42327881 102.99852753]
[138.88336182 117.22817230]
[151.31101990 125.62779236]
[163.73866272 134.02742004]
[172.59323120 136.23735046]
[176.28158569 142.63487244]
[188.58911133 151.20950317]
[200.89665222 159.78414917]
[213.20419312 168.35879517]
[225.51173401 176.93344116]
[237.81927490 185.50807190]
[250.12681580 194.08271790]
[262.43435669 202.65736389]
[274.74188232 211.23200989]
[287.10980225 219.71934509]
[299.53744507 228.11897278]
[313.33572388 221.51939392]
[328.48471069 222.70466614]
[340.92376709 231.25663757]
[347.36895752 244.79605103]
[346.17971802 259.64364624]
[358.60736084 268.04327393]
[371.03500366 276.44290161]
[383.46264648 284.84252930]
[394.85241699 274.94625854]
[408.41583252 268.33596802]
[423.22814941 265.46234131]
[438.27941895 266.52133179]
[452.54345703 271.44067383]
[465.04766846 279.88504028]
[474.93951416 291.27859497]
[481.54458618 304.84457397]
[484.41247559 319.65798950]
[483.34768677 334.70886230]
[478.42282104 348.97097778]
[469.97366333 361.47195435]
[458.57626343 371.35940552]
[445.00772095 377.95922852]
[430.19320679 380.82141113]
[415.14276123 379.75082397]
[400.88253784 374.82043457]
[388.38482666 366.36642456]
[378.50177002 354.96520996]
[371.90719604 341.39416504]
[369.05075073 326.57852173]
[370.12713623 311.52847290]
[375.06301880 297.27017212]
[362.63537598 288.87054443]
[350.20773315 280.47091675]
[337.78009033 272.07128906]
[324.44659424 278.71078491]
[309.48037720 277.77865601]
[296.90710449 269.42523193]
[290.15890503 255.81059265]
[291.13781738 240.54661560]
[278.71017456 232.14698792]
[271.41415405 231.00660706]
[266.16723633 223.53955078]
[253.85971069 214.96490479]
[241.55216980 206.39025879]
[229.24462891 197.81561279]
[216.93708801 189.24096680]
[204.62954712 180.66633606]
[192.32202148 172.09169006]
[180.01448059 163.51704407]
[167.70693970 154.94239807]
[155.33903503 146.45506287]
[142.91139221 138.05543518]
[130.48374939 129.65582275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 93]
[4 92]
[5 91]
[6 90]
[9 85]
[10 84]
[11 83]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[20 73]
[21 72]
[22 71]
[26 70]
[27 69]
[28 68]
[30 66]
[31 65]
[32 64]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[44 54]
[45 53]
[46 52]
[102 150]
[103 149]
[104 148]
[105 147]
[106 146]
[107 145]
[116 137]
[117 136]
[118 135]
[119 134]
[154 221]
[155 220]
[156 219]
[158 218]
[159 217]
[160 216]
[161 215]
[162 214]
[163 213]
[164 212]
[165 211]
[166 210]
[167 208]
[168 207]
[173 202]
[174 201]
[175 200]
[176 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
