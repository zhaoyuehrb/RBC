%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGCGCCCGCCAGCCACGCCGCGGUUCCUUCCUGCGCCUUUAUCUGCAUCCGGGUCCGUGGGAUUCGCGCUCCACUGGUCAGCUGGGGUCGCUCUCGGGUGGUUGGGUGUUGCUUGUUCCCGCUGUUCCAGCAUCGAAGAACCAUUGGGUCUGCCGGUUUGAACUUGUUCUGGAAGCUGUGCGUCACCGUA\
) } def
/len { sequence length } bind def

/coor [
[343.46441650 247.42611694]
[338.03890991 237.25971985]
[334.86636353 226.17343140]
[334.09127808 214.66040039]
[335.75143433 203.23348999]
[321.88183594 197.52087402]
[308.01220703 191.80825806]
[294.14260864 186.09564209]
[280.27301025 180.38302612]
[266.40338135 174.67041016]
[252.53378296 168.95779419]
[238.66418457 163.24517822]
[224.79457092 157.53256226]
[210.92495728 151.81994629]
[197.01025391 146.21810913]
[183.05130005 140.72738647]
[169.09236145 135.23667908]
[154.41619873 137.77818298]
[144.40603638 125.52635956]
[130.44708252 120.03564453]
[115.34599304 133.05982971]
[95.65107727 136.18756104]
[77.25800323 128.48251343]
[65.67276001 112.25123596]
[50.81035233 114.27827454]
[35.94794846 116.30532074]
[21.08554077 118.33236694]
[6.22313595 120.35940552]
[-8.63926983 122.38645172]
[-17.05666733 132.16935730]
[-29.48538208 133.54624939]
[-39.19593811 126.32081604]
[-54.08877945 128.11059570]
[-68.98162079 129.90037537]
[-76.59912109 143.28991699]
[-90.47795105 149.55342102]
[-105.20946503 146.47990417]
[-115.18694305 135.45321655]
[-130.07977295 137.24299622]
[-144.97262573 139.03277588]
[-159.86546326 140.82255554]
[-167.30523682 154.43980408]
[-181.34252930 161.05296326]
[-196.57972717 158.11912537]
[-207.15782166 146.76643372]
[-209.00929260 131.36021423]
[-201.42224121 117.82447052]
[-187.31402588 111.36398315]
[-172.10954285 114.46293640]
[-161.65524292 125.92971802]
[-146.76240540 124.13993835]
[-131.86956787 122.35015869]
[-116.97672272 120.56037140]
[-109.89592743 107.48366547]
[-96.31209564 101.00727844]
[-81.34442139 103.80408478]
[-70.77140045 115.00753784]
[-55.87856293 113.21775818]
[-40.98572159 111.42797089]
[-27.53821564 100.16036224]
[-10.66631317 107.52404785]
[4.19609261 105.49700165]
[19.05849838 103.46995544]
[33.92090225 101.44291687]
[48.78330994 99.41587067]
[63.64571381 97.38883209]
[64.37258148 92.30979919]
[65.80544281 87.38315582]
[67.91591644 82.70653534]
[70.66217804 78.37259674]
[73.98979950 74.46723938]
[77.83284760 71.06784821]
[71.35539246 57.53852081]
[64.87794495 44.00919342]
[58.29282379 30.53194809]
[51.60045242 17.10763550]
[44.90807724 3.68332410]
[38.21570587 -9.74098778]
[31.52333450 -23.16530037]
[24.72413445 -36.53582382]
[17.81854248 -49.85170746]
[3.71741128 -58.22369385]
[4.18772840 -74.61609650]
[18.74567223 -82.16581726]
[32.41527939 -73.10635376]
[31.13442802 -56.75730133]
[38.04001999 -43.44141388]
[43.91701126 -38.94568253]
[44.94764709 -29.85767174]
[51.64001846 -16.43336105]
[58.33238983 -3.00904846]
[65.02476501 10.41526318]
[71.71713257 23.83957481]
[77.52169037 28.42845535]
[78.40727234 37.53174210]
[84.88471985 51.06106949]
[91.36217499 64.59039307]
[105.67171478 63.99605560]
[119.10553741 68.96081543]
[129.58941650 78.71810913]
[135.50460815 91.76137543]
[135.93780518 106.07670593]
[149.89674377 111.56742096]
[165.57135010 109.41864014]
[174.58308411 121.27773285]
[188.54202271 126.76844788]
[202.50096130 132.25917053]
[211.64431763 132.48976135]
[216.63757324 137.95034790]
[230.50718689 143.66296387]
[244.37680054 149.37557983]
[258.24639893 155.08819580]
[272.11599731 160.80081177]
[285.98562622 166.51342773]
[299.85522461 172.22602844]
[313.72482300 177.93864441]
[327.59445190 183.65126038]
[341.46405029 189.36387634]
[353.66662598 175.01342773]
[369.99542236 165.66613770]
[388.50527954 162.41809082]
[406.99719238 165.63984680]
[423.27935791 174.93421936]
[435.42724609 189.18522644]
[442.01077271 206.69198608]
[442.26287842 225.37178040]
[456.61480713 229.73320007]
[470.96673584 234.09461975]
[488.14865112 223.70079041]
[507.14743042 229.19126892]
[515.86322021 246.60308838]
[530.40728760 250.27316284]
[544.95135498 253.94323730]
[559.49548340 257.61331177]
[574.03955078 261.28338623]
[588.58367920 264.95346069]
[603.18438721 268.39114380]
[617.83813477 271.59558105]
[627.28521729 259.65765381]
[640.92309570 253.03227234]
[656.02337646 252.98538208]
[669.59082031 259.47271729]
[678.95751953 271.15921021]
[682.30743408 285.69342041]
[696.96112061 288.89785767]
[711.61486816 292.10226440]
[726.26861572 295.30667114]
[740.92230225 298.51107788]
[745.91717529 296.91729736]
[750.55737305 297.36193848]
[754.12365723 299.36633301]
[756.19232178 302.23510742]
[770.67608643 306.13662720]
[785.24169922 299.41198730]
[799.51562500 306.73559570]
[802.54803467 322.48947144]
[792.01275635 334.58853149]
[775.99157715 333.75146484]
[766.77453613 320.62036133]
[752.29083252 316.71881104]
[737.71789551 313.16482544]
[723.06420898 309.96041870]
[708.41046143 306.75598145]
[693.75671387 303.55157471]
[679.10302734 300.34716797]
[669.99237061 312.15655518]
[656.60272217 318.86682129]
[641.56591797 319.09906006]
[627.86346436 312.75372314]
[618.23571777 301.04074097]
[614.63372803 286.24929810]
[599.97998047 283.04489136]
[595.53863525 284.82925415]
[589.92858887 283.83441162]
[584.91357422 279.49755859]
[570.36950684 275.82748413]
[555.82537842 272.15740967]
[541.28131104 268.48733521]
[526.73724365 264.81726074]
[512.19311523 261.14718628]
[505.10772705 268.60211182]
[495.48986816 272.46783447]
[485.05462646 271.98266602]
[475.69317627 267.16723633]
[469.13000488 258.83309937]
[466.60531616 248.44656372]
[452.25338745 244.08514404]
[437.90145874 239.72370911]
[432.05233765 249.56193542]
[424.26293945 257.95877075]
[414.87805176 264.53778076]
[404.31399536 269.00308228]
[393.04031372 271.15270996]
[381.55880737 270.88760376]
[370.38119507 268.21633911]
[360.00637817 263.25479126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 118]
[6 117]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[15 107]
[16 106]
[17 105]
[19 103]
[20 102]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[32 59]
[33 58]
[34 57]
[38 53]
[39 52]
[40 51]
[41 50]
[72 97]
[73 96]
[74 95]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 87]
[81 86]
[126 188]
[127 187]
[128 186]
[131 180]
[132 179]
[133 178]
[134 177]
[135 176]
[136 175]
[137 172]
[138 171]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
