%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGCUCAUUGUUGGCAGCUGCCGGGCGGUCCUGCCGAGCUGUGAGGGCAACGGAGGGGAAAUAAAAGGGAACGGCUCCGAAUCUGCCCCAGCGGCCGCUGCGAGACCUCGGCGCCGACAUCGCGACAGCGAAGCGCUUUGCACGCCAGGAAGGUCCCCUCUAUGUGCUGCUGAGCCGGUCCUGGACGCGACGAGCCCGCCCUCGGUCUUCGGAGCAGAAAUCGCAAAAACGGAAGGACUGGAA\
) } def
/len { sequence length } bind def

/coor [
[102.23613739 119.34079742]
[94.82332611 120.48107147]
[86.22402191 132.77139282]
[77.62471771 145.06170654]
[69.02541351 157.35202026]
[60.42610931 169.64234924]
[51.82680511 181.93266296]
[43.22750092 194.22299194]
[34.62819290 206.51330566]
[49.53230286 204.81991577]
[61.34159851 214.06872559]
[63.26917648 228.94436646]
[54.20723724 240.89765930]
[39.36375809 243.05894470]
[27.26942444 234.18612671]
[24.87491989 219.37861633]
[15.36362934 230.97755432]
[5.85233974 242.57649231]
[-3.65895009 254.17543030]
[-13.17023945 265.77438354]
[-22.53323746 277.49334717]
[-31.74642754 289.33044434]
[-40.95961761 301.16757202]
[-50.17280960 313.00466919]
[-55.12999344 329.21771240]
[-72.08171082 328.94247437]
[-76.50992584 312.57702637]
[-62.00991821 303.79147339]
[-52.79672623 291.95437622]
[-43.58353424 280.11724854]
[-34.37034607 268.28015137]
[-34.05718613 263.53610229]
[-30.77605820 258.93240356]
[-24.76917839 256.26309204]
[-15.25788784 244.66413879]
[-5.74659824 233.06520081]
[3.76469135 221.46626282]
[13.27598095 209.86732483]
[22.33787537 197.91400146]
[30.93717957 185.62368774]
[39.53648376 173.33335876]
[48.13578796 161.04304504]
[56.73509216 148.75271606]
[65.33439636 136.46240234]
[73.93370056 124.17208099]
[82.53300476 111.88176727]
[84.34105682 96.99112701]
[78.93289948 83.00000000]
[66.74042511 72.91763306]
[69.36859131 58.25672913]
[63.96043396 44.26559448]
[58.55227280 30.27446175]
[47.10670471 24.36159897]
[42.88322067 12.61568069]
[47.62903214 1.50512528]
[42.39926147 -12.55366135]
[37.16948700 -26.61244774]
[31.93971443 -40.67123413]
[26.70994186 -54.73002243]
[21.48016930 -68.78881073]
[16.25039673 -82.84759521]
[11.02062321 -96.90637970]
[-3.28915930 -96.47344208]
[-17.01351738 -100.47169495]
[-28.81639671 -108.49813080]
[-37.55305481 -119.75827789]
[-42.38108063 -133.14483643]
[-42.84161758 -147.34651184]
[-38.90293121 -160.97656250]
[-30.96222115 -172.70808411]
[-19.80560493 -181.40327454]
[-24.85614586 -195.52745056]
[-46.17934418 -198.40927124]
[-61.47031021 -217.11346436]
[-59.80218506 -243.86880493]
[-69.16518402 -255.58776855]
[-78.52818298 -267.30673218]
[-87.89118195 -279.02572632]
[-102.55012512 -284.97769165]
[-104.44960785 -299.75067139]
[-113.81259918 -311.46963501]
[-123.17559814 -323.18862915]
[-132.53860474 -334.90759277]
[-149.84388733 -341.23300171]
[-151.77066040 -358.68603516]
[-161.28193665 -370.28497314]
[-170.79322815 -381.88391113]
[-182.59706116 -380.72869873]
[-193.38674927 -385.35714722]
[-200.53712463 -394.51766968]
[-202.36926270 -405.87188721]
[-198.54353333 -416.59100342]
[-207.75671387 -428.42810059]
[-216.96990967 -440.26519775]
[-226.18310547 -452.10232544]
[-241.57215881 -457.76879883]
[-244.09234619 -473.97314453]
[-231.15110779 -484.04571533]
[-216.06129456 -477.62469482]
[-214.34599304 -461.31549072]
[-205.13279724 -449.47839355]
[-195.91961670 -437.64129639]
[-186.70642090 -425.80416870]
[-168.42152405 -424.62017822]
[-156.62489319 -410.18371582]
[-159.19429016 -391.39520264]
[-149.68299866 -379.79626465]
[-140.17172241 -368.19732666]
[-128.18302917 -366.70120239]
[-120.16297913 -357.13650513]
[-120.81962585 -344.27056885]
[-111.45662689 -332.55160522]
[-102.09363556 -320.83264160]
[-92.73063660 -309.11367798]
[-78.74139404 -303.99993896]
[-76.17221069 -288.38870239]
[-66.80921173 -276.66973877]
[-57.44621277 -264.95077515]
[-48.08321381 -253.23179626]
[-40.72849274 -254.70082092]
[-48.06804657 -267.78253174]
[-37.89451981 -278.80520630]
[-24.26762009 -272.53561401]
[-26.01904297 -257.63888550]
[-18.66431808 -259.10791016]
[-14.52160835 -273.52447510]
[-10.37889767 -287.94107056]
[-6.23618746 -302.35766602]
[-6.87458420 -311.44543457]
[-1.94802308 -316.93063354]
[2.37771201 -331.29336548]
[6.70344687 -345.65609741]
[11.02918243 -360.01882935]
[9.80744553 -376.92868042]
[25.71825981 -382.78381348]
[35.74909973 -369.11563110]
[25.39191246 -355.69308472]
[21.06617737 -341.33035278]
[16.74044228 -326.96762085]
[12.41470718 -312.60488892]
[8.18039894 -298.21493530]
[4.03768826 -283.79837036]
[-0.10502240 -269.38177490]
[-4.24773312 -254.96519470]
[5.32469606 -239.79527283]
[6.55600882 -223.20771790]
[0.34967035 -209.18844604]
[-10.73198032 -200.57798767]
[-5.68143940 -186.45382690]
[10.07354164 -186.56101990]
[24.93665695 -181.25387573]
[37.10193253 -171.15771484]
[45.08451462 -157.48091125]
[47.90188217 -141.87033081]
[45.19477081 -126.21298981]
[37.27284241 -112.40799713]
[25.07941055 -102.13615417]
[30.30918312 -88.07736969]
[35.53895569 -74.01857758]
[40.76873016 -59.95979309]
[45.99850082 -45.90100861]
[51.22827530 -31.84222031]
[56.45804596 -17.78343391]
[61.68782043 -3.72464752]
[75.79499054 6.73039246]
[72.54341125 24.86630249]
[77.95156860 38.85743713]
[83.35972595 52.84857178]
[95.16537476 61.93019867]
[92.92403412 77.59183502]
[98.33219147 91.58296967]
[100.89832306 87.84222412]
[105.31597900 85.11991119]
[111.15975952 84.11722565]
[117.77091217 85.36473846]
[124.32196045 89.15103912]
[129.90164185 95.47464752]
[133.61230469 104.02452850]
[145.50776672 113.16225433]
[157.40322876 122.29998016]
[169.29867554 131.43771362]
[181.19413757 140.57543945]
[193.08959961 149.71316528]
[204.98506165 158.85089111]
[216.88052368 167.98861694]
[227.95617676 160.41627502]
[242.22138977 158.34141541]
[256.90542603 163.03384399]
[268.78491211 174.36538696]
[274.88143921 190.68385315]
[288.20733643 197.57008362]
[303.09942627 193.00245667]
[316.51568604 200.17591858]
[320.77844238 214.40141296]
[334.10437012 221.28765869]
[347.47378540 228.08900452]
[360.88619995 234.80520630]
[376.69012451 234.06579590]
[384.60598755 246.68276978]
[398.01840210 253.39897156]
[411.43081665 260.11517334]
[427.76007080 258.60275269]
[437.01232910 272.14260864]
[429.66967773 286.80609131]
[413.28558350 287.50866699]
[404.71459961 273.52758789]
[391.30221558 266.81137085]
[377.88980103 260.09518433]
[363.04522705 261.31497192]
[354.16998291 248.21762085]
[340.75759888 241.50141907]
[333.38708496 241.31723022]
[327.21810913 234.61355591]
[313.89221191 227.72731018]
[299.82266235 232.47946167]
[286.21020508 225.68566895]
[281.32110596 210.89599609]
[267.99520874 204.00975037]
[262.60824585 209.22807312]
[273.04489136 220.00195312]
[283.48135376 230.77600098]
[272.70715332 241.21231079]
[262.27099609 230.43858337]
[251.83436584 219.66470337]
[246.44741821 224.88302612]
[252.90652466 238.42111206]
[267.88662720 243.45819092]
[274.84249878 257.64944458]
[269.64730835 272.57543945]
[255.38331604 279.38088989]
[240.51307678 274.02819824]
[233.85882568 259.69305420]
[239.36842346 244.88021851]
[232.90933228 231.34211731]
[211.45289612 219.39805603]
[202.71807861 199.02288818]
[207.74279785 179.88407898]
[195.84733582 170.74635315]
[183.95187378 161.60862732]
[172.05641174 152.47088623]
[160.16094971 143.33316040]
[148.26548767 134.19543457]
[136.37004089 125.05771637]
[124.47457886 115.91998291]
[117.06176758 117.06025696]
[119.34205627 131.88592529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 46]
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 31]
[22 30]
[23 29]
[24 28]
[47 171]
[48 170]
[50 168]
[51 167]
[52 166]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[71 149]
[72 148]
[75 119]
[76 118]
[77 117]
[78 116]
[80 114]
[81 113]
[82 112]
[83 111]
[85 108]
[86 107]
[87 106]
[92 103]
[93 102]
[94 101]
[95 100]
[125 144]
[126 143]
[127 142]
[128 141]
[130 140]
[131 139]
[132 138]
[133 137]
[178 244]
[179 243]
[180 242]
[181 241]
[182 240]
[183 239]
[184 238]
[185 237]
[190 218]
[191 217]
[194 214]
[195 213]
[196 211]
[197 210]
[199 208]
[200 207]
[201 206]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
