%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGUGAGGUACUGUGGGUAGGAGACGGCCGUCGGCGGAGGCGCCAUUUUGUGUAGCCGCCGAACCUUGUUGGAGGUUCUGGGGCGCAGAACCGCUACUGCUGCUUCGGUCUCUCCUUGGGAAAAAAUAAAAUUUGAACCUUUUGGAGCUGUGUGCUAAAUCUUCAGUGGGACA\
) } def
/len { sequence length } bind def

/coor [
[59.43717194 353.33911133]
[43.65553665 352.49319458]
[33.15668869 340.68008423]
[34.16940689 324.90826416]
[46.09286499 314.53491211]
[46.89572906 299.55639648]
[37.58558273 292.89685059]
[32.60815430 282.45574951]
[33.31104660 270.79000854]
[39.63470459 260.81924438]
[50.09838104 255.09506226]
[51.43534851 240.15476990]
[52.77231979 225.21446228]
[54.10929108 210.27416992]
[55.44626236 195.33387756]
[48.87415695 181.96762085]
[57.81068802 168.91201782]
[59.14765930 153.97171021]
[60.48463058 139.03141785]
[61.82159805 124.09111786]
[57.59561157 109.69872284]
[48.39354324 97.85296631]
[39.19147873 86.00720215]
[29.98941231 74.16144562]
[20.78734589 62.31568909]
[11.58528042 50.46993256]
[3.82310748 45.59215927]
[2.32694221 38.32961655]
[-6.66222286 26.32149887]
[-15.65138817 14.31338024]
[-24.64055252 2.30526161]
[-33.62971878 -9.70285702]
[-52.49140549 -16.75590515]
[-54.02939224 -36.01197815]
[-63.44142532 -47.69160080]
[-72.85346222 -59.37122726]
[-82.26549530 -71.05084991]
[-91.67752838 -82.73046875]
[-101.08956909 -94.41009521]
[-115.77333069 -100.30056763]
[-117.73471832 -115.06546783]
[-127.14675140 -126.74508667]
[-136.55879211 -138.42471313]
[-145.97082520 -150.10433960]
[-156.87512207 -150.64535522]
[-165.49349976 -156.98294067]
[-169.10807800 -166.81745911]
[-166.74623108 -176.79962158]
[-175.73539734 -188.80773926]
[-184.72456360 -200.81585693]
[-193.71372986 -212.82397461]
[-202.70289612 -224.83209229]
[-211.69206238 -236.84022522]
[-216.55200195 -238.91574097]
[-219.78695679 -242.31921387]
[-221.16275024 -246.20031738]
[-220.82044983 -249.74029541]
[-229.15400696 -262.21234131]
[-237.48756409 -274.68438721]
[-244.88197327 -280.10348511]
[-245.85623169 -287.45425415]
[-253.96583557 -300.07305908]
[-262.18774414 -312.61898804]
[-270.52130127 -325.09103394]
[-278.85485840 -337.56307983]
[-287.18841553 -350.03512573]
[-295.52197266 -362.50714111]
[-303.85552979 -374.97918701]
[-312.18905640 -387.45123291]
[-327.12832642 -394.21517944]
[-328.47073364 -410.55926514]
[-314.83535767 -419.67016602]
[-300.24908447 -412.17532349]
[-299.71701050 -395.78479004]
[-291.38348389 -383.31274414]
[-283.04992676 -370.84069824]
[-274.71636963 -358.36865234]
[-266.38281250 -345.89660645]
[-258.04925537 -333.42459106]
[-249.71569824 -320.95254517]
[-243.36460876 -317.12545776]
[-241.34703064 -308.18267822]
[-233.23742676 -295.56387329]
[-225.01551819 -283.01794434]
[-216.68196106 -270.54589844]
[-208.34840393 -258.07385254]
[-199.68394470 -245.82937622]
[-190.69477844 -233.82125854]
[-181.70561218 -221.81314087]
[-172.71644592 -209.80502319]
[-163.72727966 -197.79690552]
[-154.73811340 -185.78878784]
[-136.46054077 -179.53642273]
[-134.29119873 -159.51637268]
[-124.87916565 -147.83674622]
[-115.46712494 -136.15711975]
[-106.05509186 -124.47750092]
[-92.04454041 -119.42243195]
[-89.40994263 -103.82212830]
[-79.99790955 -92.14250946]
[-70.58587646 -80.46288300]
[-61.17383957 -68.78326416]
[-51.76180267 -57.10363770]
[-42.34976578 -45.42401505]
[-32.09358215 -45.24383926]
[-23.45845413 -39.30939102]
[-19.44911194 -29.39140129]
[-21.62159920 -18.69202232]
[-12.63243389 -6.68390322]
[-3.64326930 5.32421541]
[5.34589577 17.33233452]
[14.33506107 29.34045219]
[23.43103790 41.26786423]
[32.63310623 53.11362457]
[41.83517075 64.95938110]
[51.03723526 76.80513763]
[60.23930359 88.65089417]
[69.44136810 100.49665833]
[67.04495239 85.68931580]
[64.64854431 70.88198090]
[57.37651825 57.76261902]
[53.56387329 43.25525284]
[53.44604111 28.25571442]
[57.03029251 13.69023705]
[64.09530640 0.45824441]
[74.20480347 -10.62318134]
[86.73452759 -18.86975861]
[100.91075897 -23.77225494]
[115.85810852 -25.02794075]
[130.65356445 -22.55927658]
[144.38351440 -16.51870346]
[156.20011902 -7.27922869]
[165.37370300 4.58860493]
[171.33778381 18.35195351]
[173.72407532 33.16092300]
[172.38523865 48.10105515]
[167.40393066 62.24978638]
[159.08563232 74.73589325]
[144.14559937 76.07586670]
[129.20556641 77.41584778]
[142.95910645 83.40253448]
[159.18365479 81.01593781]
[169.14926147 94.03971863]
[162.60414124 109.07612610]
[146.28137207 110.65699768]
[136.97241211 97.15606689]
[123.21887970 91.16937256]
[114.99697113 103.71529388]
[125.97538757 113.93656921]
[136.95381165 124.15783691]
[152.97343445 125.02448273]
[162.16622925 138.17256165]
[157.48025513 153.51600647]
[142.51019287 159.28463745]
[128.73980713 151.05323792]
[126.73253632 135.13624573]
[115.75411987 124.91498566]
[104.77570343 114.69371796]
[97.77224731 117.37730408]
[83.76535034 122.74449158]
[76.76189423 125.42808533]
[75.42492676 140.36837769]
[74.08795929 155.30868530]
[72.75098419 170.24897766]
[79.22746277 184.68386841]
[70.38655853 196.67083740]
[69.04959106 211.61114502]
[67.71261597 226.55143738]
[66.37564850 241.49174500]
[65.03868103 256.43203735]
[77.73211670 270.46185303]
[76.19987488 288.99990845]
[61.87422562 300.35925293]
[61.07136154 315.33776855]
[71.81764221 326.92623901]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[17 164]
[18 163]
[19 162]
[20 161]
[21 118]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[41 97]
[42 96]
[43 95]
[44 94]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[57 86]
[58 85]
[59 84]
[61 83]
[62 82]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[140 147]
[141 146]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
