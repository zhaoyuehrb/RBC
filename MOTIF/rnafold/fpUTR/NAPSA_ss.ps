%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGCACAGGAUGCUACUUCUGCCAACCCUACAAAAAUACUCUGCACAAAUCUUCAAAAAACAUCCUUGUCCCACUGCGUCACCUGCGGACAGAUUUCAUGUCCUGGUCUCCUUCUAAACCUGGAGGUGGGGCAUGAACAGGGUGGAGUCACAGGGGAAAGAAAAUGAGGCCCCAGGACACCUGGGUUCACACCCAGGUCCCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[72.02190399 120.03279877]
[66.54179382 133.99589539]
[61.06167603 147.95901489]
[55.58156204 161.92211914]
[50.10144424 175.88522339]
[44.62133026 189.84832764]
[49.54023361 199.55061340]
[48.33188248 210.14025879]
[41.63518524 218.14791870]
[31.84685135 221.08404541]
[25.95147514 234.87695312]
[28.44558716 251.08534241]
[15.48816490 261.13705444]
[0.40869379 254.69178772]
[-1.28035927 238.37985229]
[12.15855885 228.98158264]
[18.05393410 215.18867493]
[14.34646797 196.21173096]
[30.65822411 184.36820984]
[36.13834000 170.40510559]
[41.61845398 156.44200134]
[47.09856796 142.47889709]
[52.57868576 128.51579285]
[58.05879974 114.55268097]
[56.71421051 99.61306763]
[48.82895279 86.85286713]
[40.94369888 74.09266663]
[33.76976776 68.43695831]
[33.03757477 61.08207321]
[25.34408760 48.20534134]
[17.65059853 35.32860947]
[9.95710850 22.45187759]
[15.92525101 36.21346283]
[19.57830811 50.76183701]
[20.81921005 65.71041870]
[19.61498451 80.66200256]
[15.99763203 95.21929932]
[10.06326962 108.99548340]
[1.96958470 121.62451172]
[-8.06835842 132.77079773]
[-19.78383446 142.13816833]
[-32.86553955 149.47770691]
[-46.96587372 154.59440613]
[-61.71016312 157.35231018]
[-76.70662689 157.67810059]
[-91.55677795 155.56315613]
[-105.86602020 151.06365967]
[-119.25414276 144.29916382]
[-131.36538696 135.44943237]
[-141.87792969 124.74961090]
[-150.51246643 112.48400879]
[-157.03952026 98.97855377]
[-161.28567505 84.59209442]
[-163.13810730 69.70691681]
[-162.54759216 54.71854401]
[-159.52981567 40.02524567]
[-154.16496277 26.01744843]
[-146.59559631 13.06736469]
[-137.02284241 1.51910007]
[-125.70107269 -8.32048607]
[-112.93112183 -16.18993759]
[-99.05230713 -21.88014984]
[-84.43341827 -25.23992538]
[-69.46290588 -26.17998505]
[-54.53855896 -24.67535210]
[-40.05694962 -20.76600647]
[-26.40287590 -14.55582809]
[-13.93915558 -6.20983124]
[-2.99427533 4.05319071]
[-12.52101231 -7.53306389]
[-22.04774857 -19.11931801]
[-31.57448578 -30.70557213]
[-41.10122299 -42.29182816]
[-50.62795639 -53.87808228]
[-54.74665070 -55.25850296]
[-57.89483261 -57.63867569]
[-59.87734604 -60.59058380]
[-60.65814590 -63.66680527]
[-60.35282135 -66.45410156]
[-69.16960144 -78.58936310]
[-77.98638153 -90.72461700]
[-93.54321289 -94.64437103]
[-100.04669952 -109.31011963]
[-92.50791931 -123.47155762]
[-76.70997620 -126.26524353]
[-64.77170563 -115.54809570]
[-65.85112762 -99.54139709]
[-57.03434753 -87.40613556]
[-48.21756744 -75.27088165]
[-39.04170227 -63.40481949]
[-29.51496696 -51.81856537]
[-19.98822975 -40.23230743]
[-10.46149445 -28.64605522]
[-0.93475747 -17.05980110]
[8.59197903 -5.47354603]
[16.02410316 -6.48029566]
[30.88834953 -8.49379444]
[38.32047272 -9.50054359]
[44.42152023 -23.20372581]
[50.52257156 -36.90690613]
[56.62361908 -50.61008835]
[62.72467041 -64.31327057]
[68.82572174 -78.01645660]
[74.92677307 -91.71963501]
[81.02781677 -105.42281342]
[87.12886810 -119.12599945]
[93.22991943 -132.82917786]
[99.33097076 -146.53236389]
[95.44568634 -158.83197021]
[100.80997467 -170.12005615]
[112.05526733 -174.57893372]
[118.36062622 -188.18931580]
[124.66598511 -201.79969788]
[130.97134399 -215.41007996]
[122.06501007 -227.92298889]
[120.62432861 -243.21415710]
[127.03683472 -257.17034912]
[139.57760620 -266.03741455]
[154.87321472 -267.43014526]
[168.80923462 -260.97393799]
[177.63694763 -248.40544128]
[178.98175049 -233.10554504]
[172.48187256 -219.18981934]
[159.88577271 -210.40155029]
[144.58172607 -209.10472107]
[138.27636719 -195.49433899]
[131.97100830 -181.88395691]
[125.66564941 -168.27357483]
[128.17858887 -150.90577698]
[113.03414917 -140.43132019]
[106.93309784 -126.72813416]
[100.83205414 -113.02494812]
[94.73100281 -99.32176971]
[88.62995148 -85.61858368]
[82.52890015 -71.91540527]
[76.42784882 -58.21222305]
[70.32680511 -44.50904083]
[64.22575378 -30.80585861]
[58.12470245 -17.10267639]
[52.02365494 -3.39949441]
[38.65911484 11.14023972]
[22.83384132 14.75838757]
[30.52733040 27.63512039]
[38.22081757 40.51185226]
[45.91430664 53.38858414]
[53.70389938 66.20740509]
[61.58915710 78.96760559]
[69.47441101 91.72781372]
[66.05500031 77.12275696]
[69.00234222 62.41516876]
[77.78532410 50.25542831]
[90.82119751 42.83477783]
[105.76083374 41.49046326]
[119.91204071 46.46472931]
[130.72470093 56.86119080]
[136.24974060 70.80290985]
[150.76725769 74.57670593]
[165.28479004 78.35050964]
[179.80230713 82.12431335]
[189.26435852 70.19159698]
[202.76483154 63.14484024]
[217.96472168 62.20492554]
[232.23052979 67.53470612]
[243.09063721 78.21075439]
[248.66343689 92.38339233]
[247.98344421 107.59712219]
[241.16844177 121.21606445]
[229.39918518 130.88066101]
[214.71476746 134.91647339]
[199.65934753 132.62425232]
[186.84136963 124.40115356]
[178.48162842 111.67186737]
[176.02850342 96.64183044]
[161.51098633 92.86802673]
[146.99346924 89.09423065]
[132.47593689 85.32042694]
[128.02229309 91.35491180]
[114.66133881 109.45835876]
[122.54659271 122.21855927]
[137.66687012 125.96219635]
[145.48187256 139.01518250]
[141.81970215 153.40699768]
[149.70495605 166.16719055]
[157.59022522 178.92739868]
[165.47547913 191.68759155]
[173.36073303 204.44779968]
[181.24598694 217.20799255]
[189.13124084 229.96820068]
[197.01649475 242.72839355]
[211.70605469 250.01873779]
[212.46704102 266.40020752]
[198.51661682 275.02099609]
[184.20578003 267.01272583]
[184.25630188 250.61366272]
[176.37104797 237.85345459]
[168.48579407 225.09326172]
[160.60052490 212.33305359]
[152.71527100 199.57284546]
[144.83001709 186.81265259]
[136.94476318 174.05244446]
[129.05950928 161.29225159]
[114.54965973 158.12995911]
[106.37111664 145.30163574]
[109.78639221 130.10382080]
[101.90113831 117.34362030]
[94.43132782 118.01591492]
[100.32653046 131.80889893]
[89.03021240 141.67770386]
[76.15377045 133.98373413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[10 17]
[11 16]
[25 148]
[26 147]
[27 146]
[29 145]
[30 144]
[31 143]
[32 142]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[79 89]
[80 88]
[81 87]
[98 140]
[99 139]
[100 138]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[107 131]
[108 130]
[111 128]
[112 127]
[113 126]
[114 125]
[156 176]
[157 175]
[158 174]
[159 173]
[178 205]
[179 204]
[182 201]
[183 200]
[184 199]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
