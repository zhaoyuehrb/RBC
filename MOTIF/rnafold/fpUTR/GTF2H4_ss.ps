%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCCACUCCUCCCCUUACCUCCCUUCUCUUCUGAAUUCUCCAUUCUGGGCUCUUGCCUGUGAAAUCUUUCUUUGCUUUCCCCAUCUUUUCCUCGCAUUUUUUCACCAUCUUUCCCUCAAUCUCCAGGAGCCAAUGCGAGACUUUGGCUCCGAUUAAGCGACGGCCCGAGACUCGGGGUGCGCGAGGAGGAUCGACAGAGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[97.58111572 423.56503296]
[82.07996368 422.86215210]
[69.97343445 413.15588379]
[65.91673279 398.17849731]
[71.46973419 383.68905640]
[84.49720764 375.25906372]
[85.17665100 360.27447510]
[85.85608673 345.28985596]
[86.53553009 330.30526733]
[87.21496582 315.32064819]
[87.89440155 300.33605957]
[78.98908234 285.21563721]
[89.03472137 269.78427124]
[89.48777008 254.79112244]
[79.10729218 238.47914124]
[89.96533966 221.49668884]
[89.96533966 206.49668884]
[89.96533966 191.49668884]
[87.27996826 187.54470825]
[87.05030060 181.86334229]
[90.19873047 176.04534912]
[90.65177155 161.05220032]
[91.10482025 146.05903625]
[91.55786133 131.06588745]
[84.99760437 127.43091583]
[71.87709045 120.16097260]
[65.31683350 116.52600098]
[52.84478760 124.85955811]
[40.37274551 133.19311523]
[37.53568649 148.74066162]
[24.48846626 157.65950012]
[8.97176933 154.65821838]
[0.19137673 141.51744080]
[3.35653949 126.03334045]
[16.58942223 117.39237213]
[32.03919220 120.72106171]
[44.51123428 112.38751221]
[56.98328018 104.05395508]
[55.18841171 96.77189636]
[40.62428665 100.36162567]
[26.06015778 103.95136261]
[11.49602985 107.54109955]
[-1.24608743 115.45554352]
[-12.71058178 105.78262329]
[-7.05363941 91.89021301]
[7.90629530 92.97697449]
[22.47042274 89.38723755]
[37.03454971 85.79750061]
[51.59867859 82.20776367]
[49.80381012 74.92570496]
[34.88756943 73.34275818]
[19.97132492 71.75981140]
[5.05508327 70.17686462]
[-9.70524979 77.32280731]
[-23.12018394 67.89033508]
[-21.38958549 51.58275986]
[-6.29374504 45.17591476]
[6.63803053 55.26062012]
[21.55427361 56.84356689]
[36.47051620 58.42651367]
[51.38675690 60.00946045]
[59.24354172 47.23170853]
[51.09930801 34.63522339]
[42.95507431 22.03874016]
[34.81084061 9.44225407]
[26.66660500 -3.15423083]
[18.52236938 -15.75071621]
[8.78061295 -13.98155308]
[-1.01326191 -15.21772861]
[-9.95624256 -19.32738686]
[-17.22914886 -25.91455841]
[-22.17166328 -34.35725403]
[-24.34226608 -43.86616135]
[-23.55762100 -53.55844116]
[-19.90793610 -62.53966904]
[-13.74698067 -69.98640442]
[-20.91763115 -83.16144562]
[-28.08828354 -96.33648682]
[-42.95678711 -93.54673004]
[-57.95939636 -95.49013519]
[-71.62631226 -101.97631836]
[-82.61859131 -112.36982727]
[-89.85931396 -125.65242004]
[-92.63911438 -140.52278137]
[-90.68565369 -155.52409363]
[-84.19030762 -169.18666077]
[-73.78943634 -180.17196655]
[-60.50200272 -187.40379333]
[-45.62977219 -190.17362976]
[-30.62977982 -188.21011353]
[-16.97156715 -181.70561218]
[-5.99323130 -171.29737854]
[1.22968566 -158.00511169]
[3.98955441 -143.13102722]
[2.01599169 -128.13235474]
[-4.49765348 -114.47850037]
[-14.91323948 -103.50714111]
[-7.74258852 -90.33209991]
[-0.57193726 -77.15705109]
[19.70704460 -76.05393219]
[35.30322647 -62.82931519]
[39.76686478 -42.73146820]
[31.11885452 -23.89495087]
[39.26308823 -11.29846573]
[47.40732574 1.29801965]
[55.55155945 13.89450455]
[63.69579315 26.49098969]
[71.84002686 39.08747482]
[70.73186493 24.12846565]
[69.62370300 9.16945553]
[66.76100922 -5.55484343]
[68.04212189 -20.50003433]
[73.36900330 -34.52231598]
[82.33396149 -46.54851532]
[94.25088501 -55.65823746]
[108.20773315 -61.15427780]
[123.13633728 -62.61600876]
[137.89418030 -59.93156052]
[151.35177612 -53.30638504]
[162.47918701 -43.24752808]
[170.42480469 -30.52481842]
[174.58050537 -16.11197281]
[174.62825012 -1.11204875]
[170.56439209 13.32696152]
[162.69993591 26.09999466]
[151.63677979 36.22949219]
[138.21839905 42.94129562]
[129.53118896 55.16964340]
[120.84398651 67.39798737]
[134.33030701 60.83147430]
[147.81663513 54.26495743]
[161.30294800 47.69844437]
[174.78927612 41.13192749]
[188.27560425 34.56541061]
[201.76191711 27.99889755]
[215.24824524 21.43238068]
[216.96359253 6.10067749]
[226.71330261 -5.85535717]
[241.38626099 -10.62059689]
[256.30041504 -6.67446995]
[266.69668579 4.72382832]
[269.25765991 19.93714333]
[263.16613770 34.11095810]
[250.36593628 42.72246552]
[234.94151306 43.02376175]
[221.81475830 34.91870117]
[208.32843018 41.48521805]
[194.84211731 48.05173492]
[181.35578918 54.61824799]
[167.86947632 61.18476486]
[154.38314819 67.75128174]
[140.89682007 74.31779480]
[127.41050720 80.88431549]
[127.24060059 88.38238525]
[142.23675537 88.72219086]
[157.23289490 89.06223297]
[156.89262390 104.05837250]
[141.89694214 103.71834564]
[126.90079498 103.37854004]
[126.73089600 110.87660980]
[139.90592957 118.04726410]
[153.08097839 125.21791840]
[162.11688232 126.57224274]
[166.39965820 132.59765625]
[179.46490479 139.96647644]
[195.28605652 140.00656128]
[202.57072449 152.99821472]
[215.63597107 160.36703491]
[228.70121765 167.73585510]
[241.76644897 175.10466003]
[254.83169556 182.47348022]
[271.59811401 184.98806763]
[273.82321167 201.79537964]
[258.28872681 208.58622742]
[247.46287537 195.53872681]
[234.39762878 188.16990662]
[221.33239746 180.80108643]
[208.26715088 173.43226624]
[195.20191956 166.06344604]
[180.31527710 166.55043030]
[172.09608459 153.03172302]
[159.03083801 145.66290283]
[145.91032410 138.39295959]
[132.73529053 131.22230530]
[119.56024170 124.05165863]
[106.55101776 131.51893616]
[106.09797668 146.51208496]
[105.64492798 161.50524902]
[105.19188690 176.49839783]
[104.96533966 191.49668884]
[104.96533966 206.49668884]
[104.96533966 221.49668884]
[113.09023285 228.73265076]
[115.83374786 239.03388977]
[112.52310181 248.93583679]
[104.48092651 255.24415588]
[104.02787781 270.23730469]
[112.28491211 280.14810181]
[111.59754181 292.62805176]
[102.87900543 301.01550293]
[102.19956970 316.00009155]
[101.52013397 330.98471069]
[100.84069061 345.96929932]
[100.16125488 360.95391846]
[99.48181152 375.93850708]
[111.69292450 385.51287842]
[115.91187286 400.44540405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[13 197]
[14 196]
[16 192]
[17 191]
[18 190]
[21 189]
[22 188]
[23 187]
[24 186]
[27 38]
[28 37]
[29 36]
[50 61]
[51 60]
[52 59]
[53 58]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[76 99]
[77 98]
[78 97]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
[160 185]
[161 184]
[162 183]
[164 182]
[165 181]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
