%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM83E)
} def

/sequence { (\
CAGAGACAGCCAGACCCCCGGGGACCCAGCCUCUCACAGUCAGUCCUCCCACCCGAGUGACCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 34 0.193696739 ubox
2 47 0.012812478 ubox
3 33 0.207072605 ubox
3 35 0.934739244 ubox
3 41 0.007686241 ubox
3 46 0.013704268 ubox
3 48 0.030868551 ubox
4 32 0.207089776 ubox
4 34 0.935745823 ubox
4 40 0.007436823 ubox
4 47 0.030928108 ubox
5 31 0.206643948 ubox
5 33 0.935822353 ubox
5 35 0.029321282 ubox
5 41 0.064235453 ubox
5 45 0.021279106 ubox
5 46 0.028117459 ubox
5 48 0.006394133 ubox
6 32 0.916237680 ubox
6 34 0.028853653 ubox
6 40 0.064294993 ubox
6 44 0.024834217 ubox
6 47 0.006342032 ubox
7 39 0.064104198 ubox
7 43 0.024769519 ubox
8 32 0.044378068 ubox
8 34 0.004542653 ubox
9 30 0.886366215 ubox
9 31 0.051686091 ubox
9 33 0.004105116 ubox
9 40 0.005944076 ubox
9 44 0.025485220 ubox
10 21 0.039575116 ubox
10 22 0.011011852 ubox
10 23 0.015035231 ubox
10 29 0.887191478 ubox
10 39 0.006123628 ubox
10 43 0.025759180 ubox
11 20 0.040327064 ubox
11 21 0.011117726 ubox
11 22 0.015143492 ubox
11 59 0.005028665 ubox
12 34 0.050877322 ubox
12 58 0.004967613 ubox
13 31 0.003465087 ubox
13 33 0.052653761 ubox
13 35 0.031835910 ubox
13 41 0.232188163 ubox
14 32 0.051093843 ubox
14 34 0.031734298 ubox
14 40 0.232416393 ubox
15 21 0.054384488 ubox
15 22 0.156678762 ubox
15 23 0.925077404 ubox
15 39 0.231726054 ubox
16 20 0.054192755 ubox
16 21 0.156244212 ubox
16 22 0.926638436 ubox
16 23 0.170443709 ubox
17 21 0.919920093 ubox
17 22 0.170173825 ubox
17 23 0.050934313 ubox
18 22 0.050815193 ubox
19 55 0.004966604 ubox
19 65 0.098638001 ubox
20 26 0.014668500 ubox
20 27 0.033480544 ubox
20 31 0.035605730 ubox
20 32 0.032042534 ubox
20 33 0.229899552 ubox
20 34 0.071963811 ubox
20 35 0.037210526 ubox
20 48 0.030233624 ubox
20 49 0.016178568 ubox
20 54 0.004970717 ubox
20 63 0.003842610 ubox
20 64 0.105404618 ubox
21 25 0.014467204 ubox
21 26 0.033423838 ubox
21 27 0.013208026 ubox
21 30 0.035609393 ubox
21 31 0.039652407 ubox
21 32 0.232065015 ubox
21 33 0.075413283 ubox
21 34 0.034982497 ubox
21 35 0.035996135 ubox
21 47 0.030576328 ubox
21 48 0.016156423 ubox
21 53 0.004898717 ubox
21 62 0.003851622 ubox
21 63 0.105375562 ubox
21 64 0.013637569 ubox
22 26 0.013090998 ubox
22 30 0.039841049 ubox
22 31 0.239762875 ubox
22 32 0.061201496 ubox
22 33 0.034839179 ubox
22 34 0.036387988 ubox
22 46 0.034977155 ubox
22 52 0.004138625 ubox
22 62 0.104883247 ubox
22 63 0.013782248 ubox
23 30 0.239296392 ubox
23 31 0.062028235 ubox
23 32 0.032106095 ubox
23 33 0.038889399 ubox
23 35 0.013692998 ubox
23 41 0.069749489 ubox
23 45 0.035429988 ubox
23 61 0.067690427 ubox
23 62 0.013717877 ubox
24 32 0.037359460 ubox
24 34 0.012960481 ubox
24 40 0.069968405 ubox
24 44 0.035700814 ubox
25 39 0.069804055 ubox
25 43 0.035655360 ubox
27 59 0.019774869 ubox
28 34 0.024283260 ubox
28 58 0.018583383 ubox
29 33 0.024701435 ubox
29 40 0.037006095 ubox
29 44 0.004844545 ubox
29 58 0.007270820 ubox
30 39 0.037977043 ubox
30 43 0.005202369 ubox
30 57 0.006092346 ubox
31 39 0.017563885 ubox
31 43 0.005800530 ubox
31 57 0.016305349 ubox
32 38 0.017516982 ubox
32 42 0.005611329 ubox
32 56 0.017286149 ubox
33 39 0.011476593 ubox
33 43 0.005322229 ubox
33 55 0.017275956 ubox
33 57 0.010191440 ubox
34 38 0.010823813 ubox
34 42 0.005349342 ubox
34 56 0.010302556 ubox
34 60 0.032794688 ubox
35 55 0.010297165 ubox
35 59 0.033202888 ubox
36 44 0.012239754 ubox
36 58 0.033172683 ubox
37 43 0.014153194 ubox
37 57 0.032622452 ubox
37 59 0.026924849 ubox
38 47 0.009244245 ubox
38 58 0.027018360 ubox
39 46 0.009612057 ubox
39 52 0.005874511 ubox
39 61 0.750551101 ubox
40 51 0.005612574 ubox
40 56 0.032695165 ubox
40 60 0.754007916 ubox
41 55 0.033239397 ubox
41 59 0.754617385 ubox
42 58 0.752047605 ubox
43 52 0.029433955 ubox
43 58 0.009190570 ubox
43 61 0.647872886 ubox
44 51 0.027870993 ubox
44 56 0.708721101 ubox
44 57 0.007021232 ubox
44 60 0.650599289 ubox
45 55 0.709383849 ubox
45 59 0.651087116 ubox
46 57 0.697962031 ubox
47 56 0.698197157 ubox
48 55 0.697039271 ubox
50 59 0.052988842 ubox
51 58 0.053161750 ubox
52 57 0.052967618 ubox
54 65 0.006824121 ubox
55 64 0.007280540 ubox
59 64 0.004867811 ubox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
39 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
showpage
end
%%EOF
