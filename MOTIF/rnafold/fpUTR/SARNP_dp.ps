%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SARNP)
} def

/sequence { (\
AGCUCCUGGAGGCGGAGGCCGCGGGUGGGGGCCUAGUGGAGUGAGGGGUAACAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.042006167 ubox
2 13 0.005214134 ubox
2 19 0.007972874 ubox
2 32 0.246211175 ubox
2 33 0.031495710 ubox
2 42 0.386614757 ubox
2 49 0.854152102 ubox
3 12 0.005065755 ubox
3 17 0.057027423 ubox
3 18 0.009888464 ubox
3 28 0.013658019 ubox
3 29 0.009080563 ubox
3 30 0.020225495 ubox
3 31 0.255039474 ubox
3 41 0.406868922 ubox
3 45 0.022733472 ubox
3 47 0.009432568 ubox
3 48 0.873490837 ubox
4 11 0.004605316 ubox
4 16 0.057330211 ubox
4 17 0.008989067 ubox
4 27 0.012964893 ubox
4 28 0.008768288 ubox
4 29 0.019695299 ubox
4 30 0.255124427 ubox
4 31 0.003187022 ubox
4 40 0.407209638 ubox
4 44 0.022829708 ubox
4 46 0.004114525 ubox
4 47 0.872942174 ubox
4 48 0.011167888 ubox
5 9 0.003178981 ubox
5 15 0.057055618 ubox
5 17 0.004446945 ubox
5 18 0.005198549 ubox
5 25 0.021496425 ubox
5 27 0.006637059 ubox
5 28 0.019362658 ubox
5 29 0.255404395 ubox
5 30 0.007237422 ubox
5 39 0.407298459 ubox
5 43 0.022827669 ubox
5 45 0.004007501 ubox
5 46 0.873619830 ubox
5 47 0.024581629 ubox
5 48 0.004518163 ubox
6 14 0.056682600 ubox
6 15 0.015952647 ubox
6 17 0.005477311 ubox
6 24 0.021840716 ubox
6 25 0.006614502 ubox
6 27 0.019329902 ubox
6 28 0.255389736 ubox
6 29 0.007230934 ubox
6 36 0.003869777 ubox
6 38 0.407023867 ubox
6 39 0.003227217 ubox
6 41 0.022255952 ubox
6 45 0.873571626 ubox
6 46 0.024588186 ubox
6 47 0.004555742 ubox
7 14 0.020242460 ubox
7 16 0.005687650 ubox
7 23 0.022627566 ubox
7 24 0.007134495 ubox
7 27 0.253005911 ubox
7 28 0.007161355 ubox
7 35 0.007107721 ubox
7 38 0.004381221 ubox
7 40 0.022804306 ubox
7 43 0.055303906 ubox
7 44 0.864691122 ubox
7 45 0.024340380 ubox
7 46 0.004515206 ubox
8 13 0.050640408 ubox
8 22 0.033006639 ubox
8 26 0.232085971 ubox
8 34 0.005817567 ubox
8 37 0.021905156 ubox
8 42 0.153991282 ubox
9 33 0.004801929 ubox
10 34 0.403994738 ubox
11 20 0.106703751 ubox
11 33 0.407508314 ubox
12 19 0.109791558 ubox
12 22 0.264583087 ubox
12 32 0.407521697 ubox
12 37 0.548615384 ubox
12 42 0.035788549 ubox
13 18 0.111843206 ubox
13 21 0.264665089 ubox
13 31 0.407403153 ubox
13 36 0.550355571 ubox
13 38 0.589847514 ubox
13 41 0.038244599 ubox
13 43 0.072096188 ubox
14 20 0.264625788 ubox
14 33 0.004297032 ubox
14 34 0.005513660 ubox
14 37 0.570261261 ubox
14 42 0.070902038 ubox
15 19 0.260354071 ubox
15 32 0.004313468 ubox
15 33 0.003337789 ubox
16 34 0.836779625 ubox
17 33 0.855255937 ubox
17 34 0.007169034 ubox
18 26 0.389665111 ubox
18 32 0.855356357 ubox
18 33 0.005365293 ubox
18 37 0.003344566 ubox
19 25 0.391151969 ubox
19 28 0.108977682 ubox
19 29 0.016124636 ubox
19 30 0.085787713 ubox
19 31 0.851504998 ubox
19 36 0.003371492 ubox
19 39 0.141293928 ubox
20 24 0.388312284 ubox
20 27 0.109129938 ubox
20 28 0.018409636 ubox
20 29 0.117688594 ubox
20 30 0.847472492 ubox
20 38 0.143918737 ubox
20 43 0.003248496 ubox
21 26 0.071797015 ubox
21 32 0.010937518 ubox
21 37 0.158218348 ubox
21 42 0.008186568 ubox
22 31 0.011256072 ubox
22 36 0.159002943 ubox
22 38 0.007494421 ubox
22 41 0.008395779 ubox
23 33 0.011308101 ubox
23 34 0.170665566 ubox
23 37 0.004290374 ubox
24 32 0.011126870 ubox
24 33 0.188585675 ubox
25 32 0.188647790 ubox
26 31 0.186448197 ubox
26 35 0.004066463 ubox
26 53 0.009692673 ubox
27 33 0.004509519 ubox
27 34 0.004277272 ubox
27 52 0.010769743 ubox
28 32 0.004447971 ubox
28 33 0.004288016 ubox
31 49 0.028365722 ubox
32 39 0.039431429 ubox
32 46 0.031388253 ubox
32 47 0.026010516 ubox
32 48 0.034182686 ubox
33 38 0.058211404 ubox
33 39 0.037342070 ubox
33 41 0.032123390 ubox
33 45 0.045280304 ubox
33 46 0.037329707 ubox
33 47 0.042544955 ubox
33 48 0.015311268 ubox
33 55 0.039609284 ubox
34 38 0.033762077 ubox
34 40 0.031815433 ubox
34 43 0.024188463 ubox
34 44 0.041985782 ubox
34 45 0.036280196 ubox
34 46 0.041419042 ubox
34 47 0.015025125 ubox
34 50 0.007308754 ubox
34 54 0.039621102 ubox
35 42 0.032456391 ubox
35 49 0.007531246 ubox
36 42 0.013677341 ubox
36 52 0.061001564 ubox
37 41 0.008430953 ubox
37 43 0.014563402 ubox
37 50 0.008666009 ubox
37 51 0.060433530 ubox
37 53 0.042461636 ubox
38 42 0.009588997 ubox
38 49 0.010635739 ubox
38 52 0.046873299 ubox
41 49 0.019438577 ubox
41 52 0.145246142 ubox
42 48 0.018025466 ubox
42 50 0.011038355 ubox
42 51 0.145280122 ubox
42 53 0.044388531 ubox
43 49 0.013630977 ubox
43 52 0.061342558 ubox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
showpage
end
%%EOF
