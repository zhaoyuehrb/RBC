%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUUCACUCUGAAGCCAAGAGCCGACCUUCUGAGCCCUCAAGAAAGAUCAGAACAGAUUCAUGGGUGAUUUAGCCUAUCUGUCCCAGGCCAGCGUGGCUGAGUGUGCUGGCUGGAGGCCUCUCUCUCUGCUUCGAGGGUAGCUGAGAUCCACCCCGGAAACCGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[177.72605896 455.30972290]
[165.82070923 446.18490601]
[158.84111023 432.90765381]
[158.07479858 417.92724609]
[163.66314697 404.00711060]
[174.57525635 393.71505737]
[188.79817200 388.94973755]
[203.70820618 390.59011841]
[216.55267334 398.33157349]
[210.93922424 384.42153931]
[205.32577515 370.51150513]
[199.71232605 356.60147095]
[194.09886169 342.69143677]
[188.35861206 328.83322144]
[182.49205017 315.02804565]
[176.62547302 301.22283936]
[170.75889587 287.41766357]
[164.89233398 273.61245728]
[151.02693176 268.29397583]
[144.88073730 254.37710571]
[150.55328369 239.86985779]
[144.68670654 226.06466675]
[138.82014465 212.25947571]
[132.95356750 198.45428467]
[116.88734436 196.89196777]
[103.71924591 187.39451599]
[97.08985901 172.47119141]
[98.89051056 156.14688110]
[108.72482300 142.87660217]
[102.60708618 129.18086243]
[96.48935699 115.48511505]
[83.97939301 107.20860291]
[68.98189545 106.93463898]
[53.98439407 106.66068268]
[38.98689651 106.38671875]
[23.98939896 106.11275482]
[17.94882011 120.06194305]
[7.02645445 130.63409424]
[-7.11211967 136.21702576]
[-22.31087112 135.95939636]
[-36.25210190 129.90046692]
[-46.80987549 118.96420288]
[-52.37420654 104.81829834]
[-52.09657669 89.61990356]
[-46.01931763 75.68665314]
[-35.06917572 65.14327240]
[-20.91596222 59.59755707]
[-5.71794081 59.89517975]
[8.20730114 65.99076080]
[18.73626518 76.95476532]
[24.26335907 91.11525726]
[39.26085663 91.38922119]
[54.25835419 91.66318512]
[69.25585175 91.93714142]
[84.25334930 92.21110535]
[91.59461975 79.13036346]
[83.54796600 66.47132111]
[75.50131226 53.81227493]
[67.45465851 41.15323257]
[59.40800858 28.49418831]
[51.36135483 15.83514500]
[47.36405945 13.93456554]
[44.48871613 11.13020229]
[42.88265228 7.89332819]
[42.52230835 4.69412327]
[43.22880554 1.94515026]
[36.12767029 -11.26749039]
[29.02653503 -24.48013115]
[21.92539978 -37.69277191]
[6.72089958 -42.00539398]
[-0.90775806 -55.84660721]
[3.56537461 -71.00466156]
[17.48646736 -78.48655701]
[32.59638214 -73.85340881]
[39.93067551 -59.85399246]
[35.13803864 -44.79390717]
[42.23917770 -31.58126640]
[49.34031296 -18.36862564]
[56.44144821 -5.15598536]
[64.02040100 7.78849220]
[72.06705475 20.44753647]
[80.11370087 33.10657883]
[88.16035461 45.76562119]
[96.20700836 58.42466736]
[104.25366211 71.08370972]
[119.25370026 71.22069550]
[134.25241089 71.35768127]
[142.52893066 58.84771347]
[150.80545044 46.33774567]
[159.08195496 33.82777786]
[161.21968079 24.90817642]
[167.62562561 21.16681671]
[176.12924194 8.81009865]
[184.63285828 -3.54661918]
[193.13647461 -15.90333748]
[201.64010620 -28.26005554]
[210.14372253 -40.61677170]
[208.57467651 -53.44343567]
[215.94194031 -63.56755066]
[227.84155273 -65.86652374]
[236.56942749 -78.06586456]
[240.86814880 -94.46578979]
[257.81716919 -94.87501526]
[262.90234375 -78.70166779]
[248.76878357 -69.33798218]
[240.04089355 -57.13863754]
[239.29576111 -39.62119675]
[222.50044250 -32.11315536]
[213.99681091 -19.75643730]
[205.49319458 -7.39971876]
[196.98957825 4.95699930]
[188.48596191 17.31371689]
[179.98234558 29.67043495]
[171.59193420 42.10429764]
[163.31541443 54.61426163]
[155.03889465 67.12422943]
[146.76237488 79.63420105]
[110.18509674 109.36738586]
[116.30283356 123.06312561]
[122.42056274 136.75886536]
[136.40975952 137.48439026]
[148.65930176 144.14179993]
[156.79988098 155.37838745]
[159.28506470 168.96220398]
[155.68486023 182.22529602]
[146.75875854 192.58770752]
[152.62533569 206.39291382]
[158.49191284 220.19810486]
[164.35847473 234.00329590]
[178.73945618 239.98870850]
[184.49232483 254.07270813]
[178.69752502 267.74588013]
[184.56410217 281.55108643]
[190.43066406 295.35626221]
[196.29724121 309.16146851]
[202.16380310 322.96667480]
[208.42320251 329.67108154]
[208.00891113 337.07797241]
[213.62236023 350.98800659]
[219.23580933 364.89804077]
[224.84925842 378.80807495]
[230.46272278 392.71810913]
[239.17195129 399.93551636]
[239.53291321 409.97045898]
[247.80943298 422.48043823]
[256.08593750 434.99041748]
[264.36245728 447.50036621]
[279.74609375 448.30673218]
[291.56695557 457.90469360]
[295.42395020 472.45074463]
[290.04049683 486.31277466]
[298.31701660 498.82275391]
[306.59353638 511.33270264]
[321.96365356 515.93041992]
[327.81820679 530.86712646]
[319.66607666 544.68457031]
[303.76089478 546.78326416]
[292.30374146 535.55328369]
[294.08358765 519.60925293]
[285.80706787 507.09927368]
[277.53054810 494.58929443]
[262.66717529 494.12243652]
[250.78825378 484.88360596]
[246.57803345 470.25051880]
[251.85249329 455.77688599]
[243.57597351 443.26690674]
[235.29945374 430.75695801]
[227.02294922 418.24697876]
[226.11773682 433.21963501]
[219.01528931 446.43157959]
[207.02581787 455.44558716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 142]
[10 141]
[11 140]
[12 139]
[13 138]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[21 129]
[22 128]
[23 127]
[24 126]
[29 120]
[30 119]
[31 118]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[66 79]
[67 78]
[68 77]
[69 76]
[87 117]
[88 116]
[89 115]
[90 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[100 106]
[101 105]
[144 168]
[145 167]
[146 166]
[147 165]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
