%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPUSD4)
} def

/sequence { (\
AUUGUAGUCGCCCUUCUCCACGUGGUCUUGGCUCGCCCCGCCCUUCCUUGUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.025001682 ubox
1 23 0.028513341 ubox
1 51 0.008150666 ubox
2 7 0.026218324 ubox
2 22 0.028084505 ubox
2 25 0.003230354 ubox
2 50 0.008096200 ubox
2 53 0.020630254 ubox
2 54 0.006323071 ubox
3 10 0.112533961 ubox
3 20 0.178916906 ubox
3 22 0.048029418 ubox
3 30 0.003827510 ubox
3 35 0.106075208 ubox
3 40 0.096409637 ubox
3 52 0.023213715 ubox
3 53 0.008440231 ubox
4 9 0.156675439 ubox
4 11 0.160942277 ubox
4 19 0.285190228 ubox
4 21 0.072340739 ubox
4 29 0.018421732 ubox
4 32 0.015506687 ubox
4 34 0.151501055 ubox
4 36 0.144653243 ubox
4 39 0.131785616 ubox
4 41 0.081008550 ubox
4 51 0.019564404 ubox
5 10 0.154747697 ubox
5 20 0.069399227 ubox
5 30 0.004191331 ubox
5 31 0.015114017 ubox
5 35 0.143950565 ubox
5 40 0.080593940 ubox
5 50 0.016498528 ubox
5 52 0.008663406 ubox
6 14 0.093307524 ubox
6 15 0.025843239 ubox
6 17 0.331835206 ubox
6 23 0.003620370 ubox
6 28 0.099371415 ubox
6 29 0.011119008 ubox
6 33 0.224186616 ubox
6 44 0.013347485 ubox
6 48 0.013548360 ubox
6 49 0.016443475 ubox
6 51 0.007576537 ubox
7 13 0.100369865 ubox
7 14 0.025602976 ubox
7 16 0.344753070 ubox
7 21 0.020822903 ubox
7 23 0.005720927 ubox
7 26 0.021078364 ubox
7 27 0.107323797 ubox
7 28 0.009253796 ubox
7 32 0.229922415 ubox
7 36 0.197499920 ubox
7 41 0.031927493 ubox
7 43 0.014252460 ubox
7 47 0.014500538 ubox
7 48 0.013005909 ubox
8 20 0.019899931 ubox
8 25 0.116902398 ubox
8 31 0.229518305 ubox
8 35 0.188846975 ubox
8 40 0.030886993 ubox
9 22 0.029331812 ubox
9 24 0.130277607 ubox
9 30 0.229244358 ubox
9 35 0.060703207 ubox
9 40 0.010772672 ubox
9 50 0.006952130 ubox
10 21 0.030251370 ubox
10 23 0.132095110 ubox
10 26 0.103588582 ubox
10 29 0.203297881 ubox
10 32 0.349888248 ubox
10 34 0.056011095 ubox
10 36 0.054384319 ubox
10 39 0.009424250 ubox
10 41 0.016853027 ubox
10 49 0.004508625 ubox
10 51 0.026069640 ubox
11 22 0.132113680 ubox
11 25 0.110006464 ubox
11 31 0.347793916 ubox
11 35 0.054443169 ubox
11 40 0.016809400 ubox
11 50 0.026801834 ubox
12 24 0.108651549 ubox
12 25 0.199136352 ubox
12 30 0.344366853 ubox
12 31 0.099984519 ubox
13 24 0.199908344 ubox
13 25 0.031128439 ubox
13 30 0.109502526 ubox
13 31 0.028457285 ubox
13 54 0.199277420 ubox
14 24 0.030740174 ubox
14 25 0.007495591 ubox
14 30 0.028241362 ubox
14 53 0.203431421 ubox
14 54 0.011844370 ubox
15 24 0.007728498 ubox
15 25 0.065076608 ubox
15 52 0.200908266 ubox
15 53 0.016959555 ubox
16 24 0.067603262 ubox
16 25 0.065744929 ubox
16 30 0.003490518 ubox
16 54 0.174577016 ubox
17 24 0.060643194 ubox
17 25 0.026080103 ubox
17 53 0.174508414 ubox
18 24 0.030383548 ubox
18 25 0.359391938 ubox
18 31 0.016919238 ubox
19 24 0.359185335 ubox
19 30 0.017056339 ubox
19 50 0.092050795 ubox
20 26 0.006382888 ubox
20 29 0.016649069 ubox
20 49 0.089560056 ubox
20 51 0.788441518 ubox
21 25 0.006733233 ubox
21 30 0.004494413 ubox
21 35 0.009155488 ubox
21 40 0.086077324 ubox
21 50 0.834263561 ubox
22 29 0.005049458 ubox
22 34 0.009354959 ubox
22 36 0.026545621 ubox
22 39 0.087700081 ubox
22 41 0.111849688 ubox
22 49 0.772957971 ubox
22 51 0.010231019 ubox
23 35 0.026601174 ubox
23 40 0.111973244 ubox
23 50 0.007641416 ubox
23 52 0.005170260 ubox
24 33 0.009876309 ubox
24 34 0.026558108 ubox
24 37 0.089070820 ubox
24 38 0.013228797 ubox
24 39 0.111711891 ubox
24 42 0.050860835 ubox
24 43 0.029057411 ubox
24 44 0.013515065 ubox
24 46 0.033877843 ubox
24 47 0.867032939 ubox
24 48 0.060820308 ubox
24 49 0.005201834 ubox
24 51 0.003439238 ubox
25 32 0.025377839 ubox
25 33 0.011474554 ubox
25 36 0.089364031 ubox
25 37 0.012655369 ubox
25 38 0.111442403 ubox
25 41 0.051234022 ubox
25 42 0.028668330 ubox
25 43 0.014692545 ubox
25 45 0.033300677 ubox
25 46 0.867030636 ubox
25 47 0.064998756 ubox
25 48 0.005200041 ubox
26 31 0.024200649 ubox
26 35 0.088796897 ubox
26 40 0.049901991 ubox
27 54 0.012306629 ubox
28 53 0.012694134 ubox
29 35 0.014393910 ubox
29 40 0.056049132 ubox
29 52 0.012517611 ubox
30 34 0.015991764 ubox
30 37 0.107479808 ubox
30 38 0.033018625 ubox
30 39 0.066785933 ubox
30 42 0.880725318 ubox
30 43 0.085188082 ubox
30 44 0.008153368 ubox
30 47 0.013945392 ubox
30 51 0.003866051 ubox
31 36 0.106935323 ubox
31 37 0.033046646 ubox
31 38 0.066282437 ubox
31 41 0.883181605 ubox
31 42 0.072775585 ubox
31 43 0.008920612 ubox
31 46 0.013933694 ubox
31 51 0.004393456 ubox
32 40 0.883428780 ubox
32 50 0.005104351 ubox
33 53 0.005805192 ubox
34 40 0.058404262 ubox
34 50 0.009189864 ubox
35 39 0.073748457 ubox
35 41 0.145307031 ubox
35 49 0.007032439 ubox
35 51 0.021546665 ubox
36 40 0.144573090 ubox
36 50 0.022223105 ubox
39 50 0.036422908 ubox
40 49 0.034349375 ubox
40 51 0.078246065 ubox
41 50 0.080957553 ubox
43 54 0.095736269 ubox
44 53 0.097614189 ubox
44 54 0.005436222 ubox
45 52 0.087002000 ubox
45 53 0.008151574 ubox
47 54 0.044259364 ubox
48 53 0.042081946 ubox
48 54 0.006676757 ubox
49 53 0.008348705 ubox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
showpage
end
%%EOF
