%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXD4L3)
} def

/sequence { (\
CAUUCAUCCCAGGCUUCCAGCUCAGCCCGCCCCAGGCCAGGUGAUCGGCCGCCACAUCCCCUGCGACUGAAGCACCUGCUCCUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.005348514 ubox
3 35 0.004445405 ubox
3 36 0.003769698 ubox
3 71 0.011605530 ubox
4 11 0.020429282 ubox
4 13 0.007025612 ubox
4 34 0.011235599 ubox
4 35 0.005873786 ubox
4 36 0.009573910 ubox
4 44 0.048092552 ubox
4 70 0.019929276 ubox
5 12 0.016745664 ubox
5 35 0.016482051 ubox
5 43 0.051465312 ubox
5 69 0.020612869 ubox
5 78 0.005761552 ubox
6 42 0.051061118 ubox
6 45 0.016825051 ubox
6 68 0.020363606 ubox
6 77 0.003261716 ubox
7 36 0.006029061 ubox
7 41 0.046030327 ubox
7 44 0.025208203 ubox
7 66 0.020502529 ubox
8 12 0.004894169 ubox
8 35 0.010996419 ubox
8 36 0.023256719 ubox
8 40 0.045762067 ubox
8 41 0.017948441 ubox
8 43 0.026550272 ubox
8 65 0.020640796 ubox
9 35 0.023944318 ubox
9 36 0.033078614 ubox
9 40 0.017881308 ubox
9 41 0.031402920 ubox
10 35 0.033867117 ubox
10 40 0.031637391 ubox
10 63 0.020653102 ubox
10 78 0.028570091 ubox
11 22 0.017578151 ubox
11 62 0.020638053 ubox
11 77 0.028239562 ubox
11 80 0.015714861 ubox
11 83 0.029975050 ubox
12 18 0.025663467 ubox
12 21 0.016991175 ubox
12 22 0.177410659 ubox
12 23 0.062432916 ubox
12 27 0.949686571 ubox
12 28 0.086251112 ubox
12 31 0.159689170 ubox
12 32 0.016635979 ubox
12 33 0.019511123 ubox
12 38 0.117045273 ubox
12 53 0.003225810 ubox
12 61 0.020360914 ubox
12 76 0.027814774 ubox
12 79 0.013224270 ubox
12 80 0.017136655 ubox
12 81 0.006755885 ubox
12 82 0.030098153 ubox
12 84 0.005875272 ubox
12 85 0.006461046 ubox
13 17 0.025278566 ubox
13 21 0.198766269 ubox
13 22 0.008755799 ubox
13 26 0.954054864 ubox
13 27 0.061754727 ubox
13 30 0.160238640 ubox
13 31 0.014488436 ubox
13 32 0.019206420 ubox
13 37 0.122130879 ubox
13 52 0.003313470 ubox
13 60 0.020009313 ubox
13 73 0.020186702 ubox
13 75 0.021638050 ubox
13 79 0.018659597 ubox
13 81 0.026209197 ubox
13 84 0.005801385 ubox
14 20 0.199129636 ubox
14 25 0.955928868 ubox
14 29 0.160243697 ubox
14 36 0.122147219 ubox
14 51 0.003381198 ubox
14 72 0.025815036 ubox
14 78 0.018554720 ubox
15 19 0.179427041 ubox
15 24 0.942335280 ubox
15 25 0.011749142 ubox
15 34 0.003217284 ubox
15 35 0.121176645 ubox
15 71 0.025906191 ubox
16 24 0.030883540 ubox
16 34 0.109216004 ubox
16 70 0.025744720 ubox
17 48 0.003326131 ubox
17 69 0.019634369 ubox
18 47 0.003323002 ubox
18 69 0.017022117 ubox
19 68 0.023774189 ubox
19 80 0.012266562 ubox
20 26 0.098220037 ubox
20 30 0.123936953 ubox
20 37 0.003555144 ubox
20 49 0.003544259 ubox
20 52 0.018446847 ubox
20 64 0.006404288 ubox
20 67 0.023776365 ubox
20 73 0.023596171 ubox
20 79 0.012514589 ubox
21 25 0.097631461 ubox
21 29 0.124020058 ubox
21 36 0.003548857 ubox
21 48 0.003574469 ubox
21 51 0.018469804 ubox
21 63 0.006337272 ubox
21 72 0.023654950 ubox
21 78 0.011517774 ubox
22 35 0.003188242 ubox
22 44 0.004506967 ubox
22 47 0.003333202 ubox
22 66 0.019028665 ubox
22 70 0.017181465 ubox
22 71 0.016719108 ubox
23 43 0.004940863 ubox
23 63 0.013925400 ubox
23 65 0.018921571 ubox
23 69 0.024089199 ubox
24 42 0.004073362 ubox
24 62 0.014275955 ubox
24 68 0.024100247 ubox
24 80 0.014054723 ubox
24 83 0.005582081 ubox
25 37 0.127692118 ubox
25 42 0.005122068 ubox
25 49 0.019452731 ubox
25 61 0.014247803 ubox
25 64 0.013459952 ubox
25 67 0.024013348 ubox
25 79 0.014930193 ubox
25 82 0.005810453 ubox
26 36 0.125286199 ubox
26 41 0.006450839 ubox
26 48 0.019460975 ubox
26 63 0.013278043 ubox
26 78 0.012927446 ubox
27 35 0.122375005 ubox
27 36 0.041063068 ubox
27 40 0.006445072 ubox
27 47 0.019434731 ubox
28 35 0.061689741 ubox
28 43 0.020185863 ubox
28 65 0.024000262 ubox
29 37 0.585022148 ubox
29 42 0.020305206 ubox
29 52 0.003934460 ubox
29 64 0.024169307 ubox
29 73 0.008321554 ubox
29 79 0.007131697 ubox
30 36 0.586188225 ubox
30 41 0.020310450 ubox
30 51 0.003939019 ubox
30 63 0.023337230 ubox
30 72 0.008327034 ubox
30 78 0.006231758 ubox
31 35 0.581953492 ubox
31 40 0.020290344 ubox
33 63 0.006688074 ubox
33 69 0.009570177 ubox
34 62 0.013635919 ubox
34 68 0.009587220 ubox
34 80 0.034027214 ubox
34 83 0.640622232 ubox
35 50 0.021222517 ubox
35 53 0.008354056 ubox
35 58 0.004597587 ubox
35 59 0.013279032 ubox
35 60 0.004849230 ubox
35 61 0.013731062 ubox
35 67 0.009571197 ubox
35 79 0.033140811 ubox
35 80 0.314657121 ubox
35 81 0.164213928 ubox
35 82 0.684319269 ubox
35 83 0.047696139 ubox
35 84 0.016512522 ubox
35 85 0.023156104 ubox
36 49 0.021247779 ubox
36 52 0.008372926 ubox
36 57 0.004297121 ubox
36 58 0.013286811 ubox
36 59 0.004917542 ubox
36 60 0.013671762 ubox
36 64 0.003458783 ubox
36 79 0.344606006 ubox
36 80 0.140287571 ubox
36 81 0.682581976 ubox
36 82 0.051778661 ubox
36 83 0.009549464 ubox
36 84 0.023191710 ubox
37 48 0.021250296 ubox
37 51 0.008336987 ubox
37 78 0.245660014 ubox
38 47 0.021237508 ubox
38 63 0.017160159 ubox
38 78 0.955580254 ubox
39 62 0.017761628 ubox
39 77 0.995729148 ubox
40 46 0.007203395 ubox
40 50 0.008862870 ubox
40 53 0.022648753 ubox
40 58 0.006481640 ubox
40 61 0.017787863 ubox
40 76 0.997300558 ubox
41 45 0.004681183 ubox
41 49 0.008906542 ubox
41 52 0.022682905 ubox
41 55 0.004369812 ubox
41 57 0.006499851 ubox
41 60 0.017745617 ubox
41 75 0.997305697 ubox
42 48 0.008859771 ubox
42 51 0.022673516 ubox
42 54 0.004382008 ubox
42 56 0.006663741 ubox
42 72 0.004260784 ubox
42 74 0.996866024 ubox
43 50 0.022542985 ubox
43 53 0.004366692 ubox
43 55 0.006661490 ubox
43 58 0.017760602 ubox
43 73 0.993792370 ubox
44 57 0.017751227 ubox
45 56 0.016890733 ubox
45 70 0.977689017 ubox
46 69 0.996830118 ubox
47 53 0.018037361 ubox
47 68 0.997888810 ubox
48 52 0.017771193 ubox
48 67 0.997530511 ubox
50 63 0.004814332 ubox
50 65 0.996960939 ubox
51 62 0.003830435 ubox
51 64 0.998868511 ubox
52 63 0.968418218 ubox
53 63 0.233939346 ubox
54 62 0.309337637 ubox
55 63 0.033698221 ubox
56 62 0.067643401 ubox
57 66 0.004917883 ubox
58 65 0.004984451 ubox
62 74 0.003481586 ubox
63 73 0.003944681 ubox
64 72 0.003951700 ubox
69 81 0.005060516 ubox
69 84 0.003644942 ubox
70 80 0.003761364 ubox
70 83 0.003735129 ubox
71 80 0.056735260 ubox
72 79 0.060869649 ubox
73 78 0.060800944 ubox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
34 83 0.9500000 lbox
35 82 0.9500000 lbox
36 81 0.9500000 lbox
38 78 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
42 74 0.9500000 lbox
43 73 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
showpage
end
%%EOF
