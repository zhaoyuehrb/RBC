%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGUUGCACGCCUGCGCGAGGGCGGGCGGCGGGGGCGCGCGCGCGGCGGGGGCGGGCUUUGCCGAGCGCAGAGCUGCAGCCGCCGAGCCGGACGUGUCCGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[172.69519043 230.54866028]
[164.09155273 218.26138306]
[155.48789978 205.97410583]
[146.88426208 193.68682861]
[138.28060913 181.39953613]
[129.67695618 169.11225891]
[121.07331848 156.82498169]
[112.46966553 144.53770447]
[103.86602020 132.25041199]
[95.26237488 119.96313477]
[80.89253235 115.66108704]
[66.95232391 121.19918060]
[53.01210785 126.73727417]
[39.07189560 132.27536011]
[25.13168144 137.81346130]
[11.19146919 143.35154724]
[-2.74874377 148.88964844]
[-8.77758026 163.49884033]
[-23.40274429 169.48884583]
[-37.94738770 163.30587769]
[-43.78242493 148.61820984]
[-37.44604111 134.13975525]
[-22.69749260 128.46032715]
[-8.28683567 134.94943237]
[5.65337706 129.41133118]
[19.59358978 123.87324524]
[33.53380203 118.33515167]
[47.47401428 112.79705811]
[61.41422653 107.25896454]
[75.35443878 101.72087860]
[76.22661591 86.74625397]
[63.02359390 79.62725067]
[49.82057190 72.50823975]
[33.45302582 73.52580261]
[24.61473274 59.71216202]
[32.39777374 45.27761078]
[48.79562378 45.07117462]
[56.93957901 59.30522156]
[70.14260101 66.42422485]
[83.34561920 73.54323578]
[96.65077972 66.61700439]
[98.39217377 51.71842957]
[100.13356781 36.81985092]
[101.87496185 21.92127800]
[95.79208374 7.31617117]
[104.95461273 -4.42679787]
[106.69600677 -19.32537270]
[108.43740082 -34.22394943]
[110.17879486 -49.12252426]
[111.92018890 -64.02110291]
[113.66158295 -78.91967773]
[115.40297699 -93.81825256]
[117.14436340 -108.71682739]
[108.36183167 -122.14241791]
[113.51921082 -137.33389282]
[128.66020203 -142.63766479]
[142.16993713 -133.98510742]
[143.68490601 -118.01374817]
[132.04293823 -106.97543335]
[130.30154419 -92.07685852]
[128.56015015 -77.17828369]
[126.81876373 -62.27970505]
[125.07736969 -47.38113022]
[123.33597565 -32.48255539]
[121.59458160 -17.58397865]
[119.85318756 -2.68540406]
[126.06062317 10.85405636]
[116.77353668 23.66267204]
[115.03214264 38.56124496]
[113.29074860 53.45982361]
[111.54935455 68.35839844]
[119.95017242 77.13784027]
[123.87799072 87.39212799]
[123.49611664 97.20737457]
[119.69308472 105.01181793]
[113.85214233 109.82056427]
[107.54965973 111.35948944]
[116.15330505 123.64677429]
[124.75695038 135.93405151]
[133.36059570 148.22132874]
[141.96424866 160.50860596]
[150.56788635 172.79589844]
[159.17153931 185.08317566]
[167.77517700 197.37045288]
[176.37882996 209.65773010]
[184.98248291 221.94502258]
[204.79818726 224.19497681]
[216.59382629 239.90364075]
[213.32870483 258.97171021]
[222.97052002 270.46237183]
[231.01358032 275.11856079]
[232.71977234 282.43032837]
[242.02330017 294.19656372]
[251.32682800 305.96279907]
[266.75881958 311.51132202]
[269.40298462 327.69589233]
[256.53921509 337.86721802]
[241.40069580 331.56192017]
[239.56059265 315.26632690]
[230.25706482 303.50009155]
[220.95353699 291.73385620]
[211.47985840 280.10418701]
[201.83804321 268.61352539]
[191.48377991 270.53448486]
[181.20765686 267.88339233]
[172.94892883 261.08932495]
[168.29600525 251.36982727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 86]
[2 85]
[3 84]
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[9 78]
[10 77]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[31 40]
[32 39]
[33 38]
[41 71]
[42 70]
[43 69]
[44 68]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[89 103]
[90 102]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
