%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LAPTM5)
} def

/sequence { (\
GGAGGGCAGCCAGCAGCUUCCCCUUCUCUGCCCUGCUCCAGGCACCAGGCUCUUUCCCCUUCAGUGUCUCAGAGGAGGGGACGGCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.281002360 ubox
1 21 0.015104366 ubox
1 22 0.006475959 ubox
1 23 0.035134040 ubox
1 24 0.043548124 ubox
1 25 0.007666259 ubox
1 26 0.539887226 ubox
1 27 0.077101766 ubox
1 28 0.020954071 ubox
1 29 0.008771119 ubox
1 37 0.011995839 ubox
1 38 0.005079559 ubox
1 39 0.048132374 ubox
1 46 0.037430550 ubox
1 91 0.127425650 ubox
2 10 0.280705455 ubox
2 19 0.003749356 ubox
2 20 0.015178516 ubox
2 21 0.006459906 ubox
2 22 0.034900031 ubox
2 23 0.050189242 ubox
2 24 0.010320219 ubox
2 25 0.544890290 ubox
2 26 0.090639021 ubox
2 27 0.005823776 ubox
2 28 0.010697855 ubox
2 36 0.014335699 ubox
2 38 0.048117033 ubox
2 45 0.037175448 ubox
2 90 0.128360046 ubox
3 18 0.004654986 ubox
3 19 0.014942636 ubox
3 24 0.546759620 ubox
3 25 0.084352405 ubox
3 27 0.010442538 ubox
3 34 0.067551981 ubox
3 37 0.039574392 ubox
4 11 0.695319015 ubox
4 17 0.004868147 ubox
4 18 0.013837434 ubox
4 19 0.007645766 ubox
4 20 0.003167135 ubox
4 21 0.035089686 ubox
4 22 0.125358485 ubox
4 23 0.538842474 ubox
4 24 0.070602917 ubox
4 26 0.005579057 ubox
4 33 0.081134788 ubox
4 36 0.019547864 ubox
4 38 0.009337963 ubox
4 39 0.007425475 ubox
4 91 0.206480472 ubox
5 10 0.695303135 ubox
5 11 0.128521149 ubox
5 17 0.012686405 ubox
5 18 0.012292627 ubox
5 20 0.035088626 ubox
5 21 0.160256413 ubox
5 22 0.529595154 ubox
5 23 0.070531438 ubox
5 32 0.083417780 ubox
5 37 0.010427656 ubox
5 38 0.007405002 ubox
5 90 0.208057720 ubox
5 91 0.020204177 ubox
6 10 0.126770548 ubox
6 14 0.052975949 ubox
6 17 0.015617181 ubox
6 19 0.034480255 ubox
6 20 0.188456569 ubox
6 21 0.519382714 ubox
6 22 0.070392537 ubox
6 31 0.083434146 ubox
6 36 0.014064519 ubox
6 85 0.003867531 ubox
6 88 0.217488046 ubox
6 90 0.020332039 ubox
7 13 0.053075596 ubox
7 16 0.017646154 ubox
7 30 0.083444705 ubox
7 35 0.014432682 ubox
7 84 0.003865706 ubox
7 87 0.217346174 ubox
8 18 0.533332055 ubox
8 19 0.102211096 ubox
8 29 0.083349688 ubox
8 34 0.014434957 ubox
9 17 0.557656602 ubox
9 18 0.029943564 ubox
9 28 0.082699796 ubox
9 33 0.014418596 ubox
9 85 0.216337809 ubox
9 88 0.027027549 ubox
10 16 0.557103497 ubox
10 84 0.216645110 ubox
10 87 0.027014540 ubox
11 83 0.216271968 ubox
12 18 0.042007110 ubox
12 19 0.006447334 ubox
12 24 0.014634570 ubox
12 25 0.011408288 ubox
12 27 0.071322574 ubox
13 17 0.043904318 ubox
13 18 0.009330094 ubox
13 23 0.015267988 ubox
13 24 0.008874739 ubox
13 26 0.076850018 ubox
13 31 0.014303368 ubox
13 85 0.029548097 ubox
13 88 0.784641913 ubox
14 30 0.014318965 ubox
14 84 0.029568017 ubox
14 87 0.784333172 ubox
15 24 0.076111654 ubox
15 25 0.009319526 ubox
15 27 0.005117180 ubox
15 29 0.014289072 ubox
16 23 0.076956419 ubox
16 24 0.007840685 ubox
16 26 0.005091545 ubox
16 28 0.014121505 ubox
16 85 0.792959918 ubox
16 88 0.035821768 ubox
17 84 0.794049583 ubox
17 87 0.035854476 ubox
18 81 0.012989716 ubox
18 83 0.776256549 ubox
18 86 0.035559154 ubox
19 81 0.812350149 ubox
19 83 0.004758960 ubox
20 80 0.824652065 ubox
21 79 0.824694347 ubox
22 78 0.824696913 ubox
23 48 0.007664027 ubox
23 77 0.824693697 ubox
24 47 0.007457235 ubox
24 76 0.824437876 ubox
25 75 0.824042966 ubox
26 48 0.041594186 ubox
26 74 0.824642308 ubox
26 87 0.005734812 ubox
27 42 0.010823055 ubox
27 47 0.043884255 ubox
27 48 0.017074814 ubox
27 49 0.027576126 ubox
27 73 0.824579278 ubox
27 81 0.004864361 ubox
27 83 0.003268418 ubox
27 84 0.004657738 ubox
27 86 0.007971173 ubox
28 41 0.014288527 ubox
28 48 0.434287744 ubox
28 72 0.824650114 ubox
28 80 0.005216857 ubox
28 83 0.006042356 ubox
28 84 0.019104000 ubox
28 87 0.158876048 ubox
29 40 0.014380035 ubox
29 44 0.271965588 ubox
29 47 0.433893306 ubox
29 48 0.004140114 ubox
29 71 0.824063363 ubox
29 83 0.019302775 ubox
29 86 0.161458403 ubox
29 89 0.009271749 ubox
30 36 0.041907630 ubox
30 39 0.015315851 ubox
30 43 0.308779347 ubox
30 46 0.432056882 ubox
30 50 0.026286673 ubox
30 67 0.003621533 ubox
30 70 0.821786301 ubox
30 82 0.019071446 ubox
30 85 0.161925470 ubox
30 88 0.010386280 ubox
31 35 0.044270312 ubox
31 42 0.278262484 ubox
31 49 0.026981735 ubox
31 66 0.006843099 ubox
31 79 0.026003889 ubox
31 80 0.012113184 ubox
31 84 0.161642914 ubox
31 87 0.010044099 ubox
32 41 0.242674430 ubox
32 42 0.427649816 ubox
32 48 0.027585373 ubox
32 49 0.006902355 ubox
32 78 0.028299580 ubox
32 79 0.011163399 ubox
32 80 0.006408706 ubox
32 83 0.160301126 ubox
33 41 0.451016965 ubox
33 42 0.008697636 ubox
33 48 0.013431730 ubox
33 64 0.007861946 ubox
33 72 0.008185365 ubox
33 77 0.030314473 ubox
33 78 0.010076296 ubox
33 79 0.008770591 ubox
33 80 0.149562133 ubox
33 83 0.004304206 ubox
33 87 0.006113774 ubox
34 40 0.470905071 ubox
34 41 0.008695524 ubox
34 44 0.186128678 ubox
34 47 0.011607861 ubox
34 63 0.007836933 ubox
34 66 0.040810023 ubox
34 71 0.013067743 ubox
34 76 0.030627914 ubox
34 77 0.007750150 ubox
34 78 0.007928422 ubox
34 79 0.150835525 ubox
34 86 0.007723897 ubox
34 89 0.011676348 ubox
35 39 0.464116690 ubox
35 43 0.198160296 ubox
35 46 0.009323577 ubox
35 50 0.009716783 ubox
35 62 0.007722020 ubox
35 65 0.057643486 ubox
35 70 0.016589955 ubox
35 82 0.003312433 ubox
35 85 0.008067510 ubox
35 88 0.021538409 ubox
36 42 0.198166593 ubox
36 49 0.009667893 ubox
36 64 0.058255299 ubox
36 74 0.031656043 ubox
36 77 0.151986045 ubox
36 84 0.008049860 ubox
36 87 0.021553854 ubox
37 41 0.178525891 ubox
37 48 0.008947880 ubox
37 63 0.057117249 ubox
37 73 0.031675217 ubox
37 76 0.152013666 ubox
37 83 0.007254809 ubox
37 86 0.021449077 ubox
38 49 0.006567813 ubox
38 72 0.031621314 ubox
38 75 0.152037153 ubox
38 84 0.021181914 ubox
39 48 0.007499596 ubox
39 74 0.151964173 ubox
39 83 0.021165549 ubox
40 51 0.004006909 ubox
40 53 0.017571540 ubox
40 60 0.056934321 ubox
40 61 0.003485627 ubox
40 69 0.821468483 ubox
41 50 0.004099612 ubox
41 51 0.028117411 ubox
41 52 0.018684075 ubox
41 58 0.004306814 ubox
41 59 0.058054246 ubox
41 60 0.003441835 ubox
41 62 0.003413442 ubox
41 68 0.830166155 ubox
41 69 0.021540449 ubox
41 70 0.003661373 ubox
41 91 0.005961887 ubox
42 50 0.039826543 ubox
42 51 0.003350703 ubox
42 57 0.004533784 ubox
42 58 0.057833045 ubox
42 59 0.003437459 ubox
42 61 0.003332396 ubox
42 67 0.830870558 ubox
42 68 0.022666547 ubox
42 88 0.003259290 ubox
42 90 0.005990499 ubox
43 49 0.040004791 ubox
43 64 0.003851005 ubox
43 66 0.834744502 ubox
43 87 0.003252793 ubox
44 65 0.834562115 ubox
45 64 0.833810078 ubox
47 53 0.025748042 ubox
47 54 0.008809246 ubox
47 55 0.006018211 ubox
47 60 0.819202617 ubox
47 61 0.059346843 ubox
47 69 0.054574727 ubox
48 52 0.026161510 ubox
48 53 0.007964331 ubox
48 54 0.006509818 ubox
48 56 0.006595855 ubox
48 57 0.056929849 ubox
48 58 0.054933936 ubox
48 59 0.829395615 ubox
48 60 0.049643070 ubox
48 61 0.014170257 ubox
48 62 0.020676208 ubox
48 68 0.058317367 ubox
48 91 0.017111124 ubox
49 53 0.004470153 ubox
49 55 0.005804760 ubox
49 56 0.056795785 ubox
49 57 0.060245149 ubox
49 58 0.827630705 ubox
49 59 0.049540687 ubox
49 60 0.011775540 ubox
49 61 0.016817234 ubox
49 67 0.058379648 ubox
49 85 0.071077225 ubox
49 88 0.533740014 ubox
49 90 0.012215815 ubox
50 66 0.058407159 ubox
50 84 0.071196257 ubox
50 87 0.535113312 ubox
51 83 0.068619353 ubox
51 84 0.007142793 ubox
51 86 0.532926634 ubox
52 64 0.051205909 ubox
52 83 0.019584677 ubox
52 84 0.531563190 ubox
53 63 0.048686145 ubox
53 64 0.004880767 ubox
53 81 0.003507194 ubox
53 83 0.520098384 ubox
53 84 0.036415301 ubox
54 63 0.006842875 ubox
54 81 0.011700971 ubox
54 83 0.035365806 ubox
54 84 0.003689056 ubox
55 80 0.005947393 ubox
55 81 0.536965146 ubox
56 79 0.005937310 ubox
56 80 0.543757216 ubox
57 78 0.005868507 ubox
57 79 0.543768918 ubox
58 77 0.005795675 ubox
58 78 0.543769383 ubox
59 75 0.005969803 ubox
59 77 0.543764259 ubox
60 74 0.006517232 ubox
60 76 0.543549563 ubox
61 73 0.009028964 ubox
61 75 0.543162881 ubox
61 76 0.005881915 ubox
62 72 0.009864131 ubox
62 74 0.542801481 ubox
62 75 0.008066286 ubox
63 69 0.022700667 ubox
64 68 0.022473946 ubox
65 71 0.523367664 ubox
66 70 0.515378460 ubox
67 73 0.028082567 ubox
68 72 0.028021892 ubox
68 74 0.003298459 ubox
69 73 0.003296194 ubox
83 91 0.011266848 ubox
84 90 0.011326149 ubox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
13 88 0.9500000 lbox
14 87 0.9500000 lbox
16 85 0.9500000 lbox
17 84 0.9500000 lbox
18 83 0.9500000 lbox
19 81 0.9500000 lbox
20 80 0.9500000 lbox
21 79 0.9500000 lbox
22 78 0.9500000 lbox
23 77 0.9500000 lbox
24 76 0.9500000 lbox
25 75 0.9500000 lbox
26 74 0.9500000 lbox
27 73 0.9500000 lbox
28 72 0.9500000 lbox
29 71 0.9500000 lbox
30 70 0.9500000 lbox
40 69 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
showpage
end
%%EOF
