%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGCCACAGGAACGAUGCAUGCCGGGACCGGGAAGAUUCAGUCUCUGAACGGCCCGGAGUAGUCGUCUUUCCCCUUCUGACUGCCGCCACGCUGCAGUCCAGAAUAUUUGAAGAUCAAACCGAACUUGAGAGACUAACGAGAACGGUCCCUUUUUAUUCCUAACAGAUUCCUUCCGUGGCAAAGUAACCCGUCGUCUUCCGUUUCCGGUUGCCCGGUUGCCCUGUUGCCGUGGUAACCGCACGCAUAACAGC\
CGUGGUGGUU\
) } def
/len { sequence length } bind def

/coor [
[74.45808411 436.04455566]
[62.03323746 426.74923706]
[57.47714615 411.91610718]
[62.54171753 397.24880981]
[75.27952576 388.38720703]
[75.45668030 373.38824463]
[75.63382721 358.38928223]
[75.81098175 343.39035034]
[75.98813629 328.39138794]
[76.16529083 313.39242554]
[73.11219025 306.68966675]
[76.43415070 298.21765137]
[76.78843689 283.22183228]
[62.77713394 275.14132690]
[54.71474838 261.01126099]
[54.88913727 244.64974976]
[63.34749603 230.53341675]
[77.85752869 222.57246399]
[78.03468323 207.57350159]
[78.21183014 192.57455444]
[78.38898468 177.57560730]
[70.80253601 164.75784302]
[78.70227814 151.05000305]
[78.87943268 136.05105591]
[79.05658722 121.05210114]
[78.55857086 107.32846069]
[84.50734711 97.98551941]
[92.85500336 95.23724365]
[87.81729126 81.10848999]
[82.77958679 66.97974396]
[68.03737640 62.51058578]
[58.86078262 50.35971832]
[58.60172653 35.31322861]
[67.15000153 23.14503670]
[62.11229706 9.01628780]
[57.07459259 -5.11245918]
[52.03688431 -19.24120712]
[46.99917603 -33.36995316]
[41.96147156 -47.49870300]
[36.92376328 -61.62744904]
[19.36026573 -66.24100494]
[8.20072937 -80.36626434]
[7.78403521 -98.20531464]
[18.08813286 -112.57984924]
[12.71812725 -126.58567047]
[-1.44001341 -133.08065796]
[-6.68644476 -147.36105347]
[-0.40721914 -160.81864929]
[-5.77722502 -174.82446289]
[-16.23974228 -176.58830261]
[-24.96957016 -182.47578430]
[-30.44114685 -191.37767029]
[-31.73169708 -201.66549683]
[-28.67628288 -211.48918152]
[-21.88550568 -219.10984802]
[-26.75599861 -233.29710388]
[-31.62648964 -247.48435974]
[-36.58067703 -261.64260864]
[-41.61838531 -275.77136230]
[-46.65608978 -289.90011597]
[-51.77714157 -303.99887085]
[-56.98136139 -318.06713867]
[-69.02599335 -328.32565308]
[-66.18500519 -342.94680786]
[-71.38922119 -357.01507568]
[-76.59344482 -371.08334351]
[-81.79766083 -385.15161133]
[-90.87041473 -397.09667969]
[-103.02645874 -405.88476562]
[-115.18251038 -414.67288208]
[-127.33855438 -423.46096802]
[-139.49459839 -432.24905396]
[-151.65065002 -441.03713989]
[-166.68601990 -434.11935425]
[-183.06358337 -435.72857666]
[-196.31269836 -445.33016968]
[-202.86482239 -460.22079468]
[-201.01455688 -476.28900146]
[-213.27354431 -484.93292236]
[-225.53253174 -493.57684326]
[-237.79151917 -502.22073364]
[-250.05052185 -510.86465454]
[-262.36032104 -519.43603516]
[-274.72055054 -527.93457031]
[-287.08078003 -536.43310547]
[-299.44097900 -544.93157959]
[-311.80120850 -553.43011475]
[-327.55645752 -554.87322998]
[-333.66021729 -568.45971680]
[-346.02044678 -576.95825195]
[-362.49777222 -580.94995117]
[-363.22348022 -597.88836670]
[-347.14791870 -603.27471924]
[-337.52191162 -589.31848145]
[-325.16168213 -580.81994629]
[-310.29052734 -579.98474121]
[-303.30267334 -565.79034424]
[-290.94247437 -557.29180908]
[-278.58224487 -548.79327393]
[-266.22201538 -540.29479980]
[-253.86180115 -531.79626465]
[-246.59422302 -530.60021973]
[-241.40660095 -523.12365723]
[-229.14761353 -514.47973633]
[-216.88862610 -505.83581543]
[-204.62963867 -497.19192505]
[-192.37065125 -488.54800415]
[-180.39631653 -495.07809448]
[-166.71130371 -495.82260132]
[-153.97697449 -490.57977295]
[-144.69438171 -480.31777954]
[-140.71301270 -466.99645996]
[-142.86256409 -453.19317627]
[-130.70651245 -444.40509033]
[-118.55046082 -435.61700439]
[-106.39441681 -426.82891846]
[-94.23837280 -418.04083252]
[-82.08232117 -409.25274658]
[-75.28709412 -412.42681885]
[-73.98987579 -427.37063599]
[-61.69664001 -418.77502441]
[-54.90141296 -421.94912720]
[-53.83935928 -436.91146851]
[-52.77730179 -451.87384033]
[-51.71524811 -466.83618164]
[-61.79419327 -478.71273804]
[-60.50397110 -493.87155151]
[-49.11937714 -503.40710449]
[-48.05731964 -518.36944580]
[-46.99526596 -533.33178711]
[-45.93320847 -548.29418945]
[-58.34971619 -557.45025635]
[-63.82363129 -571.87384033]
[-60.60825348 -586.96240234]
[-49.72959518 -597.90124512]
[-34.65899658 -601.19982910]
[-20.20543289 -595.80560303]
[-10.98098087 -583.43975830]
[-9.92913151 -568.04833984]
[-17.38552475 -554.54254150]
[-30.97085571 -547.23211670]
[-32.03290939 -532.26977539]
[-33.09496689 -517.30743408]
[-34.15702057 -502.34506226]
[-24.23348618 -491.29702759]
[-25.09741592 -476.10794067]
[-36.75289536 -465.77413940]
[-37.81494904 -450.81176758]
[-38.87700272 -435.84942627]
[-39.93906021 -420.88705444]
[-31.83368492 -433.50857544]
[-23.72830772 -446.13012695]
[-9.19418144 -449.83944702]
[5.78733492 -449.09503174]
[19.88214684 -443.96313477]
[31.83512115 -434.90078735]
[40.58185196 -422.71493530]
[45.34344482 -408.49075317]
[45.69588852 -393.49490356]
[41.60779953 -379.06274414]
[33.44321060 -366.47943115]
[21.92918205 -356.86553955]
[8.09102535 -351.07714844]
[-6.83897638 -349.62973022]
[-21.53131676 -352.65216064]
[-34.67765427 -359.87530518]
[-45.10576248 -370.65374756]
[-56.41757965 -380.50479126]
[-67.72940063 -390.35580444]
[-62.52517700 -376.28753662]
[-57.32095718 -362.21929932]
[-52.11674118 -348.15103149]
[-40.44434357 -338.89874268]
[-42.91309738 -323.27133179]
[-37.70887756 -309.20306396]
[-32.45854187 -304.03759766]
[-32.52734375 -294.93780518]
[-27.48963547 -280.80905151]
[-22.45192909 -266.68032837]
[-17.26296616 -261.45318604]
[-17.43923187 -252.35485840]
[-12.56873989 -238.16758728]
[-7.69824791 -223.98033142]
[10.39597511 -216.68641663]
[17.35009193 -198.13092041]
[8.22859669 -180.19447327]
[13.59860229 -166.18864441]
[27.26529694 -160.37857056]
[32.91076279 -146.25117493]
[26.72394943 -131.95567322]
[32.09395599 -117.94985962]
[44.11880112 -116.58541107]
[54.49079132 -110.21128845]
[61.21916580 -99.97917175]
[62.98219681 -87.78783417]
[59.38645935 -75.93085480]
[51.05250931 -66.66515350]
[56.09021759 -52.53640747]
[61.12792587 -38.40766144]
[66.16563416 -24.27891350]
[71.20333862 -10.15016651]
[76.24104309 3.97858119]
[81.27875519 18.10732841]
[95.59722900 22.12221718]
[104.91622162 33.93832016]
[105.49735260 49.15396118]
[96.90833282 61.94203949]
[101.94604492 76.07078552]
[106.98374939 90.19953156]
[116.05649567 102.14462280]
[128.31549072 110.78853607]
[140.57447815 119.43244934]
[152.83346558 128.07635498]
[165.09245300 136.72027588]
[177.35144043 145.36418152]
[189.61042786 154.00808716]
[201.92024231 162.57946777]
[214.28047180 171.07798767]
[226.64068604 179.57650757]
[239.00091553 188.07504272]
[254.75616455 189.51812744]
[260.85992432 203.10466003]
[273.22012329 211.60317993]
[289.69747925 215.59486389]
[290.42318726 232.53326416]
[274.34762573 237.91963196]
[264.72161865 223.96339417]
[252.36138916 215.46487427]
[237.49021912 214.62965393]
[230.50238037 200.43525696]
[218.14216614 191.93673706]
[205.78193665 183.43820190]
[193.42172241 174.93968201]
[186.15412903 173.74366760]
[180.96652222 166.26707458]
[168.70753479 157.62316895]
[156.44854736 148.97926331]
[144.18955994 140.33534241]
[131.93057251 131.69143677]
[119.67157745 123.04752350]
[107.41259003 114.40361786]
[94.05554199 121.22925568]
[93.87838745 136.22821045]
[93.70123291 151.22715759]
[101.27500916 165.11775208]
[93.38793945 177.75274658]
[93.21078491 192.75170898]
[93.03363037 207.75065613]
[92.85648346 222.74961853]
[105.22625732 229.24113464]
[113.55845642 240.37141418]
[116.27633667 253.93933105]
[112.90651703 267.29202271]
[104.16025543 277.84365845]
[91.78424835 283.57611084]
[91.42996979 298.57192993]
[91.16424561 313.56958008]
[90.98709106 328.56854248]
[90.80993652 343.56750488]
[90.63278198 358.56643677]
[90.45563507 373.56539917]
[90.27848053 388.56436157]
[102.80342865 397.72433472]
[107.52016449 412.50717163]
[102.61500549 427.22854614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 262]
[6 261]
[7 260]
[8 259]
[9 258]
[10 257]
[12 256]
[13 255]
[18 249]
[19 248]
[20 247]
[21 246]
[23 244]
[24 243]
[25 242]
[28 209]
[29 208]
[30 207]
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[44 191]
[45 190]
[48 187]
[49 186]
[55 183]
[56 182]
[57 181]
[58 179]
[59 178]
[60 177]
[61 175]
[62 174]
[64 172]
[65 171]
[66 170]
[67 169]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[89 95]
[90 94]
[122 150]
[123 149]
[124 148]
[125 147]
[128 144]
[129 143]
[130 142]
[131 141]
[210 241]
[211 240]
[212 239]
[213 238]
[214 237]
[215 236]
[216 235]
[217 233]
[218 232]
[219 231]
[220 230]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
