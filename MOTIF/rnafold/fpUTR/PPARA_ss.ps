%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGCCUCCUUCGGCGUUCGCCCCACGGACCGGCAGGCGGCGGACCGCGGCCCAGGCUGAAGCUCAGGGCCCUGUCUGCUCUGUGGACUCAACAGUUUGUGGCAAGACAAGCUCAGAACUGAGAAGCUGUCACCACAGUUCUGGAGGCUGGGAAGUUCAAGAUCAAAGUGCCAGCAGAUUCAGUGUCAUGUGAGGACGUGCUUCCUGCUUCAUAGAUAAGAGUAGCUUGGAGCUCGGCGGCACAACCAGCACC\
AUCUGGUCGCG\
) } def
/len { sequence length } bind def

/coor [
[117.51499176 293.19329834]
[118.74408722 288.18984985]
[114.56430817 273.78396606]
[110.38452911 259.37808228]
[106.20474243 244.97219849]
[102.02496338 230.56631470]
[88.72628021 219.09375000]
[93.31904602 201.24530029]
[88.97005463 186.88960266]
[84.62106323 172.53388977]
[80.27207184 158.17819214]
[72.79750061 157.56115723]
[64.25421906 169.89048767]
[57.84834671 156.32710266]
[50.37377167 155.71006775]
[43.72954941 169.15827942]
[37.08532715 182.60649109]
[38.68522263 198.92739868]
[25.19515228 208.25210571]
[10.49254227 200.98812866]
[9.70217800 184.60803223]
[23.63711929 175.96226501]
[30.28134155 162.51405334]
[36.92556381 149.06584167]
[27.53384399 137.36987305]
[12.96809387 140.95301819]
[-1.59765673 144.53616333]
[-16.16340637 148.11930847]
[-30.72915649 151.70245361]
[-45.29490662 155.28559875]
[-59.86065674 158.86874390]
[-71.41305542 169.67857361]
[-85.62013245 165.20552063]
[-100.18588257 168.78866577]
[-114.75163269 172.37181091]
[-129.29605103 176.04057312]
[-143.81863403 179.79486084]
[-158.34121704 183.54913330]
[-172.22460938 189.22817993]
[-185.21498108 196.72817993]
[-198.20536804 204.22817993]
[-211.19573975 211.72817993]
[-218.92225647 226.19306946]
[-235.31918335 226.46365356]
[-243.51875305 212.26156616]
[-235.08596802 198.19671631]
[-218.69573975 198.73779297]
[-205.70536804 191.23779297]
[-192.71498108 183.73779297]
[-179.72460938 176.23779297]
[-184.41018677 161.98840332]
[-199.31657410 163.66160583]
[-214.22296143 165.33480835]
[-229.12934875 167.00801086]
[-244.03573608 168.68121338]
[-258.62011719 179.94871521]
[-274.41171265 172.26104736]
[-289.29736328 174.10952759]
[-304.18304443 175.95800781]
[-316.93307495 186.27153015]
[-332.14068604 180.13467407]
[-334.16156006 163.86053467]
[-320.91683960 154.19052124]
[-306.03152466 161.07234192]
[-291.14584351 159.22386169]
[-276.26019287 157.37538147]
[-268.59924316 148.04161072]
[-256.23724365 146.36251831]
[-245.70893860 153.77482605]
[-230.80255127 152.10162354]
[-215.89616394 150.42842102]
[-200.98977661 148.75521851]
[-186.08338928 147.08201599]
[-162.09548950 169.02655029]
[-147.57290649 165.27227783]
[-133.05032349 161.51799011]
[-127.38044739 156.81741333]
[-118.33477783 157.80606079]
[-103.76902771 154.22291565]
[-89.20327759 150.63977051]
[-78.69271851 140.08621216]
[-63.44380188 144.30299377]
[-48.87805176 140.71984863]
[-34.31230164 137.13670349]
[-19.74655151 133.55355835]
[-5.18080044 129.97041321]
[9.38494968 126.38727570]
[23.95070076 122.80413055]
[26.70835114 115.82950592]
[11.87031364 118.02782440]
[2.54742050 106.27692413]
[8.06246662 92.32758331]
[22.90046501 90.12898254]
[32.22365570 101.88026428]
[34.98130798 94.90563965]
[26.80432320 82.33039093]
[18.62733650 69.75514221]
[10.45035172 57.17988968]
[2.27336717 44.60464096]
[-5.90361786 32.02938843]
[-21.10609245 28.63490677]
[-29.21957970 15.76533127]
[-25.88977242 1.29301381]
[-34.06675720 -11.28223610]
[-42.24374390 -23.85748672]
[-57.78678894 -25.57437515]
[-68.55242157 -36.91611481]
[-69.45744324 -52.52748871]
[-60.07452393 -65.03727722]
[-44.83399582 -68.53874969]
[-30.93196678 -61.37860489]
[-24.93255234 -46.93765640]
[-29.66849136 -32.03446960]
[-21.49150658 -19.45922089]
[-13.31452179 -6.88397121]
[1.26428938 -4.05663204]
[9.73605442 8.57997608]
[6.67163181 23.85240364]
[14.84861755 36.42765427]
[23.02560234 49.00290298]
[31.20258713 61.57815552]
[39.37957382 74.15340424]
[47.55655670 86.72865295]
[88.85822296 54.03367996]
[130.35404968 73.19084167]
[140.61195374 62.24665070]
[150.86987305 51.30245972]
[161.12777710 40.35826874]
[171.38568115 29.41407967]
[181.57902527 18.40973091]
[191.70745850 7.34560347]
[201.83589172 -3.71852374]
[211.96432495 -14.78265095]
[211.44581604 -30.35085297]
[221.87509155 -41.42716599]
[236.72018433 -41.82554626]
[246.84861755 -52.88967133]
[256.97705078 -63.95380020]
[267.10546875 -75.01792908]
[262.96319580 -92.69890594]
[270.22427368 -109.17157745]
[285.79501343 -117.88769531]
[303.32070923 -115.50743103]
[313.18597412 -126.80681610]
[323.05126953 -138.10620117]
[332.91656494 -149.40559387]
[342.78182983 -160.70498657]
[345.81149292 -180.65679932]
[364.40447998 -186.03668213]
[374.00115967 -197.56507874]
[383.59783936 -209.09346008]
[393.19451904 -220.62185669]
[402.79116821 -232.15025330]
[394.52709961 -244.80712891]
[390.36245728 -259.33804321]
[390.66754150 -274.45089722]
[395.41525269 -288.80184937]
[404.18344116 -301.11489868]
[416.19238281 -310.29510498]
[430.37432861 -315.52618408]
[445.46817017 -316.34301758]
[460.13180542 -312.67294312]
[473.06134033 -304.84234619]
[483.10708618 -293.54745483]
[489.37579346 -279.79263306]
[491.31005859 -264.80099487]
[488.73785400 -249.90550232]
[481.88793945 -236.43070984]
[471.36938477 -225.57476807]
[458.11749268 -218.30299377]
[443.31060791 -215.26196289]
[428.26538086 -216.72210693]
[414.31958008 -222.55358887]
[404.72290039 -211.02519226]
[395.12622070 -199.49679565]
[385.52954102 -187.96839905]
[375.93289185 -176.44000244]
[377.77304077 -166.43116760]
[373.73199463 -156.85301208]
[364.91473389 -150.94276428]
[354.08123779 -150.83970642]
[344.21594238 -139.54031372]
[334.35064697 -128.24092102]
[324.48538208 -116.94153595]
[314.62008667 -105.64214325]
[319.04067993 -94.37699127]
[318.26089478 -82.22847748]
[312.36697388 -71.49462891]
[302.41836548 -64.23181152]
[290.25769043 -61.86086655]
[278.16961670 -64.88949585]
[268.04116821 -53.82537079]
[257.91275024 -42.76124191]
[247.78431702 -31.69711494]
[248.69581604 -16.87467384]
[238.58177185 -5.50979328]
[223.02844238 -4.65422058]
[212.90002441 6.40990639]
[202.77159119 17.47403336]
[192.64315796 28.53816032]
[190.45225525 35.56972504]
[182.32987976 39.67198944]
[172.07196045 50.61618042]
[161.81405640 61.56036758]
[151.55615234 72.50456238]
[141.29823303 83.44874573]
[144.45143127 98.11358643]
[158.30116272 103.87421417]
[172.15090942 109.63484192]
[186.00064087 115.39546967]
[199.85037231 121.15609741]
[213.70010376 126.91672516]
[226.32658386 118.05243683]
[241.74197388 117.44454956]
[255.02726746 125.28704071]
[261.94317627 139.07739258]
[260.28286743 154.41514587]
[250.57612610 166.40609741]
[235.92036438 171.22396851]
[220.99215698 167.33139038]
[210.55503845 155.97047424]
[207.93948364 140.76646423]
[194.08975220 135.00582886]
[180.24000549 129.24520874]
[166.39027405 123.48457336]
[152.54054260 117.72394562]
[138.69081116 111.96331787]
[135.14518738 126.30263519]
[126.14608002 139.41349792]
[112.20466614 149.20600891]
[94.62777710 153.82919312]
[98.97676849 168.18490601]
[103.32575989 182.54060364]
[107.67475128 196.89631653]
[118.64208984 203.64205933]
[121.98094177 215.66246033]
[116.43084717 226.38653564]
[120.61062622 240.79241943]
[124.79040527 255.19830322]
[128.97018433 269.60418701]
[133.14996338 284.01007080]
[137.58334351 298.33993530]
[142.26892090 312.58932495]
[152.20689392 316.90353394]
[158.02609253 325.78115845]
[158.01766968 336.17687988]
[152.42471313 344.67874146]
[156.77369690 359.03445435]
[161.12269592 373.39016724]
[165.47167969 387.74584961]
[169.82067871 402.10156250]
[183.87254333 409.33483887]
[188.61439514 424.41101074]
[181.23294067 438.38562012]
[166.10749817 442.96780396]
[152.21170044 435.43902588]
[147.78970337 420.26596069]
[155.46496582 406.45056152]
[151.11598206 392.09484863]
[146.76698303 377.73913574]
[142.41799927 363.38345337]
[138.06900024 349.02774048]
[123.03938293 336.83129883]
[128.01953125 317.27490234]
[123.33394623 303.02551270]
[120.40316010 301.12344360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 241]
[3 240]
[4 239]
[5 238]
[6 237]
[8 234]
[9 233]
[10 232]
[11 231]
[15 24]
[16 23]
[17 22]
[25 88]
[26 87]
[27 86]
[28 85]
[29 84]
[30 83]
[31 82]
[33 80]
[34 79]
[35 78]
[36 76]
[37 75]
[38 74]
[39 50]
[40 49]
[41 48]
[42 47]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[57 66]
[58 65]
[59 64]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[103 115]
[104 114]
[105 113]
[125 206]
[126 205]
[127 204]
[128 203]
[129 202]
[130 200]
[131 199]
[132 198]
[133 197]
[136 194]
[137 193]
[138 192]
[139 191]
[143 185]
[144 184]
[145 183]
[146 182]
[147 181]
[149 177]
[150 176]
[151 175]
[152 174]
[153 173]
[207 227]
[208 226]
[209 225]
[210 224]
[211 223]
[212 222]
[242 265]
[243 264]
[247 262]
[248 261]
[249 260]
[250 259]
[251 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
