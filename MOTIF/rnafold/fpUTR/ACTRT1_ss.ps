%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGGAGAUAAGAUUCAGAGGUUGAGGAUGGGGUGUCCUGGUGGACUGAAGGUAGCCUACUAGCUGUACAUGGGUGACAACUUGAAACUUCAGAACCCUGAAGUUUAAAAAAUUCUAAAGGUGCCUGUCAUCUCAGAGAGUGACGUAAGUGUUCUUUCUUUAUUUGGGGGAAGUCCAGGAGAACAUAUUACAGAC\
) } def
/len { sequence length } bind def

/coor [
[59.06284714 94.44908905]
[44.81177902 89.76858521]
[30.56071281 85.08808136]
[16.30964661 80.40758514]
[2.05857992 75.72708130]
[-7.87287712 85.58565521]
[-21.02110291 90.17928314]
[-34.79949570 88.66470337]
[-46.52341843 81.39440918]
[-53.93330383 69.83675385]
[-55.63004684 56.27969742]
[-69.80506134 51.37367630]
[-83.98007202 46.46765900]
[-98.15508270 41.56163788]
[-113.72688293 44.35979843]
[-123.22354126 32.88536072]
[-137.39854431 27.97934151]
[-151.57356262 23.07332230]
[-165.74858093 18.16730309]
[-179.92358398 13.26128292]
[-189.06773376 13.41085243]
[-194.28352356 8.16334152]
[-208.37890625 3.03303909]
[-222.47428894 -2.09726310]
[-236.64930725 -7.00328255]
[-250.90037537 -11.68378448]
[-265.15142822 -16.36428642]
[-279.40249634 -21.04478836]
[-293.65356445 -25.72528839]
[-307.22775269 -15.64233875]
[-323.97088623 -15.63313293]
[-337.28915405 -25.50335121]
[-342.05538940 -41.20686340]
[-356.37890625 -45.66066742]
[-370.70245361 -50.11447144]
[-385.02597046 -54.56827927]
[-399.38439941 -58.90831375]
[-413.77679443 -63.13430023]
[-428.16918945 -67.36029053]
[-442.59466553 -71.47196960]
[-457.05227661 -75.46907043]
[-472.41525269 -71.68891907]
[-482.62054443 -82.53794098]
[-497.07818604 -86.53504944]
[-511.53582764 -90.53215790]
[-526.89880371 -86.75200653]
[-537.10406494 -97.60102844]
[-551.56170654 -101.59813690]
[-556.63421631 -100.27903748]
[-561.24194336 -100.97487640]
[-564.69342041 -103.16899872]
[-566.60351562 -106.14472961]
[-580.85461426 -110.82523346]
[-596.38006592 -107.78036499]
[-606.05755615 -119.10268402]
[-620.30859375 -123.78318787]
[-634.55969238 -128.46368408]
[-650.49163818 -124.57724762]
[-661.62628174 -136.61686707]
[-656.50915527 -152.19721985]
[-640.40441895 -155.29057312]
[-629.87921143 -142.71475220]
[-615.62811279 -138.03425598]
[-601.37707520 -133.35374451]
[-586.87097168 -136.73339844]
[-576.17407227 -125.07630157]
[-561.92303467 -120.39579773]
[-547.56463623 -116.05576324]
[-533.10699463 -112.05866241]
[-518.77813721 -116.12471008]
[-507.53869629 -104.98979187]
[-493.08108521 -100.99268341]
[-478.62344360 -96.99557495]
[-464.29458618 -101.06163025]
[-453.05517578 -89.92670441]
[-438.59753418 -85.92959595]
[-431.30502319 -87.17864227]
[-423.94320679 -81.75268555]
[-409.55081177 -77.52669525]
[-395.15841675 -73.30070496]
[-387.84698486 -74.43389130]
[-380.57217407 -68.89181519]
[-366.24862671 -64.43800354]
[-351.92510986 -59.98419952]
[-337.60156250 -55.53039551]
[-327.68286133 -64.47573090]
[-314.53323364 -67.37248993]
[-301.56701660 -63.35893250]
[-292.20523071 -53.38197708]
[-288.97308350 -39.97635651]
[-274.72201538 -35.29585266]
[-260.47094727 -30.61535263]
[-246.21987915 -25.93485069]
[-231.96881104 -21.25434875]
[-227.36950684 -22.57658195]
[-221.89094543 -21.01604271]
[-217.34399414 -16.19265175]
[-203.24859619 -11.06235027]
[-189.15321350 -5.93204784]
[-175.01756287 -0.91372931]
[-160.84255981 3.99229026]
[-146.66754150 8.89830971]
[-132.49253845 13.80432892]
[-118.31752014 18.71034813]
[-103.75961304 15.56127644]
[-93.24906158 27.38662529]
[-79.07405090 32.29264450]
[-64.89904022 37.19866562]
[-50.72402573 42.10468292]
[-38.77904892 31.22941971]
[-22.88868523 27.83949661]
[-7.36721992 32.95204544]
[3.52234864 45.26252365]
[6.73908186 61.47601318]
[20.99014854 66.15651703]
[35.24121475 70.83702087]
[49.49228287 75.51751709]
[63.74334717 80.19802094]
[68.42586517 72.68334961]
[74.66159058 66.26666260]
[82.19480133 61.26783371]
[90.70420074 57.94750595]
[99.81658173 56.49374390]
[109.12316132 57.01180267]
[118.19791412 59.51756287]
[126.61710358 63.93503952]
[133.97901917 70.09810638]
[139.92309570 77.75648499]
[144.14750671 86.58578491]
[158.24290466 81.45548248]
[172.33828735 76.32518005]
[186.43368530 71.19487762]
[193.43655396 65.31292725]
[200.79360962 66.09693146]
[214.96861267 61.19091415]
[229.14363098 56.28489304]
[242.13406372 45.39062500]
[256.19869995 54.85755157]
[250.99520874 70.99323273]
[234.04965210 70.45990753]
[219.87463379 75.36592865]
[205.69963074 80.27194214]
[191.56398010 85.29026794]
[177.46859741 90.42057037]
[163.37319946 95.55086517]
[149.27781677 100.68116760]
[146.79035950 115.47348785]
[158.43255615 124.93177795]
[170.07475281 134.39006042]
[181.71694946 143.84835815]
[193.43382263 153.21398926]
[205.22460938 162.48637390]
[217.01541138 171.75875854]
[228.80621338 181.03114319]
[240.59700012 190.30352783]
[252.38780212 199.57591248]
[264.17858887 208.84829712]
[275.96939087 218.12068176]
[274.18093872 203.22767639]
[282.27154541 190.59667969]
[296.54782104 185.99369812]
[310.49273682 191.51998901]
[317.74038696 204.65281677]
[314.98229980 219.39706421]
[303.47750854 229.02201843]
[288.47708130 229.13360596]
[299.16751099 239.65573120]
[309.85791016 250.17784119]
[320.54833984 260.69998169]
[331.23873901 271.22210693]
[347.22811890 272.53317261]
[356.05233765 285.93139648]
[350.94219971 301.13882446]
[335.81774902 306.48962402]
[322.28121948 297.87908936]
[320.71661377 281.91250610]
[310.02621460 271.39038086]
[299.33578491 260.86825562]
[288.64538574 250.34613037]
[277.95495605 239.82402039]
[266.69702148 229.91148376]
[254.90621948 220.63909912]
[243.11541748 211.36671448]
[231.32461548 202.09432983]
[219.53382874 192.82194519]
[207.74302673 183.54956055]
[195.95222473 174.27717590]
[184.16143799 165.00479126]
[176.95259094 163.33941650]
[172.25866699 155.49055481]
[160.61647034 146.03225708]
[148.97427368 136.57397461]
[137.33207703 127.11568451]
[121.78473663 139.75865173]
[102.66512299 144.45109558]
[83.72103882 140.58287048]
[68.53511810 129.19252014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[4 115]
[5 114]
[11 109]
[12 108]
[13 107]
[14 106]
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[22 99]
[23 98]
[24 97]
[25 94]
[26 93]
[27 92]
[28 91]
[29 90]
[33 85]
[34 84]
[35 83]
[36 82]
[37 80]
[38 79]
[39 78]
[40 76]
[41 75]
[43 73]
[44 72]
[45 71]
[47 69]
[48 68]
[52 67]
[53 66]
[55 64]
[56 63]
[57 62]
[129 146]
[130 145]
[131 144]
[132 143]
[134 142]
[135 141]
[136 140]
[147 193]
[148 192]
[149 191]
[150 190]
[151 188]
[152 187]
[153 186]
[154 185]
[155 184]
[156 183]
[157 182]
[158 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
