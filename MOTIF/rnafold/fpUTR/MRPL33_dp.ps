%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL33)
} def

/sequence { (\
GCAGUUGUUGUUGGUUGGGGGCCUUUUGGCCGGUGACGGAGACUGCCCAGGUGUGGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007592716 ubox
1 11 0.022748588 ubox
1 15 0.003630490 ubox
1 46 0.994989029 ubox
2 7 0.008301760 ubox
2 10 0.025081521 ubox
2 13 0.019440941 ubox
2 14 0.003609824 ubox
2 17 0.016732500 ubox
2 45 0.998229874 ubox
3 9 0.024421499 ubox
3 12 0.019451027 ubox
3 16 0.016700398 ubox
3 44 0.998017074 ubox
4 8 0.016575030 ubox
4 11 0.015926802 ubox
4 15 0.015382447 ubox
4 43 0.997927216 ubox
4 46 0.021705943 ubox
5 10 0.008498012 ubox
5 14 0.014343409 ubox
5 39 0.008802185 ubox
5 41 0.018127882 ubox
5 42 0.995630703 ubox
5 45 0.021099368 ubox
6 13 0.014447206 ubox
6 38 0.024860221 ubox
6 40 0.021429107 ubox
6 41 0.977460677 ubox
7 12 0.011542610 ubox
7 37 0.040909078 ubox
7 43 0.034033148 ubox
7 46 0.003367480 ubox
8 36 0.040915849 ubox
8 39 0.581631542 ubox
8 40 0.047603827 ubox
8 41 0.030656363 ubox
8 42 0.040801264 ubox
8 45 0.003359072 ubox
9 35 0.040469555 ubox
9 38 0.727577239 ubox
9 39 0.034567671 ubox
9 40 0.044103387 ubox
9 41 0.046899216 ubox
10 34 0.032204402 ubox
10 37 0.741623956 ubox
10 43 0.003481668 ubox
11 33 0.037764120 ubox
11 36 0.740691152 ubox
11 39 0.029648192 ubox
11 40 0.635839827 ubox
11 41 0.007614501 ubox
11 42 0.003429123 ubox
12 18 0.004623069 ubox
12 19 0.004985809 ubox
12 32 0.043360574 ubox
12 35 0.730459652 ubox
12 38 0.041855174 ubox
12 39 0.639029726 ubox
12 40 0.012684914 ubox
13 31 0.049141342 ubox
13 34 0.656636193 ubox
13 37 0.039791916 ubox
14 30 0.049114081 ubox
14 34 0.046075967 ubox
14 37 0.665738291 ubox
15 29 0.048997412 ubox
15 33 0.063713062 ubox
15 36 0.665344459 ubox
16 28 0.047446357 ubox
16 32 0.096058890 ubox
16 35 0.647635159 ubox
16 38 0.004686844 ubox
16 49 0.006326966 ubox
17 23 0.008131411 ubox
17 24 0.008043516 ubox
17 25 0.007080359 ubox
17 26 0.003992300 ubox
17 27 0.044820591 ubox
17 31 0.041444839 ubox
17 34 0.327497655 ubox
17 37 0.005052590 ubox
17 48 0.006801069 ubox
18 22 0.008016714 ubox
18 23 0.008300748 ubox
18 24 0.008755487 ubox
18 25 0.004646192 ubox
18 26 0.044479009 ubox
18 27 0.005105323 ubox
18 30 0.029463232 ubox
18 31 0.024862803 ubox
18 47 0.006800514 ubox
19 23 0.008758183 ubox
19 24 0.004129455 ubox
19 25 0.041445229 ubox
19 26 0.005554310 ubox
19 30 0.017106291 ubox
19 31 0.094605398 ubox
19 46 0.006780779 ubox
20 24 0.026982639 ubox
20 25 0.004794136 ubox
20 30 0.067213766 ubox
20 31 0.992334881 ubox
21 30 0.995921640 ubox
22 29 0.998665993 ubox
23 28 0.998125256 ubox
24 28 0.003731311 ubox
30 39 0.003746826 ubox
31 38 0.003923947 ubox
32 37 0.005597196 ubox
32 44 0.006109050 ubox
32 61 0.049125462 ubox
33 43 0.006361745 ubox
33 60 0.049486267 ubox
34 42 0.006339353 ubox
34 59 0.049479072 ubox
35 58 0.049485907 ubox
36 57 0.049474670 ubox
37 56 0.049409846 ubox
38 47 0.003723502 ubox
38 61 0.012762955 ubox
39 46 0.003722650 ubox
39 60 0.012838959 ubox
41 58 0.018769746 ubox
42 52 0.047178093 ubox
42 57 0.018810036 ubox
43 50 0.011709894 ubox
43 51 0.047402636 ubox
43 56 0.018819263 ubox
44 49 0.011056968 ubox
44 50 0.046826626 ubox
44 55 0.018719274 ubox
44 59 0.003655079 ubox
45 52 0.005401846 ubox
45 54 0.018505675 ubox
45 58 0.004440252 ubox
46 51 0.005578734 ubox
46 53 0.018497017 ubox
47 55 0.003337281 ubox
47 56 0.214921079 ubox
48 55 0.216061108 ubox
49 54 0.207179601 ubox
50 58 0.006778623 ubox
50 61 0.965449710 ubox
51 57 0.005576341 ubox
51 60 0.973761608 ubox
52 59 0.973387998 ubox
53 58 0.970911813 ubox
53 60 0.007312712 ubox
54 59 0.006908532 ubox
55 61 0.008296866 ubox
56 60 0.008281175 ubox
1 46 0.9500000 lbox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
