%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGGGCGUGCCGGGGCGGGGCGUAGUACGGACUGGGCCUGGCCUGGGGCGUCCCCGCGAAGCCUGGGCCUGUCAGGCGGUUCCGUCCGGGUCUCGGCCACCGUCGAGUUCCGUCGAGUUCCGUCCCGGCCCUGCUCACAGCAGCGCCCUCGGAGCGCCCAGCACCUGCGGCCGGCCAGGCAGCGCGAUCCUGCGGCGUCUGGCCAUCCCGAAUGCU\
) } def
/len { sequence length } bind def

/coor [
[88.99402618 180.55339050]
[87.50387573 165.62759399]
[86.01372528 150.70178223]
[72.27037048 144.69177246]
[60.30011368 153.73129272]
[48.32985306 162.77081299]
[36.35959625 171.81033325]
[24.38933754 180.84985352]
[12.41907883 189.88937378]
[0.51337183 199.01374817]
[-11.32718182 208.22250366]
[-23.16773415 217.43127441]
[-28.01597404 225.16398621]
[-35.24268341 226.68534851]
[-47.21294403 235.72486877]
[-53.56295395 250.21582031]
[-68.38230133 251.71122742]
[-80.35256195 260.75073242]
[-92.32281494 269.79025269]
[-104.29307556 278.82977295]
[-110.64308167 293.32073975]
[-125.46243286 294.81613159]
[-137.43269348 303.85565186]
[-149.40295410 312.89517212]
[-161.37321472 321.93469238]
[-167.72322083 336.42565918]
[-182.54257202 337.92105103]
[-194.51281738 346.96057129]
[-206.48307800 356.00009155]
[-218.45333862 365.03961182]
[-224.34373474 380.34436035]
[-240.58311462 382.62786865]
[-250.46580505 369.54107666]
[-243.82534790 354.54653931]
[-227.49285889 353.06936646]
[-215.52259827 344.02984619]
[-203.55233765 334.99032593]
[-191.58209229 325.95080566]
[-186.08827209 312.10641479]
[-170.41271973 309.96444702]
[-158.44247437 300.92492676]
[-146.47221375 291.88540649]
[-134.50195312 282.84588623]
[-129.00813293 269.00149536]
[-113.33259583 266.85952759]
[-101.36233521 257.82000732]
[-89.39207458 248.78048706]
[-77.42182159 239.74096680]
[-71.92800140 225.89657593]
[-56.25246048 223.75460815]
[-44.28220367 214.71508789]
[-32.37649536 205.59071350]
[-20.53594398 196.38195801]
[-8.69538975 187.17318726]
[-5.34765673 180.59045410]
[3.37955880 177.91911316]
[15.34981728 168.87959290]
[27.32007599 159.84007263]
[39.29033279 150.80055237]
[51.26059341 141.76103210]
[63.23085022 132.72151184]
[54.91696930 122.06328583]
[49.69063187 109.31255341]
[48.07089615 95.36306763]
[50.31845856 81.23454285]
[37.18826675 73.98209381]
[24.05807304 66.72963715]
[10.92787933 59.47718811]
[-2.20231295 52.22473907]
[-15.33250618 44.97229004]
[-31.08379364 48.01802444]
[-43.19177246 37.49298859]
[-42.36823654 21.47108650]
[-29.24493599 12.24295044]
[-13.88893890 16.88761711]
[-8.08005524 31.84209633]
[5.05013752 39.09454727]
[18.18033028 46.34699631]
[31.31052399 53.59944534]
[44.44071579 60.85189819]
[57.57090759 68.10434723]
[63.58801270 63.62724304]
[51.35338593 54.94888306]
[55.82646561 40.63135910]
[70.82550049 40.46133804]
[75.62221527 54.67303085]
[81.63932037 50.19592667]
[78.46504974 35.53564072]
[68.06691742 27.91215515]
[65.72180176 15.64160347]
[72.15066528 5.40028048]
[69.18511200 -9.30364704]
[66.21955109 -24.00757408]
[63.25399780 -38.71150208]
[52.94107056 -50.70959091]
[58.00942230 -64.71533966]
[55.04386520 -79.41926575]
[52.07830811 -94.12319183]
[49.11275101 -108.82712555]
[46.14719391 -123.53105164]
[43.18163681 -138.23497009]
[31.93615150 -150.17109680]
[36.90891266 -165.79812622]
[52.98437119 -169.04029846]
[63.62547302 -156.56234741]
[57.88556290 -141.20053101]
[60.85112000 -126.49660492]
[63.81667709 -111.79267883]
[66.78223419 -97.08875275]
[69.74778748 -82.38482666]
[72.71334839 -67.68090057]
[82.81415558 -56.73453140]
[77.95792389 -41.67705917]
[80.92347717 -26.97313118]
[83.88903809 -12.26920319]
[86.85459137 2.43472362]
[99.15272522 14.95800304]
[93.12533569 32.36136627]
[96.29960632 47.02165222]
[117.94049835 51.90541458]
[134.98579407 64.90294647]
[146.14247131 54.87655640]
[157.29914856 44.85016632]
[168.45582581 34.82377625]
[179.61250305 24.79738617]
[190.76918030 14.77099609]
[189.08016968 3.01194715]
[193.23144531 -7.99089193]
[202.08474731 -15.54804420]
[213.36816406 -17.87212563]
[224.25836182 -14.49960709]
[235.69555664 -24.20479584]
[247.13273621 -33.90998459]
[252.64895630 -48.73840332]
[267.35937500 -51.07357788]
[278.79656982 -60.77876663]
[290.23373413 -70.48395538]
[301.67092896 -80.18914032]
[313.10812378 -89.89433289]
[321.27307129 -104.75266266]
[337.81103516 -101.01998901]
[338.80239868 -84.09505463]
[322.81332397 -78.45714569]
[311.37612915 -68.75195312]
[299.93893433 -59.04676437]
[288.50173950 -49.34157562]
[277.06454468 -39.63638687]
[272.36639404 -25.50214958]
[256.83792114 -22.47279549]
[245.40074158 -12.76760674]
[233.96354675 -3.06241751]
[233.56469727 15.24470139]
[219.66754150 27.65385246]
[200.79557800 25.92767525]
[189.63890076 35.95406723]
[178.48222351 45.98045731]
[167.32553101 56.00684738]
[156.16885376 66.03323364]
[145.01217651 76.05963135]
[150.03100586 90.19509125]
[165.01245117 90.94109344]
[179.99388123 91.68708801]
[194.98023987 92.32658386]
[209.97077942 92.85955048]
[224.96130371 93.39251709]
[241.00526428 87.91277313]
[250.71226501 101.81278229]
[240.04263306 114.98834229]
[224.42834473 108.38304138]
[209.43780518 107.85007477]
[194.44728088 107.31711578]
[187.65603638 110.21864319]
[179.24787903 106.66852570]
[164.26644897 105.92253113]
[149.28500366 105.17652893]
[144.30377197 116.08771515]
[137.10389709 124.94998932]
[147.97105408 135.28947449]
[158.83819580 145.62896729]
[169.70535278 155.96846008]
[180.57250977 166.30793762]
[191.43965149 176.64743042]
[202.30680847 186.98692322]
[213.17396545 197.32640076]
[228.74925232 197.10760498]
[239.62280273 207.74812317]
[239.73541260 222.59814453]
[250.60255432 232.93762207]
[261.46969604 243.27711487]
[272.33685303 253.61660767]
[288.39620972 256.93762207]
[293.29223633 272.58883667]
[281.98831177 284.46966553]
[266.11297607 280.35806274]
[261.99737549 264.48376465]
[251.13021851 254.14427185]
[240.26307678 243.80477905]
[229.39591980 233.46528625]
[214.55868530 234.09136963]
[203.39054871 223.76046753]
[202.83447266 208.19355774]
[191.96731567 197.85406494]
[181.10017395 187.51458740]
[170.23301697 177.17509460]
[159.36585999 166.83560181]
[148.49871826 156.49610901]
[137.63156128 146.15663147]
[126.76441193 135.81713867]
[119.44157410 141.92691040]
[110.72240448 146.49758911]
[100.93952179 149.21163940]
[102.42967224 164.13743591]
[103.91982269 179.06323242]
[117.38481903 186.77514648]
[123.71455383 200.94250488]
[120.47512817 216.11767578]
[108.91215515 226.46548462]
[93.47183990 228.00700378]
[80.09129333 220.14947510]
[73.91561890 205.91429138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[10 54]
[11 53]
[12 52]
[14 51]
[15 50]
[17 48]
[18 47]
[19 46]
[20 45]
[22 43]
[23 42]
[24 41]
[25 40]
[27 38]
[28 37]
[29 36]
[30 35]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[87 119]
[88 118]
[91 116]
[92 115]
[93 114]
[94 113]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[121 159]
[122 158]
[123 157]
[124 156]
[125 155]
[126 154]
[131 151]
[132 150]
[133 149]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
[160 175]
[161 174]
[162 173]
[163 171]
[164 170]
[165 169]
[177 208]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[183 202]
[184 201]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
