%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUUCCGGGCGCCCUUUACCAACAUGGCUGCUGACGCCACGCCUUCUGGGACUCGUAGUCCGGUCCUCGCGCGCUUUCUUACCUAACUGGGGCGCUCUGGGUGUUGUACGAAAGCGCGUCUGCGGCCGCAAUGUCUGCUGAGAGUUGUAGUUCUGUGCCCUAUCACGGCCACUCCCAUUUCUGGUGCCGUCACGGGACAGAGCAGUCGGUGACAGGACAGAGCAGUCGGUGACGGGACACAGUGGUUGGUGAC\
GGGACAGAGCGGUCGGUGACAGCCUCAAGGGCUUCAGCACCGCGCCC\
) } def
/len { sequence length } bind def

/coor [
[77.07933044 250.61822510]
[73.68186951 265.66683960]
[62.67182922 276.47344971]
[47.56247711 279.58969116]
[33.17514420 274.02117920]
[24.10078239 261.54483032]
[23.23498535 246.14176941]
[30.85402679 232.72708130]
[44.52669907 225.58134460]
[45.76946640 210.63291931]
[47.01223373 195.68447876]
[48.25500488 180.73605347]
[49.49777222 165.78762817]
[50.74054337 150.83920288]
[45.82107544 145.17802429]
[37.56378555 157.70068359]
[29.30649567 170.22335815]
[25.27183151 184.67054749]
[13.63736439 194.13835144]
[-1.32827592 195.15304565]
[-14.13426208 187.34237671]
[-20.08213615 173.57200623]
[-16.98965073 158.89425659]
[-5.99142361 148.69430542]
[8.87772560 146.71453857]
[22.42993736 140.28511047]
[35.98214722 133.85568237]
[31.06268311 128.19450378]
[16.08706665 127.33958435]
[1.11144924 126.48466492]
[-13.86416817 125.62974548]
[-28.83978462 124.77482605]
[-43.81540298 123.91990662]
[-58.03412628 130.85809326]
[-70.29972839 122.40798187]
[-85.27534485 121.55306244]
[-100.25096130 120.69814301]
[-115.22657776 119.84321594]
[-130.20219421 118.98829651]
[-127.39393616 131.34164429]
[-132.15107727 145.68576050]
[-145.11798096 158.09844971]
[-159.05659485 163.64054871]
[-172.99520874 169.18266296]
[-174.80020142 177.22070312]
[-179.55607605 183.83262634]
[-186.44261169 188.00357056]
[-194.32026672 189.12895203]
[-201.91847229 187.10127258]
[-208.04055786 182.31565857]
[-222.19696045 187.27508545]
[-236.35337830 192.23452759]
[-250.50979614 197.19395447]
[-264.66619873 202.15338135]
[-271.68823242 207.91610718]
[-278.99517822 207.09001160]
[-293.20227051 211.90238953]
[-301.56781006 225.59169006]
[-317.50366211 227.44331360]
[-328.78515625 216.03686523]
[-326.75814819 200.12239075]
[-312.97753906 191.90811157]
[-298.01464844 197.69532776]
[-283.80758667 192.88293457]
[-269.62564087 187.99696350]
[-255.46922302 183.03753662]
[-241.31280518 178.07810974]
[-227.15640259 173.11868286]
[-212.99998474 168.15925598]
[-200.46105957 150.49966431]
[-178.53732300 155.24403381]
[-164.59870911 149.70193481]
[-150.66007996 144.15982056]
[-150.50457764 136.66143799]
[-150.03804016 114.16627502]
[-163.73487854 108.05102539]
[-177.43173218 101.93576813]
[-191.12858582 95.82051086]
[-204.82542419 89.70526123]
[-218.52227783 83.59000397]
[-234.27790833 85.02900696]
[-242.74510193 72.77519989]
[-256.44195557 66.65995026]
[-270.13879395 60.54469299]
[-283.55279541 68.11903381]
[-298.67794800 66.36295319]
[-309.73797607 56.15808105]
[-312.63354492 41.57199860]
[-326.33038330 35.45674515]
[-340.02722168 29.34149170]
[-355.78286743 30.78049469]
[-364.25006104 18.52668571]
[-377.94689941 12.41143227]
[-393.38394165 16.77923965]
[-406.33920288 7.31663132]
[-406.87451172 -8.71748829]
[-394.57925415 -19.02311516]
[-378.88525391 -15.69465446]
[-371.83166504 -1.28541660]
[-358.13479614 4.82983780]
[-343.35885620 2.95342898]
[-333.91198730 15.64464188]
[-320.21511841 21.75989532]
[-306.51828003 27.87515068]
[-293.72546387 20.29348755]
[-278.74404907 21.71537590]
[-267.33923340 31.80416298]
[-264.02355957 46.84784317]
[-250.32669067 52.96309662]
[-236.62985229 59.07835388]
[-221.85391235 57.20194244]
[-212.40702820 69.89315796]
[-198.71017456 76.00840759]
[-185.01332092 82.12366486]
[-171.31648254 88.23892212]
[-157.61962891 94.35417175]
[-143.92277527 100.46942902]
[-129.34727478 104.01268005]
[-114.37165833 104.86759949]
[-99.39604187 105.72252655]
[-84.42042542 106.57744598]
[-69.44480133 107.43236542]
[-56.29723740 100.43302917]
[-42.96048355 108.94429016]
[-27.98486519 109.79920959]
[-13.00924778 110.65412903]
[1.96636987 111.50904846]
[16.94198799 112.36396790]
[31.91760445 113.21888733]
[41.51964951 101.69496918]
[37.97639465 87.11946106]
[34.43313980 72.54396057]
[30.88988686 57.96845245]
[27.34663391 43.39294815]
[22.30237389 35.83826447]
[23.84303474 28.64796066]
[20.45109177 14.03650093]
[17.05914879 -0.57495725]
[5.47127771 -12.17897701]
[9.98744869 -27.94400787]
[25.96181297 -31.65233994]
[36.96131516 -19.48915672]
[31.67060852 -3.96690011]
[35.06254959 10.64455891]
[38.45449448 25.25601768]
[41.92213821 39.84969711]
[45.46539307 54.42520142]
[49.00864792 69.00070953]
[52.55189896 83.57621002]
[56.09515381 98.15171814]
[89.07812500 63.40320969]
[126.36208344 81.09540558]
[140.24249268 75.40908051]
[154.12289429 69.72275543]
[168.00331116 64.03643036]
[181.88371277 58.35010529]
[195.76411438 52.66378021]
[209.64453125 46.97745132]
[216.35848999 40.85859299]
[223.69844055 41.30495071]
[237.63706970 35.76284409]
[251.57568359 30.22073746]
[257.36785889 18.73244476]
[269.05242920 14.38909435]
[280.20223999 18.99988556]
[294.19757080 13.60259342]
[308.19290161 8.20530128]
[322.18823242 2.80800915]
[336.15539551 -2.66176367]
[350.09402466 -8.20387077]
[364.03262329 -13.74597740]
[377.97125244 -19.28808403]
[391.90985107 -24.83019066]
[405.84848022 -30.37229729]
[419.78710938 -35.91440582]
[419.91363525 -42.98911285]
[421.74533081 -49.80109787]
[425.16278076 -55.94692993]
[429.95291138 -61.06529236]
[435.82235718 -64.85822296]
[442.41537476 -67.10846710]
[449.33538818 -67.69187164]
[456.16888428 -66.58422089]
[462.51010132 -63.86202621]
[467.98507690 -59.69735336]
[472.27374268 -54.34698105]
[486.62359619 -58.71520233]
[497.57244873 -70.13596344]
[512.00128174 -66.44038391]
[526.35113525 -70.80860138]
[540.70104980 -75.17682648]
[555.05090332 -79.54504395]
[569.40075684 -83.91326904]
[583.75061035 -88.28148651]
[598.10046387 -92.64970398]
[604.82458496 -103.61861420]
[616.82879639 -106.97895050]
[627.55828857 -101.46023560]
[641.95269775 -105.67943573]
[656.34704590 -109.89864349]
[660.97290039 -119.67414093]
[670.01379395 -125.19983673]
[680.38549805 -124.87169647]
[688.70037842 -119.03680420]
[703.17913818 -122.95663452]
[716.79510498 -137.86489868]
[735.24255371 -131.97685242]
[749.63696289 -136.19606018]
[764.03131104 -140.41526794]
[769.12573242 -155.07223511]
[781.88153076 -163.90792847]
[797.39385986 -163.52481079]
[809.69793701 -154.07023621]
[814.06256104 -139.17964172]
[808.80950928 -124.57879639]
[795.95861816 -115.88201141]
[780.45135498 -116.43337250]
[768.25054932 -126.02088165]
[753.85614014 -121.80167389]
[739.46179199 -117.58246613]
[735.41845703 -108.26393127]
[726.74511719 -102.56721497]
[716.14935303 -102.55753326]
[707.09899902 -108.47785950]
[692.62023926 -104.55802917]
[679.96386719 -89.90215302]
[660.56628418 -95.50425720]
[646.17187500 -91.28505707]
[631.77752686 -87.06584930]
[620.33172607 -73.73560333]
[602.46868896 -78.29984283]
[588.11883545 -73.93161774]
[573.76898193 -69.56340027]
[559.41912842 -65.19518280]
[545.06927490 -60.82695770]
[530.71936035 -56.45873642]
[516.36950684 -52.09051895]
[506.44708252 -40.98220062]
[490.99182129 -44.36533737]
[476.64196777 -39.99711609]
[468.01748657 -18.61355972]
[446.06701660 -10.72223568]
[425.32919312 -21.97578812]
[411.39059448 -16.43368149]
[397.45196533 -10.89157391]
[383.51336670 -5.34946728]
[369.57473755 0.19263980]
[355.63610840 5.73474646]
[341.69750977 11.27685356]
[336.66802979 16.64140129]
[327.58554077 16.80333900]
[313.59020996 22.20063019]
[299.59487915 27.59792137]
[285.59954834 32.99521255]
[275.29751587 47.22792435]
[257.11779785 44.15935516]
[243.17916870 49.70146179]
[229.24055481 55.24356842]
[215.33085632 60.85786057]
[201.45043945 66.54418945]
[187.57003784 72.23051453]
[173.68963623 77.91683960]
[159.80921936 83.60316467]
[145.92881775 89.28948975]
[132.04841614 94.97581482]
[133.93200684 107.45183563]
[130.82321167 120.54251862]
[122.57823944 132.21847534]
[109.88127899 140.45362854]
[94.21141052 143.56080627]
[100.25557709 157.28916931]
[106.29973602 171.01754761]
[112.34390259 184.74591064]
[130.27665710 190.97300720]
[137.78630066 208.05773926]
[130.50341797 224.89134216]
[136.83094788 238.49143982]
[143.15846252 252.09152222]
[149.48599243 265.69161987]
[155.81352234 279.29171753]
[167.97706604 291.10205078]
[159.99548340 306.05969238]
[143.41287231 302.53070068]
[142.21342468 285.61923218]
[135.88591003 272.01913452]
[129.55838013 258.41906738]
[123.23085022 244.81896973]
[116.90332794 231.21887207]
[105.64887238 229.73867798]
[96.39728546 222.95707703]
[91.49738312 212.45326233]
[92.26134491 200.76820374]
[98.61553955 190.79006958]
[92.57137299 177.06170654]
[86.52720642 163.33334351]
[80.48303986 149.60498047]
[65.68897247 152.08197021]
[64.44620514 167.03039551]
[63.20343399 181.97882080]
[61.96066284 196.92724609]
[60.71789551 211.87568665]
[59.47512436 226.82411194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 302]
[10 301]
[11 300]
[12 299]
[13 298]
[14 297]
[28 129]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[35 122]
[36 121]
[37 120]
[38 119]
[39 118]
[42 73]
[43 72]
[44 71]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[56 64]
[57 63]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
[82 110]
[83 109]
[84 108]
[88 104]
[89 103]
[90 102]
[92 100]
[93 99]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[136 145]
[137 144]
[138 143]
[152 265]
[153 264]
[154 263]
[155 262]
[156 261]
[157 260]
[158 259]
[160 258]
[161 257]
[162 256]
[165 254]
[166 253]
[167 252]
[168 251]
[169 249]
[170 248]
[171 247]
[172 246]
[173 245]
[174 244]
[175 243]
[186 240]
[187 239]
[189 237]
[190 236]
[191 235]
[192 234]
[193 233]
[194 232]
[195 231]
[198 229]
[199 228]
[200 227]
[204 225]
[205 224]
[207 220]
[208 219]
[209 218]
[270 296]
[271 295]
[272 294]
[273 293]
[276 288]
[277 287]
[278 286]
[279 285]
[280 284]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
