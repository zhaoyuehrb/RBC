%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IRS1)
} def

/sequence { (\
GGUUGUUUUUCGGAGCCUCCCUCUGCUCAGCGUUGGUGGUGGCGGUGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006223307 ubox
1 9 0.005389637 ubox
1 10 0.006997869 ubox
1 11 0.051654896 ubox
1 17 0.528375647 ubox
1 18 0.012306071 ubox
1 19 0.017634790 ubox
1 20 0.611683483 ubox
1 21 0.128805641 ubox
1 22 0.009033672 ubox
2 7 0.008207811 ubox
2 8 0.007613335 ubox
2 9 0.010233788 ubox
2 10 0.049221909 ubox
2 16 0.529594985 ubox
2 17 0.014266670 ubox
2 18 0.016001795 ubox
2 19 0.614996268 ubox
2 20 0.122763038 ubox
2 21 0.010273967 ubox
2 31 0.007669319 ubox
2 49 0.006310256 ubox
2 52 0.511160480 ubox
3 13 0.039257660 ubox
3 14 0.051123447 ubox
3 15 0.525541319 ubox
3 30 0.007673137 ubox
3 48 0.006209259 ubox
3 51 0.515948108 ubox
4 12 0.097294916 ubox
4 13 0.059883078 ubox
4 14 0.505395773 ubox
4 29 0.007682510 ubox
4 47 0.005460134 ubox
4 50 0.519315230 ubox
5 11 0.130413991 ubox
5 16 0.629340170 ubox
5 28 0.007674445 ubox
5 46 0.004587092 ubox
5 49 0.520317257 ubox
5 52 0.012666276 ubox
6 13 0.080909651 ubox
6 14 0.046575168 ubox
6 15 0.628633096 ubox
6 48 0.512628722 ubox
6 51 0.012496600 ubox
7 12 0.072399122 ubox
7 13 0.053376592 ubox
7 14 0.614400705 ubox
7 15 0.022743263 ubox
7 45 0.003189607 ubox
7 47 0.471160903 ubox
7 48 0.066226488 ubox
7 50 0.011373144 ubox
7 51 0.005120804 ubox
8 12 0.044705148 ubox
8 13 0.568814125 ubox
8 14 0.032225155 ubox
8 15 0.004619402 ubox
8 44 0.003233911 ubox
8 45 0.012411283 ubox
8 47 0.092111378 ubox
8 48 0.005972203 ubox
8 50 0.006378789 ubox
8 51 0.003356886 ubox
9 13 0.034580673 ubox
9 14 0.008284025 ubox
9 44 0.009542841 ubox
9 45 0.073748782 ubox
9 47 0.016570249 ubox
9 48 0.004198883 ubox
9 50 0.004171376 ubox
10 14 0.004111371 ubox
10 44 0.036312574 ubox
10 45 0.477085796 ubox
10 47 0.007957637 ubox
10 48 0.030912089 ubox
11 25 0.024082614 ubox
11 44 0.502947968 ubox
11 47 0.068333318 ubox
12 18 0.004820596 ubox
12 19 0.010335254 ubox
12 20 0.131430143 ubox
12 21 0.105175405 ubox
12 22 0.008493775 ubox
12 24 0.031690376 ubox
12 43 0.500218493 ubox
12 46 0.065686682 ubox
13 17 0.005182979 ubox
13 18 0.008163917 ubox
13 19 0.131941414 ubox
13 20 0.104826806 ubox
13 21 0.009067427 ubox
13 23 0.035688474 ubox
13 28 0.008242987 ubox
14 18 0.114984148 ubox
14 22 0.036249061 ubox
14 27 0.008697631 ubox
15 21 0.036063716 ubox
15 26 0.008770395 ubox
15 40 0.499175002 ubox
15 43 0.130530899 ubox
15 46 0.041356598 ubox
15 49 0.121196684 ubox
15 52 0.038895297 ubox
16 25 0.008765189 ubox
16 39 0.500729892 ubox
16 42 0.132772012 ubox
16 45 0.041634069 ubox
16 48 0.121330933 ubox
16 51 0.034845764 ubox
17 38 0.500243753 ubox
17 39 0.012008848 ubox
17 41 0.132629072 ubox
17 44 0.041604239 ubox
17 47 0.121201552 ubox
17 51 0.055497300 ubox
18 36 0.011657347 ubox
18 38 0.014276994 ubox
18 39 0.052498573 ubox
18 42 0.004391857 ubox
18 44 0.003682806 ubox
18 45 0.055311833 ubox
18 47 0.003435350 ubox
18 48 0.007951005 ubox
18 50 0.075926112 ubox
19 35 0.012093007 ubox
19 36 0.341850091 ubox
19 38 0.055918603 ubox
19 39 0.117271616 ubox
19 41 0.004531743 ubox
19 42 0.033196429 ubox
19 44 0.058574393 ubox
19 45 0.079180366 ubox
19 47 0.010498271 ubox
19 48 0.045002926 ubox
20 35 0.336156275 ubox
20 36 0.368639712 ubox
20 38 0.116866256 ubox
20 39 0.025236265 ubox
20 41 0.032755398 ubox
20 42 0.065819830 ubox
20 44 0.077574396 ubox
20 45 0.069270395 ubox
20 47 0.044725924 ubox
20 48 0.171313365 ubox
21 30 0.029016462 ubox
21 35 0.373903539 ubox
21 36 0.082248276 ubox
21 38 0.025582352 ubox
21 39 0.006455177 ubox
21 41 0.066890629 ubox
21 42 0.059687367 ubox
21 44 0.070228198 ubox
21 45 0.005292169 ubox
21 47 0.174878691 ubox
21 48 0.013888182 ubox
21 51 0.017687799 ubox
22 29 0.027448594 ubox
22 35 0.075745588 ubox
22 36 0.076158464 ubox
22 38 0.005769910 ubox
22 39 0.005606391 ubox
22 41 0.056223772 ubox
22 42 0.012433766 ubox
22 44 0.004617961 ubox
22 45 0.004716223 ubox
22 47 0.013342325 ubox
22 50 0.012556753 ubox
23 30 0.041608552 ubox
23 35 0.084019817 ubox
23 36 0.026655259 ubox
23 38 0.006205217 ubox
23 39 0.094904933 ubox
23 41 0.013140905 ubox
23 42 0.079622411 ubox
23 44 0.005253136 ubox
23 45 0.182787984 ubox
23 51 0.808801818 ubox
24 29 0.039061658 ubox
24 32 0.459240651 ubox
24 35 0.024110273 ubox
24 38 0.094680991 ubox
24 41 0.079424502 ubox
24 44 0.182957226 ubox
24 50 0.822116902 ubox
25 31 0.500009030 ubox
25 33 0.100929027 ubox
25 34 0.017160980 ubox
25 37 0.095986021 ubox
25 40 0.081156282 ubox
25 43 0.185014251 ubox
25 49 0.824845821 ubox
25 52 0.013300912 ubox
26 30 0.496478765 ubox
26 32 0.103710077 ubox
26 36 0.096195187 ubox
26 39 0.081393771 ubox
26 42 0.184118950 ubox
26 48 0.819811386 ubox
26 51 0.013608811 ubox
27 35 0.052640774 ubox
27 36 0.010852973 ubox
27 38 0.062497351 ubox
27 39 0.010825469 ubox
27 41 0.084924649 ubox
27 42 0.018399878 ubox
27 47 0.135022285 ubox
27 48 0.091472789 ubox
27 50 0.011002004 ubox
28 35 0.081513505 ubox
28 38 0.051057680 ubox
28 41 0.162435628 ubox
28 47 0.813790141 ubox
29 34 0.074319244 ubox
29 37 0.045216082 ubox
29 40 0.163618429 ubox
29 46 0.822390223 ubox
30 37 0.104056878 ubox
30 40 0.029097918 ubox
30 43 0.018560858 ubox
30 46 0.010191450 ubox
31 36 0.110616539 ubox
31 38 0.161176768 ubox
31 39 0.032822987 ubox
31 42 0.018546570 ubox
31 44 0.824790539 ubox
31 45 0.008352124 ubox
32 37 0.104519805 ubox
32 43 0.825112170 ubox
32 49 0.007267834 ubox
32 52 0.003312690 ubox
33 42 0.823955186 ubox
33 48 0.007271531 ubox
33 51 0.003333341 ubox
34 38 0.006006273 ubox
34 41 0.771174038 ubox
34 47 0.007149454 ubox
34 50 0.003331128 ubox
35 40 0.617034990 ubox
35 46 0.007202369 ubox
35 49 0.003273263 ubox
36 43 0.004792905 ubox
37 42 0.005348366 ubox
37 44 0.007328460 ubox
38 43 0.007391522 ubox
42 49 0.004638077 ubox
43 48 0.004682665 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
