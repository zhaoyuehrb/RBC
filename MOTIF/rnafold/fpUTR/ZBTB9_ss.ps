%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGGUCUGGGACGGAGCUGUAGCGGCACUGUAACUGCGAGGGCAGCGCCGCGUGUGUAACGGCGGGGGCGUGUCGGCGGGAAGGACAAUCGGGCCGGGACUCGCGGUGUCCGGGUGACCGCGGCUUCCCGGGAGCAGACCUCUGUGGGCACUGUGAGGCGGAACGGAGCGGCGGGGCAGGAGCUGUUCUGGGCAGCCUUCAUCCCGCGUGGAGUCUACCCCCAAGCCCUUCUCCUCUUCCCAAUUCUUGUCAC\
CUUCGAGGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[143.45826721 508.44409180]
[128.72302246 514.78857422]
[114.64395905 507.09704590]
[112.02131653 491.26980591]
[122.86696625 479.44815063]
[123.56743622 464.46453857]
[124.26791382 449.48089600]
[124.96838379 434.49725342]
[123.91815186 419.53405762]
[121.13153076 404.79519653]
[118.34490204 390.05630493]
[115.55828094 375.31741333]
[112.77165222 360.57852173]
[99.13492584 346.84158325]
[106.18335724 327.93133545]
[103.05326080 313.26153564]
[99.92315674 298.59176636]
[96.79306030 283.92196655]
[89.73378754 281.38885498]
[89.27836609 296.38195801]
[74.87834930 300.58190918]
[66.43412781 288.18450928]
[75.61524963 276.32263184]
[68.55597687 273.78952026]
[56.81291580 283.12228394]
[45.06985474 292.45504761]
[33.32679749 301.78781128]
[21.58373642 311.12057495]
[15.59401512 325.76412964]
[0.81617951 327.62554932]
[-10.92687988 336.95831299]
[-22.66993904 346.29107666]
[-34.41299820 355.62384033]
[-36.64260483 368.30456543]
[-46.58609390 375.83779907]
[-58.60017014 374.63076782]
[-70.45142365 383.82577515]
[-79.25925446 398.31225586]
[-95.61785889 393.85888672]
[-95.86705017 376.90676880]
[-79.64641571 371.97451782]
[-67.79515839 362.77954102]
[-62.03104401 346.18844604]
[-43.74576569 343.88079834]
[-32.00270844 334.54803467]
[-20.25964737 325.21527100]
[-8.51658821 315.88247681]
[-3.36680961 301.90646362]
[12.25096798 299.37753296]
[23.99402809 290.04476929]
[35.73708725 280.71197510]
[47.48014832 271.37921143]
[59.22320557 262.04644775]
[52.78267288 248.49951172]
[38.13142014 251.71522522]
[28.30673027 264.39807129]
[12.26388931 264.48037720]
[2.30958962 251.89898682]
[6.07991934 236.30526733]
[20.68260384 229.66139221]
[34.91571426 237.06396484]
[49.56696701 233.84826660]
[60.44858932 223.52400208]
[64.42948914 209.06190491]
[68.41039276 194.59979248]
[72.22212982 180.09219360]
[75.86417389 165.54106140]
[79.50621796 150.98991394]
[83.14826965 136.43878174]
[86.79031372 121.88765717]
[76.78495789 110.70639038]
[74.77627563 95.83719635]
[61.34423828 89.16034698]
[45.54255676 89.94608307]
[37.58972549 77.35236359]
[24.15768814 70.67551422]
[10.72564793 63.99866104]
[-2.70639181 57.32181168]
[-16.13843155 50.64496231]
[-30.95722198 55.44508743]
[-44.48410416 48.48246765]
[-48.96896744 34.32543564]
[-62.40100861 27.64858627]
[-76.66081238 34.06668472]
[-91.69580078 29.76748466]
[-100.40691376 16.78093147]
[-98.68102264 1.23888063]
[-87.33305359 -9.52018642]
[-71.72116089 -10.41616726]
[-59.21680069 -1.02600765]
[-55.72415924 14.21654701]
[-42.29211807 20.89339638]
[-28.29864693 15.92164326]
[-14.58153439 22.50157356]
[-9.46158218 37.21292496]
[3.97045755 43.88977432]
[17.40249634 50.56662369]
[30.83453560 57.24347305]
[44.26657486 63.92032242]
[59.10750961 62.65701294]
[68.02108765 75.72830200]
[81.45312500 82.40515137]
[76.09911346 76.76231384]
[70.88158417 70.98628998]
[63.97046661 57.67327118]
[57.05934906 44.36025620]
[50.14823151 31.04723740]
[43.23711395 17.73421860]
[36.32599640 4.42120028]
[20.95525551 3.10064363]
[8.75248051 -6.33841419]
[3.61153078 -20.88400459]
[7.17286634 -35.89468002]
[18.30007744 -46.58059311]
[33.44251251 -49.53190613]
[47.76827240 -43.80686188]
[56.70606232 -31.23230743]
[57.40386581 -15.82073307]
[49.63901520 -2.48991752]
[56.55013275 10.82310104]
[63.46125031 24.13611984]
[70.37236786 37.44913864]
[77.28348541 50.76215363]
[84.19460297 64.07517242]
[98.60923004 59.92564774]
[97.38432312 44.97574234]
[96.15941620 30.02584076]
[94.93450928 15.07593727]
[93.70960236 0.12603456]
[86.39002228 -15.16645145]
[99.05861664 -26.43335724]
[113.39221954 -17.37885284]
[108.65950775 -1.09887218]
[109.88441467 13.85103130]
[111.10932159 28.80093384]
[112.33422089 43.75083542]
[113.55912781 58.70074081]
[126.95195007 65.45590973]
[139.70249939 57.55504608]
[152.45303345 49.65418625]
[165.20358276 41.75332260]
[177.90777588 33.77814102]
[190.56518555 25.72890854]
[198.05818176 11.79458046]
[212.94975281 11.49387264]
[225.60716248 3.44464111]
[238.26455688 -4.60458994]
[250.92196655 -12.65382099]
[263.57937622 -20.70305252]
[276.23678589 -28.75228310]
[277.97146606 -39.44528580]
[285.14205933 -47.27039337]
[295.21850586 -49.82221603]
[304.83499146 -46.49622726]
[317.67694092 -54.24764633]
[323.38140869 -61.33585739]
[330.71444702 -62.01359177]
[343.64602661 -69.61450195]
[356.57763672 -77.21541595]
[369.50921631 -84.81632996]
[382.44079590 -92.41724396]
[382.42440796 -107.71257019]
[390.01599121 -120.87557220]
[403.08999634 -128.42118835]
[418.08520508 -128.40968323]
[430.97445679 -120.94428253]
[443.90606689 -128.54519653]
[456.83764648 -136.14610291]
[469.76925659 -143.74702454]
[482.70083618 -151.34793091]
[495.63244629 -158.94885254]
[508.56402588 -166.54975891]
[521.49560547 -174.15066528]
[534.42724609 -181.75158691]
[534.93853760 -197.17047119]
[543.72351074 -209.85223389]
[557.97900391 -215.75016785]
[573.15600586 -212.98226929]
[584.41168213 -202.43176270]
[588.15435791 -187.46527100]
[583.18975830 -172.85853577]
[571.10205078 -163.27255249]
[555.74841309 -161.76612854]
[542.02813721 -168.81999207]
[529.09655762 -161.21908569]
[516.16491699 -153.61816406]
[503.23333740 -146.01725769]
[490.30175781 -138.41633606]
[477.37017822 -130.81542969]
[464.43856812 -123.21451569]
[451.50698853 -115.61360168]
[438.57537842 -108.01268768]
[438.82791138 -93.11967468]
[431.54348755 -80.01268768]
[418.59091187 -72.26044464]
[403.39736938 -72.03083038]
[390.04171753 -79.48564911]
[377.11013794 -71.88473511]
[364.17852783 -64.28382111]
[351.24694824 -56.68290710]
[338.31533813 -49.08199692]
[325.42834473 -41.40570068]
[312.58642578 -33.65428543]
[304.46713257 -16.08324623]
[284.28601074 -16.09487915]
[271.62860107 -8.04564857]
[258.97119141 0.00358264]
[246.31379700 8.05281353]
[233.65638733 16.10204506]
[220.99897766 24.15127563]
[214.41131592 37.50986862]
[198.61441040 38.38631058]
[185.95700073 46.43554306]
[182.01312256 52.65472031]
[173.10444641 54.50386810]
[160.35389709 62.40472794]
[147.60336304 70.30558777]
[134.85281372 78.20645142]
[129.57221985 115.38591003]
[101.34145355 125.52970123]
[97.69940186 140.08084106]
[94.05735779 154.63197327]
[90.41530609 169.18310547]
[86.77326202 183.73423767]
[88.20720673 190.13047791]
[86.47856903 195.49804688]
[82.87249756 198.58070374]
[78.89159393 213.04280090]
[74.91069031 227.50489807]
[89.01262665 228.93637085]
[102.83622742 239.01811218]
[111.69532013 257.24301147]
[111.46284485 280.79187012]
[114.59294128 295.46166992]
[117.72303772 310.13143921]
[120.85313416 324.80120850]
[130.27000427 330.15585327]
[135.10339355 339.60510254]
[133.98118591 349.93890381]
[127.51053619 357.79190063]
[130.29716492 372.53079224]
[133.08378601 387.26968384]
[135.87040710 402.00854492]
[138.65704346 416.74743652]
[153.69862366 415.52719116]
[169.01008606 428.28430176]
[173.82821655 442.48941040]
[178.64634705 456.69454956]
[183.46449280 470.89965820]
[188.28262329 485.10479736]
[193.10075378 499.30990601]
[207.73837280 504.81210327]
[215.36959839 518.46124268]
[212.39122009 533.81256104]
[200.20951843 543.61767578]
[184.57632446 543.24688721]
[172.87316895 532.87530518]
[170.62591553 517.40002441]
[178.89562988 504.12805176]
[174.07749939 489.92291260]
[169.25936890 475.71780396]
[164.44122314 461.51266479]
[159.62309265 447.30755615]
[154.80496216 433.10241699]
[139.95202637 435.19772339]
[139.25154114 450.18136597]
[138.55107117 465.16500854]
[137.85060120 480.14865112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 268]
[6 267]
[7 266]
[8 265]
[9 244]
[10 243]
[11 242]
[12 241]
[13 240]
[15 236]
[16 235]
[17 234]
[18 233]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[30 47]
[31 46]
[32 45]
[33 44]
[36 42]
[37 41]
[54 62]
[55 61]
[63 229]
[64 228]
[65 227]
[66 224]
[67 223]
[68 222]
[69 221]
[70 220]
[72 102]
[73 101]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[82 92]
[83 91]
[104 124]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[138 218]
[139 217]
[140 216]
[141 215]
[142 213]
[143 212]
[145 210]
[146 209]
[147 208]
[148 207]
[149 206]
[150 205]
[154 203]
[155 202]
[157 201]
[158 200]
[159 199]
[160 198]
[161 197]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[246 264]
[247 263]
[248 262]
[249 261]
[250 260]
[251 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
