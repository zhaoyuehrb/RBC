%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CIR1)
} def

/sequence { (\
CUUGCUGCUGGAAACGCAGUUCCGGUUAGGCGGCUGAGUUUGUUUACGUUGCUAACAGAUCUAGCCCCUGCUUUCCCUAGUUCCAGUUCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.952878201 ubox
2 92 0.987171530 ubox
2 93 0.012889685 ubox
3 91 0.994518965 ubox
3 92 0.019308903 ubox
4 20 0.004081234 ubox
4 87 0.006147965 ubox
4 90 0.992608709 ubox
5 19 0.004358665 ubox
5 86 0.007366818 ubox
5 93 0.011132068 ubox
6 18 0.004361097 ubox
6 85 0.007272034 ubox
6 91 0.006876120 ubox
6 92 0.011262381 ubox
7 17 0.004362833 ubox
7 26 0.008345541 ubox
7 84 0.006627228 ubox
7 87 0.992361069 ubox
7 90 0.006420995 ubox
8 16 0.004307319 ubox
8 25 0.010778938 ubox
8 86 0.999853958 ubox
9 24 0.010813411 ubox
9 85 0.999673283 ubox
10 15 0.003240710 ubox
10 23 0.011024196 ubox
10 76 0.003642969 ubox
10 84 0.999907161 ubox
11 22 0.011073039 ubox
11 75 0.003798173 ubox
11 83 0.999859085 ubox
12 21 0.010914728 ubox
12 74 0.004014349 ubox
12 81 0.006341263 ubox
12 82 0.862842535 ubox
13 20 0.009669882 ubox
13 21 0.014655190 ubox
13 27 0.019976037 ubox
13 73 0.004821203 ubox
13 74 0.004574615 ubox
13 81 0.657540755 ubox
13 82 0.499284963 ubox
14 20 0.019785336 ubox
14 26 0.026140820 ubox
14 72 0.005341364 ubox
14 73 0.006263530 ubox
14 81 0.708392272 ubox
15 19 0.020219558 ubox
15 24 0.042595524 ubox
15 25 0.026359876 ubox
15 80 0.869600804 ubox
16 23 0.044329015 ubox
16 26 0.014755199 ubox
16 71 0.018278114 ubox
16 81 0.221654269 ubox
17 25 0.015382574 ubox
17 70 0.018267724 ubox
17 80 0.240428327 ubox
18 69 0.016624330 ubox
18 72 0.013417955 ubox
18 73 0.005810241 ubox
18 74 0.021850619 ubox
18 78 0.793840878 ubox
19 68 0.014748978 ubox
19 71 0.013946456 ubox
19 73 0.023782127 ubox
19 77 0.813889233 ubox
19 81 0.003237985 ubox
20 70 0.012729668 ubox
20 80 0.013881446 ubox
21 79 0.015950492 ubox
22 30 0.012491673 ubox
23 29 0.012701704 ubox
23 70 0.006199197 ubox
24 66 0.005033135 ubox
24 69 0.003507167 ubox
24 72 0.938827433 ubox
24 73 0.084275401 ubox
24 74 0.023336097 ubox
24 75 0.033460340 ubox
24 76 0.099774966 ubox
24 77 0.051952157 ubox
25 65 0.005049807 ubox
25 71 0.973842709 ubox
25 72 0.088076683 ubox
25 73 0.024817594 ubox
25 74 0.032009654 ubox
25 75 0.099590898 ubox
25 76 0.052256980 ubox
26 64 0.005054088 ubox
26 70 0.700862381 ubox
27 63 0.005049222 ubox
27 70 0.699494057 ubox
28 62 0.005047949 ubox
28 69 0.976321931 ubox
28 72 0.022156487 ubox
28 73 0.063137617 ubox
29 61 0.004789292 ubox
29 67 0.004109309 ubox
29 68 0.997130569 ubox
29 69 0.024781637 ubox
29 71 0.019464742 ubox
29 72 0.064907104 ubox
30 52 0.004059881 ubox
30 67 0.997065411 ubox
30 68 0.026915029 ubox
30 71 0.065420435 ubox
31 51 0.004183358 ubox
31 70 0.065597642 ubox
32 50 0.004170462 ubox
32 66 0.999767634 ubox
32 67 0.006333959 ubox
32 68 0.003231445 ubox
32 69 0.010434190 ubox
33 49 0.004180770 ubox
33 65 0.999955653 ubox
33 66 0.004618001 ubox
33 68 0.004893905 ubox
34 48 0.004180985 ubox
34 64 0.999971419 ubox
35 46 0.003728449 ubox
35 63 0.997431526 ubox
36 45 0.003764821 ubox
36 61 0.158569853 ubox
36 62 0.955488963 ubox
37 44 0.003672159 ubox
37 60 0.139397369 ubox
37 62 0.133731482 ubox
38 56 0.011234344 ubox
38 60 0.963619459 ubox
38 61 0.166119392 ubox
39 55 0.011247282 ubox
39 58 0.006028316 ubox
39 59 0.996720330 ubox
40 54 0.009185428 ubox
40 57 0.005733466 ubox
40 58 0.998228560 ubox
40 59 0.010325622 ubox
41 57 0.998880952 ubox
41 58 0.008034272 ubox
42 52 0.012726402 ubox
42 56 0.999802421 ubox
43 51 0.013196001 ubox
43 55 0.983233229 ubox
44 54 0.944158780 ubox
44 55 0.165322213 ubox
45 51 0.093932317 ubox
45 54 0.234428185 ubox
46 50 0.085343541 ubox
46 53 0.272190069 ubox
48 56 0.003380008 ubox
49 55 0.004199476 ubox
50 54 0.005364020 ubox
70 81 0.027681477 ubox
71 80 0.039846882 ubox
72 79 0.039476005 ubox
72 80 0.004556150 ubox
73 79 0.007551036 ubox
73 80 0.003679236 ubox
74 79 0.004218347 ubox
1 93 0.9500000 lbox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
11 83 0.9500000 lbox
12 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
32 66 0.9500000 lbox
33 65 0.9500000 lbox
34 64 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
showpage
end
%%EOF
