%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGAGACAGUGGGCGGGGGCGGGCGGGGGCGCUGUGAGGCCCGGAGGGGGUGUGUGCGGGGGGCCGGAGGCGGCGGCUGUCAGAGUCGGCUCAGCCUGCGCCGGGGAACAUCGGCCGCCUCCAGCUCCCGGCGCGGCCCGGCCCGGCCCGGCUCGGCCGCCUCAGCAGACGCCGCCUGCCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[243.93568420 548.32684326]
[248.33897400 542.19519043]
[242.65487671 528.31384277]
[236.97077942 514.43255615]
[231.28668213 500.55123901]
[225.60256958 486.66992188]
[219.91847229 472.78860474]
[214.23437500 458.90728760]
[207.16836548 457.88232422]
[200.83969116 454.43197632]
[196.06066895 448.94515991]
[193.46327209 442.07534790]
[193.41586304 434.66290283]
[195.97174072 427.63229370]
[200.85653687 421.87683105]
[196.31378174 407.58126831]
[191.77104187 393.28570557]
[187.22828674 378.99011230]
[182.68553162 364.69454956]
[171.45713806 354.90820312]
[174.65170288 339.41287231]
[170.10894775 325.11730957]
[165.56619263 310.82174683]
[154.33779907 301.03540039]
[157.53234863 285.54006958]
[152.98960876 271.24450684]
[148.44685364 256.94891357]
[143.90409851 242.65335083]
[139.36134338 228.35777283]
[128.13294983 218.57144165]
[131.32751465 203.07611084]
[126.78475952 188.78053284]
[122.24201202 174.48495483]
[111.01361084 164.69862366]
[114.20816803 149.20329285]
[109.66542053 134.90771484]
[105.12266541 120.61214447]
[104.79754639 135.60862732]
[94.50021362 146.51573181]
[79.54720306 147.70210266]
[67.65879059 138.55520630]
[64.97298431 123.79762268]
[72.87647247 111.04870605]
[87.29071808 106.89093781]
[72.30841827 106.16250610]
[57.32611465 105.43407440]
[42.34381104 104.70564270]
[29.54380989 114.37722015]
[14.03794003 110.26048279]
[7.72097731 95.51343536]
[15.43875504 81.44874573]
[31.27085495 78.85564423]
[43.07224655 89.72333527]
[58.05454636 90.45176697]
[73.03684998 91.18020630]
[88.01914978 91.90863800]
[74.90364075 84.62966919]
[73.24163055 69.72203064]
[84.43202209 59.73327637]
[99.05599976 63.07080078]
[104.80477142 76.92554474]
[105.77571869 61.95700073]
[98.94792175 47.68493652]
[107.49283600 35.48519135]
[108.46378326 20.51664734]
[109.43473053 5.54810572]
[110.40567780 -9.42043686]
[111.37662506 -24.38897896]
[112.34757233 -39.35752106]
[105.51977539 -53.62958527]
[114.06468964 -65.82933044]
[115.03563690 -80.79787445]
[116.00658417 -95.76641846]
[116.97753143 -110.73496246]
[117.94847870 -125.70350647]
[118.91942596 -140.67204285]
[119.89037323 -155.64059448]
[120.86132050 -170.60913086]
[121.83226776 -185.57766724]
[110.06623077 -195.52084351]
[106.45338440 -210.31275940]
[112.17562103 -224.23109436]
[124.84465027 -232.01786804]
[125.81559753 -246.98640442]
[126.78654480 -261.95495605]
[116.18823242 -268.61459351]
[109.47087097 -279.09072876]
[107.86009216 -291.35794067]
[111.60128021 -303.07546997]
[119.92441559 -312.03375244]
[131.20169067 -316.57107544]
[132.65682983 -331.50033569]
[134.11198425 -346.42959595]
[135.56713867 -361.35882568]
[137.02227783 -376.28808594]
[130.66023254 -390.77377319]
[139.59570312 -402.69039917]
[141.05085754 -417.61965942]
[136.56958008 -433.97064209]
[151.04101562 -442.80319214]
[163.53446960 -431.34237671]
[155.98010254 -416.16452026]
[154.52494812 -401.23526001]
[160.99108887 -387.81741333]
[151.95152283 -374.83294678]
[150.49638367 -359.90368652]
[149.04122925 -344.97442627]
[147.58609009 -330.04519653]
[146.13093567 -315.11593628]
[159.86984253 -304.03811646]
[164.25772095 -286.78149414]
[157.35829163 -270.19653320]
[141.75508118 -260.98400879]
[140.78413391 -246.01545715]
[139.81318665 -231.04692078]
[151.37008667 -221.68870544]
[155.24629211 -207.14776611]
[149.75277710 -192.94654846]
[136.80081177 -184.60671997]
[135.82986450 -169.63818359]
[134.85891724 -154.66964722]
[133.88796997 -139.70109558]
[132.91702271 -124.73255920]
[131.94607544 -109.76401520]
[130.97512817 -94.79547119]
[130.00418091 -79.82692719]
[129.03323364 -64.85838318]
[135.93046570 -51.65697098]
[127.31610870 -38.38657379]
[126.34516144 -23.41803169]
[125.37421417 -8.44948959]
[124.40326691 6.51905298]
[123.43231964 21.48759460]
[122.46137238 36.45613861]
[129.35861206 49.65755081]
[120.74425507 62.92794800]
[119.77330780 77.89649200]
[119.41824341 116.06939697]
[123.96099091 130.36497498]
[128.50373840 144.66053772]
[140.05706787 155.46939087]
[136.53758240 169.94221497]
[141.08033752 184.23777771]
[145.62307739 198.53335571]
[157.17640686 209.34220886]
[153.65692139 223.81501770]
[158.19967651 238.11059570]
[162.74243164 252.40617371]
[167.28517151 266.70175171]
[171.82792664 280.99731445]
[183.38125610 291.80615234]
[179.86177063 306.27899170]
[184.40451050 320.57455444]
[188.94726562 334.87011719]
[200.50059509 345.67898560]
[196.98110962 360.15179443]
[201.52386475 374.44738770]
[206.06660461 388.74295044]
[210.60935974 403.03851318]
[215.15211487 417.33410645]
[233.55970764 431.44232178]
[228.11569214 453.22317505]
[233.79978943 467.10449219]
[239.48388672 480.98580933]
[245.16799927 494.86712646]
[250.85209656 508.74844360]
[256.53619385 522.62976074]
[262.22030640 536.51110840]
[281.70864868 549.08428955]
[278.04412842 571.23406982]
[284.83233643 584.61022949]
[291.62054443 597.98632812]
[298.40875244 611.36242676]
[310.41229248 616.10772705]
[315.78771973 627.40008545]
[312.14282227 638.94378662]
[318.71353149 652.42803955]
[333.35101318 658.99493408]
[337.20339966 674.56860352]
[327.31549072 687.20227051]
[311.27243042 687.20440674]
[301.38110352 674.57348633]
[305.22924805 658.99877930]
[298.65853882 645.51452637]
[283.60711670 636.50292969]
[285.03262329 618.15063477]
[278.24444580 604.77453613]
[271.45623779 591.39843750]
[264.66802979 578.02227783]
[257.54226685 577.57220459]
[250.95526123 574.64501953]
[245.74810791 569.56274414]
[242.60359192 562.92547607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[21 154]
[22 153]
[23 152]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[31 144]
[32 143]
[33 142]
[35 140]
[36 139]
[37 138]
[44 56]
[45 55]
[46 54]
[47 53]
[61 137]
[62 136]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[83 115]
[84 114]
[85 113]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[97 103]
[98 102]
[170 189]
[171 188]
[172 187]
[173 186]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
