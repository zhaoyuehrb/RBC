%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IBSP)
} def

/sequence { (\
GAGUGAGUGAGAGGGCAGAGGAAAUACUCAAUCUGUGCCACUCACUGCCUUGAGCCUGCUUCCUCACUCCAGGACUGCCAGAGGAAGCAAUCACCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.006323420 ubox
1 51 0.811806419 ubox
1 92 0.036438258 ubox
2 42 0.006328201 ubox
2 46 0.151219634 ubox
2 50 0.922409872 ubox
2 51 0.024508309 ubox
2 57 0.003162464 ubox
2 91 0.030594869 ubox
3 41 0.006329807 ubox
3 45 0.156018001 ubox
3 48 0.181445006 ubox
3 49 0.934738064 ubox
3 50 0.013251838 ubox
3 55 0.004480961 ubox
3 56 0.003628663 ubox
3 91 0.004421196 ubox
3 94 0.187530793 ubox
4 40 0.006328265 ubox
4 44 0.156022622 ubox
4 47 0.181904089 ubox
4 54 0.004225280 ubox
4 90 0.005544905 ubox
4 93 0.188038737 ubox
4 96 0.028653414 ubox
5 39 0.006310403 ubox
5 43 0.156057078 ubox
5 46 0.059808618 ubox
5 51 0.003513167 ubox
5 92 0.187881885 ubox
5 95 0.031759098 ubox
6 42 0.156031844 ubox
6 46 0.977812402 ubox
6 91 0.097485999 ubox
7 38 0.006213849 ubox
7 41 0.156041662 ubox
7 45 0.987274320 ubox
7 55 0.004133753 ubox
7 94 0.023197599 ubox
8 37 0.006154604 ubox
8 40 0.155819353 ubox
8 44 0.987135000 ubox
8 54 0.004128819 ubox
8 93 0.023206657 ubox
9 36 0.004329049 ubox
9 39 0.140029813 ubox
9 43 0.987169477 ubox
9 92 0.023204335 ubox
10 34 0.012483124 ubox
10 42 0.986828819 ubox
10 91 0.021703274 ubox
11 33 0.012601755 ubox
11 41 0.985350564 ubox
11 43 0.030822915 ubox
12 32 0.012542208 ubox
12 34 0.048041708 ubox
12 42 0.034153370 ubox
12 51 0.005834244 ubox
13 33 0.048286652 ubox
13 34 0.069270550 ubox
13 39 0.384805067 ubox
13 41 0.039250181 ubox
13 50 0.006284753 ubox
14 32 0.047343560 ubox
14 33 0.069700949 ubox
14 34 0.020948124 ubox
14 38 0.380967619 ubox
14 39 0.910603753 ubox
14 49 0.006487978 ubox
15 32 0.065249811 ubox
15 33 0.021054015 ubox
15 36 0.375469708 ubox
15 38 0.912713808 ubox
15 48 0.006635834 ubox
16 35 0.396488603 ubox
16 37 0.913641417 ubox
16 47 0.006778807 ubox
17 34 0.399652331 ubox
17 36 0.909475899 ubox
17 46 0.006645119 ubox
18 29 0.286686242 ubox
18 33 0.400287019 ubox
18 43 0.003198588 ubox
18 45 0.005775923 ubox
19 28 0.289565435 ubox
19 32 0.394480202 ubox
19 34 0.854135040 ubox
19 42 0.003940826 ubox
20 27 0.294159694 ubox
20 28 0.067070333 ubox
20 29 0.083884651 ubox
20 33 0.851080732 ubox
20 34 0.139368577 ubox
20 41 0.004036631 ubox
21 27 0.078159620 ubox
21 28 0.075518314 ubox
21 29 0.453127697 ubox
21 32 0.560635576 ubox
21 33 0.167814395 ubox
22 28 0.444513608 ubox
22 32 0.181364403 ubox
24 32 0.069657965 ubox
25 31 0.094751492 ubox
25 37 0.005880280 ubox
26 36 0.006675915 ubox
27 35 0.007060021 ubox
29 35 0.003342875 ubox
30 34 0.004362604 ubox
41 54 0.007648454 ubox
42 53 0.007721240 ubox
43 52 0.007738411 ubox
44 51 0.006986194 ubox
45 54 0.014936249 ubox
46 53 0.016973939 ubox
46 96 0.022463094 ubox
47 55 0.170252271 ubox
47 95 0.046051526 ubox
48 54 0.170561043 ubox
50 97 0.086644153 ubox
50 98 0.006692616 ubox
51 93 0.406345118 ubox
51 96 0.112084147 ubox
51 97 0.010692053 ubox
52 57 0.005680096 ubox
52 92 0.674284319 ubox
52 95 0.134238054 ubox
53 91 0.670202058 ubox
57 89 0.934765420 ubox
57 93 0.003790794 ubox
58 88 0.999832139 ubox
59 87 0.999976098 ubox
60 86 0.999424769 ubox
61 74 0.003210114 ubox
61 85 0.999631874 ubox
62 73 0.003277491 ubox
62 84 0.999976515 ubox
63 72 0.003286002 ubox
63 83 0.999869278 ubox
64 74 0.003544125 ubox
64 82 0.998822741 ubox
65 72 0.005392982 ubox
65 73 0.004513202 ubox
65 77 0.032705400 ubox
65 81 0.994063459 ubox
66 76 0.051612387 ubox
67 73 0.038866583 ubox
67 81 0.078740340 ubox
67 83 0.014661238 ubox
68 72 0.035164915 ubox
68 74 0.077026092 ubox
68 80 0.120051048 ubox
68 82 0.029130466 ubox
69 73 0.077926312 ubox
69 81 0.035220614 ubox
70 77 0.597085543 ubox
71 76 0.539656685 ubox
72 79 0.406315083 ubox
73 78 0.405054645 ubox
75 81 0.005212521 ubox
76 80 0.007611043 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
57 89 0.9500000 lbox
58 88 0.9500000 lbox
59 87 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
62 84 0.9500000 lbox
63 83 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
showpage
end
%%EOF
