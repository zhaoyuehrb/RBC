%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL22L1)
} def

/sequence { (\
CGCUCUCAGCGCGUGACGCAGCACGCUUUGAUAUAAAUGCAGACCGCGCGGCCGUAGCUUCCUCUCUGCUCUCGCGGCCGACUCGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.040633168 ubox
1 13 0.004858562 ubox
1 30 0.007498513 ubox
1 39 0.027813660 ubox
1 46 0.027601850 ubox
1 48 0.108999156 ubox
1 50 0.004929566 ubox
1 80 0.003596701 ubox
1 85 0.030116443 ubox
2 10 0.223577717 ubox
2 12 0.006386338 ubox
2 19 0.003749011 ubox
2 22 0.017989187 ubox
2 26 0.005015019 ubox
2 38 0.025973834 ubox
2 40 0.337823332 ubox
2 45 0.088232359 ubox
2 47 0.115503788 ubox
2 49 0.018435760 ubox
2 84 0.030064278 ubox
2 86 0.315819585 ubox
3 9 0.223745509 ubox
3 11 0.006389066 ubox
3 18 0.003749459 ubox
3 21 0.018007435 ubox
3 25 0.005013926 ubox
3 39 0.337992228 ubox
3 42 0.033558891 ubox
3 46 0.115303944 ubox
3 48 0.019035661 ubox
3 85 0.315754702 ubox
3 89 0.034730534 ubox
4 8 0.201575005 ubox
4 20 0.017816057 ubox
4 31 0.117983084 ubox
4 41 0.032463010 ubox
4 43 0.136709513 ubox
4 81 0.024676681 ubox
4 88 0.033633945 ubox
5 30 0.124059905 ubox
5 42 0.143010360 ubox
5 80 0.024242081 ubox
5 89 0.016512307 ubox
6 16 0.008382807 ubox
6 31 0.895869458 ubox
6 41 0.097136838 ubox
6 43 0.074406906 ubox
6 81 0.007594546 ubox
6 88 0.013079250 ubox
7 15 0.008487798 ubox
7 30 0.955345943 ubox
7 39 0.039086781 ubox
7 42 0.075236671 ubox
7 80 0.007102633 ubox
8 14 0.008328721 ubox
8 27 0.125770652 ubox
8 28 0.032084851 ubox
8 29 0.953285673 ubox
8 38 0.037104468 ubox
8 83 0.004227580 ubox
9 19 0.018675407 ubox
9 22 0.018836705 ubox
9 26 0.130101865 ubox
9 27 0.040900873 ubox
9 28 0.914548337 ubox
9 40 0.085758481 ubox
9 47 0.005893094 ubox
9 49 0.016790800 ubox
9 82 0.004410508 ubox
9 86 0.034053736 ubox
10 18 0.018687051 ubox
10 21 0.018849852 ubox
10 25 0.130085364 ubox
10 30 0.009800958 ubox
10 39 0.085839175 ubox
10 46 0.005896552 ubox
10 48 0.017426888 ubox
10 85 0.034058231 ubox
11 17 0.018469020 ubox
11 19 0.022666750 ubox
11 22 0.011307527 ubox
11 24 0.129464695 ubox
11 26 0.989360145 ubox
11 38 0.009796586 ubox
11 40 0.006415318 ubox
11 47 0.017411156 ubox
11 49 0.005563270 ubox
11 84 0.013853257 ubox
11 86 0.006699406 ubox
12 18 0.022824058 ubox
12 21 0.012000714 ubox
12 25 0.990275606 ubox
12 39 0.006455936 ubox
12 46 0.017410101 ubox
12 48 0.006978732 ubox
12 85 0.006751962 ubox
13 17 0.021356749 ubox
13 19 0.004057047 ubox
13 22 0.129132080 ubox
13 24 0.990446049 ubox
13 26 0.003796312 ubox
13 38 0.006400202 ubox
13 44 0.004618840 ubox
13 45 0.016392907 ubox
13 47 0.007031772 ubox
13 82 0.012702824 ubox
13 84 0.006243846 ubox
13 86 0.018178279 ubox
14 18 0.003821496 ubox
14 20 0.013538098 ubox
14 21 0.127283803 ubox
14 23 0.990243795 ubox
14 25 0.003802118 ubox
14 37 0.006335829 ubox
14 43 0.005727806 ubox
14 46 0.007024148 ubox
14 81 0.012376282 ubox
14 85 0.018190154 ubox
15 19 0.016331285 ubox
15 22 0.987706798 ubox
15 24 0.003882414 ubox
15 45 0.006961975 ubox
15 84 0.018202420 ubox
16 83 0.016846512 ubox
17 48 0.018808795 ubox
18 26 0.007649070 ubox
18 40 0.017729941 ubox
18 47 0.019168143 ubox
18 86 0.003362914 ubox
19 25 0.007653817 ubox
19 30 0.005651610 ubox
19 39 0.017756653 ubox
19 46 0.019132588 ubox
19 85 0.003363977 ubox
20 29 0.005613039 ubox
20 38 0.017354854 ubox
21 28 0.004553468 ubox
21 40 0.008349208 ubox
21 49 0.012830874 ubox
21 86 0.003569952 ubox
22 39 0.008358131 ubox
22 48 0.013379343 ubox
22 85 0.003569270 ubox
23 38 0.007885548 ubox
24 46 0.014222951 ubox
24 48 0.014679998 ubox
25 40 0.034622009 ubox
25 45 0.015719811 ubox
25 47 0.015070150 ubox
26 39 0.034800187 ubox
26 46 0.015035168 ubox
27 36 0.026124809 ubox
27 37 0.041962756 ubox
27 41 0.003254177 ubox
27 42 0.007806812 ubox
27 43 0.119986956 ubox
27 88 0.003906704 ubox
27 89 0.008282718 ubox
28 35 0.028159637 ubox
28 36 0.047616870 ubox
28 37 0.044225004 ubox
28 41 0.008465987 ubox
28 42 0.131275760 ubox
28 43 0.007779982 ubox
28 87 0.003901473 ubox
28 88 0.013484905 ubox
29 35 0.047992465 ubox
29 36 0.049198224 ubox
29 41 0.135442251 ubox
29 42 0.007980730 ubox
29 85 0.008003227 ubox
29 87 0.014371911 ubox
30 34 0.040145887 ubox
30 40 0.136059616 ubox
30 45 0.007318777 ubox
30 84 0.010903614 ubox
30 86 0.014360721 ubox
31 38 0.085437736 ubox
31 83 0.010235666 ubox
32 37 0.083880943 ubox
32 39 0.067481804 ubox
33 38 0.059991827 ubox
38 46 0.009016216 ubox
38 48 0.258304949 ubox
38 85 0.003344502 ubox
38 87 0.329158099 ubox
39 45 0.046420171 ubox
39 47 0.367143649 ubox
39 49 0.035632285 ubox
39 84 0.005102093 ubox
39 86 0.365372739 ubox
40 46 0.367119621 ubox
40 48 0.036811361 ubox
40 85 0.364280393 ubox
41 83 0.075355038 ubox
42 82 0.074986080 ubox
42 84 0.344530531 ubox
43 83 0.338252464 ubox
44 77 0.017955547 ubox
45 76 0.017997664 ubox
45 80 0.017315838 ubox
45 85 0.046756973 ubox
46 75 0.017994036 ubox
46 78 0.006645416 ubox
46 79 0.015028586 ubox
46 84 0.050237108 ubox
46 86 0.835351757 ubox
47 74 0.017993005 ubox
47 76 0.009289551 ubox
47 77 0.004983876 ubox
47 80 0.011153661 ubox
47 85 0.836259940 ubox
48 73 0.017951753 ubox
48 75 0.010607652 ubox
48 78 0.013634903 ubox
48 79 0.004904651 ubox
48 84 0.833427046 ubox
48 86 0.020492457 ubox
49 74 0.010616858 ubox
49 77 0.013640770 ubox
49 80 0.992904374 ubox
49 85 0.019073099 ubox
50 70 0.003366072 ubox
50 71 0.015477259 ubox
50 72 0.007708794 ubox
50 73 0.010606444 ubox
50 79 0.999572752 ubox
50 84 0.008350480 ubox
51 69 0.005776363 ubox
51 70 0.012308687 ubox
51 71 0.008152420 ubox
51 72 0.009582599 ubox
51 75 0.013629873 ubox
51 78 0.999677815 ubox
52 68 0.005596472 ubox
52 74 0.012565985 ubox
52 77 0.999678888 ubox
53 68 0.003664648 ubox
53 74 0.007109577 ubox
53 76 0.999649761 ubox
54 67 0.003760596 ubox
54 69 0.021731948 ubox
54 73 0.013208221 ubox
54 75 0.999449400 ubox
55 68 0.022573590 ubox
55 74 0.993789761 ubox
56 63 0.010259739 ubox
56 65 0.012484782 ubox
56 67 0.026322924 ubox
56 70 0.986319423 ubox
56 72 0.058425375 ubox
57 62 0.010199893 ubox
57 64 0.012449315 ubox
57 66 0.026299074 ubox
57 69 0.997394296 ubox
57 71 0.043912771 ubox
58 68 0.997364595 ubox
80 84 0.006025716 ubox
82 89 0.027141365 ubox
83 88 0.025529503 ubox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
46 86 0.9500000 lbox
47 85 0.9500000 lbox
48 84 0.9500000 lbox
49 80 0.9500000 lbox
50 79 0.9500000 lbox
51 78 0.9500000 lbox
52 77 0.9500000 lbox
53 76 0.9500000 lbox
54 75 0.9500000 lbox
55 74 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
58 68 0.9500000 lbox
showpage
end
%%EOF
