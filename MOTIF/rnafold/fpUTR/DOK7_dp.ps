%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DOK7)
} def

/sequence { (\
GAGCUAUUUUGAAAGUGACCCUGGGCUGGGGCGCCGGGGCGAGCGCGGCGGCGCGGAACCAUGACAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020282243 ubox
1 9 0.012331843 ubox
1 10 0.026034339 ubox
2 7 0.027433281 ubox
2 8 0.014473408 ubox
2 9 0.027109843 ubox
2 10 0.010572420 ubox
2 27 0.011599367 ubox
3 7 0.011337877 ubox
3 8 0.020560362 ubox
3 9 0.009825497 ubox
3 16 0.150748867 ubox
3 26 0.012188749 ubox
3 40 0.008134388 ubox
3 44 0.016794521 ubox
3 52 0.007645972 ubox
3 54 0.004152448 ubox
4 15 0.161911533 ubox
4 25 0.012116400 ubox
4 39 0.007612145 ubox
4 43 0.017635976 ubox
4 51 0.007655067 ubox
4 53 0.004119165 ubox
4 56 0.024221695 ubox
4 67 0.078904300 ubox
4 70 0.112560822 ubox
5 11 0.009323493 ubox
5 14 0.160805954 ubox
5 17 0.061964306 ubox
5 24 0.011671087 ubox
5 38 0.006374926 ubox
5 42 0.017431771 ubox
5 50 0.007500068 ubox
5 55 0.022775028 ubox
5 63 0.013365683 ubox
5 66 0.076904430 ubox
5 69 0.098907292 ubox
6 10 0.008713299 ubox
6 16 0.068868664 ubox
6 62 0.014144961 ubox
7 13 0.019952379 ubox
7 14 0.011470367 ubox
7 15 0.069380293 ubox
7 18 0.013131656 ubox
7 57 0.008290535 ubox
7 58 0.017053123 ubox
7 61 0.012855993 ubox
7 64 0.070212134 ubox
7 67 0.008925942 ubox
7 68 0.041102679 ubox
7 69 0.772490953 ubox
7 70 0.141180471 ubox
8 12 0.017446430 ubox
8 13 0.012745022 ubox
8 14 0.067546566 ubox
8 15 0.007601336 ubox
8 17 0.014514560 ubox
8 18 0.009856908 ubox
8 38 0.003335281 ubox
8 42 0.003952497 ubox
8 43 0.007757119 ubox
8 56 0.008751915 ubox
8 57 0.020475252 ubox
8 58 0.011593487 ubox
8 63 0.064607270 ubox
8 64 0.010644302 ubox
8 66 0.007660270 ubox
8 67 0.038425224 ubox
8 68 0.891966328 ubox
8 69 0.206005226 ubox
8 70 0.026954515 ubox
9 13 0.056493667 ubox
9 14 0.008414502 ubox
9 15 0.005274566 ubox
9 17 0.010643935 ubox
9 18 0.012473410 ubox
9 37 0.006231419 ubox
9 41 0.003454079 ubox
9 42 0.018607445 ubox
9 48 0.006230157 ubox
9 55 0.007156942 ubox
9 56 0.020496218 ubox
9 57 0.013384302 ubox
9 58 0.005814361 ubox
9 63 0.010893706 ubox
9 64 0.010984996 ubox
9 66 0.030728463 ubox
9 67 0.905506026 ubox
9 68 0.216645506 ubox
9 69 0.040620185 ubox
9 70 0.007969799 ubox
10 14 0.005507265 ubox
10 17 0.013209782 ubox
10 36 0.008499314 ubox
10 41 0.019417705 ubox
10 42 0.003556041 ubox
10 45 0.003416722 ubox
10 47 0.006679780 ubox
10 55 0.017660558 ubox
10 56 0.012926309 ubox
10 57 0.006406429 ubox
10 61 0.080267432 ubox
10 63 0.011382839 ubox
10 66 0.910457381 ubox
10 67 0.214769125 ubox
10 68 0.041926270 ubox
10 69 0.011605687 ubox
11 16 0.008420835 ubox
11 35 0.009819303 ubox
11 40 0.019527364 ubox
11 44 0.005077268 ubox
11 46 0.006868786 ubox
11 54 0.006257931 ubox
11 60 0.081650649 ubox
11 62 0.005172220 ubox
11 65 0.909092916 ubox
14 27 0.006112073 ubox
15 26 0.006468078 ubox
15 34 0.076801956 ubox
15 40 0.017809094 ubox
15 44 0.017385273 ubox
15 54 0.009596598 ubox
15 59 0.055167174 ubox
15 62 0.902794465 ubox
15 65 0.038006988 ubox
16 25 0.006445914 ubox
16 33 0.076919772 ubox
16 39 0.006434146 ubox
16 41 0.207220405 ubox
16 43 0.017889641 ubox
16 53 0.009585232 ubox
16 55 0.005402492 ubox
16 58 0.053030040 ubox
16 61 0.909163265 ubox
16 63 0.004340922 ubox
16 64 0.036889332 ubox
16 66 0.014100548 ubox
17 32 0.074365230 ubox
17 40 0.290177206 ubox
17 52 0.009571443 ubox
17 60 0.906754255 ubox
17 62 0.003389948 ubox
17 65 0.016196071 ubox
19 25 0.004223300 ubox
19 29 0.005571678 ubox
19 30 0.371420807 ubox
19 31 0.060370862 ubox
19 38 0.020408670 ubox
19 39 0.590416990 ubox
19 51 0.009510065 ubox
19 56 0.054089435 ubox
20 24 0.004216134 ubox
20 28 0.005456885 ubox
20 29 0.372206135 ubox
20 30 0.066146525 ubox
20 37 0.020375830 ubox
20 38 0.592566415 ubox
20 39 0.061747653 ubox
20 50 0.009509228 ubox
20 55 0.052327505 ubox
20 56 0.122426718 ubox
21 28 0.372102991 ubox
21 29 0.066190091 ubox
21 30 0.007586711 ubox
21 36 0.020167500 ubox
21 37 0.592603254 ubox
21 38 0.063482988 ubox
21 48 0.009513201 ubox
21 55 0.121129930 ubox
21 56 0.689109565 ubox
21 67 0.062751413 ubox
22 28 0.064565813 ubox
22 29 0.007547566 ubox
22 36 0.591214009 ubox
22 37 0.063445623 ubox
22 47 0.009508842 ubox
22 55 0.691170108 ubox
22 61 0.019886204 ubox
22 66 0.062927549 ubox
23 27 0.030703701 ubox
23 35 0.588315614 ubox
23 46 0.009510650 ubox
23 54 0.703834981 ubox
23 60 0.021893048 ubox
23 65 0.062923868 ubox
24 34 0.584270369 ubox
24 35 0.097578528 ubox
24 59 0.021906381 ubox
24 60 0.011431519 ubox
25 32 0.575815252 ubox
25 34 0.117051471 ubox
25 44 0.009515818 ubox
25 52 0.704497714 ubox
25 59 0.011453522 ubox
26 31 0.574376740 ubox
26 33 0.133509692 ubox
26 37 0.003488453 ubox
26 43 0.009510537 ubox
26 51 0.704565861 ubox
26 56 0.010333348 ubox
26 67 0.003940638 ubox
27 33 0.006975836 ubox
27 36 0.003694341 ubox
27 42 0.009123643 ubox
27 50 0.703463325 ubox
27 55 0.010258770 ubox
27 61 0.057486878 ubox
27 66 0.003964645 ubox
28 32 0.015856345 ubox
28 35 0.004292031 ubox
28 49 0.695716141 ubox
28 54 0.005064570 ubox
28 60 0.059525498 ubox
28 65 0.003998649 ubox
29 34 0.004307147 ubox
29 59 0.058864131 ubox
29 60 0.019768740 ubox
30 59 0.020032094 ubox
31 40 0.011217770 ubox
31 44 0.004510064 ubox
31 46 0.703438837 ubox
31 52 0.003298288 ubox
31 54 0.375367561 ubox
32 39 0.011235572 ubox
32 41 0.016967871 ubox
32 43 0.004349162 ubox
32 45 0.704425838 ubox
32 47 0.004994458 ubox
32 50 0.011295231 ubox
32 53 0.375990256 ubox
33 40 0.017500019 ubox
33 44 0.704433643 ubox
33 46 0.005061157 ubox
33 49 0.012656084 ubox
33 52 0.376017521 ubox
34 39 0.017466608 ubox
34 43 0.704331930 ubox
34 45 0.004109758 ubox
34 48 0.012750233 ubox
34 51 0.376022931 ubox
35 41 0.650208090 ubox
35 45 0.003257885 ubox
35 47 0.012751121 ubox
35 50 0.376008466 ubox
35 63 0.050402795 ubox
36 40 0.608591481 ubox
36 44 0.004419023 ubox
36 46 0.012522379 ubox
36 49 0.373099159 ubox
36 60 0.029572498 ubox
36 62 0.044951678 ubox
37 59 0.029508303 ubox
37 60 0.065265981 ubox
38 59 0.065401075 ubox
38 60 0.028756123 ubox
39 46 0.371416273 ubox
39 49 0.011670325 ubox
39 54 0.004865229 ubox
39 59 0.030305853 ubox
40 45 0.371411439 ubox
40 47 0.042567645 ubox
40 48 0.012562596 ubox
40 53 0.005243615 ubox
40 55 0.067405959 ubox
40 63 0.008840641 ubox
41 46 0.042307848 ubox
41 52 0.005088296 ubox
41 54 0.045790065 ubox
41 62 0.007226913 ubox
43 49 0.004917369 ubox
43 52 0.040232735 ubox
43 54 0.559616912 ubox
44 48 0.004897785 ubox
44 51 0.040258449 ubox
44 53 0.560816763 ubox
44 55 0.209921997 ubox
45 49 0.003354860 ubox
45 52 0.560881432 ubox
45 54 0.213737989 ubox
46 51 0.560702870 ubox
46 53 0.213746294 ubox
47 52 0.212791140 ubox
54 63 0.008094992 ubox
55 62 0.020436727 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
