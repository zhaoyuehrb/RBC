%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLRMT)
} def

/sequence { (\
GGCGCGGGCGCAUGCGCAGGCGCGGGCCGGUGGGGUGGCCUGGAGCGGCGUGCGUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.153381748 ubox
2 11 0.283351899 ubox
2 15 0.006267956 ubox
2 17 0.635187754 ubox
2 21 0.003603891 ubox
2 23 0.021962212 ubox
2 46 0.005448656 ubox
2 53 0.064724585 ubox
2 55 0.322945023 ubox
3 8 0.154241377 ubox
3 10 0.283683488 ubox
3 14 0.006300416 ubox
3 16 0.635961070 ubox
3 20 0.003677979 ubox
3 22 0.022870843 ubox
3 45 0.005453784 ubox
3 50 0.003207302 ubox
3 52 0.064779967 ubox
3 54 0.329129905 ubox
4 9 0.276356404 ubox
4 11 0.059464155 ubox
4 13 0.003436372 ubox
4 15 0.636000667 ubox
4 17 0.031668349 ubox
4 21 0.024102337 ubox
4 49 0.003220919 ubox
4 51 0.064583005 ubox
4 53 0.329258018 ubox
4 55 0.411518233 ubox
5 10 0.059452448 ubox
5 14 0.635974660 ubox
5 16 0.031700045 ubox
5 20 0.024158585 ubox
5 42 0.006618737 ubox
5 48 0.003169770 ubox
5 50 0.064581775 ubox
5 52 0.328904917 ubox
5 54 0.424375295 ubox
6 13 0.581211691 ubox
6 15 0.031455752 ubox
6 41 0.007409227 ubox
6 49 0.064150835 ubox
6 51 0.263514846 ubox
6 53 0.424866858 ubox
7 40 0.007974684 ubox
8 15 0.008504798 ubox
8 17 0.030366218 ubox
8 23 0.007776601 ubox
8 39 0.007976698 ubox
8 46 0.009058516 ubox
8 49 0.252377146 ubox
8 51 0.463530183 ubox
8 53 0.004127150 ubox
8 55 0.429133023 ubox
9 14 0.008776833 ubox
9 16 0.030396787 ubox
9 22 0.008370788 ubox
9 38 0.007900457 ubox
9 45 0.009030280 ubox
9 47 0.165448668 ubox
9 48 0.200676642 ubox
9 50 0.473628927 ubox
9 52 0.004168126 ubox
9 54 0.437678777 ubox
10 15 0.029831948 ubox
10 17 0.076154530 ubox
10 21 0.013804486 ubox
10 23 0.005117231 ubox
10 46 0.225287955 ubox
10 49 0.473849988 ubox
10 51 0.003655882 ubox
10 53 0.443909409 ubox
10 55 0.022848191 ubox
11 16 0.076125993 ubox
11 20 0.013839099 ubox
11 22 0.005343006 ubox
11 37 0.007665101 ubox
11 45 0.225385321 ubox
11 48 0.473322297 ubox
11 50 0.003548715 ubox
11 52 0.443835906 ubox
11 54 0.023560277 ubox
12 36 0.007674026 ubox
12 51 0.432511310 ubox
12 55 0.030690102 ubox
13 22 0.149166001 ubox
13 24 0.015760757 ubox
13 35 0.007553383 ubox
13 42 0.004973781 ubox
13 47 0.420494381 ubox
13 50 0.426585182 ubox
13 52 0.024786878 ubox
13 54 0.031735991 ubox
13 56 0.262063454 ubox
14 21 0.211181941 ubox
14 23 0.053716284 ubox
14 46 0.472870156 ubox
14 49 0.425028161 ubox
14 51 0.101664519 ubox
14 53 0.032787445 ubox
14 55 0.314868369 ubox
15 20 0.211240489 ubox
15 22 0.056397663 ubox
15 24 0.019760408 ubox
15 32 0.009301505 ubox
15 42 0.003507899 ubox
15 45 0.472627828 ubox
15 47 0.279975680 ubox
15 48 0.331048960 ubox
15 50 0.126272977 ubox
15 52 0.032735704 ubox
15 54 0.317975415 ubox
16 21 0.055370267 ubox
16 23 0.028615535 ubox
16 31 0.009964024 ubox
16 46 0.385836780 ubox
16 49 0.130716958 ubox
16 51 0.032435235 ubox
16 53 0.318152671 ubox
17 22 0.029399225 ubox
17 30 0.010004122 ubox
17 42 0.470839595 ubox
17 45 0.385533201 ubox
17 48 0.130991407 ubox
17 50 0.032318910 ubox
17 52 0.318156710 ubox
18 41 0.473393047 ubox
18 51 0.317610169 ubox
19 28 0.013490539 ubox
19 40 0.473625246 ubox
19 41 0.016474702 ubox
20 27 0.013527655 ubox
20 39 0.473540952 ubox
20 40 0.016728537 ubox
20 46 0.214399868 ubox
20 49 0.317302541 ubox
20 51 0.004153297 ubox
20 53 0.008437574 ubox
20 55 0.624500266 ubox
21 26 0.013531438 ubox
21 37 0.061666230 ubox
21 38 0.468888596 ubox
21 42 0.026593511 ubox
21 45 0.215350576 ubox
21 47 0.220456627 ubox
21 48 0.233497846 ubox
21 50 0.005075086 ubox
21 52 0.008442411 ubox
21 54 0.636538029 ubox
22 31 0.008007105 ubox
22 36 0.086384594 ubox
22 39 0.018929118 ubox
22 41 0.012738825 ubox
22 46 0.307794502 ubox
22 49 0.005101584 ubox
22 51 0.008403139 ubox
22 53 0.637063781 ubox
23 30 0.008034769 ubox
23 35 0.089203361 ubox
23 37 0.394631741 ubox
23 38 0.020505193 ubox
23 42 0.520422121 ubox
23 45 0.295767513 ubox
23 47 0.051343497 ubox
23 48 0.004811039 ubox
23 50 0.008349372 ubox
23 52 0.637057279 ubox
24 36 0.311960183 ubox
24 40 0.005575783 ubox
24 41 0.601876957 ubox
24 46 0.049544954 ubox
24 49 0.004745607 ubox
24 51 0.634250561 ubox
25 39 0.004168812 ubox
25 40 0.605999253 ubox
26 36 0.246099033 ubox
26 39 0.606066501 ubox
26 49 0.637158739 ubox
27 33 0.078308094 ubox
27 34 0.375715289 ubox
27 35 0.274720357 ubox
27 38 0.606078106 ubox
27 43 0.042675860 ubox
27 48 0.637194193 ubox
28 32 0.077937228 ubox
28 33 0.376069412 ubox
28 34 0.274506265 ubox
28 37 0.606040537 ubox
28 42 0.042674644 ubox
28 47 0.637156494 ubox
29 36 0.560740129 ubox
29 40 0.041140103 ubox
29 41 0.015182138 ubox
29 46 0.632015409 ubox
30 36 0.009329668 ubox
30 39 0.042079545 ubox
30 40 0.010997556 ubox
30 46 0.057756415 ubox
31 35 0.005544034 ubox
31 38 0.042257977 ubox
31 42 0.315790920 ubox
31 45 0.080124490 ubox
32 40 0.118977059 ubox
32 41 0.538060986 ubox
33 39 0.118907936 ubox
33 40 0.549660645 ubox
33 41 0.292077476 ubox
34 39 0.549165751 ubox
34 40 0.293974156 ubox
34 41 0.053599932 ubox
35 39 0.289277602 ubox
35 40 0.053473357 ubox
45 53 0.008427925 ubox
45 55 0.018968228 ubox
46 52 0.008435703 ubox
46 54 0.019400177 ubox
47 51 0.005206140 ubox
47 53 0.019430610 ubox
48 55 0.003781140 ubox
49 54 0.003849456 ubox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 14 0.9500000 lbox
6 13 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
