%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGCUCUCCGUCCGCAGUGGAAGCCGCCGCCGCGCUCGCAGCUUGCAGGCGCCGCGUAGCCGUCGCCACCGCCGCCAGCCCGUGCGCCCUCGGCGCGUACCCGCCGCGCUCCCAUCCCCGCCGCCGGCCAGGGGCGCGCUCGGCCGCCCCGGACAGUGUCCCGCUGCGGCUCCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-19.56244659 342.31262207]
[-23.93717766 344.28427124]
[-31.76916695 357.07723999]
[-39.60115433 369.87020874]
[-41.42057419 378.84759521]
[-47.67899704 382.81393433]
[-55.72943878 395.47058105]
[-63.77988052 408.12719727]
[-65.75314331 417.07205200]
[-72.07872772 420.93035889]
[-80.34525299 433.44692993]
[-88.61177826 445.96350098]
[-96.87830353 458.48007202]
[-92.24884796 473.41665649]
[-98.35116577 487.81442261]
[-112.30394745 494.87518311]
[-127.51909637 491.26501465]
[-136.81250000 478.68859863]
[-135.79608154 463.08407593]
[-124.94977570 451.81945801]
[-109.39487457 450.21353149]
[-101.12834930 437.69696045]
[-92.86182404 425.18038940]
[-84.59529877 412.66381836]
[-76.43651581 400.07675171]
[-68.38607025 387.42013550]
[-60.33562851 374.76348877]
[-52.39411926 362.03823853]
[-44.56213379 349.24526978]
[-36.73014450 336.45230103]
[-29.11891747 323.52676392]
[-21.73069572 310.47250366]
[-14.34247494 297.41821289]
[-6.95425415 284.36392212]
[0.43396702 271.30966187]
[7.82218790 258.25537109]
[15.21040916 245.20109558]
[13.60525417 225.94613647]
[31.08373833 215.93569946]
[38.01948166 202.63549805]
[44.95522690 189.33529663]
[51.89097214 176.03507996]
[58.82671738 162.73487854]
[65.76245880 149.43467712]
[72.69820404 136.13447571]
[59.23893356 119.73887634]
[54.72181702 99.01297760]
[60.13782501 78.50360107]
[48.29655838 69.29576111]
[32.65286636 66.93240356]
[27.35531807 53.01172638]
[15.51404953 43.80388641]
[3.67278075 34.59604263]
[-8.16848755 25.38820076]
[-23.81217957 23.02484322]
[-29.10972786 9.10416603]
[-40.95099640 -0.10367604]
[-49.66995621 -2.91145992]
[-52.91470718 -9.57262802]
[-64.59616852 -18.98238373]
[-80.19698334 -21.61393738]
[-85.25478363 -35.62350464]
[-96.93624115 -45.03326035]
[-113.21448517 -47.02091980]
[-119.38237000 -62.21596146]
[-109.09490967 -74.98702240]
[-92.93495178 -72.19633484]
[-87.52648926 -56.71471786]
[-75.84502411 -47.30496216]
[-61.07974625 -45.34645844]
[-55.18640900 -30.66384315]
[-43.50495148 -21.25408745]
[-31.74315453 -11.94494438]
[-19.90188599 -2.73710251]
[-5.10515976 -1.03235197]
[1.03935409 13.54693222]
[12.88062286 22.75477409]
[24.72189140 31.96261597]
[36.56315994 41.17045975]
[51.35988617 42.87520981]
[57.50439835 57.45449448]
[69.34566498 66.66233826]
[73.12575531 61.51162338]
[77.74935150 56.79759216]
[83.16413879 52.65531158]
[89.29659271 49.21322250]
[96.05290222 46.58987808]
[96.82508087 31.60976601]
[97.59726715 16.62965584]
[98.36944580 1.64954400]
[99.14163208 -13.33056736]
[93.91868591 -29.45995712]
[107.97187805 -38.94384384]
[120.97544098 -28.06525993]
[114.12174225 -12.55838585]
[113.34955597 2.42172527]
[112.57737732 17.40183640]
[111.80519867 32.38194656]
[111.03301239 47.36206055]
[117.65310669 50.88688660]
[124.70275879 37.64670181]
[131.75260925 24.40662956]
[144.99256897 31.45668983]
[137.94293213 44.69635391]
[130.89328003 57.93653488]
[137.51338196 61.46136093]
[149.51097107 52.45814896]
[161.50856018 43.45493317]
[173.50614929 34.45171738]
[178.50787354 26.77795219]
[185.78785706 25.39903259]
[197.93821716 16.60309982]
[194.75625610 1.71031904]
[197.91316223 -13.18779469]
[206.86201477 -25.51005173]
[220.05235291 -33.12154770]
[235.19886780 -34.70354462]
[249.67735291 -29.98194885]
[260.97930908 -19.77481079]
[267.14660645 -5.85057592]
[267.11071777 9.37829781]
[260.87786865 23.27331543]
[249.52795410 33.42708206]
[235.02737427 38.08039474]
[219.88847351 36.42704010]
[206.73416138 28.75347328]
[194.58378601 37.54940796]
[182.50935364 46.44930649]
[170.51176453 55.45252228]
[158.51417542 64.45573425]
[146.51658630 73.45895386]
[149.54809570 82.69533539]
[150.80564880 92.13883209]
[150.31632996 101.45861053]
[164.97229004 104.65280914]
[179.62825012 107.84700775]
[194.28421021 111.04120636]
[208.94017029 114.23540497]
[223.59611511 117.42960358]
[232.67292786 116.19857025]
[238.47523499 120.80647278]
[253.07420349 124.25179291]
[269.87863159 122.00515747]
[276.68939209 137.53092957]
[263.65579224 148.37348938]
[249.62889099 138.85075378]
[235.02992249 135.40544128]
[220.40191650 132.08555603]
[205.74597168 128.89135742]
[191.09001160 125.69716644]
[176.43405151 122.50296783]
[161.77809143 119.30876923]
[147.12213135 116.11457062]
[140.18638611 129.41477966]
[151.19467163 139.60388184]
[162.20295715 149.79296875]
[173.21122742 159.98207092]
[188.94245911 166.30384827]
[187.22256470 183.17033386]
[170.53912354 186.18678284]
[163.02212524 170.99035645]
[152.01385498 160.80125427]
[141.00556946 150.61215210]
[129.99728394 140.42304993]
[107.71436310 147.18676758]
[85.99841309 143.07022095]
[79.06266785 156.37042236]
[72.12692261 169.67062378]
[65.19117737 182.97082520]
[58.25543213 196.27102661]
[51.31968689 209.57124329]
[44.38394165 222.87144470]
[48.25025940 233.07159424]
[45.89910126 243.49821472]
[38.34643555 250.74719238]
[28.26468849 252.58932495]
[20.87646675 265.64358521]
[13.48824596 278.69787598]
[6.10002470 291.75216675]
[-1.28819644 304.80642700]
[-8.67641735 317.86071777]
[-16.06463814 330.91497803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[6 27]
[7 26]
[8 25]
[10 24]
[11 23]
[12 22]
[13 21]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[48 82]
[49 81]
[51 79]
[52 78]
[53 77]
[54 76]
[56 74]
[57 73]
[59 72]
[60 71]
[62 69]
[63 68]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[106 131]
[107 130]
[108 129]
[109 128]
[111 127]
[112 126]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[141 147]
[142 146]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
