%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCUCGUUAGGGCAGGCGCGGCCCCUUCGGCUCCGAGCUGACCCUGAUCAGGGCCGAGUUGUCUCGGCGGCGCUGCCGAGGCCUCCACCCAGGACAGUCCCCCUCCCCGGGCCUCUCUCCUCUUGCCUACGAGUCCCCUCUCCUCGUAGGCCUCUCGGAUCUGAUAUCGUGGGGUGAGGUGAGCAGGCCCGGGGAGGGUGGUUACCGCUGAGGAGCUGCAGUCUCUGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[142.12484741 139.78410339]
[128.18548584 145.32434082]
[113.56646729 141.96513367]
[103.44345093 130.89530945]
[92.94372559 141.60771179]
[82.44400024 152.32012939]
[78.30980682 167.59164429]
[63.87527466 171.26498413]
[53.37554932 181.97740173]
[42.87582397 192.68981934]
[32.37609863 203.40222168]
[21.87637520 214.11463928]
[11.37665081 224.82705688]
[0.87692577 235.53945923]
[-9.55096054 246.32182312]
[-19.90654373 257.17364502]
[-30.26212502 268.02545166]
[-34.20285416 286.02084351]
[-51.23420715 290.28082275]
[-61.44379807 301.27011108]
[-65.16824341 316.64669800]
[-79.49942017 320.70462036]
[-89.70900726 331.69390869]
[-99.91859436 342.68316650]
[-110.12818146 353.67245483]
[-110.97779083 369.69299316]
[-124.11609650 378.89974976]
[-139.46450806 374.23010254]
[-145.24905396 359.26620483]
[-137.03230286 345.48706055]
[-121.11746216 343.46286011]
[-110.90787506 332.47360229]
[-100.69828796 321.48431396]
[-90.48870087 310.49502563]
[-87.49450684 295.90447998]
[-72.43307495 291.06051636]
[-62.22348785 280.07125854]
[-62.35739899 267.98583984]
[-53.95605850 258.74813843]
[-41.11394119 257.66986084]
[-30.75835991 246.81805420]
[-20.40277672 235.96623230]
[-18.06279945 228.96897888]
[-9.83548641 225.03973389]
[0.66423815 214.32733154]
[11.16396332 203.61491394]
[21.66368675 192.90249634]
[32.16341400 182.19009399]
[42.66313553 171.47767639]
[53.16286087 160.76525879]
[56.54604340 146.25997925]
[71.73158264 141.82040405]
[82.23130798 131.10798645]
[92.73103333 120.39557648]
[87.62167358 106.29258728]
[72.69700623 104.79115295]
[57.77234268 103.28971863]
[42.84767532 101.78827667]
[27.92300797 100.28684235]
[12.99834061 98.78540802]
[-1.72273421 106.01188660]
[-15.18899918 96.65283966]
[-13.54751492 80.33605194]
[1.51309979 73.84683990]
[14.49977589 83.86074066]
[29.42444229 85.36217499]
[44.34910965 86.86360931]
[59.27377701 88.36505127]
[74.19844818 89.86648560]
[89.12311554 91.36791992]
[103.50778198 87.11569977]
[115.21736908 77.74097443]
[126.92695618 68.36624908]
[138.38174438 58.68182755]
[149.57353210 48.69464111]
[160.76531982 38.70745468]
[171.95710754 28.72027016]
[183.14889526 18.73308372]
[184.77362061 13.80727100]
[187.81457520 10.33521271]
[191.48526001 8.61230469]
[194.99545288 8.58088398]
[206.57867432 -0.94954044]
[218.16189575 -10.47996426]
[222.79032898 -18.33523178]
[229.96424866 -20.05912018]
[241.67384338 -29.43384552]
[253.38343811 -38.80857468]
[253.95103455 -49.64977646]
[260.25390625 -58.21792221]
[270.02307129 -61.83509827]
[279.95858765 -59.53629684]
[291.91461182 -68.59463501]
[303.87063599 -77.65296936]
[300.09689331 -92.35108948]
[302.23223877 -107.33385468]
[309.92041016 -120.32253265]
[321.96307373 -129.35369873]
[336.50640869 -133.07608032]
[351.32653809 -130.95260620]
[364.16952515 -123.33766937]
[376.12554932 -132.39599609]
[388.02075195 -141.53405762]
[399.85461426 -150.75140381]
[411.68847656 -159.96876526]
[423.52233887 -169.18611145]
[435.35620117 -178.40347290]
[447.19006348 -187.62081909]
[459.02395630 -196.83818054]
[470.85781860 -206.05552673]
[482.69168091 -215.27288818]
[494.52554321 -224.49023438]
[506.35940552 -233.70759583]
[518.19329834 -242.92494202]
[530.02716064 -252.14230347]
[541.86102295 -261.35964966]
[553.63299561 -270.65591431]
[565.34259033 -280.03063965]
[577.05218506 -289.40536499]
[582.98944092 -304.07025146]
[597.76055908 -305.98452759]
[609.47015381 -315.35925293]
[621.17974854 -324.73397827]
[632.88928223 -334.10870361]
[630.57659912 -348.95828247]
[639.03997803 -363.44436646]
[656.36791992 -370.01028442]
[664.85711670 -382.37689209]
[673.34637451 -394.74353027]
[681.83557129 -407.11013794]
[690.32476807 -419.47677612]
[698.81396484 -431.84338379]
[707.30316162 -444.21002197]
[715.79235840 -456.57662964]
[724.28161621 -468.94326782]
[718.20745850 -483.12451172]
[720.78704834 -498.33468628]
[731.19726562 -509.72024536]
[746.11621094 -513.64813232]
[760.78332520 -508.86492920]
[770.51837158 -496.89697266]
[772.21496582 -481.56317139]
[765.33172607 -467.75650024]
[752.06500244 -459.88262939]
[736.64819336 -460.45404053]
[728.15899658 -448.08743286]
[719.66979980 -435.72079468]
[711.18060303 -423.35418701]
[702.69140625 -410.98754883]
[694.20220947 -398.62094116]
[685.71295166 -386.25430298]
[677.22375488 -373.88769531]
[668.73455811 -361.52105713]
[677.63226318 -349.44500732]
[691.95880127 -353.88916016]
[706.28533936 -358.33328247]
[720.61187744 -362.77740479]
[728.01733398 -376.48129272]
[742.60980225 -380.78421021]
[755.62872314 -373.63973999]
[769.95526123 -378.08389282]
[784.28179932 -382.52801514]
[792.99786377 -395.99685669]
[808.97619629 -397.43661499]
[819.95959473 -385.74279785]
[817.52252197 -369.88592529]
[803.53448486 -362.03002930]
[788.72595215 -368.20147705]
[774.39941406 -363.75735474]
[760.07287598 -359.31320190]
[753.38293457 -346.05499268]
[738.91705322 -341.34393311]
[725.05603027 -348.45086670]
[710.72949219 -344.00674438]
[696.40295410 -339.56262207]
[682.07641602 -335.11846924]
[663.54394531 -317.55950928]
[642.26403809 -322.39910889]
[630.55444336 -313.02438354]
[618.84484863 -303.64965820]
[607.13525391 -294.27493286]
[602.03552246 -280.28057861]
[586.42687988 -277.69577026]
[574.71728516 -268.32104492]
[563.00775146 -258.94631958]
[559.75598145 -252.32337952]
[551.07836914 -249.52578735]
[539.24450684 -240.30844116]
[527.41064453 -231.09107971]
[515.57678223 -221.87373352]
[503.74288940 -212.65637207]
[491.90902710 -203.43902588]
[480.07516479 -194.22166443]
[468.24130249 -185.00431824]
[456.40744019 -175.78695679]
[444.57357788 -166.56959534]
[432.73971558 -157.35224915]
[420.90582275 -148.13488770]
[409.07196045 -138.91754150]
[397.23809814 -129.70018005]
[393.89810181 -123.12131500]
[385.18386841 -120.43997192]
[373.22784424 -111.38163757]
[377.08282471 -96.95706177]
[375.11621094 -82.11530304]
[367.59677124 -69.12210846]
[355.64346313 -59.97303009]
[341.05880737 -56.08697510]
[326.05728149 -58.08620453]
[312.92895508 -65.69693756]
[300.97293091 -56.63860703]
[289.01690674 -47.58027267]
[282.81164551 -29.25676918]
[262.75814819 -27.09898376]
[251.04856873 -17.72425652]
[239.33898926 -8.34952927]
[227.69232178 1.10325706]
[216.10910034 10.63368130]
[204.52587891 20.16410446]
[193.13607788 29.92487144]
[181.94429016 39.91205978]
[170.75250244 49.89924622]
[159.56071472 59.88642883]
[148.36892700 69.87361908]
[148.06776428 72.64481354]
[146.65992737 75.46485901]
[144.12095642 77.91498566]
[140.57714844 79.57513428]
[136.30168152 80.07583618]
[124.59209442 89.45056152]
[112.88250732 98.82528687]
[127.38768768 95.00433350]
[141.49568176 100.09989166]
[150.21148682 112.30786133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 54]
[5 53]
[6 52]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[14 44]
[15 42]
[16 41]
[17 40]
[19 37]
[20 36]
[22 34]
[23 33]
[24 32]
[25 31]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[71 231]
[72 230]
[73 229]
[74 224]
[75 223]
[76 222]
[77 221]
[78 220]
[82 219]
[83 218]
[84 217]
[86 216]
[87 215]
[88 214]
[92 212]
[93 211]
[94 210]
[101 203]
[102 202]
[103 200]
[104 199]
[105 198]
[106 197]
[107 196]
[108 195]
[109 194]
[110 193]
[111 192]
[112 191]
[113 190]
[114 189]
[115 188]
[116 187]
[117 185]
[118 184]
[119 183]
[121 181]
[122 180]
[123 179]
[124 178]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[154 176]
[155 175]
[156 174]
[157 173]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
