%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUGGAGUUCUACCCCUGCUCCUCUGGUCACCCUCCUGAUGGAUCCCCAUGGUGCCAGGCAGGAAUGGCCUGCUAGGAGAUGCAGUGAGCCCCCAGGACCUCUCCACUGCCUCCUCCACCCCUGUAUUUCACUUGGCUCUCCAAAUUGACUCAACUCCAGACCAUAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[73.58956146 271.52404785]
[72.57160950 256.44244385]
[76.04588318 241.73118591]
[83.70346069 228.69842529]
[94.86342621 218.50300598]
[108.53344727 212.05151367]
[106.39872742 197.20419312]
[104.26400757 182.35687256]
[102.12928009 167.50955200]
[99.99456024 152.66221619]
[97.85984039 137.81489563]
[95.72511292 122.96758270]
[90.48032379 137.02076721]
[85.23553467 151.07395935]
[84.34408569 166.04745483]
[77.09300995 179.17840576]
[64.89514160 187.90834045]
[50.12714005 190.53630066]
[35.66645813 186.55023193]
[24.33066559 176.72680664]
[18.32846260 162.98004150]
[18.82934189 147.98840332]
[25.73570633 134.67292786]
[37.70190048 125.62802124]
[52.39327240 122.61598206]
[65.55701447 115.42459869]
[78.72074890 108.23321533]
[63.72074890 108.23321533]
[48.72074890 108.23321533]
[33.72074890 108.23321533]
[25.10682106 111.37076569]
[18.45361137 108.09695435]
[3.45600176 107.82921600]
[-11.54160881 107.56147766]
[-26.53921890 107.29374695]
[-17.09610939 118.94825745]
[-18.49524879 133.88285828]
[-29.93873215 143.58062744]
[-44.90055466 142.51110840]
[-54.84826660 131.28421021]
[-54.10886765 116.30245209]
[-43.10263824 106.10910797]
[-57.98569870 104.23973083]
[-72.86875916 102.37036133]
[-87.75181580 100.50099182]
[-102.64678192 107.36190033]
[-115.87792969 97.67330933]
[-113.83418274 81.40200806]
[-98.61798096 75.28652191]
[-85.88244629 85.61792755]
[-70.99938202 87.48730469]
[-56.11632538 89.35667419]
[-41.23326492 91.22605133]
[-26.27148438 92.29613495]
[-11.27387333 92.56387329]
[3.72373700 92.83160400]
[18.72134781 93.09934235]
[33.72074890 93.23321533]
[48.72074890 93.23321533]
[63.72074890 93.23321533]
[78.72074890 93.23321533]
[90.56650543 84.03115082]
[94.27610779 69.49708557]
[97.98570251 54.96302795]
[101.69529724 40.42897034]
[105.40489960 25.89490891]
[97.60205078 12.41331577]
[101.57115936 -2.27344251]
[114.47187805 -9.62917995]
[118.18148041 -24.16324043]
[121.89107513 -38.69729996]
[108.37728119 -32.18751144]
[94.16473389 -36.98369598]
[87.35858154 -50.35068130]
[91.84024811 -64.66551971]
[105.05392456 -71.76473236]
[119.46409607 -67.59975433]
[126.85309601 -54.54433441]
[132.09506226 -68.59857941]
[137.33702087 -82.65282440]
[142.57897949 -96.70707703]
[147.82093811 -110.76132202]
[147.09707642 -117.38566589]
[149.48869324 -122.58586884]
[153.50898743 -125.21804810]
[159.24923706 -139.07624817]
[164.98948669 -152.93443298]
[170.72973633 -166.79263306]
[176.46998596 -180.65081787]
[182.21023560 -194.50901794]
[187.82658386 -208.41789246]
[193.31855774 -222.37632751]
[198.30883789 -236.52189636]
[202.79104614 -250.83657837]
[198.68379211 -266.71304321]
[210.56767273 -278.01373291]
[226.21757507 -273.11343384]
[229.53421021 -257.05319214]
[217.10571289 -246.35437012]
[212.62350464 -232.03970337]
[213.83149719 -229.47605896]
[214.07992554 -226.27200317]
[213.11689758 -222.79682922]
[210.83096313 -219.50503540]
[207.27700806 -216.88435364]
[201.78501892 -202.92590332]
[202.26354980 -195.52630615]
[196.06843567 -188.76876831]
[190.32818604 -174.91056824]
[184.58792114 -161.05238342]
[178.84767151 -147.19418335]
[173.10742188 -133.33599854]
[167.36717224 -119.47779846]
[161.87519836 -105.51935577]
[156.63322449 -91.46511078]
[151.39126587 -77.41086578]
[146.14930725 -63.35662079]
[140.90733337 -49.30237198]
[136.42514038 -34.98770142]
[132.71554565 -20.45364189]
[129.00593567 -5.91958237]
[136.80340576 6.71905327]
[133.24839783 21.51150131]
[119.93895721 29.60450745]
[116.22936249 44.13856506]
[112.51976013 58.67262650]
[108.81016541 73.20668793]
[105.10057068 87.74074554]
[111.63772583 83.48387909]
[120.08245850 81.75776672]
[129.59164429 83.14071655]
[139.17364502 87.95454407]
[153.22789001 93.19650269]
[167.28213501 98.43846893]
[185.34828186 94.95346832]
[196.00592041 108.87821960]
[210.15148926 113.86849213]
[224.29705811 118.85876465]
[238.44262695 123.84903717]
[254.45559692 120.31107330]
[265.32489014 132.59072876]
[259.86917114 148.05575562]
[243.70074463 150.79704285]
[233.45236206 137.99461365]
[219.30679321 133.00433350]
[205.16120911 128.01406860]
[191.01564026 123.02378845]
[179.95120239 127.96294403]
[168.11213684 123.89621735]
[162.04017639 112.49271393]
[147.98593140 107.25074768]
[133.93168640 102.00878906]
[128.09187317 106.71480560]
[130.40342712 121.53562164]
[116.41224670 116.12683868]
[110.57243347 120.83285522]
[112.70716095 135.68017578]
[114.84188080 150.52749634]
[116.97660828 165.37481689]
[119.11132812 180.22213745]
[121.24604797 195.06947327]
[123.38077545 209.91679382]
[138.31466675 212.25566101]
[151.89495850 218.89396667]
[162.91409302 229.24142456]
[170.39227295 242.37794495]
[173.66453552 257.13543701]
[172.43991089 272.20169067]
[166.82730103 286.23699951]
[157.32575989 297.99337769]
[144.78018188 306.42541504]
[130.30607605 310.78338623]
[115.19049835 310.67977905]
[100.77751160 306.12377930]
[88.34870148 297.52050781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[27 61]
[28 60]
[29 59]
[30 58]
[32 57]
[33 56]
[34 55]
[35 54]
[42 53]
[43 52]
[44 51]
[45 50]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[69 121]
[70 120]
[71 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 106]
[92 105]
[93 100]
[94 99]
[132 152]
[133 151]
[134 150]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
