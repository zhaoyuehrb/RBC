%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MCCC1)
} def

/sequence { (\
ACAUUCUUGGAUCAGCCCAAAGGUAGGCUCAGGCUCCGACGGUGGCCGGCGGGGGUCACGAGGCUUCGUAGUGGAGGAACGGGUUUGGCGUGUGGGACGCAGCUGCCUCUGUACUGGGGAGUCACGGAGUGGCCGGGCUCCAGGGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 145 0.017870862 ubox
4 146 0.863339763 ubox
5 144 0.021956446 ubox
5 145 0.957601323 ubox
5 146 0.057029030 ubox
6 143 0.024578992 ubox
6 144 0.997909387 ubox
6 145 0.051760811 ubox
7 142 0.017405521 ubox
7 143 0.997881135 ubox
7 144 0.038776561 ubox
8 142 0.998718215 ubox
8 143 0.018207447 ubox
9 141 0.999959736 ubox
10 140 0.999705092 ubox
11 139 0.782832641 ubox
12 136 0.006472286 ubox
12 137 0.017861080 ubox
13 26 0.004667597 ubox
13 135 0.007403365 ubox
13 136 0.018017987 ubox
14 29 0.004519189 ubox
14 139 0.613400223 ubox
15 24 0.029568089 ubox
15 28 0.004870161 ubox
15 138 0.999112003 ubox
16 23 0.030250802 ubox
16 27 0.004870602 ubox
16 136 0.006737621 ubox
16 137 0.999458017 ubox
16 145 0.003590044 ubox
17 22 0.030156496 ubox
17 23 0.004083880 ubox
17 26 0.004867130 ubox
17 135 0.007309196 ubox
17 136 0.999436518 ubox
17 144 0.003602150 ubox
18 22 0.005704103 ubox
18 135 0.998768734 ubox
18 136 0.003519235 ubox
18 143 0.003598498 ubox
21 29 0.012444630 ubox
22 28 0.013181032 ubox
22 29 0.005540911 ubox
22 30 0.005740833 ubox
22 35 0.008512691 ubox
22 37 0.005792699 ubox
22 134 0.254925165 ubox
22 138 0.003181513 ubox
22 139 0.003685883 ubox
23 28 0.006131671 ubox
23 29 0.004642910 ubox
23 34 0.010026421 ubox
23 36 0.005803173 ubox
23 50 0.003925339 ubox
23 133 0.254893029 ubox
23 138 0.005283458 ubox
24 33 0.010004838 ubox
24 49 0.003739558 ubox
24 131 0.006251631 ubox
24 132 0.252011743 ubox
24 137 0.005213240 ubox
25 35 0.004029867 ubox
25 130 0.003682450 ubox
26 34 0.004069141 ubox
26 35 0.047096118 ubox
26 47 0.004107043 ubox
26 134 0.964057849 ubox
26 139 0.012600202 ubox
27 34 0.055546836 ubox
27 46 0.004109267 ubox
27 50 0.015355733 ubox
27 130 0.249842930 ubox
27 133 0.964741165 ubox
27 138 0.018114052 ubox
28 33 0.055662688 ubox
28 45 0.004101213 ubox
28 49 0.015343619 ubox
28 53 0.005233108 ubox
28 129 0.251410158 ubox
28 132 0.964071668 ubox
28 137 0.018160829 ubox
29 44 0.003423469 ubox
29 48 0.012588385 ubox
29 52 0.005243421 ubox
29 128 0.251325595 ubox
29 131 0.909886955 ubox
29 132 0.033830389 ubox
29 136 0.018098347 ubox
30 48 0.007264608 ubox
30 51 0.005179116 ubox
30 126 0.004201973 ubox
30 127 0.250955915 ubox
30 131 0.292492530 ubox
30 135 0.017859498 ubox
31 130 0.169763853 ubox
32 47 0.024578165 ubox
32 57 0.242772856 ubox
32 123 0.008157657 ubox
32 134 0.017675257 ubox
33 43 0.003728684 ubox
33 46 0.024622282 ubox
33 56 0.242700272 ubox
33 122 0.008238217 ubox
33 130 0.943119121 ubox
33 133 0.017542225 ubox
34 42 0.003875616 ubox
34 45 0.024607685 ubox
34 53 0.004503758 ubox
34 54 0.094832931 ubox
34 55 0.231964206 ubox
34 121 0.008241668 ubox
34 129 0.965390101 ubox
34 132 0.016304562 ubox
35 41 0.003598598 ubox
35 44 0.023303572 ubox
35 53 0.121940574 ubox
35 54 0.219973997 ubox
35 120 0.008233013 ubox
35 128 0.965651942 ubox
35 131 0.010443068 ubox
36 42 0.022886040 ubox
36 52 0.150885585 ubox
36 53 0.208105190 ubox
36 54 0.004867835 ubox
36 119 0.008218627 ubox
36 127 0.965870762 ubox
37 41 0.022777979 ubox
37 51 0.167237147 ubox
37 52 0.195170427 ubox
37 53 0.004866207 ubox
37 118 0.008134819 ubox
37 126 0.965786431 ubox
38 50 0.175831777 ubox
38 123 0.003449569 ubox
38 125 0.943670691 ubox
39 122 0.003340332 ubox
40 48 0.254835819 ubox
40 51 0.012707573 ubox
40 60 0.282835755 ubox
40 116 0.004390270 ubox
40 126 0.008265995 ubox
41 47 0.256703433 ubox
41 50 0.012879311 ubox
41 59 0.207468327 ubox
41 115 0.004119035 ubox
41 123 0.020633426 ubox
41 125 0.016557909 ubox
42 46 0.252561884 ubox
42 59 0.941947275 ubox
42 114 0.003610736 ubox
43 58 0.963885955 ubox
43 113 0.003416186 ubox
44 57 0.965914422 ubox
45 56 0.965596758 ubox
46 53 0.009489791 ubox
46 54 0.036886826 ubox
46 55 0.965266023 ubox
47 52 0.011298699 ubox
47 53 0.050577380 ubox
47 54 0.964432602 ubox
48 57 0.018190393 ubox
49 56 0.018354297 ubox
50 55 0.018369519 ubox
50 60 0.003583819 ubox
51 59 0.003621245 ubox
53 134 0.003574085 ubox
54 134 0.059679822 ubox
55 133 0.059958332 ubox
56 128 0.005264868 ubox
56 132 0.059987332 ubox
57 127 0.005989461 ubox
57 131 0.060015675 ubox
58 130 0.059948506 ubox
59 126 0.241097350 ubox
59 129 0.057743859 ubox
60 67 0.003891285 ubox
60 123 0.026352447 ubox
60 125 0.258019870 ubox
61 66 0.003643725 ubox
61 122 0.017795935 ubox
62 123 0.993669140 ubox
63 122 0.999052881 ubox
64 119 0.003822229 ubox
64 121 0.999926684 ubox
65 118 0.003795492 ubox
65 120 0.999625016 ubox
66 117 0.003982094 ubox
66 118 0.004579479 ubox
66 119 0.999133181 ubox
67 116 0.004096948 ubox
67 117 0.006387816 ubox
67 118 0.999674804 ubox
67 119 0.003354585 ubox
68 114 0.008858148 ubox
69 113 0.008908292 ubox
69 116 0.995376418 ubox
70 112 0.008854010 ubox
70 115 0.999403090 ubox
71 112 0.004389642 ubox
71 114 0.999843466 ubox
72 111 0.070641490 ubox
72 113 0.990437744 ubox
73 109 0.003689597 ubox
73 110 0.375890965 ubox
73 112 0.913308901 ubox
74 109 0.450902074 ubox
75 108 0.451397315 ubox
75 110 0.880696588 ubox
76 107 0.451568231 ubox
76 108 0.009059179 ubox
76 109 0.877146370 ubox
76 110 0.130268314 ubox
77 86 0.003682516 ubox
77 106 0.449146049 ubox
77 107 0.070189501 ubox
77 108 0.557168195 ubox
77 109 0.155601365 ubox
78 85 0.004905558 ubox
78 86 0.004051767 ubox
78 108 0.149714486 ubox
79 84 0.004070871 ubox
79 85 0.003861239 ubox
79 91 0.003850069 ubox
79 93 0.004436221 ubox
79 112 0.011209207 ubox
80 87 0.011576652 ubox
80 90 0.004136396 ubox
80 92 0.004610953 ubox
80 105 0.478527925 ubox
80 111 0.012872246 ubox
81 86 0.008997425 ubox
81 89 0.004171402 ubox
81 91 0.004601738 ubox
81 104 0.474907691 ubox
81 107 0.202394198 ubox
81 108 0.655285581 ubox
81 109 0.011943109 ubox
81 110 0.011322241 ubox
82 103 0.459883957 ubox
82 104 0.326530944 ubox
82 106 0.200413701 ubox
82 107 0.781291198 ubox
82 108 0.006342258 ubox
82 109 0.010973319 ubox
83 89 0.005128713 ubox
83 98 0.007662968 ubox
83 103 0.365456335 ubox
83 106 0.781886490 ubox
83 107 0.006996218 ubox
83 108 0.010177452 ubox
84 88 0.004799321 ubox
84 97 0.007667814 ubox
84 102 0.375160123 ubox
84 105 0.770659109 ubox
85 96 0.007659824 ubox
85 101 0.294409351 ubox
85 102 0.158078710 ubox
86 95 0.007591101 ubox
86 99 0.004566131 ubox
86 101 0.189477427 ubox
86 105 0.072562914 ubox
87 98 0.004860793 ubox
87 100 0.144777494 ubox
87 104 0.390255047 ubox
87 107 0.036036825 ubox
88 100 0.898072309 ubox
88 103 0.411659121 ubox
88 106 0.036083400 ubox
89 99 0.910155235 ubox
89 102 0.411311802 ubox
89 105 0.036078630 ubox
90 98 0.910177730 ubox
90 100 0.280554295 ubox
90 103 0.013432846 ubox
90 104 0.030877366 ubox
91 97 0.906122264 ubox
91 99 0.281503762 ubox
91 101 0.288476156 ubox
91 102 0.008737779 ubox
92 98 0.281375473 ubox
92 100 0.300898442 ubox
92 103 0.011868173 ubox
93 97 0.253517352 ubox
93 99 0.300284037 ubox
93 101 0.026807002 ubox
93 102 0.010777173 ubox
94 98 0.286025994 ubox
94 100 0.027236130 ubox
126 134 0.005430608 ubox
127 133 0.005427812 ubox
4 146 0.9500000 lbox
5 145 0.9500000 lbox
6 144 0.9500000 lbox
7 143 0.9500000 lbox
8 142 0.9500000 lbox
9 141 0.9500000 lbox
10 140 0.9500000 lbox
11 139 0.9500000 lbox
15 138 0.9500000 lbox
16 137 0.9500000 lbox
17 136 0.9500000 lbox
18 135 0.9500000 lbox
26 134 0.9500000 lbox
27 133 0.9500000 lbox
28 132 0.9500000 lbox
29 131 0.9500000 lbox
33 130 0.9500000 lbox
34 129 0.9500000 lbox
35 128 0.9500000 lbox
36 127 0.9500000 lbox
37 126 0.9500000 lbox
38 125 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
62 123 0.9500000 lbox
63 122 0.9500000 lbox
64 121 0.9500000 lbox
65 120 0.9500000 lbox
66 119 0.9500000 lbox
67 118 0.9500000 lbox
69 116 0.9500000 lbox
70 115 0.9500000 lbox
71 114 0.9500000 lbox
72 113 0.9500000 lbox
73 112 0.9500000 lbox
75 110 0.9500000 lbox
76 109 0.9500000 lbox
81 108 0.9500000 lbox
82 107 0.9500000 lbox
83 106 0.9500000 lbox
84 105 0.9500000 lbox
88 100 0.9500000 lbox
89 99 0.9500000 lbox
90 98 0.9500000 lbox
91 97 0.9500000 lbox
showpage
end
%%EOF
