%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCGGGCGCCGGUGGCGCCAUCUUACUCGGUUGCGGGAGGGGUCACAGGUCAGUGCCGGAGCCUCCGCGAGUGAAGGAAGACGAAGUGCGUGACCCGACCGGCUGUGGUGUUCCAGUCCCCACUGACCAGUAGGAGCAGCAGGGCGUCGGCUUGUGAGGUGGCUUUUCCUCGGGGCAACCGAGGAAGGCCCCAAGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[84.71733856 231.08833313]
[87.08506775 215.63104248]
[98.86865997 205.35092163]
[98.40673828 190.35803223]
[97.94480896 175.36514282]
[97.13670349 160.38693237]
[95.98284912 145.43136597]
[94.82899475 130.47581482]
[93.67513275 115.52026367]
[78.90975189 112.87763214]
[72.64035034 126.50461578]
[66.37094116 140.13159180]
[65.24370575 157.04801941]
[48.67632294 160.64776611]
[40.63094711 145.72436523]
[52.74396515 133.86218262]
[59.01337051 120.23520660]
[65.28277588 106.60823059]
[66.20619202 91.63668060]
[61.65889740 77.34255219]
[57.11160660 63.04841995]
[52.56431961 48.75428772]
[48.01702881 34.46015930]
[43.46973801 20.16602898]
[38.92244720 5.87189913]
[34.37515640 -8.42223072]
[29.82786751 -22.71636009]
[25.28057671 -37.01049042]
[13.38027763 -46.14191055]
[-1.60371721 -46.83466339]
[-16.58771133 -47.52741623]
[-30.73049355 -40.43571091]
[-43.08684921 -48.75254440]
[-58.07084656 -49.44529724]
[-73.05484009 -50.13805008]
[-88.03883362 -50.83079910]
[-103.02282715 -51.52355194]
[-118.00682068 -52.21630478]
[-124.05293274 -49.51902390]
[-129.70397949 -50.18428040]
[-133.43948364 -53.16815948]
[-148.39503479 -54.32201385]
[-163.35058594 -55.47587204]
[-177.70504761 -48.82305527]
[-189.79942322 -57.51646042]
[-204.75498962 -58.67031860]
[-212.59765625 -51.12352753]
[-223.08378601 -49.18190765]
[-232.70388794 -53.24954605]
[-238.37249756 -61.75949478]
[-253.28543091 -63.37336349]
[-268.19836426 -64.98722839]
[-282.97348022 -57.87189484]
[-296.36883545 -67.33216095]
[-294.60443115 -83.63610840]
[-279.49533081 -90.01164246]
[-266.58450317 -79.90015411]
[-251.67156982 -78.28629303]
[-236.75863647 -76.67242432]
[-219.69438171 -85.75942230]
[-203.60113525 -73.62586975]
[-188.64556885 -72.47201538]
[-175.36082458 -79.20735931]
[-162.19673157 -70.43142700]
[-147.24118042 -69.27757263]
[-132.28562927 -68.12371063]
[-117.31407166 -67.20030212]
[-102.33007812 -66.50754547]
[-87.34608459 -65.81479645]
[-72.36209106 -65.12203979]
[-57.37809372 -64.42929077]
[-42.39410019 -63.73653793]
[-29.32307243 -70.87779236]
[-15.89496040 -62.51140976]
[-0.91096532 -61.81865692]
[14.07302952 -61.12590790]
[18.26378441 -67.34584045]
[3.29978156 -68.38441467]
[-3.28287148 -81.86286926]
[5.09840775 -94.30288696]
[20.06242943 -93.26459503]
[26.64529228 -79.78570557]
[30.83604622 -86.00564575]
[24.56664276 -99.63262177]
[18.29723740 -113.25959778]
[3.80933070 -120.15018463]
[0.30400828 -135.80560303]
[10.47025299 -148.21636963]
[26.50939178 -147.86199951]
[36.11756897 -135.01432800]
[31.92421532 -119.52900696]
[38.19362259 -105.90202332]
[44.46302795 -92.27504730]
[51.89886093 -91.29610443]
[61.03003693 -103.19658661]
[66.77053833 -89.33821106]
[74.20637512 -88.35926056]
[83.78907776 -99.89926910]
[93.37177277 -111.43927765]
[102.95447540 -122.97929382]
[112.53717804 -134.51930237]
[114.02829742 -140.96968079]
[117.96469879 -145.07839966]
[122.59703064 -146.26119995]
[132.53056335 -157.50064087]
[142.46409607 -168.74008179]
[145.80552673 -184.20440674]
[160.03150940 -188.61697388]
[169.96504211 -199.85641479]
[173.30647278 -215.32073975]
[187.53245544 -219.73332214]
[197.46598816 -230.97274780]
[207.39952087 -242.21218872]
[217.33305359 -253.45162964]
[227.26658630 -264.69107056]
[237.20011902 -275.93051147]
[240.02378845 -298.15762329]
[260.78656006 -304.26199341]
[270.00936890 -316.09161377]
[279.23214722 -327.92126465]
[277.04147339 -343.57296753]
[286.62646484 -356.13894653]
[302.30047607 -358.16400146]
[314.76440430 -348.44671631]
[316.62362671 -332.75216675]
[306.77511597 -320.39166260]
[291.06176758 -318.69848633]
[281.83898926 -306.86883545]
[272.61621094 -295.03918457]
[275.23208618 -287.59515381]
[274.68316650 -279.62979126]
[270.98489380 -272.44784546]
[264.67462158 -267.25503540]
[256.73461914 -264.95593262]
[248.43955994 -265.99697876]
[238.50602722 -254.75753784]
[228.57249451 -243.51809692]
[218.63896179 -232.27865601]
[208.70542908 -221.03921509]
[198.77189636 -209.79978943]
[196.14096069 -195.13937378]
[181.20448303 -189.92288208]
[171.27095032 -178.68344116]
[168.64001465 -164.02304077]
[153.70352173 -158.80654907]
[143.77000427 -147.56710815]
[133.83647156 -136.32766724]
[124.07718658 -124.93659973]
[114.49449158 -113.39659119]
[104.91178894 -101.85657501]
[95.32908630 -90.31656647]
[85.74638367 -78.77655792]
[78.50190735 -60.10744095]
[66.51969910 -47.29649734]
[52.60809326 -41.20111847]
[39.57470703 -41.55778122]
[44.12199783 -27.26365089]
[48.66928864 -12.96952057]
[53.21657944 1.32460916]
[57.76386642 15.61873913]
[62.31115723 29.91286850]
[66.85845184 44.20700073]
[71.40573883 58.50112915]
[75.95302582 72.79525757]
[80.50032043 87.08938599]
[106.94651794 72.79527283]
[132.65100098 97.22357941]
[143.41967773 107.66558838]
[154.18835449 118.10759735]
[164.95703125 128.54960632]
[175.72572327 138.99162292]
[186.49440002 149.43362427]
[197.26307678 159.87564087]
[208.03175354 170.31764221]
[218.80043030 180.75965881]
[234.79916382 181.95129395]
[243.72317505 195.28327942]
[238.72671509 210.52844238]
[223.64265442 215.99200439]
[210.04217529 207.48278809]
[208.35842896 191.52833557]
[197.58973694 181.08631897]
[186.82106018 170.64431763]
[176.05238342 160.20230103]
[165.28370667 149.76029968]
[154.51502991 139.31828308]
[143.74635315 128.87628174]
[132.97767639 118.43427277]
[122.20899200 107.99226379]
[108.63069153 114.36640930]
[109.78454590 129.32196045]
[110.93840027 144.27751160]
[112.09226227 159.23307800]
[115.05042267 163.54731750]
[115.96282196 168.10862732]
[115.07865906 172.09506226]
[112.93769836 174.90321350]
[113.39962006 189.89610291]
[113.86154938 204.88899231]
[126.25564575 214.42420959]
[129.57044983 229.70642090]
[122.24082184 243.51983643]
[107.72757721 249.34217834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 193]
[7 192]
[8 191]
[9 190]
[10 18]
[11 17]
[12 16]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 76]
[30 75]
[31 74]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[41 66]
[42 65]
[43 64]
[45 62]
[46 61]
[50 59]
[51 58]
[52 57]
[83 93]
[84 92]
[85 91]
[97 152]
[98 151]
[99 150]
[100 149]
[101 148]
[104 147]
[105 146]
[106 145]
[108 143]
[109 142]
[111 140]
[112 139]
[113 138]
[114 137]
[115 136]
[116 135]
[118 129]
[119 128]
[120 127]
[167 189]
[168 188]
[169 187]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
