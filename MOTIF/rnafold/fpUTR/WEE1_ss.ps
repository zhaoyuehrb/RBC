%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGACUGGACCUGAGGAGACCUCAGCCUCGGUGCUCGGGCCGCCCCGCCUCUGCCGGAAAGUCCGCGCCGCCGCUGCCGCCACCGUCCGCAGCCCGAGCGCCCCGGAGCCGCAGGCCGCCGCCGCGCAGAGACGCCGCGGCUGCGACUAGGCGCGCCCAGCCGCACGUGGCGGACCCGCCCCCAGGCCCGCAGUGUCCUGGACCCCGCAGGCCUCCGCUCUCCUGUCCUCGGCCCCGUCCCCAGGGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[63.59779739 240.21037292]
[51.44404602 231.41911316]
[44.52041245 218.11259460]
[44.29598618 203.11427307]
[50.81838608 189.60656738]
[62.70365906 180.45559692]
[77.42993164 177.60305786]
[91.87250519 181.65423584]
[102.96678162 191.74934387]
[100.19981384 177.00675964]
[97.43283844 162.26417542]
[94.66587067 147.52159119]
[79.84478760 145.21173096]
[72.72275543 158.41311646]
[65.60073090 171.61450195]
[58.47869873 184.81590271]
[51.35667038 198.01728821]
[44.23464203 211.21867371]
[42.03553009 228.02938843]
[25.27300453 230.56990051]
[18.19145966 215.16574097]
[31.03325081 204.09664917]
[38.15528107 190.89524841]
[45.27730942 177.69386292]
[52.39933777 164.49247742]
[59.52136993 151.29109192]
[66.64339447 138.08969116]
[63.16429520 131.44546509]
[49.87571335 138.40344238]
[42.91794586 125.11475372]
[56.20608521 118.15699768]
[52.72698212 111.51276398]
[37.81982040 109.84646606]
[22.91266060 108.18016815]
[8.00549889 106.51387024]
[-6.90166235 104.84757233]
[-21.80882263 103.18127441]
[-36.71598434 101.51497650]
[-51.62314606 99.84867859]
[-66.53030396 98.18238068]
[-81.43746948 96.51608276]
[-96.34462738 94.84978485]
[-110.91889954 101.00617981]
[-122.70788574 91.90293884]
[-137.61505127 90.23664093]
[-147.08653259 99.78972626]
[-160.13853455 102.11831665]
[-171.97679138 96.59426880]
[-178.38294983 85.43277740]
[-193.26835632 83.58223724]
[-202.85726929 93.01744080]
[-215.93708801 95.18442535]
[-227.70611572 89.51438141]
[-233.97372437 78.27451324]
[-248.83511353 76.24000549]
[-263.55718994 82.03403473]
[-275.11740112 72.64198303]
[-289.97879028 70.60747528]
[-304.84017944 68.57296753]
[-315.54937744 75.72920990]
[-327.87054443 73.74636841]
[-335.30041504 64.22238159]
[-350.13549805 62.00422287]
[-364.97058105 59.78606033]
[-375.76745605 66.80930328]
[-388.06317139 64.67422485]
[-395.37466431 55.05907059]
[-410.18118286 52.65759659]
[-426.78402710 56.09012985]
[-434.67852783 41.08636093]
[-422.44653320 29.34691620]
[-407.77972412 37.85108185]
[-392.97320557 40.25255585]
[-376.91009521 33.15651703]
[-362.75241089 44.95097733]
[-347.91732788 47.16913605]
[-333.08224487 49.38729858]
[-317.10815430 42.09313202]
[-302.80566406 53.71158600]
[-287.94430542 55.74609375]
[-273.08291626 57.78060150]
[-259.42379761 51.84104919]
[-246.80059814 61.37862015]
[-231.93922424 63.41312790]
[-218.97613525 52.67936325]
[-201.92652893 54.69518661]
[-191.41781616 68.69682312]
[-176.53240967 70.54737091]
[-163.70306396 59.65409088]
[-146.62983704 61.45888901]
[-135.94874573 75.32948303]
[-121.04158783 76.99578094]
[-107.53357697 70.72019958]
[-94.67832947 79.94261932]
[-79.77117157 81.60891724]
[-64.86400604 83.27521515]
[-49.95684814 84.94151306]
[-35.04968643 86.60781097]
[-20.14252472 88.27410889]
[-5.23536444 89.94040680]
[9.67179680 91.60670471]
[24.57895851 93.27300262]
[39.48611832 94.93930054]
[54.39328003 96.60559845]
[72.44929504 71.48660278]
[98.65937805 66.46134186]
[117.45763397 78.77557373]
[129.78616333 70.23112488]
[142.11468506 61.68667984]
[154.44320679 53.14223480]
[161.93295288 36.30618286]
[179.47839355 35.57493973]
[191.70028687 26.87866592]
[198.45886230 12.57369518]
[213.31466675 11.49933910]
[225.53657532 2.80306602]
[237.75846863 -5.89320755]
[249.98036194 -14.58948040]
[262.20227051 -23.28575516]
[269.80911255 -36.21385193]
[271.47543335 -51.12101364]
[273.14172363 -66.02817535]
[274.80801392 -80.93533325]
[276.47430420 -95.84249878]
[270.31793213 -110.41676331]
[279.42117310 -122.20575714]
[281.08746338 -137.11291504]
[282.75375366 -152.02008057]
[272.69445801 -164.20967102]
[274.28393555 -179.93382263]
[286.57919312 -189.86367798]
[302.28567505 -188.10803223]
[312.08499146 -175.70848083]
[310.16339111 -160.02145386]
[297.66091919 -150.35377502]
[295.99462891 -135.44662476]
[294.32830811 -120.53945923]
[300.60391235 -107.03144836]
[291.38146973 -94.17620087]
[289.71517944 -79.26903534]
[288.04888916 -64.36187744]
[286.38259888 -49.45471573]
[284.71627808 -34.54755402]
[296.37738037 -25.11255455]
[310.60842896 -29.85354996]
[324.83947754 -34.59454346]
[339.07052612 -39.33553696]
[352.33654785 -56.18706512]
[372.34860229 -51.08108521]
[386.39401245 -56.34674454]
[400.43939209 -61.61240387]
[414.48477173 -66.87806702]
[428.53015137 -72.14372253]
[442.54269409 -77.49613953]
[456.52188110 -82.93511200]
[470.50106812 -88.37408447]
[484.44635010 -93.89940643]
[498.35720825 -99.51085663]
[502.15716553 -112.41553497]
[512.53851318 -120.66202545]
[525.58013916 -121.42118073]
[536.51763916 -114.63968658]
[550.49676514 -120.07865906]
[564.47595215 -125.51763153]
[565.21191406 -138.38047791]
[570.72918701 -149.97158813]
[580.17950439 -158.59075928]
[592.14056396 -162.98844910]
[604.83020020 -162.54689026]
[616.37152100 -157.36663818]
[625.07110596 -148.24645996]
[639.18054199 -153.33799744]
[653.28997803 -158.42953491]
[667.39941406 -163.52107239]
[677.55578613 -176.39665222]
[693.74340820 -173.77131653]
[699.30987549 -158.34580994]
[688.52886963 -145.98854065]
[672.49096680 -149.41163635]
[658.38153076 -144.32009888]
[644.27209473 -139.22856140]
[630.16265869 -134.13700867]
[627.73010254 -117.06958771]
[616.91973877 -103.52574158]
[600.64947510 -97.30641937]
[583.38519287 -100.21566010]
[569.91497803 -111.53845215]
[555.93579102 -106.09947968]
[541.95660400 -100.66050720]
[535.83770752 -84.98201752]
[519.95477295 -78.46400452]
[503.96865845 -85.60001373]
[490.05780029 -79.98855591]
[485.04428101 -74.58666229]
[475.94003296 -74.39490509]
[461.96084595 -68.95593262]
[447.98168945 -63.51695633]
[442.90173340 -58.17748260]
[433.79580688 -58.09833908]
[419.75042725 -52.83267975]
[405.70504761 -47.56702042]
[391.65966797 -42.30136108]
[377.61425781 -37.03570175]
[375.32049561 -28.50783157]
[369.27908325 -21.87982178]
[360.74224854 -18.71226120]
[351.56707764 -19.82835579]
[343.81152344 -25.10448265]
[329.58047485 -20.36348724]
[315.34942627 -15.62249279]
[301.11837769 -10.88149834]
[270.89852905 -11.06385517]
[258.67663574 -2.36758137]
[246.45474243 6.32869196]
[234.23284912 15.02496529]
[222.01094055 23.72123909]
[216.12655640 37.40419388]
[200.39656067 39.10056686]
[188.17466736 47.79684067]
[185.86373901 59.65301132]
[175.77658081 67.00096893]
[162.98764038 65.47075653]
[150.65911865 74.01519775]
[138.33059692 82.55964661]
[126.00208282 91.10409546]
[131.82339478 118.09326172]
[109.40846252 144.75462341]
[112.17543030 159.49720764]
[114.94239807 174.23979187]
[117.70936584 188.98237610]
[125.21949005 198.49130249]
[122.76461029 208.99983215]
[127.32923126 223.28843689]
[131.89384460 237.57704163]
[136.45846558 251.86564636]
[141.02308655 266.15423584]
[145.58770752 280.44284058]
[160.36311340 285.18280029]
[169.50341797 297.72210693]
[169.49397278 313.23919678]
[160.33843994 325.76739502]
[145.55728149 330.48934937]
[130.83416748 325.58941650]
[121.83042908 312.95166016]
[122.00819397 297.43560791]
[131.29910278 285.00747681]
[126.73448181 270.71887207]
[122.16986084 256.43026733]
[117.60524750 242.14166260]
[113.04062653 227.85305786]
[108.47600555 213.56443787]
[103.50508881 227.71682739]
[92.71772766 238.13954163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 230]
[10 229]
[11 228]
[12 227]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[44 92]
[45 91]
[49 88]
[50 87]
[54 84]
[55 83]
[57 81]
[58 80]
[59 79]
[62 77]
[63 76]
[64 75]
[67 73]
[68 72]
[107 225]
[108 224]
[109 223]
[110 222]
[112 219]
[113 218]
[115 216]
[116 215]
[117 214]
[118 213]
[119 212]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[126 137]
[127 136]
[128 135]
[144 211]
[145 210]
[146 209]
[147 208]
[149 203]
[150 202]
[151 201]
[152 200]
[153 199]
[154 197]
[155 196]
[156 195]
[157 193]
[158 192]
[162 189]
[163 188]
[164 187]
[171 182]
[172 181]
[173 180]
[174 179]
[232 251]
[233 250]
[234 249]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
