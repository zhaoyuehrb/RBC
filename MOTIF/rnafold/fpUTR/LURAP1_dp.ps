%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LURAP1)
} def

/sequence { (\
GGUUUUGCUCCGCUUUAGCAGCGGCGAAGGGAGGACCCCCGGGAGCCGGUCCCCGGCGUCCGGUCGCCCAGCCCUUUUCAGGCUUGGGCCCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008447773 ubox
1 11 0.013947738 ubox
1 37 0.955635860 ubox
1 38 0.087205751 ubox
1 39 0.009613395 ubox
1 40 0.008639687 ubox
1 65 0.017823254 ubox
1 90 0.015944868 ubox
1 91 0.240635158 ubox
2 8 0.010171191 ubox
2 10 0.013972210 ubox
2 19 0.005383633 ubox
2 22 0.003710210 ubox
2 25 0.004596955 ubox
2 36 0.959817590 ubox
2 37 0.075626253 ubox
2 38 0.011782951 ubox
2 39 0.008663367 ubox
2 64 0.012626230 ubox
2 89 0.009428978 ubox
2 90 0.239318046 ubox
2 93 0.015924677 ubox
3 7 0.009703377 ubox
3 18 0.005362568 ubox
3 21 0.003490058 ubox
3 24 0.004328708 ubox
3 27 0.003846635 ubox
3 28 0.016619860 ubox
3 29 0.037977463 ubox
3 31 0.003874526 ubox
3 32 0.004205930 ubox
3 33 0.003744280 ubox
3 34 0.084639363 ubox
3 35 0.956121394 ubox
3 88 0.004879677 ubox
3 92 0.015396239 ubox
4 17 0.004726733 ubox
4 23 0.003527250 ubox
4 26 0.003697744 ubox
4 27 0.016613766 ubox
4 28 0.208783303 ubox
4 29 0.005228472 ubox
4 30 0.005620147 ubox
4 31 0.004954501 ubox
4 32 0.006273950 ubox
4 33 0.150160707 ubox
4 34 0.944902221 ubox
4 35 0.038043192 ubox
5 21 0.008106487 ubox
5 24 0.006390148 ubox
5 26 0.013548019 ubox
5 27 0.231237527 ubox
5 28 0.019089065 ubox
5 29 0.008699486 ubox
5 30 0.006456937 ubox
5 31 0.007524242 ubox
5 32 0.195579308 ubox
5 33 0.884529571 ubox
5 34 0.040661257 ubox
5 35 0.023653246 ubox
6 20 0.030569141 ubox
6 23 0.010847836 ubox
6 26 0.233922426 ubox
6 27 0.019887175 ubox
6 28 0.018989604 ubox
6 29 0.007619474 ubox
6 30 0.008100042 ubox
6 31 0.205099386 ubox
6 32 0.876337154 ubox
6 33 0.012701738 ubox
6 34 0.027442792 ubox
6 92 0.004807142 ubox
7 13 0.005803926 ubox
7 19 0.032917779 ubox
7 22 0.012740915 ubox
7 25 0.232649331 ubox
7 91 0.006374927 ubox
7 93 0.023848683 ubox
8 12 0.005770818 ubox
8 18 0.032918034 ubox
8 21 0.012747621 ubox
8 24 0.184484946 ubox
8 29 0.230759445 ubox
8 30 0.872599374 ubox
8 31 0.099264943 ubox
8 33 0.325739134 ubox
8 34 0.005235163 ubox
8 92 0.024055798 ubox
9 17 0.031563431 ubox
9 20 0.011820254 ubox
9 23 0.086186295 ubox
9 24 0.007536633 ubox
9 27 0.033549487 ubox
9 28 0.235104300 ubox
9 29 0.860262672 ubox
9 30 0.098827401 ubox
9 31 0.005830611 ubox
9 32 0.330944842 ubox
9 35 0.006757633 ubox
10 23 0.046449897 ubox
10 24 0.895240902 ubox
10 26 0.027137832 ubox
10 29 0.077345256 ubox
10 30 0.009052503 ubox
10 31 0.331630454 ubox
10 34 0.007421075 ubox
11 23 0.909503555 ubox
11 26 0.222189296 ubox
11 29 0.008680239 ubox
11 30 0.331243276 ubox
11 33 0.007419272 ubox
12 19 0.038482259 ubox
12 22 0.914755730 ubox
12 25 0.224387051 ubox
13 18 0.038458271 ubox
13 21 0.914661114 ubox
13 24 0.224377371 ubox
13 29 0.329356222 ubox
13 30 0.008097510 ubox
13 31 0.005357564 ubox
14 20 0.875988096 ubox
14 21 0.009508564 ubox
14 23 0.221043729 ubox
14 27 0.016229950 ubox
14 28 0.329023776 ubox
14 29 0.013241131 ubox
14 30 0.005310672 ubox
15 20 0.045268900 ubox
15 21 0.022108196 ubox
15 23 0.006783921 ubox
15 26 0.015210900 ubox
15 27 0.323954785 ubox
15 28 0.021954693 ubox
15 29 0.005406558 ubox
16 20 0.020361528 ubox
16 23 0.003700665 ubox
16 26 0.287548495 ubox
16 27 0.021497254 ubox
16 28 0.005012203 ubox
18 25 0.330250983 ubox
19 24 0.329900163 ubox
21 93 0.035422223 ubox
22 92 0.036053843 ubox
23 91 0.036102440 ubox
24 90 0.035791481 ubox
24 93 0.017692147 ubox
25 66 0.003425671 ubox
25 92 0.022358060 ubox
26 65 0.007760589 ubox
26 91 0.022323994 ubox
27 64 0.007272146 ubox
29 37 0.047009055 ubox
29 38 0.238989286 ubox
29 39 0.031988597 ubox
29 40 0.011069042 ubox
29 69 0.004028220 ubox
29 91 0.009068654 ubox
30 36 0.047303693 ubox
30 37 0.240313835 ubox
30 38 0.045322128 ubox
30 39 0.011872856 ubox
30 68 0.004038496 ubox
30 90 0.009026218 ubox
30 91 0.012679052 ubox
31 36 0.238839215 ubox
31 37 0.045301405 ubox
31 38 0.012219460 ubox
31 65 0.004068017 ubox
31 67 0.004036571 ubox
31 89 0.005489222 ubox
31 90 0.012662614 ubox
32 64 0.004033550 ubox
33 61 0.005571584 ubox
33 65 0.004422200 ubox
33 91 0.009189168 ubox
34 38 0.003888726 ubox
34 60 0.005990518 ubox
34 64 0.004405533 ubox
34 65 0.069888309 ubox
34 90 0.009269265 ubox
35 59 0.005992108 ubox
35 64 0.069771206 ubox
36 58 0.005979069 ubox
36 63 0.057659479 ubox
37 62 0.052277658 ubox
37 63 0.004154841 ubox
38 56 0.005200008 ubox
38 62 0.005252195 ubox
38 63 0.062370289 ubox
39 55 0.005171866 ubox
39 56 0.004374868 ubox
39 62 0.044630899 ubox
39 63 0.989286010 ubox
40 55 0.004440344 ubox
40 62 0.996743413 ubox
41 53 0.005341132 ubox
41 54 0.004409517 ubox
41 61 0.999415167 ubox
42 52 0.005409687 ubox
42 53 0.004330364 ubox
42 60 0.999191017 ubox
42 61 0.031955681 ubox
43 51 0.005473276 ubox
43 52 0.004247692 ubox
43 59 0.973139876 ubox
43 60 0.037996370 ubox
44 50 0.005471152 ubox
44 59 0.041999507 ubox
45 57 0.999893898 ubox
46 56 0.999971121 ubox
47 55 0.999954014 ubox
48 54 0.999754160 ubox
49 53 0.983614764 ubox
61 92 0.007203785 ubox
62 91 0.035546034 ubox
63 90 0.036657381 ubox
63 93 0.028634661 ubox
64 92 0.046795514 ubox
65 92 0.067126058 ubox
66 89 0.997455130 ubox
66 91 0.028687712 ubox
66 93 0.003813823 ubox
67 87 0.006967035 ubox
67 88 0.999917325 ubox
67 92 0.003423739 ubox
68 86 0.007624476 ubox
68 87 0.999940602 ubox
69 86 0.999813927 ubox
70 84 0.639703274 ubox
70 85 0.764736828 ubox
71 83 0.907337227 ubox
71 84 0.389720250 ubox
71 89 0.005503295 ubox
72 82 0.897906935 ubox
72 88 0.005516466 ubox
73 81 0.882491568 ubox
73 82 0.439745183 ubox
73 87 0.005516445 ubox
74 81 0.467942830 ubox
74 82 0.009960171 ubox
74 86 0.005513742 ubox
75 80 0.451701493 ubox
75 81 0.010881716 ubox
76 80 0.033263572 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
39 63 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 83 0.9500000 lbox
72 82 0.9500000 lbox
73 81 0.9500000 lbox
showpage
end
%%EOF
