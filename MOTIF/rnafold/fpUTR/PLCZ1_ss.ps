%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACAAUGGGAAUUCAGACCAAAAGGAAAAAAUGACAGUCACCUGACAGUGUGGUGCCCAGCCAACCAGCUAUACCUCUUUUGAAGAUUUUAAGAACUUAGCCUCCUGAACAGUCUUCUUCGAAAGUGAAAAGUGGUAACAGCUGAUGAGUAUCAAGAAAUUAUUUUCUGCAAAGGGGCAGAGUUAAUUGUAUUUGGAACCCAUGACAGCACCUACUGGGGAAAGACUUCUAAGUGAGGAGAAACGGCUCUACAG\
GUCAUGAAACU\
) } def
/len { sequence length } bind def

/coor [
[129.99070740 673.47760010]
[121.07395172 685.73596191]
[108.50061035 694.20275879]
[93.78896332 697.85559082]
[78.71551514 696.25335693]
[65.10047150 689.58953857]
[54.58789825 678.66888428]
[48.44724655 664.80999756]
[47.42003250 649.68646240]
[51.63029861 635.12457275]
[60.56962585 622.88262939]
[73.15855408 614.43902588]
[87.87690735 610.81329346]
[89.46238708 595.89733887]
[91.04786682 580.98138428]
[92.63334656 566.06536865]
[94.13104248 551.14038086]
[95.54090881 536.20678711]
[96.95077515 521.27313232]
[98.36064911 506.33956909]
[88.86705017 502.95007324]
[80.26216888 497.81213379]
[72.86172485 491.14074707]
[66.93207550 483.20648193]
[62.68066406 474.32479858]
[60.24878311 464.84335327]
[59.70700073 455.12857056]
[61.05329514 445.55126953]
[64.21400452 436.47271729]
[69.04744720 428.23086548]
[75.35017395 421.12789917]
[82.86540222 415.41897583]
[91.29346466 411.30331421]
[100.30369568 408.91714478]
[99.77432251 393.92648315]
[96.40914154 387.37527466]
[99.32796478 378.75656128]
[98.97500610 363.76071167]
[98.62205505 348.76486206]
[98.26909637 333.76901245]
[87.04699707 317.99856567]
[97.07395935 300.48532104]
[96.36824036 285.50192261]
[95.66252899 270.51852417]
[92.82125854 266.71829224]
[92.31459808 261.10083008]
[95.12069702 255.17512512]
[94.76773834 240.17927551]
[94.41478729 225.18342590]
[94.06182861 210.18757629]
[93.70887756 195.19174194]
[90.42100525 188.60136414]
[93.44103241 180.01760864]
[93.26454163 165.01864624]
[93.08805084 150.01968384]
[92.91156006 135.02072144]
[92.73506927 120.02175903]
[75.77350616 102.63137054]
[85.32129669 76.81749725]
[75.19286346 65.75337219]
[65.06443787 54.68924332]
[54.93600464 43.62511444]
[35.96507263 43.48954010]
[23.36063576 29.74221420]
[24.81733894 11.46955490]
[14.43137074 0.64681667]
[4.04540205 -10.17592144]
[-6.34056664 -20.99865913]
[-14.51065063 -25.00506973]
[-16.78413582 -32.01037216]
[-27.04204559 -42.95455933]
[-40.33677673 -38.21244431]
[-54.39247131 -38.88719940]
[-67.09346008 -44.84428024]
[-76.54055023 -55.15652084]
[-81.33498383 -68.24830627]
[-80.78549957 -82.13623810]
[-75.00778961 -94.72964478]
[-85.13621521 -105.79376984]
[-95.26464844 -116.85789490]
[-105.39307404 -127.92202759]
[-115.52150726 -138.98614502]
[-125.64994049 -150.05027771]
[-135.77836609 -161.11441040]
[-145.90679932 -172.17852783]
[-156.03523254 -183.24266052]
[-166.16365051 -194.30679321]
[-169.23043823 -179.62364197]
[-182.56735229 -172.75875854]
[-196.29908752 -178.79525757]
[-200.25798035 -193.26339722]
[-191.51266479 -205.45025635]
[-176.53868103 -206.33207703]
[-185.99903870 -217.97259521]
[-195.45941162 -229.61309814]
[-214.38955688 -230.86389160]
[-226.16387939 -245.32853699]
[-223.63529968 -263.48391724]
[-233.36695862 -274.89862061]
[-243.09860229 -286.31329346]
[-252.83026123 -297.72796631]
[-268.45660400 -302.70288086]
[-271.69656372 -318.77877808]
[-259.21716309 -329.41818237]
[-243.85612488 -323.67614746]
[-241.41557312 -307.45962524]
[-231.68392944 -296.04495239]
[-221.95227051 -284.63027954]
[-212.22062683 -273.21557617]
[-200.96189880 -274.79675293]
[-190.22111511 -270.71881104]
[-182.69345093 -261.88186646]
[-180.32684326 -250.39495850]
[-183.81889343 -239.07347107]
[-174.35853577 -227.43295288]
[-164.89816284 -215.79244995]
[-155.09953308 -204.43521118]
[-144.97109985 -193.37109375]
[-134.84266663 -182.30696106]
[-124.71424103 -171.24282837]
[-114.58580780 -160.17871094]
[-104.45738220 -149.11457825]
[-94.32894897 -138.05046082]
[-84.20052338 -126.98632812]
[-74.07209015 -115.92220306]
[-63.94366074 -104.85807037]
[-48.71729279 -109.75794983]
[-32.82172775 -107.51088715]
[-19.45350838 -98.51738739]
[-11.32333755 -84.53977966]
[-10.10649300 -68.35707092]
[-16.09785652 -53.21247101]
[-5.83994627 -42.26828003]
[4.48217106 -31.38462830]
[14.86814022 -20.56188965]
[25.25410843 -9.73915195]
[35.64007568 1.08358610]
[46.78636169 -1.15682983]
[57.74833298 2.28252077]
[65.78255463 10.66158962]
[68.82047272 21.98946381]
[66.00012970 33.49668503]
[76.12856293 44.56081390]
[86.25699615 55.62493896]
[96.38542175 66.68906403]
[111.28170776 68.44993591]
[123.71068573 60.05229187]
[136.13966370 51.65464401]
[143.24279785 37.51759720]
[158.12026978 36.80344009]
[170.54925537 28.40579414]
[177.65238953 14.26874733]
[192.52986145 13.55458927]
[204.95884705 5.15694380]
[217.38781738 -3.24070191]
[229.81680298 -11.63834763]
[242.24577332 -20.03599358]
[250.28169250 -38.54755783]
[269.63235474 -38.98881531]
[281.86029053 -47.67659378]
[294.08822632 -56.36437607]
[306.31616211 -65.05215454]
[318.54409790 -73.73992920]
[321.45266724 -86.28297424]
[331.78765869 -93.27050781]
[343.71990967 -91.41820526]
[356.04922485 -99.96150970]
[368.37854004 -108.50481415]
[380.70785522 -117.04811859]
[393.03717041 -125.59142303]
[405.36645508 -134.13471985]
[407.94015503 -149.72804260]
[420.83468628 -158.86627197]
[436.39990234 -156.12786865]
[445.40130615 -143.13746643]
[442.49847412 -127.60204315]
[429.41363525 -118.73850250]
[413.90975952 -121.80541229]
[401.58047485 -113.26210785]
[389.25115967 -104.71880341]
[376.92184448 -96.17549896]
[364.59252930 -87.63220215]
[352.26321411 -79.08889771]
[345.61437988 -62.83257294]
[327.23187256 -61.51199341]
[315.00393677 -52.82421494]
[302.77600098 -44.13643646]
[290.54806519 -35.44865799]
[278.32012939 -26.76087761]
[277.53695679 -16.61446953]
[271.17874146 -8.38984776]
[261.14236450 -4.93351269]
[250.64343262 -7.60701323]
[238.21444702 0.79063249]
[225.78546143 9.18827820]
[213.35649109 17.58592415]
[200.92750549 25.98357010]
[194.71337891 39.51996231]
[178.94689941 40.83477402]
[166.51791382 49.23242188]
[160.30378723 62.76881027]
[144.53730774 64.08362579]
[132.10833740 72.48126984]
[119.67935181 80.87891388]
[124.37049103 90.35159302]
[124.97932434 100.42638397]
[121.77570343 109.49308014]
[115.61135101 116.24046326]
[107.73403168 119.84526825]
[107.91052246 134.84423828]
[108.08701324 149.84318542]
[108.26350403 164.84214783]
[108.43999481 179.84111023]
[108.70471954 194.83877563]
[109.05767822 209.83462524]
[109.41062927 224.83047485]
[109.76358795 239.82632446]
[110.11654663 254.82217407]
[110.64591217 269.81283569]
[111.35163116 284.79620361]
[112.05734253 299.77960205]
[120.48027802 306.59353638]
[123.71440125 316.70370483]
[120.92717743 326.71881104]
[113.26494598 333.41607666]
[113.61789703 348.41192627]
[113.97085571 363.40777588]
[114.32380676 378.40362549]
[114.76498413 393.39712524]
[115.29434967 408.38778687]
[136.69433594 415.55859375]
[152.73403931 431.99148560]
[159.61715698 454.31140137]
[155.48171997 477.69964600]
[140.88630676 496.93371582]
[148.46260071 509.87976074]
[162.11070251 517.88226318]
[161.86125183 532.77478027]
[169.43754578 545.72082520]
[177.01383972 558.66680908]
[184.59013367 571.61285400]
[199.94122314 575.37048340]
[208.06752014 588.92547607]
[204.14782715 604.23602295]
[190.50762939 612.21850586]
[175.23942566 608.13720703]
[167.40155029 594.41339111]
[171.64408875 579.18914795]
[164.06779480 566.24310303]
[156.49150085 553.29711914]
[148.91520691 540.35107422]
[135.80902100 533.27453613]
[135.51657104 517.45605469]
[127.94026947 504.51000977]
[113.29424286 507.74942017]
[111.88437653 522.68304443]
[110.47450256 537.61663818]
[109.06463623 552.55023193]
[111.36823273 561.35333252]
[107.54931641 567.65087891]
[105.96383667 582.56683350]
[104.37835693 597.48284912]
[102.79288483 612.39880371]
[116.42018890 619.03747559]
[126.95286560 629.93878174]
[133.11904907 643.78631592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 263]
[14 262]
[15 261]
[16 260]
[17 258]
[18 257]
[19 256]
[20 255]
[34 230]
[35 229]
[37 228]
[38 227]
[39 226]
[40 225]
[42 221]
[43 220]
[44 219]
[47 218]
[48 217]
[49 216]
[50 215]
[51 214]
[53 213]
[54 212]
[55 211]
[56 210]
[57 209]
[59 145]
[60 144]
[61 143]
[62 142]
[65 137]
[66 136]
[67 135]
[68 134]
[70 133]
[71 132]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[93 116]
[94 115]
[95 114]
[98 109]
[99 108]
[100 107]
[101 106]
[146 204]
[147 203]
[148 202]
[150 200]
[151 199]
[153 197]
[154 196]
[155 195]
[156 194]
[157 193]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[235 254]
[236 253]
[238 251]
[239 250]
[240 249]
[241 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
