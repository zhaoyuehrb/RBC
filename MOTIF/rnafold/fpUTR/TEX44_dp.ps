%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TEX44)
} def

/sequence { (\
ACUCCCUCCAACCGCCACAAGCAGCAAAGGGCAUAGAUGACCACAGGAGAGCCCUAGGGGGAGGCCGGCUCCACCAGCAGCCCCAUAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 21 0.005252096 ubox
2 24 0.007635851 ubox
2 36 0.008287160 ubox
2 49 0.019148192 ubox
2 51 0.039714447 ubox
2 57 0.017608374 ubox
2 59 0.006124529 ubox
2 60 0.012788728 ubox
2 61 0.164592370 ubox
2 63 0.863825665 ubox
2 64 0.043303260 ubox
3 20 0.005032125 ubox
3 23 0.007474695 ubox
3 35 0.008217019 ubox
3 48 0.019265092 ubox
3 50 0.039772425 ubox
3 56 0.016442346 ubox
3 58 0.005340572 ubox
3 59 0.009491515 ubox
3 60 0.165749943 ubox
3 61 0.021192853 ubox
3 62 0.925911649 ubox
3 63 0.034924532 ubox
3 64 0.017143130 ubox
4 31 0.019888137 ubox
4 47 0.019114718 ubox
4 49 0.038662511 ubox
4 57 0.007900105 ubox
4 58 0.011475031 ubox
4 59 0.224022081 ubox
4 60 0.028179192 ubox
4 61 0.930908043 ubox
4 63 0.024515320 ubox
4 64 0.009949859 ubox
5 30 0.020109189 ubox
5 46 0.018903908 ubox
5 47 0.036545781 ubox
5 57 0.012832495 ubox
5 58 0.224590467 ubox
5 59 0.031033068 ubox
5 60 0.929604503 ubox
5 61 0.140123460 ubox
5 63 0.008412410 ubox
5 64 0.138758243 ubox
6 21 0.005901153 ubox
6 24 0.007146932 ubox
6 29 0.020182437 ubox
6 36 0.004071435 ubox
6 46 0.036626235 ubox
6 47 0.003232804 ubox
6 49 0.035652032 ubox
6 51 0.003200665 ubox
6 57 0.225098500 ubox
6 58 0.031487021 ubox
6 59 0.928210263 ubox
6 60 0.149018068 ubox
6 61 0.010339035 ubox
6 63 0.140324039 ubox
7 20 0.005724298 ubox
7 23 0.007112858 ubox
7 28 0.019473707 ubox
7 31 0.004946219 ubox
7 35 0.003956974 ubox
7 37 0.003580194 ubox
7 40 0.006873567 ubox
7 45 0.034197409 ubox
7 48 0.037732641 ubox
7 50 0.003232763 ubox
7 56 0.209616614 ubox
7 57 0.029487503 ubox
7 58 0.733620479 ubox
7 59 0.157125518 ubox
7 60 0.010373640 ubox
7 62 0.140663049 ubox
8 30 0.008098122 ubox
8 31 0.013347778 ubox
8 36 0.004186293 ubox
8 39 0.007923432 ubox
8 47 0.037957159 ubox
8 49 0.003233381 ubox
8 57 0.723814536 ubox
8 58 0.587325220 ubox
8 59 0.013884819 ubox
8 61 0.140689424 ubox
9 29 0.008625241 ubox
9 30 0.013397321 ubox
9 39 0.008201364 ubox
9 46 0.037914833 ubox
9 57 0.588930547 ubox
9 58 0.014940670 ubox
9 59 0.003564428 ubox
9 60 0.140397159 ubox
10 38 0.007990353 ubox
12 30 0.010256574 ubox
12 31 0.005047604 ubox
12 47 0.003554256 ubox
12 58 0.136135629 ubox
12 59 0.040463529 ubox
12 60 0.003343384 ubox
12 61 0.004139320 ubox
13 29 0.010747128 ubox
13 30 0.005054469 ubox
13 39 0.006785847 ubox
13 46 0.003558144 ubox
13 57 0.136519785 ubox
13 58 0.040647428 ubox
13 59 0.004520670 ubox
13 60 0.004282383 ubox
14 22 0.639420633 ubox
14 25 0.750858570 ubox
14 32 0.035401528 ubox
14 38 0.004345189 ubox
15 21 0.639171207 ubox
15 24 0.751290284 ubox
15 30 0.003827306 ubox
15 31 0.035405121 ubox
15 58 0.006130635 ubox
15 59 0.003398164 ubox
16 29 0.004441365 ubox
16 30 0.035317432 ubox
16 39 0.005511943 ubox
16 57 0.006278149 ubox
16 58 0.003410575 ubox
17 38 0.005331252 ubox
21 32 0.012631610 ubox
21 81 0.009262195 ubox
22 31 0.012648820 ubox
22 80 0.009270894 ubox
24 32 0.019462816 ubox
24 78 0.009614008 ubox
25 31 0.019473323 ubox
25 77 0.009617529 ubox
28 55 0.961059408 ubox
29 42 0.049071869 ubox
29 54 0.996454121 ubox
29 55 0.005627964 ubox
29 83 0.004738475 ubox
30 41 0.048859577 ubox
30 42 0.039837393 ubox
30 53 0.996631343 ubox
30 54 0.004924910 ubox
30 82 0.004761238 ubox
31 41 0.040020003 ubox
31 52 0.996634363 ubox
31 53 0.003792325 ubox
31 81 0.004772761 ubox
32 39 0.055482447 ubox
32 51 0.995280484 ubox
32 80 0.004777891 ubox
33 38 0.047284449 ubox
35 55 0.003181706 ubox
36 54 0.003185597 ubox
38 45 0.903919809 ubox
39 44 0.904942589 ubox
41 47 0.073538698 ubox
41 58 0.006935749 ubox
41 59 0.016979010 ubox
42 46 0.073130245 ubox
42 57 0.007899527 ubox
42 58 0.017099238 ubox
45 55 0.053146704 ubox
46 53 0.015834298 ubox
46 54 0.055695970 ubox
46 55 0.005312489 ubox
47 52 0.015973088 ubox
47 53 0.055578723 ubox
47 54 0.005494871 ubox
48 55 0.005654166 ubox
49 54 0.005815549 ubox
52 59 0.005137957 ubox
53 58 0.005168114 ubox
55 87 0.031273286 ubox
56 86 0.041796710 ubox
57 75 0.008807239 ubox
57 84 0.041898401 ubox
58 74 0.008769461 ubox
58 75 0.007837655 ubox
58 83 0.040822959 ubox
58 84 0.198667127 ubox
59 74 0.007863590 ubox
59 82 0.039663091 ubox
59 83 0.199801928 ubox
59 84 0.004838769 ubox
60 72 0.013599415 ubox
60 81 0.038401392 ubox
60 82 0.200382917 ubox
60 83 0.005097055 ubox
60 84 0.151695419 ubox
61 71 0.013799000 ubox
61 81 0.200605057 ubox
61 82 0.004061606 ubox
61 83 0.152805088 ubox
62 70 0.013808231 ubox
63 69 0.013802070 ubox
63 82 0.399869664 ubox
63 83 0.033002923 ubox
63 84 0.149741742 ubox
64 78 0.306530161 ubox
64 81 0.488161377 ubox
64 82 0.034991802 ubox
64 83 0.166749326 ubox
65 77 0.306649202 ubox
65 80 0.488837421 ubox
67 75 0.307774119 ubox
67 82 0.809281099 ubox
67 83 0.051730547 ubox
67 84 0.013200249 ubox
68 74 0.307197733 ubox
68 78 0.493410906 ubox
68 81 0.811878884 ubox
68 82 0.036898295 ubox
68 83 0.010042229 ubox
69 77 0.493476029 ubox
69 80 0.812687742 ubox
70 76 0.473208948 ubox
70 79 0.801464106 ubox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
67 82 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
showpage
end
%%EOF
