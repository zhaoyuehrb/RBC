%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLEC2A)
} def

/sequence { (\
UGAAAAGCUUUCUAGUCCUCUCCUACUGAUCUCCAUCGGUUAGCGCCUUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.056623707 ubox
1 25 0.008325598 ubox
1 35 0.008448077 ubox
1 38 0.010395868 ubox
1 42 0.010451990 ubox
1 45 0.019662829 ubox
1 50 0.031022219 ubox
2 10 0.022302599 ubox
2 11 0.056291168 ubox
2 12 0.460901841 ubox
2 13 0.020330306 ubox
2 17 0.106808703 ubox
2 20 0.320384122 ubox
2 22 0.212482323 ubox
2 24 0.007743688 ubox
2 31 0.012861211 ubox
2 33 0.005419508 ubox
2 34 0.009652823 ubox
2 37 0.027128548 ubox
2 41 0.010655779 ubox
2 44 0.030116164 ubox
2 49 0.056159044 ubox
3 9 0.023301615 ubox
3 10 0.062338591 ubox
3 11 0.460465820 ubox
3 16 0.102206089 ubox
3 19 0.312715385 ubox
3 21 0.209119183 ubox
3 30 0.012726420 ubox
3 32 0.005147630 ubox
3 36 0.026444365 ubox
3 40 0.007470232 ubox
3 41 0.004918924 ubox
3 48 0.056304830 ubox
3 49 0.038410820 ubox
4 9 0.057016942 ubox
4 10 0.446894079 ubox
4 11 0.031698923 ubox
4 41 0.004547775 ubox
4 48 0.037120838 ubox
4 49 0.084405735 ubox
5 9 0.340947475 ubox
5 10 0.032743235 ubox
5 11 0.014059706 ubox
5 41 0.006452382 ubox
5 48 0.085422929 ubox
5 49 0.095154548 ubox
6 10 0.012504500 ubox
6 13 0.113215876 ubox
6 19 0.059844193 ubox
6 21 0.029569411 ubox
6 24 0.022242054 ubox
6 27 0.012184522 ubox
6 32 0.025255843 ubox
6 40 0.003821571 ubox
6 41 0.012095918 ubox
6 48 0.100243509 ubox
6 49 0.011061411 ubox
7 12 0.114107775 ubox
7 16 0.622559360 ubox
7 18 0.056295927 ubox
7 20 0.028632741 ubox
7 23 0.022268764 ubox
7 26 0.012224782 ubox
7 31 0.026449871 ubox
7 40 0.012846330 ubox
7 44 0.162950448 ubox
7 46 0.176188760 ubox
7 47 0.082941160 ubox
7 48 0.006324286 ubox
7 51 0.143130337 ubox
8 15 0.644518673 ubox
8 39 0.012916034 ubox
8 43 0.162796415 ubox
8 45 0.185002683 ubox
8 50 0.143314485 ubox
9 14 0.628101118 ubox
9 15 0.014731341 ubox
9 29 0.014634614 ubox
9 38 0.012205878 ubox
9 42 0.151316967 ubox
9 43 0.011120571 ubox
10 14 0.017700290 ubox
10 28 0.014233048 ubox
10 29 0.007604061 ubox
10 42 0.010926982 ubox
10 43 0.019580371 ubox
11 28 0.006063522 ubox
11 29 0.044262699 ubox
11 39 0.010729818 ubox
11 42 0.015073023 ubox
12 28 0.045809540 ubox
12 38 0.011126290 ubox
12 39 0.074837144 ubox
12 43 0.165939802 ubox
13 25 0.130102352 ubox
13 28 0.066289220 ubox
13 38 0.070343100 ubox
13 42 0.166710879 ubox
13 50 0.033080953 ubox
14 21 0.153238250 ubox
14 24 0.147699063 ubox
14 27 0.091547241 ubox
14 32 0.029310498 ubox
14 41 0.165701951 ubox
14 48 0.050157921 ubox
14 49 0.036107830 ubox
15 20 0.165418251 ubox
15 23 0.148968606 ubox
15 26 0.093540683 ubox
15 30 0.015169193 ubox
15 31 0.029607603 ubox
15 36 0.036582847 ubox
15 40 0.088711550 ubox
15 44 0.085021608 ubox
15 46 0.138932688 ubox
15 47 0.052184093 ubox
15 48 0.030872782 ubox
15 51 0.219235257 ubox
16 25 0.092183062 ubox
16 29 0.022355550 ubox
16 35 0.035876317 ubox
16 39 0.013200287 ubox
16 43 0.070851157 ubox
16 45 0.138646829 ubox
16 50 0.215431943 ubox
17 28 0.022543938 ubox
17 38 0.013513374 ubox
17 39 0.070281618 ubox
18 38 0.070115642 ubox
18 39 0.003759280 ubox
18 43 0.100902817 ubox
19 29 0.052370892 ubox
19 38 0.003323463 ubox
19 42 0.096157978 ubox
20 28 0.053824625 ubox
20 39 0.004332849 ubox
20 43 0.153864920 ubox
21 29 0.032529990 ubox
21 38 0.003806869 ubox
21 42 0.154012962 ubox
22 28 0.033416185 ubox
22 39 0.061540136 ubox
23 38 0.061283830 ubox
23 39 0.009184754 ubox
23 43 0.579474138 ubox
24 38 0.008951246 ubox
24 42 0.588592364 ubox
24 50 0.012164555 ubox
25 40 0.708497860 ubox
25 41 0.416384377 ubox
25 49 0.013023846 ubox
26 39 0.853132149 ubox
26 43 0.479437629 ubox
27 35 0.041683235 ubox
27 38 0.853083241 ubox
27 42 0.487604924 ubox
27 45 0.004185199 ubox
28 34 0.044044725 ubox
28 37 0.856998452 ubox
28 41 0.489119200 ubox
28 44 0.006114978 ubox
29 36 0.843653285 ubox
29 40 0.489538740 ubox
30 35 0.760215450 ubox
30 39 0.488777092 ubox
31 38 0.486502191 ubox
31 39 0.021526025 ubox
32 38 0.020059116 ubox
32 39 0.006889861 ubox
33 38 0.012215821 ubox
33 39 0.018350239 ubox
34 38 0.018482811 ubox
34 50 0.040816616 ubox
35 49 0.040837501 ubox
37 45 0.013494112 ubox
37 50 0.004480423 ubox
38 44 0.014434590 ubox
38 47 0.101278780 ubox
38 52 0.060218256 ubox
39 46 0.101402579 ubox
39 51 0.060835139 ubox
40 45 0.095774172 ubox
40 50 0.058713157 ubox
41 50 0.023515555 ubox
42 48 0.051654896 ubox
42 49 0.026522640 ubox
43 47 0.051996663 ubox
43 48 0.020204151 ubox
43 51 0.447508633 ubox
44 50 0.453260796 ubox
45 49 0.279772747 ubox
45 51 0.351993350 ubox
46 50 0.350134993 ubox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
