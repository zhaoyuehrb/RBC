%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:38:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUAGAGGAGCGGGCGCCGGGACCGGGAAUCCCCGAGCUGCGCCUUCUGGGGACGCGGCCCGGGCUACGUCGGGGCCGUCCGUGGGGAGCGGGGUCCUGGAGGCUGCGCGGGGCUGAGGCGGCCUCGAUUUGGGAACUGCCUGAAGAUGCCGGCCUAAGCCUGGAGUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[102.52926636 117.20042419]
[98.09589386 131.53028870]
[93.66252136 145.86016846]
[104.15847778 157.07312012]
[107.62612915 172.03544617]
[103.13269806 186.72233582]
[91.88689423 197.18309021]
[76.91378021 200.60382080]
[62.24105072 196.06437683]
[51.81559753 184.78584290]
[48.44181061 169.80207825]
[53.02722549 155.14364624]
[64.33838654 144.75360107]
[79.33265686 141.42678833]
[83.76602936 127.09692383]
[88.19940186 112.76705170]
[76.28633881 121.88182068]
[61.95630264 117.44898224]
[57.27068710 103.19960022]
[66.17330933 91.12718201]
[81.17102814 91.39295197]
[69.09832001 82.49072266]
[57.02560806 73.58849335]
[44.95289993 64.68626404]
[32.88019180 55.78403473]
[20.80748177 46.88180161]
[8.73477268 37.97957230]
[-3.33793592 29.07734299]
[-18.22360420 27.22886658]
[-32.10699081 32.90791702]
[-45.99037552 38.58696365]
[-55.59757233 51.87733078]
[-71.88111115 49.93349838]
[-78.08988190 34.75511932]
[-67.83683014 21.95640564]
[-51.66942596 24.70357704]
[-37.78603745 19.02452850]
[-23.90265274 13.34548092]
[-22.13251305 6.05736685]
[-32.98596954 -4.29649591]
[-18.59222984 -8.51885986]
[-16.82209015 -15.80697441]
[-26.55374146 -27.22165489]
[-36.28539276 -38.63633728]
[-46.01704407 -50.05101776]
[-60.85819626 -55.53287888]
[-63.22743225 -70.23783875]
[-72.95908356 -81.65252686]
[-82.69073486 -93.06720734]
[-92.42238617 -104.48188782]
[-107.26354218 -109.96374512]
[-109.63277435 -124.66870880]
[-119.36442566 -136.08338928]
[-129.09608459 -147.49807739]
[-133.30407715 -148.81985474]
[-136.53309631 -151.18643188]
[-138.57325745 -154.15573120]
[-139.38201904 -157.26310730]
[-139.07685852 -160.07850647]
[-147.97908020 -172.15121460]
[-156.88131714 -184.22392273]
[-165.78353882 -196.29663086]
[-174.68577576 -208.36933899]
[-183.58801270 -220.44204712]
[-192.49023438 -232.51475525]
[-206.90773010 -239.02984619]
[-208.23379517 -253.86529541]
[-217.13603210 -265.93801880]
[-226.03825378 -278.01071167]
[-240.30488586 -287.17041016]
[-235.45254517 -303.41513062]
[-218.49940491 -303.24942017]
[-213.96554565 -286.91296387]
[-205.06332397 -274.84024048]
[-196.16108704 -262.76754761]
[-182.38034058 -257.11596680]
[-180.41752625 -241.41699219]
[-171.51530457 -229.34428406]
[-162.61306763 -217.27157593]
[-153.71083069 -205.19886780]
[-144.80860901 -193.12615967]
[-135.90637207 -181.05345154]
[-127.00414276 -168.98074341]
[-117.68139648 -157.22972107]
[-107.94974518 -145.81504822]
[-98.21809387 -134.40036011]
[-84.07301331 -129.73495483]
[-81.00770569 -114.21353912]
[-71.27605438 -102.79885864]
[-61.54440308 -91.38417816]
[-51.81275177 -79.96949005]
[-37.66767120 -75.30409241]
[-34.60235977 -59.78266907]
[-24.87071037 -48.36798859]
[-15.13905907 -36.95330811]
[-5.40740728 -25.53862572]
[5.56429434 17.00463486]
[17.63700294 25.90686417]
[29.70971107 34.80909348]
[41.78242111 43.71132660]
[53.85512924 52.61355591]
[65.92784119 61.51578522]
[78.00054932 70.41801453]
[90.07325745 79.32024384]
[104.40312958 83.75361633]
[119.39378357 83.22424316]
[134.38444519 82.69487762]
[149.37509155 82.16550446]
[164.36575317 81.63613129]
[179.35639954 81.10675812]
[187.85206604 77.66779327]
[194.61579895 80.70268250]
[209.61346436 80.43795776]
[224.61112976 80.17323303]
[230.03129578 67.10348511]
[239.99731445 57.12098312]
[252.97804260 51.71256638]
[266.99700928 51.66591263]
[279.93319702 56.95499802]
[289.84207153 66.74904633]
[295.24786377 79.54282379]
[310.24786377 79.54282379]
[325.24786377 79.54282379]
[340.24786377 79.54282379]
[355.24786377 79.54282379]
[370.24786377 79.54282379]
[385.24554443 79.27809906]
[400.23617554 78.74872589]
[415.22683716 78.21935272]
[425.81610107 66.48719788]
[441.60375977 65.76248932]
[453.22329712 76.47517395]
[453.78106689 92.26961517]
[442.94610596 103.77525330]
[427.14666748 104.16599274]
[415.75622559 93.21001434]
[400.76556396 93.73938751]
[385.77490234 94.26875305]
[381.90386963 97.11251831]
[376.19842529 97.53442383]
[370.24786377 94.54282379]
[355.24786377 94.54282379]
[340.24786377 94.54282379]
[325.24786377 94.54282379]
[310.24786377 94.54282379]
[295.24786377 94.54282379]
[288.60104370 109.05928040]
[276.24877930 119.26654053]
[260.62686157 123.08605957]
[244.84465027 119.70547485]
[232.06619263 109.75072479]
[224.87585449 95.17089844]
[209.87818909 95.43562317]
[194.88052368 95.70034790]
[179.88577271 96.09741211]
[164.89512634 96.62678528]
[149.90446472 97.15615845]
[134.91380310 97.68553162]
[119.92315674 98.21490479]
[104.93249512 98.74427795]
[119.59844208 98.54230499]
[134.04162598 103.44319153]
[146.93399048 113.28537750]
[151.11376953 127.69126129]
[155.29354858 142.09713745]
[159.47332764 156.50302124]
[163.65310669 170.90890503]
[167.83288574 185.31478882]
[178.05335999 198.84173584]
[167.88435364 212.40740967]
[152.03376770 206.39117432]
[153.42701721 189.49456787]
[149.24722290 175.08868408]
[145.06744385 160.68280029]
[140.88766479 146.27691650]
[136.70788574 131.87104797]
[132.52810669 117.46516418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[29 38]
[30 37]
[31 36]
[42 96]
[43 95]
[44 94]
[45 93]
[47 91]
[48 90]
[49 89]
[50 88]
[52 86]
[53 85]
[54 84]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[67 75]
[68 74]
[69 73]
[105 160]
[106 159]
[107 158]
[108 157]
[109 156]
[110 155]
[112 154]
[113 153]
[114 152]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[127 138]
[128 137]
[129 136]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
