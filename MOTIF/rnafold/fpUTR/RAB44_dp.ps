%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB44)
} def

/sequence { (\
AGCAGUCACCCUACCACCAGGUCCCAGAGCCCAGGGCUGUGUGUUCCACUGGGAGCCUUUGAGAGGGCCAACGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003184606 ubox
2 11 0.003364423 ubox
2 68 0.009228102 ubox
2 74 0.960524866 ubox
3 67 0.007023961 ubox
3 73 0.959240104 ubox
4 12 0.005530021 ubox
4 38 0.003251461 ubox
5 11 0.005782882 ubox
5 14 0.005556553 ubox
5 37 0.003268315 ubox
5 68 0.025204430 ubox
5 72 0.703617623 ubox
5 74 0.059313404 ubox
5 76 0.009731404 ubox
6 13 0.005218132 ubox
6 67 0.009148450 ubox
6 71 0.679523251 ubox
6 73 0.058383983 ubox
6 75 0.009421146 ubox
7 66 0.003613435 ubox
8 22 0.004022156 ubox
9 21 0.004749720 ubox
9 36 0.005187842 ubox
9 53 0.003314970 ubox
9 66 0.015785574 ubox
9 67 0.996507327 ubox
10 20 0.004526277 ubox
10 21 0.017049532 ubox
10 35 0.005291571 ubox
10 52 0.003329327 ubox
10 65 0.015164276 ubox
10 66 0.998935759 ubox
10 67 0.025398233 ubox
11 20 0.017208272 ubox
11 27 0.003245688 ubox
11 34 0.005300672 ubox
11 51 0.003324483 ubox
11 63 0.013928853 ubox
11 65 0.998946708 ubox
11 66 0.025172497 ubox
12 19 0.016577923 ubox
12 26 0.003222599 ubox
12 33 0.005226505 ubox
12 62 0.013589652 ubox
12 64 0.995364472 ubox
12 65 0.023971213 ubox
13 22 0.040953134 ubox
14 21 0.044923132 ubox
15 20 0.044894114 ubox
15 41 0.004547638 ubox
15 43 0.005685280 ubox
15 61 0.943080916 ubox
16 40 0.004641166 ubox
16 42 0.006938445 ubox
16 60 0.914796877 ubox
17 39 0.004298597 ubox
17 41 0.007218136 ubox
17 52 0.006903584 ubox
18 39 0.006509689 ubox
18 51 0.006926013 ubox
18 61 0.032710173 ubox
19 38 0.006604027 ubox
19 50 0.006819699 ubox
19 58 0.962707781 ubox
19 59 0.047647024 ubox
19 60 0.022981240 ubox
20 31 0.003668272 ubox
20 37 0.006098215 ubox
20 38 0.006520209 ubox
20 47 0.004078034 ubox
20 49 0.006088795 ubox
20 57 0.994994091 ubox
20 58 0.028993268 ubox
20 59 0.007365795 ubox
20 69 0.023882983 ubox
21 30 0.003689670 ubox
21 37 0.007253527 ubox
21 46 0.004424723 ubox
21 56 0.994061690 ubox
21 57 0.028484574 ubox
21 58 0.006119785 ubox
21 68 0.023913524 ubox
22 29 0.003520510 ubox
22 36 0.004774825 ubox
22 54 0.849306671 ubox
22 55 0.520207846 ubox
22 64 0.004354978 ubox
22 67 0.023861643 ubox
23 35 0.004768468 ubox
23 36 0.009059361 ubox
23 52 0.007857870 ubox
23 53 0.997720415 ubox
23 63 0.013140123 ubox
23 66 0.023871834 ubox
24 34 0.004713776 ubox
24 35 0.009160670 ubox
24 51 0.007944021 ubox
24 52 0.997929486 ubox
24 53 0.015599830 ubox
24 65 0.023829910 ubox
25 34 0.009187102 ubox
25 41 0.057253366 ubox
25 51 0.997559550 ubox
25 52 0.014766118 ubox
25 61 0.029175494 ubox
26 40 0.109247598 ubox
26 50 0.982789989 ubox
26 60 0.029215954 ubox
27 44 0.003897215 ubox
27 45 0.005190468 ubox
27 46 0.327080916 ubox
27 49 0.871990512 ubox
27 59 0.029222369 ubox
28 38 0.867398211 ubox
28 44 0.011283308 ubox
28 45 0.413310033 ubox
28 50 0.008836090 ubox
28 58 0.029217672 ubox
29 37 0.879986891 ubox
29 40 0.005071729 ubox
29 42 0.018384919 ubox
29 44 0.420834778 ubox
29 49 0.012615839 ubox
29 57 0.029022836 ubox
30 36 0.880024821 ubox
30 39 0.005183043 ubox
30 41 0.018898289 ubox
30 43 0.421088333 ubox
30 53 0.031723896 ubox
30 55 0.003208043 ubox
31 35 0.873624095 ubox
31 52 0.031911212 ubox
32 39 0.062101331 ubox
32 41 0.415624497 ubox
32 43 0.052859870 ubox
32 51 0.031950644 ubox
33 38 0.056080671 ubox
33 40 0.405439577 ubox
33 42 0.053249407 ubox
33 45 0.035457378 ubox
33 50 0.031891665 ubox
33 59 0.003231576 ubox
34 44 0.039614805 ubox
34 45 0.004388853 ubox
34 46 0.176745304 ubox
34 47 0.091816738 ubox
34 49 0.030958123 ubox
34 58 0.003553911 ubox
35 44 0.004356112 ubox
35 45 0.178323649 ubox
35 46 0.091778824 ubox
35 47 0.029346757 ubox
35 57 0.003663813 ubox
36 42 0.044479857 ubox
36 44 0.188157568 ubox
36 45 0.069978347 ubox
36 46 0.028621649 ubox
36 56 0.003668350 ubox
37 41 0.044372176 ubox
37 43 0.197422032 ubox
37 55 0.003669223 ubox
38 48 0.032827626 ubox
38 54 0.003599270 ubox
39 47 0.081521854 ubox
39 49 0.294581754 ubox
39 50 0.007951418 ubox
39 76 0.009513771 ubox
40 48 0.339351901 ubox
40 75 0.009638248 ubox
41 47 0.351484852 ubox
41 49 0.187547628 ubox
41 74 0.009897938 ubox
42 48 0.210972147 ubox
42 73 0.009895682 ubox
43 47 0.214542637 ubox
43 49 0.025357700 ubox
43 56 0.043461573 ubox
43 72 0.009895237 ubox
44 48 0.025615808 ubox
44 54 0.009919627 ubox
44 55 0.044090694 ubox
44 71 0.009484841 ubox
45 53 0.010762563 ubox
45 54 0.049820133 ubox
45 70 0.005456409 ubox
46 52 0.011508419 ubox
46 53 0.050573992 ubox
47 51 0.011549840 ubox
47 52 0.050485811 ubox
55 68 0.023163371 ubox
56 66 0.004020070 ubox
56 67 0.023219579 ubox
57 63 0.013548360 ubox
57 65 0.004490665 ubox
57 66 0.023203431 ubox
58 62 0.012248559 ubox
58 64 0.004750419 ubox
58 65 0.022752112 ubox
59 63 0.004492410 ubox
59 64 0.018456299 ubox
65 77 0.005407611 ubox
66 76 0.005533624 ubox
67 74 0.029291281 ubox
68 73 0.032736536 ubox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
showpage
end
%%EOF
