%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACACGACACCGGGAAGCGCCACCCGGAGGCGGAAAUCAGCCCGCGUCCGGCGCAGGCGGGAGAAGGGAGAGGAGUGACAUCCGUUUGUCGGAAGUCGCUCCUCCCCCUUCCUUCGCUUUUUUUCCUUGUCAUUGGUUCCUGGCACUCGGGCCCCACCUCCUCCGGCUACGCCCCUCACGGCCGCUUUUCCCGCCUCCGCCGGGGCCGAGCCGCUGUUCGGCUGACAGUUGAGG\
) } def
/len { sequence length } bind def

/coor [
[270.44229126 183.34782410]
[260.02438354 187.07833862]
[249.12068176 187.42533875]
[238.78744507 184.45109558]
[229.99638367 178.53507996]
[223.54333496 170.32843018]
[219.97651672 160.68339539]
[219.55070496 150.56535339]
[205.21293640 146.15759277]
[190.87516785 141.74984741]
[176.53738403 137.34208679]
[171.98681641 138.73741150]
[166.51133728 137.30146790]
[161.88078308 132.62278748]
[147.66488647 127.83651733]
[133.44900513 123.05023956]
[119.23310852 118.26396179]
[105.01721954 113.47769165]
[90.13599396 115.36163330]
[77.56135559 123.53955841]
[64.98671722 131.71748352]
[52.41207123 139.89540100]
[39.83743286 148.07331848]
[38.02184296 151.97332764]
[35.33582306 154.81614685]
[32.21514511 156.45845032]
[29.09756851 156.91194153]
[26.37250519 156.33078003]
[13.38212490 163.83078003]
[0.39174366 171.33078003]
[-7.69090605 184.93156433]
[-22.58169746 184.59449768]
[-35.57207870 192.09449768]
[-48.56245804 199.59449768]
[-61.55284119 207.09449768]
[-63.04082870 222.54006958]
[-73.34850311 234.13883972]
[-88.51234436 237.43084717]
[-102.70156097 231.15025330]
[-110.46009827 217.71208191]
[-108.80464172 202.28356934]
[-98.37175751 190.79728699]
[-83.17308807 187.66996765]
[-69.05284119 194.10412598]
[-56.06245804 186.60412598]
[-43.07207870 179.10412598]
[-30.08169746 171.60412598]
[-22.92820549 158.53977966]
[-7.10825634 158.34039307]
[5.88212490 150.84039307]
[18.87250519 143.34039307]
[31.65950966 135.49868774]
[44.23414993 127.32076263]
[56.80879211 119.14283752]
[69.38343048 110.96491241]
[81.95807648 102.78699493]
[83.54577637 87.87125397]
[72.97438049 77.22956085]
[62.40298462 66.58787537]
[51.83159256 55.94617844]
[41.26019669 45.30448532]
[30.68880463 34.66279221]
[20.11741066 24.02110100]
[4.90240765 19.68355751]
[1.42193866 5.20130634]
[-9.14945602 -5.44038677]
[-19.72084999 -16.08207893]
[-30.29224396 -26.72377205]
[-40.86363983 -37.36546326]
[-51.43503189 -48.00715637]
[-66.65003204 -52.34469986]
[-70.13050079 -66.82695007]
[-80.70189667 -77.46864319]
[-91.27329254 -88.11033630]
[-101.84468842 -98.75202942]
[-112.41607666 -109.39372253]
[-122.98747253 -120.03541565]
[-133.55886841 -130.67710876]
[-144.13026428 -141.31880188]
[-154.70166016 -151.96049500]
[-165.27305603 -162.60218811]
[-180.48805237 -166.93972778]
[-183.96852112 -181.42198181]
[-194.53991699 -192.06367493]
[-205.11131287 -202.70536804]
[-215.68270874 -213.34706116]
[-231.65634155 -214.83787537]
[-240.32929993 -228.33451843]
[-235.04844666 -243.48350525]
[-219.86477661 -248.66384888]
[-206.42591858 -239.90162659]
[-205.04101562 -223.91845703]
[-194.46961975 -213.27676392]
[-183.89822388 -202.63507080]
[-173.32682800 -191.99337769]
[-158.86796570 -188.41699219]
[-154.63136292 -173.17358398]
[-144.05996704 -162.53189087]
[-133.48857117 -151.89019775]
[-122.91717529 -141.24850464]
[-112.34577942 -130.60681152]
[-101.77438354 -119.96511841]
[-91.20299530 -109.32342529]
[-80.63159943 -98.68173218]
[-70.06020355 -88.04003906]
[-59.48881149 -77.39834595]
[-45.02994537 -73.82196808]
[-40.79333878 -58.57855225]
[-30.22194481 -47.93685913]
[-19.65055084 -37.29516602]
[-9.07915688 -26.65347290]
[1.49223721 -16.01178169]
[12.06363106 -5.37008810]
[26.52249718 -1.79371011]
[30.75910187 13.44970608]
[41.33049774 24.09139824]
[51.90188980 34.73309326]
[62.47328568 45.37478638]
[73.04467773 56.01647568]
[83.61607361 66.65817261]
[94.18746948 77.29986572]
[103.70269012 80.31298828]
[109.69728851 86.48772430]
[111.53654480 93.52062225]
[109.80348969 99.26180267]
[124.01938629 104.04807281]
[138.23527527 108.83435059]
[152.45117188 113.62062073]
[166.66705322 118.40689850]
[180.94514465 123.00431061]
[195.28291321 127.41207123]
[209.62068176 131.81982422]
[223.95846558 136.22756958]
[238.63713074 121.45189667]
[260.17645264 118.25135040]
[280.19018555 129.01441956]
[290.47576904 118.09623718]
[300.76135254 107.17805481]
[300.46548462 91.60402679]
[311.05206299 80.67796326]
[325.90133667 80.49187469]
[336.18692017 69.57369232]
[346.47250366 58.65551376]
[356.75811768 47.73733139]
[357.71884155 31.72307014]
[370.92071533 22.60767937]
[386.23635864 27.38370895]
[391.91693115 42.38739395]
[383.60479736 56.10919189]
[367.67630005 58.02291489]
[357.39068604 68.94110107]
[347.10510254 79.85928345]
[336.81951904 90.77746582]
[337.51901245 105.61141968]
[327.24349976 116.83053589]
[311.67953491 117.46363831]
[301.39395142 128.38182068]
[291.10836792 139.30000305]
[293.28781128 154.14082336]
[306.27819824 161.64082336]
[319.26855469 169.14082336]
[332.25894165 176.64082336]
[346.67596436 167.69160461]
[364.56631470 168.72599792]
[379.35211182 180.45352173]
[384.98001099 199.46212769]
[399.13119507 204.43641663]
[413.28240967 209.41070557]
[427.43359375 214.38499451]
[441.58480835 219.35928345]
[455.70077515 212.77317810]
[469.98126221 218.01939392]
[476.17309570 231.51741028]
[490.32431030 236.49169922]
[504.47549438 241.46598816]
[518.62670898 246.44027710]
[532.77789307 251.41456604]
[544.15972900 244.23265076]
[557.40673828 244.90176392]
[567.70050049 252.95448303]
[571.42596436 265.27856445]
[585.51000977 270.44000244]
[599.59405518 275.60144043]
[613.79608154 269.20300293]
[628.00573730 274.63806152]
[634.01812744 288.21697998]
[648.10217285 293.37841797]
[661.57092285 285.43319702]
[676.98706055 288.05532837]
[687.07165527 300.00671387]
[687.06292725 315.64431763]
[676.96508789 327.58447266]
[661.54602051 330.18945312]
[648.08612061 322.22924805]
[642.94073486 307.46243286]
[628.85668945 302.30099487]
[615.49383545 308.77938843]
[601.13708496 303.74557495]
[594.43261719 289.68545532]
[580.34857178 284.52401733]
[566.26452637 279.36257935]
[551.31341553 287.08084106]
[535.08935547 281.47912598]
[527.80358887 265.56576538]
[513.65240479 260.59149170]
[499.50122070 255.61718750]
[485.35000610 250.64289856]
[471.19882202 245.66860962]
[457.92300415 252.32354736]
[443.50079346 247.48049927]
[436.61050415 233.51048279]
[422.45932007 228.53619385]
[408.30810547 223.56190491]
[394.15692139 218.58761597]
[380.00570679 213.61332703]
[369.57629395 224.39421082]
[375.01672363 238.37281799]
[380.45715332 252.35144043]
[385.89758301 266.33004761]
[391.33801270 280.30868530]
[405.38635254 288.05618286]
[407.94598389 303.89370728]
[397.05334473 315.67208862]
[381.06439209 314.35595703]
[372.24441528 300.95489502]
[377.35940552 285.74911499]
[371.91897583 271.77047729]
[366.47854614 257.79187012]
[361.03811646 243.81324768]
[355.59768677 229.83464050]
[335.56732178 223.76960754]
[324.15322876 207.85800171]
[324.75894165 189.63121033]
[311.76855469 182.13121033]
[298.77819824 174.63121033]
[285.78781128 167.13121033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 133]
[9 132]
[10 131]
[11 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[28 51]
[29 50]
[30 49]
[32 47]
[33 46]
[34 45]
[35 44]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[83 95]
[84 94]
[85 93]
[86 92]
[136 158]
[137 157]
[138 156]
[141 153]
[142 152]
[143 151]
[144 150]
[159 236]
[160 235]
[161 234]
[162 233]
[166 215]
[167 214]
[168 213]
[169 212]
[170 211]
[173 208]
[174 207]
[175 206]
[176 205]
[177 204]
[181 201]
[182 200]
[183 199]
[186 196]
[187 195]
[216 230]
[217 229]
[218 228]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
