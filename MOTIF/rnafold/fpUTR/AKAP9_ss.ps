%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAAGAUGGCGGCGGCGGCGGCGGUGACGGCGCUUCCCGUGCGGCUGAGGACGAUCCGCCAGUGAGCGCGGAGACUGCUUCCACUUCGGGCGGGGGAGCGCCGGACCGAAUCGGCUCUCUAGGCCGUGGAGCUUGCCGUCCCACCUCCGUCCAAAUCGACCUUUCCUUUCUAUCCCCAACCACCCCUCAACCCCUGUUUUCCCCUGCCUUCCUUGCAGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[353.66995239 273.21450806]
[341.04089355 265.12084961]
[328.41186523 257.02719116]
[315.78280640 248.93351746]
[300.89239502 248.58049011]
[293.44839478 234.61991882]
[280.81936646 226.52626038]
[265.92895508 226.17321777]
[258.48495483 212.21264648]
[245.85591125 204.11898804]
[233.22686768 196.02532959]
[225.90725708 195.06364441]
[220.47962952 187.73036194]
[207.96430969 179.46194458]
[195.44898987 171.19351196]
[182.93367004 162.92507935]
[170.41836548 154.65666199]
[157.90304565 146.38822937]
[145.38772583 138.11981201]
[132.81524658 129.93856812]
[120.18620300 121.84490967]
[98.85121155 129.72142029]
[78.18784332 120.22159576]
[70.27674866 98.89939880]
[55.91134644 94.58255768]
[41.54594040 90.26570892]
[27.18053436 85.94886780]
[15.47939396 91.35848999]
[3.60802174 87.47499847]
[-2.24478054 76.89636230]
[-16.54879189 72.38024902]
[-30.85280418 67.86413574]
[-45.15681458 63.34802628]
[-59.46082687 58.83191681]
[-73.76483917 54.31580734]
[-88.06884766 49.79969788]
[-102.37286377 45.28358459]
[-116.67687225 40.76747513]
[-130.98088074 36.25136566]
[-145.28489685 31.73525429]
[-159.61994934 27.31867027]
[-173.98535156 23.00182724]
[-189.42840576 26.44024658]
[-199.39051819 15.36750698]
[-213.75592041 11.05066490]
[-228.12133789 6.73382187]
[-244.46231079 16.33611870]
[-262.32305908 11.02507877]
[-270.47735596 -5.37332344]
[-284.95721436 -9.28916645]
[-299.43707275 -13.20500946]
[-313.91693115 -17.12085342]
[-325.51965332 -5.33367825]
[-341.39334106 -1.03390014]
[-357.17764282 -5.30445242]
[-368.58609009 -16.88743782]
[-372.57019043 -32.55266953]
[-387.10305786 -36.26686096]
[-401.63595581 -39.98104858]
[-416.16885376 -43.69523621]
[-430.70172119 -47.40942764]
[-442.56042480 -37.40188980]
[-458.03900146 -36.30957031]
[-471.18563843 -44.55249023]
[-476.94519043 -58.96107864]
[-473.10296631 -73.99493408]
[-461.13638306 -83.87324524]
[-445.64688110 -84.79758453]
[-432.59042358 -76.41253662]
[-426.98754883 -61.94231415]
[-412.45465088 -58.22812653]
[-397.92178345 -54.51393509]
[-383.38888550 -50.79974747]
[-368.85598755 -47.08555603]
[-359.98068237 -57.45805359]
[-347.44290161 -63.02344894]
[-333.66445923 -62.64437866]
[-321.33383179 -56.33781815]
[-312.88156128 -45.28286743]
[-310.00106812 -31.60070610]
[-295.52120972 -27.68486404]
[-281.04138184 -23.76902008]
[-266.56152344 -19.85317802]
[-258.14489746 -27.53689194]
[-246.94947815 -30.23623276]
[-235.72486877 -27.16941643]
[-227.28536987 -18.98562050]
[-223.80448914 -7.63158369]
[-209.43908691 -3.31474090]
[-195.07368469 1.00210190]
[-180.65814209 -2.74508619]
[-169.66851807 8.63642216]
[-155.30310059 12.95326519]
[-148.00061035 11.86915874]
[-140.76878357 17.43124199]
[-126.46477509 21.94735336]
[-112.16075897 26.46346283]
[-97.85675049 30.97957420]
[-83.55274200 35.49568558]
[-69.24872589 40.01179504]
[-54.94471741 44.52790451]
[-40.64070511 49.04401779]
[-26.33669281 53.56012726]
[-12.03268147 58.07623672]
[2.27133012 62.59235001]
[19.18236923 57.88654709]
[31.49737740 71.58346558]
[45.86278152 75.90030670]
[60.22818756 80.21714783]
[74.59358978 84.53398895]
[79.16450500 78.77348328]
[85.00899506 74.31045532]
[91.76982117 71.41771698]
[99.03371429 70.27207947]
[102.34248352 55.64156342]
[105.65124512 41.01104355]
[108.96001434 26.38052559]
[112.26878357 11.75000858]
[104.95682526 -2.52986550]
[111.69338226 -17.09002686]
[127.31076050 -20.76116371]
[139.82862854 -10.72709656]
[139.64434814 5.31489801]
[126.89929962 15.05877495]
[123.59053040 29.68929291]
[120.28176880 44.31981277]
[116.97299957 58.95032883]
[113.66423035 73.58084869]
[120.46990204 78.42070770]
[125.66188812 84.96170044]
[128.83088684 92.68819427]
[129.72709656 100.99109650]
[128.27986145 109.21586609]
[140.90890503 117.30952454]
[149.81213379 119.30170441]
[153.65615845 125.60449219]
[166.17146301 133.87292480]
[178.68678284 142.14134216]
[191.20210266 150.40977478]
[203.71742249 158.67819214]
[216.23272705 166.94662476]
[228.74804688 175.21504211]
[241.32052612 183.39628601]
[253.94956970 191.48994446]
[266.57861328 199.58360291]
[282.37234497 200.51554871]
[288.91302490 213.89721680]
[301.54205322 221.99087524]
[317.33581543 222.92282104]
[323.87646484 236.30447388]
[336.50552368 244.39813232]
[349.13455200 252.49179077]
[361.76361084 260.58544922]
[354.25155640 247.60203552]
[348.34338379 233.81460571]
[344.12356567 219.42039490]
[341.65249634 204.62533569]
[340.96554565 189.64106750]
[342.07250977 174.68197632]
[344.95758057 159.96203613]
[349.57943726 145.69184875]
[355.87203979 132.07556152]
[363.74526978 119.30794525]
[373.08657837 107.57166290]
[383.76226807 97.03462219]
[395.61965942 87.84754944]
[408.48910522 80.14187622]
[422.18649292 74.02783966]
[436.51589966 69.59291077]
[451.27227783 66.90052032]
[466.24456787 65.98920441]
[481.21856689 66.87198639]
[495.98007202 69.53623962]
[510.31787109 73.94385529]
[524.02691650 80.03177643]
[536.91101074 87.71290588]
[548.78588867 96.87736511]
[559.48162842 107.39404297]
[568.84527588 119.11249542]
[576.74285889 131.86508179]
[583.06140137 145.46936035]
[587.71044922 159.73071289]
[590.62353516 174.44511414]
[591.75903320 189.40208435]
[591.10064697 204.38761902]
[588.65777588 219.18737793]
[584.46539307 233.58959961]
[578.58349609 247.38825989]
[571.09625244 260.38598633]
[562.11065674 272.39678955]
[551.75537109 283.24887085]
[540.17846680 292.78698730]
[527.54559326 300.87469482]
[514.03747559 307.39627075]
[499.84738159 312.25842285]
[485.17825317 315.39160156]
[470.23999023 316.75097656]
[455.24627686 316.31710815]
[440.41159058 314.09619141]
[425.94818115 310.12002563]
[412.06295776 304.44546509]
[398.95455933 297.15371704]
[386.81051636 288.34906006]
[375.80957031 278.16271973]
[380.91812134 292.26602173]
[386.12454224 306.33346558]
[391.42861938 320.36441040]
[396.73266602 334.39532471]
[402.03674316 348.42623901]
[416.85501099 353.42150879]
[424.95138550 366.79995728]
[422.50299072 382.24468994]
[410.66589355 392.46316528]
[395.02920532 392.63052368]
[382.97610474 382.66778564]
[380.19769287 367.27899170]
[388.00582886 353.73031616]
[382.70175171 339.69940186]
[377.39767456 325.66845703]
[372.09359741 311.63754272]
[366.79400635 306.49792480]
[366.81481934 297.37454224]
[361.70629883 283.27124023]
[358.98150635 281.83639526]
[356.58715820 279.61511230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[6 148]
[7 147]
[9 145]
[10 144]
[11 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 134]
[21 133]
[24 110]
[25 109]
[26 108]
[27 107]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[40 95]
[41 93]
[42 92]
[44 90]
[45 89]
[46 88]
[49 83]
[50 82]
[51 81]
[52 80]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[204 223]
[205 222]
[206 220]
[207 219]
[208 218]
[209 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
