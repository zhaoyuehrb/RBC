%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGAGCGGCGGCGGCGGCGGCGGCGGCGGUGGCGGAGGCGGACACAUUGGCGUGAGACCUGGGAGUACGUUGUGCCAAAUCAUUGCCACUUGCCACAUGAGUGUAA\
) } def
/len { sequence length } bind def

/coor [
[116.95206451 254.03889465]
[102.04496002 252.37205505]
[88.10207367 246.84071350]
[76.10646057 237.83485413]
[66.90391541 225.98947144]
[61.14327621 212.13973999]
[59.23070526 197.26217651]
[61.30105972 182.40574646]
[67.20749664 168.61936951]
[54.21712112 176.11936951]
[46.13446808 189.72015381]
[31.24367905 189.38310242]
[18.25329781 196.88310242]
[10.17064762 210.48388672]
[-4.72014284 210.14682007]
[-17.71052361 217.64682007]
[-25.43704033 232.11170959]
[-41.83395386 232.38229370]
[-50.03352737 218.18020630]
[-41.60074234 204.11535645]
[-25.21052361 204.65643311]
[-12.22014332 197.15643311]
[-5.06665230 184.09210205]
[10.75329781 183.89271545]
[23.74367905 176.39271545]
[30.89716911 163.32838440]
[46.71712112 163.12899780]
[59.70750046 155.62899780]
[69.93229675 144.65386963]
[76.49514771 131.16575623]
[83.05799103 117.67765045]
[89.62083435 104.18953705]
[95.99215698 90.60990906]
[102.17067719 76.94148254]
[108.34918976 63.27305603]
[114.52770996 49.60462952]
[120.70623016 35.93620300]
[126.88475037 22.26777458]
[133.06326294 8.59934711]
[131.69712830 -7.16276646]
[143.98995972 -15.57321548]
[150.16847229 -29.24164200]
[147.14082336 -49.07246017]
[163.04991150 -59.90923691]
[168.44523621 -73.90531921]
[168.63035583 -83.18824005]
[174.19636536 -88.21756744]
[179.98561096 -102.05536652]
[185.77485657 -115.89316559]
[191.56410217 -129.73097229]
[190.84518433 -135.20133972]
[192.25042725 -139.88105774]
[195.08590698 -143.06953430]
[198.47624207 -144.46327209]
[205.41815186 -157.76025391]
[212.36006165 -171.05723572]
[219.30198669 -184.35421753]
[226.24389648 -197.65119934]
[217.46963501 -210.19197083]
[215.53990173 -225.37535095]
[220.89814758 -239.71229553]
[232.31306458 -249.90827942]
[247.16160583 -253.62034607]
[262.03167725 -249.99549866]
[273.50625610 -239.86668396]
[278.94854736 -225.56144714]
[277.10797119 -210.36700439]
[268.40747070 -197.77494812]
[254.84635925 -190.67883301]
[239.54087830 -190.70928955]
[232.59896851 -177.41230774]
[225.65704346 -164.11532593]
[218.71513367 -150.81832886]
[211.77322388 -137.52134705]
[205.40190125 -123.94171906]
[199.61265564 -110.10392761]
[193.82341003 -96.26612854]
[188.03416443 -82.42832947]
[182.44132996 -68.50999451]
[177.04598999 -54.51390839]
[182.07707214 -45.41515350]
[181.17115784 -34.83537674]
[174.38963318 -26.37873077]
[163.83689880 -23.06312370]
[157.65838623 -9.39469719]
[159.46644592 5.38975954]
[146.73168945 14.77786636]
[140.55317688 28.44629288]
[134.37466431 42.11471939]
[128.19613647 55.78314972]
[122.01761627 69.45157623]
[115.83910370 83.12000275]
[109.66058350 96.78842926]
[109.45820618 104.97456360]
[103.10894012 110.75238800]
[96.54609680 124.24049377]
[89.98325348 137.72860718]
[83.42041016 151.21670532]
[96.75629425 144.34982300]
[111.42927551 141.23477173]
[126.40480804 142.09118652]
[140.62699890 146.85870361]
[153.09309387 155.20115662]
[162.92413330 166.53034973]
[169.42697144 180.04748535]
[172.14309692 194.79953003]
[170.88099670 209.74633789]
[165.72967529 223.83406067]
[157.05233765 236.06941223]
[145.46078491 245.58970642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 28]
[10 27]
[12 25]
[13 24]
[15 22]
[16 21]
[29 98]
[30 97]
[31 96]
[32 95]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[41 85]
[42 84]
[44 80]
[45 79]
[47 78]
[48 77]
[49 76]
[50 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
