%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABCG8)
} def

/sequence { (\
CUCCAGGAAACAGAGUGAAGACACUGGCCCUGGCAGGCAGCAGCUGGGUCUAAGAGAGCUGCAGCCCAGGGUCACAGACCUGUGGGCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.003502585 ubox
1 36 0.824932386 ubox
1 37 0.089435255 ubox
1 85 0.084748444 ubox
1 86 0.233019205 ubox
2 33 0.005524925 ubox
2 35 0.835238548 ubox
2 36 0.082945236 ubox
2 37 0.009593774 ubox
2 39 0.006261502 ubox
2 68 0.003721437 ubox
2 84 0.081498494 ubox
2 85 0.237270549 ubox
2 86 0.024983198 ubox
3 32 0.005277864 ubox
3 33 0.961258935 ubox
3 36 0.004296922 ubox
3 84 0.239833194 ubox
3 85 0.033173508 ubox
3 86 0.005777365 ubox
4 32 0.964092410 ubox
4 82 0.255931087 ubox
4 84 0.032339575 ubox
4 85 0.005608136 ubox
5 31 0.963892479 ubox
5 81 0.256337745 ubox
5 83 0.022973736 ubox
6 29 0.023727792 ubox
6 30 0.963812984 ubox
6 80 0.256786385 ubox
6 81 0.008697411 ubox
6 88 0.046266636 ubox
6 89 0.031017027 ubox
6 90 0.012265145 ubox
7 28 0.033360487 ubox
7 29 0.962131813 ubox
7 30 0.004911245 ubox
7 79 0.255640504 ubox
7 80 0.009564077 ubox
7 87 0.046334777 ubox
7 88 0.030969731 ubox
7 89 0.012322232 ubox
10 16 0.007596310 ubox
10 83 0.056547777 ubox
11 15 0.007778287 ubox
11 17 0.008399352 ubox
11 26 0.946701385 ubox
11 82 0.059489721 ubox
11 84 0.005566532 ubox
12 16 0.006838867 ubox
12 25 0.941688400 ubox
12 81 0.059457451 ubox
12 83 0.005368804 ubox
13 24 0.933681149 ubox
13 73 0.004500668 ubox
13 80 0.059298051 ubox
14 25 0.306821915 ubox
14 81 0.005000326 ubox
15 22 0.924619147 ubox
15 24 0.343564168 ubox
15 79 0.020446398 ubox
15 80 0.004604184 ubox
16 21 0.917874108 ubox
16 23 0.354529008 ubox
16 76 0.008702996 ubox
16 78 0.020154198 ubox
17 22 0.354239571 ubox
17 75 0.009229095 ubox
19 25 0.004101185 ubox
20 24 0.004486372 ubox
24 77 0.014991771 ubox
25 74 0.112231907 ubox
25 76 0.013611044 ubox
26 73 0.260361197 ubox
26 75 0.012679812 ubox
26 88 0.013614766 ubox
27 38 0.018850650 ubox
27 72 0.263936525 ubox
27 87 0.013785309 ubox
28 37 0.018826786 ubox
28 71 0.264338308 ubox
28 86 0.013793189 ubox
29 36 0.018726054 ubox
29 70 0.264342719 ubox
29 85 0.013779904 ubox
30 69 0.264342071 ubox
30 84 0.013726308 ubox
31 68 0.264246985 ubox
32 66 0.030414639 ubox
32 67 0.262339780 ubox
33 65 0.042800660 ubox
33 66 0.187518387 ubox
33 83 0.004958891 ubox
34 64 0.052316518 ubox
34 82 0.005187130 ubox
35 81 0.003629449 ubox
36 45 0.003662137 ubox
36 66 0.445784937 ubox
36 67 0.040764097 ubox
36 88 0.024037473 ubox
36 89 0.067983493 ubox
36 90 0.035559656 ubox
37 44 0.007659428 ubox
37 62 0.245129118 ubox
37 65 0.491722599 ubox
37 66 0.029978517 ubox
37 87 0.022799753 ubox
37 88 0.069125050 ubox
37 89 0.038450556 ubox
38 43 0.007705652 ubox
38 61 0.245390478 ubox
38 64 0.492339171 ubox
38 86 0.021710491 ubox
39 60 0.245222449 ubox
40 59 0.245163127 ubox
40 62 0.968060556 ubox
40 65 0.003211661 ubox
41 58 0.244447523 ubox
41 61 0.969175737 ubox
41 64 0.003245102 ubox
42 51 0.018353678 ubox
42 60 0.968970212 ubox
43 49 0.006434778 ubox
43 50 0.018269490 ubox
43 59 0.969212206 ubox
43 62 0.018090389 ubox
44 48 0.010458002 ubox
44 54 0.148018874 ubox
44 56 0.159502410 ubox
44 58 0.969143511 ubox
44 61 0.017982548 ubox
44 69 0.003260812 ubox
45 52 0.018587149 ubox
45 53 0.148098376 ubox
45 55 0.159474147 ubox
45 57 0.951104790 ubox
45 61 0.003823523 ubox
45 68 0.005708158 ubox
46 51 0.025753301 ubox
46 60 0.018625559 ubox
46 67 0.006124482 ubox
46 89 0.003971542 ubox
47 59 0.020526988 ubox
47 66 0.006126382 ubox
47 88 0.004000180 ubox
48 65 0.006125946 ubox
48 87 0.003994369 ubox
49 55 0.265452834 ubox
49 57 0.142761139 ubox
49 64 0.005475664 ubox
49 86 0.003989280 ubox
50 54 0.271908984 ubox
50 56 0.177370002 ubox
50 85 0.003988643 ubox
51 55 0.159852105 ubox
51 57 0.003974186 ubox
51 84 0.003969947 ubox
52 83 0.003845105 ubox
53 60 0.005981449 ubox
54 59 0.005987561 ubox
55 81 0.003851649 ubox
56 80 0.003872175 ubox
59 77 0.003967622 ubox
60 76 0.003967018 ubox
61 75 0.003962085 ubox
64 72 0.004002246 ubox
64 87 0.864848962 ubox
65 71 0.004038930 ubox
65 85 0.019658428 ubox
65 86 0.867136361 ubox
66 70 0.004009844 ubox
66 84 0.020310931 ubox
66 85 0.867669015 ubox
67 82 0.027270120 ubox
67 84 0.867396390 ubox
67 85 0.003189334 ubox
68 81 0.034574765 ubox
68 83 0.787095063 ubox
69 80 0.040330700 ubox
69 81 0.781636371 ubox
69 88 0.127831021 ubox
69 89 0.397838104 ubox
69 90 0.030147258 ubox
70 79 0.039021821 ubox
70 80 0.862188554 ubox
70 81 0.091920516 ubox
70 87 0.128256889 ubox
70 88 0.398858035 ubox
70 89 0.028847227 ubox
71 79 0.863913568 ubox
71 80 0.076230644 ubox
71 87 0.398882430 ubox
71 88 0.027132377 ubox
72 78 0.864889037 ubox
72 85 0.243537295 ubox
72 86 0.340207497 ubox
73 77 0.857628313 ubox
73 84 0.321432435 ubox
73 85 0.269696310 ubox
74 83 0.382272417 ubox
75 82 0.386402560 ubox
75 84 0.163190505 ubox
76 81 0.348117266 ubox
76 83 0.159229247 ubox
79 85 0.003689029 ubox
79 86 0.004331562 ubox
80 84 0.003704617 ubox
80 85 0.004338458 ubox
84 90 0.006777880 ubox
85 89 0.006810626 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
64 87 0.9500000 lbox
65 86 0.9500000 lbox
66 85 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
73 77 0.9500000 lbox
showpage
end
%%EOF
