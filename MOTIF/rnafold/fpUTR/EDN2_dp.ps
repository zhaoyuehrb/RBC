%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EDN2)
} def

/sequence { (\
GAGCUAUCUGCUCAGCUUAAUAGCAGGACGCUGGCAACAGGCACUCCCUGCUCCAGUCCAGCCUGCGCGCUCCACCGCCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004904227 ubox
1 13 0.985334141 ubox
1 18 0.153185907 ubox
1 72 0.006369721 ubox
2 7 0.004809125 ubox
2 12 0.986069084 ubox
2 17 0.162166155 ubox
2 18 0.003423244 ubox
2 71 0.006390595 ubox
2 82 0.005663822 ubox
3 11 0.986314347 ubox
3 16 0.163302421 ubox
3 24 0.014680800 ubox
3 62 0.003630727 ubox
3 70 0.006392282 ubox
3 81 0.006181313 ubox
4 10 0.986084196 ubox
4 15 0.163301674 ubox
4 23 0.014712337 ubox
4 61 0.003708806 ubox
4 69 0.006369271 ubox
4 80 0.006174293 ubox
5 14 0.161662958 ubox
5 22 0.014921471 ubox
5 60 0.003530199 ubox
6 21 0.014838438 ubox
7 20 0.013475314 ubox
7 27 0.005895703 ubox
8 26 0.008879506 ubox
9 25 0.009056274 ubox
10 16 0.015627155 ubox
10 24 0.009105574 ubox
10 62 0.003299502 ubox
10 68 0.003557133 ubox
11 15 0.015530919 ubox
11 23 0.009103802 ubox
11 61 0.003309184 ubox
11 67 0.003556877 ubox
12 22 0.008597204 ubox
12 60 0.003215349 ubox
13 65 0.003189729 ubox
14 64 0.016752456 ubox
14 71 0.079113562 ubox
14 82 0.372630421 ubox
15 24 0.299640325 ubox
15 57 0.021612299 ubox
15 62 0.066354735 ubox
15 63 0.014297023 ubox
15 66 0.012776249 ubox
15 68 0.047037385 ubox
15 70 0.084563925 ubox
15 78 0.017426315 ubox
15 81 0.413568904 ubox
16 23 0.300250861 ubox
16 27 0.006643888 ubox
16 56 0.022396530 ubox
16 61 0.067250474 ubox
16 65 0.012716055 ubox
16 67 0.047083772 ubox
16 69 0.084466708 ubox
16 77 0.017430262 ubox
16 80 0.413236153 ubox
17 22 0.295129665 ubox
17 26 0.006653781 ubox
17 55 0.021667356 ubox
17 60 0.066193791 ubox
18 22 0.015950907 ubox
18 25 0.005992506 ubox
18 55 0.004291911 ubox
18 65 0.004353472 ubox
19 64 0.007981601 ubox
20 57 0.054299582 ubox
21 56 0.054206708 ubox
21 65 0.007894619 ubox
22 32 0.003694120 ubox
22 52 0.068797245 ubox
22 64 0.028139382 ubox
22 71 0.003190302 ubox
22 82 0.008329215 ubox
23 31 0.003747800 ubox
23 51 0.070422540 ubox
23 62 0.131799735 ubox
23 63 0.021414580 ubox
23 66 0.938772133 ubox
23 78 0.004081995 ubox
23 81 0.007748848 ubox
24 30 0.003749786 ubox
24 50 0.070428441 ubox
24 61 0.133467329 ubox
24 65 0.940234520 ubox
24 77 0.004088731 ubox
24 80 0.007586757 ubox
25 49 0.070368953 ubox
25 64 0.964967079 ubox
25 71 0.003450887 ubox
26 47 0.023067979 ubox
26 48 0.066558876 ubox
26 58 0.003552928 ubox
26 59 0.219440690 ubox
26 63 0.967636761 ubox
26 64 0.021978879 ubox
26 70 0.003660611 ubox
26 73 0.014696011 ubox
26 79 0.008029926 ubox
27 46 0.032489083 ubox
27 47 0.062406931 ubox
27 58 0.219562851 ubox
27 62 0.963391559 ubox
27 63 0.024105357 ubox
27 72 0.014711029 ubox
27 78 0.008021661 ubox
28 45 0.038984178 ubox
28 57 0.184060113 ubox
28 71 0.014629670 ubox
29 56 0.149780149 ubox
29 67 0.007835547 ubox
29 69 0.009833111 ubox
29 77 0.007876880 ubox
30 42 0.053593790 ubox
30 57 0.952264804 ubox
30 62 0.128343894 ubox
30 66 0.008332705 ubox
30 68 0.009782477 ubox
30 70 0.008713405 ubox
30 76 0.007831430 ubox
31 40 0.054481247 ubox
31 41 0.043654789 ubox
31 56 0.974085237 ubox
31 61 0.151219573 ubox
31 65 0.008315689 ubox
31 67 0.009727879 ubox
31 69 0.008684916 ubox
32 39 0.062811504 ubox
32 40 0.030148646 ubox
32 43 0.005664929 ubox
32 55 0.980836138 ubox
32 60 0.151264574 ubox
32 74 0.007209969 ubox
33 38 0.065319827 ubox
33 42 0.005568537 ubox
33 52 0.078642662 ubox
33 53 0.021255041 ubox
33 54 0.982105030 ubox
33 58 0.011007048 ubox
33 59 0.151022093 ubox
33 63 0.011671869 ubox
33 66 0.003335818 ubox
33 73 0.007156405 ubox
34 42 0.009567844 ubox
34 51 0.084195177 ubox
34 52 0.018379705 ubox
34 53 0.979995553 ubox
34 57 0.014567262 ubox
34 58 0.150504113 ubox
34 62 0.011694674 ubox
34 66 0.007294378 ubox
34 68 0.006340358 ubox
34 70 0.004173797 ubox
34 72 0.006519805 ubox
35 41 0.009737831 ubox
35 50 0.083825710 ubox
35 56 0.086042768 ubox
35 61 0.011688857 ubox
35 65 0.006890445 ubox
35 67 0.006586902 ubox
35 69 0.004737520 ubox
36 49 0.074151642 ubox
36 64 0.004893104 ubox
37 57 0.052847428 ubox
38 50 0.965722861 ubox
38 56 0.056219571 ubox
38 65 0.011881792 ubox
39 45 0.008429550 ubox
39 49 0.970515488 ubox
39 52 0.018313451 ubox
39 64 0.013051494 ubox
40 44 0.008593447 ubox
40 46 0.009957888 ubox
40 47 0.080582325 ubox
40 48 0.970815241 ubox
40 49 0.010136272 ubox
40 51 0.014167084 ubox
40 52 0.206682965 ubox
40 53 0.020809665 ubox
40 54 0.009623072 ubox
40 63 0.013947053 ubox
41 45 0.006905334 ubox
41 46 0.089201513 ubox
41 47 0.964849588 ubox
41 48 0.011084407 ubox
41 51 0.211591123 ubox
41 53 0.007633442 ubox
41 62 0.013948530 ubox
42 50 0.212008662 ubox
42 61 0.013918537 ubox
43 49 0.196188241 ubox
43 57 0.004371954 ubox
44 56 0.004406936 ubox
45 55 0.004186711 ubox
48 56 0.012762453 ubox
49 55 0.012811955 ubox
50 54 0.012620297 ubox
54 65 0.005096448 ubox
55 64 0.006322001 ubox
56 63 0.006361497 ubox
60 71 0.004274483 ubox
60 82 0.039873566 ubox
61 68 0.004171733 ubox
61 70 0.004585253 ubox
61 81 0.044205968 ubox
62 67 0.004166276 ubox
62 69 0.004578870 ubox
62 80 0.044060740 ubox
64 80 0.012226680 ubox
65 78 0.039879014 ubox
65 79 0.027821458 ubox
65 81 0.332629282 ubox
66 77 0.040000552 ubox
66 80 0.333869769 ubox
67 76 0.040161489 ubox
67 78 0.519339935 ubox
67 79 0.343635865 ubox
67 81 0.759436686 ubox
68 77 0.528595322 ubox
68 80 0.760199259 ubox
69 76 0.512675984 ubox
69 78 0.631146156 ubox
69 79 0.551526965 ubox
69 81 0.049885523 ubox
70 77 0.818001972 ubox
70 80 0.049900895 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
23 66 0.9500000 lbox
24 65 0.9500000 lbox
25 64 0.9500000 lbox
26 63 0.9500000 lbox
27 62 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
67 81 0.9500000 lbox
68 80 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
showpage
end
%%EOF
