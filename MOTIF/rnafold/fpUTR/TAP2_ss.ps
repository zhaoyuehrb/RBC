%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGAAGGCCUUGGCUGGGGAAGCGAAAGCGAAAGCUGCCCGAGCCCUGACGCCCGCCCUGGCCGAGCGUAGCUGGCGGACCAGAGCCGGUAGCGAGGUUGGGAGAGACGGAGCGGACCUCAGCGCUGAAGCAGAAGUCCCCGGAGCUGCGGUCUCCCCGCCGCGGCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[114.63508606 188.03669739]
[110.34353638 202.85514832]
[98.70678711 212.98379517]
[83.43808746 215.19064331]
[69.40961456 208.77149963]
[61.09780502 195.77467346]
[61.15493393 180.34741211]
[69.56276703 167.41250610]
[83.63838959 161.09742737]
[85.77311707 146.25010681]
[87.90783691 131.40278625]
[83.84878540 129.52107239]
[80.07524109 127.11750793]
[76.65390778 124.23458862]
[73.64527130 120.92327118]
[60.11418152 127.39704132]
[46.58309937 133.87081909]
[33.05201340 140.34458923]
[23.94256210 153.28013611]
[9.12233925 151.79342651]
[-4.40874577 158.26721191]
[-17.93983078 164.74098206]
[-27.04928207 177.67652893]
[-41.86950302 176.18981934]
[-55.40058899 182.66358948]
[-68.93167114 189.13737488]
[-70.03848267 204.45632935]
[-78.66976929 217.16052246]
[-92.50375366 223.83258057]
[-107.81916809 222.67776489]
[-120.49624634 214.00669861]
[-127.12490845 200.15187073]
[-125.92208862 184.84014893]
[-117.21133423 172.19030762]
[-103.33579254 165.60510254]
[-88.02791595 166.85591125]
[-75.40544891 175.60627747]
[-61.87436295 169.13250732]
[-48.34327698 162.65873718]
[-40.20166016 150.18623352]
[-24.41360283 151.20989990]
[-10.88251877 144.73611450]
[2.64856648 138.26234436]
[10.79018497 125.78984833]
[26.57823944 126.81350708]
[40.10932541 120.33972931]
[53.64041138 113.86595917]
[67.17149353 107.39218140]
[65.27907562 92.60047150]
[70.07296753 77.65150452]
[81.27789307 65.55877686]
[97.27383423 59.03950500]
[115.31346130 59.92485428]
[131.99188232 68.70767212]
[130.38845825 53.79361725]
[128.65199280 38.89447021]
[126.78262329 24.01140976]
[124.91324615 9.12835121]
[110.05986786 -7.62876987]
[119.06482697 -27.29787064]
[116.13847351 -42.00965118]
[113.21212006 -56.72142792]
[110.28576660 -71.43321228]
[107.35941315 -86.14498901]
[104.43305206 -100.85676575]
[101.50669861 -115.56854248]
[88.64952087 -124.36232758]
[85.89134979 -139.32385254]
[94.35411835 -151.52702332]
[91.42775726 -166.23880005]
[82.01630402 -171.77241516]
[77.31713104 -181.38278198]
[78.67264557 -191.77247620]
[85.39225769 -199.52285767]
[82.99286652 -214.32971191]
[80.59347534 -229.13656616]
[78.19408417 -243.94342041]
[75.79468536 -258.75027466]
[73.39529419 -273.55712891]
[59.48423386 -280.43185425]
[52.30064011 -294.18597412]
[54.60675049 -309.53073120]
[65.51582336 -320.56576538]
[80.83309174 -323.04785156]
[94.66876221 -316.02261353]
[101.70272827 -302.19140625]
[99.23028564 -286.87255859]
[88.20214844 -275.95651245]
[90.60153961 -261.14965820]
[93.00093079 -246.34281921]
[95.40032959 -231.53596497]
[97.79972076 -216.72911072]
[100.19911194 -201.92225647]
[113.49673462 -187.91029358]
[106.13954163 -169.16514587]
[109.06589508 -154.45336914]
[121.55441284 -146.41767883]
[124.73172760 -131.53952026]
[116.21847534 -118.49490356]
[119.14483643 -103.78311920]
[122.07118988 -89.07134247]
[124.99754333 -74.35956573]
[127.92389679 -59.64778519]
[130.85025024 -44.93600464]
[133.77661133 -30.22422600]
[141.17448425 -27.31662750]
[146.87431335 -21.64206123]
[149.88449097 -14.08219433]
[149.63972473 -5.85452127]
[146.10556030 1.68362200]
[139.79631042 7.25897837]
[141.66567993 22.14203644]
[143.53504944 37.02509689]
[147.50129700 43.29022980]
[145.30252075 52.19019318]
[146.90594482 67.10424805]
[158.50109863 76.62014771]
[173.44140625 75.28317261]
[188.38169861 73.94620514]
[203.32199097 72.60923767]
[216.37760925 63.67270279]
[229.74385071 70.24481201]
[244.68415833 68.90783691]
[257.73977661 59.97130585]
[271.10601807 66.54341125]
[286.04632568 65.20644379]
[295.98748779 52.92033005]
[311.71310425 51.34532547]
[323.89343262 61.41584396]
[325.30209351 77.15723419]
[315.10336304 89.23040009]
[299.34796143 90.47254944]
[287.38327026 80.14673615]
[272.44299316 81.48371124]
[260.45599365 90.32461548]
[246.02111816 83.84813690]
[231.08082581 85.18510437]
[219.09384155 94.02600861]
[204.65896606 87.54953003]
[189.71867371 88.88650513]
[174.77836609 90.22347260]
[159.83807373 91.56044769]
[156.72245789 98.38268280]
[170.36683655 104.61413574]
[164.13516235 118.25840759]
[150.49122620 112.02716064]
[147.37562561 118.84940338]
[156.14901733 131.01605225]
[164.92242432 143.18270874]
[173.69581604 155.34936523]
[182.46922302 167.51602173]
[191.24261475 179.68267822]
[200.01602173 191.84931946]
[208.78941345 204.01597595]
[217.56282043 216.18263245]
[233.20173645 218.46295166]
[242.58056641 231.18353271]
[240.13504028 246.79745483]
[227.31600952 256.04129028]
[211.72880554 253.43080139]
[202.62103271 240.51477051]
[205.39616394 224.95602417]
[196.62277222 212.78938293]
[187.84936523 200.62272644]
[179.07597351 188.45606995]
[170.30256653 176.28941345]
[161.52915955 164.12275696]
[152.75576782 151.95611572]
[143.98236084 139.78945923]
[135.20896912 127.62280273]
[124.21904755 133.14561462]
[113.03517151 135.00238037]
[102.75515747 133.53750610]
[100.62043762 148.38482666]
[98.48571014 163.23214722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[15 48]
[16 47]
[17 46]
[18 45]
[20 43]
[21 42]
[22 41]
[24 39]
[25 38]
[26 37]
[54 116]
[55 115]
[56 113]
[57 112]
[58 111]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 99]
[69 96]
[70 95]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[117 142]
[118 141]
[119 140]
[120 139]
[122 137]
[123 136]
[125 134]
[126 133]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
