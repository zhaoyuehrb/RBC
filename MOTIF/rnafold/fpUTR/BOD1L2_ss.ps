%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGAGCGCGCUUGGAAUCCAGCAGGCGGUUGCUGCCGCGUCUUCCACAACCUCCGCGGUCUGGAGCUGGCCUCCCCCACCGCCGCCCCAACCACCGGCCCCGCCGCCAUCACCACCACCGUCACCUCCGCCGCUGCCUCCUUGGGGCCCUCCUCCUUCACCGCCCCCUUAGCCACCUCUACACAUUCUAGGCUUUCUGUCCUGGAGAAGAAGCUAUAAUCGGUUUCCUUGUGGGCCCGGUGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[365.33392334 402.74008179]
[350.08148193 402.16937256]
[336.59115601 395.02981567]
[327.54141235 382.73895264]
[324.72915649 367.73715210]
[328.71270752 353.00305176]
[338.70114136 341.46209717]
[352.71124268 335.40573120]
[353.27212524 320.41622925]
[353.83297729 305.42672729]
[354.39385986 290.43722534]
[354.95471191 275.44769287]
[355.51559448 260.45819092]
[356.07644653 245.46867371]
[335.41827393 234.34585571]
[330.88351440 213.55191040]
[317.13510132 207.55352783]
[303.38665771 201.55514526]
[292.18389893 207.89013672]
[279.18298340 206.60504150]
[269.14273071 197.94549561]
[265.86737061 184.89712524]
[252.19477844 178.72782898]
[238.52220154 172.55851746]
[224.84960938 166.38920593]
[217.47975159 166.50260925]
[211.04577637 160.05682373]
[197.45115662 153.71755981]
[183.85653687 147.37828064]
[170.26191711 141.03900146]
[156.66731262 134.69973755]
[140.96424866 152.31811523]
[120.09347534 163.33645630]
[96.68787384 166.36479187]
[73.70009613 161.02105713]
[54.03010559 147.97941589]
[40.15930939 128.88505554]
[26.00105858 133.83924866]
[11.84280777 138.79342651]
[-2.31544209 143.74761963]
[-16.47369194 148.70179749]
[-30.63194275 153.65599060]
[-31.44932556 168.83493042]
[-38.01772690 182.54348755]
[-49.33551407 192.69120789]
[-63.67680740 197.73062134]
[-78.85466003 196.89328003]
[-92.55456543 190.30685425]
[-102.68738556 178.97572327]
[-107.70793915 164.62780762]
[-106.85062408 149.45106506]
[-100.24617767 135.75984192]
[-88.90173340 125.64193726]
[-74.54722595 120.64026642]
[-59.37162781 121.51754761]
[-45.68909836 128.13999939]
[-35.58612823 139.49774170]
[-21.42787743 134.54354858]
[-7.26962805 129.58937073]
[6.88862181 124.63518524]
[21.04687119 119.68099976]
[35.20512009 114.72681427]
[30.48992348 98.36062622]
[30.03177834 80.58693695]
[16.06867218 75.10682678]
[2.10556507 69.62670898]
[-13.56740665 71.78739166]
[-22.58813667 59.93514633]
[-36.55124283 54.45502853]
[-45.65597534 54.23632050]
[-50.65356064 48.81858444]
[-64.54726410 43.16482544]
[-78.44097137 37.51106644]
[-90.51807404 46.99996185]
[-105.72386932 49.16314697]
[-119.96807098 43.41873550]
[-129.41906738 31.31194878]
[-131.53457642 16.09944725]
[-125.74554443 1.87332070]
[-113.60919189 -7.53967619]
[-98.39013672 -9.60749340]
[-84.18222046 -3.77389956]
[-74.80731201 8.39189911]
[-72.78720856 23.61736298]
[-58.89350891 29.27112007]
[-44.99980164 34.92487717]
[-31.07112694 40.49192429]
[-17.10802078 45.97203827]
[-2.43378448 43.41938400]
[7.58568048 55.66360474]
[21.54878616 61.14371872]
[35.51189423 66.62383270]
[40.26080322 60.81884766]
[28.65083122 51.32102966]
[23.34518051 37.29070282]
[38.14865112 39.71105576]
[49.75862122 49.20887756]
[54.50753021 43.40388870]
[46.36933517 30.80350113]
[38.23114395 18.20311356]
[30.09294891 5.60272360]
[16.42040443 -4.42213917]
[22.26855469 -20.33551216]
[39.17895889 -19.12117004]
[42.69333649 -2.53547025]
[50.83153152 10.06491852]
[58.96972656 22.66530800]
[67.10791779 35.26569748]
[74.34004211 32.37326431]
[81.81201172 30.28234100]
[89.43564606 29.01089668]
[97.12171173 28.56727409]
[104.78092957 28.95016479]
[112.32502747 30.14869690]
[119.66775513 32.14263535]
[126.72584534 34.90269089]
[133.42001343 38.39092255]
[139.67581177 42.56125641]
[145.42442322 47.36008453]
[150.60348511 52.72693634]
[155.15771484 58.59524155]
[159.03955078 64.89315033]
[162.20953369 71.54441833]
[164.63684082 78.46931458]
[166.29945374 85.58557892]
[167.18441772 92.80940247]
[167.28791809 100.05642700]
[166.61518860 107.24269867]
[165.18043518 114.28566742]
[163.00657654 121.10511780]
[176.60119629 127.44438934]
[190.19581604 133.78366089]
[203.79043579 140.12294006]
[217.38505554 146.46221924]
[231.01892090 152.71662903]
[244.69149780 158.88592529]
[258.36410522 165.05523682]
[272.03668213 171.22454834]
[288.29766846 164.74063110]
[303.90399170 171.89453125]
[309.38504028 187.80670166]
[323.13345337 193.80508423]
[336.88189697 199.80346680]
[350.07781982 190.79615784]
[366.87442017 191.72430420]
[380.28479004 203.22680664]
[384.11502075 221.33955383]
[399.02069092 223.01902771]
[413.92639160 224.69848633]
[428.83206177 226.37796021]
[443.73776245 228.05741882]
[458.64343262 229.73689270]
[464.34542847 216.53092957]
[473.52554321 205.47749329]
[485.43374634 197.46559143]
[499.10110474 193.13633728]
[513.41864014 192.83163452]
[527.22711182 196.56718445]
[539.41113281 204.03196716]
[548.98913574 214.61407471]
[555.19244385 227.45092773]
[557.52697754 241.49948120]
[572.41058350 243.36463928]
[587.29418945 245.22979736]
[602.17779541 247.09495544]
[608.94421387 236.12956238]
[619.31213379 228.55780029]
[631.72607422 225.47190857]
[644.34014893 227.29446411]
[655.29241943 233.72085571]
[662.97961426 243.76950073]
[666.29187012 255.93168640]
[681.12432861 258.16732788]
[695.95678711 260.40295410]
[710.78924561 262.63858032]
[717.52886963 256.11175537]
[726.37969971 253.44201660]
[735.33428955 255.10351562]
[742.42114258 260.60250854]
[746.13903809 268.61477661]
[760.87756348 271.40344238]
[775.61602783 274.19210815]
[781.48175049 268.33541870]
[789.09161377 265.29348755]
[797.19079590 265.48849487]
[804.47491455 268.81533813]
[809.79956055 274.67037964]
[812.36047363 282.05963135]
[826.94165039 285.57949829]
[841.52282715 289.09936523]
[856.10400391 292.61923218]
[870.68518066 296.13906860]
[885.26629639 299.65893555]
[899.84747314 303.17880249]
[911.57153320 293.01385498]
[927.03417969 291.71502686]
[940.28967285 299.78170776]
[946.24102783 314.11212158]
[942.59985352 329.19595337]
[930.76617432 339.23309326]
[915.29040527 340.36413574]
[902.12316895 332.15411377]
[896.32763672 317.75997925]
[881.74645996 314.24011230]
[867.16528320 310.72024536]
[852.58410645 307.20040894]
[838.00292969 303.68054199]
[823.42175293 300.16067505]
[808.84057617 296.64080811]
[788.75073242 304.71487427]
[772.82739258 288.93060303]
[758.08886719 286.14193726]
[743.35034180 283.35327148]
[724.50610352 291.80459595]
[708.55364990 277.47103882]
[693.72119141 275.23541260]
[678.88873291 272.99978638]
[664.05627441 270.76412964]
[653.79626465 284.61755371]
[637.84472656 291.38644409]
[620.57574463 289.11636353]
[606.77484131 278.34500122]
[600.31262207 261.97854614]
[585.42901611 260.11337280]
[570.54541016 258.24822998]
[555.66186523 256.38308716]
[549.14947510 270.64120483]
[538.53356934 282.20053101]
[524.84619141 289.91943359]
[509.42352295 293.03057861]
[493.77545166 291.21710205]
[479.43774414 284.64489746]
[467.82131958 273.94741821]
[460.07330322 260.16479492]
[456.96395874 244.64257812]
[442.05828857 242.96310425]
[427.15258789 241.28364563]
[412.24691772 239.60417175]
[397.34121704 237.92469788]
[382.43554688 236.24523926]
[371.06597900 246.02954102]
[370.50509644 261.01907349]
[369.94424438 276.00857544]
[369.38336182 290.99807739]
[368.82250977 305.98757935]
[368.26162720 320.97711182]
[367.70077515 335.96661377]
[381.21911621 343.05300903]
[390.31716919 355.30813599]
[393.18850708 370.29873657]
[389.26300049 385.04840088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 247]
[9 246]
[10 245]
[11 244]
[12 243]
[13 242]
[14 241]
[16 143]
[17 142]
[18 141]
[22 138]
[23 137]
[24 136]
[25 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[64 92]
[65 91]
[66 90]
[68 88]
[69 87]
[71 86]
[72 85]
[73 84]
[98 108]
[99 107]
[100 106]
[101 105]
[147 240]
[148 239]
[149 238]
[150 237]
[151 236]
[152 235]
[162 226]
[163 225]
[164 224]
[165 223]
[172 218]
[173 217]
[174 216]
[175 215]
[180 213]
[181 212]
[182 211]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
