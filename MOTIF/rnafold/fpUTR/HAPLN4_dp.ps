%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HAPLN4)
} def

/sequence { (\
CGGGGAGCGCAGUCCGGGUGCGUAGGGGCCGCUCGGCGGGGGCCGCGCGGGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.100940321 ubox
1 16 0.336566491 ubox
1 20 0.009069113 ubox
1 22 0.008932915 ubox
1 31 0.027194070 ubox
1 38 0.021029033 ubox
1 47 0.009956972 ubox
1 49 0.005554017 ubox
2 8 0.106958212 ubox
2 15 0.341106076 ubox
2 19 0.008120232 ubox
2 21 0.008354383 ubox
2 30 0.205366876 ubox
2 37 0.021169301 ubox
2 44 0.004137254 ubox
2 46 0.010538746 ubox
2 48 0.005162044 ubox
3 14 0.340991002 ubox
3 15 0.027238247 ubox
3 29 0.205440274 ubox
3 30 0.158877413 ubox
3 43 0.004124957 ubox
3 44 0.003247327 ubox
4 13 0.334960181 ubox
4 14 0.027211694 ubox
4 15 0.140993041 ubox
4 29 0.159126548 ubox
4 30 0.048961155 ubox
4 43 0.003226942 ubox
4 44 0.010647797 ubox
5 13 0.023234230 ubox
5 14 0.141420545 ubox
5 29 0.048989154 ubox
5 34 0.043680950 ubox
5 43 0.010456310 ubox
6 13 0.139205290 ubox
6 33 0.043855696 ubox
7 13 0.019969343 ubox
7 21 0.177924641 ubox
7 23 0.864869224 ubox
7 32 0.043901834 ubox
7 43 0.004008411 ubox
7 48 0.041875497 ubox
7 52 0.027175827 ubox
8 12 0.026463933 ubox
8 16 0.006163893 ubox
8 20 0.178145865 ubox
8 22 0.884218868 ubox
8 31 0.043906083 ubox
8 38 0.008451508 ubox
8 42 0.004413975 ubox
8 47 0.041932103 ubox
8 49 0.003910315 ubox
8 51 0.026827705 ubox
9 15 0.006088904 ubox
9 19 0.178022371 ubox
9 21 0.885201488 ubox
9 29 0.006267842 ubox
9 30 0.042906950 ubox
9 37 0.008425191 ubox
9 46 0.041928458 ubox
9 48 0.004077120 ubox
9 52 0.016859338 ubox
10 18 0.178001099 ubox
10 20 0.885188156 ubox
10 22 0.003216539 ubox
10 28 0.007726663 ubox
10 36 0.006214012 ubox
10 45 0.041883797 ubox
10 47 0.004073615 ubox
10 51 0.016821494 ubox
11 19 0.870803511 ubox
12 19 0.017177598 ubox
12 21 0.004573714 ubox
12 29 0.050389059 ubox
12 37 0.011300725 ubox
12 43 0.040314343 ubox
12 52 0.203222811 ubox
13 18 0.083137128 ubox
13 20 0.004401302 ubox
13 27 0.021683926 ubox
13 28 0.052107100 ubox
13 42 0.040136100 ubox
13 51 0.203297230 ubox
14 25 0.003204092 ubox
14 26 0.027658783 ubox
14 27 0.054366498 ubox
14 28 0.005060783 ubox
14 36 0.030037451 ubox
14 41 0.030216179 ubox
14 50 0.203711278 ubox
14 51 0.004813665 ubox
15 22 0.011599215 ubox
15 25 0.027738997 ubox
15 26 0.054258121 ubox
15 27 0.005162547 ubox
15 35 0.032388973 ubox
15 40 0.028705946 ubox
15 49 0.203634128 ubox
15 50 0.004849857 ubox
16 21 0.021946834 ubox
16 30 0.012798166 ubox
16 34 0.038525164 ubox
16 48 0.198816801 ubox
17 29 0.011976512 ubox
17 30 0.218065699 ubox
17 33 0.038817880 ubox
18 29 0.218103518 ubox
18 32 0.038899930 ubox
18 37 0.006954833 ubox
18 46 0.197182468 ubox
18 48 0.032266255 ubox
18 52 0.169353862 ubox
19 28 0.217604944 ubox
19 31 0.038794431 ubox
19 36 0.006684007 ubox
19 38 0.015261214 ubox
19 45 0.196860577 ubox
19 47 0.035993491 ubox
19 49 0.053043629 ubox
19 51 0.168896398 ubox
19 53 0.103302367 ubox
20 29 0.060331662 ubox
20 30 0.034390410 ubox
20 32 0.009225972 ubox
20 37 0.017891315 ubox
20 43 0.016782920 ubox
20 44 0.181794184 ubox
20 46 0.037764549 ubox
20 48 0.079894026 ubox
20 52 0.114658111 ubox
21 28 0.069524900 ubox
21 31 0.009248183 ubox
21 35 0.007013750 ubox
21 36 0.017780601 ubox
21 38 0.011444246 ubox
21 42 0.023598687 ubox
21 45 0.037871002 ubox
21 47 0.081314916 ubox
21 49 0.167408992 ubox
21 51 0.114578470 ubox
22 29 0.030461923 ubox
22 30 0.008832932 ubox
22 34 0.007342306 ubox
22 37 0.011722426 ubox
22 43 0.178967974 ubox
22 44 0.019221660 ubox
22 46 0.081282067 ubox
22 48 0.167428378 ubox
22 52 0.035055538 ubox
23 28 0.030463597 ubox
23 36 0.011174468 ubox
23 42 0.178158411 ubox
23 45 0.080428228 ubox
23 47 0.162615457 ubox
23 51 0.034989064 ubox
24 33 0.016985239 ubox
25 32 0.017067232 ubox
25 34 0.015098058 ubox
25 44 0.028435652 ubox
26 33 0.015209844 ubox
26 43 0.028483777 ubox
26 44 0.075326486 ubox
27 32 0.015213865 ubox
27 43 0.065721091 ubox
27 44 0.187607585 ubox
28 37 0.150606150 ubox
28 43 0.193324086 ubox
28 46 0.006289336 ubox
28 52 0.687284848 ubox
29 36 0.150647946 ubox
29 39 0.107904702 ubox
29 40 0.006796283 ubox
29 41 0.048124871 ubox
29 42 0.196818165 ubox
29 45 0.006284889 ubox
29 50 0.687768299 ubox
29 51 0.562318826 ubox
30 35 0.150430426 ubox
30 38 0.108319370 ubox
30 39 0.006755427 ubox
30 40 0.047397712 ubox
30 41 0.196701660 ubox
30 49 0.795568967 ubox
30 50 0.398433180 ubox
31 37 0.109634942 ubox
31 43 0.008132748 ubox
31 48 0.889436967 ubox
31 52 0.356023209 ubox
32 36 0.108848929 ubox
32 39 0.185231845 ubox
32 40 0.071917116 ubox
32 41 0.004770158 ubox
32 42 0.008165603 ubox
32 47 0.889683309 ubox
32 51 0.357393086 ubox
33 38 0.168098378 ubox
33 39 0.070366541 ubox
33 40 0.009012752 ubox
33 41 0.008151000 ubox
33 50 0.357181093 ubox
34 38 0.071457846 ubox
34 39 0.018291522 ubox
34 40 0.008448680 ubox
34 45 0.889651117 ubox
34 49 0.357376388 ubox
35 44 0.890981770 ubox
35 48 0.356058868 ubox
36 43 0.891002575 ubox
36 46 0.357545571 ubox
36 48 0.007197183 ubox
37 42 0.890706577 ubox
37 45 0.357814448 ubox
37 47 0.009423437 ubox
38 44 0.357786441 ubox
38 46 0.009404211 ubox
39 43 0.352010833 ubox
42 52 0.023671201 ubox
43 51 0.023694001 ubox
44 50 0.023684917 ubox
45 52 0.039992048 ubox
46 51 0.040024737 ubox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
