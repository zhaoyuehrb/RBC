%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NCS1)
} def

/sequence { (\
CCGGCCCGGCCCGCCCGGCCCAGCCGCUCCUGCUGGGCGCCCCAACCGGGUCCGGCCCGGGGGGGCGGGGGCCGCGGCCGCCGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 86 0.049558191 ubox
2 80 0.954001415 ubox
2 83 0.086084278 ubox
2 85 0.045949879 ubox
3 79 0.990101852 ubox
3 82 0.084882574 ubox
4 78 0.990239040 ubox
4 81 0.084285507 ubox
5 77 0.990277351 ubox
5 80 0.076561576 ubox
5 86 0.104069935 ubox
6 76 0.990198710 ubox
6 77 0.005379652 ubox
6 85 0.106064939 ubox
7 74 0.989797161 ubox
7 76 0.005088807 ubox
7 80 0.033957497 ubox
7 83 0.110582296 ubox
8 73 0.990330859 ubox
8 79 0.082765349 ubox
8 82 0.110768018 ubox
9 72 0.990351202 ubox
9 78 0.083116567 ubox
9 81 0.110769884 ubox
10 69 0.004189069 ubox
10 70 0.007973694 ubox
10 71 0.988041000 ubox
10 77 0.072278953 ubox
10 80 0.110608692 ubox
11 68 0.006317522 ubox
11 69 0.011090760 ubox
11 70 0.985432980 ubox
11 71 0.066987871 ubox
11 76 0.059462328 ubox
11 77 0.042932871 ubox
12 67 0.008003044 ubox
12 68 0.013322576 ubox
12 69 0.962075126 ubox
12 70 0.094654700 ubox
12 74 0.032632430 ubox
12 76 0.059393821 ubox
13 19 0.004160033 ubox
13 38 0.070094625 ubox
13 66 0.012233729 ubox
13 72 0.028157349 ubox
13 73 0.023202238 ubox
13 75 0.071922451 ubox
13 78 0.109890100 ubox
13 79 0.003698151 ubox
14 18 0.004831782 ubox
14 37 0.073164272 ubox
14 65 0.012238912 ubox
14 68 0.925154913 ubox
14 69 0.226550053 ubox
14 70 0.011641562 ubox
14 71 0.036211532 ubox
14 74 0.065549332 ubox
14 77 0.110093224 ubox
15 36 0.073194924 ubox
15 64 0.011837452 ubox
15 67 0.921931152 ubox
15 68 0.308313955 ubox
15 69 0.016149728 ubox
15 70 0.036179393 ubox
15 76 0.110086875 ubox
16 26 0.005854950 ubox
16 35 0.073188886 ubox
16 39 0.010786507 ubox
16 63 0.010962759 ubox
16 67 0.314841972 ubox
16 68 0.019606295 ubox
16 69 0.036112478 ubox
16 74 0.116166623 ubox
17 25 0.013673141 ubox
17 34 0.072607142 ubox
17 38 0.042178696 ubox
17 66 0.102916147 ubox
17 73 0.133463526 ubox
18 24 0.013698355 ubox
18 33 0.072565940 ubox
18 38 0.985488444 ubox
18 72 0.133640569 ubox
19 23 0.013599534 ubox
19 32 0.068741358 ubox
19 37 0.988225521 ubox
19 71 0.133624658 ubox
20 36 0.988250521 ubox
20 70 0.133604612 ubox
21 32 0.023019062 ubox
21 35 0.988244791 ubox
21 69 0.132908008 ubox
22 28 0.024977829 ubox
22 31 0.049304592 ubox
22 34 0.987996418 ubox
23 27 0.025473795 ubox
23 30 0.051906231 ubox
23 33 0.987598500 ubox
23 56 0.003183246 ubox
23 66 0.015615791 ubox
24 32 0.970622990 ubox
24 55 0.003186889 ubox
24 65 0.015622254 ubox
24 68 0.131987209 ubox
25 32 0.172496242 ubox
25 54 0.003186838 ubox
25 64 0.015614591 ubox
25 67 0.132679424 ubox
26 31 0.165413837 ubox
26 33 0.036325449 ubox
26 38 0.008364857 ubox
26 53 0.003181644 ubox
26 66 0.132705807 ubox
27 32 0.040590041 ubox
27 37 0.008559922 ubox
27 62 0.014904948 ubox
27 63 0.004652580 ubox
27 65 0.132458946 ubox
28 36 0.004544994 ubox
28 37 0.004359310 ubox
28 61 0.014822855 ubox
28 62 0.004655541 ubox
28 64 0.111305912 ubox
28 65 0.008044812 ubox
29 35 0.004459225 ubox
29 36 0.009230154 ubox
29 50 0.003184447 ubox
29 60 0.014828527 ubox
29 61 0.004899849 ubox
29 63 0.111193450 ubox
29 64 0.072144174 ubox
30 35 0.009252390 ubox
30 49 0.003184786 ubox
30 59 0.014806240 ubox
30 60 0.004895859 ubox
30 62 0.111003364 ubox
30 63 0.072425970 ubox
31 48 0.003179660 ubox
31 59 0.004558311 ubox
31 61 0.100227802 ubox
31 62 0.072463641 ubox
32 56 0.016495895 ubox
33 55 0.016566013 ubox
33 60 0.131681620 ubox
34 44 0.004675625 ubox
34 54 0.016552426 ubox
34 59 0.132350075 ubox
35 43 0.004954417 ubox
35 53 0.016555253 ubox
35 58 0.132533088 ubox
36 42 0.004954658 ubox
36 52 0.016539636 ubox
36 57 0.132536131 ubox
37 41 0.004874607 ubox
37 51 0.015601294 ubox
37 56 0.132532294 ubox
38 50 0.015216816 ubox
38 54 0.024332759 ubox
38 55 0.130231204 ubox
38 67 0.048944147 ubox
39 51 0.106555208 ubox
39 53 0.032734907 ubox
39 66 0.984176919 ubox
40 49 0.014935135 ubox
40 50 0.107941420 ubox
40 62 0.006684216 ubox
40 63 0.003862966 ubox
40 64 0.034734404 ubox
40 65 0.988874597 ubox
41 48 0.014919295 ubox
41 49 0.107726502 ubox
41 50 0.076644370 ubox
41 61 0.006698997 ubox
41 62 0.006394677 ubox
41 63 0.036809405 ubox
41 64 0.988463766 ubox
41 65 0.052582407 ubox
42 48 0.107343081 ubox
42 49 0.077133730 ubox
42 50 0.007923088 ubox
42 60 0.006253653 ubox
42 61 0.006401145 ubox
42 62 0.038889595 ubox
42 63 0.988003205 ubox
42 64 0.059763412 ubox
43 48 0.077376876 ubox
43 49 0.007917421 ubox
43 59 0.005770943 ubox
43 60 0.004543377 ubox
43 61 0.040344694 ubox
43 62 0.986510307 ubox
43 63 0.065904072 ubox
46 60 0.990380632 ubox
46 61 0.016542766 ubox
47 59 0.990906196 ubox
47 60 0.011999823 ubox
48 57 0.003512453 ubox
48 58 0.990991848 ubox
49 56 0.004912236 ubox
49 57 0.991001051 ubox
49 58 0.003504251 ubox
50 56 0.990657137 ubox
50 57 0.003706766 ubox
51 55 0.926745721 ubox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
39 66 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
showpage
end
%%EOF
