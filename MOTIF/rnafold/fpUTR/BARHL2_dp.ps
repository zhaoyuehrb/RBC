%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BARHL2)
} def

/sequence { (\
GGCGGCUGCUGAACGGCGGAGUGGCGUGGACCUCAUGUAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.028293328 ubox
1 32 0.019121803 ubox
1 34 0.011902288 ubox
2 9 0.030009398 ubox
2 17 0.014891116 ubox
2 22 0.165790186 ubox
2 25 0.146804682 ubox
2 27 0.016816288 ubox
2 31 0.018954869 ubox
2 33 0.011429624 ubox
2 38 0.006517218 ubox
2 41 0.096645161 ubox
3 8 0.029986961 ubox
3 11 0.004882478 ubox
3 15 0.008767222 ubox
3 16 0.013798137 ubox
3 18 0.065555629 ubox
3 21 0.171274061 ubox
3 23 0.087155323 ubox
3 24 0.148723277 ubox
3 26 0.017696619 ubox
3 28 0.016131879 ubox
3 37 0.006632194 ubox
3 40 0.096497484 ubox
4 10 0.004960763 ubox
4 14 0.010426032 ubox
4 17 0.047033242 ubox
4 22 0.086692294 ubox
4 25 0.012907376 ubox
4 27 0.014672542 ubox
4 32 0.016040156 ubox
4 36 0.005234580 ubox
5 9 0.004864136 ubox
5 17 0.179624920 ubox
5 22 0.145342977 ubox
5 25 0.032699168 ubox
5 31 0.016045436 ubox
5 38 0.018281021 ubox
5 41 0.836179324 ubox
6 16 0.185769680 ubox
6 19 0.487314794 ubox
6 21 0.143358720 ubox
6 24 0.035117007 ubox
6 29 0.015844683 ubox
6 37 0.019029434 ubox
6 40 0.837201242 ubox
7 15 0.185573435 ubox
7 18 0.490433595 ubox
7 20 0.135500851 ubox
7 23 0.035047060 ubox
7 28 0.015659389 ubox
7 35 0.013316261 ubox
7 39 0.836819050 ubox
7 42 0.008908466 ubox
8 14 0.184131656 ubox
8 17 0.497039824 ubox
8 22 0.035218573 ubox
8 25 0.004845767 ubox
8 27 0.014884407 ubox
8 34 0.013582099 ubox
8 38 0.836842662 ubox
8 41 0.011708256 ubox
9 16 0.496957867 ubox
9 19 0.118807538 ubox
9 21 0.035275061 ubox
9 24 0.004878471 ubox
9 26 0.014871904 ubox
9 29 0.004611888 ubox
9 37 0.836758184 ubox
9 40 0.011711145 ubox
10 15 0.464900406 ubox
10 18 0.118994209 ubox
10 20 0.035004118 ubox
10 23 0.004653187 ubox
10 28 0.005125342 ubox
10 35 0.812492737 ubox
10 39 0.011317836 ubox
11 17 0.118476168 ubox
11 25 0.004547374 ubox
11 34 0.830785257 ubox
11 36 0.004083002 ubox
11 38 0.007992354 ubox
12 33 0.819396316 ubox
13 22 0.029507769 ubox
13 27 0.624261467 ubox
13 38 0.003499557 ubox
14 21 0.030149800 ubox
14 23 0.005552885 ubox
14 26 0.626571967 ubox
14 28 0.130399422 ubox
14 37 0.004072909 ubox
15 22 0.005259204 ubox
15 25 0.611155574 ubox
15 27 0.110146962 ubox
15 32 0.104930032 ubox
15 33 0.004126165 ubox
15 34 0.005066421 ubox
15 36 0.003860721 ubox
16 22 0.015134182 ubox
16 25 0.204651489 ubox
16 27 0.516168828 ubox
16 31 0.100020407 ubox
16 32 0.005148927 ubox
16 33 0.004497489 ubox
16 38 0.003591751 ubox
16 41 0.007075894 ubox
17 21 0.015686792 ubox
17 23 0.590921012 ubox
17 24 0.246822859 ubox
17 26 0.528404187 ubox
17 28 0.061571071 ubox
17 37 0.003821811 ubox
17 40 0.007079886 ubox
18 22 0.364800180 ubox
18 25 0.527075183 ubox
18 27 0.060802644 ubox
18 32 0.015633355 ubox
18 33 0.005647713 ubox
18 36 0.003617170 ubox
19 31 0.015544232 ubox
19 32 0.008297967 ubox
19 34 0.009216583 ubox
20 33 0.009206775 ubox
21 27 0.005220175 ubox
21 31 0.010607299 ubox
21 32 0.007726160 ubox
21 36 0.008596115 ubox
21 41 0.458664153 ubox
22 28 0.007307765 ubox
22 30 0.011682372 ubox
22 35 0.008808929 ubox
22 39 0.021118608 ubox
22 40 0.456872619 ubox
22 42 0.025216970 ubox
23 27 0.003613965 ubox
23 32 0.029398082 ubox
23 34 0.008878715 ubox
23 38 0.017403319 ubox
23 41 0.039886288 ubox
24 31 0.029390646 ubox
24 33 0.008154241 ubox
24 38 0.491358392 ubox
24 41 0.018199296 ubox
25 37 0.524177086 ubox
25 40 0.017750729 ubox
26 36 0.532871213 ubox
26 41 0.042703195 ubox
27 35 0.533808773 ubox
27 39 0.005843653 ubox
27 40 0.042295211 ubox
27 42 0.015254164 ubox
28 34 0.533830518 ubox
28 36 0.003983033 ubox
28 38 0.006154405 ubox
28 41 0.019474200 ubox
29 33 0.345816868 ubox
30 38 0.041439263 ubox
31 37 0.042418653 ubox
32 40 0.010339962 ubox
33 39 0.009974413 ubox
36 42 0.006431508 ubox
37 41 0.008755643 ubox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
showpage
end
%%EOF
