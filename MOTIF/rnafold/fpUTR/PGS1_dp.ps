%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGS1)
} def

/sequence { (\
AAUAAAGUUCGCGCCCGCCGGGAGCGGAAGCGGAAGCGGCGAGUCUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.010335822 ubox
2 8 0.016527885 ubox
2 44 0.027397224 ubox
3 7 0.016209364 ubox
3 43 0.027038877 ubox
6 46 0.707056119 ubox
7 14 0.015893489 ubox
7 25 0.018376858 ubox
7 31 0.221559299 ubox
7 37 0.095162147 ubox
7 40 0.108585308 ubox
7 44 0.132024764 ubox
7 45 0.748355174 ubox
8 13 0.015048726 ubox
8 24 0.018392812 ubox
8 27 0.004099917 ubox
8 28 0.252004426 ubox
8 29 0.079297588 ubox
8 30 0.213148093 ubox
8 34 0.146328003 ubox
8 35 0.035242318 ubox
8 36 0.090736643 ubox
8 39 0.078275833 ubox
8 42 0.016868998 ubox
8 43 0.796189144 ubox
9 23 0.018474201 ubox
9 27 0.281297799 ubox
9 28 0.096288056 ubox
9 29 0.191318511 ubox
9 33 0.162920691 ubox
9 34 0.042653654 ubox
9 35 0.078007386 ubox
9 38 0.017879082 ubox
9 39 0.108861133 ubox
9 41 0.012017607 ubox
9 42 0.870120510 ubox
10 22 0.018484013 ubox
10 26 0.298394793 ubox
10 27 0.102150704 ubox
10 32 0.179874758 ubox
10 33 0.043953666 ubox
10 38 0.148525124 ubox
10 41 0.875544923 ubox
11 18 0.003167241 ubox
11 25 0.300179623 ubox
11 31 0.191236362 ubox
11 37 0.149884518 ubox
11 40 0.874232773 ubox
11 44 0.030354204 ubox
12 17 0.003333125 ubox
12 20 0.018432301 ubox
12 24 0.299608148 ubox
12 26 0.207775039 ubox
12 30 0.191203370 ubox
12 32 0.084771070 ubox
12 36 0.149800300 ubox
12 38 0.606912823 ubox
12 39 0.630392463 ubox
12 41 0.054429442 ubox
12 43 0.031488041 ubox
13 19 0.018029201 ubox
13 25 0.211405429 ubox
13 31 0.089817287 ubox
13 37 0.856896068 ubox
13 40 0.055411029 ubox
13 44 0.145463213 ubox
14 21 0.014764266 ubox
14 22 0.296152465 ubox
14 24 0.211332843 ubox
14 27 0.008477801 ubox
14 30 0.089486110 ubox
14 33 0.016029764 ubox
14 36 0.854472517 ubox
14 39 0.047800801 ubox
14 43 0.151496887 ubox
15 20 0.014882289 ubox
15 21 0.296655097 ubox
15 22 0.216687665 ubox
15 26 0.006042034 ubox
15 27 0.254747055 ubox
15 32 0.017381515 ubox
15 33 0.867780362 ubox
15 38 0.037377263 ubox
15 39 0.038191123 ubox
16 20 0.294503123 ubox
16 21 0.216720129 ubox
16 26 0.255462688 ubox
16 32 0.872182738 ubox
16 38 0.054812342 ubox
16 41 0.172386276 ubox
17 25 0.255541349 ubox
17 31 0.870752618 ubox
17 37 0.061663876 ubox
17 40 0.173024947 ubox
18 24 0.255176755 ubox
18 27 0.576905872 ubox
18 30 0.654910651 ubox
18 33 0.053172285 ubox
18 36 0.061381141 ubox
18 39 0.173033839 ubox
19 26 0.848449477 ubox
19 32 0.053454483 ubox
19 38 0.173036078 ubox
20 25 0.846394492 ubox
20 31 0.051479052 ubox
20 37 0.172778243 ubox
24 31 0.133510983 ubox
24 37 0.004000697 ubox
25 30 0.133661969 ubox
25 32 0.127750460 ubox
25 36 0.004053533 ubox
26 31 0.127432885 ubox
26 40 0.003483733 ubox
26 46 0.012972363 ubox
26 47 0.003619766 ubox
26 48 0.008837474 ubox
27 45 0.025751743 ubox
27 47 0.010053246 ubox
28 44 0.025785725 ubox
28 46 0.009741559 ubox
29 46 0.004907382 ubox
30 37 0.135828588 ubox
30 40 0.059472154 ubox
30 44 0.009740166 ubox
30 45 0.005324037 ubox
31 36 0.135957129 ubox
31 38 0.058269076 ubox
31 39 0.056108924 ubox
31 41 0.030677946 ubox
31 43 0.010362117 ubox
32 37 0.063165762 ubox
32 40 0.030936604 ubox
32 46 0.010515239 ubox
32 47 0.006885338 ubox
32 48 0.352727887 ubox
33 45 0.012603534 ubox
33 46 0.005458990 ubox
33 47 0.359327417 ubox
34 44 0.010581443 ubox
34 46 0.352837265 ubox
35 46 0.059022183 ubox
36 44 0.357726837 ubox
36 45 0.073160068 ubox
37 43 0.368737419 ubox
38 45 0.032469316 ubox
38 46 0.015399465 ubox
38 47 0.027006052 ubox
38 48 0.037367276 ubox
39 44 0.022201002 ubox
39 45 0.017074311 ubox
39 46 0.021255694 ubox
39 47 0.037418900 ubox
41 47 0.038827992 ubox
42 46 0.033934326 ubox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
