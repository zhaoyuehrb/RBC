%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGGAGGGAUCCCACAGAUGUCACAGGGCUGUCACAGAGCUGUGGUGGGAAUUUCCCAUGAGACCCCGCCCCUGGCUGAGUCACCGCACUCCUGUGUUUGACCUGAAGUCCUCUCGAGCUGCAGAAGCCUGAAGACCAAGGAGUGGAAAGUUCUCCGGCAGCCCUGAGAUCUCAAGAGUGACAUUUGUGAGACCAGCUAAUUUGAUUAAAAUUCUCUUGGAAUCAGCUUUGCUAGUAUCAUACCUGUGCCAGAU\
UUCAUC\
) } def
/len { sequence length } bind def

/coor [
[481.25817871 578.56280518]
[475.94744873 557.16345215]
[479.14965820 535.32116699]
[490.40713501 516.29986572]
[480.65856934 504.89962769]
[465.83544922 503.99954224]
[455.78662109 492.57696533]
[456.83120728 477.03518677]
[447.08264160 465.63494873]
[440.36843872 462.60345459]
[437.28652954 454.03906250]
[427.67538452 442.52273560]
[413.58010864 437.70895386]
[410.67807007 422.15615845]
[401.06689453 410.63986206]
[391.45574951 399.12353516]
[381.84457397 387.60720825]
[372.23342896 376.09091187]
[362.62225342 364.57458496]
[353.01110840 353.05825806]
[343.39993286 341.54193115]
[333.78878784 330.02563477]
[324.17761230 318.50930786]
[314.56643677 306.99298096]
[304.95529175 295.47668457]
[294.54116821 284.68103027]
[283.37796021 274.66189575]
[272.21475220 264.64276123]
[261.05154419 254.62365723]
[249.88835144 244.60452271]
[238.72514343 234.58540344]
[227.56193542 224.56628418]
[216.39872742 214.54714966]
[205.23551941 204.52803040]
[190.42276001 205.58526611]
[178.95896912 195.58348083]
[177.95046997 180.03932190]
[166.78726196 170.02020264]
[155.62405396 160.00108337]
[144.46084595 149.98194885]
[133.29763794 139.96282959]
[122.13443756 129.94371033]
[110.52365875 138.39889526]
[95.70162964 142.17469788]
[79.60782623 140.08235168]
[64.60220337 131.74873352]
[50.27113724 136.17825317]
[35.94007111 140.60775757]
[21.60900497 145.03727722]
[7.27794027 149.46678162]
[-7.05312538 153.89630127]
[-20.40041161 164.35029602]
[-34.14076996 154.41859436]
[-28.40090179 138.46583557]
[-11.48263645 139.56523132]
[2.84842873 135.13571167]
[17.17949486 130.70620728]
[31.51055908 126.27669525]
[45.84162521 121.84718323]
[60.17269135 117.41767120]
[59.72330475 109.93114471]
[58.82453156 94.95809937]
[58.37514496 87.47157288]
[43.61711884 84.78816223]
[28.85909462 82.10475159]
[17.63056755 92.65114594]
[2.52163124 94.54149628]
[-10.64752388 87.25881958]
[-16.92796326 73.77942657]
[-31.68598747 71.09601593]
[-46.44401169 68.41260529]
[-63.10928726 71.52788544]
[-70.71622467 56.37628937]
[-58.26256943 44.87225342]
[-43.76060486 53.65457916]
[-29.00257874 56.33798981]
[-14.24455261 59.02140045]
[-3.62113476 48.61558533]
[11.26873398 46.43480301]
[24.74517250 53.52274704]
[31.54250336 67.34673309]
[46.30052948 70.03013611]
[61.05855560 72.71354675]
[65.07533264 70.85638428]
[69.11731720 69.47217560]
[73.13423920 68.55110168]
[77.07773590 68.07828522]
[80.90184784 68.03408813]
[75.95978546 53.87160110]
[71.01773071 39.70911407]
[66.07567596 25.54662704]
[61.13361359 11.38413906]
[56.19155884 -2.77834892]
[51.24950027 -16.94083595]
[37.29519653 -23.86291885]
[32.48500061 -38.29609680]
[39.17014313 -51.55673218]
[34.22808456 -65.71922302]
[29.28602600 -79.88170624]
[24.34396935 -94.04419708]
[17.58223343 -107.43370819]
[9.11828423 -119.81762695]
[0.65433574 -132.20155334]
[-14.78326988 -136.56732178]
[-20.86207008 -151.41412354]
[-12.91892910 -165.35278320]
[2.95285487 -167.69073486]
[14.57780743 -156.63450623]
[13.03825951 -140.66549683]
[21.50220871 -128.28157043]
[29.96615601 -115.89765167]
[36.92078400 -118.70535278]
[39.01231003 -133.55882263]
[50.83003998 -124.32073975]
[57.78466797 -127.12844086]
[55.27840424 -141.91757202]
[52.77214432 -156.70672607]
[42.83782196 -169.02011108]
[48.33983231 -182.86125183]
[45.83357239 -197.65039062]
[43.32731247 -212.43954468]
[31.13240051 -222.86372375]
[31.82293701 -238.89190674]
[44.86920166 -248.22863770]
[60.26321411 -243.71157837]
[66.19601440 -228.80581665]
[58.11645508 -214.94580078]
[60.62271500 -200.15666199]
[63.12897491 -185.36752319]
[72.88403320 -174.11193848]
[67.56128693 -159.21298218]
[70.06754303 -144.42384338]
[72.57380676 -129.63470459]
[38.50645828 -98.98625183]
[43.44851303 -84.82376862]
[48.39057159 -70.66127777]
[53.33263016 -56.49879074]
[66.81652069 -50.27621841]
[72.03022003 -35.98384476]
[65.41198730 -21.88289452]
[70.35404205 -7.72040653]
[75.29610443 6.44208145]
[80.23815918 20.60456848]
[85.18022156 34.76705551]
[90.12227631 48.92954636]
[95.06433105 63.09203339]
[115.35858917 66.07843781]
[130.99200439 79.35892487]
[137.22036743 98.90330505]
[132.15356445 118.78050232]
[143.31677246 128.79962158]
[154.47998047 138.81874084]
[165.64317322 148.83787537]
[176.80638123 158.85699463]
[187.96958923 168.87611389]
[203.53193665 168.20452881]
[214.71028137 178.52436829]
[215.25465393 193.36482239]
[226.41784668 203.38394165]
[237.58105469 213.40307617]
[248.74426270 223.42219543]
[259.90747070 233.44132996]
[271.07067871 243.46044922]
[282.23388672 253.47956848]
[293.39709473 263.49868774]
[304.56030273 273.51782227]
[300.26119995 259.14709473]
[302.55410767 244.32336426]
[310.99407959 231.92309570]
[323.94342041 224.35241699]
[338.88937378 223.08038330]
[352.93185425 228.35380554]
[363.34597778 239.14942932]
[368.11102295 253.37245178]
[366.30236816 268.26300049]
[358.27093506 280.93170166]
[345.57516479 288.92031860]
[330.67855835 290.67864990]
[316.47161865 285.86550903]
[326.08276367 297.38183594]
[335.69393921 308.89813232]
[345.30508423 320.41445923]
[354.91625977 331.93078613]
[364.52740479 343.44711304]
[374.13858032 354.96340942]
[383.74972534 366.47973633]
[393.36090088 377.99606323]
[402.97204590 389.51235962]
[412.58322144 401.02868652]
[422.19439697 412.54501343]
[436.97711182 418.18252563]
[439.19168091 432.91156006]
[448.80285645 444.42788696]
[458.48287964 455.88638306]
[468.23144531 467.28662109]
[483.74694824 468.66757202]
[493.47097778 480.36791992]
[492.05883789 495.15106201]
[501.80737305 506.55130005]
[509.42852783 502.41375732]
[517.58380127 499.47650146]
[526.08563232 497.80590820]
[534.73852539 497.43927002]
[543.34375000 498.38381958]
[551.70385742 500.61679077]
[559.62713623 504.08581543]
[566.93212891 508.71017456]
[573.45178223 514.38275146]
[579.03698730 520.97247314]
[583.56042480 528.32720947]
[586.91925049 536.27758789]
[589.03729248 544.64050293]
[589.86706543 553.22375488]
[589.39062500 561.83007812]
[587.62005615 570.26196289]
[584.59704590 578.32604980]
[580.39221191 585.83746338]
[575.10290527 592.62438965]
[568.85162354 598.53161621]
[576.71209717 611.30712891]
[584.57257080 624.08264160]
[592.43304443 636.85809326]
[600.29351807 649.63360596]
[608.15399170 662.40905762]
[616.01440430 675.18457031]
[632.41857910 683.58239746]
[632.18865967 701.14331055]
[640.20172119 713.82360840]
[644.76666260 716.22290039]
[647.68249512 719.76904297]
[648.78839111 723.65032959]
[648.26544189 727.10717773]
[655.81732178 740.06750488]
[670.83551025 744.20178223]
[678.30950928 757.45294189]
[674.27557373 771.74499512]
[681.82739258 784.70532227]
[689.37927246 797.66564941]
[702.57775879 808.30688477]
[696.00610352 823.93536377]
[679.16912842 821.94689941]
[676.41894531 805.21746826]
[668.86712646 792.25720215]
[661.31524658 779.29687500]
[646.89227295 775.75958252]
[639.04895020 762.72357178]
[642.85699463 747.61938477]
[635.30517578 734.65905762]
[627.52142334 721.83666992]
[619.50830078 709.15637207]
[607.79901123 706.20019531]
[601.01458740 695.72888184]
[603.23895264 683.04504395]
[595.37847900 670.26953125]
[587.51800537 657.49407959]
[579.65753174 644.71856689]
[571.79705811 631.94305420]
[563.93658447 619.16760254]
[556.07611084 606.39208984]
[534.70318604 611.34606934]
[513.02069092 607.82342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[8 195]
[9 194]
[11 193]
[12 192]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[63 83]
[64 82]
[65 81]
[69 77]
[70 76]
[71 75]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 140]
[97 137]
[98 136]
[99 135]
[100 134]
[101 111]
[102 110]
[103 109]
[115 133]
[116 132]
[117 131]
[119 129]
[120 128]
[121 127]
[219 259]
[220 258]
[221 257]
[222 256]
[223 255]
[224 254]
[225 253]
[227 250]
[228 249]
[232 248]
[233 247]
[236 244]
[237 243]
[238 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
