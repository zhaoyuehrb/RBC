%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAGGGCGGCGCGCGCGGCGGCGGCGGCAGCUCCCCGGCAGCGGCGGUGGAGAGCGCAGCGCGCAGCCCGGUGCAGCCCUGGCUUUCCCCUCGCUGCGCGCCCGCGCCCCCUUUCGCGUCCGCAACCAGAAGCCCAGUGCGGCGCCAGGAGCCGGACCCGCGCCCGCACCGCUCCCGGGACCGCGACCCCGGCCGCCCAGAG\
) } def
/len { sequence length } bind def

/coor [
[73.34272003 272.19149780]
[60.16901779 264.29534912]
[52.72235870 250.86244202]
[53.00585556 235.50616455]
[60.94325638 222.35726929]
[74.39942932 214.95275879]
[74.62929535 199.95451355]
[74.85916138 184.95628357]
[75.08901978 169.95803833]
[75.31888580 154.95980835]
[75.54875183 139.96156311]
[75.77861023 124.96332550]
[66.96183777 112.82807159]
[52.62662888 108.41197205]
[38.29142761 103.99587250]
[23.95622063 99.57978058]
[9.62101746 95.16368103]
[0.49349928 95.62764740]
[-4.89908648 90.56851196]
[-19.16493416 85.93325806]
[-33.43078232 81.29800415]
[-47.69662857 76.66275024]
[-61.43370438 87.46966553]
[-81.43115234 84.19858551]
[-93.76586151 92.73410034]
[-106.10056305 101.26962280]
[-111.37984467 108.72991943]
[-118.69033051 109.83972931]
[-131.15438843 118.18522644]
[-135.66712952 133.58050537]
[-150.57122803 139.51747131]
[-164.43351746 131.44180298]
[-166.62004089 115.54845428]
[-155.45349121 104.02944183]
[-139.49987793 105.72116852]
[-127.03582764 97.37567139]
[-114.63607788 88.93491364]
[-102.30137634 80.39939880]
[-89.96667480 71.86388397]
[-90.31144714 56.86784363]
[-103.02539825 48.90822983]
[-115.73934937 40.94861221]
[-128.45329285 32.98899460]
[-141.16725159 25.02937889]
[-153.88119507 17.06976318]
[-166.59515381 9.11014748]
[-175.53417969 7.20734644]
[-179.44163513 0.92987800]
[-192.03210449 -7.22363520]
[-200.94093323 -9.26319599]
[-204.75172424 -15.59980679]
[-217.21578979 -23.94530296]
[-229.67984009 -32.29079819]
[-242.14390564 -40.63629150]
[-254.60795593 -48.98178864]
[-267.07202148 -57.32728195]
[-279.53607178 -65.67278290]
[-288.41259766 -67.84862518]
[-292.12582397 -74.24288177]
[-304.46054077 -82.77840424]
[-316.79525757 -91.31391907]
[-332.54611206 -92.80420685]
[-338.60913086 -106.40895081]
[-350.94381714 -114.94447327]
[-363.34356689 -123.38522339]
[-375.80761719 -131.73071289]
[-388.27169800 -140.07621765]
[-403.72463989 -136.76231384]
[-416.94924927 -145.41595459]
[-420.09957886 -160.90307617]
[-411.30657959 -174.03546143]
[-395.78701782 -177.02186584]
[-382.74835205 -168.09054565]
[-379.92617798 -152.54026794]
[-367.46212769 -144.19477844]
[-354.99807739 -135.84927368]
[-347.68759155 -134.73947144]
[-342.40832520 -127.27917480]
[-330.07360840 -118.74365997]
[-315.20501709 -117.86388397]
[-308.25973511 -103.64862823]
[-295.92501831 -95.11310577]
[-283.59033203 -86.57759094]
[-271.19058228 -78.13683319]
[-258.72653198 -69.79134369]
[-246.26246643 -61.44584656]
[-233.79840088 -53.10034943]
[-221.33435059 -44.75485229]
[-208.87028503 -36.40935898]
[-196.40623474 -28.06386375]
[-183.87860107 -19.81411743]
[-171.28811646 -11.66060352]
[-158.63552856 -3.60380220]
[-145.92158508 4.35581398]
[-133.20762634 12.31543064]
[-120.49368286 20.27504730]
[-107.77973175 28.23466301]
[-95.06578064 36.19427872]
[-82.35183716 44.15389633]
[-54.69673157 41.52219772]
[-43.06137466 62.39690018]
[-28.79552650 67.03215790]
[-14.52967930 71.66741180]
[-0.26383141 76.30266571]
[14.03711414 80.82847595]
[28.37231827 85.24457550]
[42.70752335 89.66066742]
[57.04272842 94.07676697]
[71.37792969 98.49286652]
[59.15563583 89.79714966]
[51.44297791 76.93188477]
[49.53300095 62.05398560]
[53.74592209 47.65776062]
[63.37543106 36.15678024]
[76.80711365 29.47921371]
[91.78911591 28.74457550]
[105.80965424 34.07603073]
[116.51769257 44.57904816]
[128.44708252 35.48566818]
[140.37648010 26.39228630]
[145.30732727 18.69724655]
[152.55908203 17.25263023]
[164.62641907 8.34312630]
[176.69375610 -0.56637794]
[188.76109314 -9.47588253]
[200.82844543 -18.38538742]
[197.50692749 -33.24766922]
[200.52397156 -48.17473602]
[209.35685730 -60.58038330]
[222.47523499 -68.31525421]
[237.60624695 -70.03923798]
[252.12837219 -65.45365143]
[263.52557373 -55.35295868]
[269.82318115 -41.48718262]
[269.93014526 -26.25864029]
[263.82788086 -12.30577564]
[252.57369995 -2.04600453]
[238.11740112 2.74310517]
[222.96366882 1.23181117]
[209.73794556 -6.31804562]
[197.67060852 2.59145904]
[185.60325623 11.50096321]
[173.53591919 20.41046715]
[161.46858215 29.31997299]
[149.46986389 38.32167816]
[137.54046631 47.41506195]
[125.61107635 56.50844193]
[126.92601013 63.89227295]
[129.55587769 78.65993500]
[130.87081909 86.04376221]
[145.20602417 90.45986176]
[159.54122925 94.87595367]
[173.87643433 99.29205322]
[188.21163940 103.70815277]
[202.67544556 107.68287659]
[217.25425720 111.21248627]
[231.83306885 114.74210358]
[243.56391907 104.58499908]
[259.02740479 103.29650116]
[272.27749634 111.37206268]
[278.21926880 125.70645905]
[274.56799316 140.78782654]
[262.72763062 150.81707764]
[247.25108337 151.93774414]
[234.08937073 143.71893311]
[228.30345154 129.32092285]
[213.72463989 125.79129791]
[199.14582825 122.26168823]
[196.68272400 123.60948944]
[193.53608704 124.06045532]
[190.04570007 123.34887695]
[186.64132690 121.33716583]
[183.79554749 118.04335785]
[169.46034241 113.62725830]
[155.12513733 109.21115875]
[140.78993225 104.79505920]
[126.45471954 100.37896729]
[117.54521942 112.44630432]
[125.98596954 124.84605408]
[134.42672729 137.24580383]
[142.86747742 149.64553833]
[158.38081360 149.98643494]
[170.71057129 159.40751648]
[175.11572266 174.28616333]
[169.90238953 188.90124512]
[157.07519531 197.63298035]
[141.56648254 197.12380981]
[129.33964539 187.56953430]
[125.09616089 172.64396667]
[130.46774292 158.08628845]
[122.02698517 145.68655396]
[113.58622742 133.28680420]
[105.14546967 120.88706207]
[90.77685547 125.19319153]
[90.54698944 140.19142151]
[90.31712341 155.18966675]
[90.08725739 170.18789673]
[89.85739899 185.18614197]
[89.62753296 200.18438721]
[89.39766693 215.18261719]
[102.62061310 222.99601746]
[110.15134430 236.38197327]
[109.96411896 251.73973083]
[102.10930634 264.93811035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[19 104]
[20 103]
[21 102]
[22 101]
[24 39]
[25 38]
[26 37]
[28 36]
[29 35]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 93]
[48 92]
[49 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[59 83]
[60 82]
[61 81]
[63 79]
[64 78]
[65 76]
[66 75]
[67 74]
[118 147]
[119 146]
[120 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[155 168]
[156 167]
[157 166]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
