%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCAAGGUCACACAGCUGGGAUGUGGCAGAGCUGGGGUUCCAGCUCCUGUUCCCAUUGCUGGACAGCUGCCACAUCUGGCACCCAAUUUAGGACCCCGCGGGGAGGCCCAAGCCCCGGGGGUGGCGGGGGAUCCUAGAGGAAAGUGGCAAGGCCAGGACCCUGGAGCAGAGCCAGAGUAGAAAACUGAGGCUCUGAGAG\
) } def
/len { sequence length } bind def

/coor [
[151.48269653 258.79681396]
[150.44918823 251.19737244]
[151.49302673 243.57215881]
[154.55218506 236.48059082]
[159.41625977 230.44680786]
[152.49288940 217.14015198]
[145.56951904 203.83351135]
[132.83131409 196.11422729]
[133.32556152 180.30075073]
[126.40219879 166.99409485]
[119.47882843 153.68743896]
[112.55545807 140.38079834]
[100.86328125 142.27886963]
[89.10336304 140.85964966]
[78.19842529 136.23449707]
[69.00408173 128.76631165]
[62.24174118 119.04106140]
[58.44199753 107.82180023]
[43.44244766 107.93787384]
[33.84969711 116.56631470]
[21.35010147 116.35061646]
[12.63873672 107.95205688]
[-2.36081409 107.83598328]
[-17.36036491 107.71991730]
[-32.35991669 107.60385132]
[-47.35946655 107.48778534]
[-62.35901642 107.37171936]
[-77.35856628 107.25564575]
[-92.35811615 107.13957977]
[-107.35767365 107.02351379]
[-122.35722351 106.90744781]
[-137.17794800 109.21956635]
[-151.42938232 113.89894867]
[-165.68081665 118.57833862]
[-179.93225098 123.25772858]
[-194.18368530 127.93711853]
[-208.43511963 132.61650085]
[-222.68655396 137.29589844]
[-233.21276855 149.87089539]
[-249.31729126 146.77627563]
[-254.43315125 131.19552612]
[-243.29760742 119.15676880]
[-227.36593628 123.04445648]
[-213.11450195 118.36507416]
[-198.86306763 113.68568420]
[-184.61163330 109.00629425]
[-170.36021423 104.32690430]
[-156.10877991 99.64752197]
[-141.85734558 94.96813202]
[-142.20552063 79.97217560]
[-156.65876770 75.95925140]
[-171.11201477 71.94631958]
[-185.56526184 67.93339539]
[-200.01850891 63.92047119]
[-214.47177124 59.90754700]
[-226.53421021 69.66854858]
[-242.03201294 70.44161987]
[-255.00596619 61.92950058]
[-260.46731567 47.40526581]
[-256.31604004 32.45378876]
[-244.14843750 22.82421494]
[-228.64315796 22.21931076]
[-215.76229858 30.87167549]
[-210.45884705 45.45429993]
[-196.00558472 49.46722412]
[-181.55233765 53.48014832]
[-167.09909058 57.49307251]
[-152.64584351 61.50599670]
[-138.19259644 65.51892090]
[-123.96086884 77.66925049]
[-122.24115753 91.90789795]
[-107.24160004 92.02396393]
[-92.24205017 92.14002991]
[-77.24250031 92.25609589]
[-62.24295044 92.37216187]
[-47.24340057 92.48823547]
[-32.24384689 92.60430145]
[-17.24429703 92.72036743]
[-2.24474669 92.83643341]
[12.75480461 92.95249939]
[27.52754021 83.48479462]
[43.32638168 92.93831635]
[58.32593155 92.82225037]
[67.98574829 72.37146759]
[86.80358124 59.82410431]
[109.39637756 58.76947403]
[115.27040100 44.96745300]
[114.85052490 38.35895920]
[117.44544220 33.29386902]
[121.54570007 30.83366966]
[127.84403992 17.22003746]
[134.14237976 3.60640645]
[140.44070435 -10.00722504]
[146.73904419 -23.62085533]
[153.03738403 -37.23448563]
[159.33572388 -50.84811783]
[165.42262268 -64.55758667]
[171.29664612 -78.35961151]
[177.17066956 -92.16163635]
[183.04469299 -105.96366119]
[188.91871643 -119.76568604]
[194.79273987 -133.56770325]
[199.14007568 -147.92391968]
[201.90972900 -162.66600037]
[204.67939758 -177.40808105]
[198.73561096 -192.69216919]
[209.20976257 -205.31057739]
[225.32693481 -202.28257751]
[230.50717163 -186.72309875]
[219.42147827 -174.63841248]
[216.65180969 -159.89633179]
[213.88215637 -145.15425110]
[220.84947205 -142.37821960]
[234.78413391 -136.82614136]
[241.75144958 -134.05010986]
[249.87881470 -146.65748596]
[258.00616455 -159.26486206]
[266.13351440 -171.87225342]
[269.63363647 -188.46096802]
[286.54299927 -189.68984985]
[292.40481567 -173.78150940]
[278.74090576 -163.74488831]
[270.61355591 -151.13751221]
[262.48620605 -138.53013611]
[254.35884094 -125.92275238]
[227.30395508 -117.07677460]
[208.59477234 -127.69367981]
[202.72074890 -113.89166260]
[196.84672546 -100.08963776]
[190.97270203 -86.28761292]
[185.09867859 -72.48558807]
[179.22465515 -58.68356323]
[180.14965820 -53.99218369]
[178.13287354 -48.67040253]
[172.94935608 -44.54978180]
[166.65101624 -30.93615150]
[160.35267639 -17.32251930]
[154.05433655 -3.70888829]
[147.75601196 9.90474319]
[141.45767212 23.51837349]
[135.15933228 37.13200378]
[129.07241821 50.84147644]
[123.19840240 64.64350128]
[128.75303650 68.99176025]
[133.50755310 74.20287323]
[137.32968140 80.13185120]
[140.11302185 86.61368561]
[141.78015137 93.46802521]
[156.77610779 93.81620026]
[171.77207947 94.16437531]
[186.76803589 94.51255035]
[202.74324036 88.83549500]
[212.62081909 102.61482239]
[202.11437988 115.92087555]
[186.41986084 109.50850677]
[171.42390442 109.16033173]
[156.42793274 108.81215668]
[141.43197632 108.46398163]
[135.89277649 122.35970306]
[125.86211395 133.45742798]
[132.78547668 146.76406860]
[139.70884705 160.07072449]
[146.63221741 173.37738037]
[159.86563110 182.04843140]
[158.87617493 196.91014099]
[165.79954529 210.21679688]
[172.72291565 223.52343750]
[195.26696777 228.41125488]
[206.70333862 248.13494873]
[199.90776062 269.61676025]
[208.22924805 282.09686279]
[216.55073547 294.57693481]
[224.87222290 307.05703735]
[233.19371033 319.53713989]
[241.51519775 332.01724243]
[249.83668518 344.49734497]
[265.07730103 347.71624756]
[273.33868408 360.49139404]
[270.17602539 375.00115967]
[278.49749756 387.48126221]
[286.81900024 399.96133423]
[302.20556641 404.50372314]
[308.11383057 419.41921997]
[300.01150513 433.26593018]
[284.11395264 435.42187500]
[272.61645508 424.23315430]
[274.33889771 408.28283691]
[266.01742554 395.80273438]
[257.69592285 383.32263184]
[243.08547974 380.66363525]
[234.46852112 368.12557983]
[237.35658264 352.81881714]
[229.03509521 340.33874512]
[220.71360779 327.85864258]
[212.39212036 315.37854004]
[204.07063293 302.89843750]
[195.74914551 290.41833496]
[187.42767334 277.93823242]
[180.05741882 279.36840820]
[172.54658508 278.76965332]
[165.44540405 276.17135620]
[159.27799988 271.74990845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 167]
[6 166]
[7 165]
[9 163]
[10 162]
[11 161]
[12 160]
[18 83]
[19 82]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[86 143]
[87 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 112]
[104 111]
[105 110]
[115 125]
[116 124]
[117 123]
[118 122]
[148 158]
[149 157]
[150 156]
[151 155]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[175 193]
[176 192]
[179 189]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
