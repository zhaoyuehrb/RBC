%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGGCUGAGGAGCCUAGGGGCGGGGUGGGAAGGAGGACCGGCCGAACCUUGGGUGUGGGACAGAGUGCGUGCGUGUGGUGUGUCCCCAAGGGCAGGAAGGUGGCGAAGGGAGGCGAAUCCGAGUGGGUGGAGGGAGGGGAAGGGCGGGAGGAGAAAAAGGUGGGAGGAGGACCAGGUGGGAGGGUGGCGGCUCACUCAGGACCCAGCGGGGGCAGCGCG\
) } def
/len { sequence length } bind def

/coor [
[2.33872271 176.06802368]
[-0.78810185 176.53694153]
[-3.52324915 175.96188354]
[-16.47826767 183.52279663]
[-29.43328476 191.08372498]
[-33.55708694 206.10478210]
[-46.80302429 213.58807373]
[-61.09788895 209.56408691]
[-74.05290985 217.12501526]
[-87.00792694 224.68592834]
[-86.51670074 242.26013184]
[-94.95572662 257.58172607]
[-109.91841888 266.46856689]
[-127.23192596 266.54733276]
[-142.12075806 257.88659668]
[-154.85762024 265.80950928]
[-167.59449768 273.73239136]
[-180.33135986 281.65527344]
[-193.06823730 289.57815552]
[-205.80509949 297.50103760]
[-218.54197693 305.42391968]
[-231.27885437 313.34683228]
[-232.51577759 328.70181274]
[-242.44102478 340.24923706]
[-257.08938599 343.69732666]
[-270.79522705 337.92773438]
[-283.53210449 345.85061646]
[-291.16339111 359.70968628]
[-306.05722046 359.86221313]
[-318.79406738 367.78509521]
[-331.53094482 375.70797729]
[-331.65533447 391.13485718]
[-340.11947632 404.03298950]
[-354.22250366 410.28662109]
[-369.46420288 407.90029907]
[-380.98095703 397.63540649]
[-385.09786987 382.76751709]
[-380.50122070 368.04086304]
[-368.65777588 358.15469360]
[-353.34674072 356.26361084]
[-339.45382690 362.97109985]
[-326.71697998 355.04821777]
[-313.98010254 347.12533569]
[-307.25982666 333.83294678]
[-291.45498657 333.11373901]
[-278.71810913 325.19085693]
[-277.83511353 310.34637451]
[-268.26724243 298.73089600]
[-253.52197266 294.93215942]
[-239.20173645 300.60995483]
[-226.46485901 292.68707275]
[-213.72799683 284.76416016]
[-200.99111938 276.84127808]
[-188.25425720 268.91839600]
[-175.51737976 260.99551392]
[-162.78051758 253.07263184]
[-150.04364014 245.14973450]
[-151.81518555 232.65019226]
[-148.71922302 220.36306763]
[-141.18092346 210.12011719]
[-130.29034424 203.46209717]
[-117.64499664 201.40701294]
[-105.11549377 204.29464722]
[-94.56884766 211.73091125]
[-81.61383057 204.16999817]
[-68.65880585 196.60906982]
[-65.13156891 182.18360901]
[-52.10105133 174.33120728]
[-36.99420547 178.12870789]
[-24.03918648 170.56777954]
[-11.08416843 163.00686646]
[1.65270185 155.08398438]
[14.16131306 146.80541992]
[26.66992378 138.52684021]
[39.17853546 130.24827576]
[43.01821518 123.94104767]
[51.92218399 121.94264984]
[64.54618073 113.84111786]
[77.17017365 105.73958588]
[76.70104218 96.63809967]
[79.72404480 88.04051208]
[85.78607941 81.23545074]
[81.01036835 67.01600647]
[76.23465729 52.79655838]
[64.50627899 42.17791367]
[67.78883362 27.64952660]
[63.01312256 13.43008137]
[58.23741531 -0.78936267]
[53.46170425 -15.00880718]
[41.15530777 -17.14665985]
[30.98262978 -24.26968193]
[24.83655930 -34.97761917]
[23.82880974 -47.21045685]
[28.08928871 -58.64463043]
[36.75304794 -67.13437653]
[32.37982178 -81.48271942]
[17.50599480 -85.57817841]
[7.22452879 -97.08013153]
[4.81620550 -112.31835938]
[11.04951096 -126.43038940]
[23.93542099 -134.91313171]
[39.36208725 -135.05976868]
[52.40691757 -126.82350922]
[58.90735245 -112.83251953]
[56.78913116 -97.55126190]
[46.72816467 -85.85594177]
[51.10139084 -71.50760651]
[68.04949951 -66.52003479]
[78.69936371 -52.22737122]
[78.63036346 -34.24599075]
[67.68115234 -19.78451729]
[72.45685577 -5.56507254]
[77.23256683 8.65437126]
[82.00827789 22.87381554]
[93.39507294 32.47539139]
[90.45410156 48.02085114]
[95.22981262 62.24029541]
[100.00552368 76.45973969]
[109.45503998 78.44202423]
[117.31394196 84.05097961]
[122.26015472 92.34300995]
[137.25978088 92.23735809]
[152.25941467 92.13169861]
[167.25903320 92.02603912]
[176.84904480 83.40936279]
[189.33891296 83.62528229]
[198.04742432 92.01312256]
[213.04704285 92.11878204]
[228.04667664 92.22444153]
[243.04629517 92.33010101]
[258.04592896 92.43576050]
[264.06787109 81.49254608]
[274.11074829 74.18761444]
[286.23498535 71.85591125]
[298.13110352 74.87917328]
[307.55947876 82.62496948]
[312.77206421 93.57785797]
[327.76275635 94.10604095]
[342.75344849 94.63422394]
[357.74749756 95.05680847]
[372.74417114 95.37376404]
[387.74081421 95.69071198]
[394.55072021 85.95861816]
[405.10302734 80.77160645]
[416.72888184 81.31282806]
[426.54934692 87.33258820]
[432.18838501 97.23887634]
[447.17016602 97.97818756]
[450.51223755 84.66281891]
[456.26019287 72.20056915]
[464.21374512 61.02175522]
[474.09649658 51.51203918]
[485.56546021 43.99912643]
[498.22314453 38.74147797]
[511.63113403 35.91940689]
[525.32537842 35.62890625]
[538.83221436 37.87837982]
[551.68475342 42.58840561]
[563.43914795 49.59455109]
[573.68969727 58.65309525]
[582.08288574 69.44951630]
[588.32983398 81.60941315]
[592.21594238 94.71149445]
[593.60833740 108.30215454]
[608.54547119 109.67380524]
[623.48266602 111.04544830]
[633.61145020 99.29014587]
[648.72308350 95.76624298]
[663.00683594 101.82875061]
[670.97027588 115.14651489]
[669.55139160 130.59857178]
[659.29565430 142.24331665]
[644.14666748 145.60307312]
[629.92950439 139.38597107]
[622.11096191 125.98260498]
[607.17382812 124.61095428]
[592.23669434 123.23931122]
[587.35797119 138.82142639]
[579.15478516 152.94671631]
[568.02972412 164.91601562]
[554.53033447 174.13609314]
[539.32171631 180.14910889]
[523.15417480 182.65538025]
[506.82583618 181.52822876]
[491.14352417 176.82046509]
[476.88265991 168.76188660]
[464.74917603 157.74803162]
[455.34436035 144.32084656]
[449.13510132 129.14192200]
[446.43084717 112.95996094]
[431.44906616 112.22064972]
[418.63812256 125.30599213]
[400.01144409 124.85507965]
[387.42385864 110.68736267]
[372.42721558 110.37041473]
[357.43054199 110.05345917]
[350.68276978 113.05206299]
[342.22528076 109.62492371]
[327.23458862 109.09674072]
[312.24386597 108.56855774]
[302.01815796 122.97512054]
[285.03991699 128.40083313]
[268.05740356 122.49072266]
[257.94027710 107.43538666]
[242.94064331 107.32972717]
[227.94100952 107.22406769]
[212.94139099 107.11840820]
[197.94175720 107.01275635]
[183.16632080 116.48817444]
[167.36470032 107.02566528]
[152.36506653 107.13132477]
[137.36543274 107.23698425]
[122.36581421 107.34264374]
[106.70434570 122.56536865]
[85.27170563 118.36358643]
[72.64770508 126.46511078]
[60.02371597 134.56665039]
[47.45709991 142.75689697]
[34.94849014 151.03546143]
[22.43987846 159.31402588]
[9.93126678 167.59259033]
[8.14001942 171.52632141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 71]
[4 70]
[5 69]
[8 66]
[9 65]
[10 64]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[26 46]
[27 45]
[29 43]
[30 42]
[31 41]
[72 221]
[73 220]
[74 219]
[75 218]
[77 217]
[78 216]
[79 215]
[82 118]
[83 117]
[84 116]
[86 114]
[87 113]
[88 112]
[89 111]
[95 107]
[96 106]
[121 213]
[122 212]
[123 211]
[124 210]
[127 208]
[128 207]
[129 206]
[130 205]
[131 204]
[137 200]
[138 199]
[139 198]
[140 196]
[141 195]
[142 194]
[147 191]
[148 190]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
