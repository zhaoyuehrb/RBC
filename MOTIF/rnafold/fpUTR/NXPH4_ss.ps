%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGGCUCCGCGCCUCGCGCCCAGUCCGCGGGCCGCGCCGCCGCUCCCGCCGCUCCCGCCGCUCCCGCCGCUCCCGCAGCCGCCCCGCCGCCCGCCCGGAGCCCCGCGUCCCUAGGCCUGGCUCCCGCCUGCCCGAGACCCGCCCAGCCUGCCCCGCUCAGCCGCCAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[189.04525757 420.95983887]
[194.23788452 409.14758301]
[203.55383301 400.15225220]
[198.56355286 386.00668335]
[187.03282166 376.57846069]
[189.73828125 360.99029541]
[184.74800110 346.84472656]
[179.75773621 332.69915771]
[174.76745605 318.55358887]
[161.26245117 312.37698364]
[156.00009155 298.10244751]
[162.57025146 283.97903442]
[157.57998657 269.83346558]
[152.58970642 255.68788147]
[137.01550293 244.25959778]
[140.92753601 224.50599670]
[135.43554688 210.54754639]
[129.94357300 196.58911133]
[124.45159149 182.63066101]
[112.59168243 173.62001038]
[114.73903656 157.94520569]
[109.24705505 143.98677063]
[96.35837555 144.80047607]
[83.77030182 141.91587830]
[72.52200317 135.57110596]
[63.54202652 126.28992462]
[57.57167435 114.83849335]
[55.10379791 102.16213989]
[56.34212494 89.30730438]
[61.18443298 77.33515167]
[49.67466736 67.71614075]
[38.16489792 58.09713745]
[26.65513229 48.47813416]
[15.14536476 38.85912704]
[3.63559794 29.24012184]
[-11.91519547 26.32749367]
[-16.71938133 12.22894669]
[-28.22914886 2.60994101]
[-39.73891449 -7.00906467]
[-55.26787949 -5.78878593]
[-66.80339050 -15.70778656]
[-67.87104034 -30.51979828]
[-79.38080597 -40.13880539]
[-94.93160248 -43.05142975]
[-99.73578644 -57.14997864]
[-111.24555206 -66.76898193]
[-122.75532532 -76.38799286]
[-122.71537018 -61.38804245]
[-133.17579651 -50.63725662]
[-148.17121887 -50.26660538]
[-159.15002441 -60.48746109]
[-159.85119629 -75.47106171]
[-149.87487793 -86.67253876]
[-134.90896606 -87.70343018]
[-145.32455444 -98.49765778]
[-160.19148254 -94.90299225]
[-174.76536560 -99.20404816]
[-185.16052246 -110.14968872]
[-188.65783691 -124.73134613]
[-184.41540527 -139.00956726]
[-194.83099365 -149.80378723]
[-209.98133850 -154.36203003]
[-213.25093079 -168.89334106]
[-223.66653442 -179.68757629]
[-239.56938171 -183.69151306]
[-243.79240417 -199.53758240]
[-231.99133301 -210.92471313]
[-216.30607605 -206.13879395]
[-212.87229919 -190.10316467]
[-202.45671082 -179.30894470]
[-188.05136108 -175.52276611]
[-184.03677368 -160.21939087]
[-173.62117004 -149.42515564]
[-159.20063782 -153.15525818]
[-144.75309753 -149.13972473]
[-134.18545532 -138.36050415]
[-130.40731812 -123.64241028]
[-134.53033447 -108.91325378]
[-124.11473846 -98.11902618]
[-113.13631439 -87.89775848]
[-101.62654877 -78.27875519]
[-90.11678314 -68.65974426]
[-75.38924408 -66.43513489]
[-69.76180267 -51.64857101]
[-58.25203705 -42.02956390]
[-43.48580551 -43.60879898]
[-31.67623711 -34.01772308]
[-30.11991119 -18.51883125]
[-18.61014366 -8.89982605]
[-7.10037661 0.71917939]
[7.62716103 2.94379115]
[13.25460339 17.73035431]
[24.76436996 27.34935951]
[36.27413559 36.96836472]
[47.78390503 46.58737183]
[59.29367065 56.20637512]
[70.80343628 65.82537842]
[90.02573395 56.17240906]
[111.53221893 56.55633926]
[130.39773560 66.88925171]
[142.24348450 57.68718338]
[154.08924866 48.48511887]
[165.93499756 39.28305435]
[177.78076172 30.08098602]
[189.62652588 20.87891960]
[191.73504639 5.44545460]
[203.87940979 -3.71800160]
[218.57987976 -1.61273205]
[230.42562866 -10.81479836]
[229.79257202 -26.31895447]
[238.42153931 -39.21548843]
[252.99450684 -44.54542160]
[267.90789795 -40.25928116]
[277.42715454 -28.00518036]
[277.89199829 -12.49506855]
[269.12362671 0.30709904]
[254.49369812 5.47862816]
[239.62770081 1.03095984]
[227.78193665 10.23302555]
[226.18629456 24.99749374]
[214.30409241 34.49844360]
[198.82858276 32.72467804]
[186.98283386 41.92674637]
[175.13706970 51.12881088]
[163.29130554 60.33087540]
[151.44555664 69.53294373]
[139.59979248 78.73500824]
[143.66752625 89.34680176]
[144.94367981 100.63964081]
[143.34667969 111.89157867]
[138.97859192 122.38331604]
[132.11869812 131.44413757]
[123.20549774 138.49478149]
[128.69747925 152.45323181]
[140.95021057 162.46228027]
[138.41003418 177.13868713]
[143.90200806 191.09712219]
[149.39399719 205.05557251]
[154.88598633 219.01400757]
[165.13041687 222.78866577]
[171.46127319 231.41198730]
[171.97201538 241.87727356]
[166.73527527 250.69761658]
[171.72555542 264.84317017]
[176.71582031 278.98873901]
[190.69361877 285.86325073]
[195.55296326 300.27996826]
[188.91302490 313.56329346]
[193.90330505 327.70886230]
[198.89356995 341.85443115]
[203.88385010 356.00000000]
[215.77153015 366.44003296]
[212.70912170 381.01638794]
[217.69940186 395.16198730]
[235.02043152 397.96334839]
[248.48097229 409.07955933]
[254.44543457 425.39175415]
[251.36186218 442.39401245]
[240.16456604 455.43789673]
[245.65655518 469.39633179]
[251.14854431 483.35479736]
[266.20300293 487.11538696]
[276.14608765 499.02819824]
[277.15444946 514.51251221]
[268.84033203 527.61419678]
[254.40072632 533.29553223]
[239.38792419 529.37182617]
[229.57467651 517.35186768]
[228.73434448 501.85754395]
[237.19009399 488.84677124]
[231.69810486 474.88833618]
[226.20613098 460.92987061]
[213.54768372 460.40719604]
[201.98928833 455.10617065]
[193.27053833 445.78558350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 154]
[4 153]
[6 151]
[7 150]
[8 149]
[9 148]
[12 145]
[13 144]
[14 143]
[16 139]
[17 138]
[18 137]
[19 136]
[21 134]
[22 133]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[35 92]
[37 90]
[38 89]
[39 88]
[42 85]
[43 84]
[45 82]
[46 81]
[47 80]
[54 79]
[55 78]
[60 73]
[61 72]
[63 70]
[64 69]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[108 119]
[109 118]
[159 172]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
