%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (THEGL)
} def

/sequence { (\
GAGCAAACUGCGCCUGGGCAACCAGUCGGGAGGGUGAGUCCCGCGCGCGACAGAAGCUUCUGGCGCGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.045811144 ubox
1 40 0.056392696 ubox
1 59 0.014420672 ubox
1 60 0.008515102 ubox
2 9 0.131372790 ubox
2 15 0.004972926 ubox
2 26 0.043376753 ubox
2 39 0.056302537 ubox
2 58 0.017661080 ubox
2 59 0.006170636 ubox
3 8 0.134129905 ubox
3 11 0.766579636 ubox
3 13 0.235189897 ubox
3 14 0.004070832 ubox
3 26 0.019884244 ubox
3 35 0.010475164 ubox
3 39 0.014561627 ubox
3 44 0.075346312 ubox
3 46 0.018058131 ubox
3 48 0.003722823 ubox
3 57 0.018846506 ubox
3 64 0.024804212 ubox
3 66 0.030205117 ubox
4 10 0.767709386 ubox
4 12 0.235625136 ubox
4 25 0.021156417 ubox
4 34 0.010921789 ubox
4 36 0.077074819 ubox
4 38 0.016040809 ubox
4 43 0.075688039 ubox
4 45 0.018814773 ubox
4 47 0.003729885 ubox
4 56 0.018836192 ubox
4 63 0.024803969 ubox
4 65 0.030194400 ubox
5 9 0.622224319 ubox
5 35 0.077152143 ubox
7 26 0.040906982 ubox
7 35 0.017732817 ubox
7 39 0.024909708 ubox
8 25 0.043259840 ubox
8 29 0.100608513 ubox
8 30 0.102988380 ubox
8 32 0.079704051 ubox
8 33 0.010211812 ubox
8 34 0.017722141 ubox
8 38 0.026113775 ubox
8 53 0.016576863 ubox
9 20 0.049529954 ubox
9 24 0.042706452 ubox
9 28 0.099492528 ubox
9 29 0.094235860 ubox
9 31 0.079655550 ubox
9 32 0.009784014 ubox
9 33 0.016030290 ubox
9 37 0.025971856 ubox
9 45 0.048069797 ubox
9 47 0.022023377 ubox
9 49 0.041276411 ubox
9 52 0.016508597 ubox
9 67 0.163722867 ubox
10 19 0.053564207 ubox
10 23 0.042086908 ubox
10 26 0.009993349 ubox
10 27 0.101345628 ubox
10 35 0.004733096 ubox
10 44 0.068862873 ubox
10 46 0.395490406 ubox
10 48 0.053503037 ubox
10 51 0.016102262 ubox
10 66 0.204185085 ubox
11 18 0.053666226 ubox
11 25 0.009403865 ubox
11 28 0.192150528 ubox
11 34 0.004868035 ubox
11 36 0.026074375 ubox
11 43 0.068711010 ubox
11 45 0.410529793 ubox
11 47 0.053651853 ubox
11 49 0.016088826 ubox
11 65 0.204262766 ubox
11 67 0.006675164 ubox
12 19 0.043989710 ubox
12 26 0.184104807 ubox
12 27 0.308759802 ubox
12 35 0.026291256 ubox
12 42 0.033341999 ubox
12 44 0.415548734 ubox
12 46 0.065297024 ubox
12 48 0.016106522 ubox
12 64 0.204278732 ubox
12 66 0.005161048 ubox
13 18 0.043869987 ubox
13 25 0.136803063 ubox
13 29 0.015013390 ubox
13 30 0.065509196 ubox
13 33 0.005015660 ubox
13 34 0.026223963 ubox
13 43 0.408276674 ubox
13 45 0.066004675 ubox
13 47 0.016072630 ubox
13 63 0.204225968 ubox
13 65 0.004991850 ubox
14 25 0.941237407 ubox
14 28 0.013344768 ubox
14 29 0.066089876 ubox
14 30 0.068403046 ubox
14 32 0.005232436 ubox
14 33 0.024978366 ubox
14 62 0.194050411 ubox
15 24 0.963340391 ubox
15 28 0.064713436 ubox
15 29 0.069258996 ubox
15 31 0.004807827 ubox
15 32 0.019934636 ubox
15 43 0.043989850 ubox
15 49 0.004655358 ubox
16 23 0.965754122 ubox
16 27 0.060813078 ubox
16 41 0.125670201 ubox
16 42 0.089767501 ubox
16 48 0.005644291 ubox
16 58 0.004703040 ubox
16 59 0.133250971 ubox
16 60 0.087443936 ubox
16 61 0.012599484 ubox
17 22 0.965128003 ubox
17 23 0.014635405 ubox
17 26 0.055656123 ubox
17 27 0.076733235 ubox
17 40 0.125923279 ubox
17 41 0.090012842 ubox
17 42 0.004480556 ubox
17 57 0.004374902 ubox
17 58 0.152963375 ubox
17 59 0.063683473 ubox
17 60 0.012838303 ubox
18 22 0.016001030 ubox
18 26 0.079762339 ubox
18 39 0.125839973 ubox
18 40 0.089683608 ubox
18 41 0.004484356 ubox
18 46 0.006287419 ubox
18 57 0.165925271 ubox
18 58 0.018746952 ubox
18 59 0.008224502 ubox
19 25 0.082544371 ubox
19 36 0.012889834 ubox
19 38 0.131675057 ubox
19 45 0.006289223 ubox
19 56 0.165903923 ubox
20 35 0.011516887 ubox
21 35 0.090609552 ubox
21 39 0.068505173 ubox
22 29 0.017386629 ubox
22 30 0.005420772 ubox
22 33 0.029706463 ubox
22 34 0.090649326 ubox
22 38 0.073197348 ubox
23 28 0.017384035 ubox
23 29 0.005463896 ubox
23 32 0.031020119 ubox
23 33 0.090033916 ubox
23 36 0.121628546 ubox
24 35 0.121673909 ubox
25 44 0.080415660 ubox
25 46 0.062602049 ubox
25 48 0.024749482 ubox
25 51 0.175804200 ubox
26 33 0.119985768 ubox
26 34 0.010383349 ubox
26 37 0.006363906 ubox
26 43 0.020230953 ubox
26 45 0.070330955 ubox
26 47 0.022022006 ubox
26 50 0.177445722 ubox
26 68 0.005424986 ubox
27 32 0.123940237 ubox
27 33 0.011531123 ubox
27 36 0.006642577 ubox
27 43 0.782162553 ubox
27 45 0.015826615 ubox
27 47 0.020491506 ubox
27 49 0.177520078 ubox
27 62 0.007094082 ubox
27 67 0.004965761 ubox
28 35 0.006152521 ubox
28 41 0.011546724 ubox
28 42 0.931789266 ubox
28 44 0.016519814 ubox
28 46 0.023709416 ubox
28 48 0.176832457 ubox
28 61 0.007397057 ubox
29 40 0.011579826 ubox
29 41 0.932653361 ubox
29 42 0.026517875 ubox
29 60 0.007427992 ubox
30 39 0.010918792 ubox
30 40 0.932616389 ubox
30 41 0.026293808 ubox
30 59 0.007398531 ubox
31 39 0.923195620 ubox
31 58 0.007360213 ubox
32 40 0.025333535 ubox
32 41 0.024580365 ubox
32 42 0.309118585 ubox
32 57 0.007050386 ubox
33 39 0.026780118 ubox
33 40 0.024904230 ubox
33 41 0.309712254 ubox
33 42 0.024768133 ubox
34 39 0.017404143 ubox
34 40 0.309341021 ubox
34 41 0.024652726 ubox
34 44 0.023557016 ubox
35 43 0.023593103 ubox
36 42 0.023581319 ubox
38 44 0.004689847 ubox
38 51 0.007374008 ubox
39 43 0.004410428 ubox
39 50 0.007401659 ubox
40 49 0.007385353 ubox
42 67 0.053752508 ubox
43 48 0.003907979 ubox
43 57 0.005157669 ubox
43 66 0.066854834 ubox
44 56 0.005207688 ubox
44 65 0.066964642 ubox
44 67 0.792008255 ubox
45 57 0.028264406 ubox
45 64 0.066983713 ubox
45 66 0.804520636 ubox
46 56 0.028292892 ubox
46 63 0.066941391 ubox
46 65 0.804547196 ubox
46 67 0.375280712 ubox
47 57 0.064267755 ubox
47 64 0.804531156 ubox
47 66 0.549738011 ubox
48 56 0.064338640 ubox
48 62 0.013005415 ubox
48 63 0.801014601 ubox
48 65 0.550374686 ubox
48 67 0.007072450 ubox
49 59 0.003215543 ubox
49 60 0.044287050 ubox
49 61 0.008234930 ubox
49 64 0.531675897 ubox
49 66 0.007651465 ubox
50 58 0.003356040 ubox
50 59 0.043735987 ubox
51 62 0.965440758 ubox
52 58 0.029682247 ubox
52 59 0.017417447 ubox
52 61 0.977976820 ubox
53 57 0.029822323 ubox
53 58 0.015804043 ubox
53 59 0.009452480 ubox
53 60 0.979006311 ubox
54 58 0.023480594 ubox
54 59 0.915630495 ubox
55 61 0.008185901 ubox
56 60 0.008325501 ubox
56 64 0.009371471 ubox
56 66 0.003471953 ubox
57 63 0.009385564 ubox
57 65 0.003473701 ubox
58 62 0.008467319 ubox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
