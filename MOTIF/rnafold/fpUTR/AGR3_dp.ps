%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AGR3)
} def

/sequence { (\
AGAAACAUCCAGAAUACAUUUCCAACAAGAGCACUGGCCAAGUCAGCUUCUUCUGAGAGAGUCUCUAGAAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.003434280 ubox
1 21 0.012143767 ubox
1 35 0.003264904 ubox
1 48 0.028929999 ubox
1 51 0.003791442 ubox
1 64 0.015908231 ubox
1 66 0.047557656 ubox
2 9 0.211145996 ubox
2 19 0.003506570 ubox
2 20 0.017024487 ubox
2 21 0.025507343 ubox
2 22 0.242834105 ubox
2 34 0.003702480 ubox
2 44 0.232926070 ubox
2 47 0.032964875 ubox
2 48 0.004318172 ubox
2 49 0.004655617 ubox
2 50 0.005983169 ubox
2 63 0.018662422 ubox
2 65 0.050356371 ubox
3 8 0.193505213 ubox
3 19 0.016654544 ubox
3 20 0.027280651 ubox
3 21 0.242865360 ubox
3 43 0.231647902 ubox
3 48 0.005817652 ubox
3 49 0.006809193 ubox
3 62 0.018504025 ubox
3 64 0.049278159 ubox
4 19 0.024999322 ubox
4 20 0.237600652 ubox
4 21 0.009883377 ubox
4 48 0.007154304 ubox
5 19 0.204788294 ubox
5 20 0.010463063 ubox
5 43 0.037944462 ubox
5 48 0.003978081 ubox
5 62 0.048554946 ubox
6 42 0.041103914 ubox
6 61 0.049399412 ubox
7 15 0.072231755 ubox
7 19 0.021125689 ubox
7 43 0.009512501 ubox
8 14 0.071112381 ubox
8 18 0.024778348 ubox
8 30 0.043889922 ubox
8 42 0.009947366 ubox
8 58 0.055127310 ubox
8 60 0.007754536 ubox
8 69 0.080951338 ubox
8 72 0.011718833 ubox
9 29 0.048148920 ubox
9 37 0.258957214 ubox
9 57 0.055612433 ubox
9 59 0.007779870 ubox
9 68 0.086392488 ubox
9 71 0.011443788 ubox
10 36 0.260059764 ubox
10 55 0.058176646 ubox
11 20 0.018442439 ubox
11 21 0.045291795 ubox
11 35 0.259826725 ubox
11 48 0.029654679 ubox
11 54 0.058214050 ubox
11 64 0.009943229 ubox
11 66 0.090014068 ubox
12 19 0.015964990 ubox
12 20 0.054311745 ubox
12 21 0.070516674 ubox
12 22 0.584015759 ubox
12 34 0.257663597 ubox
12 44 0.009769895 ubox
12 47 0.031449888 ubox
12 50 0.003823774 ubox
12 53 0.058150807 ubox
12 63 0.010543105 ubox
12 65 0.092064225 ubox
13 19 0.053036965 ubox
13 20 0.075542645 ubox
13 21 0.584862473 ubox
13 43 0.009307282 ubox
13 48 0.003372548 ubox
13 49 0.004146307 ubox
13 52 0.055052527 ubox
13 62 0.009322298 ubox
13 64 0.090240969 ubox
14 19 0.061555188 ubox
14 20 0.572406869 ubox
14 48 0.003939178 ubox
14 51 0.035857479 ubox
14 62 0.012030140 ubox
15 61 0.012041631 ubox
16 43 0.020457602 ubox
16 62 0.077406617 ubox
17 36 0.008790599 ubox
17 42 0.021456239 ubox
17 61 0.079534116 ubox
18 35 0.008682858 ubox
18 43 0.012876558 ubox
18 62 0.003480340 ubox
19 25 0.020002525 ubox
19 28 0.094085530 ubox
19 29 0.038680315 ubox
19 30 0.112219729 ubox
19 31 0.030328430 ubox
19 41 0.007774989 ubox
19 42 0.013556361 ubox
19 58 0.027675815 ubox
19 59 0.015607799 ubox
19 60 0.092035374 ubox
20 24 0.019304886 ubox
20 27 0.087099919 ubox
20 28 0.048322275 ubox
20 29 0.114912120 ubox
20 30 0.035997495 ubox
20 31 0.185373687 ubox
20 40 0.007552536 ubox
20 41 0.013869636 ubox
20 57 0.027993480 ubox
20 58 0.015758268 ubox
20 59 0.093333960 ubox
20 70 0.003687013 ubox
21 27 0.046757723 ubox
21 28 0.101331990 ubox
21 29 0.034069722 ubox
21 30 0.234770298 ubox
21 40 0.012041063 ubox
21 56 0.028124157 ubox
21 57 0.014792247 ubox
21 58 0.093890190 ubox
21 69 0.003897941 ubox
21 72 0.005384376 ubox
22 29 0.241008148 ubox
22 37 0.035159204 ubox
22 55 0.027004470 ubox
22 57 0.093994601 ubox
22 68 0.003896727 ubox
22 71 0.005019181 ubox
23 36 0.035524077 ubox
23 55 0.086354876 ubox
24 35 0.033353474 ubox
24 49 0.003787989 ubox
24 54 0.083940284 ubox
25 43 0.010912906 ubox
25 48 0.003912543 ubox
25 51 0.003654959 ubox
26 36 0.010245339 ubox
26 42 0.011529671 ubox
26 55 0.015468292 ubox
27 35 0.009000508 ubox
27 49 0.070755704 ubox
27 52 0.093114532 ubox
27 54 0.014014157 ubox
28 35 0.015189840 ubox
28 48 0.119275904 ubox
28 49 0.021254206 ubox
28 51 0.112434321 ubox
28 54 0.008652879 ubox
28 66 0.005219361 ubox
29 34 0.017232073 ubox
29 44 0.015648065 ubox
29 47 0.123590755 ubox
29 48 0.025434584 ubox
29 49 0.482480281 ubox
29 50 0.118031952 ubox
29 52 0.011323123 ubox
29 53 0.009818580 ubox
29 65 0.005408831 ubox
30 43 0.014693944 ubox
30 48 0.655948320 ubox
30 49 0.111026141 ubox
30 51 0.013061826 ubox
30 52 0.009145742 ubox
30 64 0.005406335 ubox
31 38 0.036319667 ubox
31 43 0.005622493 ubox
31 47 0.675642937 ubox
31 48 0.095808079 ubox
31 50 0.013866215 ubox
31 51 0.007611125 ubox
31 63 0.005366490 ubox
32 37 0.036338217 ubox
32 42 0.006589885 ubox
32 46 0.623278416 ubox
33 43 0.307281759 ubox
33 62 0.003955425 ubox
34 42 0.328065242 ubox
34 46 0.724836329 ubox
34 61 0.003928488 ubox
35 41 0.326651455 ubox
35 45 0.879658153 ubox
35 60 0.003852060 ubox
36 44 0.903041883 ubox
36 48 0.042310753 ubox
37 43 0.900055134 ubox
37 47 0.047320752 ubox
38 42 0.894789213 ubox
38 46 0.047491997 ubox
40 49 0.014051465 ubox
41 48 0.023797098 ubox
42 47 0.024520929 ubox
42 73 0.004104738 ubox
43 56 0.003796565 ubox
43 72 0.003628707 ubox
44 55 0.003845924 ubox
45 54 0.003845102 ubox
46 53 0.003793132 ubox
47 71 0.069726208 ubox
48 70 0.070013131 ubox
48 72 0.031145016 ubox
49 60 0.003989937 ubox
49 69 0.070037273 ubox
49 71 0.004499072 ubox
49 72 0.795754524 ubox
50 59 0.004373111 ubox
50 68 0.070066136 ubox
50 71 0.987995785 ubox
51 58 0.004320256 ubox
51 67 0.067863330 ubox
51 69 0.003536197 ubox
51 70 0.988893613 ubox
52 57 0.003977803 ubox
52 67 0.005824413 ubox
52 68 0.003922141 ubox
52 69 0.989952965 ubox
52 72 0.007917332 ubox
53 68 0.990539714 ubox
53 71 0.009826920 ubox
54 67 0.967690627 ubox
54 70 0.009601385 ubox
55 63 0.017629592 ubox
55 65 0.805769702 ubox
55 66 0.363098591 ubox
56 62 0.017576656 ubox
56 64 0.816667652 ubox
56 66 0.448887363 ubox
57 63 0.816554626 ubox
57 65 0.563914772 ubox
58 62 0.710416163 ubox
58 64 0.563149845 ubox
58 66 0.015921046 ubox
59 63 0.550764665 ubox
59 65 0.018496960 ubox
60 64 0.016110620 ubox
61 73 0.036183415 ubox
62 72 0.036684730 ubox
63 71 0.036875000 ubox
64 70 0.035573361 ubox
64 72 0.008121632 ubox
65 71 0.009287418 ubox
66 70 0.008384553 ubox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
58 62 0.9500000 lbox
showpage
end
%%EOF
