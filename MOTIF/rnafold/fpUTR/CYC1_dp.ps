%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYC1)
} def

/sequence { (\
GAGGUUUUGACUCUCGUGGCGCCCCAGGGGCCGACGGGAGUGGCGGCCGCGCGGAGGAGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.016878926 ubox
1 8 0.048353571 ubox
1 13 0.013490038 ubox
1 15 0.018859392 ubox
2 6 0.016572230 ubox
2 7 0.047371057 ubox
2 8 0.029316989 ubox
2 12 0.014382607 ubox
2 14 0.018870518 ubox
3 7 0.021486811 ubox
3 11 0.015407071 ubox
3 12 0.007108161 ubox
3 13 0.018782234 ubox
3 48 0.146447431 ubox
3 62 0.441619096 ubox
4 11 0.018535849 ubox
4 12 0.009566579 ubox
4 44 0.289829705 ubox
4 47 0.146626334 ubox
4 61 0.442070739 ubox
5 10 0.017955224 ubox
5 43 0.286215097 ubox
5 46 0.145890156 ubox
5 58 0.005882149 ubox
5 59 0.018733024 ubox
5 60 0.440812885 ubox
5 64 0.012076612 ubox
5 65 0.012657226 ubox
6 42 0.271937055 ubox
6 43 0.029849051 ubox
6 45 0.129182556 ubox
6 46 0.003753345 ubox
6 55 0.008611725 ubox
6 56 0.009792805 ubox
6 57 0.011548785 ubox
6 58 0.026303039 ubox
6 59 0.434314558 ubox
6 60 0.011682834 ubox
6 63 0.012070788 ubox
6 64 0.018633043 ubox
6 65 0.017632172 ubox
7 42 0.033869463 ubox
7 43 0.051122040 ubox
7 45 0.004309871 ubox
7 46 0.003232303 ubox
7 54 0.009494836 ubox
7 55 0.013013882 ubox
7 56 0.016088534 ubox
7 57 0.027366299 ubox
7 58 0.427002983 ubox
7 59 0.015843048 ubox
7 60 0.008620793 ubox
7 63 0.017262853 ubox
7 64 0.026588879 ubox
7 65 0.008967083 ubox
8 42 0.062925329 ubox
8 45 0.008661360 ubox
8 53 0.009442246 ubox
8 54 0.013280868 ubox
8 55 0.018316620 ubox
8 56 0.025737842 ubox
8 57 0.405181231 ubox
8 58 0.018273919 ubox
8 59 0.029561454 ubox
8 63 0.026639679 ubox
8 64 0.012650789 ubox
9 41 0.051760754 ubox
9 44 0.049618171 ubox
9 52 0.006206959 ubox
9 62 0.017477784 ubox
10 41 0.913518532 ubox
11 40 0.989922138 ubox
11 54 0.020356381 ubox
11 56 0.128163764 ubox
11 57 0.004190409 ubox
11 59 0.005411334 ubox
12 39 0.990815573 ubox
12 53 0.012320418 ubox
12 54 0.008256905 ubox
12 55 0.128941192 ubox
12 56 0.003646443 ubox
12 57 0.004270703 ubox
12 58 0.005416759 ubox
13 38 0.991125304 ubox
13 53 0.015789914 ubox
13 54 0.128624804 ubox
13 56 0.007141887 ubox
13 57 0.005231478 ubox
14 37 0.990518744 ubox
14 53 0.090546647 ubox
14 54 0.010667442 ubox
14 55 0.007039917 ubox
14 56 0.004181596 ubox
15 36 0.991046129 ubox
15 51 0.092075650 ubox
15 53 0.090668572 ubox
15 54 0.005899563 ubox
16 35 0.990890226 ubox
16 50 0.092386195 ubox
16 52 0.092030148 ubox
17 33 0.577201983 ubox
17 34 0.801433316 ubox
17 49 0.092353775 ubox
17 51 0.091486289 ubox
17 63 0.019803075 ubox
18 32 0.988284477 ubox
18 48 0.092356281 ubox
18 50 0.087803655 ubox
18 62 0.021981929 ubox
19 31 0.989288781 ubox
19 47 0.091761663 ubox
19 50 0.027740683 ubox
19 52 0.005999950 ubox
19 61 0.021986280 ubox
20 30 0.988935262 ubox
20 33 0.015586491 ubox
20 45 0.035696478 ubox
20 46 0.083907225 ubox
20 49 0.037737517 ubox
20 51 0.006080892 ubox
20 60 0.021983944 ubox
21 31 0.070732386 ubox
21 32 0.011331559 ubox
21 41 0.006329405 ubox
21 44 0.050337388 ubox
21 47 0.088720389 ubox
21 48 0.026771380 ubox
21 50 0.006090681 ubox
22 28 0.861140882 ubox
22 29 0.487651510 ubox
22 30 0.073346556 ubox
22 40 0.006403601 ubox
22 43 0.049670516 ubox
22 46 0.093132519 ubox
22 49 0.006079426 ubox
22 57 0.021880121 ubox
23 27 0.855012084 ubox
23 28 0.487834436 ubox
23 29 0.075645880 ubox
23 38 0.014358042 ubox
23 42 0.047087216 ubox
23 43 0.019342294 ubox
23 45 0.093697046 ubox
23 56 0.021883540 ubox
24 28 0.075256106 ubox
24 29 0.004065892 ubox
24 30 0.009551044 ubox
24 37 0.019252964 ubox
24 38 0.015129244 ubox
24 42 0.017115774 ubox
24 43 0.099025031 ubox
24 54 0.021882314 ubox
25 29 0.009614871 ubox
25 36 0.019261573 ubox
25 37 0.015103293 ubox
25 42 0.099843167 ubox
25 53 0.021863620 ubox
26 41 0.100619149 ubox
29 48 0.022960810 ubox
30 41 0.004111949 ubox
30 44 0.053258696 ubox
30 47 0.023051018 ubox
31 37 0.031217779 ubox
31 38 0.104979573 ubox
31 40 0.003911520 ubox
31 43 0.053550617 ubox
31 46 0.023084954 ubox
32 36 0.031020298 ubox
32 37 0.105070763 ubox
32 42 0.053981054 ubox
32 45 0.036207624 ubox
33 41 0.032784097 ubox
33 44 0.035364391 ubox
34 41 0.046245702 ubox
35 40 0.055785388 ubox
35 42 0.031858086 ubox
35 45 0.019036890 ubox
36 41 0.029183833 ubox
36 44 0.019169975 ubox
40 50 0.009113578 ubox
41 49 0.009419770 ubox
41 53 0.008771428 ubox
41 63 0.320424281 ubox
42 48 0.014112913 ubox
42 50 0.003975668 ubox
42 52 0.028455353 ubox
42 62 0.750546693 ubox
43 47 0.013894907 ubox
43 50 0.040894201 ubox
43 52 0.420771746 ubox
43 61 0.751290760 ubox
44 49 0.040917511 ubox
44 51 0.421546932 ubox
44 53 0.026887838 ubox
44 60 0.751162820 ubox
45 50 0.419680415 ubox
45 52 0.026987105 ubox
45 62 0.463279078 ubox
46 52 0.012715773 ubox
46 61 0.463826340 ubox
47 51 0.013048306 ubox
47 54 0.081017670 ubox
47 57 0.746930716 ubox
47 60 0.463820252 ubox
48 53 0.081007909 ubox
48 56 0.747041470 ubox
48 59 0.463715844 ubox
49 61 0.066038125 ubox
50 60 0.066156665 ubox
51 61 0.091511475 ubox
52 60 0.091686548 ubox
53 62 0.089327678 ubox
54 61 0.089188367 ubox
56 62 0.031604126 ubox
57 61 0.031131510 ubox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
42 62 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
showpage
end
%%EOF
