%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGAGGCGGUUCCUGCAGGGUCCAGUCCCGGGAGCACCCCCAGGAGGAGGGGAGGGUGGGAGCGCCUCUCUUUGAGUCCCCGGGUUUGGUCGCUGGGAUGUGAGGAAGCCGGAGAGGCCGCGGCUGGACGCAGGUGGGUGUGGAGGGGCCGCCCGGACUGCGGGGACCCGCUCCGCGCACAGUGGCUGAGCGCCCGCCUCUCUUUCCAGGGGCUGAGGAUCCGGCGGCUCGGCUGCACU\
) } def
/len { sequence length } bind def

/coor [
[342.92779541 347.51699829]
[332.25256348 336.97946167]
[321.57733154 326.44195557]
[310.83395386 315.97393799]
[300.02282715 305.57586670]
[289.21170044 295.17779541]
[278.40060425 284.77972412]
[263.56018066 285.32562256]
[252.44805908 274.93450928]
[251.97610474 259.36480713]
[241.16499329 248.96675110]
[230.35386658 238.56869507]
[219.54275513 228.17062378]
[208.73162842 217.77256775]
[197.92051697 207.37449646]
[187.10940552 196.97642517]
[176.29827881 186.57836914]
[165.48716736 176.18029785]
[154.67605591 165.78224182]
[149.98788452 164.97601318]
[145.74974060 161.22920227]
[143.72366333 154.97111511]
[133.18614197 144.29589844]
[122.64860535 133.62066650]
[112.11106873 122.94544983]
[84.33747864 127.48522186]
[62.72144318 101.83658600]
[47.78333282 100.47537231]
[32.84522247 99.11415863]
[17.90711403 97.75294495]
[2.96900535 96.39173126]
[-11.96910381 95.03051758]
[-26.90721321 93.66931152]
[-41.85384369 92.40508270]
[-56.80836487 91.23790741]
[-71.16874695 97.87792969]
[-83.25537872 89.17375183]
[-98.20989990 88.00656891]
[-110.15699768 98.00180054]
[-125.30638123 96.60508728]
[-134.76167297 85.15375519]
[-149.71620178 83.98657990]
[-164.67071533 82.81939697]
[-173.44873047 85.26794434]
[-179.81138611 81.53876495]
[-194.74949646 80.17755127]
[-203.55854797 82.51194000]
[-209.87225342 78.70047760]
[-224.79142761 77.14546204]
[-239.71061707 75.59044647]
[-254.65724182 74.32621765]
[-269.62564087 73.35327148]
[-284.59405518 72.38031769]
[-299.56246948 71.40737152]
[-314.53088379 70.43441772]
[-329.49929810 69.46147156]
[-344.47372437 68.58569336]
[-359.45349121 67.80713654]
[-374.43328857 67.02857971]
[-389.41305542 66.25002289]
[-403.76776123 74.17935181]
[-417.67053223 65.48189545]
[-416.81933594 49.10485077]
[-402.08984375 41.89551926]
[-388.63449097 51.27024460]
[-373.65472412 52.04880142]
[-358.67492676 52.82735825]
[-343.69515991 53.60591507]
[-336.86654663 50.82018661]
[-328.52636719 54.49305725]
[-313.55795288 55.46600723]
[-298.58953857 56.43895721]
[-283.62112427 57.41190720]
[-268.65270996 58.38485718]
[-253.68429565 59.35781097]
[-250.81858826 57.33732986]
[-246.83804321 56.59309769]
[-242.34791565 57.63135529]
[-238.15559387 60.67126465]
[-223.23641968 62.22628021]
[-208.31723022 63.78129578]
[-193.38827515 65.23944092]
[-178.45016479 66.60065460]
[-163.50354004 67.86487579]
[-148.54901123 69.03205872]
[-133.59449768 70.19923401]
[-122.47699738 60.35358810]
[-107.29436493 61.32424164]
[-97.04271698 73.05205536]
[-82.08819580 74.21923065]
[-68.79746246 67.49572754]
[-55.64118195 76.28338623]
[-40.68666077 77.45056152]
[-33.78803635 74.84304810]
[-25.54599953 78.73120117]
[-10.60789108 80.09241486]
[4.33021784 81.45362091]
[19.26832771 82.81483459]
[34.20643616 84.17604828]
[49.14454651 85.53726196]
[64.08265686 86.89847565]
[69.21107483 81.42588043]
[56.75425339 73.06959534]
[42.67202759 67.90325928]
[39.20666504 53.30904007]
[49.46317291 42.36353302]
[64.25158691 44.87405014]
[70.32124329 58.59211731]
[79.46791840 70.48069000]
[84.59634399 65.00810242]
[82.26905823 50.18973923]
[79.94178009 35.37137985]
[67.87378693 24.80052567]
[68.75804138 8.78185940]
[81.91622925 -0.39646518]
[97.25450897 4.30637598]
[103.00666809 19.28276634]
[94.76013947 33.04409790]
[97.08741760 47.86245728]
[99.41470337 62.68081665]
[102.09342194 68.43467712]
[103.82924652 74.33857727]
[110.23706818 60.77613831]
[116.64488983 47.21369934]
[123.05271912 33.65126038]
[129.46054077 20.08881950]
[135.86836243 6.52637911]
[127.54067993 -8.20730305]
[129.62294006 -24.83539391]
[141.09655762 -36.82030106]
[157.29017639 -39.56934357]
[163.52139282 -53.21382523]
[169.75262451 -66.85830688]
[175.98384094 -80.50278473]
[170.22666931 -95.22116089]
[176.63964844 -109.66585541]
[191.41807556 -115.26708984]
[205.79415894 -108.70175171]
[211.23884583 -93.86493683]
[204.52188110 -79.55906677]
[189.62832642 -74.27156067]
[183.39709473 -60.62707901]
[177.16587830 -46.98259735]
[170.93464661 -33.33811951]
[178.54539490 -22.38315964]
[179.76423645 -8.99111938]
[174.16688538 3.35485983]
[163.11596680 11.39070320]
[149.43080139 12.93420410]
[143.02297974 26.49664497]
[136.61515808 40.05908585]
[130.20733643 53.62152481]
[123.79950714 67.18396759]
[117.39168549 80.74640656]
[123.98512268 90.10629272]
[125.90814209 101.39270020]
[122.78629303 112.40791321]
[133.32382202 123.08313751]
[143.86135864 133.75836182]
[154.39889526 144.43359375]
[165.07411194 154.97111511]
[175.88523865 165.36918640]
[186.69635010 175.76724243]
[197.50746155 186.16531372]
[208.31858826 196.56338501]
[219.12969971 206.96144104]
[229.94081116 217.35951233]
[240.75193787 227.75756836]
[251.56304932 238.15563965]
[262.37417603 248.55371094]
[277.95040894 248.41908264]
[288.76629639 259.11819458]
[288.79864502 273.96859741]
[299.60977173 284.36666870]
[310.42089844 294.76473999]
[321.23199463 305.16281128]
[329.56787109 308.84552002]
[332.11486816 315.76672363]
[342.79010010 326.30426025]
[353.46533203 336.84179688]
[370.12542725 333.86309814]
[385.12576294 341.33432007]
[392.63488770 356.12942505]
[389.86624146 372.31967163]
[400.67736816 382.71774292]
[411.48849487 393.11581421]
[422.29959106 403.51388550]
[433.11071777 413.91195679]
[443.92184448 424.30999756]
[454.73294067 434.70806885]
[465.54406738 445.10614014]
[476.35519409 455.50421143]
[487.16629028 465.90228271]
[498.04467773 476.22994995]
[508.98986816 486.48678589]
[519.93505859 496.74362183]
[531.80426025 500.06698608]
[535.93933105 510.25167847]
[547.88885498 519.31860352]
[559.83837891 528.38549805]
[571.78790283 537.45245361]
[583.73742676 546.51934814]
[595.68695068 555.58630371]
[611.30859375 553.19061279]
[623.99914551 562.61010742]
[626.22949219 578.25622559]
[616.67639160 590.84643555]
[601.00756836 592.91125488]
[588.51904297 583.22558594]
[586.61999512 567.53582764]
[574.67047119 558.46887207]
[562.72094727 549.40197754]
[550.77148438 540.33502197]
[538.82196045 531.26812744]
[526.87243652 522.20123291]
[529.57958984 536.95489502]
[524.24340820 550.97363281]
[512.41107178 560.19287109]
[497.51309204 561.93963623]
[483.86904907 555.70751953]
[475.43481445 543.30334473]
[474.65576172 528.32354736]
[481.75781250 515.11138916]
[494.68179321 507.49755859]
[509.67822266 507.68881226]
[498.73303223 497.43197632]
[487.78784180 487.17514038]
[480.77273560 484.89953613]
[476.76824951 476.71337891]
[465.95712280 466.31530762]
[455.14599609 455.91726685]
[444.33489990 445.51919556]
[433.52377319 435.12112427]
[422.71264648 424.72305298]
[411.90151978 414.32501221]
[401.09042358 403.92694092]
[390.27929688 393.52886963]
[379.46817017 383.13079834]
[366.61102295 386.68435669]
[353.57098389 383.39956665]
[343.77517700 374.02963257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 176]
[5 175]
[6 174]
[7 173]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[22 160]
[23 159]
[24 158]
[25 157]
[27 101]
[28 100]
[29 99]
[30 98]
[31 97]
[32 96]
[33 95]
[34 93]
[35 92]
[37 90]
[38 89]
[41 86]
[42 85]
[43 84]
[45 83]
[46 82]
[48 81]
[49 80]
[50 79]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 68]
[58 67]
[59 66]
[60 65]
[110 120]
[111 119]
[112 118]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[131 144]
[132 143]
[133 142]
[134 141]
[184 238]
[185 237]
[186 236]
[187 235]
[188 234]
[189 233]
[190 232]
[191 231]
[192 230]
[193 229]
[194 227]
[195 226]
[196 225]
[198 215]
[199 214]
[200 213]
[201 212]
[202 211]
[203 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
