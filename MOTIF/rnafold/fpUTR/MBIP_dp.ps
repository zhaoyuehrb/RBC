%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MBIP)
} def

/sequence { (\
UCGCCAAGCGACUAAAGCUGGAAGGGAGGGGGCGGGGUUGUGAGCAAAUCUUGGUGGUGGUGGUGGUGGGGCGGCCUGAGAAGAUAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.051956228 ubox
1 66 0.004384931 ubox
1 69 0.003558870 ubox
1 74 0.701209213 ubox
1 79 0.010430740 ubox
1 81 0.006390725 ubox
1 84 0.005021674 ubox
2 34 0.003678556 ubox
2 56 0.070715840 ubox
2 59 0.004307597 ubox
2 65 0.005974990 ubox
2 68 0.006948300 ubox
2 73 0.991636829 ubox
2 78 0.009349433 ubox
2 80 0.005725004 ubox
2 83 0.004123210 ubox
3 33 0.003706518 ubox
3 38 0.004994631 ubox
3 45 0.032825667 ubox
3 55 0.070996589 ubox
3 58 0.004472768 ubox
3 64 0.006016293 ubox
3 67 0.007224775 ubox
3 72 0.996804526 ubox
3 75 0.003404600 ubox
4 32 0.003700238 ubox
4 37 0.005362198 ubox
4 44 0.032817347 ubox
4 54 0.071043831 ubox
4 57 0.004483561 ubox
4 63 0.006021377 ubox
4 66 0.007252817 ubox
4 70 0.007956812 ubox
4 71 0.996798247 ubox
4 74 0.003394679 ubox
5 31 0.003681288 ubox
5 36 0.005397750 ubox
5 42 0.010858928 ubox
5 53 0.071042575 ubox
5 56 0.004480776 ubox
5 62 0.006019619 ubox
5 65 0.007240727 ubox
5 69 0.011165864 ubox
5 70 0.996678857 ubox
5 73 0.003365745 ubox
6 41 0.006315991 ubox
6 52 0.070788623 ubox
6 55 0.003954650 ubox
6 61 0.005662612 ubox
6 64 0.005168602 ubox
7 19 0.004243344 ubox
7 51 0.070101302 ubox
8 18 0.004770092 ubox
8 33 0.005720549 ubox
8 41 0.051208894 ubox
8 50 0.058498374 ubox
8 58 0.005714694 ubox
8 61 0.003619131 ubox
8 64 0.017789638 ubox
8 67 0.995857989 ubox
9 17 0.004775878 ubox
9 32 0.005723683 ubox
9 40 0.078002040 ubox
9 44 0.003255120 ubox
9 57 0.005772714 ubox
9 60 0.003771913 ubox
9 63 0.018278640 ubox
9 65 0.006801855 ubox
9 66 0.996525630 ubox
10 39 0.078231286 ubox
10 64 0.004840302 ubox
11 38 0.078315193 ubox
11 55 0.005768455 ubox
11 58 0.003801644 ubox
11 61 0.018444542 ubox
11 64 0.993903741 ubox
11 67 0.003893355 ubox
12 29 0.004778365 ubox
12 37 0.078317402 ubox
12 54 0.005782216 ubox
12 57 0.003816560 ubox
12 60 0.018624354 ubox
12 63 0.996646623 ubox
12 66 0.004061875 ubox
13 28 0.004594983 ubox
13 36 0.077052244 ubox
13 53 0.005602943 ubox
13 56 0.003784438 ubox
13 59 0.018698091 ubox
13 62 0.995661563 ubox
13 65 0.004090129 ubox
14 52 0.004996275 ubox
14 58 0.018597420 ubox
14 61 0.987061302 ubox
14 64 0.004057692 ubox
15 51 0.003299048 ubox
17 33 0.077732675 ubox
17 55 0.031321080 ubox
17 58 0.993643676 ubox
17 61 0.032172738 ubox
18 24 0.003493248 ubox
18 25 0.006937147 ubox
18 26 0.005517572 ubox
18 28 0.006504269 ubox
18 29 0.007189419 ubox
18 30 0.005779564 ubox
18 31 0.009234586 ubox
18 32 0.077681963 ubox
18 35 0.005267852 ubox
18 54 0.031433642 ubox
18 57 0.995308630 ubox
18 60 0.035263085 ubox
19 23 0.003277979 ubox
19 24 0.007167126 ubox
19 25 0.006042470 ubox
19 27 0.007113026 ubox
19 28 0.007719985 ubox
19 29 0.005997976 ubox
19 30 0.009980218 ubox
19 31 0.076787448 ubox
19 34 0.005325804 ubox
19 53 0.030654573 ubox
19 56 0.983240928 ubox
19 59 0.034915337 ubox
20 33 0.006099693 ubox
20 51 0.009460248 ubox
20 52 0.014192993 ubox
20 55 0.838069301 ubox
20 58 0.031556425 ubox
21 50 0.009985262 ubox
21 51 0.005766226 ubox
21 52 0.015071524 ubox
22 49 0.009706529 ubox
22 51 0.010632539 ubox
22 52 0.212199287 ubox
23 51 0.218239589 ubox
23 52 0.204246780 ubox
24 50 0.218979392 ubox
24 51 0.206622638 ubox
24 52 0.852486450 ubox
25 49 0.214017536 ubox
25 50 0.198033481 ubox
25 51 0.890871148 ubox
25 52 0.032672444 ubox
26 49 0.171603840 ubox
26 50 0.896548466 ubox
26 51 0.014768301 ubox
26 52 0.281091314 ubox
27 49 0.895230283 ubox
27 51 0.284549486 ubox
27 52 0.033123331 ubox
28 39 0.003556057 ubox
28 50 0.285098266 ubox
28 51 0.034446609 ubox
28 52 0.011369990 ubox
29 38 0.003651925 ubox
29 49 0.276733533 ubox
29 50 0.034998801 ubox
29 51 0.012100164 ubox
29 52 0.006334264 ubox
30 39 0.006204488 ubox
30 49 0.032189793 ubox
30 50 0.012279729 ubox
30 51 0.006622995 ubox
30 52 0.003747988 ubox
31 38 0.005973727 ubox
31 39 0.018511983 ubox
31 49 0.012119909 ubox
31 50 0.006679610 ubox
31 51 0.003796054 ubox
32 38 0.019200908 ubox
32 41 0.228051162 ubox
32 45 0.947312816 ubox
32 49 0.005609233 ubox
32 50 0.003786791 ubox
32 55 0.057927844 ubox
33 37 0.019166744 ubox
33 40 0.229017619 ubox
33 42 0.142113405 ubox
33 44 0.947238159 ubox
33 53 0.125276022 ubox
33 54 0.052623248 ubox
34 39 0.175276737 ubox
34 41 0.144984238 ubox
34 51 0.006997522 ubox
34 52 0.128951058 ubox
35 50 0.007658940 ubox
35 51 0.132448476 ubox
35 52 0.036610691 ubox
36 49 0.007220919 ubox
36 50 0.133916161 ubox
36 51 0.032397746 ubox
37 45 0.029400919 ubox
37 49 0.133753076 ubox
37 50 0.032213047 ubox
38 44 0.029147779 ubox
38 47 0.038956618 ubox
38 48 0.130886559 ubox
39 43 0.023069601 ubox
39 46 0.052012299 ubox
39 47 0.126334031 ubox
40 45 0.060576005 ubox
40 49 0.009107823 ubox
41 48 0.010324125 ubox
42 50 0.016511528 ubox
43 49 0.016483140 ubox
44 50 0.003220529 ubox
48 85 0.030793674 ubox
49 81 0.008030285 ubox
49 84 0.032111310 ubox
50 80 0.008581630 ubox
50 83 0.032372903 ubox
51 79 0.008569775 ubox
51 82 0.032197336 ubox
52 78 0.008150046 ubox
52 80 0.003814349 ubox
52 81 0.031589235 ubox
53 76 0.006980281 ubox
53 77 0.003964551 ubox
54 75 0.007007201 ubox
55 74 0.007015855 ubox
55 78 0.004149354 ubox
56 76 0.023393455 ubox
56 77 0.003270543 ubox
57 72 0.007021857 ubox
57 75 0.023496641 ubox
58 71 0.006961987 ubox
58 74 0.023454522 ubox
58 78 0.005099378 ubox
59 76 0.071611911 ubox
60 72 0.023472976 ubox
60 75 0.071810475 ubox
61 71 0.023324069 ubox
61 74 0.071691728 ubox
62 76 0.020384773 ubox
63 72 0.071793597 ubox
63 75 0.020447235 ubox
64 71 0.071275622 ubox
64 74 0.020387807 ubox
65 76 0.003345060 ubox
66 72 0.020354740 ubox
66 75 0.003366326 ubox
67 71 0.019043010 ubox
67 74 0.003336077 ubox
67 78 0.004682930 ubox
68 77 0.007189831 ubox
69 76 0.008651657 ubox
70 75 0.008665473 ubox
70 76 0.003470707 ubox
71 75 0.003417982 ubox
73 88 0.006752479 ubox
74 87 0.013975250 ubox
76 83 0.549676016 ubox
77 82 0.545952755 ubox
77 86 0.029387918 ubox
78 85 0.027397454 ubox
78 88 0.119529660 ubox
79 87 0.120118948 ubox
80 88 0.088131815 ubox
81 87 0.085363069 ubox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
showpage
end
%%EOF
