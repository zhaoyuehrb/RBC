%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DCAF4L1)
} def

/sequence { (\
ACCCGGACGGAACUUCCUGUCACGGAAAAGAACAUCCUGUCACGGAGAAGAACAUCCUGCAGAAUUUCCUGUCACGAGGAACAUUCCGCAGGAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.003179578 ubox
2 10 0.146192062 ubox
2 25 0.062603656 ubox
2 39 0.003738412 ubox
2 45 0.034660817 ubox
2 79 0.003254411 ubox
2 95 0.093595318 ubox
3 9 0.146328143 ubox
3 10 0.303194717 ubox
3 24 0.056949638 ubox
3 25 0.796604185 ubox
3 44 0.031487734 ubox
3 45 0.433862603 ubox
3 78 0.003268647 ubox
3 92 0.003182336 ubox
3 94 0.082409181 ubox
3 95 0.131483738 ubox
4 9 0.304079770 ubox
4 24 0.799983637 ubox
4 44 0.435261757 ubox
4 76 0.003300175 ubox
4 91 0.003189819 ubox
4 94 0.131633653 ubox
5 14 0.006128759 ubox
5 16 0.003308466 ubox
5 17 0.004314043 ubox
5 23 0.797899635 ubox
5 43 0.433807767 ubox
5 57 0.003702053 ubox
5 75 0.003291595 ubox
6 13 0.007555740 ubox
6 15 0.003362801 ubox
6 16 0.004522729 ubox
6 21 0.805414298 ubox
6 41 0.431156629 ubox
6 56 0.004097135 ubox
6 73 0.003304616 ubox
7 14 0.003184456 ubox
7 15 0.004327509 ubox
7 20 0.806159294 ubox
7 40 0.431528258 ubox
7 55 0.004414637 ubox
7 72 0.003307419 ubox
8 19 0.806139479 ubox
8 39 0.431256862 ubox
8 71 0.003304826 ubox
9 16 0.007710859 ubox
9 17 0.321542912 ubox
9 18 0.739587023 ubox
9 23 0.017538042 ubox
9 36 0.004925412 ubox
9 37 0.369024551 ubox
9 38 0.218695114 ubox
10 15 0.006712367 ubox
10 16 0.326039510 ubox
10 17 0.736173376 ubox
10 21 0.012421158 ubox
10 35 0.005040254 ubox
10 36 0.374347417 ubox
10 37 0.208714052 ubox
10 68 0.003189488 ubox
11 15 0.287461577 ubox
11 20 0.010117485 ubox
11 35 0.372906963 ubox
11 67 0.003226607 ubox
12 20 0.023225646 ubox
13 19 0.024745123 ubox
13 30 0.207031133 ubox
13 47 0.040386022 ubox
13 50 0.394368639 ubox
13 94 0.003246572 ubox
13 95 0.010090883 ubox
14 26 0.007119288 ubox
14 27 0.249447734 ubox
14 28 0.032954410 ubox
14 29 0.179211182 ubox
14 30 0.020174086 ubox
14 31 0.026847456 ubox
14 32 0.253154449 ubox
14 46 0.038706943 ubox
14 47 0.048805324 ubox
14 48 0.006768823 ubox
14 49 0.396547698 ubox
14 94 0.009967090 ubox
14 97 0.003725326 ubox
15 25 0.005604537 ubox
15 26 0.319259389 ubox
15 27 0.030364665 ubox
15 28 0.077803552 ubox
15 29 0.009020256 ubox
15 30 0.015742212 ubox
15 31 0.257119070 ubox
15 45 0.036620007 ubox
15 46 0.060174230 ubox
15 47 0.006401574 ubox
15 48 0.397001690 ubox
15 51 0.003604447 ubox
15 93 0.009598653 ubox
15 96 0.005271251 ubox
16 24 0.005944806 ubox
16 25 0.332480138 ubox
16 30 0.250870738 ubox
16 44 0.036461110 ubox
16 45 0.062506828 ubox
16 47 0.397099192 ubox
16 50 0.003629172 ubox
16 92 0.009593411 ubox
16 95 0.005406093 ubox
17 24 0.332501942 ubox
17 25 0.129589718 ubox
17 30 0.069579278 ubox
17 44 0.062552709 ubox
17 45 0.397243262 ubox
17 91 0.009581680 ubox
17 94 0.005168580 ubox
18 24 0.129475557 ubox
18 29 0.086606973 ubox
18 34 0.042600425 ubox
18 42 0.070221521 ubox
18 44 0.397017060 ubox
18 90 0.009510181 ubox
18 93 0.003661823 ubox
19 23 0.128095941 ubox
19 33 0.043063262 ubox
19 41 0.071075200 ubox
19 43 0.397635663 ubox
19 89 0.009454238 ubox
20 26 0.198471491 ubox
20 31 0.032719647 ubox
20 32 0.031615430 ubox
20 42 0.391334005 ubox
20 46 0.003331678 ubox
20 88 0.005778207 ubox
21 25 0.197979109 ubox
21 30 0.043873170 ubox
21 39 0.106729513 ubox
21 45 0.003468354 ubox
22 38 0.106784394 ubox
22 40 0.383009412 ubox
23 39 0.388303899 ubox
23 44 0.016522579 ubox
23 88 0.007453973 ubox
24 36 0.003404697 ubox
24 37 0.359004327 ubox
24 38 0.204706000 ubox
24 43 0.016711978 ubox
24 57 0.003343381 ubox
24 87 0.009207840 ubox
25 36 0.363535146 ubox
25 37 0.196801726 ubox
25 41 0.018367185 ubox
25 56 0.003545717 ubox
25 86 0.009208963 ubox
26 35 0.362717037 ubox
26 40 0.018698753 ubox
26 55 0.013694274 ubox
26 85 0.009060364 ubox
27 84 0.007834109 ubox
29 38 0.061423853 ubox
30 36 0.106593362 ubox
30 37 0.063765280 ubox
30 41 0.078496740 ubox
31 35 0.093120588 ubox
31 40 0.063315900 ubox
32 40 0.068124887 ubox
33 39 0.084427584 ubox
34 38 0.068454135 ubox
34 40 0.003918711 ubox
34 55 0.003874719 ubox
34 65 0.007923266 ubox
35 39 0.003931432 ubox
35 45 0.006805043 ubox
35 46 0.635783697 ubox
35 48 0.168733337 ubox
35 51 0.043385468 ubox
35 54 0.004650817 ubox
35 63 0.005239941 ubox
35 64 0.008450324 ubox
35 93 0.017401015 ubox
35 95 0.006171342 ubox
35 96 0.268372908 ubox
36 44 0.010447138 ubox
36 45 0.679558446 ubox
36 47 0.180052232 ubox
36 50 0.045199882 ubox
36 62 0.003979394 ubox
36 92 0.018583168 ubox
36 94 0.009283283 ubox
36 95 0.286871286 ubox
37 44 0.678970726 ubox
37 45 0.204476619 ubox
37 47 0.064481274 ubox
37 50 0.074284531 ubox
37 62 0.031675118 ubox
37 91 0.018579608 ubox
37 94 0.286316081 ubox
37 95 0.012866345 ubox
38 44 0.204628788 ubox
38 46 0.065286790 ubox
38 49 0.074795322 ubox
38 54 0.177424937 ubox
38 61 0.032091595 ubox
38 90 0.018169872 ubox
38 93 0.194740851 ubox
38 94 0.012077323 ubox
39 43 0.207665991 ubox
39 53 0.224245722 ubox
39 55 0.005331945 ubox
39 60 0.032144244 ubox
39 89 0.017576401 ubox
40 46 0.056040287 ubox
40 48 0.124378267 ubox
40 51 0.196343846 ubox
40 52 0.164527037 ubox
40 54 0.004772127 ubox
40 59 0.018244393 ubox
40 88 0.014943068 ubox
40 92 0.014258298 ubox
40 93 0.003461500 ubox
40 95 0.004280566 ubox
40 96 0.004726445 ubox
41 45 0.058108929 ubox
41 47 0.132897546 ubox
41 50 0.251919338 ubox
41 59 0.027398973 ubox
41 91 0.015681355 ubox
41 92 0.004227618 ubox
41 94 0.005594587 ubox
41 95 0.005014362 ubox
42 58 0.027766376 ubox
43 59 0.004935998 ubox
43 88 0.008770221 ubox
44 57 0.042736431 ubox
44 58 0.004225897 ubox
44 87 0.010434059 ubox
45 56 0.043935975 ubox
45 57 0.004235269 ubox
45 86 0.010421720 ubox
46 55 0.045545563 ubox
46 85 0.010274025 ubox
47 56 0.008917992 ubox
47 84 0.008765966 ubox
48 55 0.011651800 ubox
50 56 0.004991022 ubox
51 55 0.006581582 ubox
55 77 0.006104124 ubox
55 80 0.007834190 ubox
55 93 0.916881291 ubox
55 95 0.006174283 ubox
55 96 0.013769963 ubox
56 76 0.006121735 ubox
56 79 0.008016840 ubox
56 92 0.998439495 ubox
56 94 0.003333133 ubox
56 95 0.013109457 ubox
57 78 0.008017271 ubox
57 91 0.998910967 ubox
57 94 0.012180350 ubox
58 74 0.006281861 ubox
58 77 0.007786155 ubox
58 90 0.998973051 ubox
58 93 0.008565750 ubox
59 72 0.008671834 ubox
59 73 0.006450989 ubox
59 89 0.999297760 ubox
60 71 0.010953408 ubox
60 88 0.998421048 ubox
61 70 0.010954378 ubox
62 69 0.010898644 ubox
62 85 0.013521303 ubox
62 86 0.998006891 ubox
63 84 0.017753134 ubox
63 85 0.998450241 ubox
64 84 0.994494961 ubox
65 81 0.013866834 ubox
65 83 0.971596903 ubox
65 95 0.016194392 ubox
65 96 0.003205778 ubox
66 80 0.015002665 ubox
66 81 0.965880235 ubox
66 94 0.025727709 ubox
67 79 0.003405766 ubox
67 80 0.997784784 ubox
67 93 0.028708084 ubox
68 79 0.999478323 ubox
68 92 0.029065635 ubox
69 78 0.999474059 ubox
69 91 0.029069676 ubox
70 76 0.043985285 ubox
70 77 0.992330706 ubox
70 90 0.029063339 ubox
71 75 0.085249668 ubox
71 89 0.029067230 ubox
72 88 0.028795411 ubox
76 86 0.013167531 ubox
76 87 0.003518494 ubox
77 85 0.013139734 ubox
78 84 0.012517238 ubox
78 86 0.003392212 ubox
78 87 0.025911923 ubox
79 85 0.003272021 ubox
79 86 0.025921066 ubox
80 85 0.024243579 ubox
84 97 0.007285955 ubox
85 96 0.009644637 ubox
86 95 0.009889525 ubox
87 94 0.009888713 ubox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
55 93 0.9500000 lbox
56 92 0.9500000 lbox
57 91 0.9500000 lbox
58 90 0.9500000 lbox
59 89 0.9500000 lbox
60 88 0.9500000 lbox
62 86 0.9500000 lbox
63 85 0.9500000 lbox
64 84 0.9500000 lbox
65 83 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
showpage
end
%%EOF
