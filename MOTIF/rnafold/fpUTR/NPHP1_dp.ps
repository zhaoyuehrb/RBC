%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPHP1)
} def

/sequence { (\
CUGGGAGGCGGGCGCACAUCGAUGGCGUCACCUUCUGGCGCCGCCGGUUGGUUUCCCUGGCAACUGGAGCAAUCAGAGCACCGCAGCCAGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.037318692 ubox
1 8 0.042880541 ubox
1 11 0.242478404 ubox
1 12 0.014652972 ubox
1 38 0.712871896 ubox
1 47 0.225321404 ubox
1 51 0.336194783 ubox
1 90 0.020414903 ubox
1 91 0.007992148 ubox
1 92 0.003809131 ubox
1 94 0.012730200 ubox
2 6 0.033906849 ubox
2 7 0.042614748 ubox
2 10 0.251540193 ubox
2 11 0.014523600 ubox
2 14 0.004847719 ubox
2 16 0.004944257 ubox
2 21 0.012108232 ubox
2 37 0.724058739 ubox
2 40 0.008486557 ubox
2 43 0.003568752 ubox
2 46 0.227736073 ubox
2 50 0.337586249 ubox
2 89 0.020471246 ubox
2 90 0.007388449 ubox
2 91 0.003720123 ubox
2 93 0.010190333 ubox
3 9 0.256149768 ubox
3 13 0.008349890 ubox
3 15 0.005600640 ubox
3 17 0.003264060 ubox
3 20 0.015129737 ubox
3 32 0.004583914 ubox
3 35 0.010083025 ubox
3 36 0.766856857 ubox
3 39 0.013323908 ubox
3 42 0.009909474 ubox
3 45 0.226003838 ubox
3 49 0.311714640 ubox
3 53 0.011531338 ubox
3 57 0.012251631 ubox
3 88 0.019912329 ubox
4 19 0.014995138 ubox
4 31 0.004666185 ubox
4 34 0.008868416 ubox
4 35 0.778811425 ubox
4 36 0.082490239 ubox
4 41 0.009573671 ubox
4 44 0.223610556 ubox
4 45 0.089619008 ubox
4 48 0.286758559 ubox
4 49 0.036574939 ubox
4 52 0.015294907 ubox
4 53 0.006629995 ubox
4 54 0.003273993 ubox
4 56 0.014736928 ubox
4 87 0.019292622 ubox
4 88 0.010672305 ubox
5 20 0.007539816 ubox
5 29 0.048038805 ubox
5 33 0.004380280 ubox
5 34 0.783513262 ubox
5 35 0.092630462 ubox
5 44 0.094234605 ubox
5 48 0.038903289 ubox
5 49 0.021777090 ubox
5 52 0.007062412 ubox
5 53 0.007093948 ubox
5 54 0.005019061 ubox
5 55 0.016845669 ubox
5 87 0.011752788 ubox
6 19 0.007366374 ubox
6 28 0.048031762 ubox
6 33 0.784604234 ubox
6 34 0.093778368 ubox
6 48 0.021001158 ubox
6 49 0.012341615 ubox
6 52 0.007133678 ubox
6 53 0.006921528 ubox
6 54 0.019002874 ubox
7 29 0.014253074 ubox
7 32 0.784938839 ubox
7 33 0.093759089 ubox
7 42 0.242962842 ubox
7 45 0.418531378 ubox
7 48 0.010773538 ubox
7 49 0.033266542 ubox
7 52 0.006814321 ubox
7 53 0.025755009 ubox
8 15 0.053875910 ubox
8 26 0.048228881 ubox
8 28 0.014078456 ubox
8 31 0.784596448 ubox
8 32 0.094356137 ubox
8 41 0.243204650 ubox
8 44 0.419043309 ubox
8 48 0.041108764 ubox
8 52 0.029797701 ubox
8 84 0.022582407 ubox
9 14 0.053924681 ubox
9 21 0.007073888 ubox
9 25 0.048182066 ubox
9 27 0.014036775 ubox
9 40 0.243195888 ubox
9 43 0.418652216 ubox
9 46 0.011080758 ubox
9 47 0.041734071 ubox
9 50 0.006957260 ubox
9 51 0.030114597 ubox
9 83 0.022602305 ubox
10 20 0.007737937 ubox
10 26 0.013150038 ubox
10 29 0.170130618 ubox
10 39 0.240391254 ubox
10 42 0.342191055 ubox
10 45 0.010725680 ubox
10 49 0.006870530 ubox
10 53 0.008087070 ubox
10 54 0.025918434 ubox
10 82 0.022516605 ubox
11 19 0.007372091 ubox
11 20 0.003423999 ubox
11 28 0.120520728 ubox
11 29 0.843763846 ubox
11 31 0.003184779 ubox
11 32 0.003542564 ubox
11 41 0.242743208 ubox
11 42 0.242093676 ubox
11 44 0.009326448 ubox
11 45 0.041966290 ubox
11 48 0.005281247 ubox
11 49 0.028736991 ubox
11 52 0.010204911 ubox
11 53 0.067884320 ubox
11 81 0.022397630 ubox
12 26 0.018596996 ubox
12 28 0.856696759 ubox
12 31 0.003349098 ubox
12 39 0.015935782 ubox
12 41 0.341723734 ubox
12 44 0.042077922 ubox
12 48 0.026965897 ubox
12 52 0.167540670 ubox
12 53 0.015710668 ubox
12 54 0.008145010 ubox
12 79 0.017964078 ubox
13 21 0.047752019 ubox
13 24 0.005433452 ubox
13 25 0.018713740 ubox
13 27 0.865681655 ubox
13 38 0.015815120 ubox
13 40 0.418168403 ubox
13 43 0.041819944 ubox
13 46 0.005040908 ubox
13 47 0.026457010 ubox
13 50 0.018750959 ubox
13 51 0.172693072 ubox
13 78 0.017951070 ubox
14 20 0.046724660 ubox
14 23 0.005313141 ubox
14 26 0.865752502 ubox
14 39 0.418605782 ubox
14 42 0.019013087 ubox
14 44 0.004645370 ubox
14 45 0.004480352 ubox
14 48 0.003200832 ubox
14 49 0.018351961 ubox
14 52 0.141990417 ubox
14 70 0.004684147 ubox
14 79 0.012610876 ubox
15 24 0.064351406 ubox
15 25 0.862893755 ubox
15 37 0.019946850 ubox
15 38 0.418081571 ubox
15 43 0.005241384 ubox
15 47 0.003417148 ubox
15 50 0.182580822 ubox
15 51 0.147672533 ubox
15 69 0.004681843 ubox
15 78 0.012613997 ubox
16 23 0.079122420 ubox
16 28 0.003287381 ubox
16 36 0.023691104 ubox
16 48 0.021168470 ubox
16 49 0.180498883 ubox
16 52 0.026893350 ubox
17 24 0.814816730 ubox
17 27 0.003347415 ubox
17 37 0.398491669 ubox
17 47 0.021251803 ubox
17 50 0.120850800 ubox
17 51 0.027920560 ubox
18 23 0.679162162 ubox
18 36 0.370579474 ubox
18 48 0.238943477 ubox
18 49 0.087854555 ubox
18 52 0.009093368 ubox
19 25 0.003575223 ubox
19 38 0.003825140 ubox
19 47 0.257460744 ubox
19 51 0.009537912 ubox
19 77 0.007991687 ubox
20 24 0.011401983 ubox
20 27 0.009383592 ubox
20 37 0.026173463 ubox
20 46 0.262503274 ubox
20 50 0.009919998 ubox
20 76 0.008036447 ubox
21 26 0.009277003 ubox
21 29 0.014724088 ubox
21 34 0.055503545 ubox
21 35 0.402709239 ubox
21 36 0.007632612 ubox
21 45 0.262334895 ubox
21 49 0.009900882 ubox
21 74 0.008506250 ubox
22 28 0.014634022 ubox
22 33 0.056746680 ubox
22 34 0.394001747 ubox
22 48 0.009845764 ubox
22 73 0.008433552 ubox
23 27 0.013548492 ubox
23 30 0.035122615 ubox
23 43 0.254090374 ubox
23 46 0.003228453 ubox
23 47 0.007924212 ubox
23 72 0.007883784 ubox
24 29 0.036252002 ubox
24 32 0.413903962 ubox
24 33 0.023753745 ubox
24 35 0.005438414 ubox
24 42 0.267617383 ubox
24 45 0.004386666 ubox
25 31 0.413646543 ubox
25 32 0.024904083 ubox
25 34 0.005093202 ubox
25 41 0.268336565 ubox
25 44 0.004392819 ubox
26 40 0.268343950 ubox
26 43 0.004387661 ubox
27 39 0.268375601 ubox
27 42 0.004284934 ubox
28 38 0.268113443 ubox
29 37 0.268093601 ubox
30 36 0.248105087 ubox
30 52 0.243588166 ubox
31 38 0.237383151 ubox
31 51 0.260428536 ubox
32 37 0.238365041 ubox
32 38 0.010262700 ubox
32 50 0.260576131 ubox
32 51 0.003522252 ubox
33 37 0.009380805 ubox
33 50 0.003925530 ubox
35 46 0.004109311 ubox
35 47 0.277756223 ubox
35 51 0.005538900 ubox
36 46 0.293191418 ubox
36 50 0.007681758 ubox
37 42 0.012916693 ubox
37 45 0.366727805 ubox
37 49 0.019435283 ubox
37 53 0.021743104 ubox
37 54 0.003195307 ubox
38 44 0.366963927 ubox
38 48 0.024066763 ubox
38 52 0.035199262 ubox
38 53 0.009992382 ubox
38 54 0.009039192 ubox
39 43 0.364328413 ubox
39 46 0.043182496 ubox
39 47 0.027329326 ubox
39 50 0.089329393 ubox
39 51 0.043324242 ubox
40 45 0.041714723 ubox
40 48 0.168178882 ubox
40 49 0.064088978 ubox
40 52 0.531746772 ubox
41 47 0.185563478 ubox
41 51 0.554601072 ubox
42 46 0.184269999 ubox
42 50 0.554687500 ubox
43 49 0.449550655 ubox
43 52 0.432503524 ubox
43 61 0.012005364 ubox
44 51 0.451161174 ubox
44 60 0.012030259 ubox
44 67 0.017553664 ubox
45 50 0.450686074 ubox
45 59 0.012028921 ubox
45 66 0.017755179 ubox
46 53 0.007428216 ubox
46 57 0.003471211 ubox
46 58 0.011420859 ubox
46 65 0.017751562 ubox
47 52 0.007042220 ubox
47 53 0.007905357 ubox
47 54 0.003191514 ubox
47 56 0.003511351 ubox
47 57 0.011197560 ubox
47 64 0.017771793 ubox
48 63 0.017761496 ubox
49 62 0.017610774 ubox
49 75 0.004237781 ubox
50 56 0.009462860 ubox
50 61 0.016642566 ubox
50 74 0.004506731 ubox
51 55 0.009365822 ubox
51 61 0.006292777 ubox
51 73 0.004499955 ubox
52 60 0.008414250 ubox
52 72 0.004441364 ubox
52 93 0.004083351 ubox
52 94 0.026689916 ubox
53 59 0.008361056 ubox
53 71 0.003696824 ubox
53 93 0.039069434 ubox
53 94 0.626369740 ubox
54 68 0.003922881 ubox
54 92 0.006660193 ubox
54 93 0.969234714 ubox
55 67 0.003970976 ubox
55 91 0.005556120 ubox
55 92 0.999421310 ubox
56 66 0.003844610 ubox
56 67 0.003758230 ubox
56 90 0.003943250 ubox
56 91 0.999610050 ubox
57 66 0.003894314 ubox
57 90 0.999648628 ubox
58 89 0.999488104 ubox
59 88 0.999731952 ubox
60 87 0.999733412 ubox
61 86 0.997981120 ubox
64 76 0.050851633 ubox
64 78 0.004636744 ubox
64 86 0.017657123 ubox
65 75 0.051023748 ubox
65 77 0.004723121 ubox
65 80 0.007416109 ubox
65 83 0.883402399 ubox
65 85 0.036447722 ubox
66 74 0.049702605 ubox
66 79 0.007618402 ubox
66 82 0.996728254 ubox
66 84 0.033099233 ubox
67 73 0.035564931 ubox
67 74 0.017398386 ubox
67 81 0.995107963 ubox
68 73 0.020649763 ubox
69 79 0.995836382 ubox
69 84 0.004652899 ubox
70 78 0.996516419 ubox
70 83 0.004681404 ubox
78 84 0.047199445 ubox
79 83 0.046907414 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
54 93 0.9500000 lbox
55 92 0.9500000 lbox
56 91 0.9500000 lbox
57 90 0.9500000 lbox
58 89 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
65 83 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
showpage
end
%%EOF
