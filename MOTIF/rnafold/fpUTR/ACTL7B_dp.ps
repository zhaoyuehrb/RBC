%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACTL7B)
} def

/sequence { (\
GGGGAUCUCAUUUCUCCCCAGGGGGCUCUAGGCUGUGGAUGUGAGAAGGGGAGCAAGGGAGGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007820423 ubox
1 8 0.005232583 ubox
1 9 0.026286936 ubox
1 16 0.006642724 ubox
1 17 0.008903097 ubox
1 19 0.021514737 ubox
2 6 0.008111900 ubox
2 7 0.008011142 ubox
2 8 0.026158261 ubox
2 9 0.005921610 ubox
2 14 0.003714425 ubox
2 15 0.007330972 ubox
2 16 0.009548361 ubox
2 18 0.021531798 ubox
3 7 0.025676538 ubox
3 8 0.004683673 ubox
3 9 0.003757889 ubox
3 13 0.004211595 ubox
3 14 0.007951963 ubox
3 15 0.009611935 ubox
3 17 0.021532067 ubox
4 12 0.004543341 ubox
4 13 0.008164751 ubox
4 14 0.009820995 ubox
4 16 0.021524036 ubox
5 11 0.004552123 ubox
5 12 0.008142601 ubox
5 13 0.009738054 ubox
5 15 0.020473851 ubox
6 10 0.004098513 ubox
6 46 0.003935431 ubox
6 52 0.012325898 ubox
6 58 0.004977309 ubox
6 59 0.008900663 ubox
6 60 0.340851353 ubox
6 62 0.681923706 ubox
7 45 0.004206944 ubox
7 51 0.013174607 ubox
7 57 0.006757288 ubox
7 58 0.013761883 ubox
7 59 0.364350458 ubox
7 61 0.927519796 ubox
7 62 0.017109575 ubox
8 44 0.004208223 ubox
8 50 0.013140588 ubox
8 56 0.006322877 ubox
8 57 0.011831721 ubox
8 58 0.362788471 ubox
8 59 0.031241196 ubox
8 60 0.928611935 ubox
8 61 0.010987689 ubox
8 62 0.005106740 ubox
9 43 0.004208991 ubox
9 49 0.013045459 ubox
9 57 0.358878332 ubox
9 58 0.061259884 ubox
9 59 0.925960990 ubox
9 61 0.006772490 ubox
10 42 0.004202621 ubox
11 41 0.004075511 ubox
11 48 0.011752034 ubox
11 56 0.420878806 ubox
11 57 0.654833309 ubox
11 58 0.090721512 ubox
11 59 0.004032154 ubox
11 60 0.004080485 ubox
12 47 0.013225639 ubox
12 53 0.003925206 ubox
12 55 0.402174775 ubox
12 56 0.830024628 ubox
12 57 0.099054662 ubox
12 58 0.009643645 ubox
12 59 0.004272462 ubox
12 64 0.004278425 ubox
13 46 0.013344418 ubox
13 52 0.004449840 ubox
13 55 0.832312022 ubox
13 56 0.078372423 ubox
13 57 0.011395618 ubox
13 58 0.005511914 ubox
13 62 0.018842710 ubox
14 45 0.013370658 ubox
14 51 0.004471993 ubox
14 53 0.998170490 ubox
14 57 0.003508963 ubox
14 61 0.024569586 ubox
15 39 0.003308899 ubox
15 44 0.013361814 ubox
15 50 0.004268418 ubox
15 52 0.999079191 ubox
15 60 0.024624120 ubox
16 38 0.003377769 ubox
16 43 0.013320908 ubox
16 49 0.004273240 ubox
16 51 0.999260510 ubox
16 59 0.024553522 ubox
17 37 0.003375343 ubox
17 38 0.004272620 ubox
17 48 0.004266342 ubox
17 49 0.003238535 ubox
17 50 0.999255619 ubox
17 51 0.003817336 ubox
17 58 0.024461858 ubox
17 59 0.007708368 ubox
18 37 0.004230751 ubox
18 38 0.013457947 ubox
18 48 0.003725542 ubox
18 49 0.999234055 ubox
18 50 0.005178591 ubox
18 57 0.024311371 ubox
18 58 0.008469272 ubox
18 59 0.007591528 ubox
19 35 0.005354802 ubox
19 37 0.014083500 ubox
19 41 0.006360758 ubox
19 43 0.003401032 ubox
19 48 0.997503442 ubox
19 49 0.006226523 ubox
19 57 0.008722818 ubox
19 58 0.007611619 ubox
20 27 0.012501871 ubox
20 29 0.007314148 ubox
20 34 0.005810154 ubox
20 36 0.015482686 ubox
20 40 0.011739266 ubox
20 42 0.006737742 ubox
21 26 0.017712835 ubox
21 28 0.007581278 ubox
21 29 0.004568567 ubox
21 33 0.005725552 ubox
22 26 0.003714141 ubox
22 27 0.005953103 ubox
22 28 0.004763479 ubox
22 29 0.004728378 ubox
22 34 0.012993361 ubox
23 28 0.004836805 ubox
23 33 0.012422012 ubox
23 34 0.007111362 ubox
24 33 0.006630677 ubox
24 34 0.059622478 ubox
25 33 0.060470519 ubox
25 36 0.007779757 ubox
25 42 0.985782797 ubox
25 54 0.032839794 ubox
25 63 0.008410970 ubox
26 32 0.060578817 ubox
26 35 0.007821130 ubox
26 38 0.003747672 ubox
26 41 0.989226391 ubox
26 45 0.064526992 ubox
26 53 0.032862483 ubox
26 59 0.003848049 ubox
26 61 0.008048477 ubox
26 62 0.006990006 ubox
27 31 0.054576015 ubox
27 38 0.027968239 ubox
27 39 0.979808661 ubox
27 44 0.064495138 ubox
27 46 0.018815965 ubox
27 52 0.032834673 ubox
27 58 0.003890952 ubox
27 60 0.009299509 ubox
27 61 0.004338672 ubox
28 37 0.034933004 ubox
28 38 0.993586628 ubox
28 43 0.064408384 ubox
28 45 0.020526230 ubox
28 51 0.032741584 ubox
28 57 0.004022222 ubox
28 58 0.004750581 ubox
28 59 0.009456098 ubox
29 35 0.006520821 ubox
29 37 0.992327943 ubox
29 41 0.019795605 ubox
29 44 0.020188735 ubox
29 49 0.003696088 ubox
29 50 0.032227948 ubox
29 56 0.003979410 ubox
29 57 0.004972116 ubox
29 58 0.009055273 ubox
30 34 0.009175567 ubox
30 36 0.976737533 ubox
30 40 0.020357988 ubox
30 42 0.007195373 ubox
32 42 0.043887122 ubox
32 54 0.011346873 ubox
33 41 0.044256818 ubox
33 45 0.030558599 ubox
33 48 0.008969769 ubox
33 53 0.011355538 ubox
34 44 0.030419608 ubox
34 47 0.009018140 ubox
34 52 0.011283495 ubox
35 42 0.003735275 ubox
36 41 0.003552234 ubox
36 43 0.008149642 ubox
37 42 0.009573721 ubox
53 63 0.012731863 ubox
54 62 0.012779238 ubox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
