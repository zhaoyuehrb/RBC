%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGGGGCUCCCACAUUUCAGCAGGUGCCGGAGCUGGAGCUCCCACCGCCGCCGCCCGUGCCUCCGGCUGCCGGCGCCCCUGCCUUUGGCUCUUCCUCCCCACUCGCCCGCUCCCCCUGGCGGAGCCGGCGCGCCCGGGGUGCCGCUCCCUGCCUGGCGCGCUCCGCACCUGGAGGUGCCUUGCCCCUCUCCUGCCCACCUCGGAAUUUCCCUGUGGCUCCUUUGAUCCUUCGAGUCUCCAGCUCCUCUCCCUU\
CCACCUGUUUCCCCCAAGAAAGGCAGGAUCCUGGUCCCUGCUACGUUUCUGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[267.94940186 580.26501465]
[254.62571716 573.37445068]
[257.06170654 558.57366943]
[254.80474854 543.74444580]
[247.39013672 544.87292480]
[244.68630981 559.62719727]
[241.98248291 574.38153076]
[245.07469177 591.05108643]
[229.91259766 598.63702393]
[218.42579651 586.16748047]
[227.22817993 571.67767334]
[229.93200684 556.92340088]
[232.63583374 542.16906738]
[226.06030273 534.20800781]
[221.84419250 525.15490723]
[220.10749817 515.66442871]
[220.79769897 506.38037109]
[223.70314026 497.89230347]
[228.47660828 490.69815063]
[234.66728210 485.17514038]
[241.75839233 481.56063843]
[237.73042297 467.11157227]
[233.70243835 452.66250610]
[229.67446899 438.21343994]
[225.64648438 423.76437378]
[221.61849976 409.31530762]
[217.59053040 394.86627197]
[213.56254578 380.41720581]
[192.91453552 371.37194824]
[185.83444214 349.68124390]
[197.44596863 329.72140503]
[192.41040039 315.59188843]
[187.37483215 301.46237183]
[182.33926392 287.33288574]
[177.30369568 273.20336914]
[172.26812744 259.07385254]
[167.23255920 244.94435120]
[162.19699097 230.81483459]
[157.16142273 216.68531799]
[152.12585449 202.55581665]
[147.01921082 188.45182800]
[141.84162903 174.37374878]
[136.66404724 160.29565430]
[117.06946564 162.46827698]
[99.24219513 158.94412231]
[84.67990875 150.88328552]
[74.37772369 139.79499817]
[68.76142883 127.35182190]
[67.68350220 115.19673920]
[53.60540771 120.37432098]
[43.32410431 132.39952087]
[28.70835876 129.53085327]
[14.63026810 134.70843506]
[0.55217755 139.88601685]
[-13.52591324 145.06359863]
[-16.06307411 160.21148682]
[-25.84663773 172.05114746]
[-40.24487305 177.39776611]
[-55.38473129 174.81314087]
[-67.19366455 164.99250793]
[-72.49512482 150.57757568]
[-69.86305237 135.44590759]
[-60.00545883 123.66780853]
[-45.57398605 118.41156006]
[-30.45063019 121.09104919]
[-18.70349693 130.98551941]
[-4.62540531 125.80792999]
[9.45268536 120.63034821]
[23.53077507 115.45276642]
[32.80512238 103.79790497]
[48.42782593 106.29622650]
[62.50591660 101.11864471]
[64.61345673 86.26744080]
[52.53168869 77.37751007]
[40.44992065 68.48757172]
[28.36815262 59.59764099]
[16.28638649 50.70771027]
[4.20461941 41.81777573]
[-7.87714767 32.92784119]
[-19.95891380 24.03791046]
[-32.04067993 15.14797688]
[-55.60606003 25.15240860]
[-82.07711792 8.88816833]
[-96.83142090 6.18434286]
[-111.58571625 3.48051739]
[-128.25529480 6.57273388]
[-135.84124756 -8.58937073]
[-123.37169647 -20.07616425]
[-108.88188934 -11.27378082]
[-94.12759399 -8.56995583]
[-79.37329865 -5.86612988]
[-75.75485229 -12.43551731]
[-88.89362335 -19.67240906]
[-102.03240204 -26.90929985]
[-115.17117310 -34.14619064]
[-128.30995178 -41.38308334]
[-141.44873047 -48.61997223]
[-154.58737183 -55.85708237]
[-147.35005188 -68.99562073]
[-134.21183777 -61.75874710]
[-121.07305908 -54.52185822]
[-107.93428040 -47.28496552]
[-94.79550934 -40.04807663]
[-81.65673065 -32.81118393]
[-68.51795959 -25.57429314]
[-64.89951324 -32.14368057]
[-75.07042694 -43.16876602]
[-85.24134064 -54.19384766]
[-95.41225433 -65.21893311]
[-110.45657349 -70.11577606]
[-113.39948273 -84.71675110]
[-123.57039642 -95.74183655]
[-133.74131775 -106.76692200]
[-143.91223145 -117.79200745]
[-154.08314514 -128.81709290]
[-169.69392395 -127.90187836]
[-182.20983887 -137.27662659]
[-185.72125244 -152.51486206]
[-178.57020569 -166.42156982]
[-164.13317871 -172.43040466]
[-149.22689819 -167.70420837]
[-140.88966370 -154.47451782]
[-143.05805969 -138.98800659]
[-132.88714600 -127.96292114]
[-122.71623230 -116.93783569]
[-112.54531097 -105.91275024]
[-102.37439728 -94.88767242]
[-88.05757141 -90.77941132]
[-84.38717651 -75.38984680]
[-74.21625519 -64.36476135]
[-64.04534149 -53.33967972]
[-53.87442780 -42.31459427]
[-41.12775040 -40.36812210]
[-30.49725151 -34.43554688]
[-23.09110260 -25.69733429]
[-19.48102379 -15.58560944]
[-19.67155457 -5.56645632]
[-23.15074921 3.06621003]
[-11.06898212 11.95614243]
[1.01278520 20.84607506]
[13.09455204 29.73600769]
[25.17631912 38.62594223]
[37.25808716 47.51587296]
[49.33985138 56.40580750]
[61.42161942 65.29573822]
[73.50338745 74.18567657]
[80.58072662 71.70349121]
[69.20405579 61.92742920]
[71.98194885 47.18689346]
[86.13654327 42.22226715]
[97.51338959 51.99811554]
[94.73541260 66.73912048]
[101.81275177 64.25693512]
[105.69503784 49.76805115]
[98.05317688 36.19456100]
[102.19676208 21.55607224]
[115.18410492 14.35437012]
[119.06639099 -0.13451731]
[122.94867706 -14.62340450]
[126.83096313 -29.11229134]
[130.71324158 -43.60118103]
[129.91079712 -52.64624786]
[134.70825195 -58.21603012]
[138.73623657 -72.66509247]
[142.76420593 -87.11415100]
[146.79219055 -101.56321716]
[138.81092834 -115.20414734]
[142.89369202 -130.47198486]
[156.61824036 -138.30856323]
[171.84205627 -134.06462097]
[179.53311157 -120.25797272]
[175.12843323 -105.07988739]
[161.24125671 -97.53524017]
[157.21327209 -83.08617401]
[153.18530273 -68.63711548]
[149.15731812 -54.18805313]
[145.20213318 -39.71889496]
[141.31985474 -25.23000717]
[137.43756104 -10.74111938]
[133.55528259 3.74776840]
[129.67298889 18.23665619]
[137.31951904 30.96718407]
[133.58871460 45.71628189]
[120.18392944 53.65033722]
[116.30164337 68.13922119]
[122.29746246 72.64479065]
[131.30859375 60.65314865]
[140.31973267 48.66150665]
[145.18423462 34.47219467]
[160.18228149 34.71389389]
[164.58703613 49.05258560]
[152.31137085 57.67264175]
[143.30023193 69.66428375]
[134.28910828 81.65592194]
[140.28492737 86.16149139]
[153.12164307 78.40142059]
[165.95835876 70.64135742]
[171.64537048 63.56215668]
[178.96363831 62.86853027]
[191.87783813 55.23810959]
[193.69851685 41.92456436]
[202.71046448 32.22061157]
[215.47320557 29.50279045]
[227.29937744 34.54099274]
[240.28976440 27.04099083]
[253.28013611 19.54099083]
[263.97406006 6.38514090]
[279.57614136 13.01923847]
[277.52041626 29.84808922]
[260.78015137 32.53137207]
[247.78976440 40.03137207]
[234.79937744 47.53137207]
[231.12419128 63.96692657]
[216.39581299 72.81147766]
[199.50825500 68.15231323]
[186.59405518 75.78273773]
[173.71842957 83.47807312]
[160.88171387 91.23814392]
[148.04499817 98.99820709]
[150.38415527 106.12409973]
[164.63594055 101.44577026]
[178.88778687 96.76766968]
[183.56567383 111.01959229]
[169.31427002 115.69755554]
[155.06248474 120.37588501]
[157.40164185 127.50177002]
[172.34008789 126.14428711]
[185.42269897 116.25605011]
[200.42005920 122.89015961]
[201.90415955 139.22201538]
[188.34829712 148.45080566]
[173.69757080 141.08273315]
[158.75912476 142.44021606]
[150.74214172 155.11807251]
[155.91972351 169.19616699]
[161.09730530 183.27424622]
[166.96595764 190.20361328]
[166.25537109 197.52024841]
[171.29093933 211.64974976]
[176.32650757 225.77926636]
[181.36207581 239.90878296]
[186.39764404 254.03828430]
[191.43321228 268.16778564]
[196.46878052 282.29730225]
[201.50433350 296.42681885]
[206.53990173 310.55633545]
[211.57546997 324.68585205]
[219.09989929 325.22424316]
[226.19084167 327.71859741]
[232.35116577 331.97903442]
[237.15295410 337.69244385]
[240.26719666 344.44537354]
[241.48632812 351.75402832]
[240.73803711 359.09884644]
[238.08930969 365.96148682]
[233.74079895 371.86132812]
[228.01161194 376.38922119]
[232.03959656 390.83828735]
[236.06756592 405.28735352]
[240.09555054 419.73641968]
[244.12351990 434.18545532]
[248.15150452 448.63452148]
[252.17947388 463.08358765]
[256.20745850 477.53265381]
[279.73300171 482.44711304]
[294.87176514 504.41415405]
[290.33044434 533.38812256]
[297.30126953 546.66998291]
[304.27212524 559.95178223]
[311.24298096 573.23364258]
[318.21383667 586.51550293]
[324.93673706 592.61956787]
[325.18722534 599.96636963]
[332.02398682 613.31768799]
[338.86074829 626.66906738]
[345.69750977 640.02038574]
[352.73513794 653.26696777]
[359.97201538 666.40576172]
[367.20892334 679.54455566]
[374.44580078 692.68328857]
[381.68270874 705.82208252]
[388.91958618 718.96087646]
[404.31820679 719.90246582]
[416.74972534 729.03814697]
[422.24734497 743.45269775]
[419.05676270 758.54650879]
[408.19610596 769.50323486]
[393.13095093 772.82659912]
[378.66854858 767.45611572]
[369.42376709 755.10546875]
[368.34661865 739.71575928]
[375.78082275 726.19775391]
[368.54391479 713.05895996]
[361.30703735 699.92022705]
[354.07012939 686.78143311]
[346.83325195 673.64263916]
[339.59637451 660.50390625]
[336.38363647 659.17535400]
[333.63903809 656.25305176]
[332.09219360 651.96655273]
[332.34616089 646.85717773]
[325.50939941 633.50579834]
[318.67263794 620.15447998]
[311.83587646 606.80310059]
[304.93197632 593.48632812]
[297.96115112 580.20446777]
[290.99029541 566.92266846]
[284.01943970 553.64080811]
[277.04858398 540.35894775]
[269.63397217 541.48742676]
[271.89096069 556.31671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 13]
[6 12]
[7 11]
[21 264]
[22 263]
[23 262]
[24 261]
[25 260]
[26 259]
[27 258]
[28 257]
[31 247]
[32 246]
[33 245]
[34 244]
[35 243]
[36 242]
[37 241]
[38 240]
[39 239]
[40 238]
[41 236]
[42 235]
[43 234]
[49 72]
[50 71]
[52 69]
[53 68]
[54 67]
[55 66]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[83 91]
[84 90]
[85 89]
[106 132]
[107 131]
[108 130]
[109 129]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[153 185]
[154 184]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[163 176]
[164 175]
[165 174]
[166 173]
[195 219]
[196 218]
[197 217]
[199 216]
[200 215]
[204 212]
[205 211]
[206 210]
[226 233]
[227 232]
[267 309]
[268 308]
[269 307]
[270 306]
[271 305]
[273 304]
[274 303]
[275 302]
[276 301]
[277 297]
[278 296]
[279 295]
[280 294]
[281 293]
[282 292]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
