%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCCCGCGCGUGCGUGCUGUGCCAAGGCUGCAAGGCGCUGAGGGGAGAGGCGCCGCCGUCAGCGCCGCCGCAGCUGGGACCCGUUAGAGCGGAAGCGCCGCCGCCACCGCCGCCUUUGCUGUCCCCCGGCCUCUAGUUCCCCGCAGGUGGGAGGUGGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[135.85772705 454.34475708]
[133.87638855 439.47619629]
[131.89503479 424.60760498]
[129.91369629 409.73904419]
[127.93235016 394.87048340]
[125.95100403 380.00192261]
[123.96965790 365.13336182]
[121.36277771 362.69775391]
[119.82760620 358.86056519]
[120.01802063 354.14944458]
[122.32266998 349.36761475]
[121.18824005 334.41058350]
[112.51055145 322.30493164]
[119.18199921 307.95910645]
[118.04756927 293.00207520]
[116.91313934 278.04501343]
[115.77870941 263.08798218]
[102.65260315 247.19158936]
[112.06538391 227.97222900]
[110.08404541 213.10366821]
[108.10269928 198.23509216]
[106.12135315 183.36653137]
[93.21899414 168.99902344]
[101.06926727 150.46337891]
[98.52668762 135.68043518]
[95.98411560 120.89749908]
[81.90147400 114.37989807]
[75.06651306 99.04852295]
[80.35762024 81.78604126]
[66.87847900 75.20480347]
[53.39933395 68.62356567]
[39.92018890 62.04233170]
[26.44104576 55.46109390]
[12.96190262 48.87985992]
[-3.44983363 54.87457275]
[-18.82665253 47.31378174]
[-23.89647675 31.29919434]
[-37.49775314 24.97421646]
[-51.09902573 18.64924049]
[-64.70030212 12.32426262]
[-78.30157471 5.99928617]
[-91.90284729 -0.32569101]
[-105.50411987 -6.65066814]
[-119.10540009 -12.97564507]
[-134.88127136 -11.77888680]
[-143.15919495 -24.16134262]
[-156.76048279 -30.48632050]
[-168.88577271 -21.14632034]
[-183.96470642 -18.52249527]
[-198.53224182 -23.21778107]
[-209.24085999 -34.15323639]
[-213.62979126 -48.81597137]
[-210.69052124 -63.83659744]
[-201.09843445 -75.76348114]
[-187.05775452 -81.85592651]
[-171.79490662 -80.71391296]
[-158.81719971 -72.59988403]
[-151.10679626 -59.37837601]
[-150.43550110 -44.08759308]
[-136.83422852 -37.76261902]
[-122.03119659 -39.41178131]
[-112.78041840 -26.57691956]
[-99.17914581 -20.25194168]
[-85.57787323 -13.92696571]
[-71.97660065 -7.60198832]
[-58.37532425 -1.27701139]
[-44.77404785 5.04796553]
[-31.17277527 11.37294292]
[-17.57150078 17.69791985]
[-6.17997313 11.62153339]
[6.82368088 13.25369549]
[16.64809990 22.21948242]
[19.54313850 35.40071487]
[33.02228165 41.98195267]
[46.50142670 48.56318665]
[59.98057175 55.14442444]
[73.45971680 61.72566223]
[86.93885803 68.30690002]
[101.72180176 65.76432037]
[112.22756195 55.05783081]
[122.73332214 44.35134125]
[133.23908997 33.64484787]
[143.74484253 22.93835640]
[138.65783691 8.58970642]
[140.29849243 -6.48329115]
[148.28813171 -19.29679489]
[160.99661255 -27.33765793]
[175.87464905 -29.05628586]
[189.96508789 -24.16500282]
[200.47085571 -34.87149429]
[204.27055359 -43.22776031]
[211.27818298 -45.67882538]
[221.98468018 -56.18458939]
[232.69117737 -66.69035339]
[243.39765930 -77.19611359]
[242.47618103 -97.22554016]
[256.31814575 -111.30926514]
[275.75390625 -110.75191498]
[285.84698486 -121.84828949]
[295.94006348 -132.94467163]
[298.89996338 -149.07447815]
[314.43743896 -154.32040405]
[326.56884766 -143.28585815]
[322.81445312 -127.32225800]
[307.03643799 -122.85157776]
[296.94335938 -111.75520325]
[286.85028076 -100.65882111]
[290.09802246 -90.84139252]
[288.94555664 -80.48361969]
[283.53588867 -71.48128510]
[274.79730225 -65.51037598]
[264.28479004 -63.71520233]
[253.90342712 -66.48962402]
[243.19692993 -55.98386002]
[232.49044800 -45.47809601]
[221.78395081 -34.97233582]
[211.17735291 -24.36573219]
[200.67158508 -13.65924072]
[205.82864380 0.33612454]
[204.39187622 15.24401283]
[196.59294128 28.10238647]
[183.93293762 36.33308029]
[168.89369202 38.25867462]
[154.45133972 33.44411850]
[143.94557190 44.15061188]
[133.43981934 54.85710144]
[122.93405151 65.56359100]
[112.42829132 76.27008820]
[123.18282318 90.77281189]
[121.86289978 107.50677490]
[110.76705933 118.35492706]
[113.30963135 133.13786316]
[115.85220337 147.92080688]
[125.12840271 153.70628357]
[129.57493591 163.45220947]
[127.93341064 173.81523132]
[120.98992157 181.38519287]
[122.97126770 196.25375366]
[124.95260620 211.12231445]
[126.93395233 225.99089050]
[135.18685913 230.71133423]
[140.24504089 238.59817505]
[141.06813049 247.79290771]
[137.59643555 256.19757080]
[130.73574829 261.95355225]
[131.87017822 276.91058350]
[133.00460815 291.86764526]
[134.13903809 306.82467651]
[142.89787292 320.00015259]
[136.14527893 333.27615356]
[137.27970886 348.23318481]
[138.83822632 363.15200806]
[140.81956482 378.02056885]
[142.80091858 392.88912964]
[144.78225708 407.75769043]
[146.76361084 422.62628174]
[148.74494934 437.49484253]
[150.72628784 452.36340332]
[164.43818665 459.62725830]
[171.23149109 473.57827759]
[168.49403381 488.85198975]
[157.27844238 499.57531738]
[141.89733887 501.62496948]
[128.26506042 494.21279907]
[121.62349701 480.18890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[11 151]
[12 150]
[14 148]
[15 147]
[16 146]
[17 145]
[19 140]
[20 139]
[21 138]
[22 137]
[24 133]
[25 132]
[26 131]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[46 60]
[47 59]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[89 118]
[90 117]
[92 116]
[93 115]
[94 114]
[95 113]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
