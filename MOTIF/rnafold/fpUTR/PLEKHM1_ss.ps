%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGUGAUGGCGUCAGGGGCCGGGGCGCCGCUUCCUGUUGUCAGUGGCCGAGAGACCGCAUCGUCGGCUCGGAGGCUGAGGGGCUGCCGCGGCCGGGAGCGCCCCUCGCCUCGCUCCUCGCUCCGCUUGGUGUCAUGUGAUUCUCUGAGGGAGCAGCUGCGUGAGUGGAG\
) } def
/len { sequence length } bind def

/coor [
[203.05796814 204.72343445]
[212.20619202 192.83604431]
[225.29830933 185.51507568]
[240.21850586 183.94534302]
[227.09252930 176.68524170]
[213.96656799 169.42515564]
[200.84059143 162.16506958]
[183.35490417 163.44917297]
[173.95582581 147.63490295]
[160.69869995 140.61717224]
[147.44157410 133.59944153]
[134.18443298 126.58171082]
[120.92730713 119.56398010]
[108.37542725 127.39624023]
[93.58968353 127.92148590]
[80.51367188 120.99963379]
[72.63497162 108.47684479]
[72.05496216 93.69315338]
[58.79783249 86.67542267]
[45.54070282 79.65769196]
[32.28357315 72.63996124]
[19.02644348 65.62223053]
[3.20984745 66.00413513]
[-4.41873980 53.21140289]
[-17.67586899 46.19367599]
[-30.93299866 39.17594528]
[-44.25403214 32.28028870]
[-57.63784409 25.50728798]
[-71.02165985 18.73428726]
[-86.82856750 19.40668869]
[-94.69087982 6.75626230]
[-108.07469940 -0.01673821]
[-102.10764313 13.74532223]
[-104.39864349 28.56933403]
[-114.24182129 39.88798141]
[-128.60447693 44.21396255]
[-143.06143188 40.21442795]
[-153.15847778 29.12164688]
[-155.78466797 14.35333347]
[-150.13088989 0.45964119]
[-137.93905640 -8.27874660]
[-122.96401978 -9.16916847]
[-135.05049133 -18.05269814]
[-147.13696289 -26.93622589]
[-159.22344971 -35.81975555]
[-174.64627075 -33.63473511]
[-186.77713013 -42.81607056]
[-188.76516724 -57.53284073]
[-200.85163879 -66.41636658]
[-212.93811035 -75.29989624]
[-225.02459717 -84.18342590]
[-237.11106873 -93.06695557]
[-255.43943787 -94.64962006]
[-261.89065552 -110.95238495]
[-274.13827515 -119.61237335]
[-286.38592529 -128.27236938]
[-301.91821289 -125.35280609]
[-314.91830444 -134.34019470]
[-317.67346191 -149.90248108]
[-308.54913330 -162.80682373]
[-292.95858765 -165.39730835]
[-280.15145874 -156.13705444]
[-277.72592163 -140.52000427]
[-265.47830200 -131.86001587]
[-253.23066711 -123.20001984]
[-241.23478699 -124.93289185]
[-230.95317078 -117.78576660]
[-228.22753906 -105.15343475]
[-216.14106750 -96.26990509]
[-204.05458069 -87.38637543]
[-191.96810913 -78.50284576]
[-179.88163757 -69.61931610]
[-165.24241638 -72.11509705]
[-152.85845947 -63.27811050]
[-150.33992004 -47.90623093]
[-138.25343323 -39.02270126]
[-126.16696167 -30.13917351]
[-114.08049011 -21.25564575]
[-101.30169678 -13.40055180]
[-87.91788483 -6.62755156]
[-73.06826782 -7.78440237]
[-64.24865723 5.35047436]
[-50.86484528 12.12347507]
[-37.48102951 18.89647484]
[-30.06479645 19.11187553]
[-23.91526794 25.91881561]
[-10.65813923 32.93654633]
[2.59898973 39.95427322]
[17.46734810 39.07041931]
[26.04417419 52.36510468]
[39.30130386 59.38283157]
[52.55843353 66.40055847]
[65.81555939 73.41828918]
[79.07269287 80.43601990]
[91.62457275 72.60375977]
[106.41031647 72.07851410]
[119.48632812 79.00036621]
[127.36502838 91.52315521]
[127.94503784 106.30684662]
[141.20216370 113.32457733]
[154.45930481 120.34230804]
[167.71643066 127.36003876]
[180.97355652 134.37776184]
[193.53352356 131.33602905]
[204.44195557 137.48411560]
[208.10067749 149.03909302]
[221.22665405 156.29917908]
[234.35261536 163.55928040]
[247.47859192 170.81936646]
[255.45851135 169.93498230]
[261.96829224 173.05229187]
[265.38327026 178.47775269]
[279.69934082 182.95547485]
[294.01544189 187.43319702]
[307.89312744 180.35877991]
[322.34786987 185.10377502]
[329.00671387 198.37762451]
[343.32278442 202.85534668]
[352.48645020 202.43257141]
[357.85937500 207.54907227]
[372.09078979 212.28903198]
[386.32217407 217.02899170]
[400.55358887 221.76896667]
[414.78497314 226.50892639]
[423.95483398 226.25456238]
[429.23287964 231.46890259]
[443.37478638 236.46949768]
[457.51672363 241.47010803]
[471.65863037 246.47071838]
[485.80056763 251.47132874]
[505.40032959 246.86634827]
[517.37512207 262.02011108]
[531.69122314 266.49783325]
[546.00732422 270.97555542]
[561.88250732 266.86334229]
[573.18688965 278.74368286]
[568.29150391 294.39511108]
[552.23229980 297.71679688]
[541.52960205 285.29165649]
[527.21350098 280.81393433]
[512.89739990 276.33621216]
[504.26498413 281.89007568]
[493.78109741 281.75225830]
[484.93371582 275.72586060]
[480.79995728 265.61325073]
[466.65802002 260.61264038]
[452.51611328 255.61203003]
[438.37417603 250.61141968]
[424.23226929 245.61080933]
[410.04501343 240.74032593]
[395.81359863 236.00036621]
[381.58221436 231.26039124]
[367.35079956 226.52043152]
[353.11941528 221.78047180]
[338.84506226 217.17143250]
[324.52899170 212.69371033]
[311.49334717 219.80760193]
[296.91104126 215.47048950]
[289.53771973 201.74926758]
[275.22161865 197.27154541]
[260.90554810 192.79382324]
[270.07437134 204.66534424]
[273.82366943 219.18920898]
[271.54678345 234.01539612]
[263.61212158 246.74493408]
[251.30354309 255.31809998]
[236.61268616 258.34771729]
[221.91659546 255.34356689]
[209.59318542 246.79174805]
[201.63645935 234.07598877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 109]
[5 108]
[6 107]
[7 106]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[24 88]
[25 87]
[26 86]
[27 84]
[28 83]
[29 82]
[31 80]
[32 79]
[42 78]
[43 77]
[44 76]
[45 75]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[54 65]
[55 64]
[56 63]
[112 161]
[113 160]
[114 159]
[117 156]
[118 155]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
