%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGACGGUGCAGGGGGUGGGCCACGUGUCCAGCCCUAACGAAACGGUAACCAGCCCUGGGAAGCCCGCAAGAGGCCUCAGCGGUGGCCGUCCGAGAGCCGAGAGGUGAGGGUGCCCCCGCCUCACCUGCAGAGGGGCCGUUCCGGGCUCGAACCCGGCACCUUCCGGAAA\
) } def
/len { sequence length } bind def

/coor [
[85.20077515 292.53979492]
[75.12393188 280.85815430]
[72.98494720 265.57980347]
[79.46636963 251.57997131]
[92.50000000 243.32600403]
[92.50000000 228.32600403]
[92.50000000 213.32600403]
[92.50000000 198.32600403]
[84.76270294 185.59873962]
[92.50000000 171.79856873]
[92.50000000 156.79856873]
[92.50000000 141.79856873]
[92.50000000 126.79856110]
[92.50000000 111.79856110]
[79.35481262 104.57194519]
[66.21080017 97.34595490]
[53.54587936 105.38335419]
[40.88096237 113.42075348]
[28.21604347 121.45816040]
[20.71002579 135.38548279]
[5.81818104 135.67227173]
[-6.84673786 143.70967102]
[-19.51165771 151.74707031]
[-32.17657471 159.78448486]
[-44.84149551 167.82188416]
[-49.73033524 183.10189819]
[-64.77550507 188.67167664]
[-78.43563080 180.25856018]
[-80.23184204 164.31637573]
[-68.78623199 153.07460022]
[-52.87889481 155.15696716]
[-40.21397781 147.11955261]
[-27.54905891 139.08215332]
[-14.88414001 131.04475403]
[-2.21922088 123.00735474]
[4.38091755 109.65492249]
[20.17864037 108.79323578]
[32.84355927 100.75583649]
[45.50848007 92.71843719]
[58.17339706 84.68103027]
[53.72440338 70.35600281]
[57.63910294 55.87583923]
[68.70001984 45.74390030]
[83.46717834 43.11124039]
[97.34797668 48.79661942]
[106.02545166 61.03187180]
[106.80088806 76.01181793]
[99.43450165 89.07631683]
[107.80998230 76.63239288]
[116.18547058 64.18846893]
[108.56537628 51.00911331]
[107.42775726 35.88982773]
[112.94486237 21.83345032]
[123.97254181 11.60841274]
[138.28709412 7.20351744]
[153.03353882 9.44125938]
[161.40902710 -3.00266337]
[169.78451538 -15.44658661]
[178.16000366 -27.89050865]
[186.53549194 -40.33443069]
[188.74270630 -49.23348236]
[195.17469788 -52.92470932]
[203.77220154 -65.21627808]
[212.36972046 -77.50784302]
[220.96723938 -89.79941559]
[222.12155151 -108.16186523]
[238.27230835 -114.98976898]
[246.64779663 -127.43369293]
[255.02328491 -139.87760925]
[263.39877319 -152.32153320]
[271.32217407 -165.05809021]
[278.78326416 -178.07084656]
[286.24438477 -191.08361816]
[277.58752441 -206.16798401]
[278.20550537 -223.42544556]
[287.78128052 -237.64724731]
[303.31381226 -244.60984802]
[304.65841675 -259.54946899]
[306.00302124 -274.48907471]
[307.21343994 -289.44015503]
[308.28964233 -304.40151978]
[309.36584473 -319.36285400]
[300.93865967 -335.71810913]
[311.30123901 -349.86322021]
[312.10867310 -364.84149170]
[312.91613770 -379.81973267]
[313.72357178 -394.79797363]
[308.53860474 -410.93963623]
[322.61410522 -420.39041138]
[335.59201050 -409.48123169]
[328.70181274 -393.99053955]
[327.89437866 -379.01229858]
[327.08694458 -364.03402710]
[326.27947998 -349.05578613]
[334.13327026 -339.82797241]
[333.56219482 -327.32223511]
[324.32717896 -318.28665161]
[323.25097656 -303.32531738]
[322.17480469 -288.36398315]
[324.84005737 -281.44357300]
[320.94262695 -273.14450073]
[319.59802246 -258.20486450]
[318.25344849 -243.26525879]
[322.58932495 -241.37043762]
[326.58453369 -238.83499146]
[330.14517212 -235.71853638]
[343.09042358 -243.29614258]
[356.03570557 -250.87374878]
[368.98098755 -258.45135498]
[381.92623901 -266.02893066]
[394.87152100 -273.60653687]
[400.72131348 -280.66662598]
[408.11788940 -281.20156860]
[421.19708252 -288.54556274]
[434.27630615 -295.88958740]
[445.12689209 -308.91650391]
[460.64846802 -302.09616089]
[458.39147949 -285.29312134]
[441.62030029 -282.81036377]
[428.54107666 -275.46636963]
[415.46188354 -268.12237549]
[402.44912720 -260.66128540]
[389.50384521 -253.08366394]
[376.55856323 -245.50607300]
[363.61331177 -237.92846680]
[350.66802979 -230.35087585]
[337.72277832 -222.77326965]
[338.21652222 -206.42826843]
[330.25976562 -192.00660706]
[315.96520996 -183.58757019]
[299.25714111 -183.62251282]
[291.79602051 -170.60975647]
[284.33493042 -157.59698486]
[284.96307373 -154.83239746]
[284.51525879 -151.64865112]
[282.82482910 -148.46122742]
[279.88098145 -145.73866272]
[275.84268188 -143.94604492]
[267.46722412 -131.50212097]
[259.09173584 -119.05820465]
[250.71623230 -106.61428070]
[252.72537231 -94.66448975]
[245.82095337 -84.22185516]
[233.25881958 -81.20189667]
[224.66130066 -68.91033173]
[216.06378174 -56.61875916]
[207.46626282 -44.32719040]
[198.97941589 -31.95894432]
[190.60392761 -19.51502228]
[182.22843933 -7.07109928]
[173.85295105 5.37282372]
[165.47746277 17.81674576]
[173.10197449 30.63596725]
[174.40991211 45.55570984]
[169.08850098 59.62140274]
[158.14312744 70.02423859]
[143.70783997 74.66204834]
[128.62939453 72.56395721]
[120.25390625 85.00788116]
[111.87842560 97.45180511]
[107.50000000 111.79856110]
[107.50000000 126.79856110]
[107.50000000 141.79856873]
[107.50000000 156.79856873]
[107.50000000 171.79856873]
[115.23729706 185.59873962]
[107.50000000 198.32600403]
[107.50000000 213.32600403]
[107.50000000 228.32600403]
[107.50000000 243.32600403]
[120.53363037 251.57997131]
[127.01505280 265.57980347]
[124.87606812 280.85815430]
[114.79922485 292.53979492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[8 167]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[16 40]
[17 39]
[18 38]
[19 37]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[48 160]
[49 159]
[50 158]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[62 147]
[63 146]
[64 145]
[65 144]
[67 141]
[68 140]
[69 139]
[70 138]
[71 133]
[72 132]
[73 131]
[77 103]
[78 102]
[79 101]
[80 99]
[81 98]
[82 97]
[84 94]
[85 93]
[86 92]
[87 91]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
