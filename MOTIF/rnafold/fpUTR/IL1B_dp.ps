%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL1B)
} def

/sequence { (\
ACCAAACCUCUUCGAGGCACAAGGCACAACAGGCUGCUCUGGGAUUCUCUUCAGCCAAUCUUCAUUGCUCAAGUGUCUGAAGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 17 0.021447757 ubox
2 24 0.578906202 ubox
3 16 0.021664527 ubox
3 23 0.580528059 ubox
4 12 0.003485196 ubox
5 11 0.003545077 ubox
5 12 0.004833054 ubox
6 11 0.004137466 ubox
7 17 0.894018001 ubox
7 24 0.047852752 ubox
8 16 0.902200927 ubox
8 17 0.013397754 ubox
8 23 0.048025237 ubox
8 24 0.007143450 ubox
8 32 0.003604152 ubox
8 82 0.006052739 ubox
8 85 0.372916833 ubox
9 15 0.901573381 ubox
9 16 0.011692592 ubox
9 17 0.020647636 ubox
9 22 0.045908551 ubox
9 24 0.022906698 ubox
9 31 0.003903107 ubox
9 81 0.005209118 ubox
9 84 0.375899151 ubox
10 14 0.894011334 ubox
10 16 0.027664723 ubox
10 17 0.022610703 ubox
10 23 0.030855914 ubox
10 24 0.003967107 ubox
10 32 0.006833774 ubox
10 82 0.417237614 ubox
10 85 0.003989206 ubox
11 15 0.024986247 ubox
11 16 0.020978221 ubox
11 22 0.030935862 ubox
11 23 0.003965657 ubox
11 29 0.004737165 ubox
11 31 0.007739960 ubox
11 81 0.418407353 ubox
11 82 0.011040430 ubox
11 84 0.003598198 ubox
12 21 0.030521905 ubox
12 22 0.003578952 ubox
12 24 0.005615231 ubox
12 28 0.005039458 ubox
12 80 0.418795116 ubox
12 81 0.012222784 ubox
13 23 0.007376505 ubox
13 79 0.418230082 ubox
14 77 0.007771188 ubox
14 78 0.205464036 ubox
15 76 0.007680971 ubox
15 78 0.363188455 ubox
16 77 0.419049159 ubox
17 25 0.114655154 ubox
17 74 0.007500758 ubox
17 76 0.419137639 ubox
17 77 0.003472877 ubox
17 83 0.003308838 ubox
18 24 0.125362957 ubox
18 73 0.007506056 ubox
18 75 0.419302035 ubox
18 82 0.003618079 ubox
19 74 0.419140324 ubox
20 73 0.417963705 ubox
21 40 0.003239677 ubox
21 62 0.003838050 ubox
21 66 0.003642893 ubox
22 40 0.004115935 ubox
22 61 0.003953798 ubox
22 65 0.003607572 ubox
22 69 0.034260323 ubox
22 78 0.005697370 ubox
23 35 0.005419853 ubox
23 38 0.007702511 ubox
23 39 0.004292008 ubox
23 60 0.003960940 ubox
23 68 0.028384846 ubox
23 69 0.336886706 ubox
23 70 0.225720312 ubox
23 77 0.006019213 ubox
23 87 0.032586274 ubox
24 34 0.006042007 ubox
24 37 0.009244187 ubox
24 59 0.003614628 ubox
24 68 0.417049163 ubox
24 69 0.028065412 ubox
24 76 0.006021126 ubox
24 86 0.032854547 ubox
25 33 0.006074667 ubox
25 36 0.009264785 ubox
25 67 0.418243478 ubox
25 75 0.006024290 ubox
25 85 0.032778021 ubox
26 35 0.009024277 ubox
26 66 0.402471966 ubox
26 74 0.006008445 ubox
27 67 0.014761080 ubox
27 73 0.005976124 ubox
28 62 0.188680331 ubox
28 66 0.017144732 ubox
29 61 0.181237810 ubox
29 65 0.022187945 ubox
30 41 0.014888505 ubox
31 38 0.003218147 ubox
31 40 0.014968916 ubox
31 61 0.163216145 ubox
31 62 0.053410143 ubox
31 66 0.004039366 ubox
32 37 0.003434528 ubox
32 39 0.014969910 ubox
32 56 0.388474630 ubox
32 60 0.150790358 ubox
32 61 0.040579839 ubox
32 87 0.899251519 ubox
33 38 0.010485402 ubox
33 55 0.391639213 ubox
33 59 0.135246683 ubox
33 60 0.040493752 ubox
33 86 0.907030953 ubox
34 54 0.391685420 ubox
34 85 0.907066208 ubox
35 53 0.391446318 ubox
35 57 0.131017490 ubox
35 84 0.906855414 ubox
36 52 0.390096975 ubox
36 55 0.075692216 ubox
36 56 0.124383625 ubox
36 68 0.005177862 ubox
36 83 0.907066274 ubox
37 43 0.010617474 ubox
37 54 0.086650841 ubox
37 67 0.005188329 ubox
37 82 0.906896164 ubox
38 42 0.009582546 ubox
38 44 0.006581062 ubox
38 53 0.081722034 ubox
38 80 0.261007752 ubox
38 81 0.825086273 ubox
39 43 0.006732403 ubox
39 54 0.127237288 ubox
39 79 0.367999154 ubox
39 82 0.008650416 ubox
40 53 0.128609337 ubox
40 57 0.016082627 ubox
40 64 0.006491875 ubox
40 79 0.254098980 ubox
40 81 0.018143404 ubox
41 47 0.103522062 ubox
41 48 0.119023786 ubox
41 49 0.277355086 ubox
41 50 0.111277050 ubox
41 51 0.192707156 ubox
41 52 0.129124651 ubox
41 56 0.017393239 ubox
41 62 0.006958918 ubox
41 63 0.006781823 ubox
41 77 0.092120655 ubox
41 78 0.336038763 ubox
42 46 0.067318468 ubox
42 47 0.125295283 ubox
42 48 0.275093988 ubox
42 49 0.115363412 ubox
42 50 0.208424344 ubox
42 51 0.116228287 ubox
42 52 0.012676070 ubox
42 55 0.017348786 ubox
42 56 0.005685227 ubox
42 61 0.015631331 ubox
42 62 0.004824675 ubox
42 76 0.091710715 ubox
42 77 0.320441639 ubox
42 78 0.814892621 ubox
43 47 0.269615533 ubox
43 48 0.090203002 ubox
43 49 0.215950413 ubox
43 50 0.088356624 ubox
43 51 0.015201116 ubox
43 52 0.021509813 ubox
43 55 0.005688669 ubox
43 60 0.017491466 ubox
43 76 0.292835587 ubox
43 77 0.842122274 ubox
44 48 0.188014041 ubox
44 50 0.015440122 ubox
44 51 0.021989225 ubox
44 59 0.017496138 ubox
44 74 0.082694537 ubox
44 76 0.848723518 ubox
45 58 0.017368131 ubox
45 73 0.045495714 ubox
45 75 0.822913488 ubox
46 57 0.015408041 ubox
46 72 0.034017228 ubox
47 54 0.012244769 ubox
47 73 0.304618632 ubox
48 53 0.011267532 ubox
48 72 0.287795758 ubox
49 73 0.845509919 ubox
49 82 0.005036567 ubox
50 72 0.849519501 ubox
50 73 0.005529420 ubox
50 81 0.010760370 ubox
51 71 0.811840413 ubox
51 72 0.009495230 ubox
51 80 0.020351460 ubox
52 67 0.022401247 ubox
52 79 0.020976430 ubox
53 66 0.021981342 ubox
53 69 0.888923023 ubox
53 78 0.020976126 ubox
54 65 0.017794427 ubox
54 68 0.904158052 ubox
54 77 0.020907405 ubox
55 67 0.680630173 ubox
55 75 0.004109730 ubox
56 67 0.597224036 ubox
56 75 0.018505741 ubox
56 79 0.004321665 ubox
57 66 0.842241776 ubox
57 74 0.016916102 ubox
57 78 0.004204347 ubox
58 65 0.819738823 ubox
58 74 0.004433475 ubox
59 64 0.739742226 ubox
59 80 0.012013124 ubox
60 73 0.018504792 ubox
60 79 0.012804276 ubox
60 82 0.014826340 ubox
61 72 0.018750672 ubox
61 81 0.017493927 ubox
62 71 0.018338773 ubox
62 80 0.022063483 ubox
63 75 0.022707149 ubox
63 79 0.022517825 ubox
64 74 0.022926120 ubox
64 78 0.021817781 ubox
65 73 0.022942120 ubox
65 85 0.010023885 ubox
66 72 0.022864802 ubox
66 75 0.009381493 ubox
66 84 0.030206456 ubox
67 74 0.011153447 ubox
67 76 0.020060870 ubox
67 83 0.032454026 ubox
68 73 0.011250406 ubox
68 75 0.020515128 ubox
68 82 0.032455954 ubox
69 80 0.024829367 ubox
69 81 0.024986600 ubox
70 79 0.032677638 ubox
71 78 0.030247185 ubox
72 78 0.015007591 ubox
73 77 0.015545427 ubox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
32 87 0.9500000 lbox
33 86 0.9500000 lbox
34 85 0.9500000 lbox
35 84 0.9500000 lbox
36 83 0.9500000 lbox
37 82 0.9500000 lbox
38 81 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
