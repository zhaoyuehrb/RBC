%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAMSAP3)
} def

/sequence { (\
GCGGCGGUAGCAGCAGCGGGCCCGGCUGGGGCGCGAGCGCGGCGCAGCCCAGCCCAGCCCAGUCCGAGCGCGGACCCGGCGCCCGCAGCCCCGGCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.026763511 ubox
1 17 0.018050577 ubox
1 97 0.061214188 ubox
1 100 0.920566438 ubox
2 13 0.026682787 ubox
2 16 0.017995239 ubox
2 96 0.061413565 ubox
2 99 0.923554717 ubox
3 95 0.061411138 ubox
3 98 0.923665813 ubox
3 101 0.374015689 ubox
4 11 0.026823604 ubox
4 14 0.017968399 ubox
4 17 0.003327461 ubox
4 97 0.923680235 ubox
4 100 0.376756548 ubox
5 10 0.026916532 ubox
5 13 0.018033779 ubox
5 16 0.003327040 ubox
5 93 0.062272788 ubox
5 96 0.923319445 ubox
5 99 0.376762935 ubox
6 22 0.011061549 ubox
6 90 0.003465236 ubox
6 91 0.022004654 ubox
6 92 0.066357146 ubox
6 95 0.875946419 ubox
6 98 0.376717509 ubox
7 14 0.035524414 ubox
7 17 0.027342136 ubox
7 21 0.011110039 ubox
7 89 0.003735696 ubox
7 90 0.024667384 ubox
7 91 0.067072610 ubox
7 95 0.285005059 ubox
7 97 0.376641614 ubox
8 13 0.034488068 ubox
8 16 0.027028352 ubox
8 20 0.010954457 ubox
8 88 0.003578817 ubox
8 94 0.400342482 ubox
8 96 0.353587022 ubox
10 17 0.154914495 ubox
10 89 0.067345647 ubox
10 95 0.363069083 ubox
11 16 0.154883808 ubox
11 88 0.067254823 ubox
11 94 0.362903768 ubox
13 86 0.008479424 ubox
13 89 0.976263290 ubox
13 95 0.004113010 ubox
14 85 0.007802011 ubox
14 88 0.976894139 ubox
14 94 0.004039965 ubox
16 86 0.983994971 ubox
16 89 0.003928846 ubox
16 100 0.009817494 ubox
17 85 0.985412082 ubox
17 88 0.003659247 ubox
17 99 0.009747071 ubox
18 60 0.169170059 ubox
18 84 0.985448676 ubox
18 98 0.005783217 ubox
19 59 0.169348011 ubox
19 83 0.985464704 ubox
19 97 0.005677562 ubox
20 58 0.169350881 ubox
20 82 0.985445954 ubox
20 95 0.005507543 ubox
21 57 0.169227755 ubox
21 81 0.983479259 ubox
21 94 0.005508349 ubox
22 79 0.151782942 ubox
22 93 0.005496750 ubox
23 78 0.151642113 ubox
23 81 0.008843725 ubox
24 54 0.990709180 ubox
24 55 0.087707466 ubox
24 59 0.043950324 ubox
24 60 0.003971789 ubox
24 77 0.068664839 ubox
24 90 0.005316665 ubox
25 53 0.996200675 ubox
25 54 0.062148874 ubox
25 58 0.048229764 ubox
25 76 0.033496914 ubox
25 80 0.006698822 ubox
25 89 0.005437533 ubox
25 95 0.011589527 ubox
26 52 0.998584968 ubox
26 57 0.049392646 ubox
26 79 0.006720024 ubox
26 88 0.005544164 ubox
26 94 0.011624706 ubox
27 51 0.998228411 ubox
27 56 0.049323792 ubox
27 61 0.004750850 ubox
27 78 0.006714901 ubox
27 87 0.005542740 ubox
27 93 0.011616708 ubox
28 49 0.011817547 ubox
28 50 0.996866114 ubox
28 55 0.048563325 ubox
28 60 0.004741324 ubox
28 77 0.006720397 ubox
28 86 0.005534653 ubox
28 92 0.011634536 ubox
29 48 0.016653589 ubox
29 49 0.995255241 ubox
29 50 0.058354427 ubox
29 54 0.046863681 ubox
29 55 0.009137757 ubox
29 59 0.004468900 ubox
29 60 0.009555237 ubox
29 76 0.006708821 ubox
29 84 0.005521324 ubox
29 91 0.011635147 ubox
30 48 0.988995140 ubox
30 49 0.080874021 ubox
30 50 0.006718170 ubox
30 53 0.044513369 ubox
30 54 0.012561005 ubox
30 58 0.004151838 ubox
30 59 0.009694084 ubox
30 75 0.006688691 ubox
30 83 0.005526212 ubox
30 90 0.011635251 ubox
31 38 0.007869112 ubox
31 40 0.017111495 ubox
31 43 0.023875901 ubox
31 45 0.942810689 ubox
31 48 0.098284219 ubox
31 49 0.009415625 ubox
31 53 0.015229502 ubox
31 58 0.009815471 ubox
31 82 0.005528004 ubox
31 89 0.011635217 ubox
32 37 0.007874032 ubox
32 39 0.017125790 ubox
32 41 0.016207050 ubox
32 42 0.018937170 ubox
32 44 0.947005120 ubox
32 47 0.112574990 ubox
32 52 0.017481246 ubox
32 57 0.009932429 ubox
32 72 0.006674361 ubox
32 81 0.005528793 ubox
32 88 0.011629824 ubox
33 38 0.016687410 ubox
33 40 0.023662339 ubox
33 43 0.947022428 ubox
33 45 0.316346504 ubox
33 48 0.028514243 ubox
33 71 0.006715239 ubox
33 80 0.004991792 ubox
33 86 0.011589473 ubox
34 39 0.023836921 ubox
34 41 0.171026547 ubox
34 42 0.931518259 ubox
34 44 0.316498378 ubox
34 47 0.028871134 ubox
34 70 0.006715207 ubox
34 79 0.004819913 ubox
34 85 0.011627040 ubox
35 40 0.236701214 ubox
35 43 0.311475134 ubox
35 69 0.006700559 ubox
35 84 0.011610436 ubox
37 43 0.045005055 ubox
37 45 0.030660796 ubox
37 48 0.008178952 ubox
37 53 0.009472662 ubox
37 58 0.004458083 ubox
37 82 0.011561734 ubox
38 42 0.048397663 ubox
38 44 0.030719478 ubox
38 47 0.008190354 ubox
38 52 0.009488562 ubox
38 57 0.004467755 ubox
38 66 0.006679226 ubox
38 81 0.011567878 ubox
39 43 0.028771791 ubox
39 45 0.006629264 ubox
39 48 0.003645178 ubox
39 65 0.006649937 ubox
39 80 0.010356826 ubox
40 44 0.006597983 ubox
40 47 0.003812857 ubox
40 79 0.010228508 ubox
41 49 0.019490237 ubox
41 50 0.003327411 ubox
41 54 0.009664491 ubox
41 55 0.005033426 ubox
41 59 0.007589518 ubox
41 64 0.006444977 ubox
42 48 0.019615207 ubox
42 53 0.009730848 ubox
42 54 0.005004342 ubox
42 58 0.007626256 ubox
42 63 0.006446806 ubox
43 47 0.019521495 ubox
43 52 0.009768690 ubox
43 57 0.007639455 ubox
43 62 0.006478338 ubox
44 53 0.006262923 ubox
45 52 0.006287302 ubox
47 53 0.007244575 ubox
47 58 0.006291199 ubox
48 52 0.007431281 ubox
48 57 0.006297198 ubox
52 58 0.003777159 ubox
53 57 0.004205978 ubox
57 80 0.972286936 ubox
58 79 0.973244332 ubox
59 78 0.972162543 ubox
59 79 0.027386319 ubox
60 78 0.034971064 ubox
62 75 0.998071898 ubox
63 74 0.999739613 ubox
64 73 0.999960303 ubox
65 72 0.999913838 ubox
66 71 0.981004971 ubox
76 93 0.004075936 ubox
76 94 0.164042330 ubox
77 93 0.165762973 ubox
77 99 0.029971069 ubox
78 90 0.012089660 ubox
78 91 0.008682530 ubox
78 92 0.165418206 ubox
78 98 0.032619187 ubox
79 89 0.012822975 ubox
79 90 0.011499869 ubox
79 91 0.165086339 ubox
79 97 0.032681564 ubox
80 88 0.013446329 ubox
80 96 0.032705658 ubox
81 89 0.165289018 ubox
81 95 0.032733181 ubox
82 88 0.165196062 ubox
82 94 0.030065446 ubox
83 93 0.027102460 ubox
83 94 0.013101391 ubox
84 93 0.018419713 ubox
85 92 0.021835941 ubox
88 95 0.012861023 ubox
89 94 0.013069598 ubox
1 100 0.9500000 lbox
2 99 0.9500000 lbox
3 98 0.9500000 lbox
4 97 0.9500000 lbox
5 96 0.9500000 lbox
6 95 0.9500000 lbox
13 89 0.9500000 lbox
14 88 0.9500000 lbox
16 86 0.9500000 lbox
17 85 0.9500000 lbox
18 84 0.9500000 lbox
19 83 0.9500000 lbox
20 82 0.9500000 lbox
21 81 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
57 80 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
