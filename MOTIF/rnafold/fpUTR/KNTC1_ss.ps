%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAAUUUAAGCCUGUGGCAUGGAACCUAAAGACUAGAGGCGGUUGUGUGAGUCAGGAAGAGGGGCCAGAUAUCUGAGUGUUCCUCUUUAGUUUCUUCAAUUGCAGAUAAUAUGGUGUCUAAUUUUAUGUUGUUCAGGAAAGACAGUGGUUCCUGACUCAGGAAGACAGUCUCAGAAAC\
) } def
/len { sequence length } bind def

/coor [
[-98.87158966 484.90786743]
[-104.00189209 499.00323486]
[-109.13219452 513.09863281]
[-114.26249695 527.19403076]
[-103.91309357 538.47003174]
[-100.00059509 553.26702881]
[-103.42405701 568.18475342]
[-113.39678955 579.79522705]
[-127.62714386 585.43048096]
[-142.84507751 583.79547119]
[-155.55361938 575.26605225]
[-162.83245850 561.80212402]
[-163.00894165 546.49761963]
[-156.04254150 532.86944580]
[-143.53407288 524.04919434]
[-128.35787964 522.06372070]
[-123.22758484 507.96832275]
[-118.09728241 493.87295532]
[-112.96697998 479.77755737]
[-121.62421417 474.38409424]
[-129.24513245 467.59817505]
[-135.60815430 459.61508179]
[-140.52787781 450.66500854]
[-143.86062622 441.00628662]
[-145.50846863 430.91802979]
[-145.42224121 420.69201660]
[-143.60295105 410.62429810]
[-140.10177612 401.00653076]
[-135.01866150 392.11767578]
[-128.49945068 384.21575928]
[-120.73170471 377.53048706]
[-111.93929291 372.25650024]
[-102.37595367 368.54772949]
[-92.31799316 366.51300049]
[-82.05625916 366.21261597]
[-71.88774872 367.65679932]
[-62.10703278 370.80520630]
[-54.60703278 357.81481934]
[-47.10703278 344.82443237]
[-39.60703278 331.83407593]
[-32.10703278 318.84368896]
[-32.44409561 303.95288086]
[-18.84331131 295.87023926]
[-11.34331036 282.87985229]
[-3.84331083 269.88946533]
[-10.99695873 255.12866211]
[-7.92194414 238.84753418]
[4.36640072 227.48724365]
[21.16852188 225.66165161]
[28.44066620 212.54235840]
[35.71281052 199.42304993]
[42.98495483 186.30375671]
[50.25709915 173.18446350]
[57.52924347 160.06517029]
[64.80138397 146.94587708]
[72.07353210 133.82658386]
[79.34567261 120.70728302]
[86.61782074 107.58798981]
[85.96353149 92.60226440]
[77.57563782 80.16670227]
[69.18774414 67.73114014]
[60.79985046 55.29557419]
[52.41195679 42.86000824]
[44.02406311 30.42444611]
[35.63616943 17.98888206]
[27.24827385 5.55331898]
[18.53773117 -6.65841341]
[9.51050472 -18.63794708]
[0.48327973 -30.61747932]
[-14.81541443 -36.52357483]
[-17.08225822 -52.76529694]
[-3.98531699 -62.63454819]
[11.00239944 -55.97869492]
[12.46281242 -39.64470291]
[21.49003792 -27.66517067]
[30.51726341 -15.68563938]
[33.96774292 -14.84085560]
[37.17418671 -12.26626682]
[39.32050323 -8.09793949]
[39.68383789 -2.83457446]
[48.07173157 9.60098934]
[56.45962524 22.03655243]
[64.84751892 34.47211456]
[73.23541260 46.90768051]
[81.62330627 59.34324265]
[90.01119995 71.77880859]
[98.39909363 84.21437073]
[92.09890747 70.60159302]
[96.55340576 56.27827454]
[109.46271515 48.63957596]
[124.16173553 51.62937164]
[133.06132507 63.70402527]
[131.56660461 78.62937164]
[120.44739532 88.70014954]
[133.02745056 80.53056335]
[145.60751343 72.36097717]
[158.18757629 64.19139099]
[159.45753479 50.76552963]
[168.10881042 40.67559814]
[180.80592346 37.46691132]
[192.84843445 42.09578323]
[205.56915283 34.14699554]
[218.28987122 26.19820786]
[221.74913025 20.51084900]
[226.80815125 17.84522438]
[231.59617615 18.20297623]
[244.58656311 10.70297623]
[257.57693481 3.20297623]
[270.56732178 -4.29702377]
[283.55770874 -11.79702377]
[296.54809570 -19.29702377]
[309.53845215 -26.79702377]
[322.52883911 -34.29702377]
[335.51922607 -41.79702377]
[348.50961304 -49.29702377]
[349.14093018 -64.71146393]
[358.02441406 -77.32444763]
[372.32534790 -83.11121368]
[387.48037720 -80.22522736]
[398.65356445 -69.58740234]
[402.27960205 -54.59222031]
[397.20141602 -40.02459717]
[385.03945923 -30.53300476]
[369.67456055 -29.14617538]
[356.00961304 -36.30664444]
[343.01922607 -28.80664253]
[330.02883911 -21.30664253]
[317.03845215 -13.80664253]
[304.04809570 -6.30664253]
[291.05770874 1.19335735]
[278.06732178 8.69335747]
[265.07693481 16.19335747]
[252.08656311 23.69335747]
[239.09617615 31.19335747]
[226.23866272 38.91893005]
[213.51794434 46.86771774]
[200.79722595 54.81650543]
[197.72821045 71.33907318]
[183.38400269 80.72589874]
[166.35716248 76.77145386]
[153.77709961 84.94104004]
[141.19703674 93.11061859]
[128.61698914 101.28020477]
[141.31433105 109.26627350]
[147.12451172 123.09529114]
[143.94105530 137.75358582]
[132.91812134 147.92683411]
[118.05204010 149.92672729]
[104.73247528 143.02822876]
[97.78841400 129.73236084]
[99.73711395 114.86013031]
[92.46497345 127.97943115]
[85.19282532 141.09872437]
[77.92068481 154.21801758]
[70.64853668 167.33731079]
[63.37639618 180.45660400]
[56.10425186 193.57591248]
[48.83210754 206.69520569]
[41.55996323 219.81449890]
[34.28781891 232.93379211]
[41.03171921 244.97320557]
[40.93951416 258.66412354]
[34.14247131 270.42401123]
[22.51231194 277.22863770]
[9.14706993 277.38946533]
[1.64707029 290.37985229]
[-5.85292959 303.37023926]
[-6.05231714 319.19018555]
[-19.11665154 326.34368896]
[-26.61665154 339.33407593]
[-34.11665344 352.32443237]
[-41.61665344 365.31481934]
[-49.11665344 378.30520630]
[-35.20493317 393.23623657]
[-27.07008934 411.93090820]
[-25.62947655 432.24801636]
[-31.03456688 451.86541748]
[-42.65512466 468.54522705]
[-59.15268326 480.38928223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[43 167]
[44 166]
[45 165]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 76]
[68 75]
[69 74]
[94 143]
[95 142]
[96 141]
[97 140]
[101 137]
[102 136]
[103 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
