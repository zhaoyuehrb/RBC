%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM170B)
} def

/sequence { (\
GUGUCCACUCUGGCUGGGGCCAGCUGGAGGCCUUCAGUACAGCCCCAGCCAACUCUCACUGAACAGCUGGAGCACCGACACCCUGGGCACUCAUUUCAAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.022964310 ubox
1 75 0.008073156 ubox
1 81 0.033739959 ubox
1 90 0.995807083 ubox
2 58 0.023012166 ubox
2 74 0.008385321 ubox
2 80 0.033904693 ubox
2 89 0.997951525 ubox
3 57 0.022999284 ubox
3 59 0.004102438 ubox
3 73 0.008469064 ubox
3 79 0.033966465 ubox
3 88 0.998895542 ubox
4 58 0.003986746 ubox
4 71 0.015276245 ubox
4 72 0.004421954 ubox
4 78 0.033951068 ubox
4 87 0.998409735 ubox
5 70 0.016816489 ubox
5 77 0.033870637 ubox
5 86 0.998418451 ubox
5 87 0.016274141 ubox
6 69 0.016828729 ubox
6 85 0.998065597 ubox
6 86 0.015696926 ubox
7 11 0.003863423 ubox
7 68 0.016161237 ubox
7 84 0.886773902 ubox
8 29 0.005884995 ubox
8 66 0.016074392 ubox
8 72 0.074256821 ubox
9 28 0.005939058 ubox
9 62 0.017838427 ubox
9 65 0.015026957 ubox
9 71 0.074274663 ubox
9 78 0.146262764 ubox
10 27 0.005953531 ubox
10 61 0.018785613 ubox
10 66 0.004954550 ubox
10 70 0.074081554 ubox
10 77 0.148886066 ubox
11 26 0.005930245 ubox
11 51 0.923557008 ubox
11 65 0.004084840 ubox
11 69 0.052761100 ubox
11 77 0.004300319 ubox
11 80 0.029021741 ubox
12 25 0.005930546 ubox
12 50 0.999564106 ubox
12 68 0.012120117 ubox
12 79 0.017806925 ubox
13 24 0.005954012 ubox
13 38 0.004714774 ubox
13 49 0.999890739 ubox
13 67 0.011902801 ubox
14 23 0.005954049 ubox
14 37 0.004937926 ubox
14 48 0.999889934 ubox
14 66 0.011808088 ubox
15 22 0.005951098 ubox
15 36 0.004938368 ubox
15 47 0.999658318 ubox
15 65 0.011407886 ubox
16 21 0.005933403 ubox
16 35 0.004896243 ubox
16 46 0.999895776 ubox
16 56 0.003378587 ubox
16 64 0.010297120 ubox
17 33 0.003664964 ubox
17 34 0.003453514 ubox
17 45 0.999910172 ubox
17 55 0.008533400 ubox
18 32 0.005084681 ubox
18 44 0.999910023 ubox
18 54 0.008559278 ubox
19 31 0.005100608 ubox
19 43 0.999904866 ubox
19 53 0.008684328 ubox
20 30 0.005114813 ubox
20 42 0.998224799 ubox
21 29 0.005114940 ubox
23 38 0.977557324 ubox
23 49 0.010285967 ubox
24 37 0.999673283 ubox
24 48 0.010318890 ubox
25 36 0.999511242 ubox
25 41 0.003215877 ubox
25 47 0.010321187 ubox
26 32 0.009963732 ubox
26 33 0.010292862 ubox
26 35 0.998845835 ubox
26 40 0.003231462 ubox
26 46 0.010323779 ubox
27 31 0.011208269 ubox
27 32 0.024095205 ubox
27 33 0.013475127 ubox
27 34 0.971243909 ubox
27 35 0.041138261 ubox
27 45 0.010322694 ubox
28 33 0.899374697 ubox
28 34 0.055036309 ubox
29 33 0.039209949 ubox
29 44 0.010327831 ubox
30 43 0.010332827 ubox
31 42 0.010142619 ubox
42 73 0.007631571 ubox
43 72 0.007655371 ubox
45 70 0.007776240 ubox
46 61 0.003407904 ubox
46 69 0.007788603 ubox
47 60 0.003429834 ubox
47 68 0.007793115 ubox
48 59 0.003418497 ubox
48 67 0.007795486 ubox
49 66 0.007786293 ubox
50 61 0.004649789 ubox
51 60 0.006000324 ubox
51 68 0.003269064 ubox
53 66 0.043942572 ubox
53 70 0.008536186 ubox
53 72 0.923887739 ubox
54 62 0.244310564 ubox
54 65 0.039120850 ubox
54 69 0.007272916 ubox
54 70 0.010640437 ubox
54 71 0.929487383 ubox
54 78 0.011890329 ubox
55 61 0.256842073 ubox
55 66 0.040187701 ubox
55 69 0.016062521 ubox
55 70 0.928304333 ubox
55 72 0.088982628 ubox
55 77 0.012655710 ubox
56 62 0.062535012 ubox
56 65 0.040509417 ubox
56 69 0.696123293 ubox
56 70 0.076432168 ubox
56 71 0.089583143 ubox
56 78 0.011819445 ubox
57 61 0.065289614 ubox
57 69 0.607453716 ubox
57 70 0.085782635 ubox
57 77 0.012720415 ubox
58 68 0.607374968 ubox
59 66 0.899037667 ubox
59 70 0.022547834 ubox
59 72 0.019184028 ubox
60 65 0.842013055 ubox
60 69 0.024074212 ubox
60 71 0.019189580 ubox
60 74 0.010938920 ubox
60 77 0.010856439 ubox
60 80 0.017418582 ubox
60 89 0.005292878 ubox
60 98 0.019119733 ubox
61 68 0.026806156 ubox
61 73 0.011509528 ubox
61 76 0.013417522 ubox
61 79 0.019578262 ubox
61 88 0.005973608 ubox
61 97 0.020660634 ubox
62 96 0.020533723 ubox
63 95 0.018422456 ubox
64 85 0.013231826 ubox
65 84 0.019266057 ubox
65 95 0.004398170 ubox
66 73 0.157511376 ubox
66 83 0.021407252 ubox
66 94 0.006882355 ubox
66 95 0.003250433 ubox
67 72 0.157183677 ubox
68 74 0.010591611 ubox
68 77 0.224645462 ubox
68 80 0.036756890 ubox
68 93 0.013041769 ubox
68 98 0.003183741 ubox
69 73 0.011749263 ubox
69 76 0.278511865 ubox
69 79 0.040950107 ubox
69 82 0.045618543 ubox
69 83 0.077868769 ubox
69 84 0.006143609 ubox
69 91 0.013645922 ubox
69 92 0.013425186 ubox
69 97 0.003435969 ubox
70 75 0.276928752 ubox
70 81 0.045748570 ubox
70 82 0.077860100 ubox
70 83 0.007749886 ubox
70 90 0.016970542 ubox
70 91 0.008787746 ubox
70 92 0.013705891 ubox
71 84 0.007967100 ubox
71 91 0.013822536 ubox
72 83 0.009850597 ubox
72 88 0.026187633 ubox
72 90 0.013184408 ubox
73 85 0.005825184 ubox
73 87 0.026505108 ubox
74 84 0.009232748 ubox
75 86 0.038529393 ubox
75 87 0.008636592 ubox
76 85 0.040232874 ubox
76 86 0.008692261 ubox
77 84 0.040055676 ubox
79 85 0.010583061 ubox
80 84 0.013220693 ubox
81 87 0.003524200 ubox
82 86 0.003700283 ubox
84 93 0.013309603 ubox
84 98 0.012803970 ubox
85 92 0.014754497 ubox
85 97 0.013821015 ubox
86 91 0.011537069 ubox
86 92 0.003800184 ubox
86 96 0.013175816 ubox
86 97 0.004227550 ubox
87 95 0.011240832 ubox
87 96 0.004010904 ubox
93 101 0.055719607 ubox
94 100 0.059383151 ubox
95 99 0.051002344 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
showpage
end
%%EOF
