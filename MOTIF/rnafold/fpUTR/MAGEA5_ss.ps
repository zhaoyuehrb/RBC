%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUCUGUGAGGAGGCAAGGUUCUCAGGGGACAGGCUGACCAGGAUCACCAGGAAGCUCCAGAGGAUCCCCAGGAGGCCCUAGAGGAGCACCAAAGGAGAAGAUCUGCCAGUGGGUCUCCAUUGCCCAGCUCCUGCCCACACUCCUGCCUGUUGCGGUGACCAGAGUCGUC\
) } def
/len { sequence length } bind def

/coor [
[121.70677948 356.17282104]
[131.53459167 343.49237061]
[130.98992920 328.50225830]
[130.44526672 313.51214600]
[129.90060425 298.52203369]
[129.35592651 283.53192139]
[128.81126404 268.54183960]
[128.26660156 253.55171204]
[127.04219818 238.60177612]
[125.14058685 223.72279358]
[123.10395050 208.86170959]
[120.93246460 194.01971436]
[111.43420410 182.54660034]
[117.09220886 167.77171326]
[114.92073059 152.92971802]
[112.74924469 138.08773804]
[110.57776642 123.24574280]
[88.92591858 119.80794525]
[80.30534363 102.45860291]
[65.82234955 98.55439758]
[51.33935165 94.65019226]
[36.00096130 98.52889252]
[25.72622871 87.74561310]
[11.24323273 83.84140778]
[-3.23976326 79.93720245]
[-17.72275925 76.03299713]
[-35.38175201 81.19374084]
[-47.29713058 68.33073425]
[-61.84863663 64.69016266]
[-76.40013885 61.04958725]
[-90.95163727 57.40901184]
[-105.50314331 53.76844025]
[-123.67677307 66.96341705]
[-145.42231750 62.56715393]
[-156.76029968 43.81607056]
[-171.62138367 41.77943420]
[-186.48248291 39.74280167]
[-201.34358215 37.70616913]
[-212.09291077 44.87678146]
[-224.44824219 42.85155106]
[-231.85446167 33.25903702]
[-246.67613220 30.95288467]
[-261.50180054 36.47650528]
[-272.88818359 26.87446213]
[-287.70983887 24.56830978]
[-302.80007935 30.98831367]
[-315.74066162 20.91489220]
[-313.21939087 4.71071672]
[-297.82995605 -0.95474499]
[-285.40368652 9.74664688]
[-270.58203125 12.05280018]
[-256.81652832 6.36422539]
[-244.36997986 16.13122177]
[-229.54830933 18.43737411]
[-213.56797791 11.22198200]
[-199.30694580 22.84507561]
[-184.44584656 24.88170815]
[-169.58476257 26.91834068]
[-154.72366333 28.95497513]
[-150.46310425 22.05177879]
[-144.32711792 16.69396019]
[-136.85076904 13.37530422]
[-128.69398499 12.41061020]
[-120.58319092 13.90593433]
[-113.24670410 17.74734306]
[-107.34931946 23.60932922]
[-103.43205261 30.98231888]
[-101.86256409 39.21693802]
[-87.31106567 42.85750961]
[-72.75955963 46.49808502]
[-58.20806122 50.13865662]
[-43.65655899 53.77923203]
[-33.10239410 47.82287979]
[-20.93227005 50.76293564]
[-13.81855202 61.54999924]
[0.66444385 65.45420837]
[15.14743996 69.35841370]
[29.63043594 73.26261902]
[43.93290710 69.10466003]
[55.24356079 80.16719818]
[69.72655487 84.07140350]
[84.20954895 87.97560883]
[96.48713684 78.54085541]
[113.26047516 80.42694092]
[124.93686676 94.48580933]
[138.10501099 87.30251312]
[151.27316284 80.11920929]
[164.44131470 72.93590546]
[177.60946655 65.75260925]
[175.79252625 49.79422379]
[180.22094727 34.39534378]
[190.18983459 21.90032196]
[204.15316772 14.19963264]
[219.96350098 12.44388390]
[235.20220947 16.87197495]
[247.54948425 26.77908516]
[260.58502197 19.35785484]
[273.62057495 11.93662548]
[286.65612793 4.51539564]
[299.69165039 -2.90583467]
[286.22775269 -9.51822090]
[282.82135010 -24.12631226]
[291.97171021 -36.01204681]
[306.96517944 -36.45478058]
[316.80093384 -25.12967110]
[314.26309204 -10.34703159]
[327.91784668 -16.55572319]
[341.57260132 -22.76441383]
[351.90609741 -37.98585129]
[369.28372192 -35.65095139]
[382.82345581 -42.10656738]
[396.36322021 -48.56218719]
[409.90298462 -55.01780319]
[423.44274902 -61.47341919]
[436.98248291 -67.92903900]
[445.82217407 -81.74178314]
[462.18963623 -80.72256470]
[469.24740601 -65.91986847]
[459.73507690 -52.56143570]
[443.43811035 -54.38928223]
[429.89834595 -47.93366241]
[416.35858154 -41.47804642]
[402.81884766 -35.02243042]
[389.27908325 -28.56681061]
[375.73931885 -22.11119461]
[371.39160156 -10.79899693]
[360.13430786 -5.31908369]
[347.78128052 -9.10966587]
[334.12655640 -2.90097451]
[320.47180176 3.30771685]
[307.11288452 10.12970638]
[294.07733154 17.55093765]
[281.04180908 24.97216797]
[268.00625610 32.39339828]
[254.97071838 39.81462860]
[257.24734497 53.68068314]
[254.64292908 67.51934814]
[247.45098877 79.66062164]
[236.51985168 88.63222504]
[223.15272522 93.33815002]
[208.95227051 93.19251251]
[195.62847900 88.19242096]
[184.79277039 78.92076111]
[171.62461853 86.10405731]
[158.45646667 93.28736115]
[145.28831482 100.47065735]
[132.12016296 107.65396118]
[125.41975403 121.07425690]
[127.59123230 135.91624451]
[129.76271057 150.75823975]
[131.93420410 165.60023499]
[141.58778381 178.13493347]
[135.77445984 191.84823608]
[137.94593811 206.69023132]
[142.29876709 214.76242065]
[140.01956177 221.82118225]
[141.92117310 236.70016479]
[153.16011047 226.76605225]
[167.96531677 229.17561340]
[175.47410583 242.16091919]
[170.17721558 256.19454956]
[155.96102905 260.97994995]
[143.25671387 253.00704956]
[143.80137634 267.99716187]
[144.34603882 282.98727417]
[144.89070129 297.97738647]
[145.43536377 312.96749878]
[145.98004150 327.95758057]
[146.52470398 342.94769287]
[157.24687195 354.88146973]
[154.45982361 370.68057251]
[140.30155945 378.22531128]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 157]
[10 156]
[11 154]
[12 153]
[14 151]
[15 150]
[16 149]
[17 148]
[19 82]
[20 81]
[21 80]
[23 78]
[24 77]
[25 76]
[26 75]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[35 59]
[36 58]
[37 57]
[38 56]
[41 54]
[42 53]
[44 51]
[45 50]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[106 130]
[107 129]
[108 128]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
