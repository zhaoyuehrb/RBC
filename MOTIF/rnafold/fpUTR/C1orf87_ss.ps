%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGAGAGUGUCAGCUUCCUGGGGAGAAGCACGGACCGCGCACCUCUGAGCUGCCAGGGUGGGGACGCUGCCCUAGCGGGAUCUGAAGGGAUUUUGAAAGGAAUC\
) } def
/len { sequence length } bind def

/coor [
[184.63406372 227.76188660]
[178.52249146 225.08982849]
[173.06214905 221.23907471]
[168.47784424 216.36253357]
[164.95944214 210.65550232]
[162.65400696 204.34776306]
[161.65963745 197.69441223]
[162.02130127 190.96543884]
[163.72889709 184.43490601]
[166.71734619 178.36965942]
[156.18745422 167.68692017]
[145.65754700 157.00416565]
[135.12763977 146.32141113]
[124.59774017 135.63865662]
[114.06784058 124.95590973]
[99.74052429 128.64671326]
[85.48241425 124.69699097]
[75.09637451 114.16018677]
[71.35252380 99.84663391]
[75.24940491 85.57398987]
[64.71950531 74.89124298]
[54.18960571 64.20848846]
[43.65970230 53.52573776]
[33.12980270 42.84298706]
[22.59989929 32.16023636]
[11.18679428 22.42673492]
[-1.02424133 13.71521282]
[-13.23527718 5.00369120]
[-25.44631195 -3.70783067]
[-40.83665466 -1.30467665]
[-53.09627914 -10.31334972]
[-55.29247665 -25.00049782]
[-67.50350952 -33.71202087]
[-83.23138428 -35.42802429]
[-89.09867859 -49.11831284]
[-101.30971527 -57.82983398]
[-117.71538544 -62.10655975]
[-118.14733887 -79.05500793]
[-101.98081970 -84.16187286]
[-92.59819794 -70.04087067]
[-80.38716125 -61.32934952]
[-65.53270721 -60.23645020]
[-58.79198837 -45.92305374]
[-46.58095169 -37.21153259]
[-31.97853851 -39.91431808]
[-19.47071266 -31.25354767]
[-16.73479080 -15.91886616]
[-4.52375460 -7.20734406]
[7.68728065 1.50417793]
[19.89831543 10.21570015]
[19.50620079 -4.77917433]
[29.63759804 -15.84058475]
[44.60917664 -16.76350403]
[56.02245712 -7.03020716]
[57.47502136 7.89929581]
[48.15203857 19.65012360]
[33.28264999 21.63033295]
[43.81255341 32.31308365]
[54.34245300 42.99583817]
[64.87235260 53.67858887]
[75.40225983 64.36133575]
[85.93215942 75.04409027]
[100.25947571 71.35328674]
[114.51758575 75.30300903]
[124.90362549 85.83981323]
[128.64747620 100.15336609]
[124.75059509 114.42601013]
[135.28050232 125.10875702]
[145.81039429 135.79150391]
[156.34030151 146.47425842]
[166.87019348 157.15701294]
[177.40010071 167.83976746]
[202.49795532 163.97926331]
[222.88549805 178.75344849]
[226.96090698 203.38137817]
[240.48881531 209.86180115]
[254.01670837 216.34222412]
[268.76397705 211.32667542]
[282.39089966 218.09146118]
[287.08157349 232.18164062]
[300.60946655 238.66204834]
[314.13735962 245.14247131]
[327.66525269 251.62289429]
[341.19317627 258.10330200]
[354.72106934 264.58374023]
[368.24896240 271.06414795]
[381.77688599 277.54458618]
[398.07717896 275.74661255]
[407.56500244 289.12243652]
[400.48010254 303.91217041]
[384.11080933 304.90139771]
[375.29644775 291.07247925]
[361.76855469 284.59207153]
[348.24066162 278.11163330]
[334.71273804 271.63122559]
[321.18484497 265.15078735]
[307.65695190 258.67037964]
[294.12902832 252.18995667]
[280.60113525 245.70953369]
[266.68161011 250.88465881]
[252.87005615 244.50531006]
[247.53628540 229.87011719]
[234.00839233 223.38970947]
[220.48048401 216.90928650]
[215.88180542 221.64576721]
[210.41670227 225.36944580]
[204.30497742 227.92501831]
[197.79351807 229.20429993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 72]
[11 71]
[12 70]
[13 69]
[14 68]
[15 67]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 50]
[27 49]
[28 48]
[29 47]
[32 44]
[33 43]
[35 41]
[36 40]
[75 104]
[76 103]
[77 102]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
