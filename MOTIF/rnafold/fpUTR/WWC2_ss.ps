%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGAACAGCGUUUCCUGAGGCACCUCCCGCGCGUGGUUCCGCCGCGCCCCGCGCCCUGCGCCCCUCAGCCCCUCGCCGGCGCCCGCGUCGCGGGUUGGCAGCCUAGCCCGGCAGCCGCGUUCCCGCCGCGUCCCGCGCCCGGUACCUAUGGAGGCGCCGCUCGCCGGCGAGGCCGCCGACC\
) } def
/len { sequence length } bind def

/coor [
[173.25755310 433.23468018]
[187.46726990 438.04187012]
[183.39875793 423.60418701]
[179.33024597 409.16647339]
[175.26173401 394.72875977]
[161.24830627 389.75265503]
[152.75161743 377.33209229]
[153.20309448 362.11206055]
[162.63911438 349.93551636]
[158.57060242 335.49783325]
[154.50209045 321.06011963]
[150.43359375 306.62240601]
[146.36508179 292.18472290]
[142.29656982 277.74700928]
[138.22805786 263.30932617]
[134.15954590 248.87161255]
[121.08056641 241.83772278]
[116.74884796 227.25379944]
[124.21532440 213.58303833]
[120.14681244 199.14533997]
[116.07830048 184.70764160]
[105.17897797 174.55609131]
[108.88316345 159.17462158]
[104.81465149 144.73690796]
[100.74614716 130.29920959]
[76.07401276 118.60499573]
[70.81848907 91.81230164]
[57.82810974 84.31230164]
[44.83773041 76.81230164]
[31.84734726 69.31230164]
[18.85696602 61.81230164]
[5.86658573 54.31230164]
[-7.18769312 46.92407990]
[-20.30490685 39.64818192]
[-33.42212296 32.37228394]
[-46.53933716 25.09638786]
[-59.65655136 17.82048988]
[-69.95286560 21.42289162]
[-80.31549835 18.80405045]
[-87.36760712 11.06724167]
[-88.94953156 0.94140601]
[-101.80925751 -6.78048611]
[-114.66897583 -14.50237846]
[-127.52869415 -22.22426987]
[-140.38841248 -29.94616127]
[-149.38108826 -31.68845749]
[-153.40100098 -37.91260147]
[-166.12626648 -45.85411072]
[-186.81002808 -35.02877808]
[-209.74676514 -38.67819977]
[-225.88165283 -55.21643448]
[-228.93185425 -77.99818420]
[-242.82672119 -83.64910889]
[-256.72158813 -89.30002594]
[-270.61642456 -94.95094299]
[-287.56643677 -95.31711578]
[-291.90679932 -111.70606232]
[-277.35986328 -120.41371155]
[-264.96551514 -108.84580231]
[-251.07064819 -103.19488525]
[-237.17579651 -97.54396820]
[-223.28092957 -91.89304352]
[-218.47554016 -97.71495819]
[-212.56561279 -102.42981720]
[-205.80149841 -105.83197784]
[-198.47093201 -107.77149963]
[-190.88681030 -108.16078949]
[-183.37385559 -106.97853088]
[-176.25473022 -104.27077484]
[-169.83610535 -100.14920807]
[-164.39552307 -94.78650665]
[-160.16935730 -88.40915680]
[-157.34257507 -81.28782654]
[-156.04060364 -73.72594452]
[-156.32382202 -66.04672241]
[-158.18475342 -58.57938004]
[-145.45948792 -50.63787079]
[-132.66651917 -42.80588150]
[-119.80680084 -35.08398819]
[-106.94708252 -27.36209679]
[-94.08736420 -19.64020538]
[-81.22764587 -11.91831303]
[-61.93774414 -13.02716064]
[-52.38065338 4.70327568]
[-39.26343918 11.97917366]
[-26.14622498 19.25507164]
[-13.02900982 26.53096962]
[0.08820471 33.80686569]
[7.48099184 34.30310822]
[13.36658573 41.32192230]
[26.35696602 48.82192230]
[39.34734726 56.32192230]
[52.33773041 63.82192230]
[65.32810974 71.32192230]
[78.31848907 78.82192230]
[83.43622589 68.24091339]
[93.23906708 59.22721100]
[107.09624481 53.70055389]
[114.92823792 40.90758896]
[122.76022339 28.11462402]
[123.36687469 12.30505371]
[136.61106873 5.49031353]
[144.44305420 -7.30265141]
[152.27503967 -20.09561539]
[148.33580017 -35.40110016]
[156.44476318 -48.96650696]
[171.79103088 -52.74371719]
[185.26994324 -44.49178314]
[188.88470459 -29.10643005]
[180.49072266 -15.71551323]
[165.06800842 -12.26362801]
[157.23602295 0.52933741]
[149.40403748 13.32230282]
[149.35757446 28.21683502]
[135.55319214 35.94661331]
[127.72119904 48.73957825]
[119.88921356 61.53254318]
[130.26577759 72.36429596]
[143.38299561 65.08839417]
[156.50021362 57.81249619]
[164.47389221 43.48237610]
[180.87304688 43.49331284]
[188.82760620 57.83405304]
[180.15461731 71.75207520]
[163.77610779 70.92971039]
[150.65888977 78.20561218]
[137.54168701 85.48150635]
[142.34802246 99.69062042]
[157.18861389 97.50956726]
[172.02920532 95.32851410]
[186.86978149 93.14746094]
[201.66142273 84.86231232]
[213.71752930 96.78232574]
[205.60079956 111.66706085]
[189.05084229 107.98804474]
[174.21025085 110.16909790]
[159.36967468 112.35015106]
[144.52908325 114.53121185]
[137.51805115 120.40341187]
[129.97605896 124.27774811]
[122.38169098 126.17756653]
[115.18384552 126.23070526]
[119.25235748 140.66839600]
[123.32086182 155.10610962]
[134.51119995 166.29034424]
[130.51600647 180.63912964]
[134.58451843 195.07682800]
[138.65301514 209.51452637]
[152.15885925 217.27534485]
[156.07923889 231.97518921]
[148.59725952 244.80310059]
[152.66575623 259.24081421]
[156.73426819 273.67849731]
[160.80278015 288.11621094]
[164.87129211 302.55392456]
[168.93980408 316.99160767]
[173.00830078 331.42932129]
[177.07681274 345.86700439]
[191.48222351 351.32510376]
[199.81414795 364.06997681]
[199.05279541 379.09942627]
[189.69944763 390.66027832]
[193.76794434 405.09796143]
[197.83645630 419.53567505]
[201.90496826 433.97335815]
[206.58917236 448.22320557]
[211.88046265 462.25897217]
[217.17173767 476.29473877]
[222.46301270 490.33047485]
[227.75430298 504.36624146]
[240.77272034 514.33880615]
[238.37741089 530.56207275]
[223.03245544 536.34692383]
[210.52342224 525.74237061]
[213.71855164 509.65750122]
[208.42726135 495.62176514]
[203.13598633 481.58599854]
[197.84471130 467.55026245]
[192.55342102 453.51449585]
[183.96820068 465.81466675]
[169.01103210 466.94738770]
[158.67134094 456.08044434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[19 148]
[20 147]
[21 146]
[23 144]
[24 143]
[25 142]
[27 95]
[28 94]
[29 93]
[30 92]
[31 91]
[32 90]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[47 77]
[48 76]
[52 62]
[53 61]
[54 60]
[55 59]
[98 117]
[99 116]
[100 115]
[102 113]
[103 112]
[104 111]
[118 127]
[119 126]
[120 125]
[128 138]
[129 137]
[130 136]
[131 135]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
