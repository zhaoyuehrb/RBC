%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXO4)
} def

/sequence { (\
GGAGGCUGACGCGCUAGCGUGGCUCUAAGACGCGUCACCCACGCUGCGGGCAAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.019348187 ubox
1 39 0.005109870 ubox
1 40 0.014138604 ubox
1 45 0.011738640 ubox
1 56 0.017383390 ubox
2 25 0.020485585 ubox
2 38 0.005144784 ubox
2 39 0.011425986 ubox
2 44 0.012416951 ubox
2 55 0.016923626 ubox
3 24 0.019462846 ubox
3 26 0.006592404 ubox
4 23 0.014388937 ubox
4 24 0.009589814 ubox
4 25 0.006755152 ubox
4 39 0.046313187 ubox
4 40 0.095704035 ubox
4 45 0.004671368 ubox
4 56 0.985050968 ubox
5 23 0.017796372 ubox
5 38 0.047260315 ubox
5 39 0.095639198 ubox
5 44 0.005064909 ubox
5 51 0.020721814 ubox
5 55 0.993546074 ubox
6 22 0.022116424 ubox
6 43 0.005080299 ubox
6 50 0.020748046 ubox
6 54 0.993561132 ubox
7 21 0.020913677 ubox
7 37 0.112533515 ubox
7 49 0.020233792 ubox
7 52 0.128452376 ubox
7 53 0.977366094 ubox
8 20 0.008464506 ubox
8 36 0.135255056 ubox
8 51 0.180929504 ubox
9 20 0.022579617 ubox
9 35 0.135308981 ubox
10 19 0.024359016 ubox
10 34 0.135328961 ubox
10 48 0.125935444 ubox
11 18 0.024371236 ubox
11 33 0.135331411 ubox
11 47 0.125801675 ubox
11 51 0.062775582 ubox
12 17 0.024362103 ubox
12 32 0.135330936 ubox
12 46 0.124769307 ubox
12 48 0.978896137 ubox
12 50 0.059575389 ubox
13 23 0.006001357 ubox
13 31 0.135143083 ubox
13 44 0.012580238 ubox
13 45 0.060650516 ubox
13 47 0.981573751 ubox
13 51 0.004473272 ubox
14 22 0.006473511 ubox
14 29 0.133627592 ubox
14 43 0.012844640 ubox
14 46 0.963575943 ubox
14 49 0.022457138 ubox
14 50 0.004494797 ubox
15 21 0.006414745 ubox
15 27 0.033692761 ubox
15 28 0.128740414 ubox
15 46 0.189490865 ubox
15 48 0.018696284 ubox
15 49 0.003812764 ubox
16 20 0.005348893 ubox
16 24 0.124189547 ubox
16 26 0.043834305 ubox
16 45 0.967505917 ubox
17 23 0.125911481 ubox
17 25 0.042666978 ubox
17 35 0.003281221 ubox
17 44 0.990370671 ubox
18 22 0.125092688 ubox
18 34 0.003386279 ubox
18 43 0.990386169 ubox
19 33 0.003666843 ubox
19 38 0.035325868 ubox
19 42 0.989811914 ubox
20 27 0.003423024 ubox
20 32 0.003735416 ubox
20 37 0.043816842 ubox
20 41 0.989263808 ubox
21 26 0.003182793 ubox
21 31 0.003950722 ubox
21 36 0.052155728 ubox
21 39 0.064497950 ubox
21 40 0.986902444 ubox
22 33 0.187719663 ubox
22 35 0.068438117 ubox
22 38 0.089066533 ubox
22 39 0.959971120 ubox
22 51 0.007836973 ubox
23 29 0.150187119 ubox
23 32 0.255266566 ubox
23 34 0.146573809 ubox
23 50 0.007860301 ubox
24 28 0.135616457 ubox
24 30 0.166920479 ubox
24 49 0.007753605 ubox
25 29 0.167108518 ubox
25 48 0.007678578 ubox
26 46 0.003550679 ubox
27 45 0.003519099 ubox
28 45 0.003692083 ubox
29 36 0.291988743 ubox
30 35 0.259408404 ubox
31 48 0.003837466 ubox
32 44 0.018503639 ubox
32 47 0.003871626 ubox
32 55 0.014423866 ubox
33 43 0.018580632 ubox
33 46 0.003861811 ubox
33 54 0.014449264 ubox
34 42 0.018614796 ubox
35 41 0.017850775 ubox
38 49 0.015601519 ubox
38 50 0.079415566 ubox
39 48 0.015629209 ubox
39 49 0.079768898 ubox
39 50 0.010934630 ubox
40 46 0.012639262 ubox
40 48 0.079694407 ubox
40 49 0.011157670 ubox
41 45 0.010407612 ubox
42 48 0.011556128 ubox
43 47 0.011593965 ubox
43 51 0.044237295 ubox
43 55 0.087794842 ubox
44 50 0.044271412 ubox
44 54 0.087974664 ubox
45 49 0.039884354 ubox
45 52 0.021252235 ubox
45 53 0.085117443 ubox
46 51 0.029764649 ubox
46 55 0.040804416 ubox
47 54 0.040934416 ubox
48 56 0.018328100 ubox
49 55 0.018478378 ubox
49 56 0.007163168 ubox
50 55 0.007213463 ubox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
showpage
end
%%EOF
