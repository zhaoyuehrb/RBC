%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGCGCCGGGAGCCGCGGGCCGGGCCAGCCGGGCCGCCGGGGCCCAGUGCGCCGCGCUCGCAGCCGGUAGCGCGCCAGCGCCGUAGGCGCUCGCUCGGCAGCCGCGGGGCCCUAGGCCGUGCCGGGGAGGGGGCGAGGGCGGCGCCCAGGCGCCUGCCGCCCCGGAGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[12.81906509 185.88122559]
[6.15815926 186.43835449]
[-0.29450393 184.90446472]
[-5.90403986 181.46357727]
[-18.93881607 188.88615417]
[-31.97359085 196.30873108]
[-45.00836563 203.73130798]
[-58.04314423 211.15386963]
[-71.07791901 218.57644653]
[-79.24134827 232.12890625]
[-94.12986755 231.70324707]
[-107.16464996 239.12582397]
[-120.19942474 246.54840088]
[-124.48290253 261.52468872]
[-137.80775452 268.86654663]
[-152.05897522 264.69061279]
[-165.09375000 272.11318970]
[-178.12852478 279.53576660]
[-191.09652710 287.07440186]
[-203.99674988 294.72845459]
[-216.89695740 302.38247681]
[-224.81718445 316.07849121]
[-239.71093750 315.91864014]
[-252.61114502 323.57269287]
[-265.51135254 331.22674561]
[-278.41159058 338.88079834]
[-283.75637817 354.00735474]
[-298.96176147 359.12353516]
[-312.36349487 350.30462646]
[-313.68090820 334.31576538]
[-301.90338135 323.42221069]
[-286.06564331 325.98059082]
[-273.16540527 318.32653809]
[-260.26519775 310.67248535]
[-247.36499023 303.01843262]
[-240.36746216 289.86990356]
[-224.55101013 289.48226929]
[-211.65080261 281.82821655]
[-198.75057983 274.17416382]
[-194.58905029 268.03701782]
[-185.55110168 266.50100708]
[-172.51632690 259.07843018]
[-159.48153687 251.65585327]
[-155.80093384 237.26875305]
[-142.68756104 229.55551147]
[-127.62199402 233.51362610]
[-114.58721924 226.09104919]
[-101.55244446 218.66847229]
[-94.32135010 205.64692688]
[-78.50049591 205.54167175]
[-65.46572113 198.11909485]
[-52.43094254 190.69653320]
[-39.39616776 183.27395630]
[-26.36139107 175.85137939]
[-13.32661533 168.42880249]
[-4.15634346 147.18949890]
[19.69645691 147.11705017]
[31.86311150 138.34365845]
[35.46106720 131.86000061]
[44.32614136 129.52453613]
[56.64745331 120.96968842]
[68.96876526 112.41484833]
[66.65376282 97.74286652]
[70.92481995 83.51667786]
[80.93836975 72.54603577]
[94.71669006 66.99768829]
[109.53849792 67.96746826]
[122.47639465 75.26383972]
[134.79771423 66.70899963]
[147.11901855 58.15415955]
[159.44032288 49.59931946]
[171.76164246 41.04447937]
[184.08294678 32.48963928]
[189.36920166 24.99967384]
[196.70141602 23.89437485]
[209.17346191 15.56082153]
[221.64549255 7.22726822]
[234.11753845 -1.10628533]
[246.58958435 -9.43983841]
[254.64208984 -27.89698029]
[273.95288086 -28.40209198]
[286.11953735 -37.17549133]
[298.28619385 -45.94889450]
[310.45285034 -54.72229385]
[322.61947632 -63.49569321]
[334.78613281 -72.26908875]
[346.95278931 -81.04249573]
[347.13925171 -96.44610596]
[356.25354004 -108.64376831]
[370.63253784 -113.08319855]
[384.70007324 -108.26213074]
[396.86672974 -117.03553772]
[409.03338623 -125.80893707]
[421.20004272 -134.58233643]
[433.36669922 -143.35572815]
[440.03463745 -157.70317078]
[454.88336182 -158.87145996]
[467.05001831 -167.64485168]
[479.21667480 -176.41825867]
[478.99801636 -184.83511353]
[482.10687256 -192.55838013]
[487.96188354 -198.34400940]
[495.54611206 -201.29229736]
[503.58325195 -200.98736572]
[510.75234985 -197.55419922]
[523.51391602 -205.43728638]
[536.27545166 -213.32037354]
[548.96612549 -221.31704712]
[561.58489990 -229.42665100]
[569.01129150 -243.39662170]
[583.90124512 -243.76847839]
[596.52001953 -251.87808228]
[609.13885498 -259.98770142]
[621.75762939 -268.09732056]
[631.81347656 -281.74710083]
[647.71356201 -275.86288452]
[646.46087646 -258.95529175]
[629.86724854 -255.47851562]
[617.24841309 -247.36889648]
[604.62963867 -239.25927734]
[592.01086426 -231.14967346]
[585.48706055 -217.75976562]
[569.69451904 -216.80784607]
[557.07574463 -208.69824219]
[553.13592529 -202.41645813]
[544.15850830 -200.55883789]
[531.39697266 -192.67575073]
[518.63543701 -184.79266357]
[510.37588501 -164.79910278]
[487.99008179 -164.25160217]
[475.82342529 -155.47821045]
[463.65676880 -146.70480347]
[457.85903931 -132.98490906]
[442.14007568 -131.18908691]
[429.97341919 -122.41567993]
[417.80676270 -113.64228058]
[405.64013672 -104.86888123]
[393.47348022 -96.09548187]
[393.60531616 -81.22535706]
[384.85217285 -68.98416138]
[370.40042114 -64.18829346]
[355.72619629 -68.87583923]
[343.55953979 -60.10243988]
[331.39288330 -51.32904053]
[319.22622681 -42.55564117]
[307.05957031 -33.78223801]
[294.89291382 -25.00883865]
[282.72628784 -16.23543930]
[281.99740601 -6.00359917]
[275.60928345 2.30151343]
[265.49090576 5.77425432]
[254.92314148 3.03220534]
[242.45109558 11.36575890]
[229.97904968 19.69931221]
[217.50700378 28.03286552]
[205.03495789 36.36642075]
[192.63778687 44.81095123]
[180.31648254 53.36579132]
[167.99516296 61.92063141]
[155.67385864 70.47547150]
[143.35253906 79.03031158]
[131.03123474 87.58515167]
[133.34623718 102.25713348]
[129.07518005 116.48332214]
[119.06163025 127.45396423]
[105.28330994 133.00231934]
[90.46150208 132.03253174]
[77.52360535 124.73616028]
[65.20229340 133.29100037]
[52.88098145 141.84584045]
[40.63651276 150.51029968]
[28.46985817 159.28370667]
[29.14055252 166.19387817]
[27.63634491 172.91864014]
[24.13837433 178.79566956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 55]
[5 54]
[6 53]
[7 52]
[8 51]
[9 50]
[11 48]
[12 47]
[13 46]
[16 43]
[17 42]
[18 41]
[19 39]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[26 32]
[57 172]
[58 171]
[60 170]
[61 169]
[62 168]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[97 132]
[98 131]
[99 130]
[105 128]
[106 127]
[107 126]
[108 124]
[109 123]
[111 121]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
