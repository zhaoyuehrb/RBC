%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGAAAAGUUCAGCAGUUGAGAAUUUAUCAUUCAAUAGAAUUGUGGGGUGAGGUGAGGGCAGGAGUGAGGGAGCUUUUUUAACUUCUGGAGUACUUUGUGAUGUUUAUUAAUAUUUUCUUUCUUUUUGUUAUUAAUACUGGUCUAGUAAUAUUCUUCUAUACCAUUUGGUGAUAACUUUUGGAGUCCAA\
) } def
/len { sequence length } bind def

/coor [
[1.82348406 124.59806061]
[-13.03316784 126.66684723]
[-27.88982010 128.73564148]
[-42.74647141 130.80442810]
[-57.60312271 132.87321472]
[-72.45977783 134.94200134]
[-87.31642914 137.01080322]
[-102.17308044 139.07958984]
[-117.02973175 141.14837646]
[-131.88638306 143.21716309]
[-146.74304199 145.28594971]
[-161.59968567 147.35473633]
[-176.45634460 149.42352295]
[-191.31298828 151.49232483]
[-201.59339905 165.63725281]
[-218.58760071 167.93305969]
[-231.72494507 157.44406128]
[-246.54595947 159.75439453]
[-258.98974609 169.52490234]
[-272.75686646 163.84020996]
[-287.57785034 166.15055847]
[-292.06979370 180.69648743]
[-302.38973999 191.80438232]
[-316.45159912 197.30752563]
[-331.44671631 196.16427612]
[-344.40502930 188.65480042]
[-352.78311157 176.31491089]
[-367.60412598 178.62524414]
[-382.42514038 180.93557739]
[-397.24612427 183.24591064]
[-412.02758789 185.79719543]
[-426.76553345 188.58871460]
[-441.50347900 191.38024902]
[-456.24145508 194.17178345]
[-470.97940063 196.96330261]
[-485.71734619 199.75483704]
[-497.83651733 209.92521667]
[-511.78137207 204.69165039]
[-526.51934814 207.48318481]
[-541.25732422 210.27470398]
[-553.32550049 221.37831116]
[-568.89263916 216.22116089]
[-571.94458008 200.10850525]
[-559.34173584 189.61564636]
[-544.04882812 195.53675842]
[-529.31085205 192.74522400]
[-514.57293701 189.95368958]
[-503.50790405 179.98298645]
[-488.50888062 185.01687622]
[-473.77093506 182.22535706]
[-459.03298950 179.43382263]
[-444.29501343 176.64228821]
[-429.55706787 173.85076904]
[-414.81912231 171.05923462]
[-411.42993164 167.67478943]
[-405.87371826 166.39302063]
[-399.55648804 168.42491150]
[-384.73547363 166.11457825]
[-369.91445923 163.80422974]
[-355.09344482 161.49389648]
[-350.86874390 147.18945312]
[-340.81091309 136.09216309]
[-326.87521362 130.43910217]
[-311.80554199 131.40115356]
[-298.59432983 138.84095764]
[-289.88821411 151.32954407]
[-275.06719971 149.01921082]
[-263.68350220 139.41395569]
[-248.85629272 144.93338013]
[-234.03527832 142.62304688]
[-227.96075439 131.24954224]
[-216.26800537 125.36782837]
[-203.13002014 127.32808685]
[-193.38177490 136.63566589]
[-178.52513123 134.56687927]
[-163.66847229 132.49809265]
[-148.81182861 130.42930603]
[-133.95516968 128.36050415]
[-119.09851837 126.29172516]
[-104.24186707 124.22293091]
[-89.38521576 122.15414429]
[-74.52856445 120.08535767]
[-59.67191315 118.01656342]
[-44.81526184 115.94777679]
[-29.95860863 113.87899017]
[-15.10195732 111.81019592]
[-0.24530497 109.74140930]
[8.50067711 97.73960114]
[23.53796387 95.42991638]
[36.06726456 104.68488312]
[50.92391586 102.61609650]
[65.78057098 100.54730225]
[80.63722229 98.47851562]
[65.66568756 97.55487061]
[53.34353256 89.00124359]
[47.24340439 75.29764557]
[49.13395309 60.41726685]
[58.46704102 48.67446136]
[72.53665924 43.47390366]
[87.26351166 46.32342911]
[98.37774658 56.39685440]
[102.65692902 70.77352142]
[98.86160278 85.28299713]
[105.46398163 71.81419373]
[112.06636047 58.34539032]
[118.66873169 44.87659073]
[125.27111053 31.40778732]
[131.87348938 17.93898582]
[130.22285461 1.62312126]
[143.68386841 -7.74347591]
[158.40899658 -0.52525282]
[159.25027466 15.85230064]
[145.34228516 24.54136276]
[138.73991394 38.01016617]
[132.13754272 51.47896576]
[125.53516388 64.94776917]
[118.93278503 78.41657257]
[112.33040619 91.88537598]
[115.18643188 98.82029724]
[129.05636597 93.10846710]
[134.76797485 106.97848511]
[120.89846802 112.69013977]
[123.75449371 119.62506104]
[137.92707825 124.53807068]
[152.09967041 129.45108032]
[166.27226257 134.36408997]
[177.90359497 124.43134308]
[192.84629822 121.67235565]
[207.06918335 126.72963715]
[216.78602600 138.15061951]
[219.46351624 152.80314636]
[233.63610840 157.71615601]
[247.80870056 162.62916565]
[261.98129272 167.54217529]
[276.15386963 172.45520020]
[290.32647705 177.36820984]
[304.49905396 182.28121948]
[316.88119507 171.33419800]
[333.00115967 168.13919067]
[348.44522095 173.47454834]
[359.03326416 185.79611206]
[361.95004272 201.68257141]
[376.20071411 206.36424255]
[390.45141602 211.04591370]
[404.70208740 215.72758484]
[420.22778320 212.68399048]
[429.90435791 224.00711060]
[444.15505981 228.68878174]
[458.40573120 233.37045288]
[469.79934692 223.07090759]
[484.81967163 219.86373901]
[499.42626953 224.61166382]
[509.69006348 236.03752136]
[512.85009766 251.06779480]
[508.05642700 265.65945435]
[496.59848022 275.88735962]
[481.55834961 279.00030518]
[466.98181152 274.16091919]
[456.78985596 262.67092896]
[453.72406006 247.62113953]
[439.47335815 242.93946838]
[425.22268677 238.25779724]
[410.71630859 241.63624573]
[400.02041626 229.97827148]
[385.76974487 225.29660034]
[371.51904297 220.61492920]
[357.26837158 215.93325806]
[347.70507812 225.69450378]
[334.80603027 230.40258789]
[321.07156372 229.08415222]
[309.19021606 221.93997192]
[301.51257324 210.31678772]
[299.58605957 196.45381165]
[285.41345215 191.54078674]
[271.24087524 186.62777710]
[257.06826782 181.71476746]
[242.89569092 176.80175781]
[228.72309875 171.88874817]
[214.55050659 166.97573853]
[203.37854004 176.82728577]
[188.67767334 179.78372192]
[174.37629700 174.95289612]
[164.34727478 163.53732300]
[161.35925293 148.53668213]
[147.18666077 143.62367249]
[133.01406860 138.71066284]
[118.84148407 133.79765320]
[82.70600891 113.33516693]
[67.84935760 115.40396118]
[52.99270630 117.47274780]
[38.13605499 119.54153442]
[28.61189079 131.86744690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[8 80]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[14 74]
[17 70]
[18 69]
[20 67]
[21 66]
[27 60]
[28 59]
[29 58]
[30 57]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[38 47]
[39 46]
[40 45]
[90 191]
[91 190]
[92 189]
[93 188]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[123 187]
[124 186]
[125 185]
[126 184]
[131 179]
[132 178]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[142 167]
[143 166]
[144 165]
[145 164]
[147 162]
[148 161]
[149 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
