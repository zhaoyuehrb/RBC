%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACCGGCGCCGCGGCGGAGCCGCUCCCGAGGCCCCGGCGCGGCGCGAGGGCGCGGGGCGCGGCGUCCACAGGCGCCGAGGCUGCCCCCGCCGCCCCGCCCGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[112.92508698 157.17073059]
[111.62971497 142.22676086]
[110.33434296 127.28279877]
[101.03366089 128.07669067]
[92.31359863 125.90048981]
[85.06070709 121.20395660]
[79.93832397 114.68064117]
[77.32723236 107.17401886]
[62.32878876 106.95786285]
[47.33034515 106.74170685]
[32.33190155 106.52555084]
[17.33346176 106.30938721]
[2.33501840 106.09323120]
[-12.66342449 105.87707520]
[-27.66186714 105.66091919]
[-41.57210541 113.19854736]
[-54.18655777 105.27864838]
[-69.18499756 105.06249237]
[-84.18344116 104.84632874]
[-98.09368134 112.38396454]
[-110.70812988 104.46405792]
[-125.70657349 104.24790192]
[-140.70501709 104.03174591]
[-149.89753723 116.53283691]
[-164.69258118 121.21111298]
[-179.40115356 116.26768494]
[-188.36750793 103.60340118]
[-188.14390564 88.08793640]
[-178.81631470 75.68730164]
[-163.97138977 71.16979980]
[-149.31730652 76.27249908]
[-140.48886108 89.03330231]
[-125.49041748 89.24945831]
[-110.49197388 89.46561432]
[-97.65452576 81.91252899]
[-83.96728516 89.84789276]
[-68.96884155 90.06404877]
[-53.97039795 90.28020477]
[-41.13294983 82.72711182]
[-27.44570923 90.66247559]
[-12.44726658 90.87863159]
[2.55117559 91.09478760]
[17.54961777 91.31095123]
[32.54806137 91.52710724]
[47.54650116 91.74326324]
[62.54494476 91.95941925]
[77.54338837 92.17557526]
[87.06516266 78.45555115]
[104.06484222 73.83629608]
[120.88599396 81.61351776]
[129.16383362 99.21207428]
[143.48216248 94.74159241]
[150.87510681 89.11490631]
[158.27792358 90.35502625]
[172.71914673 86.29902649]
[187.16036987 82.24302673]
[201.60157776 78.18702698]
[216.04280090 74.13102722]
[230.48402405 70.07501984]
[244.92524719 66.01902008]
[239.88108826 47.06195831]
[254.22824097 24.85061073]
[266.18316650 15.79081059]
[278.13806152 6.73100948]
[290.09298706 -2.32879186]
[302.04791260 -11.38859272]
[314.00280762 -20.44839287]
[325.95773315 -29.50819397]
[331.82217407 -44.82291031]
[348.05764771 -47.13395691]
[357.96252441 -34.06392670]
[351.34747314 -19.05814934]
[335.01754761 -17.55327988]
[323.06262207 -8.49347782]
[311.10769653 0.56632274]
[299.15280151 9.62612343]
[287.19787598 18.68592453]
[275.24295044 27.74572563]
[263.28802490 36.80552673]
[264.57858276 44.19366074]
[268.45016479 66.35806274]
[282.76852417 70.82854462]
[297.08685303 75.29902649]
[310.15332031 66.70828247]
[325.67877197 68.57769775]
[336.33251953 80.02458954]
[337.08422852 95.64409637]
[327.57891846 108.06115723]
[312.30474854 111.41281891]
[298.47369385 104.11652374]
[292.61636353 89.61736298]
[278.29803467 85.14688110]
[263.97967529 80.67639923]
[248.98124695 80.46024323]
[234.54002380 84.51624298]
[220.09880066 88.57224274]
[205.65757751 92.62824249]
[191.21636963 96.68424988]
[176.77514648 100.74024963]
[162.33392334 104.79624939]
[147.95265198 109.05992889]
[133.63430786 113.53041840]
[125.27830505 125.98742676]
[126.57367706 140.93139648]
[127.86904907 155.87535095]
[137.70281982 168.99896240]
[131.00642395 183.96859741]
[114.66854095 185.38479614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[17 38]
[18 37]
[19 36]
[21 34]
[22 33]
[23 32]
[51 102]
[52 101]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
