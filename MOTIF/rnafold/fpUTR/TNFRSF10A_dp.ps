%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFRSF10A)
} def

/sequence { (\
GCAGGUGCCCCGAAAAGGGGGCGGGGUCAGGGGUGCCCUGAACUCCGAAUGCGAAGUUCUGUCUUGUCAUAGCCAAGCACGCUGCUUCUUGGAUUGACCUGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012918490 ubox
1 22 0.011942657 ubox
1 52 0.885751339 ubox
1 57 0.039727114 ubox
1 62 0.013029313 ubox
1 78 0.006207843 ubox
1 85 0.006915661 ubox
1 103 0.193332998 ubox
2 7 0.017403816 ubox
2 21 0.012221561 ubox
2 26 0.003902025 ubox
2 51 0.886247249 ubox
2 56 0.043396969 ubox
2 61 0.014290747 ubox
2 77 0.006204677 ubox
2 84 0.006977518 ubox
2 101 0.196859527 ubox
2 102 0.139957892 ubox
3 50 0.803628910 ubox
3 58 0.004157390 ubox
3 60 0.014320791 ubox
3 83 0.006960688 ubox
3 100 0.238088162 ubox
4 46 0.017115287 ubox
4 57 0.004425694 ubox
4 58 0.003910819 ubox
4 59 0.013833341 ubox
4 74 0.006445396 ubox
4 82 0.006902643 ubox
4 99 0.241405802 ubox
4 100 0.010440101 ubox
5 22 0.063097918 ubox
5 45 0.014439446 ubox
5 50 0.040775319 ubox
5 52 0.069311809 ubox
5 57 0.003794628 ubox
5 58 0.010103775 ubox
5 73 0.006451492 ubox
5 80 0.005696424 ubox
5 98 0.240694605 ubox
5 99 0.011175047 ubox
6 21 0.061828312 ubox
6 23 0.072603650 ubox
6 47 0.232014419 ubox
6 49 0.061961926 ubox
6 51 0.067348599 ubox
6 53 0.009857927 ubox
6 72 0.006127050 ubox
6 79 0.005535273 ubox
6 96 0.009867104 ubox
6 97 0.233500255 ubox
7 22 0.938225720 ubox
7 46 0.004930507 ubox
7 50 0.015518551 ubox
7 52 0.012183438 ubox
7 78 0.004944808 ubox
7 95 0.004592375 ubox
8 19 0.033351996 ubox
8 20 0.238046272 ubox
8 21 0.970047543 ubox
8 51 0.009025194 ubox
8 77 0.003986958 ubox
9 18 0.033188962 ubox
9 19 0.241035189 ubox
9 20 0.969888387 ubox
9 21 0.008817405 ubox
10 17 0.032950610 ubox
10 18 0.243188198 ubox
10 19 0.969357608 ubox
10 20 0.009064064 ubox
11 17 0.245279183 ubox
11 18 0.968631153 ubox
11 19 0.009230798 ubox
21 52 0.016228312 ubox
22 47 0.334519499 ubox
22 51 0.014905842 ubox
23 39 0.004911383 ubox
23 44 0.005154372 ubox
23 45 0.059284478 ubox
23 46 0.993278474 ubox
24 38 0.005311764 ubox
24 43 0.006384767 ubox
24 44 0.061632744 ubox
24 45 0.995495216 ubox
24 46 0.066547006 ubox
25 37 0.005315431 ubox
25 43 0.075491350 ubox
25 44 0.994015699 ubox
25 45 0.066452491 ubox
25 46 0.010546623 ubox
26 36 0.005316138 ubox
26 43 0.995857989 ubox
26 44 0.033944453 ubox
26 45 0.010544805 ubox
27 41 0.706756728 ubox
27 42 0.703622197 ubox
28 35 0.004594583 ubox
28 40 0.999151406 ubox
29 34 0.004490929 ubox
29 39 0.999107797 ubox
30 37 0.015838189 ubox
30 38 0.999190181 ubox
30 39 0.034989574 ubox
31 36 0.022284832 ubox
31 37 0.998987550 ubox
31 38 0.036149318 ubox
32 36 0.982844571 ubox
32 37 0.037104817 ubox
40 59 0.004084423 ubox
41 58 0.006652363 ubox
42 57 0.009891651 ubox
43 56 0.010219177 ubox
44 55 0.009962676 ubox
44 93 0.010031165 ubox
45 92 0.013155362 ubox
46 53 0.026834616 ubox
46 91 0.013581036 ubox
46 96 0.009896868 ubox
47 52 0.052471586 ubox
47 58 0.013393542 ubox
47 59 0.107266131 ubox
47 63 0.006146358 ubox
47 68 0.009187611 ubox
47 88 0.022736044 ubox
47 90 0.014435324 ubox
47 95 0.016049075 ubox
48 57 0.014507212 ubox
48 58 0.116714903 ubox
48 62 0.005585803 ubox
48 65 0.010888660 ubox
48 67 0.008421327 ubox
48 87 0.022740186 ubox
48 89 0.014341585 ubox
48 90 0.007920289 ubox
48 94 0.014607481 ubox
48 95 0.134126551 ubox
49 57 0.119753275 ubox
49 64 0.011149930 ubox
49 70 0.093512303 ubox
49 86 0.021617566 ubox
49 89 0.008109691 ubox
49 94 0.140869722 ubox
50 56 0.119100916 ubox
50 69 0.098004265 ubox
50 79 0.005343557 ubox
50 91 0.019979773 ubox
50 93 0.141107302 ubox
51 57 0.036134713 ubox
51 62 0.020175338 ubox
51 67 0.024553717 ubox
51 68 0.099128089 ubox
51 78 0.006231352 ubox
51 82 0.008681031 ubox
51 85 0.022454282 ubox
51 90 0.030913708 ubox
51 103 0.003215922 ubox
52 56 0.037749942 ubox
52 61 0.020947508 ubox
52 66 0.045703446 ubox
52 77 0.006236500 ubox
52 81 0.008695166 ubox
52 84 0.022432841 ubox
52 91 0.137394353 ubox
52 96 0.003447446 ubox
52 102 0.003211285 ubox
53 59 0.016934005 ubox
53 60 0.016701382 ubox
53 63 0.006607181 ubox
53 65 0.035638128 ubox
53 68 0.005089949 ubox
53 80 0.008621251 ubox
53 83 0.015852263 ubox
53 88 0.191424106 ubox
53 90 0.047568990 ubox
54 58 0.016546313 ubox
54 62 0.006393821 ubox
54 64 0.027519356 ubox
54 65 0.098384493 ubox
54 67 0.004626791 ubox
54 87 0.193804883 ubox
54 89 0.037954302 ubox
55 64 0.101447939 ubox
55 83 0.014940049 ubox
55 86 0.197400491 ubox
55 87 0.003635239 ubox
55 89 0.003338263 ubox
56 62 0.004567071 ubox
56 63 0.103719681 ubox
56 73 0.008709674 ubox
56 78 0.006944003 ubox
56 80 0.014215931 ubox
56 82 0.017762625 ubox
56 85 0.197911715 ubox
56 88 0.003819884 ubox
56 103 0.005034211 ubox
57 61 0.006864616 ubox
57 72 0.008758473 ubox
57 77 0.006936557 ubox
57 79 0.013168913 ubox
57 81 0.017282544 ubox
57 84 0.195480456 ubox
57 102 0.004963343 ubox
57 106 0.027482212 ubox
58 71 0.008319348 ubox
58 76 0.006634110 ubox
58 101 0.004543171 ubox
58 105 0.005936386 ubox
58 106 0.594465603 ubox
59 72 0.010826294 ubox
59 77 0.011953156 ubox
59 96 0.004168900 ubox
59 105 0.965062507 ubox
59 106 0.012970780 ubox
60 69 0.024035498 ubox
60 71 0.014339818 ubox
60 75 0.010824056 ubox
60 76 0.010019905 ubox
60 79 0.052738936 ubox
60 81 0.154269421 ubox
60 104 0.969098459 ubox
60 105 0.006876238 ubox
61 68 0.026357457 ubox
61 70 0.014767770 ubox
61 73 0.005486874 ubox
61 74 0.013594693 ubox
61 78 0.054677266 ubox
61 80 0.189821259 ubox
61 82 0.011229275 ubox
61 94 0.012425580 ubox
61 98 0.018491355 ubox
61 103 0.970043580 ubox
62 69 0.014203679 ubox
62 77 0.010289691 ubox
62 79 0.189381566 ubox
62 81 0.011138878 ubox
62 93 0.013199916 ubox
62 97 0.023398778 ubox
62 102 0.968944253 ubox
63 72 0.021172947 ubox
63 77 0.198823827 ubox
63 92 0.013311793 ubox
63 96 0.036803081 ubox
63 101 0.968070992 ubox
63 102 0.038134900 ubox
63 106 0.016923927 ubox
64 71 0.021008921 ubox
64 72 0.003250174 ubox
64 76 0.198933603 ubox
64 77 0.003751347 ubox
64 91 0.012892445 ubox
64 97 0.003588577 ubox
64 101 0.038138137 ubox
64 105 0.017444580 ubox
65 71 0.004062019 ubox
65 75 0.198734340 ubox
65 76 0.003800680 ubox
65 96 0.005133903 ubox
65 104 0.017729782 ubox
66 70 0.003573909 ubox
66 73 0.050500170 ubox
66 74 0.192144750 ubox
66 78 0.003505826 ubox
66 94 0.063617605 ubox
66 95 0.004842732 ubox
66 98 0.968986636 ubox
66 103 0.017863769 ubox
67 72 0.067198782 ubox
67 77 0.003415667 ubox
67 92 0.011611108 ubox
67 93 0.066702463 ubox
67 97 0.969910081 ubox
67 102 0.017855884 ubox
68 91 0.014046671 ubox
68 92 0.067338442 ubox
68 96 0.969899910 ubox
68 101 0.017849897 ubox
69 90 0.013809827 ubox
69 94 0.092258722 ubox
69 95 0.883357934 ubox
69 100 0.017533760 ubox
70 84 0.020788358 ubox
70 91 0.042300343 ubox
70 93 0.118279964 ubox
70 96 0.030126662 ubox
71 83 0.022462599 ubox
71 86 0.006614954 ubox
71 89 0.072605308 ubox
71 90 0.041981101 ubox
71 95 0.080575601 ubox
72 78 0.003314166 ubox
72 82 0.022632763 ubox
72 85 0.006909554 ubox
72 88 0.073585852 ubox
72 89 0.037545302 ubox
72 94 0.183135730 ubox
73 77 0.003299197 ubox
73 81 0.022610212 ubox
73 84 0.006677588 ubox
73 92 0.962811914 ubox
74 91 0.965296836 ubox
75 87 0.408079320 ubox
75 90 0.881576753 ubox
76 83 0.009051002 ubox
76 86 0.792583955 ubox
76 87 0.045868836 ubox
76 89 0.563641793 ubox
76 90 0.006543154 ubox
77 82 0.010177593 ubox
77 85 0.885849447 ubox
77 86 0.013194898 ubox
77 88 0.412836112 ubox
78 84 0.907776895 ubox
79 83 0.735762766 ubox
82 92 0.003961718 ubox
82 105 0.007617583 ubox
83 91 0.003917792 ubox
83 104 0.007667657 ubox
84 103 0.007680503 ubox
85 92 0.009977226 ubox
85 102 0.007670999 ubox
86 91 0.009776968 ubox
86 101 0.007246903 ubox
87 93 0.005380083 ubox
87 97 0.005482585 ubox
88 92 0.006284141 ubox
88 96 0.010442622 ubox
88 102 0.003621739 ubox
88 106 0.003412577 ubox
89 97 0.003313837 ubox
89 101 0.003555183 ubox
89 105 0.003556530 ubox
90 96 0.006856755 ubox
90 104 0.003627301 ubox
91 95 0.004442749 ubox
91 99 0.007419128 ubox
91 100 0.003244775 ubox
91 103 0.003641157 ubox
92 98 0.007429147 ubox
92 99 0.003315987 ubox
98 106 0.003319083 ubox
99 105 0.003393230 ubox
1 52 0.9500000 lbox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
59 105 0.9500000 lbox
60 104 0.9500000 lbox
61 103 0.9500000 lbox
62 102 0.9500000 lbox
63 101 0.9500000 lbox
66 98 0.9500000 lbox
67 97 0.9500000 lbox
68 96 0.9500000 lbox
69 95 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
79 83 0.9500000 lbox
showpage
end
%%EOF
