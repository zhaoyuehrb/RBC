%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TTC16)
} def

/sequence { (\
CUGGUGAUGGUGCCUAGCAACGUCAGGGCCAGGGCCGCGAGGUAGUUGGCAGAGGCCUCGGGGUCCUCCUGGAAGGGGCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021172970 ubox
1 17 0.017009891 ubox
1 26 0.090312646 ubox
1 27 0.055917631 ubox
1 28 0.007426486 ubox
1 32 0.121898500 ubox
1 33 0.005798293 ubox
2 9 0.021049498 ubox
2 16 0.017104905 ubox
2 19 0.003970948 ubox
2 25 0.087083376 ubox
2 26 0.055659940 ubox
2 27 0.014751987 ubox
2 31 0.126180174 ubox
3 8 0.016922782 ubox
3 14 0.030357194 ubox
3 15 0.005829964 ubox
3 18 0.004260707 ubox
3 21 0.003889853 ubox
3 24 0.080537941 ubox
3 30 0.128820564 ubox
3 36 0.005021492 ubox
3 57 0.014216582 ubox
3 80 0.018274185 ubox
3 81 0.003449148 ubox
3 82 0.018055179 ubox
4 13 0.030532470 ubox
4 14 0.005249940 ubox
4 21 0.005994624 ubox
4 23 0.072217300 ubox
4 29 0.128797167 ubox
4 35 0.005026031 ubox
4 56 0.014242549 ubox
4 79 0.018253302 ubox
4 81 0.009693500 ubox
5 12 0.030059148 ubox
5 16 0.004174986 ubox
5 19 0.006763313 ubox
5 20 0.005682559 ubox
5 22 0.067132055 ubox
5 25 0.872937496 ubox
5 28 0.104525837 ubox
5 34 0.004994850 ubox
5 55 0.014185117 ubox
5 78 0.015958159 ubox
6 11 0.016728776 ubox
6 15 0.004130801 ubox
6 18 0.007393516 ubox
6 21 0.070386480 ubox
6 24 0.975892928 ubox
6 82 0.093970937 ubox
7 23 0.976347938 ubox
7 81 0.093904854 ubox
8 16 0.008016026 ubox
8 19 0.068188594 ubox
8 22 0.975375316 ubox
8 25 0.018970963 ubox
8 31 0.006950631 ubox
9 15 0.009060186 ubox
9 18 0.068377240 ubox
9 21 0.967951045 ubox
9 24 0.019284558 ubox
9 30 0.008944488 ubox
9 57 0.003227248 ubox
9 80 0.166929919 ubox
9 81 0.033020695 ubox
9 82 0.012855153 ubox
10 14 0.008958405 ubox
10 18 0.037168528 ubox
10 21 0.050136385 ubox
10 23 0.017753863 ubox
10 29 0.008925256 ubox
10 56 0.003228106 ubox
10 79 0.167114982 ubox
10 80 0.036018382 ubox
10 81 0.012276545 ubox
11 17 0.037733236 ubox
11 19 0.831013160 ubox
11 20 0.052351380 ubox
11 22 0.011694562 ubox
11 28 0.008416458 ubox
11 51 0.086428526 ubox
11 78 0.166765589 ubox
12 18 0.973293326 ubox
12 21 0.012286886 ubox
12 29 0.003390556 ubox
12 50 0.095755003 ubox
12 79 0.042222550 ubox
13 17 0.966281731 ubox
13 27 0.008945561 ubox
13 28 0.003463127 ubox
13 49 0.094829258 ubox
13 76 0.166622629 ubox
13 77 0.012104850 ubox
13 78 0.042338740 ubox
14 26 0.008986339 ubox
14 27 0.003464438 ubox
14 48 0.093846604 ubox
14 49 0.014214656 ubox
14 75 0.166593136 ubox
14 76 0.012163236 ubox
14 77 0.042343169 ubox
15 25 0.008761169 ubox
15 26 0.003370186 ubox
15 48 0.019889088 ubox
15 74 0.153525677 ubox
15 75 0.011748327 ubox
15 76 0.041913130 ubox
16 47 0.088860595 ubox
17 23 0.009987610 ubox
17 46 0.095640240 ubox
17 79 0.013087328 ubox
18 22 0.010017346 ubox
18 45 0.095737291 ubox
18 71 0.038983057 ubox
18 78 0.013222485 ubox
19 70 0.027656364 ubox
20 43 0.094382265 ubox
21 42 0.095901590 ubox
21 71 0.006662054 ubox
22 70 0.003392997 ubox
23 40 0.095698357 ubox
23 72 0.141227669 ubox
23 73 0.070616255 ubox
24 39 0.095851326 ubox
24 71 0.154632077 ubox
24 72 0.064530741 ubox
25 67 0.003414386 ubox
25 70 0.158388577 ubox
25 81 0.057725167 ubox
26 36 0.005863043 ubox
26 58 0.028382318 ubox
26 59 0.009131387 ubox
26 66 0.003690917 ubox
26 69 0.159533243 ubox
26 70 0.060106873 ubox
26 80 0.073229369 ubox
26 81 0.897670750 ubox
26 82 0.109758285 ubox
27 35 0.005525452 ubox
27 36 0.095841410 ubox
27 57 0.031535105 ubox
27 65 0.003694810 ubox
27 68 0.159190412 ubox
27 69 0.067829758 ubox
27 70 0.003342040 ubox
27 79 0.069955659 ubox
27 80 0.960942803 ubox
27 81 0.014261349 ubox
28 35 0.095869159 ubox
28 50 0.113395687 ubox
28 56 0.031564101 ubox
28 64 0.003689723 ubox
28 67 0.082554979 ubox
28 68 0.068233596 ubox
28 69 0.003732220 ubox
28 79 0.961593280 ubox
28 80 0.010250735 ubox
29 34 0.095577586 ubox
29 49 0.113584109 ubox
29 55 0.031581901 ubox
29 63 0.003671557 ubox
29 72 0.009767193 ubox
29 76 0.005047969 ubox
29 77 0.067664900 ubox
29 78 0.961721984 ubox
30 48 0.113583003 ubox
30 54 0.031536226 ubox
30 62 0.003647693 ubox
30 71 0.011057318 ubox
30 75 0.006466042 ubox
30 76 0.068482785 ubox
30 77 0.953988388 ubox
31 47 0.112841909 ubox
31 67 0.918234831 ubox
31 70 0.012963015 ubox
32 46 0.108258419 ubox
32 58 0.005003147 ubox
32 66 0.979866420 ubox
32 67 0.027073521 ubox
32 69 0.011543176 ubox
33 57 0.013601672 ubox
33 65 0.981564096 ubox
33 66 0.030073622 ubox
33 68 0.010875322 ubox
34 43 0.113549798 ubox
34 50 0.112021974 ubox
34 56 0.013631984 ubox
34 64 0.981394449 ubox
34 65 0.030016655 ubox
34 67 0.004277042 ubox
35 42 0.114557733 ubox
35 49 0.112151572 ubox
35 55 0.013634730 ubox
35 62 0.005631590 ubox
35 63 0.982189872 ubox
36 41 0.114519525 ubox
36 48 0.112092061 ubox
36 54 0.013622851 ubox
36 61 0.007593199 ubox
36 62 0.982058813 ubox
37 43 0.003362566 ubox
37 46 0.077148736 ubox
37 47 0.079204375 ubox
37 50 0.017146053 ubox
38 42 0.003583179 ubox
38 45 0.109580197 ubox
38 49 0.017122179 ubox
38 60 0.981981304 ubox
39 47 0.004858018 ubox
39 59 0.982193149 ubox
40 46 0.005978996 ubox
40 47 0.016586255 ubox
40 58 0.982072681 ubox
41 46 0.015489792 ubox
41 57 0.982066521 ubox
42 50 0.003540893 ubox
42 56 0.981783650 ubox
43 49 0.004796325 ubox
43 55 0.969198462 ubox
45 56 0.017733085 ubox
46 52 0.136207134 ubox
46 53 0.661049662 ubox
46 54 0.214499571 ubox
46 55 0.028578006 ubox
47 51 0.133992048 ubox
47 52 0.652933939 ubox
47 53 0.252239656 ubox
47 54 0.076678186 ubox
48 57 0.017075856 ubox
49 56 0.019516938 ubox
50 55 0.021326690 ubox
52 82 0.181827900 ubox
53 81 0.183655018 ubox
54 80 0.183904193 ubox
55 79 0.183905823 ubox
56 76 0.004641875 ubox
56 77 0.008955061 ubox
56 78 0.183627430 ubox
57 75 0.006784418 ubox
57 76 0.012482560 ubox
57 77 0.183308877 ubox
58 72 0.035264400 ubox
58 73 0.091228123 ubox
58 74 0.007787222 ubox
58 75 0.010238818 ubox
58 76 0.153054870 ubox
59 71 0.068075031 ubox
59 72 0.116634487 ubox
59 75 0.120032571 ubox
59 76 0.019607327 ubox
60 68 0.003368314 ubox
60 69 0.019546952 ubox
60 70 0.092184890 ubox
60 81 0.005592475 ubox
60 82 0.035226189 ubox
61 67 0.003349986 ubox
61 68 0.019536026 ubox
61 69 0.092623725 ubox
61 70 0.123679518 ubox
61 80 0.006062430 ubox
61 81 0.036644467 ubox
62 66 0.004048199 ubox
62 67 0.015264444 ubox
62 68 0.092475931 ubox
62 69 0.126940881 ubox
62 70 0.012958139 ubox
62 79 0.006050800 ubox
62 80 0.036955393 ubox
63 67 0.059904817 ubox
63 68 0.126660060 ubox
63 69 0.012940551 ubox
63 79 0.036965513 ubox
64 72 0.005833575 ubox
64 73 0.082346574 ubox
64 77 0.006495000 ubox
64 78 0.034576832 ubox
65 71 0.005849215 ubox
65 72 0.091685065 ubox
65 76 0.009567783 ubox
65 77 0.034418266 ubox
65 78 0.013581531 ubox
66 71 0.091682500 ubox
66 75 0.010300211 ubox
66 76 0.034190512 ubox
66 77 0.014520968 ubox
66 78 0.048680825 ubox
67 73 0.017817889 ubox
67 74 0.010262883 ubox
67 75 0.030771931 ubox
67 76 0.021273176 ubox
67 77 0.055814980 ubox
67 78 0.026885612 ubox
68 72 0.023853519 ubox
68 75 0.042360809 ubox
68 76 0.896781922 ubox
68 77 0.117236171 ubox
68 78 0.015159234 ubox
69 75 0.898717521 ubox
69 76 0.190862428 ubox
69 77 0.017299723 ubox
70 74 0.809667676 ubox
70 75 0.186411889 ubox
70 76 0.021434752 ubox
71 80 0.011443888 ubox
72 79 0.011435247 ubox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
26 81 0.9500000 lbox
27 80 0.9500000 lbox
28 79 0.9500000 lbox
29 78 0.9500000 lbox
30 77 0.9500000 lbox
31 67 0.9500000 lbox
32 66 0.9500000 lbox
33 65 0.9500000 lbox
34 64 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
70 74 0.9500000 lbox
showpage
end
%%EOF
