%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM120C)
} def

/sequence { (\
GCCCAGAUCGUCGCCUAUCCUGCUUGCGCAGCCGCUAUCGCGUCUGCCCACCGACGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.007642531 ubox
1 23 0.012662646 ubox
1 27 0.027949104 ubox
1 60 0.184827313 ubox
2 13 0.007657042 ubox
2 22 0.012538878 ubox
2 26 0.027956231 ubox
2 59 0.186795231 ubox
4 22 0.030132166 ubox
4 46 0.012280575 ubox
5 16 0.005571405 ubox
5 21 0.030374028 ubox
5 45 0.012660016 ubox
6 12 0.005697024 ubox
6 15 0.005834637 ubox
6 19 0.020367722 ubox
6 20 0.026562799 ubox
6 44 0.012718545 ubox
7 11 0.004967601 ubox
7 18 0.025088360 ubox
7 43 0.012597312 ubox
8 17 0.024671440 ubox
8 42 0.006029763 ubox
8 54 0.006668176 ubox
8 57 0.935000138 ubox
9 40 0.005194444 ubox
9 42 0.011041512 ubox
9 53 0.007132996 ubox
9 56 0.997711185 ubox
10 18 0.004555924 ubox
10 39 0.005169965 ubox
10 41 0.011336229 ubox
10 52 0.006944223 ubox
10 55 0.998927405 ubox
11 17 0.004466128 ubox
11 40 0.008684662 ubox
11 54 0.998817520 ubox
11 57 0.004599678 ubox
12 40 0.007202086 ubox
12 53 0.998669514 ubox
12 56 0.004929351 ubox
13 21 0.006138099 ubox
13 23 0.363904685 ubox
13 27 0.112782515 ubox
13 35 0.007261846 ubox
13 39 0.007290209 ubox
13 47 0.006939581 ubox
13 52 0.915050820 ubox
13 55 0.004737694 ubox
13 60 0.009833726 ubox
14 22 0.369660088 ubox
14 26 0.114180657 ubox
14 28 0.003345387 ubox
14 34 0.007305497 ubox
14 46 0.007566118 ubox
14 59 0.009565549 ubox
15 59 0.005801470 ubox
16 22 0.056007701 ubox
16 26 0.046734517 ubox
16 46 0.003277040 ubox
16 58 0.006277140 ubox
17 21 0.053039992 ubox
17 25 0.057755653 ubox
17 45 0.003197014 ubox
18 54 0.004761402 ubox
18 57 0.011915761 ubox
19 53 0.005017840 ubox
19 56 0.012203377 ubox
20 31 0.074386874 ubox
21 28 0.005279977 ubox
21 30 0.076728547 ubox
21 42 0.009751108 ubox
21 50 0.049511056 ubox
21 53 0.010122248 ubox
22 27 0.075099720 ubox
22 29 0.077667557 ubox
22 32 0.004842362 ubox
22 41 0.011059764 ubox
22 47 0.049673126 ubox
22 49 0.050538752 ubox
22 52 0.041753286 ubox
22 60 0.013887224 ubox
23 28 0.077662323 ubox
23 31 0.004859903 ubox
23 40 0.011050820 ubox
23 46 0.049731011 ubox
23 59 0.014156506 ubox
24 30 0.004653259 ubox
24 54 0.003404925 ubox
24 57 0.003760680 ubox
24 58 0.013725335 ubox
25 37 0.004051172 ubox
25 42 0.004442163 ubox
25 50 0.882240718 ubox
25 53 0.003697911 ubox
25 56 0.004921688 ubox
25 57 0.009877542 ubox
26 35 0.010940679 ubox
26 41 0.005077485 ubox
26 43 0.049364640 ubox
26 47 0.008260212 ubox
26 49 0.923419273 ubox
26 52 0.011688038 ubox
26 55 0.006336537 ubox
27 34 0.010968130 ubox
27 40 0.005080523 ubox
27 42 0.049675041 ubox
27 46 0.007744603 ubox
27 53 0.006161279 ubox
27 56 0.003668263 ubox
28 33 0.010443506 ubox
28 35 0.004830567 ubox
28 39 0.004576407 ubox
28 41 0.049672027 ubox
28 45 0.004699207 ubox
28 47 0.994573143 ubox
29 34 0.004909622 ubox
29 40 0.049621169 ubox
29 46 0.995592896 ubox
30 36 0.010200096 ubox
30 45 0.995375161 ubox
31 35 0.010127777 ubox
31 43 0.011346946 ubox
31 44 0.993261162 ubox
31 47 0.013719311 ubox
32 42 0.055402673 ubox
32 46 0.014838069 ubox
33 40 0.024943282 ubox
33 42 0.994710553 ubox
34 39 0.023530753 ubox
34 41 0.998008175 ubox
34 43 0.008875807 ubox
34 47 0.009334345 ubox
34 60 0.003546807 ubox
35 40 0.996330263 ubox
35 42 0.009238885 ubox
35 46 0.009348605 ubox
35 59 0.003572686 ubox
36 58 0.003372221 ubox
40 47 0.012755853 ubox
41 46 0.012768191 ubox
41 56 0.005114419 ubox
42 51 0.007099870 ubox
42 55 0.005366876 ubox
43 50 0.007083498 ubox
43 54 0.005410518 ubox
44 53 0.005418492 ubox
8 57 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
11 54 0.9500000 lbox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
