%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAAGGAGUUGGGAGAUGAGCCUUCCGCAAACUCCUGACCUGUGGGUCCGUCCGUUCAACGGCCAAAGGCUGGCGGAGGAGGGAUCCCCUGCCUUUCUCGGAACGGAACGGAGCAGAGUCGUGCGUGGUUGAGUUUAGAUAAAAGCCGAGUGAGCGCGCUCUGUUCCUUAAGAUUAGUUUAAGGUGCCUUGGAUUGCUCUGAAGAGCUUUGACCACCUGAUAUUGCUUACAUCUGGAACUUCUUGGCUUCUCA\
UUCCCCAG\
) } def
/len { sequence length } bind def

/coor [
[56.95899200 196.06245422]
[53.67060471 197.24714661]
[45.86358643 210.05535889]
[38.05657196 222.86357117]
[38.45447159 243.03924561]
[21.04490089 251.49604797]
[13.54490089 264.48641968]
[6.04490042 277.47680664]
[-1.45509958 290.46719360]
[-8.95509911 303.45758057]
[-16.45509911 316.44793701]
[-23.95509911 329.43832397]
[-31.22204018 342.56051636]
[-38.25360489 355.81030273]
[-45.28516769 369.06008911]
[-52.31673050 382.30990601]
[-59.34829712 395.55969238]
[-54.47653961 410.59436035]
[-61.73712158 424.63217163]
[-76.82246399 429.34469604]
[-90.78270721 421.93609619]
[-95.33547974 406.80175781]
[-87.77970886 392.92065430]
[-72.59809113 388.52813721]
[-65.56652832 375.27832031]
[-58.53496552 362.02853394]
[-51.50339890 348.77874756]
[-44.47183609 335.52893066]
[-45.13095093 332.09637451]
[-44.18039703 328.17547607]
[-41.40914536 324.51721191]
[-36.94548035 321.93832397]
[-29.44548035 308.94793701]
[-21.94548035 295.95758057]
[-14.44548035 282.96719360]
[-6.94548035 269.97680664]
[0.55451941 256.98641968]
[8.05451965 243.99604797]
[4.54135466 234.44319153]
[6.89893532 224.31648254]
[14.58732510 216.99510193]
[25.24835014 215.05656433]
[33.05536652 202.24833679]
[40.86238480 189.44012451]
[48.43954468 176.49459839]
[55.78443146 163.41589355]
[63.12931824 150.33717346]
[70.47420502 137.25846863]
[63.05948257 129.92263794]
[57.42303848 121.14635468]
[53.83620834 111.35210419]
[52.47166061 101.01137543]
[53.39508057 90.62196350]
[39.34083557 85.37999725]
[25.28659058 80.13803864]
[11.23234463 74.89607239]
[-2.82190132 69.65411377]
[-16.87614632 64.41214752]
[-30.93039322 59.17018509]
[-39.34368515 69.86592102]
[-54.94998550 74.29299927]
[-72.77713013 68.08676910]
[-87.76013947 67.37304688]
[-102.74314880 66.65931702]
[-117.72616577 65.94558716]
[-132.70916748 65.23185730]
[-148.81805420 70.51769257]
[-158.35670471 56.50160980]
[-147.52894592 43.45569992]
[-131.99543762 50.24884796]
[-117.01243591 50.96257782]
[-102.02942657 51.67630386]
[-87.04641724 52.39003372]
[-72.06340027 53.10376358]
[-69.82230377 45.94642639]
[-79.97808838 34.90740585]
[-65.34009552 31.63175392]
[-63.09899521 24.47441864]
[-75.81340790 16.51554108]
[-88.52781677 8.55666256]
[-101.24222565 0.59778398]
[-113.95664215 -7.36109447]
[-126.67105103 -15.31997204]
[-139.38546753 -23.27885056]
[-152.09986877 -31.23772812]
[-166.44076538 -25.31166458]
[-181.51812744 -28.97946930]
[-191.53440857 -40.83079529]
[-192.63812256 -56.30856705]
[-184.40489197 -69.46126556]
[-170.00054932 -75.23140717]
[-154.96386719 -71.40026093]
[-145.07675171 -59.44097519]
[-144.14099121 -43.95214081]
[-131.42658997 -35.99326324]
[-118.71217346 -28.03438377]
[-105.99776459 -20.07550621]
[-93.28334808 -12.11662769]
[-80.56893921 -4.15774918]
[-67.85453033 3.80112886]
[-55.14011383 11.76000690]
[-29.41048050 23.41051865]
[-25.68843079 45.11594009]
[-11.63418484 50.35790253]
[2.42006135 55.59986496]
[16.47430801 60.84182739]
[30.52855301 66.08379364]
[44.58279800 71.32575226]
[58.63704681 76.56771851]
[69.77789307 63.30408859]
[84.93114471 54.91235733]
[102.08499908 52.50664520]
[105.09883881 37.81253815]
[108.11267853 23.11843109]
[111.12651825 8.42432404]
[114.14035034 -6.26978302]
[117.15419006 -20.96389008]
[120.16802979 -35.65799713]
[123.18186188 -50.35210419]
[126.19570160 -65.04621124]
[124.85587311 -74.04808044]
[129.33381653 -79.89676666]
[132.52229309 -94.55397034]
[135.71078491 -109.21117401]
[138.89926147 -123.86837769]
[142.08773804 -138.52557373]
[137.46069336 -153.65505981]
[147.72654724 -164.44679260]
[150.91502380 -179.10398865]
[146.28799438 -194.23347473]
[156.55384827 -205.02520752]
[159.74232483 -219.68240356]
[162.93080139 -234.33959961]
[161.69818115 -243.35678101]
[166.24540710 -249.15176392]
[169.60807800 -263.76998901]
[172.97074890 -278.38821411]
[176.33341980 -293.00643921]
[167.73640442 -306.26791382]
[171.11634827 -321.70657349]
[184.46797180 -330.16287231]
[199.87001038 -326.61990356]
[208.18470764 -313.17962646]
[204.47909546 -297.81588745]
[190.95164490 -289.64376831]
[187.58897400 -275.02554321]
[184.22630310 -260.40731812]
[180.86363220 -245.78909302]
[177.58799744 -231.15112305]
[174.39952087 -216.49392700]
[171.21104431 -201.83671570]
[176.06614685 -187.75563049]
[165.57223511 -175.91551208]
[162.38375854 -161.25831604]
[167.23886108 -147.17721558]
[156.74493408 -135.33709717]
[153.55645752 -120.67990112]
[150.36798096 -106.02269745]
[147.17950439 -91.36549377]
[143.99102783 -76.70829010]
[140.88980103 -62.03237534]
[137.87597656 -47.33826828]
[134.86213684 -32.64416122]
[131.84829712 -17.95005226]
[128.83445740 -3.25594544]
[125.82062531 11.43816185]
[122.80678558 26.13226891]
[119.79294586 40.82637405]
[116.77910614 55.52048492]
[128.24530029 60.42361832]
[138.27714539 68.29174042]
[146.10708618 78.70443726]
[151.09100342 91.04287720]
[165.62506104 87.33327484]
[180.15911865 83.62368011]
[191.61712646 72.71385193]
[205.86254883 77.06327057]
[220.39660645 73.35367584]
[234.93066406 69.64407349]
[249.46472168 65.93447876]
[263.99877930 62.22488022]
[278.53283691 58.51528168]
[293.06689453 54.80568695]
[307.60095215 51.09608841]
[322.13500977 47.38648987]
[333.48373413 35.54845810]
[349.34344482 39.71995544]
[353.39904785 55.60969925]
[341.47851562 66.87168884]
[325.84460449 61.92055130]
[311.31054688 65.63014984]
[296.77648926 69.33974457]
[282.24243164 73.04933929]
[267.70837402 76.75894165]
[253.17431641 80.46853638]
[238.64025879 84.17813873]
[224.10620117 87.88773346]
[209.57214355 91.59732819]
[199.15370178 102.24182892]
[183.86871338 98.15773773]
[169.33465576 101.86734009]
[154.80059814 105.57693481]
[151.26420593 120.15410614]
[162.48275757 130.11122131]
[177.94003296 133.48512268]
[182.32272339 147.72033691]
[193.54127502 157.67745972]
[204.75982666 167.63456726]
[215.97837830 177.59167480]
[227.19692993 187.54879761]
[242.75532532 186.79096985]
[253.99069214 197.04870605]
[254.61726379 211.88592529]
[265.83581543 221.84304810]
[282.32073975 217.98689270]
[297.69824219 224.66128540]
[305.97387695 239.04798889]
[304.05120850 255.36578369]
[315.38745117 265.18869019]
[330.88378906 268.37841797]
[335.43554688 282.56048584]
[346.77182007 292.38339233]
[358.10806274 302.20629883]
[372.88119507 297.76135254]
[387.70596313 302.03094482]
[397.85186768 313.65267944]
[400.08132935 328.91809082]
[393.68295288 342.95605469]
[380.69845581 351.28710938]
[365.27114868 351.25283813]
[352.32379150 342.86416626]
[345.98785400 328.79791260]
[348.28512573 313.54254150]
[336.94888306 303.71963501]
[325.61264038 293.89672852]
[310.92715454 291.40957642]
[305.56454468 276.52493286]
[294.22830200 266.70202637]
[281.57952881 270.91732788]
[268.39218140 268.31936646]
[258.12341309 259.48043823]
[253.51879883 246.62301636]
[255.87870789 233.06159973]
[244.66015625 223.10447693]
[229.85348511 224.24378967]
[218.33444214 214.30566406]
[217.23982239 198.76734924]
[206.02127075 188.81022644]
[194.80271912 178.85311890]
[183.58416748 168.89601135]
[172.36561584 158.93888855]
[157.71076965 156.27719116]
[152.52565002 141.32977295]
[141.30709839 131.37266541]
[131.52627563 140.09365845]
[120.05146790 145.95361328]
[107.68123627 148.66912842]
[95.24610138 148.17131042]
[83.55291748 144.60336304]
[76.20803070 157.68206787]
[68.86314392 170.76077271]
[61.51825333 183.83947754]
[61.57805634 188.99421692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[4 42]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[45 262]
[46 261]
[47 260]
[48 259]
[53 109]
[54 108]
[55 107]
[56 106]
[57 105]
[58 104]
[59 103]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[112 169]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[120 161]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[128 154]
[129 153]
[131 151]
[132 150]
[133 149]
[135 148]
[136 147]
[137 146]
[138 145]
[173 202]
[174 201]
[175 200]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
[203 254]
[204 253]
[206 251]
[207 250]
[208 249]
[209 248]
[210 247]
[213 244]
[214 243]
[218 238]
[219 237]
[221 235]
[222 234]
[223 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
