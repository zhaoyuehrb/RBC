%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PADI1)
} def

/sequence { (\
UCAGAACUCACACUUCUUCCUGGCAAAGAAGUGCCCAGGACGGGAGCUGGGGAGCCAGGGCUGAUCUAGGAGGCUGGGAGCCAGGUGACAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 50 0.020264309 ubox
1 53 0.030579199 ubox
1 64 0.007556338 ubox
1 77 0.007320574 ubox
1 85 0.011210025 ubox
1 88 0.083998271 ubox
1 92 0.040862992 ubox
2 49 0.025790370 ubox
2 52 0.032339091 ubox
2 58 0.005018071 ubox
2 63 0.008656426 ubox
2 76 0.009309648 ubox
2 84 0.015164683 ubox
2 87 0.093178787 ubox
2 91 0.073026881 ubox
3 14 0.005227596 ubox
3 17 0.010066212 ubox
3 48 0.025849074 ubox
3 62 0.008652063 ubox
3 75 0.009328383 ubox
3 86 0.071667500 ubox
4 13 0.006360181 ubox
4 16 0.010842870 ubox
4 47 0.025805599 ubox
4 61 0.008627376 ubox
4 74 0.009303979 ubox
5 15 0.010775802 ubox
6 14 0.009857130 ubox
6 86 0.066848652 ubox
7 44 0.006506357 ubox
7 46 0.025342568 ubox
7 50 0.010369561 ubox
7 51 0.221845506 ubox
7 52 0.315997731 ubox
7 54 0.126483268 ubox
7 58 0.005010509 ubox
7 72 0.012323947 ubox
7 78 0.006684906 ubox
7 80 0.008317788 ubox
7 84 0.030395585 ubox
7 85 0.069844610 ubox
7 91 0.229880860 ubox
7 92 0.063462447 ubox
8 43 0.006380134 ubox
8 45 0.025470583 ubox
8 49 0.005872694 ubox
8 50 0.221690930 ubox
8 51 0.317461116 ubox
8 52 0.036804985 ubox
8 53 0.133658255 ubox
8 57 0.004052084 ubox
8 71 0.012407526 ubox
8 77 0.006721650 ubox
8 79 0.008353912 ubox
8 83 0.028676534 ubox
8 84 0.062600573 ubox
8 85 0.016983261 ubox
8 88 0.765450205 ubox
8 90 0.156700207 ubox
8 91 0.041542186 ubox
8 92 0.012975415 ubox
9 42 0.006134720 ubox
9 44 0.025169097 ubox
9 49 0.221768710 ubox
9 50 0.317627000 ubox
9 51 0.043630823 ubox
9 52 0.133774311 ubox
9 70 0.012407423 ubox
9 76 0.006754627 ubox
9 78 0.008109005 ubox
9 84 0.029480722 ubox
9 87 0.835992758 ubox
9 91 0.022204192 ubox
10 48 0.215031602 ubox
10 75 0.006686113 ubox
10 86 0.835648745 ubox
11 33 0.065591935 ubox
11 49 0.330765939 ubox
11 76 0.007515616 ubox
11 85 0.834361578 ubox
11 87 0.111077302 ubox
12 32 0.066424041 ubox
12 48 0.329712942 ubox
12 75 0.007443703 ubox
12 86 0.110563101 ubox
13 31 0.066525552 ubox
13 43 0.020625141 ubox
13 44 0.026842501 ubox
13 46 0.971118339 ubox
13 72 0.011298814 ubox
13 73 0.010933827 ubox
13 84 0.114319601 ubox
13 85 0.107948905 ubox
13 91 0.017073017 ubox
13 92 0.007842088 ubox
14 30 0.066492344 ubox
14 42 0.020220192 ubox
14 43 0.023418173 ubox
14 44 0.059285350 ubox
14 45 0.977128315 ubox
14 46 0.081776208 ubox
14 71 0.011448811 ubox
14 72 0.010962032 ubox
14 83 0.093559359 ubox
14 84 0.096007132 ubox
14 90 0.016709518 ubox
14 91 0.007816059 ubox
15 29 0.066506888 ubox
15 42 0.017413587 ubox
15 43 0.095873341 ubox
15 44 0.977711299 ubox
15 45 0.125730792 ubox
15 64 0.012817080 ubox
15 70 0.011480468 ubox
15 71 0.011250481 ubox
15 83 0.060194107 ubox
15 88 0.016161972 ubox
15 90 0.006773020 ubox
16 28 0.066524348 ubox
16 42 0.115806304 ubox
16 43 0.978773833 ubox
16 44 0.132549706 ubox
16 46 0.009936668 ubox
16 63 0.013215986 ubox
16 69 0.011524559 ubox
16 70 0.011298196 ubox
16 80 0.003576498 ubox
16 84 0.003625284 ubox
16 87 0.016650667 ubox
17 26 0.004747315 ubox
17 27 0.065971473 ubox
17 40 0.009864156 ubox
17 42 0.956936361 ubox
17 43 0.125889844 ubox
17 45 0.010014874 ubox
17 46 0.003459005 ubox
17 68 0.011399091 ubox
17 69 0.011145894 ubox
17 79 0.003455987 ubox
17 80 0.003340728 ubox
17 83 0.003549047 ubox
17 88 0.005603638 ubox
18 25 0.006089065 ubox
18 26 0.062200580 ubox
18 39 0.004820931 ubox
18 40 0.981495415 ubox
18 42 0.037871133 ubox
18 44 0.006473435 ubox
18 45 0.004358468 ubox
18 60 0.023020497 ubox
18 68 0.006418489 ubox
18 79 0.003787364 ubox
18 87 0.005438909 ubox
19 38 0.005009423 ubox
19 39 0.996634811 ubox
19 43 0.004487377 ubox
19 44 0.004481791 ubox
19 59 0.031467795 ubox
19 78 0.003871746 ubox
19 85 0.022844325 ubox
20 38 0.996673595 ubox
20 39 0.005271328 ubox
20 42 0.004157702 ubox
20 43 0.004474459 ubox
20 58 0.038979733 ubox
20 77 0.003867360 ubox
20 84 0.022962142 ubox
21 37 0.994463705 ubox
21 38 0.004795374 ubox
21 42 0.004415867 ubox
21 57 0.039055231 ubox
21 76 0.003847326 ubox
21 83 0.022963990 ubox
22 35 0.576085643 ubox
22 36 0.813268591 ubox
22 56 0.039079610 ubox
22 75 0.003881951 ubox
22 82 0.022969434 ubox
23 32 0.009136393 ubox
23 34 0.812348462 ubox
23 35 0.577376061 ubox
23 55 0.039079551 ubox
23 74 0.003904181 ubox
23 81 0.022969345 ubox
24 31 0.027685350 ubox
24 33 0.993849736 ubox
24 54 0.039020804 ubox
24 73 0.003900621 ubox
24 80 0.022935983 ubox
25 32 0.908321414 ubox
30 48 0.035306635 ubox
30 75 0.022196329 ubox
31 47 0.035565820 ubox
31 74 0.022358306 ubox
32 46 0.033887716 ubox
32 73 0.022339846 ubox
34 44 0.040986894 ubox
34 51 0.065036249 ubox
34 52 0.004552308 ubox
34 70 0.005751677 ubox
35 43 0.041207485 ubox
35 50 0.065264711 ubox
35 51 0.003838377 ubox
35 69 0.005738722 ubox
35 70 0.021923681 ubox
36 42 0.041182163 ubox
36 49 0.065313489 ubox
36 69 0.021839189 ubox
37 48 0.065342361 ubox
37 67 0.008807540 ubox
38 47 0.065342197 ubox
38 66 0.008762586 ubox
38 67 0.019215662 ubox
39 65 0.007630967 ubox
39 66 0.021024259 ubox
40 65 0.020996387 ubox
41 63 0.015668234 ubox
42 62 0.015546421 ubox
43 61 0.015373181 ubox
43 62 0.017529017 ubox
44 61 0.017746155 ubox
46 55 0.016935492 ubox
47 54 0.018053636 ubox
47 58 0.846280190 ubox
47 59 0.003361255 ubox
47 69 0.025988508 ubox
47 84 0.075054563 ubox
47 85 0.003167712 ubox
47 91 0.301085727 ubox
47 92 0.015140891 ubox
48 53 0.017909734 ubox
48 57 0.849345304 ubox
48 68 0.026097463 ubox
48 83 0.075290357 ubox
48 84 0.003217699 ubox
48 90 0.302213319 ubox
48 91 0.014480369 ubox
49 56 0.850069890 ubox
49 67 0.026094491 ubox
49 82 0.075052379 ubox
49 89 0.302309932 ubox
50 55 0.849155524 ubox
50 56 0.010465923 ubox
50 66 0.026090558 ubox
50 81 0.074802210 ubox
50 82 0.007798305 ubox
51 55 0.012853956 ubox
51 65 0.025046091 ubox
51 81 0.009499097 ubox
51 82 0.013592457 ubox
52 81 0.013891970 ubox
53 62 0.025782345 ubox
53 75 0.010028830 ubox
54 61 0.026552508 ubox
54 74 0.010100778 ubox
54 86 0.484820745 ubox
55 60 0.026470488 ubox
55 70 0.003769317 ubox
55 73 0.010103482 ubox
55 77 0.067433207 ubox
55 78 0.035339313 ubox
55 85 0.516251848 ubox
55 92 0.004624628 ubox
56 69 0.003787264 ubox
56 72 0.010085645 ubox
56 76 0.067449661 ubox
56 77 0.035139539 ubox
56 84 0.516315951 ubox
56 87 0.019692167 ubox
56 91 0.004688733 ubox
57 67 0.005991904 ubox
57 75 0.064331294 ubox
57 86 0.018942024 ubox
58 66 0.006058516 ubox
58 67 0.003313828 ubox
58 74 0.054978378 ubox
58 75 0.035379334 ubox
58 82 0.040560769 ubox
59 65 0.005765841 ubox
59 66 0.004729661 ubox
59 67 0.003949311 ubox
59 74 0.049797661 ubox
59 75 0.015785744 ubox
59 81 0.029309554 ubox
59 82 0.993111668 ubox
60 65 0.003237550 ubox
60 66 0.004026751 ubox
60 74 0.017928826 ubox
60 81 0.994599632 ubox
61 69 0.027350448 ubox
61 70 0.019778789 ubox
61 72 0.067475649 ubox
61 73 0.018300212 ubox
61 80 0.994957100 ubox
61 84 0.036741269 ubox
61 91 0.014144365 ubox
62 68 0.027126002 ubox
62 69 0.019578970 ubox
62 71 0.067482198 ubox
62 72 0.017771183 ubox
62 79 0.949478365 ubox
62 83 0.036893595 ubox
62 90 0.014198873 ubox
63 67 0.022594759 ubox
63 82 0.036871384 ubox
63 89 0.014189778 ubox
64 86 0.006897151 ubox
65 71 0.008209814 ubox
65 73 0.007207920 ubox
65 77 0.050232587 ubox
65 78 0.872360574 ubox
65 79 0.032143555 ubox
65 85 0.007430420 ubox
65 88 0.012559672 ubox
66 70 0.008486467 ubox
66 72 0.007969125 ubox
66 73 0.008790433 ubox
66 76 0.051506578 ubox
66 77 0.992042921 ubox
66 78 0.033254949 ubox
66 84 0.007891760 ubox
66 87 0.012595866 ubox
67 71 0.007206236 ubox
67 72 0.008415511 ubox
67 76 0.993254531 ubox
67 77 0.024948742 ubox
67 83 0.007818267 ubox
68 75 0.994620576 ubox
68 86 0.005792029 ubox
69 74 0.993715087 ubox
69 75 0.012322136 ubox
70 74 0.015198297 ubox
72 82 0.036252094 ubox
73 81 0.036325591 ubox
74 80 0.036317003 ubox
74 84 0.021056257 ubox
75 79 0.032717420 ubox
75 83 0.021446258 ubox
76 82 0.021702232 ubox
77 81 0.021352756 ubox
81 92 0.007459830 ubox
82 91 0.007637204 ubox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
59 82 0.9500000 lbox
60 81 0.9500000 lbox
61 80 0.9500000 lbox
62 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
