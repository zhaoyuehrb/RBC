%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PARL)
} def

/sequence { (\
CGGAAGUAGUUGCGCAGCUGGGGUUGGUAAGGUCGGGCCAUGGUGGGGCAGAGGUUGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009164675 ubox
1 14 0.104638381 ubox
1 20 0.040182759 ubox
1 26 0.079334898 ubox
1 35 0.076806900 ubox
1 57 0.353645238 ubox
2 11 0.010990348 ubox
2 13 0.111777874 ubox
2 19 0.040545554 ubox
2 25 0.079232763 ubox
2 34 0.076696248 ubox
2 39 0.012360836 ubox
2 56 0.350123076 ubox
3 10 0.011895456 ubox
3 11 0.008944570 ubox
3 18 0.040594663 ubox
3 24 0.076922754 ubox
3 25 0.006387244 ubox
3 33 0.073875515 ubox
3 34 0.054007291 ubox
3 38 0.012364355 ubox
3 55 0.335593613 ubox
3 56 0.107332873 ubox
4 10 0.010637882 ubox
4 11 0.110285060 ubox
4 24 0.006532097 ubox
4 25 0.004747283 ubox
4 33 0.056947269 ubox
4 55 0.115347322 ubox
4 56 0.203512208 ubox
5 10 0.106133433 ubox
5 11 0.006107839 ubox
5 19 0.008638802 ubox
5 24 0.004562007 ubox
5 55 0.212432070 ubox
5 56 0.129105796 ubox
6 10 0.005996744 ubox
6 13 0.025894825 ubox
6 15 0.038650106 ubox
6 18 0.008928786 ubox
6 33 0.019210147 ubox
6 49 0.043112429 ubox
6 55 0.128390676 ubox
7 12 0.024856681 ubox
7 14 0.037688570 ubox
7 17 0.008604153 ubox
7 20 0.084168529 ubox
7 26 0.004379998 ubox
7 29 0.005543046 ubox
7 32 0.045260904 ubox
7 48 0.042720488 ubox
7 54 0.066663252 ubox
7 57 0.059644491 ubox
8 19 0.085943877 ubox
8 25 0.004753340 ubox
8 28 0.004327369 ubox
8 56 0.063920552 ubox
9 15 0.009060563 ubox
9 18 0.086135293 ubox
9 24 0.004572882 ubox
9 33 0.012255002 ubox
9 49 0.572845035 ubox
9 55 0.061962012 ubox
10 14 0.008515980 ubox
10 17 0.085281616 ubox
10 23 0.005113521 ubox
10 30 0.412858039 ubox
10 31 0.026535057 ubox
10 32 0.013054877 ubox
10 46 0.036276170 ubox
10 47 0.005065657 ubox
10 48 0.573221469 ubox
10 51 0.535632708 ubox
10 52 0.038239262 ubox
10 53 0.016208232 ubox
10 54 0.016945249 ubox
10 58 0.003485857 ubox
10 59 0.005906841 ubox
10 60 0.021181072 ubox
10 61 0.008112062 ubox
10 62 0.008812207 ubox
11 16 0.070997403 ubox
11 22 0.005808665 ubox
11 29 0.471185508 ubox
11 30 0.026686813 ubox
11 31 0.012973861 ubox
11 45 0.040071153 ubox
11 46 0.005235451 ubox
11 47 0.568132729 ubox
11 50 0.624951814 ubox
11 51 0.025432388 ubox
11 52 0.010990395 ubox
11 53 0.008218386 ubox
11 58 0.006500897 ubox
11 59 0.022498414 ubox
11 60 0.008324627 ubox
11 61 0.013071632 ubox
12 18 0.005047850 ubox
12 24 0.004707892 ubox
12 28 0.479743891 ubox
12 33 0.008881940 ubox
12 44 0.049926333 ubox
12 49 0.639124695 ubox
12 55 0.006476913 ubox
13 17 0.005039866 ubox
13 20 0.006086505 ubox
13 23 0.004807818 ubox
13 27 0.479981695 ubox
13 32 0.010081733 ubox
13 42 0.016152167 ubox
13 43 0.050260422 ubox
13 45 0.573371106 ubox
13 48 0.638979660 ubox
13 54 0.006825298 ubox
13 57 0.022697854 ubox
14 19 0.004134113 ubox
14 24 0.005993572 ubox
14 28 0.012550297 ubox
14 33 0.004122503 ubox
14 41 0.016106382 ubox
14 44 0.568455403 ubox
14 49 0.027798256 ubox
14 55 0.020253470 ubox
14 56 0.016087888 ubox
15 23 0.006380369 ubox
15 26 0.488092340 ubox
15 27 0.010158705 ubox
15 32 0.005452265 ubox
15 42 0.203453367 ubox
15 43 0.536290630 ubox
15 45 0.138184908 ubox
15 48 0.027830159 ubox
15 54 0.026186907 ubox
15 57 0.079371865 ubox
16 25 0.488578553 ubox
16 41 0.255258948 ubox
16 44 0.121749697 ubox
16 56 0.079541994 ubox
17 24 0.488123861 ubox
17 28 0.026547602 ubox
17 33 0.005502523 ubox
17 38 0.530898932 ubox
17 44 0.625763856 ubox
17 49 0.021679365 ubox
17 55 0.079632142 ubox
18 23 0.487014470 ubox
18 27 0.027135801 ubox
18 31 0.005467226 ubox
18 32 0.005992341 ubox
18 36 0.011166358 ubox
18 37 0.533791047 ubox
18 43 0.634252276 ubox
18 46 0.007767519 ubox
18 47 0.005875299 ubox
18 48 0.021636327 ubox
18 51 0.026545639 ubox
18 54 0.079615913 ubox
19 26 0.026400439 ubox
19 30 0.005451132 ubox
19 31 0.005885523 ubox
19 35 0.011690142 ubox
19 36 0.532091428 ubox
19 40 0.060647988 ubox
19 42 0.628988604 ubox
19 45 0.007722834 ubox
19 46 0.006109133 ubox
19 47 0.021384146 ubox
19 50 0.026667620 ubox
19 53 0.078742460 ubox
20 25 0.016366427 ubox
20 34 0.011810776 ubox
20 39 0.059461868 ubox
20 41 0.412704562 ubox
20 44 0.007142313 ubox
20 49 0.026732447 ubox
21 33 0.010653825 ubox
21 34 0.533685990 ubox
21 38 0.051813184 ubox
21 39 0.597259539 ubox
22 33 0.531437785 ubox
22 34 0.006738217 ubox
22 38 0.598383417 ubox
22 39 0.305814054 ubox
23 33 0.006762607 ubox
23 38 0.306072048 ubox
23 41 0.016626115 ubox
23 44 0.005365652 ubox
23 49 0.075601536 ubox
24 30 0.013382473 ubox
24 31 0.527429051 ubox
24 32 0.008208209 ubox
24 36 0.606539561 ubox
24 37 0.282920394 ubox
24 40 0.012166535 ubox
24 46 0.020044280 ubox
24 47 0.006447627 ubox
24 48 0.075055261 ubox
25 29 0.012838407 ubox
25 30 0.513808084 ubox
25 31 0.015588333 ubox
25 35 0.619013945 ubox
25 36 0.247791918 ubox
25 40 0.069859259 ubox
25 45 0.026443035 ubox
25 46 0.006912780 ubox
25 47 0.059985983 ubox
26 34 0.632503740 ubox
26 39 0.073247808 ubox
26 44 0.045561497 ubox
27 33 0.518239473 ubox
27 38 0.073260518 ubox
27 44 0.006186891 ubox
28 32 0.143814766 ubox
28 37 0.072990376 ubox
28 42 0.064396219 ubox
28 43 0.004622168 ubox
28 45 0.003878551 ubox
28 57 0.011877217 ubox
29 41 0.063226957 ubox
29 44 0.003658607 ubox
29 56 0.013354096 ubox
30 55 0.013543354 ubox
30 56 0.007864426 ubox
31 39 0.070660811 ubox
31 55 0.009496296 ubox
31 56 0.009340257 ubox
32 38 0.070701204 ubox
32 49 0.012363223 ubox
32 55 0.010917672 ubox
33 37 0.066140717 ubox
33 48 0.012357700 ubox
33 52 0.042482242 ubox
33 54 0.019513678 ubox
33 58 0.031537182 ubox
33 59 0.375434981 ubox
33 60 0.067401977 ubox
34 47 0.012245065 ubox
34 51 0.044991884 ubox
34 53 0.024951921 ubox
34 57 0.039780829 ubox
34 58 0.479082014 ubox
34 59 0.061088956 ubox
35 56 0.032258388 ubox
36 55 0.023575188 ubox
36 56 0.483656520 ubox
37 44 0.006742388 ubox
37 49 0.082209578 ubox
37 55 0.491153206 ubox
38 43 0.006924507 ubox
38 46 0.019321546 ubox
38 47 0.015458256 ubox
38 48 0.082079430 ubox
38 54 0.492151940 ubox
38 58 0.013439933 ubox
39 45 0.020652741 ubox
39 46 0.017286240 ubox
39 47 0.081840893 ubox
39 53 0.491469980 ubox
39 57 0.014015545 ubox
40 44 0.016901627 ubox
40 56 0.013644276 ubox
41 50 0.464274322 ubox
42 49 0.466076922 ubox
43 49 0.136655623 ubox
44 48 0.129179340 ubox
44 50 0.035559479 ubox
45 49 0.035235191 ubox
47 56 0.017518478 ubox
48 55 0.021619840 ubox
49 54 0.021954422 ubox
49 57 0.016424946 ubox
50 56 0.020622648 ubox
51 55 0.015166636 ubox
55 61 0.019455613 ubox
55 62 0.034648368 ubox
56 60 0.018658717 ubox
56 61 0.052183441 ubox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
