%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF512B)
} def

/sequence { (\
CCGCGCCCCCCGCCCCGGCCCGGCCCGGCCCGGCCGCAGCCCCGCUGGGCGCCGCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.003554666 ubox
1 23 0.005127804 ubox
1 28 0.004040697 ubox
2 17 0.004392754 ubox
2 22 0.014533671 ubox
2 27 0.004732910 ubox
2 54 0.307978814 ubox
3 13 0.079438924 ubox
3 16 0.004248206 ubox
3 21 0.014654869 ubox
3 26 0.004750743 ubox
3 52 0.953887416 ubox
3 53 0.227739213 ubox
3 55 0.160837469 ubox
4 12 0.079598728 ubox
4 51 0.981542235 ubox
4 54 0.160864010 ubox
5 11 0.077854355 ubox
5 13 0.016605315 ubox
5 19 0.015141693 ubox
5 24 0.004977830 ubox
5 50 0.981722361 ubox
5 52 0.095985031 ubox
5 53 0.135286031 ubox
5 55 0.029659036 ubox
6 12 0.016632889 ubox
6 18 0.015090058 ubox
6 23 0.004988866 ubox
6 48 0.003542152 ubox
6 49 0.981152118 ubox
6 51 0.128052289 ubox
6 54 0.029645841 ubox
7 17 0.014994864 ubox
7 22 0.005069760 ubox
7 47 0.004583758 ubox
7 48 0.980520665 ubox
7 49 0.051963107 ubox
8 47 0.976747724 ubox
8 48 0.059950101 ubox
8 49 0.121320773 ubox
9 18 0.003584985 ubox
9 47 0.066306990 ubox
9 48 0.122360053 ubox
9 49 0.026338960 ubox
10 17 0.003620855 ubox
10 18 0.010234538 ubox
10 33 0.005496246 ubox
10 47 0.123212978 ubox
10 48 0.027282484 ubox
11 17 0.010478764 ubox
11 32 0.005589072 ubox
11 36 0.010783020 ubox
11 44 0.625404465 ubox
11 47 0.028110549 ubox
11 51 0.079913103 ubox
11 54 0.005384610 ubox
12 16 0.010443487 ubox
12 19 0.003751799 ubox
12 31 0.005593980 ubox
12 34 0.015353342 ubox
12 35 0.011150264 ubox
12 37 0.024504615 ubox
12 40 0.781566289 ubox
12 43 0.367074340 ubox
12 45 0.467316629 ubox
12 46 0.013696297 ubox
12 50 0.081995258 ubox
12 52 0.071387546 ubox
12 53 0.004113544 ubox
12 55 0.005992994 ubox
13 18 0.003754105 ubox
13 33 0.015349875 ubox
13 36 0.022897600 ubox
13 39 0.813933941 ubox
13 44 0.466710869 ubox
13 49 0.073196104 ubox
13 51 0.071528295 ubox
13 54 0.005553795 ubox
14 32 0.015035301 ubox
14 33 0.012428189 ubox
14 48 0.063164734 ubox
14 49 0.080916879 ubox
15 28 0.006255108 ubox
15 32 0.012790502 ubox
15 33 0.011475585 ubox
15 47 0.047704739 ubox
15 48 0.089074851 ubox
16 27 0.006277269 ubox
16 32 0.011669253 ubox
16 36 0.853764269 ubox
16 44 0.014488670 ubox
16 47 0.096506600 ubox
16 54 0.078520480 ubox
17 25 0.004267900 ubox
17 26 0.005923431 ubox
17 30 0.021308489 ubox
17 31 0.011323627 ubox
17 35 0.856848940 ubox
17 41 0.493595863 ubox
17 42 0.044499561 ubox
17 43 0.016949421 ubox
17 46 0.104087791 ubox
17 53 0.081644780 ubox
18 24 0.004761489 ubox
18 25 0.005503590 ubox
18 29 0.021645352 ubox
18 30 0.010704918 ubox
18 34 0.856872383 ubox
18 37 0.008267312 ubox
18 40 0.495410644 ubox
18 41 0.034216449 ubox
18 42 0.016563982 ubox
18 45 0.104432771 ubox
18 52 0.081652237 ubox
18 55 0.008560252 ubox
19 23 0.005167013 ubox
19 28 0.021746949 ubox
19 33 0.855027804 ubox
19 36 0.007626109 ubox
19 39 0.495629070 ubox
19 44 0.104306006 ubox
19 51 0.081524456 ubox
19 54 0.008590617 ubox
20 27 0.021503219 ubox
20 28 0.010735352 ubox
20 32 0.852712887 ubox
20 33 0.056672531 ubox
21 27 0.011379126 ubox
21 32 0.079800330 ubox
21 36 0.493755024 ubox
21 51 0.003610681 ubox
21 54 0.003410216 ubox
22 26 0.011010160 ubox
22 30 0.851467127 ubox
22 31 0.091981909 ubox
22 35 0.496889692 ubox
22 41 0.105019664 ubox
22 42 0.004589161 ubox
22 50 0.005784983 ubox
22 53 0.003635800 ubox
23 29 0.852521584 ubox
23 30 0.085476462 ubox
23 34 0.496910009 ubox
23 37 0.003849544 ubox
23 40 0.105215763 ubox
23 41 0.003533068 ubox
23 50 0.083197884 ubox
23 52 0.003377304 ubox
24 28 0.846940191 ubox
24 33 0.492250090 ubox
24 36 0.003563200 ubox
24 39 0.105127808 ubox
24 49 0.083543232 ubox
25 32 0.486728917 ubox
25 33 0.067932455 ubox
25 48 0.083560222 ubox
26 32 0.096030265 ubox
26 36 0.104620650 ubox
26 47 0.083562523 ubox
26 54 0.003781973 ubox
27 31 0.110029387 ubox
27 35 0.105322303 ubox
27 46 0.083510640 ubox
27 53 0.003950954 ubox
28 34 0.105322993 ubox
28 45 0.083575111 ubox
28 50 0.003948739 ubox
28 52 0.003933288 ubox
29 33 0.104556754 ubox
29 44 0.083468751 ubox
29 49 0.004020823 ubox
29 51 0.003910507 ubox
30 48 0.004045307 ubox
31 47 0.004055681 ubox
32 41 0.083780835 ubox
32 42 0.003844321 ubox
32 46 0.004069776 ubox
33 40 0.083939060 ubox
33 45 0.004079112 ubox
33 50 0.004262350 ubox
33 55 0.003499865 ubox
34 39 0.083701979 ubox
34 44 0.003678180 ubox
34 49 0.004301819 ubox
34 54 0.003559157 ubox
35 48 0.004330841 ubox
36 43 0.004126668 ubox
36 45 0.027331282 ubox
36 52 0.008074695 ubox
36 55 0.008049529 ubox
37 44 0.027719510 ubox
37 47 0.068438637 ubox
37 51 0.008233760 ubox
37 54 0.008155063 ubox
38 46 0.095623684 ubox
39 45 0.098012152 ubox
39 50 0.013502369 ubox
39 52 0.007555016 ubox
40 44 0.097314202 ubox
40 49 0.013512281 ubox
40 51 0.007556904 ubox
41 48 0.013697189 ubox
41 49 0.007167696 ubox
42 47 0.013814601 ubox
42 48 0.007313537 ubox
43 47 0.007400672 ubox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
showpage
end
%%EOF
