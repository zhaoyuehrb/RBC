%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGUCUAGGAUGACAUCUGGUGUAUUGACUGUGGCCAGUCUUAAAGCUAGUUUUUGCUAUGUGGAACAUGCUGCUCUAAUUCAGAUUUAAAGAGUUUCUUCCUGUUAAUUCGAAGCUCACUGUGCCUCUUGUUUCCGAGGGAAGAAGGACUGAUUAAGUCAUCUAA\
) } def
/len { sequence length } bind def

/coor [
[146.45939636 263.80068970]
[135.48695374 274.41052246]
[120.99499512 279.20071411]
[105.86092377 277.22021484]
[93.08959961 268.86221313]
[85.21679688 255.78620911]
[83.80564880 240.58847046]
[89.13635254 226.28649902]
[100.15049744 215.71997070]
[114.66120148 210.98687744]
[116.60757446 196.11367798]
[118.55394745 181.24049377]
[120.50032043 166.36730957]
[122.44669342 151.49412537]
[124.39306641 136.62094116]
[126.33943939 121.74775696]
[107.93160248 134.94764709]
[84.21635437 134.03352356]
[65.21911621 118.06896973]
[50.68898010 121.79392242]
[36.15884781 125.51886749]
[21.62871552 129.24382019]
[7.09858179 132.96876526]
[4.02634001 147.87924194]
[-5.17755079 159.92811584]
[-18.64499092 166.75807190]
[-33.68056488 167.06219482]
[-47.30097198 160.83370972]
[-56.82694244 149.35671997]
[-71.35707855 153.08166504]
[-85.88720703 156.80661011]
[-100.41734314 160.53155518]
[-114.94747925 164.25650024]
[-126.28366852 176.10650635]
[-142.14778137 171.95176697]
[-146.22018433 156.06631470]
[-134.31152344 144.79174805]
[-118.67242432 149.72636414]
[-104.14228821 146.00141907]
[-89.61215210 142.27647400]
[-75.08202362 138.55152893]
[-60.55188751 134.82658386]
[-57.72240829 120.18214417]
[-48.77841949 108.16904449]
[-35.45095062 101.20201111]
[-20.35861778 100.71037292]
[-6.49315596 106.84518433]
[3.37363529 118.43862915]
[17.90376854 114.71367645]
[32.43390274 110.98873138]
[46.96403503 107.26378632]
[61.49416733 103.53884125]
[63.75869370 96.38887787]
[48.75910950 96.50038910]
[44.01795197 82.26938629]
[56.08735657 73.36267853]
[68.28774261 82.08895874]
[70.55226898 74.93900299]
[60.81585312 63.52838516]
[52.83105469 59.00745392]
[51.00689697 51.81398392]
[41.48426437 40.22435379]
[31.96163177 28.63472748]
[22.43899727 17.04510117]
[7.71199274 8.64559746]
[11.70639992 -7.83108425]
[28.64492989 -8.55397892]
[34.02862549 7.52246809]
[43.55125809 19.11209488]
[53.07389069 30.70172119]
[62.59652328 42.29134750]
[72.22646332 53.79196548]
[81.96288300 65.20258331]
[109.65755463 64.61846161]
[128.94638062 81.86610413]
[129.78247070 66.88941956]
[130.61854553 51.91274261]
[131.45463562 36.93606186]
[132.29072571 21.95938110]
[118.72606659 15.03695583]
[109.15478516 3.19168139]
[105.23516846 -11.52417755]
[107.64630890 -26.56100845]
[115.97046661 -39.31359100]
[128.76542664 -47.57246017]
[143.81437683 -49.90671921]
[158.51000977 -45.91194534]
[170.30621338 -36.28025436]
[177.15922546 -22.68039322]
[177.88171387 -7.46862555]
[172.34851074 6.71952152]
[161.51826477 17.42586517]
[147.26739502 22.79546738]
[146.43132019 37.77214813]
[145.59523010 52.74882889]
[144.75914001 67.72550964]
[143.92306519 82.70218658]
[154.96388245 92.85601044]
[169.81834412 90.77148438]
[184.67279053 88.68695831]
[199.52723694 86.60242462]
[214.38169861 84.51789856]
[229.23614502 82.43337250]
[244.09060669 80.34883881]
[258.94503784 78.26431274]
[266.94757080 62.03151703]
[282.93801880 53.89513779]
[300.46212769 56.92871094]
[312.57174683 69.73897552]
[327.33843994 67.10374451]
[342.10516357 64.46851349]
[351.15115356 51.78751755]
[366.16421509 49.32537842]
[378.19787598 58.02750397]
[392.96456909 55.39227295]
[405.19079590 45.35087204]
[419.07943726 50.73188019]
[433.84613037 48.09665298]
[441.47955322 34.44875336]
[456.11804199 28.94887733]
[470.84976196 34.19389725]
[478.71887207 47.70727158]
[476.00976562 63.10840607]
[464.00164795 73.12535095]
[448.36437988 73.02841187]
[436.48138428 62.86335754]
[421.71466064 65.49858856]
[410.54464722 75.35150146]
[395.59979248 70.15898132]
[380.83309937 72.79420471]
[372.55233765 85.12158966]
[357.61431885 88.00444031]
[344.74038696 79.23522186]
[329.97366333 81.87045288]
[315.20697021 84.50567627]
[311.56640625 96.13431549]
[303.26644897 105.15414429]
[291.84603882 109.80165100]
[279.46191406 109.13257599]
[268.48132324 103.21306610]
[261.02957153 93.11876678]
[246.17512512 95.20329285]
[231.32067871 97.28781891]
[216.46621704 99.37235260]
[201.61177063 101.45687866]
[186.75732422 103.54140472]
[171.90286255 105.62593842]
[157.04841614 107.71046448]
[171.08380127 113.00272369]
[186.03665161 114.19102478]
[198.54856873 122.46459198]
[205.49661255 135.75837708]
[205.14659119 150.75428772]
[197.58584595 163.70941162]
[184.70152283 171.39018250]
[169.70950317 171.87953186]
[156.35174561 165.05528259]
[147.96229553 152.62077332]
[146.63510132 137.67971802]
[141.21263123 123.69412994]
[139.26625061 138.56732178]
[137.31987000 153.44050598]
[135.37350464 168.31369019]
[133.42712402 183.18687439]
[131.48075867 198.06005859]
[129.53437805 212.93324280]
[142.33851624 221.24089050]
[150.26275635 234.28578186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[16 160]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[58 73]
[59 72]
[61 71]
[62 70]
[63 69]
[64 68]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[98 148]
[99 147]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[109 135]
[110 134]
[111 133]
[114 130]
[115 129]
[117 127]
[118 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
