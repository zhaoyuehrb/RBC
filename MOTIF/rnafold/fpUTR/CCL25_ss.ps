%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGGGACAGCUUGGCCUACAGCCCGGCGGGCAUCAGCUCCCUUGACCCAGUGGAUAUCGGUGGCCCCGUUAUUCGUCCAGGUGCCCAGGGAGGAGGACCCGCCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[31.23463631 259.45639038]
[23.04691696 263.40344238]
[14.05525684 264.38882446]
[5.29262304 262.32876587]
[-4.05972433 274.05624390]
[-13.41207123 285.78372192]
[-22.76441765 297.51116943]
[-25.31941986 313.12472534]
[-39.30400848 318.25115967]
[-48.65635681 329.97863770]
[-53.80467606 346.13201904]
[-70.75195312 345.65658569]
[-74.98658752 329.23999023]
[-60.38382721 320.62631226]
[-51.03148270 308.89883423]
[-49.14542389 294.12411499]
[-34.49188995 288.15884399]
[-25.13954353 276.43136597]
[-15.78719616 264.70388794]
[-6.43484926 252.97642517]
[-11.03658581 232.35621643]
[0.93689954 214.61759949]
[22.32246208 211.08430481]
[29.94359207 198.16462708]
[27.23141289 186.28378296]
[33.59566116 175.42170715]
[46.05828094 171.75085449]
[54.03876114 159.04998779]
[62.01924515 146.34913635]
[69.99972534 133.64826965]
[77.98020935 120.94740295]
[85.96068573 108.24654388]
[84.06317902 96.66449738]
[90.44610596 86.81550598]
[101.79302979 83.81689453]
[110.12658691 71.34485626]
[107.25332642 56.03530884]
[115.88240051 43.50559616]
[130.49542236 40.86073303]
[138.82897949 28.38868904]
[147.16252136 15.91664505]
[155.49607849 3.44460034]
[163.82963562 -9.02744389]
[172.16319275 -21.49948883]
[167.69636536 -39.79338837]
[177.72245789 -55.35992050]
[195.60598755 -58.74178314]
[203.22712708 -71.66146851]
[210.84825134 -84.58116150]
[203.90443420 -99.92887115]
[207.38992310 -116.24079895]
[219.75248718 -127.19108582]
[236.03665161 -128.65240479]
[243.29243469 -141.78076172]
[250.54821777 -154.90911865]
[257.80401611 -168.03746033]
[265.05978394 -181.16581726]
[272.31558228 -194.29415894]
[272.21911621 -210.11508179]
[285.14739990 -217.51161194]
[292.40316772 -230.63995361]
[299.65896606 -243.76831055]
[296.61721802 -259.52035522]
[307.14532471 -271.62567139]
[323.16702271 -270.79806519]
[332.39181519 -257.67242432]
[327.74325562 -242.31761169]
[312.78732300 -236.51252747]
[305.53152466 -223.38417053]
[298.27575684 -210.25582886]
[298.89117432 -195.37393188]
[285.44390869 -187.03837585]
[278.18814087 -173.91003418]
[270.93234253 -160.78167725]
[263.67657471 -147.65333557]
[256.42077637 -134.52497864]
[249.16500854 -121.39662933]
[255.94586182 -109.80421448]
[256.07769775 -96.26616669]
[249.41778564 -84.35410309]
[237.62945557 -77.26422882]
[223.76794434 -76.96002960]
[216.14682007 -64.04034424]
[208.52568054 -51.12065125]
[213.75732422 -40.79390335]
[213.28327942 -29.10637283]
[207.10627747 -19.03124619]
[196.69473267 -13.18893337]
[184.63523865 -13.16593456]
[176.30168152 -0.69389027]
[167.96812439 11.77815342]
[159.63456726 24.25019836]
[151.30102539 36.72224045]
[142.96746826 49.19428635]
[146.11608887 63.70709991]
[137.84234619 76.47424316]
[122.59862518 79.67840576]
[114.26507568 92.15045166]
[113.66362762 108.85511017]
[98.66155243 116.22702789]
[90.68106842 128.92788696]
[82.70058441 141.62875366]
[74.72010803 154.32962036]
[66.73962402 167.03047180]
[58.75914383 179.73133850]
[58.56011200 198.07752991]
[42.86328125 205.78575134]
[35.24215317 218.70544434]
[40.33336639 226.49913025]
[42.52320480 235.50192261]
[41.58937454 244.67584229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[9 15]
[10 14]
[23 108]
[24 107]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[35 98]
[36 97]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[47 84]
[48 83]
[49 82]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[60 70]
[61 69]
[62 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
