%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR1B)
} def

/sequence { (\
ACCAGUUCUAAGGGACCAUACAGAGUAUUCCUCUCUUCACACCAGGACCAGUCACUGUUGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.324345759 ubox
1 58 0.031439223 ubox
2 13 0.163063105 ubox
2 14 0.047532548 ubox
2 46 0.107385811 ubox
2 51 0.372424420 ubox
2 57 0.026419431 ubox
3 12 0.163654757 ubox
3 13 0.047463456 ubox
3 45 0.107817744 ubox
3 57 0.243915317 ubox
3 60 0.048718463 ubox
4 34 0.020170667 ubox
4 36 0.028336941 ubox
4 37 0.006315933 ubox
4 56 0.246317134 ubox
4 59 0.046094832 ubox
5 16 0.541033638 ubox
5 19 0.007251921 ubox
5 21 0.019178964 ubox
5 33 0.021542754 ubox
5 35 0.030175478 ubox
5 36 0.004788787 ubox
5 40 0.137325324 ubox
5 42 0.138022177 ubox
5 48 0.627284500 ubox
5 55 0.244911754 ubox
5 58 0.015997088 ubox
5 61 0.040062291 ubox
5 64 0.042571598 ubox
6 12 0.004138614 ubox
6 14 0.007798798 ubox
6 15 0.542430666 ubox
6 18 0.006836238 ubox
6 20 0.018680980 ubox
6 25 0.004452363 ubox
6 39 0.136424873 ubox
6 41 0.134772556 ubox
6 47 0.628687779 ubox
6 51 0.003503660 ubox
6 54 0.238847053 ubox
6 57 0.003721453 ubox
6 60 0.036484090 ubox
6 63 0.042400033 ubox
7 11 0.005173896 ubox
7 12 0.003495356 ubox
7 13 0.011281539 ubox
7 14 0.542177268 ubox
7 15 0.041241444 ubox
7 24 0.006042711 ubox
7 46 0.629127392 ubox
7 47 0.105980326 ubox
7 50 0.005608166 ubox
7 62 0.036794250 ubox
8 12 0.013524985 ubox
8 13 0.541044489 ubox
8 14 0.046835908 ubox
8 23 0.006190806 ubox
8 45 0.629562770 ubox
8 46 0.110043772 ubox
8 51 0.166197458 ubox
8 63 0.021021352 ubox
9 13 0.042245417 ubox
9 20 0.004298810 ubox
9 22 0.005952590 ubox
9 44 0.605998466 ubox
9 45 0.106896943 ubox
9 50 0.159086651 ubox
9 57 0.003515425 ubox
9 60 0.020735910 ubox
9 62 0.020360252 ubox
10 19 0.004770507 ubox
10 37 0.531430270 ubox
10 59 0.021065616 ubox
11 32 0.109476894 ubox
11 34 0.137719632 ubox
11 36 0.562206589 ubox
11 37 0.017493976 ubox
11 56 0.028567683 ubox
11 58 0.018341096 ubox
12 31 0.115293128 ubox
12 32 0.188507572 ubox
12 33 0.145028625 ubox
12 34 0.009074588 ubox
12 35 0.565568871 ubox
12 36 0.016892195 ubox
12 37 0.013521237 ubox
12 38 0.011480228 ubox
12 43 0.424785184 ubox
12 49 0.134036990 ubox
12 53 0.004598040 ubox
12 55 0.028760441 ubox
12 56 0.019742531 ubox
13 30 0.114953730 ubox
13 31 0.243831355 ubox
13 32 0.055771772 ubox
13 33 0.019318922 ubox
13 34 0.563465561 ubox
13 35 0.016987020 ubox
13 36 0.016540793 ubox
13 37 0.010003490 ubox
13 38 0.025354886 ubox
13 42 0.425780515 ubox
13 43 0.220216425 ubox
13 48 0.134066746 ubox
13 49 0.131940235 ubox
13 55 0.020579577 ubox
13 56 0.011020118 ubox
14 28 0.004315735 ubox
14 29 0.112096814 ubox
14 30 0.244635470 ubox
14 31 0.054573777 ubox
14 32 0.017322676 ubox
14 33 0.563856740 ubox
14 34 0.007000894 ubox
14 35 0.018595012 ubox
14 36 0.005086426 ubox
14 37 0.025515169 ubox
14 38 0.078139292 ubox
14 42 0.220489010 ubox
14 48 0.132060143 ubox
14 53 0.042122571 ubox
14 55 0.010286793 ubox
14 59 0.004912711 ubox
15 26 0.033414943 ubox
15 28 0.089062189 ubox
15 29 0.237372950 ubox
15 32 0.548830080 ubox
15 34 0.015385139 ubox
15 36 0.020406398 ubox
15 37 0.077671805 ubox
15 52 0.042908046 ubox
15 58 0.005088931 ubox
16 25 0.041887456 ubox
16 46 0.177025776 ubox
16 51 0.042732854 ubox
16 57 0.004776798 ubox
17 45 0.176938707 ubox
17 57 0.007433160 ubox
17 60 0.081500651 ubox
18 26 0.056913009 ubox
18 28 0.566428875 ubox
18 56 0.007178807 ubox
18 58 0.022494753 ubox
18 59 0.078011376 ubox
19 25 0.057045705 ubox
19 27 0.610098507 ubox
19 57 0.024888237 ubox
19 60 0.013024283 ubox
20 26 0.612243382 ubox
20 52 0.005603920 ubox
20 56 0.024639199 ubox
20 58 0.109444324 ubox
20 59 0.010646730 ubox
21 25 0.606430496 ubox
21 51 0.005948236 ubox
21 57 0.116483281 ubox
21 60 0.036890848 ubox
22 29 0.004740830 ubox
22 32 0.017373285 ubox
22 34 0.532723599 ubox
22 36 0.480037387 ubox
22 37 0.023540835 ubox
22 56 0.115094702 ubox
22 59 0.035783965 ubox
23 28 0.003476469 ubox
23 29 0.003920534 ubox
23 30 0.031433339 ubox
23 31 0.020538120 ubox
23 33 0.560620187 ubox
23 35 0.509328896 ubox
23 36 0.003631391 ubox
23 37 0.032550547 ubox
23 38 0.030794761 ubox
23 53 0.072697586 ubox
23 55 0.107926221 ubox
23 58 0.030327286 ubox
24 28 0.003760418 ubox
24 29 0.029754243 ubox
24 32 0.560614605 ubox
24 34 0.509383720 ubox
24 36 0.035912277 ubox
24 37 0.028523963 ubox
24 52 0.078314530 ubox
24 56 0.039425417 ubox
25 31 0.558271115 ubox
25 33 0.508729547 ubox
25 35 0.037610461 ubox
25 36 0.022367277 ubox
25 40 0.004318656 ubox
25 48 0.006239126 ubox
25 52 0.013064631 ubox
25 55 0.040432634 ubox
25 61 0.009607264 ubox
26 39 0.004188485 ubox
26 47 0.004115783 ubox
26 51 0.012106190 ubox
26 54 0.040288941 ubox
26 60 0.009516570 ubox
27 52 0.050174128 ubox
27 59 0.008764224 ubox
28 47 0.004894340 ubox
28 51 0.051090254 ubox
29 47 0.133322291 ubox
29 50 0.032667742 ubox
30 46 0.137668871 ubox
31 45 0.137652282 ubox
31 46 0.004011764 ubox
31 51 0.012907130 ubox
32 44 0.131032502 ubox
32 46 0.008992449 ubox
32 47 0.031243400 ubox
32 50 0.012610615 ubox
33 45 0.012449854 ubox
33 46 0.032719343 ubox
33 51 0.013555278 ubox
33 63 0.017138202 ubox
34 44 0.012116624 ubox
34 45 0.023166836 ubox
34 46 0.016261004 ubox
34 47 0.077361678 ubox
34 50 0.012903282 ubox
34 62 0.017148982 ubox
35 45 0.032034742 ubox
35 46 0.089968631 ubox
35 51 0.007185173 ubox
35 63 0.160019397 ubox
36 44 0.031214659 ubox
36 45 0.089666150 ubox
36 47 0.049573171 ubox
36 50 0.006596165 ubox
36 62 0.160301980 ubox
36 63 0.039358480 ubox
37 44 0.077077676 ubox
37 45 0.003257293 ubox
37 46 0.057768236 ubox
37 47 0.028893725 ubox
37 62 0.055030653 ubox
38 45 0.062727863 ubox
38 46 0.031577768 ubox
38 57 0.005043454 ubox
38 60 0.156281623 ubox
39 52 0.011423310 ubox
39 56 0.004813127 ubox
39 58 0.025442531 ubox
39 59 0.154455924 ubox
40 51 0.012202980 ubox
40 57 0.028310683 ubox
40 60 0.600435043 ubox
41 52 0.018646811 ubox
41 56 0.025356535 ubox
41 58 0.088689427 ubox
41 59 0.596969010 ubox
42 51 0.019994017 ubox
42 57 0.070258398 ubox
43 57 0.692747765 ubox
43 60 0.024252094 ubox
44 56 0.697399159 ubox
44 59 0.023753807 ubox
45 53 0.023180412 ubox
45 55 0.696747724 ubox
45 56 0.018610357 ubox
45 58 0.021541256 ubox
45 59 0.003972311 ubox
46 52 0.021438247 ubox
46 53 0.574721810 ubox
46 55 0.023104608 ubox
46 58 0.003854825 ubox
46 59 0.046856382 ubox
47 52 0.509907056 ubox
47 58 0.052095586 ubox
48 57 0.044841002 ubox
49 57 0.278526350 ubox
49 60 0.088729920 ubox
50 56 0.280727590 ubox
50 59 0.088893404 ubox
51 55 0.274750324 ubox
51 58 0.070918676 ubox
51 61 0.089992555 ubox
51 64 0.027101140 ubox
52 57 0.020372351 ubox
52 60 0.063361390 ubox
52 63 0.024354947 ubox
53 60 0.081752180 ubox
54 59 0.070782386 ubox
55 63 0.392307093 ubox
56 62 0.394319251 ubox
57 61 0.388449505 ubox
57 64 0.042737172 ubox
58 63 0.041598454 ubox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
