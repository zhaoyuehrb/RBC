%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAUCCAGAGGGUCCGCUCCUCCGUCCCCGCCCCGUUUAACUCGCGGAUGCUAGACCCAAGUCCUGGAGGCCUCCUGGCUGCCAGCUUCCUUUCGGCCCCUGCUUUUGUGCUCCCUCCGCUCCCAAACUGUACCUGUCACAGACCAGGAAAAAUGUUUGCUGUGCUGCGUCUGUUGGCGAGUCCCCUCCUCACCCGGUUCCCUUCCUCUGCAUCCUUUCCUCAGCUUGAGAAACACCUCUUUGCCCCGUC\
) } def
/len { sequence length } bind def

/coor [
[61.82141876 363.63693237]
[54.32141876 363.63693237]
[48.19777679 377.33001709]
[42.07413864 391.02313232]
[35.95049667 404.71624756]
[29.82685852 418.40933228]
[23.70321846 432.10244751]
[28.15349007 441.98931885]
[26.47784996 452.47940063]
[19.46437645 460.16384888]
[9.59537792 462.67971802]
[3.13492107 476.21716309]
[-3.32553625 489.75460815]
[-9.78599358 503.29205322]
[-16.24645042 516.82952881]
[-12.27132225 532.37225342]
[-22.05926132 545.08355713]
[-38.10179901 545.21228027]
[-48.09247208 532.65972900]
[-44.36729050 517.05517578]
[-29.78389931 510.36904907]
[-23.32344055 496.83160400]
[-16.86298370 483.29415894]
[-10.40252686 469.75671387]
[-3.94206953 456.21926880]
[-6.83451986 437.08468628]
[10.01011753 425.97879028]
[16.13375664 412.28570557]
[22.25739670 398.59259033]
[28.38103676 384.89950562]
[34.50467682 371.20639038]
[40.62831497 357.51327515]
[29.99193954 351.62631226]
[20.50432205 344.10858154]
[12.41127872 335.17654419]
[5.91891241 325.08297729]
[1.18837810 314.10974121]
[-1.66808712 302.56008911]
[-2.58977485 290.75024414]
[-1.56870317 279.00057983]
[1.35062432 267.62719727]
[6.07287645 256.93319702]
[12.45491409 247.20066833]
[20.31007576 238.68334961]
[29.41360664 231.59991455]
[39.50906372 226.12835693]
[50.31553650 222.40164185]
[61.53543854 220.50444031]
[72.86272430 220.47126770]
[75.26419830 205.66474915]
[77.66567230 190.85823059]
[80.06713867 176.05171204]
[82.46861267 161.24519348]
[84.87008667 146.43867493]
[52.21841049 124.57881165]
[44.09280777 82.36000061]
[70.42095947 43.79233551]
[55.43931198 44.53414154]
[40.45766830 45.27594757]
[26.97935295 54.61763382]
[12.26760292 47.37218857]
[11.45660400 30.99310875]
[25.38064194 22.32978439]
[39.71586227 30.29430199]
[54.69750595 29.55249596]
[69.67915344 28.81068993]
[71.89731598 13.97560406]
[57.78787613 8.88406372]
[43.67844009 3.79252267]
[29.56900215 -1.29901826]
[13.96183968 1.29463553]
[4.61651611 -10.30338955]
[-9.49292088 -15.39493084]
[-23.60235786 -20.48647118]
[-37.71179581 -25.57801247]
[-53.74970245 -22.15492249]
[-64.53071594 -34.51217651]
[-58.96425629 -49.93769455]
[-42.77661514 -52.56302261]
[-32.62025452 -39.68745041]
[-18.51081657 -34.59590912]
[-4.40138006 -29.50436783]
[9.70805740 -24.41282654]
[24.30601883 -27.37066078]
[34.66054535 -15.40845490]
[48.76998138 -10.31691456]
[62.87941742 -5.22537327]
[76.98885345 -0.13383244]
[82.05767822 -5.66167116]
[71.00200653 -15.79932308]
[59.94632721 -25.93697548]
[48.89081573 -36.07481003]
[59.02883530 -47.13015366]
[70.08397675 -36.99265289]
[81.13965607 -26.85500145]
[92.19533539 -16.71734810]
[97.26416016 -22.24518776]
[90.97162628 -35.86150360]
[84.67910004 -49.47782135]
[69.45883179 -49.80146408]
[55.94348907 -56.67333221]
[46.78948593 -68.68267822]
[43.76987076 -83.41505432]
[47.43108749 -97.93762207]
[56.99502563 -109.38299561]
[50.70249557 -122.99931335]
[35.78531647 -128.21977234]
[29.00407791 -142.49530029]
[34.38196945 -157.35644531]
[48.72838211 -163.98637390]
[63.53184509 -158.45166016]
[70.00972748 -144.03596497]
[64.31881714 -129.29183960]
[70.61134338 -115.67552185]
[85.52602386 -115.54249573]
[98.95915222 -108.91976929]
[108.22264862 -97.07288361]
[111.43695831 -82.31861877]
[107.91220856 -67.57199097]
[98.29541779 -55.77035141]
[104.58794403 -42.15403366]
[110.88047791 -28.53771782]
[118.24307251 -27.10867310]
[119.24887085 -42.07491684]
[120.25466156 -57.04115677]
[121.26045990 -72.00740051]
[122.26625061 -86.97364044]
[117.84909821 -101.30851746]
[123.52740479 -115.19220734]
[136.72392273 -122.32324982]
[151.44909668 -119.46504211]
[161.01953125 -107.91484833]
[161.09143066 -92.91502380]
[151.63250732 -81.27379608]
[146.96644592 -67.01799011]
[142.30038452 -52.76219177]
[137.63432312 -38.50638962]
[132.96826172 -24.25058556]
[140.33085632 -22.82154274]
[151.26031494 -33.09515762]
[162.18975830 -43.36877060]
[173.11920166 -53.64238739]
[183.98490906 -63.98339462]
[194.78645325 -74.39140320]
[205.58799744 -84.79940796]
[216.38955688 -95.20741272]
[227.19110107 -105.61542511]
[237.92807007 -116.09002686]
[248.60006714 -126.63083649]
[259.27206421 -137.17164612]
[252.68692017 -150.80668640]
[250.88835144 -165.84144592]
[254.07145691 -180.64505005]
[261.89093018 -193.61170959]
[273.49862671 -203.33489990]
[287.63537598 -208.75993347]
[302.76773071 -209.29833984]
[317.25430298 -204.89170837]
[329.52365112 -196.01803589]
[338.24487305 -183.63987732]
[342.47201538 -169.09992981]
[341.74649048 -153.97537231]
[336.14703369 -139.90679932]
[326.28100586 -128.42027283]
[313.21862793 -120.76174927]
[298.37680054 -117.76198578]
[283.36541748 -119.74636841]
[269.81286621 -126.49964905]
[259.14086914 -115.95883942]
[248.46887207 -105.41803741]
[245.92558289 -98.50084686]
[237.59910583 -94.81387329]
[226.79756165 -84.40586853]
[215.99601746 -73.99786377]
[205.19445801 -63.58985519]
[194.39291382 -53.18185043]
[191.76426697 -46.29664612]
[183.39282227 -42.71294022]
[172.46337891 -32.43932343]
[161.53392029 -22.16570854]
[150.60447693 -11.89209461]
[156.81268311 1.76287603]
[171.73931885 0.28107974]
[186.66593933 -1.20071650]
[199.66578674 -11.19752502]
[214.71784973 -4.68849707]
[216.33786011 11.63043594]
[202.85928345 20.97175598]
[188.14773560 13.72591305]
[173.22111511 15.20770931]
[158.29447937 16.68950653]
[157.41525269 24.13779068]
[172.31182861 25.89624596]
[187.20838928 27.65470123]
[199.23016357 36.62560272]
[185.44993591 42.55127335]
[170.55335999 40.79281616]
[155.65679932 39.03436279]
[154.77757263 46.48264694]
[168.94889832 51.39929199]
[182.27798462 43.22190857]
[197.73727417 45.57656097]
[208.02735901 57.35144806]
[208.28959656 72.98683167]
[198.40014648 85.10016632]
[183.02850342 87.97189331]
[169.43270874 80.24608612]
[164.03225708 65.57062531]
[149.86093140 60.65398026]
[159.50660706 93.62661743]
[150.47087097 124.67185211]
[127.65853882 144.63500977]
[99.67660522 148.84014893]
[97.27513123 163.64666748]
[94.87365723 178.45318604]
[92.47218323 193.25970459]
[90.07070923 208.06622314]
[87.66923523 222.87274170]
[105.28117371 229.83204651]
[120.46950531 241.41394043]
[132.03765869 256.81750488]
[139.04435730 274.93707275]
[140.87973022 294.44137573]
[137.31739807 313.87133789]
[128.53811646 331.74920654]
[115.12275696 346.69094849]
[98.01451874 357.51327515]
[104.13816071 371.20639038]
[115.87180328 376.51864624]
[120.69734955 388.02764893]
[116.53595734 399.36749268]
[122.48976898 413.13528442]
[128.44357300 426.90307617]
[134.39739990 440.67086792]
[149.18087769 446.25869751]
[155.60694885 460.69760132]
[149.86312866 475.42117310]
[135.35711670 481.69421387]
[120.69507599 475.79504395]
[114.57573700 461.22354126]
[120.62960052 446.62469482]
[114.67578888 432.85690308]
[108.72197723 419.08911133]
[102.76815796 405.32131958]
[88.13602448 395.61163330]
[90.44506073 377.33001709]
[84.32141876 363.63693237]
[76.82141876 363.63693237]
[76.82141876 378.63693237]
[76.82141876 393.63693237]
[76.82116699 408.63693237]
[61.82116699 408.63644409]
[61.82141876 393.63693237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[7 27]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[49 218]
[50 217]
[51 216]
[52 215]
[53 214]
[54 213]
[57 66]
[58 65]
[59 64]
[67 88]
[68 87]
[69 86]
[70 85]
[72 83]
[73 82]
[74 81]
[75 80]
[97 122]
[98 121]
[99 120]
[105 114]
[106 113]
[139 181]
[140 180]
[141 179]
[142 178]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 170]
[149 169]
[150 168]
[182 191]
[183 190]
[184 189]
[199 209]
[200 208]
[227 247]
[228 246]
[231 244]
[232 243]
[233 242]
[234 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
