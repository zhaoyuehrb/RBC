%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCCACUGCCACCGCCGCCGCCGCUGCAUCCCGCCCGGUCCGAGUCCGCCCGCCACGCCCGCCGAGCCGCUGCCGCCGCCAGUCUCUCAGCCACUCCACCCACGAG\
) } def
/len { sequence length } bind def

/coor [
[189.78074646 357.33642578]
[183.60223389 343.66799927]
[177.42370605 329.99957275]
[171.24519348 316.33114624]
[156.41017151 314.99401855]
[144.15475464 306.35339355]
[137.82800293 292.64794922]
[139.21997070 277.51657104]
[148.05654907 265.03207397]
[141.87803650 251.36366272]
[135.69950867 237.69523621]
[129.52099609 224.02680969]
[121.14981079 236.47361755]
[106.22537231 237.97735596]
[95.53945160 227.45068359]
[96.81895447 212.50535583]
[109.13869476 203.94824219]
[123.58946228 207.96620178]
[119.40052032 193.56297302]
[108.41680145 183.50280762]
[111.99239349 168.09092712]
[107.80345154 153.68771362]
[96.81972504 143.62753296]
[100.39531708 128.21566772]
[96.20637512 113.81245422]
[86.24594116 104.00014496]
[89.39040375 90.37649536]
[85.20146179 75.97327423]
[73.91811371 64.88288116]
[77.79333496 50.50123215]
[73.60438538 36.09801102]
[68.12665558 28.60126305]
[69.50690460 21.22768211]
[65.72723389 6.71168852]
[47.93605042 -2.31817150]
[42.37726593 -21.16810226]
[52.12096786 -37.88977814]
[47.12387085 -52.03293991]
[33.14275360 -58.90070343]
[28.27646065 -73.31506348]
[34.90998459 -86.60160065]
[29.91288757 -100.74475861]
[24.91579056 -114.88792419]
[9.00824356 -127.10995483]
[12.99551964 -145.94174194]
[7.20627594 -159.77954102]
[-6.16004801 -169.28077698]
[-4.34573507 -185.57925415]
[10.78280449 -191.90849304]
[23.66262627 -181.75752258]
[21.04407501 -165.56878662]
[26.83331680 -151.73098755]
[36.76132202 -148.64329529]
[43.42784500 -140.37831116]
[44.38336945 -129.58059692]
[39.05895233 -119.88501740]
[44.05604935 -105.74185944]
[49.05314636 -91.59869385]
[62.56113052 -85.42861176]
[67.83037567 -71.15661621]
[61.26703262 -57.03003693]
[66.26412964 -42.88687515]
[76.61985779 -41.05646133]
[85.30371857 -34.98155594]
[90.65525818 -25.73977470]
[91.61598969 -15.02177525]
[87.93804169 -4.82209444]
[80.24323273 2.93201756]
[84.02290344 17.44801140]
[88.00760651 31.90906715]
[92.19654846 46.31228638]
[103.18027496 56.37245941]
[99.60468292 71.78433228]
[103.79362488 86.18754578]
[113.75405884 95.99985504]
[110.60959625 109.62350464]
[114.79853821 124.02672577]
[126.08188629 135.11711121]
[122.20666504 149.49876404]
[126.39561462 163.90199280]
[137.67895508 174.99237061]
[133.80374146 189.37403870]
[137.99269104 203.77725220]
[143.18942261 217.84828186]
[149.36793518 231.51670837]
[155.54646301 245.18513489]
[161.72497559 258.85357666]
[176.93482971 260.46838379]
[189.21319580 269.42041016]
[195.32154846 283.22454834]
[193.71098328 298.13299561]
[184.91362000 310.15264893]
[191.09213257 323.82107544]
[197.27066040 337.48950195]
[203.44917297 351.15792847]
[215.29804993 356.49108887]
[220.12478638 368.12017822]
[215.81855774 379.52230835]
[221.60780334 393.36010742]
[227.39704895 407.19790649]
[242.38021851 411.67434692]
[250.93734741 424.76287842]
[249.02804565 440.28347778]
[237.55380249 450.90777588]
[221.93240356 451.61932373]
[209.53982544 442.08215332]
[206.22743225 426.79940796]
[213.55924988 412.98715210]
[207.77000427 399.14935303]
[201.98075867 385.31155396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[9 87]
[10 86]
[11 85]
[12 84]
[18 83]
[19 82]
[21 80]
[22 79]
[24 77]
[25 76]
[27 74]
[28 73]
[30 71]
[31 70]
[33 69]
[34 68]
[37 62]
[38 61]
[41 58]
[42 57]
[43 56]
[45 52]
[46 51]
[98 110]
[99 109]
[100 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
