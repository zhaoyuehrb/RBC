%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCCGCAAGACCUCGCCGCCUGCCCAGCUCUGUCAUUGACUAAGGUUGCUUUUGUCAGUACAGCCGCCAGGGGUUUCCACGCUCAUUCCCCUCCGGACAAGGUGGACAGCUUUGGUGAUAGACAACUGGGAGGUAAAACUCCACAGAGCCAUGCCAGCGACUGACCGCCCAGGGACAGGAG\
) } def
/len { sequence length } bind def

/coor [
[97.01094818 385.70187378]
[95.18865967 393.18698120]
[91.43218231 399.88189697]
[86.03143311 405.29956055]
[79.39529419 409.05038452]
[72.02069855 410.87020874]
[64.45539856 410.63879395]
[58.24536133 424.29293823]
[66.01345062 437.72558594]
[64.36896515 453.15527344]
[53.94424057 464.64895630]
[38.74779892 467.78707886]
[24.62298393 461.36297607]
[17.00107193 447.84683228]
[18.81284523 432.43591309]
[29.36163902 421.05596924]
[44.59122849 418.08288574]
[50.80126572 404.42877197]
[40.59757996 384.34613037]
[48.59721375 363.00335693]
[69.98162842 354.37561035]
[74.51934814 340.07846069]
[79.05706787 325.78128052]
[83.59478760 311.48410034]
[88.01028442 297.14871216]
[92.30324554 282.77615356]
[96.59620667 268.40359497]
[88.44545746 234.04762268]
[110.62998962 214.66824341]
[109.60635376 199.70321655]
[108.58271790 184.73818970]
[107.55908203 169.77314758]
[106.53544617 154.80812073]
[105.51181030 139.84309387]
[104.48817444 124.87805939]
[85.33941650 124.93895721]
[69.17350769 110.53889465]
[54.25214386 109.00493622]
[39.33078766 107.47097015]
[24.40942574 105.93701172]
[9.48806763 104.40304565]
[-5.43329191 102.86908722]
[-22.04479218 110.78952789]
[-35.86238098 99.98745728]
[-50.80775452 98.70847321]
[-65.75312805 97.42948914]
[-80.36494446 104.87441254]
[-93.96910095 95.71697235]
[-92.57081604 79.37754059]
[-77.60852051 72.66474152]
[-64.47414398 82.48411560]
[-49.52877045 83.76309967]
[-34.58339691 85.04208374]
[-25.11846352 77.48538971]
[-12.64260960 78.44400787]
[-3.89932966 87.94772339]
[11.02202988 89.48168945]
[25.94338799 91.01564789]
[40.86474609 92.54961395]
[55.78610611 94.08357239]
[70.70746613 95.61753845]
[76.36031342 90.68850708]
[63.49119186 82.98229980]
[66.84363556 68.36172485]
[81.78460693 67.03227234]
[87.66600800 80.83045197]
[93.31885529 75.90142822]
[93.83097076 60.91017151]
[94.34309387 45.91891479]
[94.85520935 30.92765999]
[95.36732483 15.93640423]
[95.87944031 0.94514906]
[96.39155579 -14.04610634]
[96.90367126 -29.03736115]
[84.83867645 -38.61556244]
[80.77455139 -53.28990555]
[86.06789398 -67.37693787]
[98.49252319 -75.54801941]
[99.00463867 -90.53927612]
[99.51676178 -105.53053284]
[100.02887726 -120.52178192]
[100.54099274 -135.51304626]
[97.70120239 -144.22053528]
[101.19199371 -150.75524902]
[101.95998383 -165.73558044]
[91.83609772 -174.64100647]
[88.74237061 -187.56443787]
[93.59205627 -199.72703552]
[104.40293884 -206.76348877]
[105.42657471 -221.72851562]
[106.45021057 -236.69354248]
[97.03282928 -249.68171692]
[101.45442963 -265.10342407]
[116.32314301 -271.12844849]
[130.23295593 -263.13491821]
[132.51345825 -247.25477600]
[121.41523743 -235.66990662]
[120.39160156 -220.70487976]
[119.36796570 -205.73985291]
[130.94996643 -193.56059265]
[130.13534546 -176.43542480]
[116.94031525 -164.96759033]
[116.17232513 -149.98725891]
[115.53224945 -135.00093079]
[115.02013397 -120.00966644]
[114.50801086 -105.01840973]
[113.99589539 -90.02716064]
[113.48377991 -75.03590393]
[125.32183075 -66.03598785]
[129.64151001 -51.62055969]
[124.58544159 -37.25777435]
[111.89492798 -28.52524567]
[111.38281250 -13.53398991]
[110.87069702 1.45726573]
[110.35858154 16.44852066]
[109.84646606 31.43977547]
[109.33434296 46.43103027]
[108.82222748 61.42228699]
[108.31011200 76.41354370]
[113.56794739 81.76192474]
[121.20455933 68.85137939]
[122.14575195 53.88093948]
[132.04202271 42.60868454]
[146.76466370 39.73740768]
[160.17135620 46.46500778]
[166.66882324 59.98472595]
[163.54634094 74.65612793]
[152.10658264 84.35829926]
[137.12265015 85.04360199]
[124.08361816 92.45868683]
[129.34144592 97.80706787]
[144.33926392 97.55097198]
[159.33708191 97.29487610]
[174.33488464 97.03878021]
[185.13618469 85.50154877]
[200.93443298 85.06466675]
[212.35681152 95.98733521]
[212.62664795 111.78931427]
[201.58383179 123.09558868]
[185.77987671 123.19833374]
[174.59098816 112.03659058]
[159.59317017 112.29268646]
[144.59535217 112.54878235]
[129.59754944 112.80487823]
[119.45320892 123.85442352]
[120.47684479 138.81945801]
[121.50048065 153.78448486]
[122.52411652 168.74951172]
[123.54775238 183.71455383]
[124.57138824 198.67958069]
[125.59502411 213.64460754]
[131.93611145 214.36190796]
[138.22514343 216.71949768]
[144.03128052 220.72213745]
[148.92144775 226.26081848]
[152.49028015 233.11273193]
[154.38986206 240.94900513]
[154.35710144 249.35023499]
[152.23681641 257.82894897]
[161.50309753 269.62454224]
[170.76937866 281.42013550]
[186.48883057 283.05545044]
[196.38281250 295.37960815]
[194.58140564 311.08090210]
[182.15335083 320.84402466]
[166.47198486 318.87670898]
[156.84078979 306.34613037]
[158.97378540 290.68643188]
[149.70750427 278.89083862]
[140.44122314 267.09524536]
[133.07310486 268.49557495]
[128.13072205 282.65795898]
[118.33688354 271.29623413]
[110.96876526 272.69656372]
[106.67581177 287.06912231]
[102.38285065 301.44168091]
[102.92424774 310.58453369]
[97.89196014 316.02182007]
[93.35424042 330.31900024]
[88.81652069 344.61618042]
[84.27880096 358.91333008]
[90.15394592 364.06164551]
[94.41185760 370.57867432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 18]
[8 17]
[21 181]
[22 180]
[23 179]
[24 178]
[25 176]
[26 175]
[27 174]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[34 146]
[35 145]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[44 53]
[45 52]
[46 51]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[84 103]
[85 102]
[89 99]
[90 98]
[91 97]
[131 144]
[132 143]
[133 142]
[134 141]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
