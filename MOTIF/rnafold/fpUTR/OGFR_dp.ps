%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OGFR)
} def

/sequence { (\
GCGCUUCCUCUGCUUUCGGUUUCGCUUCCGCCUCCAGCGCGAGCCCCGCCGCCGCCGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.038776525 ubox
1 25 0.018818734 ubox
1 31 0.004760565 ubox
1 49 0.006291274 ubox
1 52 0.008192670 ubox
1 55 0.028643263 ubox
1 60 0.036577800 ubox
2 12 0.038845513 ubox
2 24 0.018850548 ubox
2 30 0.004771539 ubox
2 48 0.006311841 ubox
2 51 0.008172910 ubox
2 54 0.028723888 ubox
2 57 0.009996953 ubox
2 59 0.033535672 ubox
3 11 0.032342901 ubox
3 13 0.060827767 ubox
3 23 0.018728002 ubox
3 29 0.004457292 ubox
3 47 0.006133395 ubox
3 49 0.003829137 ubox
3 50 0.004648671 ubox
3 52 0.004339743 ubox
3 53 0.022254026 ubox
3 55 0.004479632 ubox
3 56 0.009878636 ubox
3 60 0.164809089 ubox
4 12 0.060989323 ubox
4 48 0.005263609 ubox
4 51 0.005587982 ubox
4 54 0.004709126 ubox
4 59 0.161529550 ubox
5 58 0.138816114 ubox
5 59 0.015666699 ubox
6 57 0.116115022 ubox
6 58 0.042402239 ubox
7 19 0.018418355 ubox
7 57 0.056458664 ubox
8 18 0.018409738 ubox
8 43 0.008346446 ubox
8 59 0.965540769 ubox
9 42 0.008378764 ubox
9 58 0.979985943 ubox
10 19 0.004394122 ubox
10 37 0.004208581 ubox
10 41 0.008375428 ubox
10 57 0.981274217 ubox
10 59 0.016507865 ubox
11 18 0.004392007 ubox
11 36 0.004691051 ubox
11 39 0.008201149 ubox
11 54 0.016840575 ubox
11 57 0.019323113 ubox
11 58 0.015771328 ubox
12 17 0.004593632 ubox
12 20 0.004389868 ubox
12 35 0.004821116 ubox
12 38 0.009863537 ubox
12 52 0.037743328 ubox
12 53 0.018637129 ubox
12 55 0.988484207 ubox
12 56 0.050797556 ubox
12 60 0.079530603 ubox
13 19 0.004440383 ubox
13 37 0.009866212 ubox
13 51 0.036054783 ubox
13 54 0.987752298 ubox
13 59 0.080455675 ubox
14 18 0.004001664 ubox
14 36 0.009583469 ubox
14 58 0.079658955 ubox
14 59 0.005964674 ubox
15 57 0.076482741 ubox
15 58 0.008441408 ubox
15 59 0.040214452 ubox
16 57 0.008836317 ubox
16 58 0.052184081 ubox
17 30 0.014338893 ubox
17 48 0.035465972 ubox
17 51 0.986126749 ubox
17 54 0.065845029 ubox
17 57 0.053768690 ubox
18 29 0.015212115 ubox
18 32 0.005752300 ubox
18 35 0.004930723 ubox
18 45 0.008647678 ubox
18 46 0.008221400 ubox
18 47 0.035712184 ubox
18 50 0.995104130 ubox
18 53 0.068114893 ubox
18 56 0.053813291 ubox
19 28 0.015208021 ubox
19 31 0.005760402 ubox
19 34 0.004933782 ubox
19 44 0.008713145 ubox
19 45 0.008603623 ubox
19 46 0.035548230 ubox
19 49 0.995091641 ubox
19 52 0.068105906 ubox
19 55 0.053756447 ubox
20 30 0.005461830 ubox
20 43 0.008116677 ubox
20 48 0.978982323 ubox
20 51 0.067226190 ubox
20 54 0.052795000 ubox
21 42 0.007495901 ubox
21 43 0.028881947 ubox
22 41 0.006589959 ubox
22 42 0.030283905 ubox
23 30 0.003442798 ubox
23 39 0.007183877 ubox
23 41 0.030544969 ubox
23 48 0.050914672 ubox
23 51 0.038565694 ubox
24 29 0.003488059 ubox
24 31 0.010515115 ubox
24 38 0.010351076 ubox
24 40 0.030536231 ubox
24 44 0.996528740 ubox
24 47 0.031772591 ubox
24 49 0.022413220 ubox
24 50 0.021355556 ubox
24 52 0.011249472 ubox
25 30 0.010521031 ubox
25 37 0.010360012 ubox
25 39 0.028719122 ubox
25 43 0.997649261 ubox
25 48 0.026850697 ubox
25 51 0.011237492 ubox
26 36 0.009837462 ubox
26 37 0.006610082 ubox
26 42 0.979784966 ubox
26 43 0.048710005 ubox
27 36 0.006551657 ubox
27 41 0.922123277 ubox
27 42 0.189442231 ubox
28 41 0.263010580 ubox
29 39 0.995804060 ubox
29 41 0.054917698 ubox
29 48 0.004505726 ubox
30 38 0.997424624 ubox
30 40 0.061211045 ubox
30 44 0.007184685 ubox
30 47 0.004537983 ubox
30 60 0.011316670 ubox
31 37 0.996000637 ubox
31 39 0.061170462 ubox
31 43 0.005144289 ubox
31 59 0.008197140 ubox
32 43 0.007898081 ubox
32 59 0.020578705 ubox
33 42 0.009375908 ubox
33 58 0.022277151 ubox
34 41 0.009370622 ubox
34 57 0.022268366 ubox
37 52 0.009257765 ubox
37 55 0.022619004 ubox
38 51 0.009278077 ubox
38 54 0.022659568 ubox
39 49 0.008959267 ubox
39 50 0.006586225 ubox
39 52 0.019356084 ubox
39 53 0.016054460 ubox
39 55 0.006480070 ubox
40 48 0.011179044 ubox
40 51 0.025187749 ubox
40 54 0.006692570 ubox
41 47 0.011121829 ubox
41 50 0.025197316 ubox
41 53 0.006801387 ubox
43 49 0.024654729 ubox
43 52 0.008011834 ubox
44 48 0.024484784 ubox
44 51 0.008017094 ubox
47 54 0.004356793 ubox
48 53 0.005725118 ubox
48 55 0.004216855 ubox
48 60 0.004449710 ubox
49 54 0.004515501 ubox
49 59 0.004517457 ubox
50 57 0.005387832 ubox
51 56 0.005320571 ubox
51 60 0.008842012 ubox
52 59 0.009400711 ubox
54 60 0.012215244 ubox
55 59 0.012220812 ubox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
showpage
end
%%EOF
