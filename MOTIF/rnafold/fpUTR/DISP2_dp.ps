%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DISP2)
} def

/sequence { (\
CGCCGCCGCUGCCGCCGCCACCGCCGCCGCCGCCGCCGCCGCCGCGGCUUCAGCACCAGCGCCCGGACAGCGGUGCCGCCCACGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 61 0.003537178 ubox
1 75 0.010052557 ubox
1 78 0.229739636 ubox
1 84 0.006763038 ubox
2 48 0.008013368 ubox
2 60 0.010762721 ubox
2 74 0.008400409 ubox
2 76 0.607258398 ubox
2 77 0.593552682 ubox
2 79 0.072627069 ubox
2 83 0.005030450 ubox
2 87 0.062584626 ubox
3 47 0.008023279 ubox
3 59 0.010757182 ubox
3 73 0.007984112 ubox
3 75 0.433486599 ubox
3 78 0.072923900 ubox
3 85 0.006585198 ubox
3 86 0.062891050 ubox
4 46 0.008023456 ubox
4 72 0.007691736 ubox
4 75 0.885405219 ubox
4 84 0.006735462 ubox
4 85 0.030344821 ubox
5 45 0.008023027 ubox
5 60 0.003320917 ubox
5 71 0.006285724 ubox
5 74 0.996884051 ubox
5 76 0.005024997 ubox
5 83 0.005872897 ubox
6 44 0.008013825 ubox
6 59 0.003318183 ubox
6 70 0.005956337 ubox
6 73 0.999816073 ubox
6 75 0.003737159 ubox
7 61 0.003712886 ubox
7 72 0.999823465 ubox
8 42 0.007988257 ubox
8 54 0.012205850 ubox
8 60 0.004471654 ubox
8 71 0.999837206 ubox
8 79 0.003714169 ubox
9 41 0.007991016 ubox
9 53 0.012223174 ubox
9 59 0.004473368 ubox
9 70 0.999847490 ubox
9 78 0.003711310 ubox
10 52 0.012218481 ubox
10 58 0.004467275 ubox
10 69 0.999604773 ubox
11 39 0.007971400 ubox
11 51 0.012158677 ubox
11 57 0.004446006 ubox
11 68 0.999600718 ubox
11 76 0.003501992 ubox
12 38 0.007966961 ubox
12 66 0.999407175 ubox
13 61 0.010529569 ubox
13 65 0.999369750 ubox
14 24 0.005348736 ubox
14 27 0.051453463 ubox
14 28 0.004108803 ubox
14 30 0.004638995 ubox
14 36 0.007939786 ubox
14 48 0.022423599 ubox
14 54 0.003951763 ubox
14 60 0.022667607 ubox
14 62 0.097225273 ubox
14 64 0.986399250 ubox
14 74 0.003890762 ubox
15 23 0.005257355 ubox
15 26 0.052947664 ubox
15 29 0.004794197 ubox
15 35 0.007933465 ubox
15 47 0.022721878 ubox
15 53 0.004030358 ubox
15 59 0.024322923 ubox
15 61 0.078284952 ubox
15 66 0.024585644 ubox
15 73 0.003908030 ubox
16 23 0.007743896 ubox
16 26 0.007647045 ubox
16 46 0.022733670 ubox
16 61 0.962336073 ubox
16 65 0.024588995 ubox
16 72 0.003908110 ubox
17 22 0.015048280 ubox
17 24 0.059239990 ubox
17 25 0.006410524 ubox
17 27 0.014867406 ubox
17 33 0.008112562 ubox
17 45 0.022735104 ubox
17 54 0.049635344 ubox
17 60 0.970647001 ubox
17 62 0.200004589 ubox
17 64 0.023338507 ubox
17 71 0.003907936 ubox
18 23 0.059361445 ubox
18 26 0.014918599 ubox
18 32 0.008106680 ubox
18 44 0.022682660 ubox
18 53 0.050136731 ubox
18 59 0.969221646 ubox
18 61 0.199873000 ubox
18 70 0.003900922 ubox
21 47 0.015416309 ubox
21 66 0.003857369 ubox
22 29 0.006003500 ubox
22 32 0.003298314 ubox
22 41 0.006070668 ubox
22 46 0.016074450 ubox
22 61 0.017493313 ubox
22 65 0.003864746 ubox
23 28 0.008275294 ubox
23 30 0.014108857 ubox
23 33 0.006876759 ubox
23 36 0.003800184 ubox
23 39 0.005715417 ubox
23 40 0.005889577 ubox
23 42 0.021201893 ubox
23 45 0.016127730 ubox
23 48 0.306844340 ubox
23 54 0.930337823 ubox
23 60 0.021607920 ubox
23 62 0.004884805 ubox
23 64 0.003453937 ubox
24 29 0.014276482 ubox
24 32 0.006568608 ubox
24 35 0.003922675 ubox
24 38 0.005824521 ubox
24 41 0.021261217 ubox
24 44 0.016046421 ubox
24 47 0.307393698 ubox
24 53 0.930297395 ubox
24 59 0.021577165 ubox
24 61 0.003933200 ubox
25 32 0.006130954 ubox
25 38 0.004362354 ubox
25 46 0.307536996 ubox
25 61 0.006945905 ubox
26 31 0.006413203 ubox
26 33 0.021191393 ubox
26 36 0.005749125 ubox
26 37 0.004392647 ubox
26 39 0.021718835 ubox
26 42 0.015794266 ubox
26 45 0.307541841 ubox
26 48 0.225104566 ubox
26 54 0.054204522 ubox
26 60 0.007928595 ubox
26 62 0.003963829 ubox
27 32 0.021225274 ubox
27 35 0.005505632 ubox
27 38 0.021752017 ubox
27 41 0.015626190 ubox
27 44 0.307183605 ubox
27 47 0.225483553 ubox
27 53 0.054209167 ubox
27 59 0.007917399 ubox
27 61 0.003836900 ubox
28 35 0.004523708 ubox
28 41 0.008550953 ubox
28 44 0.010932071 ubox
28 46 0.225477267 ubox
29 34 0.004875112 ubox
29 36 0.021893937 ubox
29 39 0.015340920 ubox
29 40 0.008885582 ubox
29 42 0.306951244 ubox
29 43 0.012111894 ubox
29 45 0.225437314 ubox
29 48 0.921789683 ubox
29 54 0.016913198 ubox
30 35 0.021894753 ubox
30 38 0.014652778 ubox
30 41 0.306910936 ubox
30 44 0.222803995 ubox
30 47 0.923133056 ubox
30 53 0.016915575 ubox
31 38 0.019288635 ubox
31 41 0.025230743 ubox
31 44 0.033450739 ubox
31 46 0.923123888 ubox
32 37 0.019191162 ubox
32 39 0.307140975 ubox
32 40 0.021499066 ubox
32 42 0.216811309 ubox
32 43 0.046536858 ubox
32 45 0.923126955 ubox
32 48 0.020937128 ubox
32 54 0.008399141 ubox
33 38 0.306958574 ubox
33 41 0.206446488 ubox
33 44 0.922059962 ubox
33 47 0.020970615 ubox
33 53 0.008396462 ubox
34 41 0.093330363 ubox
34 44 0.032336387 ubox
34 46 0.020973772 ubox
35 40 0.109509360 ubox
35 42 0.920088346 ubox
35 43 0.035357044 ubox
35 45 0.020982010 ubox
35 48 0.032510360 ubox
36 41 0.918494443 ubox
36 44 0.019961113 ubox
36 47 0.032564372 ubox
37 44 0.006610780 ubox
37 46 0.032586061 ubox
38 43 0.009419282 ubox
38 45 0.032588335 ubox
38 48 0.003474036 ubox
39 44 0.032499344 ubox
39 47 0.003479337 ubox
40 46 0.003479868 ubox
41 45 0.003255583 ubox
47 54 0.006485996 ubox
47 60 0.003691809 ubox
48 53 0.007241624 ubox
48 59 0.004006079 ubox
49 58 0.016453748 ubox
50 58 0.010864238 ubox
53 60 0.215064560 ubox
53 62 0.073047749 ubox
53 76 0.005218739 ubox
54 59 0.215079412 ubox
54 61 0.073159078 ubox
54 75 0.005235161 ubox
55 74 0.005235215 ubox
56 73 0.005236129 ubox
57 72 0.005209009 ubox
59 71 0.005182899 ubox
60 70 0.005184214 ubox
61 87 0.013395175 ubox
62 86 0.014047253 ubox
63 85 0.014055220 ubox
64 84 0.014054805 ubox
65 83 0.014008277 ubox
70 79 0.014013010 ubox
71 78 0.014029734 ubox
72 77 0.013836811 ubox
75 87 0.090259311 ubox
76 85 0.258948194 ubox
76 86 0.106718627 ubox
77 84 0.262429127 ubox
77 85 0.105806450 ubox
78 83 0.256226924 ubox
78 87 0.918028290 ubox
79 85 0.072042149 ubox
79 86 0.943892019 ubox
80 84 0.072649071 ubox
80 85 0.943356121 ubox
80 86 0.047136284 ubox
81 85 0.048415941 ubox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
80 85 0.9500000 lbox
showpage
end
%%EOF
