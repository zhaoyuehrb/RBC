%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGCUCCCCGAGCCGCUCCUGACCCACCUACCCCAGCUCUCGCGCCGCGUGCAGAGGUGCUCAAGCCUCCUCGCGGUCCGCAGUCAGUGCCGCCGCGCCCGGCCUCCCGCACGCCCCGCAGGUAGCGCCCCCGCCCGCGGCCCAGAGUGCGCUCGCGCCGGCACCAGCUCCCGGAUAAACGGCGCGCCGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[17.11854744 352.33966064]
[11.27889061 375.71771240]
[-3.78327417 394.48059082]
[-25.28166199 405.20516968]
[-49.25929642 405.95092773]
[-53.91706467 420.20944214]
[-58.57483673 434.46792603]
[-63.23260498 448.72644043]
[-62.40348816 465.66012573]
[-78.44585419 471.14453125]
[-88.15690613 457.24734497]
[-77.49111938 444.06869507]
[-72.83335114 429.81018066]
[-68.17557526 415.55166626]
[-63.51780701 401.29315186]
[-69.93090057 397.67965698]
[-75.81660461 393.25430298]
[-81.07273102 388.09304810]
[-85.60788727 382.28454590]
[-89.34308624 375.92886353]
[-92.21312714 369.13549805]
[-94.16771698 362.02163696]
[-95.17236328 354.71011353]
[-95.20899200 347.32723999]
[-94.27623749 340.00067139]
[-92.38951874 332.85717773]
[-89.58077240 326.02044678]
[-85.89788818 319.60900879]
[-81.40393066 313.73403931]
[-76.17603302 308.49758911]
[-70.30407715 303.99069214]
[-63.88915634 300.29187012]
[-57.04183960 297.46566772]
[-49.88024521 295.56167603]
[-42.52801895 294.61343384]
[-35.11219788 294.63809204]
[-27.76101112 295.63595581]
[-20.60166550 297.59048462]
[-13.75814152 300.46853638]
[-5.28971624 288.08767700]
[3.17870879 275.70681763]
[4.36130285 268.40390015]
[11.87982464 263.19879150]
[20.54264259 250.95314026]
[29.20545959 238.70750427]
[37.86827469 226.46186829]
[46.53109360 214.21623230]
[47.56481934 199.35754395]
[61.85125351 192.55987549]
[70.51406860 180.31423950]
[79.17688751 168.06860352]
[87.83970642 155.82296753]
[96.50252533 143.57733154]
[105.16533661 131.33169556]
[80.47390747 120.30706024]
[75.60056305 96.95432281]
[61.99207687 90.64487457]
[48.38359451 84.33541870]
[34.77510834 78.02597046]
[21.16662598 71.71652222]
[6.41544437 77.38909912]
[-7.99219894 70.89330292]
[-13.50850391 56.08297348]
[-6.86074543 41.74481201]
[8.00708008 36.38539886]
[22.27415466 43.18437576]
[27.47607803 58.10803604]
[41.08456039 64.41748810]
[54.69304657 70.72693634]
[68.30152893 77.03638458]
[81.91001129 83.34584045]
[99.59125519 73.02569580]
[120.99201965 79.46472168]
[131.73271179 101.17935944]
[139.40295410 88.28877258]
[147.07319641 75.39817810]
[154.74343872 62.50758743]
[162.41368103 49.61699677]
[160.00192261 36.93978500]
[166.66375732 26.35862923]
[178.36302185 23.25984955]
[186.23580933 10.49194908]
[194.10858154 -2.27595210]
[201.98136902 -15.04385281]
[202.63847351 -30.85140800]
[215.90435791 -37.62384033]
[223.77713013 -50.39173889]
[218.04313660 -64.68955231]
[221.78390503 -79.44963837]
[233.36170959 -89.06308746]
[248.20259094 -90.00439453]
[256.07537842 -102.77230072]
[263.94815063 -115.54019928]
[271.82095337 -128.30810547]
[279.69372559 -141.07600403]
[279.79507446 -159.48536682]
[295.54510498 -167.21562195]
[303.21536255 -180.10621643]
[310.88558960 -192.99679565]
[306.08923340 -205.58917236]
[309.37619019 -218.45620728]
[319.32836914 -226.95248413]
[332.16409302 -228.14433289]
[340.03686523 -240.91223145]
[347.90963745 -253.68013000]
[355.68139648 -266.50976562]
[363.35165405 -279.40036011]
[370.91989136 -292.35110474]
[378.38571167 -305.36117554]
[378.54345703 -321.18157959]
[391.58892822 -328.36944580]
[399.05471802 -341.37948608]
[393.49822998 -355.99658203]
[398.68615723 -370.74850464]
[412.16897583 -378.66986084]
[427.58047485 -376.02041626]
[437.64382935 -364.05117798]
[437.60742188 -348.41363525]
[427.48846436 -336.49136353]
[412.06478882 -333.91369629]
[404.59899902 -320.90362549]
[404.97525024 -306.01379395]
[391.39578247 -297.89538574]
[383.92996216 -284.88531494]
[383.32690430 -277.51187134]
[376.24224854 -271.73013306]
[368.57199097 -258.83953857]
[367.85263062 -251.47654724]
[360.67755127 -245.80734253]
[352.80477905 -233.03944397]
[344.93197632 -220.27154541]
[349.51010132 -204.09344482]
[340.80368042 -189.31654358]
[323.77618408 -185.32655334]
[316.10595703 -172.43595886]
[308.43569946 -159.54537964]
[311.10729980 -147.74122620]
[304.81436157 -136.93661499]
[292.46163940 -133.20321655]
[284.58883667 -120.43531799]
[276.71606445 -107.66741943]
[268.84329224 -94.89951324]
[260.97048950 -82.13161469]
[266.79388428 -68.44855499]
[263.40338135 -53.78675079]
[251.89506531 -43.81620789]
[236.54504395 -42.51895905]
[228.67225647 -29.75105667]
[228.57826233 -14.85674763]
[214.74926758 -7.17107058]
[206.87648010 5.59683037]
[199.00370789 18.36473083]
[191.13092041 31.13263321]
[191.57357788 48.67186356]
[175.30427551 57.28723907]
[167.63403320 70.17783356]
[159.96379089 83.06842041]
[152.29354858 95.95901489]
[144.62330627 108.84960938]
[147.91162109 123.48473358]
[160.35894775 131.85516357]
[172.80627441 140.22560120]
[185.25358582 148.59603882]
[199.37605286 142.38641357]
[214.61022949 144.82028198]
[226.09492493 155.12103271]
[230.16542053 170.00170898]
[225.52285767 184.71394348]
[213.64863586 194.56312561]
[198.33178711 196.40641785]
[184.45985413 189.65562439]
[176.45933533 176.46490479]
[176.88316345 161.04336548]
[164.43583679 152.67292786]
[151.98851013 144.30249023]
[139.54119873 135.93205261]
[151.44247437 145.06221008]
[155.26466370 159.56706238]
[149.40826416 173.37657166]
[136.32408142 180.71168518]
[121.48760986 178.50276184]
[111.10769653 167.67422485]
[109.52815247 152.75762939]
[117.41097260 139.99450684]
[108.74816132 152.24014282]
[100.08534241 164.48577881]
[91.42252350 176.73141479]
[82.75970459 188.97705078]
[74.09689331 201.22268677]
[72.44354248 216.95727539]
[58.77672958 222.87905884]
[50.11391068 235.12469482]
[41.45109558 247.37033081]
[32.78827667 259.61596680]
[24.12545967 271.86160278]
[15.55957222 284.17523193]
[7.09114695 296.55609131]
[-1.37727845 308.93695068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[39 198]
[40 197]
[41 196]
[43 195]
[44 194]
[45 193]
[46 192]
[47 191]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 184]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[81 153]
[82 152]
[83 151]
[84 150]
[86 148]
[87 147]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[97 136]
[98 135]
[99 134]
[103 131]
[104 130]
[105 129]
[106 127]
[107 126]
[108 124]
[109 123]
[111 121]
[112 120]
[160 176]
[161 175]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
