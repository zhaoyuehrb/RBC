%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCUACUCCGCCUCUCGGGAUCCUUUAAGAGGCGGGGCUUGGCUGCCAGCUCCGCGGCCCGGGCAAAAGGCUGGGACUUUACUCCGGGUGGCGGCGAGGACGAGUCUGUGCUCCAUCAGCUGCCGCACCCGCCGCCUCCCGCCCCCAAACCCCAUCCCCGCGGUUGAGCCACG\
) } def
/len { sequence length } bind def

/coor [
[-33.89460373 288.66085815]
[-36.89587784 294.90426636]
[-41.24410629 300.27340698]
[-46.69849777 304.48431396]
[-52.96006012 307.31686401]
[-59.68799973 308.62612915]
[-66.51827240 308.34982300]
[-73.08325195 306.51132202]
[-79.03155518 303.21771240]
[-90.49364471 312.89349365]
[-101.95574188 322.56924438]
[-113.41783142 332.24502563]
[-124.87992859 341.92077637]
[-136.34202576 351.59655762]
[-147.80412292 361.27230835]
[-159.26620483 370.94805908]
[-170.72830200 380.62384033]
[-182.19039917 390.29959106]
[-188.13003540 409.54171753]
[-207.26428223 412.20013428]
[-218.37576294 422.27658081]
[-222.87005615 438.04788208]
[-238.83926392 441.77835083]
[-249.85562134 429.63046265]
[-244.58645630 414.10086060]
[-228.45222473 411.16513062]
[-217.34075928 401.08865356]
[-217.75851440 390.84072876]
[-212.33857727 381.87530518]
[-202.67285156 377.29428101]
[-191.86616516 378.83749390]
[-180.40406799 369.16174316]
[-168.94197083 359.48596191]
[-157.47987366 349.81021118]
[-146.01779175 340.13446045]
[-134.55569458 330.45867920]
[-123.09359741 320.78292847]
[-111.63150024 311.10714722]
[-100.16941071 301.43139648]
[-88.70731354 291.75564575]
[-89.70037079 268.22021484]
[-72.92485809 251.32516479]
[-48.87830353 252.16870117]
[-39.10120392 240.79292297]
[-29.32410049 229.41714478]
[-19.54699898 218.04136658]
[-9.76989651 206.66560364]
[-9.23476982 201.89117432]
[-5.67440033 197.41125488]
[0.56172878 195.06756592]
[10.73640633 184.04595947]
[20.91108322 173.02433777]
[21.61532021 168.27192688]
[25.33244324 163.92117310]
[31.64782333 161.80029297]
[42.20725632 151.14672852]
[52.76668930 140.49316406]
[63.32612228 129.83959961]
[73.88555145 119.18604279]
[84.44498444 108.53247833]
[85.24332428 93.55374146]
[75.87611389 81.83813477]
[66.50890350 70.12252808]
[57.14169693 58.40692520]
[47.77449036 46.69131851]
[32.28073120 47.54163742]
[19.26450920 39.09429550]
[13.73082733 24.59746742]
[17.80750084 9.62548065]
[29.92696190 -0.06463037]
[45.42903519 -0.74682081]
[58.35285187 7.84122562]
[63.72894669 22.39723015]
[59.49009705 37.32411194]
[68.85730743 49.03971481]
[78.22451019 60.75532150]
[87.59172058 72.47092438]
[96.95892334 84.18653107]
[94.35518646 69.41424561]
[88.04827118 55.80458450]
[89.81814575 40.90936661]
[99.13867188 29.15658569]
[113.23906708 24.04006577]
[127.92762756 27.08082962]
[138.83778381 37.37493134]
[142.72621155 51.86217117]
[138.43695068 66.23583984]
[127.24599457 76.22255707]
[118.99184418 88.74729156]
[132.24021912 81.71305847]
[145.48860168 74.67881775]
[151.62445068 67.86892700]
[159.03512573 67.63967133]
[172.40626526 60.84168243]
[185.77738953 54.04368591]
[199.14852905 47.24569321]
[212.51966858 40.44770050]
[218.77540588 33.74777603]
[226.18899536 33.65008926]
[239.67866516 27.09047890]
[253.16835022 20.53086853]
[266.65805054 13.97125912]
[273.03170776 7.38341856]
[280.44586182 7.41732407]
[294.04983521 1.09816492]
[300.53942871 -5.37551689]
[307.95178223 -5.21002865]
[321.66577148 -11.28674698]
[327.43087769 -25.75745583]
[341.42538452 -31.72475243]
[355.18545532 -26.13943672]
[368.89944458 -32.21615601]
[382.61343384 -38.29287338]
[396.32742310 -44.36959076]
[402.09252930 -58.84030151]
[416.08700562 -64.80759430]
[429.84710693 -59.22228241]
[443.56109619 -65.29899597]
[450.65518188 -79.68834686]
[466.35845947 -82.97266388]
[478.62469482 -72.63250732]
[478.04431152 -56.59996033]
[465.06250000 -47.17381668]
[449.63781738 -51.58501053]
[435.92382812 -45.50829315]
[430.81768799 -31.56329155]
[416.99630737 -25.20527458]
[402.40414429 -30.65560150]
[388.69015503 -24.57888412]
[374.97616577 -18.50216484]
[361.26217651 -12.42544746]
[356.15603638 1.51955318]
[342.33468628 7.87757063]
[327.74249268 2.42724228]
[314.02850342 8.50396061]
[300.36898804 14.70214367]
[286.76501465 21.02130318]
[273.21765137 27.46094131]
[259.72796631 34.02054977]
[246.23828125 40.58016205]
[232.74859619 47.13977051]
[219.31765747 53.81883621]
[205.94653320 60.61682892]
[192.57539368 67.41482544]
[179.20425415 74.21281433]
[165.83311462 81.01081085]
[152.52284241 87.92720032]
[139.27445984 94.96143341]
[126.02608490 101.99567413]
[140.57673645 105.63962555]
[152.23890686 115.07327271]
[158.84272766 128.54136658]
[159.15946960 143.53802490]
[153.13020325 157.27293396]
[141.87673950 167.19058228]
[127.49291992 171.44564819]
[112.65501404 169.24645996]
[100.12377930 161.00218201]
[92.23079681 148.24674988]
[90.44464874 133.35346985]
[95.09854889 119.09191132]
[84.53911591 129.74548340]
[73.97968292 140.39903259]
[63.42024994 151.05259705]
[52.86081696 161.70616150]
[42.30138397 172.35972595]
[31.93269539 183.19902039]
[21.75801849 194.22062683]
[11.58334064 205.24224854]
[1.60587966 216.44270325]
[-8.17122269 227.81848145]
[-17.94832420 239.19424438]
[-27.72542572 250.57002258]
[-37.50252914 261.94580078]
[-34.25493622 268.14743042]
[-32.52901459 274.91296387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[20 27]
[21 26]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[50 169]
[51 168]
[52 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[89 149]
[90 148]
[91 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[99 141]
[100 140]
[101 139]
[102 138]
[104 137]
[105 136]
[107 135]
[108 134]
[111 131]
[112 130]
[113 129]
[114 128]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
