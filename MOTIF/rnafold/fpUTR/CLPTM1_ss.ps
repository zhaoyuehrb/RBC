%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUGGUCCUUCCAUAGCCGGAAGUGGCCUUCCUGAGAGGCGUGGCUGCGGCACUCUUGCCGGAUAGGGUGGCCCGGCGGGGCUAGGAAAGCGUGAAAUCUCGCGCGAUUGCGCUGCGAAGUCGGGGACGGGGCGGGGCUGGCGGCGGGGGCGGGGACCCGGAGCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-92.83297729 478.73037720]
[-96.48954773 493.27786255]
[-108.55134583 502.19488525]
[-123.53157806 501.42514038]
[-134.61589050 491.31881714]
[-136.76249695 476.47485352]
[-145.88490295 488.38208008]
[-155.00732422 500.28927612]
[-164.12974548 512.19647217]
[-173.14366150 524.18603516]
[-182.04835510 536.25689697]
[-190.95304871 548.32781982]
[-199.85774231 560.39868164]
[-208.76243591 572.46960449]
[-206.15602112 588.05749512]
[-215.40319824 600.87408447]
[-231.01776123 603.31555176]
[-243.73588562 593.93341064]
[-246.01213074 578.29388428]
[-236.49603271 565.67565918]
[-220.83332825 563.56488037]
[-211.92863464 551.49401855]
[-203.02394104 539.42309570]
[-194.11924744 527.35223389]
[-185.21455383 515.28131104]
[-183.76895142 508.00595093]
[-176.03694153 503.07406616]
[-166.91453552 491.16687012]
[-157.79211426 479.25964355]
[-148.66969299 467.35244751]
[-140.32199097 454.88986206]
[-132.78271484 441.92224121]
[-125.24343109 428.95462036]
[-117.70414734 415.98699951]
[-110.16487122 403.01937866]
[-102.62558746 390.05175781]
[-109.13895416 379.75970459]
[-110.65338135 367.60140991]
[-106.81883240 355.88858032]
[-98.30818939 346.87463379]
[-86.70008087 342.32135010]
[-74.18629456 343.15466309]
[-66.18112183 330.46936035]
[-65.26734161 323.10824585]
[-57.91364288 317.62823486]
[-49.67943573 305.09036255]
[-41.55941391 292.47827148]
[-33.55423355 279.79296875]
[-33.30530167 264.90042114]
[-19.39710808 257.35903931]
[-11.39193058 244.67372131]
[-11.82836151 241.14088440]
[-10.55266285 237.22114563]
[-7.40200377 233.73199463]
[-2.58951259 231.53227234]
[6.09452343 219.30168152]
[14.77855968 207.07109070]
[23.46259499 194.84048462]
[32.14663315 182.60989380]
[40.83066559 170.37928772]
[49.51470184 158.14869690]
[58.19873810 145.91809082]
[66.88277435 133.68750000]
[59.00189972 125.45684814]
[53.18388367 115.37920380]
[49.86106873 103.97566986]
[49.33329391 91.86805725]
[51.74460220 79.74507904]
[57.06867218 68.32313538]
[65.10407257 58.30406570]
[75.48004913 50.33232117]
[71.18283844 35.96103287]
[66.88562012 21.58974266]
[62.58840561 7.21845484]
[58.29119110 -7.15283394]
[53.99397278 -21.52412224]
[41.70449448 -32.38233566]
[45.22798538 -48.39848709]
[60.93977737 -53.09653091]
[72.67692566 -41.64352417]
[68.36526489 -25.82133865]
[72.66247559 -11.45004940]
[76.95969391 2.92123890]
[81.25691223 17.29252815]
[85.55412292 31.66381645]
[89.85134125 46.03510284]
[97.32044983 46.71514893]
[93.99783325 32.08777237]
[106.88256836 24.40769005]
[118.16834259 34.28854370]
[112.25865936 48.07524109]
[119.72776031 48.75528717]
[126.54975128 35.39637756]
[133.37174988 22.03746986]
[140.19374084 8.67856026]
[147.01571655 -4.68034887]
[153.83770752 -18.03925896]
[152.45440674 -34.37995911]
[166.06695557 -43.52492905]
[180.67193604 -36.06660843]
[181.24499512 -19.67747688]
[167.19662476 -11.21726799]
[160.37463379 2.14164090]
[153.55264282 15.50055027]
[146.73065186 28.85945892]
[139.90866089 42.21836853]
[133.08666992 55.57727814]
[137.31515503 61.29916382]
[140.64533997 67.35777283]
[143.06230164 73.62017822]
[144.56997681 79.95536041]
[145.19039917 86.23679352]
[160.05149841 84.20016479]
[172.67333984 74.66078949]
[186.33328247 80.59838867]
[201.19438171 78.56175232]
[216.05548096 76.52511597]
[230.91656494 74.48848724]
[238.31086731 60.97439957]
[252.08386230 54.48148346]
[266.86434937 57.31016159]
[277.02340698 68.16979218]
[291.88449097 66.13315582]
[306.74557495 64.09652710]
[321.61709595 55.95561218]
[333.55670166 67.99230957]
[325.29562378 82.79740143]
[308.78222656 78.95761871]
[293.92111206 80.99425507]
[279.06002808 83.03088379]
[272.19717407 96.22328186]
[258.72265625 102.92414856]
[243.71064758 100.37606812]
[232.95320129 89.34957886]
[218.09210205 91.38621521]
[203.23101807 93.42284393]
[188.36991882 95.45948029]
[176.81103516 104.85317993]
[162.08813477 99.06125641]
[147.22703552 101.09789276]
[140.88655090 123.66195679]
[124.48126984 140.40130615]
[102.04959106 147.19531250]
[79.11337280 142.37153625]
[70.42933655 154.60212708]
[61.74530029 166.83273315]
[53.06126404 179.06332397]
[44.37722778 191.29393005]
[35.69319153 203.52452087]
[27.00915718 215.75512695]
[18.32512093 227.98571777]
[9.64108467 240.21630859]
[1.29338157 252.67889404]
[-6.71179628 265.36419678]
[-7.53331375 281.16406250]
[-20.86892319 287.79812622]
[-28.87409973 300.48342896]
[-30.81886482 309.44589233]
[-37.14157867 313.32458496]
[-45.37578201 325.86242676]
[-53.49580765 338.47454834]
[-61.50098801 351.15985107]
[-54.28051758 367.75955200]
[-58.40666199 385.22402954]
[-72.05214691 396.63595581]
[-89.65796661 397.59103394]
[-97.19724274 410.55865479]
[-104.73652649 423.52627563]
[-112.27581024 436.49389648]
[-119.81509399 449.46151733]
[-127.35437775 462.42913818]
[-112.80879211 458.76498413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 30]
[7 29]
[8 28]
[9 27]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[31 171]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[42 162]
[43 161]
[45 160]
[46 159]
[47 157]
[48 156]
[50 154]
[51 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[112 140]
[113 139]
[115 137]
[116 136]
[117 135]
[118 134]
[122 130]
[123 129]
[124 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
