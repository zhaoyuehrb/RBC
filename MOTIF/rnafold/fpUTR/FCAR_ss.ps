%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACCCAAGAGCAACCUGGAACUAAGUUAUUCGGCAACGAACUGUUCCACUUUGUUGUGAGGCAAUAGAUGUGGAAAUUCCCUGACGAGGGGCUCUGUCCUCAUACUUCCUGCGGAGCUUAUUGUCGUAAGAAUAUCUGUCAUCCUGCUAAUGUGCAUUGAAAGGAGAGCAACGGGGCUGAGGCCGUGUCAGCACG\
) } def
/len { sequence length } bind def

/coor [
[68.42402649 192.66232300]
[72.89697266 178.34475708]
[84.85763550 169.29254150]
[99.85187531 168.87672424]
[112.29580688 177.25210571]
[108.52858734 162.73287964]
[104.76136780 148.21365356]
[92.42254639 147.85194397]
[80.57564545 144.38378906]
[69.98972321 138.03433228]
[61.35201645 129.21575928]
[48.13021469 136.29981995]
[34.90841675 143.38388062]
[21.68661499 150.46795654]
[8.46481514 157.55201721]
[3.79666734 172.41291809]
[-9.71303368 179.40881348]
[-23.85185623 174.86686707]
[-37.07365799 181.95092773]
[-50.29545593 189.03500366]
[-63.51725769 196.11906433]
[-76.73905945 203.20312500]
[-89.96086121 210.28720093]
[-93.77509308 215.70858765]
[-98.97579956 218.03292847]
[-103.71645355 217.37869263]
[-117.15636444 224.03970337]
[-130.59626770 230.70069885]
[-133.49707031 235.06593323]
[-137.39503479 237.61967468]
[-141.43028259 238.28581238]
[-144.83792114 237.34169006]
[-158.57955933 243.35565186]
[-172.32118225 249.36961365]
[-181.60334778 262.88897705]
[-197.92922974 261.34048462]
[-204.50415039 246.31709290]
[-194.56439209 233.27355957]
[-178.33514404 235.62797546]
[-164.59350586 229.61402893]
[-150.85188293 223.60006714]
[-137.25726318 217.26078796]
[-123.81735992 210.59979248]
[-110.37745667 203.93879700]
[-97.04492188 197.06539917]
[-83.82312775 189.98132324]
[-70.60132599 182.89726257]
[-57.37952423 175.81320190]
[-44.15772247 168.72912598]
[-30.93592262 161.64506531]
[-26.88563347 147.35763550]
[-13.57776356 139.98503113]
[1.38074911 144.33021545]
[14.60254955 137.24615479]
[27.82435036 130.16207886]
[41.04615021 123.07801819]
[54.26795197 115.99394989]
[51.63426971 97.17459106]
[56.44131851 78.78990173]
[67.94956970 63.66823959]
[84.38855743 54.13596725]
[103.22925568 51.65955353]
[106.53391266 37.02810669]
[109.83856964 22.39665985]
[113.14322662 7.76521301]
[106.80670166 -1.09198296]
[106.40515900 -11.75514221]
[111.82979584 -20.68805695]
[121.07942963 -25.06114388]
[124.84664917 -39.58037186]
[128.61387634 -54.09960556]
[132.38108826 -68.61883545]
[136.03300476 -83.16749573]
[139.56939697 -97.74466705]
[143.10577393 -112.32183838]
[146.64216614 -126.89901733]
[142.37648010 -142.13432312]
[152.89624023 -152.67869568]
[156.43263245 -167.25585938]
[159.96900940 -181.83303833]
[163.50540161 -196.41021729]
[154.12884521 -211.17236328]
[158.24357605 -227.82209778]
[172.83142090 -236.18101501]
[176.13607788 -250.81246948]
[179.44075012 -265.44390869]
[182.74540710 -280.07534790]
[186.05006409 -294.70681763]
[189.35472107 -309.33825684]
[184.84785461 -324.50396729]
[195.19898987 -335.21392822]
[198.50364685 -349.84536743]
[201.80830383 -364.47680664]
[205.11296082 -379.10824585]
[208.41761780 -393.73971558]
[211.72227478 -408.37115479]
[215.02694702 -423.00259399]
[218.33160400 -437.63403320]
[221.63626099 -452.26550293]
[209.40522766 -461.33862305]
[201.92765808 -474.60534668]
[200.49908447 -489.76712036]
[205.36700439 -504.19705200]
[215.68804932 -515.39508057]
[229.67401123 -521.42108154]
[244.90173340 -521.23107910]
[258.73294067 -514.85784912]
[268.77127075 -503.40570068]
[273.27755737 -488.85876465]
[271.47100830 -473.73739624]
[263.66467285 -460.66143799]
[251.21101379 -451.89636230]
[236.26770020 -448.96084595]
[232.96304321 -434.32937622]
[229.65838623 -419.69793701]
[226.35372925 -405.06649780]
[223.04907227 -390.43505859]
[219.74441528 -375.80358887]
[216.43975830 -361.17214966]
[213.13510132 -346.54071045]
[209.83044434 -331.90927124]
[214.57368469 -317.79010010]
[203.98616028 -306.03359985]
[200.68150330 -291.40216064]
[197.37684631 -276.77069092]
[194.07218933 -262.13925171]
[190.76753235 -247.50781250]
[187.46287537 -232.87635803]
[195.80247498 -223.04577637]
[196.97143555 -210.01199341]
[190.31932068 -198.51730347]
[178.08256531 -192.87382507]
[174.54618835 -178.29666138]
[171.00979614 -163.71948242]
[167.47341919 -149.14230347]
[171.99205017 -134.94966125]
[161.21932983 -123.36263275]
[157.68295288 -108.78545380]
[154.14656067 -94.20828247]
[150.61018372 -79.63111115]
[152.08996582 -72.38189697]
[146.90032959 -64.85161591]
[143.13310242 -50.33238602]
[139.36589050 -35.81315231]
[135.59866333 -21.29392242]
[142.10937500 -3.09339499]
[127.77467346 11.06987095]
[124.47001648 25.70131683]
[121.16535950 40.33276367]
[117.86070251 54.96421051]
[130.47604370 62.33785629]
[140.31912231 73.13747406]
[146.49452209 86.38066101]
[148.44050598 100.86274719]
[145.98005676 115.26635742]
[159.31257629 122.13975525]
[172.64511108 129.01315308]
[188.45663452 128.45956421]
[196.22364807 141.16873169]
[209.55618286 148.04212952]
[224.53181458 142.99180603]
[238.65501404 150.08483887]
[243.54672241 165.11303711]
[236.30477905 179.16044617]
[221.22569275 183.89299011]
[207.25563049 176.50292969]
[202.68278503 161.37466431]
[189.35025024 154.50126648]
[174.49237061 155.54647827]
[165.77171326 142.34568787]
[152.43917847 135.47229004]
[139.10665894 128.59889221]
[133.47088623 135.02751160]
[126.79289246 140.36543274]
[119.28060150 144.44642639]
[123.04782104 158.96566772]
[126.81504059 173.48489380]
[131.49554443 187.73596191]
[137.07048035 201.66148376]
[142.64541626 215.58699036]
[148.22035217 229.51251221]
[153.79528809 243.43803406]
[168.70756531 248.14526367]
[177.06163025 261.36431885]
[174.91294861 276.85357666]
[163.27607727 287.29949951]
[147.64556885 287.76980591]
[135.40167236 278.04244995]
[132.32560730 262.71038818]
[139.86976624 249.01296997]
[134.29483032 235.08744812]
[128.71989441 221.16194153]
[123.14495850 207.23641968]
[117.57002258 193.31089783]
[112.51509094 207.43348694]
[100.19412231 215.98881531]
[85.19542694 215.79089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 177]
[6 176]
[7 175]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[26 44]
[27 43]
[28 42]
[32 41]
[33 40]
[34 39]
[62 150]
[63 149]
[64 148]
[65 147]
[69 145]
[70 144]
[71 143]
[72 142]
[73 140]
[74 139]
[75 138]
[76 137]
[78 135]
[79 134]
[80 133]
[81 132]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[155 172]
[156 171]
[157 170]
[159 168]
[160 167]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
