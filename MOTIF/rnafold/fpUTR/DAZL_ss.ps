%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCCACGCGCCUCCGCCCCGCCAGCCUCAUUUCUGGCGCGCUCUCCCCGUGGCUCCGCAAGAUGGCGGCGGGCCUGCUGAGGGACUUGCCUUCUUAAACUUCGAGGGCCGGAGCUUCCUUAGGAAGUGGUUCCCUCCUGGUCCCUGUACUUGGUGGGGUGGGCGGGGUUCGUGGGGGCCUCAGCGUGGGGUGUGGGGCGUCCUGAAGGCAUGGCCCUGUAGCUGAGGGGGCUGGGCCGGAAGUGCCUCUGGUC\
CCCUCGCGCCUGUCAGCUGCGGGGGACUUGCUG\
) } def
/len { sequence length } bind def

/coor [
[89.47792816 98.61083984]
[76.76777649 90.64515686]
[64.01451874 82.74868011]
[51.21853256 74.92163086]
[38.42254639 67.09458160]
[25.62655640 59.26753235]
[12.83056927 51.44048309]
[0.03458091 43.61343384]
[-12.76140690 35.78638458]
[-25.55739594 27.95933723]
[-38.52051544 20.41231537]
[-51.64463806 13.14888763]
[-64.76876068 5.88545990]
[-77.89288330 -1.37796736]
[-91.01700592 -8.64139462]
[-104.14113617 -15.90482235]
[-117.26525879 -23.16824913]
[-130.38937378 -30.43167686]
[-142.41789246 -21.93863487]
[-156.77558899 -19.24428749]
[-170.83897400 -22.74240685]
[-180.07247925 -10.92113018]
[-189.30596924 0.90014684]
[-198.53945923 12.72142315]
[-207.77294922 24.54269981]
[-217.00645447 36.36397552]
[-212.59828186 51.24173355]
[-217.80863953 65.85787964]
[-230.63404846 74.59220886]
[-246.14288330 74.08618927]
[-258.37164307 64.53440094]
[-262.61816406 49.60969925]
[-257.24954224 35.05093765]
[-244.33015442 26.45625305]
[-228.82772827 27.13048172]
[-219.59423828 15.30920601]
[-210.36073303 3.48792911]
[-201.12724304 -8.33334732]
[-191.89375305 -20.15462494]
[-182.66024780 -31.97590065]
[-186.02194214 -36.93155670]
[-188.45886230 -42.40156555]
[-189.89488220 -48.21511459]
[-190.28518677 -54.19066238]
[-189.61756897 -60.14161301]
[-187.91288757 -65.88213348]
[-185.22436523 -71.23296356]
[-195.91709900 -81.75273895]
[-206.60981750 -92.27251434]
[-217.30253601 -102.79228973]
[-227.99525452 -113.31206512]
[-238.68798828 -123.83184052]
[-256.63076782 -128.06066895]
[-260.60311890 -145.17324829]
[-271.40954590 -155.57617188]
[-282.21600342 -165.97909546]
[-293.02246094 -176.38200378]
[-303.82888794 -186.78492737]
[-314.63534546 -197.18785095]
[-325.44177246 -207.59077454]
[-336.30459595 -217.93479919]
[-347.22351074 -228.21963501]
[-358.14239502 -238.50447083]
[-368.92205811 -237.55201721]
[-378.26528931 -242.56401062]
[-383.22442627 -251.68688965]
[-382.38534546 -261.81683350]
[-393.07809448 -272.33660889]
[-403.77081299 -282.85638428]
[-414.46353149 -293.37615967]
[-422.73669434 -297.14102173]
[-425.21453857 -304.06887817]
[-435.79226685 -314.70425415]
[-446.36999512 -325.33966064]
[-456.94775391 -335.97503662]
[-467.52548218 -346.61041260]
[-479.14044189 -344.33312988]
[-490.30432129 -347.88916016]
[-498.29739380 -356.29153442]
[-501.23083496 -367.38769531]
[-498.49197388 -378.41030884]
[-508.83602905 -389.27313232]
[-519.18005371 -400.13598633]
[-529.52410889 -410.99880981]
[-539.86810303 -421.86163330]
[-550.21215820 -432.72445679]
[-561.62084961 -442.46307373]
[-573.97277832 -450.97372437]
[-589.72656250 -452.43228149]
[-595.81701660 -466.02478027]
[-608.16888428 -474.53540039]
[-620.52075195 -483.04605103]
[-632.87261963 -491.55670166]
[-645.22454834 -500.06735229]
[-657.57641602 -508.57800293]
[-671.76818848 -502.52844238]
[-686.97387695 -505.13442993]
[-698.34136963 -515.56439209]
[-702.24334717 -530.49011230]
[-697.43469238 -545.14892578]
[-685.44989014 -554.86322021]
[-670.11315918 -556.53320312]
[-656.31842041 -549.62597656]
[-648.46759033 -536.34564209]
[-649.06573486 -520.92987061]
[-636.71386719 -512.41925049]
[-624.36199951 -503.90856934]
[-612.01013184 -495.39794922]
[-599.65826416 -486.88729858]
[-587.30633545 -478.37664795]
[-572.43603516 -477.52682495]
[-565.46209717 -463.32559204]
[-553.11022949 -454.81494141]
[-547.51306152 -459.80712891]
[-530.72155762 -474.78363037]
[-537.77001953 -488.02444458]
[-544.81854248 -501.26525879]
[-551.86700439 -514.50604248]
[-558.91546631 -527.74688721]
[-565.96392822 -540.98767090]
[-578.74395752 -552.12805176]
[-571.57678223 -567.49255371]
[-554.82867432 -564.85882568]
[-552.72314453 -548.03613281]
[-545.67462158 -534.79534912]
[-538.62615967 -521.55450439]
[-531.57769775 -508.31372070]
[-524.52923584 -495.07290649]
[-517.48077393 -481.83209229]
[-517.53204346 -467.06933594]
[-522.20019531 -454.95751953]
[-530.04730225 -446.73629761]
[-539.34930420 -443.06848145]
[-529.00531006 -432.20565796]
[-518.66125488 -421.34283447]
[-508.31723022 -410.48001099]
[-497.97320557 -399.61718750]
[-487.62915039 -388.75433350]
[-469.30224609 -389.38024902]
[-456.14337158 -376.15240479]
[-456.89010620 -357.18817139]
[-446.31234741 -346.55276489]
[-435.73461914 -335.91738892]
[-425.15689087 -325.28201294]
[-414.57913208 -314.64660645]
[-403.94375610 -304.06887817]
[-393.25103760 -293.54910278]
[-382.55831909 -283.02932739]
[-371.86557007 -272.50955200]
[-352.82711792 -268.98892212]
[-347.85754395 -249.42337036]
[-336.93865967 -239.13853455]
[-326.01977539 -228.85369873]
[-319.02716064 -226.56503296]
[-315.03884888 -218.39721680]
[-304.23242188 -207.99429321]
[-293.42596436 -197.59136963]
[-282.61953735 -187.18846130]
[-271.81307983 -176.78553772]
[-261.00662231 -166.38261414]
[-250.20019531 -155.97969055]
[-238.13140869 -155.90409851]
[-229.04574585 -147.36405945]
[-228.16821289 -134.52456665]
[-217.47547913 -124.00479126]
[-206.78276062 -113.48501587]
[-196.09004211 -102.96524048]
[-185.39732361 -92.44546509]
[-174.70458984 -81.92568970]
[-155.15170288 -87.47209167]
[-135.81382751 -80.82961273]
[-123.65127563 -64.24118805]
[-123.12595367 -43.55580139]
[-110.00183105 -36.29237366]
[-96.87770844 -29.02894592]
[-83.75357819 -21.76551819]
[-70.62945557 -14.50209141]
[-57.50533295 -7.23866367]
[-44.38121033 0.02476373]
[-31.25708771 7.28819132]
[-28.56378174 6.67709494]
[-25.47108650 7.07241631]
[-22.35269928 8.62962246]
[-19.63110352 11.36911774]
[-17.73034668 15.16334820]
[-4.93435860 22.99039650]
[7.86162949 30.81744576]
[20.65761757 38.64449310]
[33.45360565 46.47154236]
[46.24959183 54.29859161]
[59.04558182 62.12564087]
[71.84156799 69.95269012]
[79.15492249 70.75868988]
[84.73345947 77.93501282]
[97.44361115 85.90069580]
[112.36369324 87.44699860]
[126.43727112 82.25714874]
[140.51084900 77.06730652]
[150.57714844 64.12120056]
[166.78269958 66.63353729]
[172.45663452 82.01985168]
[161.76208496 94.45201111]
[145.70068359 91.14088440]
[131.62712097 96.33072662]
[117.55354309 101.52056885]
[116.33601379 108.92108917]
[127.93675232 118.43017578]
[113.90096283 123.72211456]
[112.68343353 131.12263489]
[124.35258484 140.54765320]
[136.02174377 149.97265625]
[147.69088745 159.39767456]
[163.98455811 154.78039551]
[179.65824890 160.74085999]
[188.58747864 174.73747253]
[187.41036987 191.13107300]
[199.18128967 200.42868042]
[210.95219421 209.72628784]
[222.72311401 219.02389526]
[234.49403381 228.32151794]
[246.26493835 237.61912537]
[258.03585815 246.91673279]
[269.80676270 256.21432495]
[281.57769775 265.51196289]
[293.34860229 274.80957031]
[305.11953735 284.10717773]
[316.89044189 293.40478516]
[332.51571655 295.88702393]
[337.70724487 309.84756470]
[349.47817993 319.14517212]
[361.24908447 328.44277954]
[373.07037354 337.67626953]
[384.94165039 346.84539795]
[405.04473877 348.68212891]
[411.51022339 366.93191528]
[423.57803345 375.84078979]
[435.64584351 384.74966431]
[447.76190186 393.59280396]
[459.92584229 402.36996460]
[472.08978271 411.14712524]
[484.25372314 419.92425537]
[496.41769409 428.70141602]
[511.97726440 425.93109131]
[524.89050293 435.04284668]
[527.49615479 450.63085938]
[518.24835205 463.44702148]
[502.63369751 465.88775635]
[489.91601562 456.50497437]
[487.64053345 440.86535645]
[475.47659302 432.08819580]
[463.31262207 423.31106567]
[451.14868164 414.53390503]
[438.98474121 405.75674438]
[431.75384521 404.39709473]
[426.73696899 396.81747437]
[414.66915894 387.90859985]
[402.60134888 378.99972534]
[392.72869873 381.41851807]
[382.94049072 377.95291138]
[376.52401733 369.51220703]
[375.77255249 358.71667480]
[363.90127563 349.54757690]
[356.71853638 347.95288086]
[351.95147705 340.21371460]
[340.18057251 330.91610718]
[328.40963745 321.61846924]
[313.62631226 319.80126953]
[307.59283447 305.17568970]
[295.82189941 295.87808228]
[284.05099487 286.58047485]
[272.28009033 277.28286743]
[260.50915527 267.98526001]
[248.73825073 258.68765259]
[236.96733093 249.39002991]
[225.19642639 240.09242249]
[213.42550659 230.79481506]
[201.65458679 221.49720764]
[189.88366699 212.19960022]
[178.11276245 202.90199280]
[165.67488098 207.68669128]
[152.38867188 205.69572449]
[141.72944641 197.34202576]
[136.53842163 184.71681213]
[138.26586914 171.06683350]
[126.59672546 161.64181519]
[114.92757416 152.21679688]
[103.25842285 142.79177856]
[84.11869049 127.95161438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 153]
[62 152]
[63 151]
[67 149]
[68 148]
[69 147]
[70 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[87 113]
[88 112]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[196 205]
[197 204]
[198 203]
[209 287]
[210 286]
[211 285]
[212 284]
[216 279]
[217 278]
[218 277]
[219 276]
[220 275]
[221 274]
[222 273]
[223 272]
[224 271]
[225 270]
[226 269]
[227 268]
[229 266]
[230 265]
[231 264]
[232 262]
[233 261]
[235 257]
[236 256]
[237 255]
[238 253]
[239 252]
[240 251]
[241 250]
[242 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
