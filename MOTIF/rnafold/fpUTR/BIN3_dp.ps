%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BIN3)
} def

/sequence { (\
GCUUACGUCACUUCCUGGAGACUGGUUGAAUCCGGAAGUGACCCUAGAGAAACGAGUUGUGGCUGAGGACCCCGGCGGCAGACGCAGGUUCGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008373210 ubox
1 57 0.014397628 ubox
1 60 0.005020271 ubox
1 63 0.031807939 ubox
1 79 0.003539067 ubox
1 85 0.042025154 ubox
1 89 0.009325966 ubox
2 7 0.012377685 ubox
2 47 0.168944772 ubox
2 49 0.096281847 ubox
2 56 0.015879717 ubox
2 59 0.005174704 ubox
2 62 0.031783917 ubox
2 67 0.023970880 ubox
2 68 0.012216084 ubox
2 78 0.003539680 ubox
2 84 0.041840470 ubox
2 88 0.010192458 ubox
2 93 0.019385222 ubox
2 94 0.035542161 ubox
3 46 0.167491056 ubox
3 47 0.041371665 ubox
3 48 0.095479982 ubox
3 49 0.005734519 ubox
3 55 0.015768185 ubox
3 61 0.025535769 ubox
3 62 0.004752943 ubox
3 66 0.024226068 ubox
3 67 0.012033714 ubox
3 69 0.004873246 ubox
3 77 0.003430279 ubox
3 82 0.006309162 ubox
3 87 0.010052261 ubox
3 92 0.018112399 ubox
3 93 0.034291074 ubox
3 94 0.004679998 ubox
3 95 0.014653795 ubox
4 46 0.052468140 ubox
4 47 0.090631895 ubox
4 48 0.006881394 ubox
4 54 0.014733912 ubox
4 61 0.018475745 ubox
4 65 0.023772400 ubox
4 66 0.011295811 ubox
4 81 0.005810059 ubox
4 86 0.009009939 ubox
4 92 0.028831713 ubox
4 93 0.004670701 ubox
4 94 0.009922168 ubox
5 45 0.055747453 ubox
5 57 0.010067303 ubox
5 60 0.025719623 ubox
5 64 0.018964048 ubox
5 89 0.006070290 ubox
6 54 0.003516991 ubox
6 56 0.010451590 ubox
6 59 0.026147587 ubox
6 65 0.007234350 ubox
6 84 0.005971503 ubox
6 88 0.006114345 ubox
6 92 0.014297099 ubox
7 42 0.993339441 ubox
7 58 0.005320402 ubox
7 96 0.006769462 ubox
8 41 0.998741968 ubox
8 95 0.005224433 ubox
9 40 0.999971389 ubox
10 39 0.999786742 ubox
11 38 0.999971747 ubox
12 37 0.999405535 ubox
13 36 0.999394532 ubox
13 37 0.004407922 ubox
14 35 0.986347493 ubox
15 34 0.972271027 ubox
15 35 0.164464096 ubox
16 34 0.231411453 ubox
17 23 0.007356549 ubox
17 32 0.031416757 ubox
17 33 0.998020149 ubox
18 22 0.007542147 ubox
18 27 0.007924456 ubox
18 31 0.022674622 ubox
18 32 0.998475731 ubox
19 26 0.012463133 ubox
19 27 0.010570830 ubox
19 31 0.986705353 ubox
20 26 0.025360016 ubox
20 27 0.100368130 ubox
20 32 0.006021440 ubox
21 26 0.088402366 ubox
21 31 0.007331964 ubox
22 35 0.004008343 ubox
23 34 0.006343493 ubox
24 32 0.003625295 ubox
24 33 0.035720459 ubox
25 31 0.006909470 ubox
25 32 0.035693214 ubox
26 30 0.010576451 ubox
42 68 0.009634210 ubox
42 93 0.006115305 ubox
42 94 0.080167938 ubox
43 62 0.073624522 ubox
43 67 0.014795344 ubox
43 68 0.665495527 ubox
43 88 0.011946580 ubox
43 92 0.007716565 ubox
43 93 0.122882722 ubox
43 94 0.650736376 ubox
44 56 0.012928955 ubox
44 61 0.074355811 ubox
44 62 0.024380168 ubox
44 67 0.667085655 ubox
44 68 0.172678737 ubox
44 87 0.012020562 ubox
44 92 0.122707819 ubox
44 93 0.652083636 ubox
44 94 0.104013183 ubox
45 55 0.012729460 ubox
45 59 0.007396281 ubox
45 61 0.024803639 ubox
45 65 0.085951444 ubox
45 66 0.651593857 ubox
45 67 0.172704667 ubox
45 86 0.011606105 ubox
45 92 0.594788246 ubox
45 93 0.097096513 ubox
46 58 0.007744060 ubox
46 60 0.025742286 ubox
46 64 0.134851187 ubox
46 90 0.032935417 ubox
47 57 0.006580105 ubox
47 58 0.072374951 ubox
47 63 0.137764798 ubox
47 89 0.031937575 ubox
47 90 0.178477192 ubox
47 91 0.575681238 ubox
48 57 0.072435752 ubox
48 58 0.024209772 ubox
48 64 0.677239251 ubox
48 89 0.182220293 ubox
48 90 0.571715862 ubox
49 57 0.021711118 ubox
49 58 0.011611015 ubox
49 63 0.685227996 ubox
49 89 0.538265247 ubox
49 90 0.055875275 ubox
49 91 0.263616104 ubox
50 57 0.011790052 ubox
50 58 0.017278081 ubox
50 89 0.066876632 ubox
50 90 0.238663203 ubox
51 57 0.016185684 ubox
51 58 0.025572381 ubox
51 89 0.207446258 ubox
51 90 0.145080952 ubox
52 57 0.020563394 ubox
52 60 0.702486935 ubox
52 89 0.220242822 ubox
53 59 0.703210232 ubox
53 61 0.021678518 ubox
53 65 0.020060043 ubox
53 84 0.312860257 ubox
53 88 0.252951028 ubox
53 92 0.089529915 ubox
54 58 0.433907662 ubox
54 60 0.018310961 ubox
54 64 0.010313095 ubox
54 83 0.311953651 ubox
54 90 0.019449461 ubox
54 91 0.090322932 ubox
55 64 0.049076602 ubox
55 89 0.045140478 ubox
55 90 0.080753494 ubox
56 63 0.051293892 ubox
56 70 0.010532348 ubox
56 79 0.004124913 ubox
56 83 0.420291631 ubox
56 85 0.176272442 ubox
56 89 0.047773746 ubox
56 96 0.023011046 ubox
57 62 0.048849897 ubox
57 66 0.003415606 ubox
57 69 0.010539217 ubox
57 78 0.004100499 ubox
57 81 0.541204509 ubox
57 82 0.331036469 ubox
57 84 0.166161720 ubox
57 87 0.074663492 ubox
57 88 0.017505620 ubox
57 95 0.023043529 ubox
58 65 0.003608019 ubox
58 68 0.010405300 ubox
58 77 0.004058462 ubox
58 80 0.647433296 ubox
58 81 0.204401808 ubox
58 84 0.022031107 ubox
58 86 0.080830825 ubox
58 87 0.008440726 ubox
58 94 0.022612408 ubox
59 70 0.009021641 ubox
59 76 0.003809757 ubox
59 79 0.682541610 ubox
59 83 0.030442314 ubox
59 85 0.081626835 ubox
59 96 0.024598949 ubox
60 69 0.009052130 ubox
60 75 0.003172574 ubox
60 78 0.681771230 ubox
60 80 0.007228902 ubox
60 82 0.030147822 ubox
60 84 0.081516539 ubox
60 92 0.016292405 ubox
60 95 0.024265034 ubox
61 71 0.003705367 ubox
61 79 0.006160249 ubox
61 83 0.080777444 ubox
61 91 0.012848386 ubox
61 97 0.119863409 ubox
62 70 0.003830288 ubox
62 76 0.683250123 ubox
62 79 0.085719825 ubox
62 90 0.008081602 ubox
62 96 0.121282066 ubox
63 75 0.683293456 ubox
63 78 0.085924432 ubox
63 81 0.027652461 ubox
63 93 0.055545207 ubox
63 94 0.122112904 ubox
64 74 0.681245684 ubox
64 77 0.085810842 ubox
64 80 0.028581130 ubox
64 92 0.055475279 ubox
64 93 0.118480495 ubox
65 73 0.670935195 ubox
65 76 0.085148473 ubox
65 79 0.028525797 ubox
65 91 0.052835396 ubox
66 90 0.048946278 ubox
67 73 0.141827817 ubox
67 89 0.036771717 ubox
67 90 0.004093209 ubox
67 91 0.183865022 ubox
67 97 0.074054873 ubox
68 72 0.143760922 ubox
68 89 0.004529325 ubox
68 90 0.185994532 ubox
68 91 0.025350337 ubox
68 96 0.074952154 ubox
69 89 0.192187321 ubox
69 90 0.025148812 ubox
70 78 0.019579545 ubox
70 88 0.191768673 ubox
70 93 0.081457616 ubox
70 94 0.133334683 ubox
71 77 0.019545080 ubox
71 78 0.015362343 ubox
71 87 0.189928197 ubox
71 88 0.050544678 ubox
71 92 0.081549995 ubox
71 93 0.131682766 ubox
71 94 0.674428015 ubox
72 77 0.015357032 ubox
72 78 0.005450609 ubox
72 87 0.055578473 ubox
72 88 0.108024373 ubox
72 92 0.122666126 ubox
72 93 0.676441179 ubox
72 94 0.004724710 ubox
73 77 0.005430228 ubox
73 84 0.014349259 ubox
73 87 0.115534622 ubox
73 92 0.676847642 ubox
73 93 0.004222356 ubox
74 83 0.014445263 ubox
74 90 0.115740058 ubox
74 91 0.672688147 ubox
75 85 0.464618933 ubox
75 89 0.366118356 ubox
75 90 0.403166938 ubox
76 84 0.468385221 ubox
76 88 0.504240738 ubox
77 83 0.467907769 ubox
77 90 0.035740786 ubox
78 85 0.540981058 ubox
78 89 0.070221468 ubox
79 84 0.540477113 ubox
79 88 0.071538951 ubox
81 90 0.039772797 ubox
81 91 0.010780728 ubox
82 89 0.051969153 ubox
82 90 0.007960047 ubox
83 88 0.053745330 ubox
83 92 0.009232080 ubox
84 91 0.009189211 ubox
87 97 0.098108014 ubox
88 96 0.098980202 ubox
89 95 0.098292671 ubox
90 94 0.088576570 ubox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
43 68 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
52 60 0.9500000 lbox
53 59 0.9500000 lbox
71 94 0.9500000 lbox
72 93 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 85 0.9500000 lbox
76 84 0.9500000 lbox
77 83 0.9500000 lbox
showpage
end
%%EOF
