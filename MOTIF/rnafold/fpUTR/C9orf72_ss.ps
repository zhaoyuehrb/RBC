%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUAACCUACGGUGUCCCGCUAGGAAAGAGAGGUGCGUCAAACAGCGACAAGUUCCGCCCACGUAAAAGAUGACGCUUGGUGUGUCAGCCGUCCCUGCUGCCCGGUUGCUUCUCUUUUGGGGGCGGGGUCUAGCAAGAGCAGGUGUGGGUUUAGGAGAUAUCUCCGGAGCAUUUGGAUAAUGUGACAGUUGGAAUGCAGUG\
) } def
/len { sequence length } bind def

/coor [
[112.14074707 194.13716125]
[99.32113647 186.34886169]
[101.70736694 171.54066467]
[101.63576508 156.54083252]
[101.56415558 141.54100037]
[101.49255371 126.54117584]
[94.00064087 126.88925934]
[86.87217712 140.08717346]
[79.74371338 153.28509521]
[72.61524963 166.48300171]
[65.58911896 179.73568726]
[58.66575241 193.04234314]
[51.74238205 206.34898376]
[53.00139999 222.69973755]
[39.31970596 231.74093628]
[24.77185631 224.17178345]
[24.32343102 207.77876282]
[38.43572998 199.42562866]
[45.35910034 186.11897278]
[52.28247070 172.81231689]
[52.58116531 165.42286682]
[59.41733170 159.35453796]
[66.54579163 146.15663147]
[73.67425537 132.95870972]
[80.80271912 119.76079559]
[76.40372467 113.68635559]
[64.25484467 122.48433685]
[55.41914368 134.60581970]
[41.16060257 129.94813538]
[41.18437576 114.94815826]
[55.45685196 110.33545685]
[67.60573578 101.53746796]
[63.20674515 95.46302795]
[48.44367218 98.11853027]
[36.23124313 108.17671967]
[22.33523750 102.81478882]
[7.57216597 105.47029877]
[-7.14804268 108.35395813]
[-21.82186317 111.46506500]
[-36.49568558 114.57616425]
[-43.68400574 128.46363831]
[-58.13709259 134.43376160]
[-73.03063965 129.66760254]
[-81.33237457 116.41561127]
[-79.12245941 100.93496704]
[-67.44435883 90.53516388]
[-51.81211472 90.12666321]
[-39.60678864 99.90234375]
[-24.93297005 96.79123688]
[-10.25914860 93.68013763]
[-6.94823790 90.23012543]
[-1.43271720 88.82735443]
[4.91665649 90.70722961]
[19.67972755 88.05171967]
[30.83620453 78.18347168]
[45.78816223 83.35546112]
[60.55123520 80.69995117]
[70.69696808 69.65168762]
[72.08779144 54.71630859]
[73.47861481 39.78092957]
[74.86943817 24.84554672]
[76.26026154 9.91016579]
[77.65108490 -5.02521515]
[79.04190826 -19.96059608]
[71.20623016 -7.16989279]
[57.18054199 -1.85198593]
[42.83437347 -6.23233366]
[34.17136002 -18.47783089]
[34.81683731 -33.46393585]
[44.50067520 -44.91920853]
[59.17035294 -48.04980087]
[72.68774414 -41.54472351]
[63.42642212 -53.34421158]
[54.16510010 -65.14369965]
[44.90377808 -76.94319153]
[35.64245605 -88.74267578]
[26.38113403 -100.54216766]
[10.68947506 -103.88153839]
[3.64588618 -118.29567719]
[10.65360546 -132.72729492]
[26.33691025 -136.10568237]
[38.66491318 -125.83922577]
[38.18062210 -109.80348969]
[47.44194412 -98.00399780]
[56.70326614 -86.20451355]
[65.96458435 -74.40502167]
[75.22590637 -62.60553360]
[84.48722839 -50.80604553]
[91.97623444 -51.21208572]
[83.78386688 -63.77732468]
[90.56941986 -77.15477753]
[105.54740906 -77.96714020]
[113.73999786 -65.40205383]
[106.95423126 -52.02416992]
[114.44322968 -52.43021393]
[122.37451935 -65.16185760]
[130.30580139 -77.89350128]
[138.23707581 -90.62514496]
[146.16836548 -103.35678864]
[154.09963989 -116.08843231]
[161.22810364 -129.28634644]
[167.52644348 -142.89997864]
[173.82478333 -156.51361084]
[180.12312317 -170.12724304]
[178.89547729 -185.90074158]
[191.26170349 -194.20289612]
[197.56004333 -207.81652832]
[203.85838318 -221.43016052]
[202.63073730 -237.20367432]
[214.99696350 -245.50581360]
[221.29530334 -259.11944580]
[213.61436462 -272.60214233]
[215.35874939 -288.02084351]
[225.85768127 -299.44677734]
[241.07412720 -302.48641968]
[255.15704346 -295.97097778]
[262.69125366 -282.40576172]
[260.77972412 -267.00686646]
[250.15745544 -255.69551086]
[234.90893555 -252.82112122]
[228.61059570 -239.20748901]
[230.28872681 -224.40771484]
[217.47200012 -215.13182068]
[211.17367554 -201.51818848]
[204.87533569 -187.90455627]
[206.55348206 -173.10479736]
[193.73675537 -163.82890320]
[187.43841553 -150.21527100]
[181.14007568 -136.60163879]
[174.84173584 -122.98801422]
[188.56661987 -129.04008484]
[203.25244141 -125.98612976]
[213.42671204 -114.96414185]
[215.29812622 -100.08133698]
[208.16931152 -86.88360596]
[194.69674683 -80.28891754]
[179.90080261 -82.75469971]
[169.29501343 -93.36210632]
[166.83128357 -108.15715027]
[158.90000916 -95.42550659]
[150.96871948 -82.69386292]
[143.03744507 -69.96221924]
[135.10615540 -57.23057556]
[127.17487335 -44.49893188]
[93.97729492 -18.56977272]
[92.58646393 -3.63439155]
[91.19564056 11.30098915]
[89.80481720 26.23637009]
[88.41399384 41.17175293]
[87.02317047 56.10713196]
[85.63234711 71.04251099]
[98.29515839 60.38748932]
[117.18508911 56.28406906]
[138.64981079 61.86582947]
[157.64462280 78.22863007]
[172.15824890 82.01741028]
[186.67185974 85.80618286]
[201.18548584 89.59496307]
[216.84613037 84.72912598]
[228.70510864 96.05593872]
[224.56292725 111.92333984]
[208.68070984 116.00830841]
[197.39671326 104.10858154]
[182.88308716 100.31980133]
[168.36946106 96.53102875]
[153.85585022 92.74224854]
[149.50398254 98.85054779]
[155.73229980 112.49636078]
[140.80026245 111.06714630]
[136.44841003 117.17544556]
[144.76989746 129.65554810]
[153.09138489 142.13565063]
[161.41287231 154.61573792]
[169.73435974 167.09584045]
[178.05584717 179.57594299]
[192.14918518 186.76538086]
[192.77235413 201.64695740]
[201.09384155 214.12704468]
[209.41532898 226.60714722]
[224.83840942 226.24389648]
[237.99761963 234.29615784]
[244.69387817 248.19448853]
[242.79045105 263.50396729]
[232.89471436 275.33941650]
[218.16435242 279.92419434]
[203.29977417 275.79528809]
[193.04421997 264.27020264]
[190.67018127 249.02661133]
[196.93522644 234.92863464]
[188.61373901 222.44853210]
[180.29225159 209.96842957]
[166.79411316 203.67164612]
[165.57574463 187.89743042]
[157.25425720 175.41732788]
[148.93276978 162.93722534]
[140.61128235 150.45713806]
[132.28979492 137.97703552]
[123.96830750 125.49693298]
[116.47639465 125.84501648]
[117.79590607 140.78686523]
[119.11541748 155.72871399]
[120.43492889 170.67056274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 25]
[8 24]
[9 23]
[10 22]
[11 20]
[12 19]
[13 18]
[33 57]
[34 56]
[36 54]
[37 53]
[38 50]
[39 49]
[40 48]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[95 144]
[96 143]
[97 142]
[98 141]
[99 140]
[100 139]
[101 130]
[102 129]
[103 128]
[104 127]
[106 125]
[107 124]
[108 123]
[110 121]
[111 120]
[155 166]
[156 165]
[157 164]
[158 163]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[175 193]
[177 191]
[178 190]
[179 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
