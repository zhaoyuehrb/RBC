%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGCAGAGCGCUCCGGCCCCGCACCCGCCGCCCGUCGCCCGCAGCCCCCUACCGCGCGGCCCGCGCCCCGCCGGCUCCCGUCACUGGGUAAGAGAAGACUGGAAGC\
) } def
/len { sequence length } bind def

/coor [
[154.58534241 174.10990906]
[168.89848328 169.62480164]
[157.56224060 159.80187988]
[146.22599792 149.97897339]
[134.88975525 140.15606689]
[123.55351257 130.33316040]
[112.21726227 120.51024628]
[97.89269257 123.78005219]
[84.36634827 118.04219055]
[76.76189423 105.47010803]
[77.95982361 90.82600403]
[66.62358093 81.00308990]
[55.28733444 71.18017578]
[43.95109177 61.35726547]
[32.97645187 62.76755524]
[23.27371597 57.92641449]
[18.02026176 48.69456100]
[18.78202629 38.32199478]
[8.02505016 27.86793137]
[-2.73192739 17.41386795]
[-13.48890400 6.95980453]
[-28.77786255 2.89061022]
[-32.51257706 -11.52816772]
[-43.26955414 -21.98223114]
[-54.02653122 -32.43629456]
[-72.05131531 -26.34711266]
[-90.63098907 -30.05431175]
[-104.81884003 -42.48981476]
[-110.87797546 -60.27255630]
[-107.26535797 -78.62746429]
[-119.14389038 -87.78718567]
[-134.79704285 -90.08704376]
[-140.15103149 -103.98611450]
[-152.02957153 -113.14582825]
[-166.52487183 -107.86473846]
[-181.56921387 -111.28104401]
[-192.36201477 -122.30460358]
[-195.45933533 -137.41784668]
[-189.87281799 -151.79820251]
[-177.38510132 -160.85693359]
[-161.98098755 -161.70343018]
[-148.57585144 -154.06759644]
[-141.44723511 -140.38600159]
[-142.86985779 -125.02436066]
[-130.99131775 -115.86464691]
[-116.18779755 -114.21994781]
[-109.98417664 -99.66571808]
[-98.10564423 -90.50599670]
[-88.43576813 -96.49218750]
[-77.35877991 -99.18556976]
[-65.96621704 -98.30352783]
[-55.38607788 -93.91662598]
[-46.67111588 -86.44327545]
[-40.69409943 -76.60987854]
[-38.06043243 -65.38025665]
[-39.04685593 -53.86117554]
[-43.57246780 -43.19327164]
[-32.81549072 -32.73920822]
[-22.05851555 -22.28514481]
[-7.53896809 -18.96369553]
[-3.03484082 -3.79717231]
[7.72213602 6.65689135]
[18.47911263 17.11095428]
[29.23608971 27.56501770]
[48.21882629 30.74692345]
[53.77400208 50.02102280]
[65.11024475 59.84393311]
[76.44648743 69.66684723]
[87.78273773 79.48975372]
[102.10730743 76.21994781]
[115.63365173 81.95780945]
[123.23810577 94.52989197]
[122.04017639 109.17399597]
[133.37641907 118.99691010]
[144.71266174 128.81982422]
[156.04890442 138.64273071]
[167.38514709 148.46563721]
[178.72138977 158.28855896]
[190.72950745 167.27772522]
[203.34831238 175.38732910]
[215.96711731 183.49694824]
[231.75965881 184.44885254]
[238.28343201 197.83876038]
[250.90222168 205.94837952]
[263.52102661 214.05798340]
[281.86166382 214.44171143]
[289.41403198 230.21145630]
[302.25927734 237.95741272]
[316.99334717 232.71894836]
[331.62936401 238.22534180]
[339.25671387 251.87663269]
[336.27392578 267.22711182]
[324.08941650 277.02874756]
[308.45632935 276.65350342]
[296.75613403 266.27856445]
[294.51330566 250.80264282]
[281.66806030 243.05668640]
[269.75790405 245.65338135]
[258.95666504 239.17948914]
[255.41142273 226.67678833]
[242.79261780 218.56718445]
[230.17381287 210.45756531]
[215.28384399 210.08570862]
[207.85751343 196.11575317]
[195.23870850 188.00613403]
[182.61990356 179.89653015]
[182.34864807 194.89407349]
[170.63410950 204.26261902]
[155.94378662 201.23039246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[11 69]
[12 68]
[13 67]
[14 66]
[18 64]
[19 63]
[20 62]
[21 61]
[23 59]
[24 58]
[25 57]
[30 48]
[31 47]
[33 45]
[34 44]
[79 106]
[80 105]
[81 104]
[83 102]
[84 101]
[85 100]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
