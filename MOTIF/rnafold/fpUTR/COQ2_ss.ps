%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACACUUAUUCUAUUUUACAGAAUAAGGUGUUGCCCGAUUCUAUUUUUUGUUUGUUUCCUCAGAGACCCCGUUCUGAGUGUUGCCCGAUAAUGGAACCACAAAGUCAAUCAAGAUCGAGUUGUAAAAAAUUACAACUAAAUUUAUUGUAAUUUUUUUGCCUUUUGCCAAUAGAAAUCCCUUUUUCAUUAAGUAUUCCUCCCUAGAGUAAGCGACCACG\
) } def
/len { sequence length } bind def

/coor [
[86.08252716 358.94778442]
[88.56275940 373.74130249]
[81.97267151 387.21612549]
[68.77285767 394.34106445]
[53.89179230 392.45584106]
[42.88571548 382.26437378]
[39.86417770 367.57049561]
[32.51858521 380.64880371]
[25.17299271 393.72711182]
[17.82740211 406.80541992]
[10.48180962 419.88372803]
[3.13621831 432.96203613]
[-4.20937347 446.04037476]
[-11.55496502 459.11868286]
[-5.86399746 473.68392944]
[-10.91578579 488.48303223]
[-24.32502937 496.52828979]
[-39.76029587 494.02099609]
[-49.93352127 482.14498901]
[-50.04122162 466.50778198]
[-40.03254318 454.49276733]
[-24.63327789 451.77307129]
[-17.28768730 438.69476318]
[-9.94209480 425.61645508]
[-2.59650350 412.53814697]
[4.74908829 399.45983887]
[12.09467983 386.38153076]
[19.44027138 373.30319214]
[26.78586388 360.22488403]
[33.37633133 346.75024414]
[39.19037628 332.92285156]
[45.00442123 319.09545898]
[50.72003937 305.22708130]
[56.33694077 291.31845093]
[61.95384216 277.40979004]
[67.57074738 263.50115967]
[60.92569733 252.46653748]
[61.86119080 239.42453003]
[70.25925446 229.14994812]
[83.22908020 225.53340149]
[89.04312134 211.70599365]
[94.85717010 197.87860107]
[100.67121124 184.05120850]
[106.48526001 170.22381592]
[112.29930115 156.39642334]
[73.44428253 145.55471802]
[54.40158844 114.13063812]
[61.36231613 81.71572876]
[49.13993073 73.02014160]
[36.91754532 64.32454681]
[24.69515991 55.62895966]
[12.47277355 46.93337250]
[0.25038704 38.23778152]
[-12.56983376 39.60913467]
[-22.56950760 32.12097931]
[-24.71805573 20.22145462]
[-36.81560135 11.35300350]
[-48.91314697 2.48455286]
[-61.01068878 -6.38389778]
[-73.10823822 -15.25234795]
[-86.02695465 -22.87511826]
[-99.63904572 -29.17679024]
[-113.25112915 -35.47846222]
[-126.86322021 -41.78013611]
[-140.47531128 -48.08181000]
[-154.08738708 -54.38348389]
[-167.69947815 -60.68515396]
[-182.44741821 -55.00414658]
[-196.85876465 -61.49170685]
[-202.38354492 -76.29888153]
[-195.74397278 -90.64083862]
[-180.87921143 -96.00875092]
[-166.60826111 -89.21792603]
[-161.39781189 -74.29724121]
[-147.78572083 -67.99556732]
[-134.17362976 -61.69389725]
[-120.56154633 -55.39222336]
[-106.94945526 -49.09054947]
[-93.33737183 -42.78887939]
[-79.72528076 -36.48720551]
[-88.32742310 -48.77553940]
[-91.64391327 -63.40430832]
[-89.18219757 -78.20092773]
[-81.30787659 -90.96788025]
[-69.19040680 -99.80908966]
[-54.62940979 -103.41150665]
[-39.78740692 -101.24011230]
[-26.86865234 -93.61739349]
[-17.79177284 -81.67544556]
[-13.90481377 -67.18781281]
[-15.78504944 -52.30611801]
[-23.15323448 -39.24052048]
[-34.91508865 -29.93144989]
[-49.32380295 -25.76143837]
[-64.23978424 -27.34989357]
[-52.14223862 -18.48144150]
[-40.04469681 -9.61299229]
[-27.94715118 -0.74454129]
[-15.84960556 8.12390900]
[1.67570412 9.09352493]
[8.94597626 26.01539612]
[21.16836357 34.71098709]
[33.39074707 43.40657425]
[45.61313629 52.10216522]
[57.83552170 60.79775238]
[70.05790710 69.49333954]
[74.69335175 65.55063629]
[79.84169769 62.30612946]
[85.39859772 59.82558060]
[91.25142670 58.15925980]
[97.28157043 57.34094238]
[103.36680603 57.38721466]
[109.38381195 58.29713440]
[115.21062469 60.05226135]
[122.92502594 47.18804550]
[130.63941956 34.32382965]
[138.35382080 21.45961380]
[134.73619080 6.30868959]
[142.74293518 -6.62756014]
[157.20932007 -9.98305225]
[164.92372131 -22.84726715]
[172.63812256 -35.71148300]
[180.35252380 -48.57569885]
[188.06692505 -61.43991470]
[195.78131104 -74.30413055]
[203.49571228 -87.16835022]
[211.21011353 -100.03256226]
[210.94091797 -116.42950439]
[225.14369202 -124.62787628]
[239.20782471 -116.19390869]
[238.66535950 -99.80373383]
[224.07432556 -92.31816864]
[216.35993958 -79.45394897]
[208.64553833 -66.58973694]
[200.93113708 -53.72551727]
[193.21673584 -40.86130142]
[185.50233459 -27.99708557]
[177.78793335 -15.13286877]
[170.07354736 -2.26865315]
[173.92729187 12.07304001]
[166.28704834 25.22907829]
[151.21803284 29.17401123]
[143.50364685 42.03822708]
[135.78924561 54.90244293]
[128.07484436 67.76666260]
[136.43603516 71.12603760]
[144.41702271 76.53594208]
[151.53688049 83.95123291]
[157.32218933 93.21798706]
[171.62704468 88.70457458]
[185.93191528 84.19116211]
[200.23677063 79.67774963]
[208.88755798 66.16688538]
[224.85871887 64.64983368]
[235.89855957 76.29035187]
[233.53825378 92.15882874]
[219.58842468 100.08232117]
[204.75018311 93.98261261]
[190.44532776 98.49602509]
[176.14045715 103.00943756]
[161.83560181 107.52285004]
[161.40936279 115.01072693]
[176.38511658 115.86318970]
[191.36088562 116.71565247]
[206.33663940 117.56811523]
[221.31239319 118.42057800]
[236.28813171 119.27328491]
[235.43518066 134.24900818]
[220.45993042 133.39633179]
[205.48417664 132.54386902]
[190.50842285 131.69140625]
[175.53265381 130.83894348]
[160.55690002 129.98648071]
[160.13067627 137.47436523]
[173.83096313 143.58190918]
[187.53125000 149.68945312]
[201.23153687 155.79699707]
[215.89723206 149.90692139]
[230.39935303 156.18896484]
[236.13404846 170.91610718]
[229.69902039 185.35099792]
[214.91206360 190.92967224]
[200.54602051 184.34239197]
[195.12399292 169.49728394]
[181.42370605 163.38973999]
[167.72341919 157.28219604]
[154.02313232 151.17465210]
[147.04902649 153.93360901]
[156.14404297 165.86174011]
[165.23907471 177.78988647]
[174.33409119 189.71803284]
[186.30751038 198.75335693]
[192.07615662 212.59976196]
[190.05949402 227.46357727]
[180.81007385 239.27238464]
[166.86206055 244.79080200]
[152.03695679 242.50688171]
[140.39657593 233.04635620]
[135.13015747 219.00125122]
[137.68151855 204.21775818]
[136.15461731 189.29566956]
[134.62771606 174.37359619]
[133.10079956 159.45150757]
[126.12669373 162.21046448]
[120.31265259 176.03785706]
[114.49861145 189.86524963]
[108.68456268 203.69264221]
[102.87052155 217.52005005]
[97.05647278 231.34744263]
[103.95964050 247.42501831]
[97.22830200 263.20858765]
[81.47939301 269.11807251]
[75.86248779 283.02670288]
[70.24558258 296.93536377]
[64.62868500 310.84399414]
[64.31795502 319.96560669]
[58.83181763 324.90951538]
[53.01777267 338.73690796]
[47.20372772 352.56430054]
[60.65623474 345.92880249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[30 219]
[31 218]
[32 217]
[33 215]
[34 214]
[35 213]
[36 212]
[40 209]
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[48 106]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[56 99]
[57 98]
[58 97]
[59 96]
[60 95]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[114 145]
[115 144]
[116 143]
[117 142]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[149 161]
[150 160]
[151 159]
[152 158]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
