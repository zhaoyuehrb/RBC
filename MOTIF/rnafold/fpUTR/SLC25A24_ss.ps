%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCGGGACGGCCACACCCUGCGCUCCGCGCGGGCUCGGGUGGGGUCUCCGCUCCUGCGCCCUGCGCCCUGCGCGCCGCAGCCGCAACCCCGACGGCGCCCCAAACGCUGUUGCGCCGCGCGCCCCGCCCAGCCCGGCCUCGCGCUGGUCCCGGUCUCGCCCCGCAGCCCUCGAUCUCCCGUGACUUCCUCGGCCAGGCCGCCUGCGCCUCUGGGACC\
) } def
/len { sequence length } bind def

/coor [
[406.07940674 393.28283691]
[403.41491699 390.39254761]
[401.64343262 386.44644165]
[389.17880249 378.10180664]
[376.71417236 369.75717163]
[364.24954224 361.41253662]
[351.78491211 353.06790161]
[336.90451050 352.41711426]
[329.74124146 338.31045532]
[317.27661133 329.96582031]
[309.97512817 328.85763550]
[304.69525146 321.41293335]
[292.35049438 312.89196777]
[280.00573730 304.37100220]
[267.66098022 295.85003662]
[278.62966919 306.08172607]
[281.04016113 320.88677979]
[273.88363647 334.06951904]
[260.15505981 340.11315918]
[245.59956360 336.48855591]
[236.30841064 324.71255493]
[236.16979980 309.71319580]
[245.24278259 297.76678467]
[234.52369690 308.25970459]
[223.80461121 318.75262451]
[213.08554077 329.24551392]
[205.99639893 344.64617920]
[189.23512268 342.09741211]
[187.04431152 325.28561401]
[202.59262085 318.52645874]
[213.31169128 308.03353882]
[224.03077698 297.54061890]
[234.74986267 287.04769897]
[235.38935852 272.06134033]
[225.60311890 260.69342041]
[215.81687927 249.32548523]
[206.03065491 237.95756531]
[196.24441528 226.58964539]
[189.50332642 223.57344055]
[186.40126038 214.98988342]
[176.77760315 203.48399353]
[167.15396118 191.97811890]
[157.53030396 180.47222900]
[147.90664673 168.96635437]
[138.28300476 157.46047974]
[128.65934753 145.95458984]
[119.03569031 134.44871521]
[109.41204071 122.94283295]
[99.33650970 127.29901886]
[87.35692596 127.00247192]
[75.68322754 121.29709625]
[66.78173828 110.48316193]
[62.87533569 95.97828674]
[49.17504501 89.87074280]
[34.57064819 95.28824615]
[20.76360893 88.89916229]
[15.68885326 74.94271088]
[1.98856378 68.83517456]
[-11.71172523 62.72763062]
[-25.41201401 56.62008667]
[-39.11230469 50.51254654]
[-49.01794434 54.98304367]
[-59.53275299 53.30270386]
[-67.22769165 46.26376343]
[-69.72800446 36.36539078]
[-83.24914551 29.87086105]
[-96.77027893 23.37633133]
[-110.29141235 16.88179970]
[-123.81254578 10.38726997]
[-140.70796204 8.97964668]
[-144.03245544 -7.64515495]
[-128.97767639 -15.44193745]
[-117.31801605 -3.13386440]
[-103.79688263 3.36066604]
[-90.27574921 9.85519600]
[-76.75461578 16.34972572]
[-63.23347855 22.84425735]
[-44.10629272 19.98039436]
[-33.00476074 36.81225586]
[-19.30447197 42.91979980]
[-5.60418320 49.02733994]
[8.09610558 55.13488388]
[21.79639626 61.24242401]
[35.56900406 55.68806839]
[49.55004883 61.68681717]
[55.28258896 76.17045593]
[68.98287964 82.27799988]
[75.09407043 77.93020630]
[63.04726028 68.99295807]
[67.82459259 54.77405930]
[82.82384491 54.92387772]
[87.31645966 69.23461151]
[93.42765045 64.88681793]
[92.14981842 49.94134521]
[88.30319977 41.66464233]
[90.96159363 34.77459335]
[89.89633942 19.81246567]
[88.83108521 4.85033846]
[87.76583099 -10.11178875]
[86.70057678 -25.07391548]
[85.63532257 -40.03604126]
[73.97763824 -50.36735916]
[73.11045837 -65.55625916]
[83.03163147 -76.60641479]
[81.96637726 -91.56853485]
[70.83598328 -103.12248993]
[73.07230377 -119.00891113]
[86.95983124 -127.04109955]
[101.84524536 -121.05744934]
[106.30972290 -105.64810181]
[96.92850494 -92.63378906]
[97.99375916 -77.67166901]
[109.38039398 -68.13855743]
[110.67385101 -52.98000717]
[100.59745026 -41.10129547]
[101.66270447 -26.13916969]
[102.72795868 -11.17704201]
[103.79321289 3.78508425]
[104.85846710 18.74721146]
[105.92372131 33.70933914]
[107.09529114 48.66351318]
[108.37312317 63.60898590]
[128.75090027 88.22126007]
[120.91792297 113.31917572]
[130.54158020 124.82505798]
[140.16522217 136.33093262]
[149.78887939 147.83682251]
[159.41253662 159.34269714]
[169.03617859 170.84858704]
[178.65983582 182.35446167]
[188.28349304 193.86035156]
[197.90715027 205.36622620]
[207.61233521 216.80342102]
[217.39857483 228.17134094]
[227.18479919 239.53926086]
[236.97103882 250.90718079]
[246.75727844 262.27508545]
[276.18194580 283.50527954]
[288.52670288 292.02624512]
[300.87145996 300.54721069]
[313.21621704 309.06817627]
[325.62124634 317.50119019]
[338.08587646 325.84582520]
[353.85781860 327.09347534]
[360.12954712 340.60327148]
[372.59417725 348.94790649]
[385.05880737 357.29254150]
[397.52343750 365.63717651]
[409.98806763 373.98181152]
[422.68487549 381.96871948]
[435.60360718 389.59149170]
[448.52233887 397.21426392]
[461.44104004 404.83703613]
[474.35977173 412.45980835]
[487.27850342 420.08258057]
[500.19720459 427.70535278]
[514.38073730 421.69415283]
[529.21081543 425.14688110]
[539.04779053 436.53536987]
[540.27783203 451.35513306]
[553.19653320 458.97790527]
[566.11523438 466.60067749]
[578.67956543 461.75985718]
[591.55053711 464.98974609]
[600.08648682 474.89465332]
[601.34234619 487.71426392]
[614.15142822 495.51989746]
[629.96221924 496.09399414]
[636.80419922 509.32415771]
[649.61328125 517.12976074]
[662.42230225 524.93542480]
[682.58105469 524.51019287]
[691.08966064 541.87841797]
[704.11541748 549.31677246]
[717.14117432 556.75518799]
[730.16693115 564.19354248]
[743.44879150 571.16436768]
[756.96990967 577.65887451]
[771.79711914 572.18811035]
[786.11480713 578.87988281]
[791.42852783 593.76409912]
[784.58575439 608.01019287]
[769.64624023 613.16625977]
[755.47320557 606.17327881]
[750.47540283 591.18005371]
[736.95428467 584.68548584]
[739.42578125 599.48046875]
[729.50854492 610.73431396]
[714.52020264 610.14306641]
[705.52026367 598.14300537]
[709.14947510 583.58868408]
[722.72857666 577.21929932]
[709.70281982 569.78094482]
[696.67706299 562.34259033]
[683.65130615 554.90423584]
[674.08471680 558.46942139]
[663.92059326 556.13519287]
[656.56457520 548.43621826]
[654.61669922 537.74450684]
[641.80761719 529.93884277]
[628.99859619 522.13317871]
[614.10400391 522.11743164]
[606.34582520 508.32894897]
[593.53674316 500.52331543]
[577.37402344 505.18353271]
[562.55169678 496.53894043]
[558.49249268 479.51940918]
[545.57373047 471.89663696]
[532.65502930 464.27386475]
[519.08789062 470.36248779]
[504.36288452 467.25802612]
[494.17022705 455.94595337]
[492.57446289 440.62408447]
[479.65573120 433.00131226]
[466.73699951 425.37854004]
[453.81826782 417.75576782]
[440.89956665 410.13299561]
[427.98083496 402.51022339]
[415.06210327 394.88745117]
[412.32312012 395.45043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[9 143]
[10 142]
[12 141]
[13 140]
[14 139]
[15 138]
[23 33]
[24 32]
[25 31]
[26 30]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[48 124]
[53 87]
[54 86]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[93 122]
[94 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[104 112]
[105 111]
[150 219]
[151 218]
[152 217]
[153 216]
[154 215]
[155 214]
[156 213]
[160 209]
[161 208]
[162 207]
[166 204]
[167 203]
[169 201]
[170 200]
[171 199]
[173 195]
[174 194]
[175 193]
[176 192]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
