%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGACGAGGUUUGCGCUUGGCUGGGCAUGUUCCGCGGCUACUCUGCGGCGCGCCAGGCCCCCGCUUUCCGCACCCCGCGACCCUAGAAGCCACCGAACCGCCGGCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[214.51904297 307.81997681]
[201.37066650 299.32092285]
[191.46273804 287.17379761]
[185.76565552 272.54953003]
[184.84318542 256.86251831]
[188.79672241 241.63386536]
[197.25422668 228.34396362]
[187.64794922 216.82357788]
[173.55471802 212.00379944]
[170.65928650 196.44979858]
[161.05302429 184.92939758]
[146.24220276 183.84536743]
[136.33595276 172.29890442]
[137.57341003 156.77130127]
[127.96713257 145.25090027]
[118.36086273 133.73049927]
[108.75459290 122.21010590]
[94.09040070 123.13024902]
[81.66471863 115.28885651]
[76.18427277 101.65618896]
[79.72501373 87.39616394]
[70.11874390 75.87577057]
[60.51247025 64.35537720]
[43.12836838 58.48493958]
[40.66118622 41.17132568]
[30.73838043 29.92241859]
[20.81557465 18.67351151]
[10.89276791 7.42460299]
[-4.03873920 2.19386029]
[-6.65567684 -12.46904850]
[-16.57848358 -23.71795654]
[-31.92630768 -22.39490318]
[-44.95796585 -30.27076912]
[-50.78431320 -44.14584351]
[-47.36417770 -58.61790848]
[-57.28698349 -69.86681366]
[-67.20979309 -81.11572266]
[-82.14129639 -86.34646606]
[-84.75823212 -101.00937653]
[-94.68103790 -112.25828552]
[-110.46810150 -112.99599457]
[-121.04768372 -124.73686218]
[-120.14310455 -140.51524353]
[-108.29103851 -150.97009277]
[-92.52310944 -149.89875793]
[-82.19413757 -137.93681335]
[-83.43212891 -122.18109131]
[-73.50932312 -110.93218231]
[-59.28756332 -106.50603485]
[-55.96088028 -91.03852844]
[-46.03807449 -79.78961945]
[-36.11526871 -68.54071808]
[-21.32954597 -70.12827301]
[-8.28993511 -62.61610794]
[-2.10173750 -48.70354080]
[-5.32957506 -33.64076233]
[4.59323072 -22.39185524]
[18.81499290 -17.96570969]
[22.14167595 -2.49820280]
[32.06447983 8.75070477]
[41.98728561 19.99961281]
[51.91009140 31.24851990]
[64.04498291 32.35007858]
[72.40090179 41.76408768]
[72.03286743 54.74909973]
[81.63913727 66.26950073]
[91.24540710 77.78989410]
[105.90959930 76.86975098]
[118.33528137 84.71114349]
[123.81572723 98.34381104]
[120.27498627 112.60383606]
[129.88125610 124.12422943]
[139.48753357 135.64462280]
[149.09379578 147.16502380]
[164.59095764 148.73847961]
[174.16897583 160.55865479]
[172.57341003 175.32312012]
[182.17968750 186.84352112]
[196.96002197 192.48731995]
[199.16835022 207.21730042]
[208.77461243 218.73770142]
[222.10618591 213.11752319]
[236.46755981 211.50325012]
[250.68266296 214.01795959]
[263.58999634 220.44699097]
[274.13751221 230.25621033]
[281.46838379 242.63641357]
[284.99053955 256.57000732]
[284.42462158 270.91476440]
[279.82595825 284.49731445]
[271.57940674 296.20922852]
[280.86169434 307.99218750]
[290.14401245 319.77517700]
[307.35821533 326.12658691]
[309.34317017 343.50210571]
[318.94943237 355.02249146]
[328.55569458 366.54287720]
[344.31616211 367.71917725]
[354.56527710 379.74957275]
[353.22244263 395.49673462]
[341.08432007 405.61807251]
[325.35226440 404.10882568]
[315.35980225 391.86437988]
[317.03530884 376.14916992]
[307.42904663 364.62875366]
[297.82275391 353.10836792]
[285.72317505 351.66992188]
[277.63217163 342.02725220]
[278.36105347 329.05749512]
[269.07873535 317.27450562]
[259.79641724 305.49154663]
[245.22244263 311.05029297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 81]
[8 80]
[10 78]
[11 77]
[14 74]
[15 73]
[16 72]
[17 71]
[21 67]
[22 66]
[23 65]
[25 62]
[26 61]
[27 60]
[28 59]
[30 57]
[31 56]
[35 52]
[36 51]
[37 50]
[39 48]
[40 47]
[91 111]
[92 110]
[93 109]
[95 106]
[96 105]
[97 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
