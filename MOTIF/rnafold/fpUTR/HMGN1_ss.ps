%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAGGAGGCGGGCUCCCAAUCCGGUUCCAUCCGGUUCUCCCACCGCCCCCGCUGUGGGUCUCAGCAGCUCGGGCGGCGGGAGGAGUGGCAGCGGCAAGGCAGCCCAGUUUCGCGAAGGCUGUCGGCGCGCCGCGGCCCGCAGGCACCCGGCACGCGCCUUCCCCGCAGGCACCCGGCACGCGCCUUCCCCGCCGCCACG\
) } def
/len { sequence length } bind def

/coor [
[140.27432251 133.63821411]
[130.90818787 145.35467529]
[116.32985687 148.88627625]
[102.64012146 142.75511169]
[95.56792450 129.52696228]
[98.07346344 114.73648071]
[88.88893890 126.59584808]
[79.70442200 138.45521545]
[70.61103821 150.38461304]
[61.60932922 162.38333130]
[52.60762405 174.38204956]
[43.60591507 186.38076782]
[41.51342392 202.06298828]
[27.68642998 207.60044861]
[18.68472290 219.59918213]
[9.68301678 231.59790039]
[0.68130958 243.59661865]
[4.40739250 258.78378296]
[-2.54673147 272.79000854]
[-16.89753723 279.00195312]
[-31.86901474 274.48654175]
[-40.39208984 261.37582397]
[-38.44242477 245.86026001]
[-26.94059372 235.26583862]
[-11.31740952 234.59490967]
[-2.31570292 222.59619141]
[6.68600416 210.59747314]
[15.68771172 198.59875488]
[17.13634300 183.77474976]
[31.60719681 177.37905884]
[40.60890579 165.38034058]
[49.61061096 153.38162231]
[58.61231995 141.38290405]
[60.11245728 134.14242554]
[67.84505463 129.27069092]
[77.02957153 117.41132355]
[86.21409607 105.55195618]
[84.33779144 98.29045105]
[80.58518219 83.76744080]
[78.70887756 76.50593567]
[64.92890167 70.58037567]
[51.14892197 64.65481567]
[37.36894608 58.72925949]
[23.58896828 52.80370331]
[9.80899239 46.87814331]
[-3.97098494 40.95258713]
[-19.70524406 42.60899353]
[-28.34082222 30.47326088]
[-42.12080002 24.54770279]
[-55.90077591 18.62214470]
[-69.68075562 12.69658661]
[-83.46073151 6.77102947]
[-97.24070740 0.84547174]
[-111.77207184 6.45591974]
[-125.66252136 0.25026056]
[-130.92167664 -13.63775253]
[-144.70164490 -19.56331062]
[-158.48162842 -25.48886681]
[-172.26159668 -31.41442490]
[-186.04158020 -37.33998108]
[-199.31027222 -29.29501152]
[-214.77073669 -30.61917877]
[-226.47813416 -40.80331802]
[-229.93070984 -55.93141556]
[-223.80088806 -70.18640900]
[-210.44570923 -78.08696747]
[-195.00050354 -76.59516144]
[-183.40428162 -66.28462219]
[-180.11602783 -51.11996078]
[-166.33604431 -45.19440079]
[-152.55607605 -39.26884460]
[-138.77609253 -33.34328842]
[-124.99611664 -27.41772842]
[-111.29827881 -33.15400696]
[-97.23901367 -27.34095001]
[-91.31514740 -12.93450546]
[-77.53517151 -7.00894785]
[-63.75519562 -1.08339000]
[-49.97521973 4.84216785]
[-36.19524384 10.76772499]
[-22.41526604 16.69328308]
[-7.66664314 14.61304092]
[1.95457280 27.17260933]
[15.73454952 33.09816742]
[29.51452637 39.02372360]
[43.29450226 44.94928360]
[57.07448196 50.87483978]
[70.85445404 56.80039597]
[84.63443756 62.72595596]
[113.74655151 88.02008820]
[128.37774658 84.71429443]
[143.00892639 81.40850830]
[157.64012146 78.10271454]
[172.27131653 74.79692841]
[184.02699280 64.20850372]
[198.14651489 68.95064545]
[212.77770996 65.64485931]
[227.40890503 62.33906937]
[242.04010010 59.03327560]
[245.17623901 44.02044296]
[255.61317444 31.96846390]
[271.16171265 26.30097389]
[288.10406494 28.99734879]
[293.92385864 15.17237282]
[299.74365234 1.34739625]
[305.56344604 -12.47758007]
[311.38323975 -26.30255699]
[317.20306396 -40.12753296]
[323.02285767 -53.95250702]
[316.12551880 -70.02629852]
[322.85263062 -85.80555725]
[338.59359741 -91.72064209]
[344.20086670 -105.63317871]
[344.51379395 -122.58424377]
[360.88903809 -126.97604370]
[369.64233398 -112.45653534]
[358.11340332 -100.02592468]
[352.50613403 -86.11338806]
[359.16104126 -75.07649994]
[358.22857666 -62.02714157]
[349.82577515 -51.74715805]
[336.84780884 -48.13271332]
[331.02801514 -34.30773544]
[325.20822144 -20.48275948]
[319.38842773 -6.65778303]
[313.56863403 7.16719294]
[307.74884033 20.99216843]
[301.92904663 34.81714630]
[309.19558716 47.93953705]
[324.00183105 50.34279633]
[338.80804443 52.74605560]
[353.61428833 55.14931488]
[368.42050171 57.55257797]
[383.26181030 59.72866058]
[398.13473511 61.67705536]
[413.00765991 63.62545395]
[427.88058472 65.57385254]
[441.55212402 54.66382217]
[458.54989624 56.96924210]
[468.42459106 70.58014679]
[483.32562256 72.30039978]
[498.22665405 74.02065277]
[512.82312012 67.91705322]
[524.57910156 77.06291199]
[539.48010254 78.78316498]
[554.07659912 72.67956543]
[565.83251953 81.82541656]
[580.73358154 83.54566956]
[587.90905762 73.30283356]
[598.69702148 67.12026978]
[611.01812744 66.11879730]
[622.52764893 70.42739105]
[631.06140137 79.17032623]
[635.04272461 90.64439392]
[649.88403320 92.82048035]
[664.72534180 94.99656677]
[679.75872803 88.44447327]
[692.78717041 98.40402222]
[690.40808105 114.62968445]
[675.06890869 120.42988586]
[662.54931641 109.83788300]
[647.70794678 107.66179657]
[632.86663818 105.48571014]
[621.12835693 118.67480469]
[603.66973877 122.21202850]
[587.43951416 114.49706268]
[579.01330566 98.44670105]
[564.11230469 96.72644806]
[550.58166504 102.95309448]
[537.75988770 93.68419647]
[522.85882568 91.96394348]
[509.32818604 98.19058228]
[496.50640869 88.92168427]
[481.60537720 87.20143127]
[466.70434570 85.48117828]
[457.82540894 94.82276917]
[444.99545288 97.38148499]
[432.85635376 92.00304413]
[425.93218994 80.44676971]
[411.05926514 78.49837494]
[396.18634033 76.54998016]
[381.31341553 74.60157776]
[377.04443359 76.75238800]
[371.37841797 76.24094391]
[366.01724243 72.35880280]
[351.21102905 69.95554352]
[336.40478516 67.55228424]
[321.59857178 65.14902496]
[306.79232788 62.74576187]
[300.05529785 79.02125549]
[286.52737427 89.50955963]
[270.07104492 91.83834839]
[255.08877563 85.88123322]
[245.34588623 73.66446686]
[230.71469116 76.97026062]
[216.08349609 80.27604675]
[201.45231628 83.58184052]
[190.74316406 93.93381500]
[175.57710266 89.42811584]
[160.94590759 92.73390961]
[146.31472778 96.03969574]
[131.68353271 99.34548950]
[117.05234528 102.65127563]
[131.51321411 106.63666534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 37]
[7 36]
[8 35]
[9 33]
[10 32]
[11 31]
[12 30]
[14 28]
[15 27]
[16 26]
[17 25]
[40 89]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[90 203]
[91 202]
[92 201]
[93 200]
[94 199]
[96 197]
[97 196]
[98 195]
[99 194]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[112 118]
[113 117]
[129 189]
[130 188]
[131 187]
[132 186]
[133 185]
[134 182]
[135 181]
[136 180]
[137 179]
[140 175]
[141 174]
[142 173]
[144 171]
[145 170]
[147 168]
[148 167]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
