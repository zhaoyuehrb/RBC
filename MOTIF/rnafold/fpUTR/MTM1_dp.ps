%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTM1)
} def

/sequence { (\
AGAGGGGGCGGAGCAGGGCCCGGCAGCCGAGCAGCCUGGCAACGGCGGUGGCGCCCGGAGCCCGAGAGUUUCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 72 0.006661225 ubox
3 71 0.006625948 ubox
4 56 0.004870621 ubox
4 70 0.006172691 ubox
4 72 0.004759637 ubox
4 73 0.995666532 ubox
5 55 0.004877040 ubox
5 69 0.005573177 ubox
5 71 0.004229771 ubox
5 72 0.996671890 ubox
5 73 0.059459462 ubox
6 54 0.004875846 ubox
6 63 0.006774798 ubox
6 70 0.004201617 ubox
6 71 0.993506928 ubox
6 72 0.059486502 ubox
6 73 0.032106719 ubox
7 62 0.006792877 ubox
7 69 0.003814429 ubox
7 70 0.992094111 ubox
7 71 0.050647999 ubox
7 72 0.032088760 ubox
7 73 0.016389088 ubox
8 14 0.007882371 ubox
8 52 0.004917989 ubox
8 61 0.006799275 ubox
8 69 0.996801805 ubox
8 70 0.038499508 ubox
8 71 0.027375852 ubox
8 72 0.016203258 ubox
9 13 0.007841544 ubox
9 51 0.004895499 ubox
9 60 0.006803431 ubox
9 64 0.009595533 ubox
9 68 0.997401408 ubox
10 63 0.014202005 ubox
10 70 0.010590944 ubox
10 71 0.008458935 ubox
10 72 0.019201778 ubox
10 73 0.033003743 ubox
11 62 0.014190986 ubox
11 69 0.011777021 ubox
11 70 0.011299146 ubox
11 71 0.021845933 ubox
11 72 0.033015240 ubox
12 69 0.011666448 ubox
12 70 0.026034321 ubox
12 71 0.030334788 ubox
13 46 0.005535513 ubox
13 61 0.014154868 ubox
13 69 0.029187435 ubox
13 70 0.025099179 ubox
14 45 0.005535119 ubox
14 60 0.014123431 ubox
14 68 0.031487632 ubox
16 56 0.016042399 ubox
16 62 0.007283217 ubox
16 63 0.999478174 ubox
17 55 0.016050167 ubox
17 61 0.007003515 ubox
17 62 0.999812138 ubox
18 40 0.005688884 ubox
18 54 0.016049906 ubox
18 61 0.999817444 ubox
19 39 0.005691735 ubox
19 53 0.016047398 ubox
19 58 0.007039340 ubox
19 60 0.999693257 ubox
20 38 0.005689551 ubox
20 51 0.015963921 ubox
20 57 0.010226360 ubox
20 58 0.999635034 ubox
21 50 0.015942089 ubox
21 57 0.999682138 ubox
22 36 0.007119305 ubox
22 49 0.013294124 ubox
22 55 0.334891854 ubox
22 56 0.941993593 ubox
23 35 0.007231928 ubox
23 49 0.008474640 ubox
23 54 0.473427545 ubox
23 55 0.879445263 ubox
24 34 0.007224164 ubox
24 48 0.012171897 ubox
24 50 0.003400073 ubox
24 53 0.577790679 ubox
25 49 0.003208471 ubox
26 32 0.007157083 ubox
26 40 0.013683426 ubox
26 46 0.017497568 ubox
26 49 0.008138427 ubox
26 52 0.999130348 ubox
26 54 0.021053039 ubox
27 31 0.007115310 ubox
27 39 0.013697887 ubox
27 45 0.017538773 ubox
27 48 0.008263710 ubox
27 51 0.999439559 ubox
27 53 0.020356341 ubox
28 38 0.013690102 ubox
28 44 0.017543594 ubox
28 47 0.008275450 ubox
28 50 0.998390721 ubox
28 53 0.006493804 ubox
29 37 0.010494864 ubox
29 43 0.017399439 ubox
29 46 0.006556620 ubox
29 49 0.831525335 ubox
29 52 0.008533898 ubox
30 37 0.007222855 ubox
31 36 0.008184560 ubox
31 40 0.017889527 ubox
31 46 0.039290155 ubox
31 49 0.500467112 ubox
31 52 0.003869243 ubox
32 39 0.017863515 ubox
32 45 0.037807044 ubox
32 48 0.558959814 ubox
32 51 0.003835206 ubox
33 49 0.004684274 ubox
34 40 0.018936699 ubox
34 46 0.996587384 ubox
34 49 0.019018782 ubox
35 39 0.018908205 ubox
35 45 0.990521090 ubox
35 48 0.020561162 ubox
36 44 0.982482302 ubox
36 45 0.127663350 ubox
36 47 0.019743879 ubox
36 48 0.008567819 ubox
37 44 0.177367744 ubox
37 47 0.008670201 ubox
38 43 0.744117556 ubox
38 46 0.011830513 ubox
39 46 0.011124245 ubox
40 45 0.011217083 ubox
42 49 0.004565269 ubox
43 48 0.004900621 ubox
44 55 0.012682809 ubox
45 52 0.004033282 ubox
45 54 0.013996453 ubox
46 51 0.004054375 ubox
46 53 0.014090823 ubox
47 52 0.014192042 ubox
57 72 0.003517105 ubox
57 73 0.004517840 ubox
58 71 0.003568200 ubox
58 72 0.004516839 ubox
59 70 0.004274909 ubox
59 71 0.003826737 ubox
60 69 0.004893874 ubox
61 68 0.005432436 ubox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
