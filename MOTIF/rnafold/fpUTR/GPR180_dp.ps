%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR180)
} def

/sequence { (\
CUCCCCCAGCUGCCGACGUGGGGCGGGCAGCCGCCGGCGGCUGGGAGCCGAGGCGUCGGUGCAGACCUGGAGACGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.092533876 ubox
1 52 0.042043001 ubox
1 64 0.068409499 ubox
1 72 0.268677396 ubox
1 76 0.009667017 ubox
1 77 0.020240223 ubox
2 46 0.107873643 ubox
2 51 0.042226104 ubox
2 63 0.064427031 ubox
2 65 0.081596334 ubox
2 71 0.270318637 ubox
2 73 0.012620145 ubox
2 75 0.008793147 ubox
2 76 0.018931245 ubox
2 77 0.031228446 ubox
3 45 0.093577957 ubox
3 50 0.042137449 ubox
3 53 0.003991658 ubox
3 59 0.005872301 ubox
3 64 0.087934226 ubox
3 70 0.270447501 ubox
3 72 0.013709882 ubox
3 75 0.018912073 ubox
3 76 0.041555483 ubox
3 77 0.136841589 ubox
4 44 0.083703720 ubox
4 45 0.076867322 ubox
4 52 0.004066807 ubox
4 58 0.005880762 ubox
4 69 0.269261322 ubox
4 70 0.007097573 ubox
4 75 0.041466257 ubox
4 76 0.138433513 ubox
4 77 0.012533920 ubox
5 43 0.073236777 ubox
5 44 0.065016538 ubox
5 45 0.972537328 ubox
5 69 0.007591644 ubox
5 70 0.006881536 ubox
5 75 0.137985681 ubox
5 76 0.011993829 ubox
5 77 0.005836324 ubox
6 43 0.047504750 ubox
6 44 0.976746321 ubox
6 45 0.004470644 ubox
6 69 0.006067371 ubox
6 70 0.144842618 ubox
6 75 0.008867258 ubox
6 76 0.005869471 ubox
7 43 0.978597093 ubox
7 44 0.003239317 ubox
7 69 0.145264903 ubox
7 75 0.005851856 ubox
8 42 0.981873285 ubox
8 68 0.145280289 ubox
9 31 0.003843552 ubox
9 41 0.982508995 ubox
9 62 0.106057502 ubox
9 67 0.142111413 ubox
10 30 0.003864522 ubox
10 40 0.982508874 ubox
10 61 0.105971999 ubox
10 64 0.144701484 ubox
10 72 0.003986857 ubox
11 29 0.003865328 ubox
11 39 0.981763494 ubox
11 61 0.033257393 ubox
11 63 0.144485988 ubox
11 71 0.003876926 ubox
12 28 0.003867325 ubox
12 38 0.982474415 ubox
12 60 0.126045563 ubox
12 62 0.133118452 ubox
13 21 0.012404432 ubox
13 27 0.003811558 ubox
13 37 0.982414807 ubox
13 59 0.157535327 ubox
13 61 0.098630254 ubox
14 20 0.018160319 ubox
14 21 0.027638239 ubox
14 26 0.003741889 ubox
14 36 0.981225136 ubox
14 58 0.184940754 ubox
15 19 0.024446506 ubox
15 35 0.498682761 ubox
15 57 0.186093399 ubox
16 56 0.186076843 ubox
17 25 0.020998079 ubox
17 33 0.097696353 ubox
17 36 0.011261264 ubox
17 39 0.003955156 ubox
17 55 0.186092918 ubox
18 24 0.021276757 ubox
18 31 0.004766893 ubox
18 32 0.044851453 ubox
18 34 0.249509061 ubox
18 35 0.012674195 ubox
18 38 0.004494416 ubox
18 54 0.186060946 ubox
19 23 0.019908863 ubox
19 29 0.014138101 ubox
19 30 0.005090003 ubox
19 33 0.247641533 ubox
19 36 0.018954940 ubox
19 37 0.004574089 ubox
19 53 0.183818548 ubox
20 28 0.015390659 ubox
20 32 0.207830111 ubox
20 35 0.130622749 ubox
21 31 0.202061473 ubox
21 32 0.036851595 ubox
21 34 0.144198021 ubox
21 35 0.063538778 ubox
21 49 0.005438435 ubox
22 31 0.039689960 ubox
22 32 0.247369291 ubox
22 34 0.050037287 ubox
22 35 0.831662092 ubox
22 48 0.004151684 ubox
22 49 0.184224365 ubox
23 31 0.255376126 ubox
23 34 0.924464291 ubox
23 48 0.184447475 ubox
24 30 0.259285275 ubox
24 33 0.925954070 ubox
24 47 0.184437871 ubox
24 50 0.003554203 ubox
25 32 0.925919277 ubox
25 49 0.003473954 ubox
26 31 0.924932034 ubox
26 32 0.009150574 ubox
26 35 0.020233341 ubox
26 48 0.003355739 ubox
27 31 0.012297397 ubox
27 34 0.021145789 ubox
28 33 0.021122437 ubox
28 43 0.184397278 ubox
29 42 0.184474254 ubox
30 41 0.184526337 ubox
31 40 0.184527347 ubox
32 39 0.184515940 ubox
32 61 0.003807728 ubox
33 38 0.179739167 ubox
33 60 0.004188832 ubox
34 59 0.004203995 ubox
35 58 0.004204332 ubox
36 49 0.005889385 ubox
36 57 0.004206713 ubox
37 48 0.005895416 ubox
37 56 0.004205898 ubox
38 47 0.005895197 ubox
38 50 0.023029357 ubox
38 55 0.004206619 ubox
39 49 0.023421463 ubox
39 54 0.004202831 ubox
40 48 0.023422793 ubox
41 47 0.023416330 ubox
41 52 0.004199245 ubox
42 46 0.021095408 ubox
42 51 0.003838877 ubox
43 49 0.003406660 ubox
44 48 0.003356003 ubox
45 56 0.003788105 ubox
45 57 0.014337457 ubox
46 56 0.016491709 ubox
46 68 0.008457836 ubox
47 54 0.123422968 ubox
47 56 0.008912582 ubox
47 60 0.914055066 ubox
47 62 0.063112506 ubox
47 67 0.007495901 ubox
47 78 0.099953501 ubox
48 53 0.123552834 ubox
48 55 0.009163378 ubox
48 59 0.965389514 ubox
48 61 0.047084996 ubox
48 70 0.012182886 ubox
48 76 0.020545825 ubox
48 77 0.100692433 ubox
49 55 0.007077664 ubox
49 58 0.966921927 ubox
49 69 0.012219951 ubox
49 75 0.021233249 ubox
49 76 0.100496878 ubox
50 54 0.007044848 ubox
50 57 0.966760099 ubox
50 68 0.006233946 ubox
50 74 0.021531440 ubox
51 56 0.941740903 ubox
51 68 0.014504610 ubox
52 67 0.015246927 ubox
52 68 0.026679471 ubox
53 60 0.010734853 ubox
53 62 0.030966312 ubox
53 66 0.013365434 ubox
53 67 0.028416727 ubox
53 78 0.004223815 ubox
54 59 0.010980526 ubox
54 61 0.031000434 ubox
54 69 0.012903595 ubox
54 75 0.099865458 ubox
54 77 0.004080128 ubox
55 60 0.020084189 ubox
55 62 0.007871473 ubox
55 66 0.084002473 ubox
55 68 0.010036827 ubox
55 74 0.102382686 ubox
55 78 0.004720154 ubox
56 61 0.007369795 ubox
56 65 0.085975587 ubox
56 70 0.025075239 ubox
56 71 0.013014922 ubox
56 73 0.102332102 ubox
56 77 0.004730207 ubox
57 64 0.086272975 ubox
57 69 0.026450977 ubox
57 70 0.013023666 ubox
57 72 0.102144486 ubox
57 76 0.004738138 ubox
58 67 0.142445653 ubox
58 68 0.010129084 ubox
59 66 0.142821920 ubox
59 67 0.009104889 ubox
59 74 0.004525957 ubox
60 65 0.142062135 ubox
60 69 0.003826292 ubox
60 73 0.004464931 ubox
61 68 0.009634594 ubox
61 78 0.032885418 ubox
62 69 0.028018296 ubox
62 77 0.025841423 ubox
63 68 0.027123902 ubox
66 76 0.038070913 ubox
66 77 0.938844067 ubox
67 75 0.037875591 ubox
67 76 0.943502253 ubox
67 77 0.004713590 ubox
68 75 0.942698719 ubox
68 76 0.004203103 ubox
69 74 0.942055759 ubox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
