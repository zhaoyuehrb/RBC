%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGCGGCGCGGGGGAGGAGACCUUCAUCUGUUCACGCGGUAGCGCGGAUUGCGGUUCGCGGCGCGCGCCACCGGGGAAGGAGCGGUGGGCCGAGGGGUUGGAGGUGGGGCCCCAGGAGGACCUCGGGCUGUGGGCCGGGAGAGCGGAGUCGGGGAGUGGGGCGGGGGAGCGAGGUGGCGCCGGGGAGCCUGGGAU\
) } def
/len { sequence length } bind def

/coor [
[86.06546021 128.44233704]
[76.46401215 139.96676636]
[66.86257172 151.49118042]
[57.26112747 163.01560974]
[47.65968704 174.54002380]
[38.05824280 186.06445312]
[35.16933060 201.61965942]
[21.07812500 206.44534302]
[11.47668266 217.96975708]
[8.38354683 226.57521057]
[1.63156486 229.59877014]
[-8.15060902 240.97018433]
[-17.93278313 252.34159851]
[-27.71495819 263.71301270]
[-37.49713135 275.08444214]
[-47.18924332 286.53271484]
[-56.79068756 298.05712891]
[-66.39212799 309.58154297]
[-75.99357605 321.10595703]
[-85.59501648 332.63040161]
[-91.08821106 348.66973877]
[-108.02141571 347.83135986]
[-111.90337372 331.32781982]
[-97.11943817 323.02893066]
[-87.51799774 311.50451660]
[-77.91654968 299.98010254]
[-68.31510925 288.45568848]
[-58.71366501 276.93124390]
[-56.84566116 269.77291870]
[-48.86854553 265.30224609]
[-39.08637238 253.93083191]
[-29.30419731 242.55941772]
[-19.52202415 231.18800354]
[-9.73985004 219.81658936]
[-0.04773893 208.36831665]
[9.55370426 196.84390259]
[11.75585556 182.11299133]
[26.53382111 176.46299744]
[36.13526535 164.93858337]
[45.73670959 153.41415405]
[55.33815002 141.88973999]
[64.93959808 130.36531067]
[74.54103851 118.84089661]
[68.32845306 100.22606659]
[74.27467346 81.52445221]
[90.09693909 69.91565704]
[88.91414642 54.96236420]
[87.73136139 40.00907135]
[76.54336548 32.49897766]
[71.79576111 20.09635162]
[75.01370239 7.41260147]
[84.80416107 -0.97329128]
[83.85757446 -15.94339371]
[75.26482391 -29.22779274]
[82.18354034 -42.41796494]
[81.23696136 -57.38806915]
[80.29037476 -72.35816956]
[79.34378815 -87.32826996]
[78.39720917 -102.29837799]
[77.45062256 -117.26847839]
[76.50403595 -132.23858643]
[75.55744934 -147.20867920]
[74.61087036 -162.17878723]
[73.66428375 -177.14889526]
[72.71769714 -192.11898804]
[62.58558273 -181.05824280]
[47.58559418 -181.07861328]
[37.48355103 -192.16683960]
[38.85643005 -207.10388184]
[50.81041336 -216.16490173]
[65.56243896 -213.45094299]
[57.29051590 -225.96395874]
[49.01859283 -238.47695923]
[40.74666977 -250.98995972]
[32.47475052 -263.50296021]
[24.20282555 -276.01596069]
[8.77842045 -275.71389771]
[-4.34874153 -283.81829834]
[-10.98983002 -297.74307251]
[-9.02569675 -313.04489136]
[0.91690856 -324.84100342]
[15.66533852 -329.36727905]
[30.51342201 -325.17944336]
[40.72319031 -313.61380005]
[43.03673935 -298.36090088]
[36.71583176 -284.28790283]
[44.98775482 -271.77490234]
[53.25967789 -259.26187134]
[61.53160095 -246.74888611]
[69.80352020 -234.23587036]
[78.07544708 -221.72286987]
[85.52969360 -222.55000305]
[107.89244843 -225.03137207]
[113.22003937 -239.05339050]
[118.54762268 -253.07539368]
[123.87521362 -267.09741211]
[129.20280457 -281.11941528]
[134.53039551 -295.14141846]
[125.33036804 -312.99288940]
[132.10543823 -331.57403564]
[150.07402039 -339.07894897]
[154.73179626 -353.33743286]
[159.38957214 -367.59594727]
[164.04733276 -381.85446167]
[163.73806763 -390.99371338]
[168.89282227 -396.30029297]
[173.77510071 -410.48348999]
[178.65737915 -424.66668701]
[178.09567261 -441.61132812]
[194.22262573 -446.84182739]
[203.71308899 -432.79306030]
[192.84057617 -419.78442383]
[187.95829773 -405.60119629]
[183.07601929 -391.41799927]
[178.30584717 -377.19671631]
[173.64807129 -362.93820190]
[168.99031067 -348.67968750]
[164.33253479 -334.42117310]
[171.28271484 -326.84411621]
[174.48069763 -316.98721313]
[173.28424072 -306.61248779]
[167.84301758 -297.60394287]
[159.08363342 -291.62548828]
[148.55239868 -289.81384277]
[143.22480774 -275.79183960]
[137.89723206 -261.76980591]
[132.56964111 -247.74780273]
[127.24205017 -233.72579956]
[121.91445923 -219.70378113]
[87.68780518 -193.06558228]
[88.63438416 -178.09547424]
[89.58097076 -163.12536621]
[90.52755737 -148.15527344]
[91.47413635 -133.18516541]
[92.42072296 -118.21506500]
[93.36730957 -103.24496460]
[94.31389618 -88.27485657]
[95.26047516 -73.30475616]
[96.20706177 -58.33465195]
[97.15364838 -43.36455154]
[105.67868805 -31.15091324]
[98.82767487 -16.88997841]
[99.77426147 -1.91987574]
[112.85492706 8.64356995]
[114.28118896 25.73522186]
[102.68465424 38.82628250]
[103.86744690 53.77957916]
[105.05023193 68.73287201]
[119.02743530 74.68015289]
[128.62812805 86.45126343]
[131.64405823 101.33872223]
[127.38150787 115.91826630]
[138.19534302 126.31350708]
[149.00917053 136.70875549]
[159.82299805 147.10400391]
[170.63682556 157.49923706]
[184.56556702 151.47712708]
[199.69798279 151.24719238]
[213.72767639 156.81330872]
[224.52819824 167.29835510]
[230.47543335 181.08222961]
[230.69169617 196.05215454]
[225.17517090 209.92649841]
[235.98899841 220.32173157]
[246.80282593 230.71697998]
[257.61666870 241.11222839]
[271.52890015 234.98704529]
[286.72625732 234.65710449]
[300.89123535 240.17271423]
[311.86376953 250.69279480]
[317.97064209 264.61309814]
[318.28057861 279.81085205]
[312.74633789 293.96856689]
[302.21185303 304.92724609]
[288.28353882 311.01580811]
[273.08535767 311.30575562]
[258.93493652 305.75289917]
[247.99012756 295.20401001]
[241.91990662 281.26770020]
[241.64994812 266.06915283]
[247.22142029 251.92605591]
[236.40757751 241.53080750]
[225.59375000 231.13555908]
[214.77992249 220.74032593]
[201.13406372 226.79998779]
[186.16725159 227.17456055]
[172.15945435 221.77583313]
[161.25640869 211.39743042]
[155.14106750 197.59829712]
[154.77374268 182.46858215]
[160.24157715 168.31306458]
[149.42774963 157.91783142]
[138.61392212 147.52258301]
[127.80009460 137.12733459]
[116.98625946 126.73209381]
[111.20886993 129.62261963]
[104.96515656 131.28074646]
[98.51487732 131.63751221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[6 38]
[8 36]
[9 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[46 148]
[47 147]
[48 146]
[52 143]
[53 142]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[101 118]
[102 117]
[103 116]
[104 115]
[106 114]
[107 113]
[108 112]
[152 195]
[153 194]
[154 193]
[155 192]
[156 191]
[163 184]
[164 183]
[165 182]
[166 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
