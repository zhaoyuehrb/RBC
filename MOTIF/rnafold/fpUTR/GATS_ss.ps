%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAAGUUGUUUGUUACAGCGAACACCAGCUGCUCCCCGCGCCGGCACCCGCGCGCCGCUGCUCCGCCGGCGCUGCCUCCCUCGACCCGUGGCUCCCCCUCGCAACUUGGCGGGCCUCCUCCCUUUUGUCCGGCCCGGUCCGGCCGCCGCCGCCCCCCGCGCCUGGCGCCGAGCUCCCGGGUCCCCGGGCCGGCUGUCGGUGCCGGCAGGGCGCGGAGGGGGCGGGGGCCGCGGCUCGUCCCCCAGCGG\
) } def
/len { sequence length } bind def

/coor [
[82.41780090 120.35090637]
[78.62458801 116.32129669]
[75.73647308 111.60060120]
[60.93618011 114.04016113]
[46.13589096 116.47972107]
[31.33560181 118.91927338]
[16.53531265 121.35883331]
[1.73502386 123.79839325]
[-13.06526566 126.23794556]
[-27.86555481 128.67750549]
[-29.10245514 146.35325623]
[-35.73265839 163.08493042]
[-47.29082870 177.24188232]
[-62.82370377 187.39064026]
[-80.96735382 192.43923950]
[-100.06649017 191.75254822]
[-118.32540894 185.22686768]
[-126.98899841 197.47195435]
[-135.65258789 209.71704102]
[-144.31617737 221.96212769]
[-139.20872498 236.61456299]
[-143.72140503 251.46095276]
[-156.11900330 260.79257202]
[-171.63438416 261.02120972]
[-184.30158997 252.05899048]
[-189.24980164 237.35202026]
[-184.57632446 222.55545044]
[-172.07823181 213.35887146]
[-156.56126404 213.29853821]
[-147.89767456 201.05345154]
[-139.23408508 188.80836487]
[-130.57049561 176.56327820]
[-134.54933167 170.20568848]
[-147.26449585 178.16336060]
[-159.97979736 186.12083435]
[-167.93707275 173.40541077]
[-155.22216797 165.44819641]
[-142.50700378 157.49052429]
[-146.48583984 151.13293457]
[-161.28611755 153.57249451]
[-176.08641052 156.01205444]
[-190.88670349 158.45161438]
[-205.68699646 160.89117432]
[-220.48727417 163.33073425]
[-235.28756714 165.77027893]
[-250.08786011 168.20983887]
[-255.32658386 180.94367981]
[-266.08377075 189.36453247]
[-279.48895264 191.36096191]
[-292.03131104 186.51803589]
[-300.47912598 176.19805908]
[-315.30892944 178.45144653]
[-330.12423706 180.79795837]
[-344.92453003 183.23751831]
[-359.56942749 191.77938843]
[-371.83157349 180.07145691]
[-363.97570801 165.04742432]
[-347.36407471 168.43722534]
[-332.56381226 165.99768066]
[-326.49069214 161.81947327]
[-317.56228638 163.62167358]
[-302.73251343 161.36828613]
[-295.64907837 146.54658508]
[-280.97555542 138.79806519]
[-264.41198730 141.35708618]
[-252.52742004 153.40954590]
[-237.72712708 150.97000122]
[-222.92683411 148.53044128]
[-208.12654114 146.09088135]
[-193.32626343 143.65132141]
[-178.52597046 141.21176147]
[-163.72567749 138.77220154]
[-148.92538452 136.33265686]
[-144.98655701 120.98851776]
[-137.61993408 107.91464996]
[-150.48283386 100.19805145]
[-163.34573364 92.48146057]
[-175.79014587 101.25963593]
[-190.73034668 104.21092224]
[-205.57786560 100.82399750]
[-217.76026917 91.68566895]
[-225.16687012 78.37920380]
[-226.51445007 63.21002579]
[-221.56951904 48.80628967]
[-211.18882751 37.66352844]
[-197.17088318 31.71229553]
[-181.94439697 31.98367500]
[-168.14741516 38.43064880]
[-158.17037964 49.93624115]
[-153.74186707 64.50704193]
[-155.62913513 79.61856079]
[-142.76623535 87.33515167]
[-129.90333557 95.05175018]
[-120.14626312 85.36919403]
[-108.34413910 78.29642487]
[-95.17969513 74.24992371]
[-81.41624451 73.47090912]
[-67.85340118 76.01094818]
[-55.28064346 81.72860718]
[-44.43133926 90.29728699]
[-35.93999100 101.22389984]
[-30.30511284 113.87721252]
[-15.50482273 111.43766022]
[-0.70453364 108.99810028]
[14.09575558 106.55854034]
[28.89604378 104.11898804]
[43.69633484 101.67942810]
[58.49662399 99.23986816]
[73.29691315 96.80031586]
[82.24308777 76.24559021]
[105.41209412 68.03359222]
[105.03514099 53.03833008]
[104.65818787 38.04306793]
[104.28124237 23.04780388]
[103.90428925 8.05254173]
[103.52733612 -6.94272089]
[89.23130035 -12.04054546]
[77.74475098 -21.96141052]
[70.62113953 -35.36359787]
[68.82388306 -50.43457413]
[72.59604645 -65.13610840]
[81.42747498 -77.47994995]
[94.12378693 -85.79668427]
[108.96791077 -88.96154785]
[123.95230865 -86.54651642]
[137.05044556 -78.87820435]
[146.49093628 -66.99368286]
[150.99699402 -52.50024414]
[149.95924377 -37.35800171]
[143.51802063 -23.61482048]
[132.54443359 -13.12935257]
[118.52259827 -7.31967258]
[118.89955139 7.67559052]
[119.27650452 22.67085266]
[119.65345001 37.66611481]
[120.03040314 52.66138077]
[120.40735626 67.65663910]
[131.27716064 77.99334717]
[146.27241516 77.61639404]
[161.26768494 77.23944855]
[176.26028442 76.76828766]
[191.24961853 76.20293427]
[206.23896790 75.63758087]
[221.22830200 75.07222748]
[236.21765137 74.50687408]
[249.71638489 66.25493622]
[262.72622681 73.50704956]
[277.71557617 72.94169617]
[292.70492554 72.37634277]
[307.69427490 71.81098938]
[322.68362427 71.24563599]
[331.11618042 67.80235291]
[337.86462402 70.76855469]
[352.85986328 70.39160156]
[367.85513306 70.01465607]
[381.45651245 61.93299866]
[394.37420654 69.34801483]
[409.36947632 68.97106171]
[424.36471558 68.59411621]
[439.35998535 68.21716309]
[454.35525513 67.84020996]
[469.35052490 67.46325684]
[484.34576416 67.08631134]
[499.34103394 66.70935822]
[514.32208252 65.95568848]
[529.27947998 64.82579041]
[544.23687744 63.69588852]
[559.19427490 62.56598663]
[574.15161133 61.43608475]
[589.10900879 60.30618286]
[604.06640625 59.17627716]
[619.02380371 58.04637527]
[633.96575928 56.72860718]
[648.89007568 55.22318268]
[663.81433105 53.71775818]
[678.71850586 52.02490997]
[693.60021973 50.14491272]
[708.48193359 48.26491547]
[723.36364746 46.38491440]
[738.24536133 44.50491714]
[750.97351074 34.16441727]
[766.19409180 40.26903915]
[768.24945068 56.53887558]
[755.02520752 66.23690796]
[740.12536621 59.38663864]
[725.24365234 61.26663589]
[710.36193848 63.14663696]
[695.48022461 65.02663422]
[680.59851074 66.90663147]
[677.02850342 70.04435730]
[671.45684814 70.98904419]
[665.31976318 68.64202118]
[650.39544678 70.14744568]
[635.47119141 71.65287781]
[631.82354736 74.69989014]
[626.22985840 75.50426483]
[620.15368652 73.00376129]
[605.19628906 74.13365936]
[590.23889160 75.26356506]
[575.28155518 76.39346313]
[560.32415771 77.52336884]
[545.36676025 78.65327454]
[530.40936279 79.78317261]
[515.45202637 80.91307831]
[513.53094482 82.92148590]
[510.70858765 84.29987335]
[507.21740723 84.70482635]
[503.40853882 83.88206482]
[499.71798706 81.70462036]
[484.72271729 82.08157349]
[469.72747803 82.45851898]
[454.73220825 82.83547211]
[439.73693848 83.21242523]
[424.74166870 83.58937836]
[409.74642944 83.96633148]
[394.75115967 84.34327698]
[382.22235107 92.39797211]
[368.23208618 85.00991821]
[353.23681641 85.38687134]
[338.24154663 85.76381683]
[323.24896240 86.23497772]
[308.25961304 86.80033112]
[293.27026367 87.36568451]
[278.28094482 87.93103790]
[263.29159546 88.49639130]
[250.86499023 96.70788574]
[236.78300476 89.49621582]
[221.79365540 90.06156921]
[206.80432129 90.62692261]
[191.81497192 91.19227600]
[176.82563782 91.75762939]
[170.27676392 95.14171600]
[161.64463806 92.23471069]
[146.64936829 92.61166382]
[131.65409851 92.98860931]
[126.82211304 112.65521240]
[112.20668030 123.96434021]
[115.01740265 138.69865417]
[117.82812500 153.43296814]
[131.03877258 162.10787964]
[134.16416931 177.60005188]
[125.35006714 190.71824646]
[109.82571411 193.67967224]
[96.80143738 184.72737122]
[94.00431061 169.17257690]
[103.09381104 156.24368286]
[100.28309631 141.50936890]
[97.47237396 126.77506256]
[92.04553223 125.69084167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[17 32]
[18 31]
[19 30]
[20 29]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[51 62]
[52 61]
[53 59]
[54 58]
[75 93]
[76 92]
[77 91]
[111 137]
[112 136]
[113 135]
[114 134]
[115 133]
[116 132]
[138 235]
[139 234]
[140 233]
[141 231]
[142 230]
[143 229]
[144 228]
[145 227]
[147 225]
[148 224]
[149 223]
[150 222]
[151 221]
[153 220]
[154 219]
[155 218]
[157 216]
[158 215]
[159 214]
[160 213]
[161 212]
[162 211]
[163 210]
[164 209]
[165 204]
[166 203]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 194]
[174 193]
[175 192]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
[237 248]
[238 247]
[239 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
