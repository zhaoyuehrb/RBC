%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED21)
} def

/sequence { (\
AGAGCUGCCCAGUCGCGGAAGAGCAGCUGUUUUGGCGUCUGUUUGCUGCGGUAGGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.032166459 ubox
2 14 0.004678502 ubox
2 39 0.034069734 ubox
2 44 0.003177134 ubox
3 13 0.004416296 ubox
3 28 0.029686042 ubox
3 38 0.032502283 ubox
3 40 0.033704639 ubox
3 43 0.004128397 ubox
3 47 0.033972521 ubox
4 13 0.036991056 ubox
4 27 0.030566504 ubox
4 36 0.021765958 ubox
4 38 0.011973342 ubox
4 39 0.034558799 ubox
4 42 0.004989589 ubox
4 46 0.034878157 ubox
4 49 0.104194109 ubox
4 52 0.064702509 ubox
5 12 0.039993247 ubox
5 18 0.004765289 ubox
5 26 0.030600017 ubox
5 35 0.021793763 ubox
5 37 0.018256869 ubox
5 41 0.005100146 ubox
5 45 0.034860374 ubox
5 48 0.104077604 ubox
5 51 0.066162405 ubox
5 54 0.856282618 ubox
5 55 0.044827237 ubox
6 11 0.037450914 ubox
6 17 0.004795333 ubox
6 25 0.030599592 ubox
6 34 0.021369935 ubox
6 37 0.041314935 ubox
6 50 0.065993689 ubox
6 53 0.859918734 ubox
6 54 0.025824474 ubox
7 13 0.005064230 ubox
7 16 0.004837837 ubox
7 24 0.030607182 ubox
7 33 0.013889153 ubox
7 36 0.049022775 ubox
7 42 0.004024228 ubox
7 44 0.004676103 ubox
7 46 0.104675280 ubox
7 49 0.065345486 ubox
7 52 0.860645742 ubox
8 12 0.005578701 ubox
8 15 0.004830381 ubox
8 23 0.030584238 ubox
8 35 0.049016111 ubox
8 41 0.003386919 ubox
8 45 0.104907814 ubox
8 48 0.064960043 ubox
8 51 0.859749695 ubox
8 55 0.177772885 ubox
9 18 0.024901508 ubox
9 34 0.048965195 ubox
9 50 0.841435260 ubox
9 51 0.033081185 ubox
9 54 0.177188633 ubox
9 55 0.443295058 ubox
10 17 0.024916162 ubox
10 29 0.071294226 ubox
10 41 0.169917046 ubox
10 45 0.009272564 ubox
10 48 0.743541526 ubox
10 50 0.040915048 ubox
10 54 0.443851265 ubox
11 28 0.071638030 ubox
11 40 0.170689444 ubox
11 44 0.008235829 ubox
11 47 0.743488697 ubox
12 27 0.071694186 ubox
12 39 0.170903102 ubox
12 43 0.006051711 ubox
12 46 0.740962654 ubox
12 49 0.104376939 ubox
12 52 0.172224210 ubox
13 19 0.009231344 ubox
13 22 0.017232718 ubox
13 26 0.071249396 ubox
13 41 0.004671401 ubox
13 45 0.721238720 ubox
13 48 0.103594934 ubox
13 51 0.452556714 ubox
14 18 0.010797375 ubox
14 21 0.023554386 ubox
14 37 0.305598279 ubox
14 41 0.045814597 ubox
14 45 0.119445103 ubox
14 48 0.010744661 ubox
14 50 0.518255776 ubox
15 24 0.073562902 ubox
15 30 0.005077456 ubox
15 36 0.306204212 ubox
15 38 0.075933294 ubox
15 40 0.017284550 ubox
15 42 0.593928536 ubox
15 44 0.063685097 ubox
15 46 0.123471096 ubox
15 47 0.004177337 ubox
15 49 0.632287149 ubox
16 23 0.073623981 ubox
16 29 0.005228304 ubox
16 34 0.062523748 ubox
16 35 0.299892450 ubox
16 37 0.079940037 ubox
16 41 0.604853828 ubox
16 45 0.127600545 ubox
16 48 0.632362630 ubox
17 28 0.005389034 ubox
17 33 0.087434728 ubox
17 36 0.079993602 ubox
17 39 0.005780877 ubox
17 40 0.604082724 ubox
17 43 0.028291974 ubox
17 44 0.119037736 ubox
17 47 0.631447627 ubox
18 27 0.005393179 ubox
18 32 0.106721598 ubox
18 33 0.271365339 ubox
18 38 0.004559356 ubox
18 39 0.604251845 ubox
18 42 0.025305853 ubox
18 43 0.106985136 ubox
18 44 0.188897478 ubox
18 46 0.629843564 ubox
19 31 0.114961726 ubox
19 32 0.258258896 ubox
19 33 0.022704072 ubox
19 38 0.582315849 ubox
19 42 0.094482289 ubox
19 43 0.198229850 ubox
19 44 0.035143736 ubox
20 28 0.022973175 ubox
20 30 0.122134730 ubox
20 31 0.237825513 ubox
20 32 0.032525311 ubox
20 33 0.432917764 ubox
20 40 0.102698389 ubox
20 42 0.200127446 ubox
20 43 0.028950741 ubox
20 44 0.063954615 ubox
21 27 0.025320502 ubox
21 30 0.203386862 ubox
21 31 0.034588437 ubox
21 32 0.451913925 ubox
21 33 0.016096243 ubox
21 39 0.104825242 ubox
21 42 0.017427299 ubox
21 43 0.067260874 ubox
21 44 0.670200813 ubox
22 28 0.174139596 ubox
22 30 0.035948012 ubox
22 31 0.461224240 ubox
22 32 0.015562607 ubox
22 33 0.023864363 ubox
22 38 0.096321942 ubox
22 40 0.207103411 ubox
22 42 0.056448446 ubox
22 43 0.676532901 ubox
22 44 0.008024054 ubox
23 27 0.171216413 ubox
23 30 0.473175394 ubox
23 31 0.012135722 ubox
23 32 0.020338420 ubox
23 36 0.222422435 ubox
23 38 0.143463339 ubox
23 39 0.206962808 ubox
23 42 0.683435847 ubox
23 43 0.006282715 ubox
23 49 0.006408040 ubox
24 29 0.474681252 ubox
24 34 0.291084089 ubox
24 35 0.211582496 ubox
24 37 0.215141281 ubox
24 41 0.686357264 ubox
24 48 0.006415798 ubox
25 31 0.015375523 ubox
25 32 0.034347029 ubox
25 33 0.295109266 ubox
25 40 0.686095472 ubox
25 47 0.006417090 ubox
26 30 0.012439266 ubox
26 31 0.032169905 ubox
26 32 0.253224161 ubox
26 36 0.319914210 ubox
26 38 0.022652663 ubox
26 39 0.682359813 ubox
26 46 0.006418665 ubox
26 52 0.004075234 ubox
27 35 0.321839021 ubox
27 37 0.146524074 ubox
27 45 0.006414833 ubox
27 51 0.004331707 ubox
28 34 0.314019455 ubox
28 37 0.646152953 ubox
28 50 0.004742672 ubox
29 33 0.146055006 ubox
29 36 0.677986472 ubox
29 38 0.005101816 ubox
29 49 0.008177461 ubox
29 58 0.016542784 ubox
30 35 0.645595735 ubox
30 37 0.006852469 ubox
30 48 0.008100093 ubox
30 56 0.016985116 ubox
30 57 0.016384066 ubox
31 50 0.003386170 ubox
31 55 0.018641345 ubox
31 56 0.016031075 ubox
32 54 0.019812462 ubox
32 55 0.015108829 ubox
33 48 0.025221772 ubox
33 53 0.020693089 ubox
33 54 0.013479269 ubox
34 43 0.004082616 ubox
34 47 0.047711418 ubox
34 52 0.020730176 ubox
35 42 0.006294831 ubox
35 46 0.049516562 ubox
35 49 0.008091226 ubox
35 52 0.003650179 ubox
36 41 0.006449290 ubox
36 45 0.049531642 ubox
36 48 0.008105166 ubox
36 50 0.021211289 ubox
36 51 0.003418942 ubox
37 44 0.045307906 ubox
37 46 0.006702785 ubox
37 47 0.004267147 ubox
37 49 0.021222516 ubox
37 58 0.003692746 ubox
38 45 0.006469115 ubox
38 48 0.020465191 ubox
38 56 0.007393219 ubox
38 57 0.003346607 ubox
39 51 0.016476270 ubox
39 55 0.008109672 ubox
40 50 0.016749955 ubox
40 54 0.007417349 ubox
41 49 0.018890261 ubox
41 58 0.014547972 ubox
42 48 0.018987400 ubox
42 55 0.038559807 ubox
42 56 0.005238499 ubox
42 57 0.014458989 ubox
43 54 0.049374058 ubox
43 55 0.004244960 ubox
43 56 0.012989637 ubox
43 57 0.006974637 ubox
44 53 0.054090537 ubox
44 55 0.010392560 ubox
44 56 0.008185968 ubox
45 49 0.006027313 ubox
45 52 0.055527822 ubox
46 51 0.055627131 ubox
46 54 0.010090498 ubox
46 55 0.003411046 ubox
47 53 0.010025570 ubox
47 54 0.003409445 ubox
48 52 0.008357058 ubox
51 58 0.012995617 ubox
52 57 0.012613604 ubox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
showpage
end
%%EOF
