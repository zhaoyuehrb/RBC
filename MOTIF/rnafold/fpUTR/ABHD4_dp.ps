%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABHD4)
} def

/sequence { (\
UCCCGGGUCAGCUGGUGCUGGCGUCAGGCGCUGGGCGGGCUCGCCAGGACCUGGCAAGGCUUGUUUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.021118487 ubox
1 34 0.004893824 ubox
1 49 0.059959731 ubox
1 59 0.040434504 ubox
2 6 0.020553989 ubox
2 15 0.005758901 ubox
2 27 0.029535437 ubox
2 28 0.242509551 ubox
2 33 0.008161255 ubox
2 34 0.008338664 ubox
2 35 0.115870168 ubox
2 39 0.004639769 ubox
2 48 0.066662417 ubox
2 54 0.015679017 ubox
2 58 0.056864248 ubox
2 59 0.107154796 ubox
3 14 0.004253720 ubox
3 15 0.109614166 ubox
3 21 0.003641011 ubox
3 27 0.245148493 ubox
3 28 0.206100640 ubox
3 33 0.007212296 ubox
3 34 0.133400304 ubox
3 35 0.008290140 ubox
3 38 0.004974861 ubox
3 47 0.066506559 ubox
3 48 0.047611557 ubox
3 53 0.011499361 ubox
3 54 0.286179171 ubox
3 58 0.107268336 ubox
3 59 0.190419123 ubox
4 14 0.110584840 ubox
4 20 0.003813259 ubox
4 23 0.007277308 ubox
4 27 0.207969931 ubox
4 30 0.005016060 ubox
4 33 0.133667180 ubox
4 34 0.009181348 ubox
4 37 0.004989889 ubox
4 43 0.035907095 ubox
4 47 0.047881297 ubox
4 53 0.291988513 ubox
4 58 0.192014710 ubox
4 63 0.678355106 ubox
5 13 0.110565430 ubox
5 19 0.003725484 ubox
5 22 0.006789844 ubox
5 25 0.266112343 ubox
5 29 0.004781438 ubox
5 32 0.132646232 ubox
5 36 0.004675491 ubox
5 42 0.039848666 ubox
5 45 0.011189998 ubox
5 52 0.292180858 ubox
5 61 0.042288273 ubox
5 62 0.686906754 ubox
5 65 0.006256749 ubox
5 66 0.008075708 ubox
5 69 0.040565301 ubox
6 12 0.110561660 ubox
6 18 0.003664385 ubox
6 24 0.241780585 ubox
6 25 0.034487866 ubox
6 31 0.131471490 ubox
6 32 0.010381273 ubox
6 41 0.039849671 ubox
6 44 0.010000029 ubox
6 45 0.082939771 ubox
6 51 0.292426243 ubox
6 60 0.046346783 ubox
6 61 0.692000333 ubox
6 62 0.005750725 ubox
6 64 0.005654562 ubox
6 65 0.007681040 ubox
6 66 0.005608408 ubox
6 68 0.044885271 ubox
6 69 0.018693343 ubox
7 12 0.003580210 ubox
7 22 0.632777390 ubox
7 24 0.007800175 ubox
7 29 0.023831505 ubox
7 31 0.011493206 ubox
7 40 0.039883465 ubox
7 44 0.083484376 ubox
7 50 0.292422816 ubox
7 55 0.084629712 ubox
7 60 0.692398136 ubox
7 68 0.020143060 ubox
8 21 0.633471511 ubox
8 28 0.022755015 ubox
8 30 0.011935903 ubox
8 34 0.003513692 ubox
8 39 0.039789498 ubox
8 43 0.082929642 ubox
8 49 0.292168376 ubox
8 54 0.084611742 ubox
8 59 0.691726955 ubox
8 67 0.019206819 ubox
9 20 0.638462067 ubox
9 27 0.015291235 ubox
9 33 0.004459887 ubox
9 37 0.003553570 ubox
9 38 0.039024501 ubox
9 47 0.003747075 ubox
9 48 0.290129214 ubox
9 53 0.084581570 ubox
9 58 0.684876247 ubox
9 63 0.003812088 ubox
10 19 0.639204241 ubox
10 32 0.004479088 ubox
10 41 0.112138841 ubox
10 52 0.083760065 ubox
10 61 0.004706240 ubox
10 65 0.016844140 ubox
11 18 0.639450509 ubox
11 22 0.025897454 ubox
11 31 0.004471863 ubox
11 36 0.037875228 ubox
11 40 0.115765564 ubox
11 44 0.010438433 ubox
11 51 0.046378599 ubox
11 55 0.685637531 ubox
11 60 0.005533143 ubox
11 64 0.018037367 ubox
12 17 0.639108678 ubox
12 21 0.025929857 ubox
12 27 0.010077329 ubox
12 30 0.004431402 ubox
12 34 0.025820849 ubox
12 35 0.033382708 ubox
12 39 0.115778129 ubox
12 43 0.010316192 ubox
12 47 0.285404868 ubox
12 54 0.686437479 ubox
12 59 0.005541187 ubox
12 63 0.018060154 ubox
13 20 0.025218985 ubox
13 26 0.010898952 ubox
13 33 0.031975589 ubox
13 34 0.026667740 ubox
13 38 0.115378145 ubox
13 43 0.004061742 ubox
13 46 0.288671332 ubox
13 53 0.642897877 ubox
13 58 0.005490037 ubox
14 19 0.015620063 ubox
14 25 0.010946140 ubox
14 32 0.038270994 ubox
14 41 0.005829015 ubox
14 42 0.008910622 ubox
14 45 0.289025330 ubox
14 51 0.684544953 ubox
14 52 0.087244315 ubox
14 61 0.008838167 ubox
14 62 0.004423995 ubox
15 22 0.006206317 ubox
15 24 0.010124573 ubox
15 31 0.043912530 ubox
15 36 0.115130090 ubox
15 40 0.005919567 ubox
15 41 0.008425943 ubox
15 44 0.288991146 ubox
15 50 0.688928269 ubox
15 51 0.062792474 ubox
15 60 0.009099960 ubox
15 61 0.005164284 ubox
15 68 0.004176325 ubox
16 21 0.006174612 ubox
16 23 0.009284593 ubox
16 30 0.044157111 ubox
16 35 0.108903901 ubox
16 37 0.009853999 ubox
16 39 0.005290236 ubox
16 43 0.278287611 ubox
16 49 0.689726519 ubox
16 56 0.004488472 ubox
16 59 0.008656860 ubox
16 67 0.004836108 ubox
17 22 0.009652308 ubox
17 29 0.044439428 ubox
17 31 0.003772016 ubox
17 36 0.019033442 ubox
17 40 0.273659888 ubox
17 42 0.089810640 ubox
17 55 0.004722927 ubox
17 60 0.067645776 ubox
17 64 0.036204819 ubox
17 66 0.003209929 ubox
18 27 0.019698506 ubox
18 28 0.040182155 ubox
18 30 0.003752711 ubox
18 34 0.139591526 ubox
18 35 0.017076784 ubox
18 38 0.006731749 ubox
18 39 0.285259516 ubox
18 47 0.691616759 ubox
18 48 0.004611495 ubox
18 54 0.004722707 ubox
18 58 0.008263074 ubox
18 59 0.067743830 ubox
18 63 0.038037639 ubox
19 26 0.027375339 ubox
19 27 0.035038905 ubox
19 33 0.140752979 ubox
19 34 0.013691729 ubox
19 37 0.006701712 ubox
19 38 0.284548936 ubox
19 46 0.691654398 ubox
19 53 0.004667151 ubox
19 57 0.008362971 ubox
19 58 0.067233556 ubox
20 25 0.029435000 ubox
20 32 0.144414313 ubox
20 36 0.005297312 ubox
20 41 0.014027746 ubox
20 45 0.691795283 ubox
20 52 0.004657313 ubox
20 61 0.037694832 ubox
21 29 0.040749668 ubox
21 31 0.151933448 ubox
21 36 0.285121223 ubox
21 40 0.015102104 ubox
21 44 0.691798212 ubox
21 51 0.004673983 ubox
21 55 0.007151442 ubox
21 60 0.042077796 ubox
22 28 0.040842555 ubox
22 30 0.152851238 ubox
22 35 0.284812223 ubox
22 37 0.025222609 ubox
22 39 0.014817843 ubox
22 43 0.691600923 ubox
22 54 0.007082754 ubox
22 59 0.042079732 ubox
23 29 0.164643067 ubox
23 31 0.018054163 ubox
23 36 0.026706165 ubox
23 40 0.166133687 ubox
23 42 0.668372072 ubox
23 50 0.004915670 ubox
23 55 0.530940583 ubox
23 60 0.004114936 ubox
23 68 0.008711568 ubox
24 28 0.154044222 ubox
24 30 0.017860316 ubox
24 34 0.257561562 ubox
24 35 0.024906955 ubox
24 38 0.019774070 ubox
24 39 0.195486478 ubox
24 49 0.004916744 ubox
24 54 0.531287669 ubox
24 59 0.003850326 ubox
24 67 0.008287702 ubox
25 33 0.286793100 ubox
25 34 0.023071299 ubox
25 37 0.019949138 ubox
25 38 0.206159764 ubox
25 48 0.004909582 ubox
25 53 0.532393235 ubox
25 63 0.013703429 ubox
26 32 0.286386462 ubox
26 41 0.214056463 ubox
26 52 0.532320543 ubox
26 62 0.013851617 ubox
26 69 0.010303628 ubox
27 31 0.280146607 ubox
27 40 0.229548224 ubox
27 41 0.287590946 ubox
27 42 0.014510344 ubox
27 45 0.004866302 ubox
27 51 0.532445852 ubox
27 61 0.013893182 ubox
27 65 0.003276197 ubox
27 68 0.011402541 ubox
27 69 0.014012955 ubox
28 36 0.391270086 ubox
28 40 0.292142389 ubox
28 41 0.022628894 ubox
28 44 0.004875174 ubox
28 50 0.532313349 ubox
28 60 0.013900922 ubox
28 64 0.003357564 ubox
28 68 0.016126106 ubox
29 35 0.391350492 ubox
29 37 0.487899937 ubox
29 39 0.290065379 ubox
29 43 0.004864160 ubox
29 59 0.013885658 ubox
29 63 0.003424166 ubox
30 36 0.496263310 ubox
30 40 0.040844742 ubox
30 42 0.003343719 ubox
30 60 0.008629529 ubox
31 35 0.492730326 ubox
31 38 0.223278873 ubox
31 39 0.041295674 ubox
31 47 0.528927607 ubox
31 48 0.054727678 ubox
31 58 0.010499542 ubox
31 59 0.008657023 ubox
32 37 0.209232246 ubox
32 38 0.041514778 ubox
32 46 0.521436968 ubox
32 47 0.050805435 ubox
32 56 0.007557289 ubox
32 57 0.010313448 ubox
32 58 0.008661367 ubox
32 67 0.288266465 ubox
33 41 0.005010192 ubox
33 45 0.427179142 ubox
33 55 0.007737828 ubox
33 65 0.004899451 ubox
33 66 0.319707147 ubox
33 69 0.010634452 ubox
34 40 0.005384017 ubox
34 41 0.004200052 ubox
34 44 0.304892776 ubox
34 45 0.318314801 ubox
34 64 0.004510043 ubox
34 65 0.330889782 ubox
34 66 0.008034456 ubox
34 68 0.011886275 ubox
35 40 0.005640251 ubox
35 44 0.436954499 ubox
35 55 0.010219365 ubox
35 64 0.351462011 ubox
35 65 0.007757429 ubox
36 43 0.529557055 ubox
36 53 0.012648581 ubox
36 54 0.009129277 ubox
36 63 0.370611259 ubox
37 42 0.522810461 ubox
37 52 0.013483945 ubox
37 61 0.026858542 ubox
37 62 0.369491390 ubox
38 51 0.013708887 ubox
38 52 0.007477231 ubox
38 60 0.033986897 ubox
38 61 0.370132748 ubox
39 50 0.013708371 ubox
39 51 0.007486738 ubox
39 60 0.370563369 ubox
40 48 0.004620886 ubox
40 58 0.076725146 ubox
40 59 0.364092526 ubox
41 47 0.003663518 ubox
41 48 0.007036832 ubox
41 49 0.012768438 ubox
41 57 0.101930534 ubox
41 58 0.343587989 ubox
41 59 0.005689546 ubox
42 47 0.012206612 ubox
42 48 0.012861257 ubox
42 58 0.049512104 ubox
43 55 0.377694108 ubox
44 54 0.378200089 ubox
45 53 0.378198513 ubox
45 63 0.037174660 ubox
46 52 0.377263352 ubox
46 62 0.039969001 ubox
47 51 0.368994649 ubox
47 61 0.040810131 ubox
47 66 0.004381482 ubox
48 60 0.041018957 ubox
48 65 0.005379023 ubox
49 61 0.007201187 ubox
49 64 0.010948387 ubox
50 59 0.086928042 ubox
50 63 0.011942886 ubox
51 58 0.087235032 ubox
52 57 0.086366924 ubox
52 67 0.003435979 ubox
53 61 0.017513142 ubox
53 65 0.017214606 ubox
54 60 0.025223340 ubox
54 64 0.048985290 ubox
54 68 0.003881249 ubox
55 59 0.026283920 ubox
55 63 0.095022815 ubox
56 62 0.094267678 ubox
56 65 0.037758984 ubox
56 66 0.057484587 ubox
57 61 0.072047061 ubox
57 64 0.041132932 ubox
57 65 0.062429390 ubox
57 66 0.035836955 ubox
57 69 0.103255503 ubox
58 64 0.061801795 ubox
58 65 0.036656891 ubox
58 66 0.016540384 ubox
58 68 0.114510514 ubox
58 69 0.068826682 ubox
59 64 0.026044713 ubox
59 65 0.015702948 ubox
59 68 0.076440244 ubox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
13 53 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
showpage
end
%%EOF
