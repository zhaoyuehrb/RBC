%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACUCAAACUUAGAAACUUGAAUUAGAUGUGGUAUUCAAAUCCUUAGCUGCCGCGAAGACACAGACAGCCCCCGUAAGAACCCACGAAGCAGGCGAAGUUCAUUGUUCUCAACAUUCUAGCUGCUCUUGCUGCAUUUGCUCUGGAAUUCUUGUAGAGAUAUUACUUGUCCUUCCAGGCUGUUCUUUCUGUAGCUCCCUUGUUUUCUUUUUGUGAUC\
) } def
/len { sequence length } bind def

/coor [
[27.27136040 476.85452271]
[29.96223831 491.61117554]
[30.55422020 506.59948730]
[29.03557587 521.52239990]
[25.43640137 536.08422852]
[19.82802391 549.99633789]
[12.32158947 562.98297119]
[3.06586003 574.78686523]
[-7.75573540 585.17401123]
[-19.92873573 593.93859863]
[-33.21189880 600.90692139]
[-47.34197998 605.94091797]
[-62.03895187 608.94073486]
[-77.01155090 609.84698486]
[-91.96304321 608.64172363]
[-106.59714508 605.34881592]
[-120.62381744 600.03350830]
[-133.76509094 592.80114746]
[-145.76052856 583.79510498]
[-156.37240601 573.19378662]
[-165.39042664 561.20733643]
[-172.63586426 548.07324219]
[-177.96514893 534.05187988]
[-181.27262878 519.42108154]
[-182.49278259 504.47076416]
[-181.60144043 489.49728394]
[-178.61622620 474.79733276]
[-173.59634399 460.66223145]
[-166.64125061 447.37216187]
[-157.88877869 435.19042969]
[-147.51087952 424.35708618]
[-161.73629761 429.11495972]
[-175.96171570 433.87283325]
[-190.18714905 438.63070679]
[-204.41256714 443.38858032]
[-218.63800049 448.14645386]
[-219.66525269 463.31262207]
[-226.42265320 476.92901611]
[-237.87973022 486.91921997]
[-252.28935242 491.75976562]
[-267.45416260 490.71255493]
[-281.06167603 483.93725586]
[-291.03677368 472.46704102]
[-295.85836792 458.05105591]
[-294.79122925 442.88763428]
[-287.99801636 429.28906250]
[-276.51470947 419.32907104]
[-262.09237671 414.52642822]
[-246.93037415 415.61352539]
[-233.34075928 422.42462158]
[-223.39585876 433.92102051]
[-209.17044067 429.16314697]
[-194.94502258 424.40527344]
[-180.71958923 419.64739990]
[-166.49417114 414.88952637]
[-152.26873779 410.13168335]
[-140.09565735 401.36718750]
[-131.07130432 389.38549805]
[-122.04693604 377.40380859]
[-113.02257538 365.42211914]
[-103.99821472 353.44042969]
[-94.97385406 341.45874023]
[-85.94949341 329.47705078]
[-84.43708801 322.24737549]
[-76.70874023 317.38946533]
[-67.51343536 305.53845215]
[-69.62709045 290.83920288]
[-60.47056580 278.68960571]
[-45.03830338 276.57226562]
[-35.84299850 264.72125244]
[-26.64769363 252.87025452]
[-34.11434555 239.94050598]
[-36.06716156 225.09692383]
[-32.17768860 210.59738159]
[-23.00854492 198.65943909]
[-9.93226624 191.12123108]
[5.07408094 189.15843201]
[19.72780609 193.10102844]
[28.92311287 181.25001526]
[38.11841965 169.39901733]
[47.31372452 157.54800415]
[56.50902939 145.69700623]
[65.70433807 133.84599304]
[74.72869873 121.86430359]
[83.58025360 109.75439453]
[81.45843506 95.42107391]
[90.00875854 83.72328949]
[104.30983734 81.39404297]
[113.16139221 69.28413391]
[122.01295471 57.17422485]
[130.86451721 45.06431580]
[131.95132446 38.55250168]
[135.61129761 34.21467209]
[140.14778137 32.73888016]
[149.34307861 20.88787270]
[158.53839111 9.03686619]
[161.32421875 0.34399942]
[167.95158386 -2.91693425]
[177.31593323 -14.63481712]
[186.68029785 -26.35270119]
[196.04466248 -38.07058334]
[189.44461060 -50.56447983]
[188.10794067 -64.58765411]
[192.20349121 -78.02060699]
[201.08160400 -88.84568787]
[213.37689209 -95.45011902]
[227.21815491 -96.86623383]
[240.51309204 -92.91315460]
[250.04458618 -104.49549866]
[259.57604980 -116.07785034]
[269.10754395 -127.66020203]
[278.55572510 -139.31060791]
[287.92007446 -151.02850342]
[297.28442383 -162.74638367]
[299.62719727 -181.01367188]
[316.21127319 -186.76031494]
[325.40658569 -198.61131287]
[334.60189819 -210.46232605]
[343.79721069 -222.31333923]
[352.99252319 -234.16433716]
[362.18780518 -246.01535034]
[371.38311768 -257.86636353]
[370.54510498 -270.73336792]
[378.44293213 -280.41390991]
[390.42245483 -282.06561279]
[399.78680420 -293.78347778]
[392.74810791 -307.28817749]
[391.81729126 -322.48861694]
[397.15560913 -336.75125122]
[407.83816528 -347.60494995]
[422.01412964 -353.16928101]
[437.22744751 -352.48019409]
[450.84231567 -345.65704346]
[460.49987793 -333.88201904]
[464.52688599 -319.19515991]
[462.22567749 -304.14114380]
[453.99490356 -291.32806396]
[441.26062012 -282.97595215]
[426.22909546 -280.53182983]
[411.50466919 -284.41912842]
[402.14031982 -272.70123291]
[400.44271851 -255.23202515]
[383.23413086 -248.67105103]
[374.03881836 -236.82003784]
[364.84350586 -224.96903992]
[355.64822388 -213.11802673]
[346.45291138 -201.26701355]
[337.25759888 -189.41601562]
[328.06228638 -177.56500244]
[329.26574707 -165.53221130]
[321.70709229 -155.58456421]
[309.00231934 -153.38201904]
[299.63796997 -141.66413879]
[290.27359009 -129.94625854]
[288.55441284 -122.76293182]
[280.68991089 -118.12871552]
[271.15841675 -106.54636383]
[261.62692261 -94.96401978]
[252.09544373 -83.38166809]
[259.08364868 -69.00798035]
[259.10263062 -52.96736908]
[252.09779358 -38.47238541]
[239.42636108 -28.44817543]
[223.59469604 -24.94220734]
[207.76254272 -28.70622444]
[198.39817810 -16.98834229]
[189.03382874 -5.27045870]
[179.66946411 6.44742441]
[170.38938904 18.23217201]
[161.19409180 30.08317757]
[151.99877930 41.93418503]
[142.97442627 53.91587448]
[134.12286377 66.02578735]
[125.27130127 78.13569641]
[116.41974640 90.24560547]
[118.54156494 104.57892609]
[109.99124146 116.27671051]
[95.69016266 118.60595703]
[86.83860779 130.71586609]
[85.75179291 137.22767639]
[82.09181213 141.56550598]
[77.55534363 143.04130554]
[68.36003876 154.89230347]
[59.16473007 166.74331665]
[49.96942520 178.59431458]
[40.77411652 190.44532776]
[31.57881165 202.29634094]
[39.03798294 215.51133728]
[40.86446762 230.53489685]
[36.81085205 245.07386780]
[27.52484131 256.92111206]
[14.44598198 264.29055786]
[-0.41742268 266.08627319]
[-14.79668617 262.06555176]
[-23.99199295 273.91656494]
[-33.18729782 285.76757812]
[-31.40470314 301.24206543]
[-40.89887238 313.12969971]
[-55.66242981 314.73376465]
[-64.85773468 326.58474731]
[-73.96780396 338.50140381]
[-82.99216461 350.48309326]
[-92.01652527 362.46478271]
[-101.04088593 374.44647217]
[-110.06524658 386.42819214]
[-119.08960724 398.40988159]
[-128.11396790 410.39157104]
[-114.55020142 403.98654175]
[-100.22140503 399.54968262]
[-85.41153717 397.16897583]
[-70.41410828 396.89154053]
[-55.52632141 398.72290039]
[-41.04322815 402.62673950]
[-27.25185585 408.52572632]
[-14.42551613 416.30294800]
[-2.81839967 425.80422974]
[7.33946371 436.84133911]
[15.84676743 449.19552612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[57 207]
[58 206]
[59 205]
[60 204]
[61 203]
[62 202]
[63 201]
[65 200]
[66 199]
[69 196]
[70 195]
[71 194]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 179]
[85 178]
[88 175]
[89 174]
[90 173]
[91 172]
[94 171]
[95 170]
[96 169]
[98 168]
[99 167]
[100 166]
[101 165]
[108 159]
[109 158]
[110 157]
[111 156]
[112 154]
[113 153]
[114 152]
[116 149]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[125 141]
[126 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
