%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LEKR1)
} def

/sequence { (\
AGCCGACUGGCGGCGCGGUCGCCCGGGAGACCGGGAAAGCCGUUUCACACCCGUCCUAGUCGAAGUCGAGAUUUCCUUUGGCUUCAAAGCUCUCUCACCAUAUUUUGGGAAGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.007102690 ubox
1 83 0.014968930 ubox
1 91 0.264666497 ubox
1 93 0.010341790 ubox
1 114 0.050487683 ubox
2 11 0.019998787 ubox
2 14 0.035470884 ubox
2 56 0.007426603 ubox
2 60 0.012920415 ubox
2 66 0.025398280 ubox
2 82 0.017218020 ubox
2 90 0.304876281 ubox
2 92 0.011524930 ubox
2 94 0.004087348 ubox
2 113 0.073740011 ubox
3 10 0.020031550 ubox
3 13 0.035515060 ubox
3 59 0.013382060 ubox
3 65 0.026188076 ubox
3 81 0.017226549 ubox
3 89 0.304366432 ubox
3 108 0.007585019 ubox
3 109 0.013321708 ubox
3 112 0.074841696 ubox
4 9 0.020004485 ubox
4 12 0.035514824 ubox
4 62 0.374090841 ubox
4 80 0.016966249 ubox
4 107 0.007568737 ubox
4 108 0.011458109 ubox
5 11 0.035212206 ubox
5 55 0.030395427 ubox
5 61 0.997427582 ubox
5 114 0.004767978 ubox
6 54 0.030462022 ubox
6 60 0.998362691 ubox
6 113 0.005269295 ubox
7 53 0.030401461 ubox
7 59 0.998581148 ubox
7 112 0.005323497 ubox
8 49 0.003344455 ubox
8 58 0.991082184 ubox
8 111 0.005153723 ubox
9 23 0.004400459 ubox
9 44 0.004063077 ubox
9 48 0.003477884 ubox
9 51 0.030422101 ubox
9 52 0.005656079 ubox
9 55 0.246124304 ubox
9 56 0.351822725 ubox
9 57 0.899763737 ubox
10 22 0.004559461 ubox
10 43 0.007426334 ubox
10 50 0.030441647 ubox
10 51 0.005594256 ubox
10 54 0.273337918 ubox
10 55 0.353679556 ubox
10 56 0.892259604 ubox
11 21 0.004678590 ubox
11 42 0.012573299 ubox
11 53 0.476674036 ubox
12 20 0.004684053 ubox
12 23 0.004589356 ubox
12 41 0.012670854 ubox
12 46 0.041747732 ubox
12 51 0.031064204 ubox
12 52 0.477224328 ubox
12 55 0.875428674 ubox
12 56 0.009802795 ubox
12 61 0.004438402 ubox
12 91 0.003838248 ubox
13 19 0.004668609 ubox
13 22 0.004710071 ubox
13 40 0.012670729 ubox
13 44 0.005380656 ubox
13 45 0.043559914 ubox
13 50 0.040190159 ubox
13 51 0.475411557 ubox
13 54 0.875776083 ubox
13 55 0.010618501 ubox
13 60 0.004454994 ubox
13 90 0.004300324 ubox
14 18 0.004643126 ubox
14 21 0.004876865 ubox
14 39 0.012665515 ubox
14 42 0.007638421 ubox
14 53 0.875991838 ubox
14 59 0.004454805 ubox
14 89 0.004298902 ubox
15 20 0.004588067 ubox
15 22 0.003366406 ubox
15 40 0.009960231 ubox
15 41 0.005648327 ubox
15 43 0.660416569 ubox
15 52 0.742951692 ubox
15 54 0.004770833 ubox
16 21 0.003744291 ubox
16 25 0.005182354 ubox
16 33 0.009346461 ubox
16 39 0.011131070 ubox
16 42 0.924368670 ubox
16 53 0.005082471 ubox
17 24 0.005310880 ubox
17 32 0.009654111 ubox
17 41 0.926272781 ubox
17 46 0.003878750 ubox
17 51 0.375816767 ubox
17 52 0.005452385 ubox
18 23 0.005271509 ubox
18 31 0.009664122 ubox
18 40 0.926111573 ubox
18 45 0.003756314 ubox
18 48 0.009729549 ubox
18 50 0.375739223 ubox
18 51 0.005450514 ubox
19 30 0.009666029 ubox
19 36 0.009292401 ubox
19 39 0.857184097 ubox
19 47 0.010882811 ubox
19 49 0.363454408 ubox
20 25 0.003176776 ubox
20 26 0.005503387 ubox
20 29 0.009672682 ubox
20 35 0.007952553 ubox
20 42 0.163920290 ubox
21 40 0.024783086 ubox
21 41 0.163276504 ubox
21 43 0.006044997 ubox
22 34 0.008963370 ubox
22 35 0.992133342 ubox
22 39 0.021522796 ubox
22 42 0.003861317 ubox
23 33 0.006360949 ubox
23 34 0.999553670 ubox
23 35 0.009845687 ubox
24 33 0.999614999 ubox
24 34 0.008672154 ubox
24 53 0.005997363 ubox
25 32 0.999611153 ubox
25 52 0.006221434 ubox
26 31 0.998962997 ubox
26 32 0.010238630 ubox
26 46 0.004352588 ubox
26 51 0.006246453 ubox
27 31 0.012319533 ubox
27 45 0.004048971 ubox
27 46 0.021146941 ubox
27 50 0.005861515 ubox
28 44 0.003971139 ubox
28 45 0.021420391 ubox
29 44 0.021432179 ubox
29 46 0.004681992 ubox
30 43 0.021414273 ubox
30 45 0.004513079 ubox
31 42 0.015270397 ubox
32 42 0.016531788 ubox
33 41 0.022445164 ubox
34 40 0.022441576 ubox
34 41 0.007632709 ubox
34 46 0.003471937 ubox
35 40 0.008212525 ubox
35 45 0.005211163 ubox
35 46 0.105523047 ubox
36 43 0.009593007 ubox
36 44 0.017482469 ubox
36 45 0.126572265 ubox
37 43 0.017560345 ubox
37 44 0.129480204 ubox
37 45 0.025319847 ubox
38 43 0.123367486 ubox
38 44 0.027070914 ubox
38 45 0.016185596 ubox
39 43 0.019077944 ubox
39 44 0.013987404 ubox
42 48 0.096254299 ubox
42 50 0.022367799 ubox
43 47 0.087061438 ubox
43 49 0.022993546 ubox
47 54 0.016048221 ubox
47 60 0.003754437 ubox
48 53 0.017276139 ubox
48 59 0.004004940 ubox
49 60 0.005601811 ubox
50 59 0.005984526 ubox
50 109 0.003286206 ubox
51 108 0.003299726 ubox
52 107 0.003296211 ubox
53 61 0.003509921 ubox
54 110 0.006103895 ubox
55 109 0.006476531 ubox
56 108 0.006459822 ubox
57 107 0.006421502 ubox
58 83 0.004763505 ubox
58 91 0.020384448 ubox
58 106 0.006060789 ubox
59 82 0.005133468 ubox
59 90 0.022069189 ubox
59 105 0.005586806 ubox
60 81 0.005133448 ubox
60 89 0.021941752 ubox
61 80 0.005142493 ubox
62 75 0.016193190 ubox
62 79 0.006878145 ubox
62 84 0.003814745 ubox
62 85 0.925614225 ubox
63 74 0.016405311 ubox
63 78 0.007347821 ubox
63 83 0.007713341 ubox
63 84 0.980574644 ubox
64 73 0.016404774 ubox
64 77 0.007452632 ubox
64 83 0.992726397 ubox
64 84 0.007232213 ubox
64 95 0.003351382 ubox
65 72 0.015925078 ubox
65 76 0.007409083 ubox
65 82 0.994805434 ubox
65 94 0.003992780 ubox
65 98 0.010690954 ubox
66 71 0.015056917 ubox
66 81 0.994475902 ubox
66 97 0.011957424 ubox
66 110 0.011157500 ubox
67 80 0.994310556 ubox
67 109 0.011902025 ubox
68 75 0.020158064 ubox
68 78 0.218297345 ubox
68 79 0.966046776 ubox
68 92 0.024885415 ubox
68 94 0.060514868 ubox
68 96 0.071168873 ubox
69 74 0.019195025 ubox
69 77 0.311271039 ubox
69 78 0.938154278 ubox
69 79 0.045924301 ubox
69 91 0.024921561 ubox
69 93 0.060786935 ubox
69 95 0.071274122 ubox
70 76 0.379911054 ubox
70 77 0.794533375 ubox
70 78 0.051984919 ubox
70 79 0.019798726 ubox
70 90 0.024904058 ubox
70 92 0.060826806 ubox
70 94 0.071324591 ubox
70 114 0.013746460 ubox
71 77 0.058722309 ubox
71 78 0.025400099 ubox
71 91 0.058999228 ubox
71 93 0.069972850 ubox
71 113 0.015263737 ubox
72 89 0.003333741 ubox
72 112 0.015377863 ubox
73 89 0.003993333 ubox
73 111 0.015446894 ubox
74 110 0.015481900 ubox
75 81 0.003354866 ubox
75 109 0.015476894 ubox
76 80 0.003371275 ubox
76 89 0.096467300 ubox
76 108 0.014391310 ubox
77 88 0.096870720 ubox
77 107 0.013550830 ubox
78 87 0.096925678 ubox
79 86 0.096974876 ubox
80 85 0.096720456 ubox
80 91 0.018588138 ubox
80 92 0.006397558 ubox
81 90 0.022306959 ubox
82 89 0.022326652 ubox
83 88 0.020675844 ubox
85 107 0.003891933 ubox
86 106 0.004083636 ubox
86 114 0.022105268 ubox
87 105 0.004090944 ubox
87 113 0.013992739 ubox
87 114 0.052701271 ubox
88 95 0.012262017 ubox
88 104 0.003967507 ubox
88 113 0.052256590 ubox
88 114 0.639567013 ubox
89 94 0.014341564 ubox
89 113 0.839775615 ubox
90 109 0.012039216 ubox
90 112 0.853666942 ubox
91 108 0.011974543 ubox
91 110 0.135738126 ubox
91 111 0.833902145 ubox
92 107 0.012068826 ubox
92 109 0.181823843 ubox
92 112 0.152080798 ubox
93 108 0.177863053 ubox
93 109 0.037809649 ubox
93 110 0.811263795 ubox
93 111 0.140350166 ubox
94 107 0.177171812 ubox
94 108 0.041635846 ubox
94 109 0.822787665 ubox
94 112 0.356756727 ubox
95 107 0.019265591 ubox
95 108 0.817321192 ubox
95 109 0.008955257 ubox
95 110 0.365255814 ubox
95 111 0.356206171 ubox
96 107 0.818235219 ubox
96 108 0.009277237 ubox
96 109 0.377364038 ubox
97 106 0.797025666 ubox
98 108 0.543691168 ubox
98 109 0.023590268 ubox
99 107 0.544693738 ubox
99 108 0.023391597 ubox
100 106 0.536117387 ubox
101 107 0.003954632 ubox
102 106 0.004843535 ubox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
62 85 0.9500000 lbox
63 84 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
88 114 0.9500000 lbox
89 113 0.9500000 lbox
90 112 0.9500000 lbox
91 111 0.9500000 lbox
93 110 0.9500000 lbox
94 109 0.9500000 lbox
95 108 0.9500000 lbox
96 107 0.9500000 lbox
97 106 0.9500000 lbox
showpage
end
%%EOF
