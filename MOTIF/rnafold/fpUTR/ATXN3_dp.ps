%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATXN3)
} def

/sequence { (\
GAGAGGGGCAGGGGGCGGAGCUGGAGGGGGUGGUUCGGCGUGGGGGCCGUUGGCUCCAGACAAAUAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.011352729 ubox
2 22 0.009465652 ubox
2 55 0.011382981 ubox
3 21 0.010361748 ubox
3 54 0.011323753 ubox
4 22 0.005399759 ubox
4 51 0.008174769 ubox
5 21 0.005913161 ubox
5 50 0.010113538 ubox
5 56 0.032703405 ubox
5 57 0.994915374 ubox
6 55 0.033085459 ubox
6 56 0.995924932 ubox
6 57 0.033381788 ubox
7 22 0.005808067 ubox
7 48 0.012041983 ubox
7 54 0.041807175 ubox
7 55 0.995013171 ubox
7 56 0.033333218 ubox
8 16 0.035063069 ubox
8 21 0.006839426 ubox
8 39 0.004101175 ubox
8 41 0.003745606 ubox
8 47 0.012049197 ubox
8 54 0.996185149 ubox
8 55 0.004433338 ubox
9 15 0.035067363 ubox
9 20 0.006869467 ubox
9 23 0.007024708 ubox
9 38 0.004097447 ubox
9 40 0.003870699 ubox
9 42 0.005214156 ubox
9 46 0.012048455 ubox
9 52 0.089726906 ubox
9 53 0.989467316 ubox
10 22 0.007042286 ubox
10 41 0.004384709 ubox
10 51 0.117572256 ubox
11 21 0.007013154 ubox
11 48 0.006211520 ubox
11 50 0.115128602 ubox
11 51 0.749256441 ubox
11 57 0.003700513 ubox
12 36 0.003240776 ubox
12 47 0.006255315 ubox
12 48 0.025308424 ubox
12 50 0.944620147 ubox
12 51 0.039099056 ubox
12 56 0.003686656 ubox
12 57 0.006978733 ubox
13 35 0.003270140 ubox
13 36 0.005278841 ubox
13 47 0.025267078 ubox
13 48 0.102476937 ubox
13 50 0.035868375 ubox
13 55 0.003659937 ubox
13 56 0.006995158 ubox
14 22 0.004445325 ubox
14 34 0.003267296 ubox
14 35 0.005520521 ubox
14 47 0.093881426 ubox
14 48 0.991325274 ubox
14 51 0.005068082 ubox
14 54 0.003643519 ubox
14 55 0.006995629 ubox
15 21 0.005190084 ubox
15 34 0.005664136 ubox
15 39 0.076163380 ubox
15 41 0.008051552 ubox
15 47 0.992233035 ubox
15 50 0.008161733 ubox
15 54 0.007012528 ubox
16 20 0.005179651 ubox
16 32 0.003252503 ubox
16 33 0.005680053 ubox
16 38 0.076248088 ubox
16 40 0.008182864 ubox
16 42 0.025284209 ubox
16 46 0.992679174 ubox
16 49 0.008334855 ubox
16 52 0.003610798 ubox
16 53 0.007007804 ubox
17 39 0.006394024 ubox
17 41 0.051171657 ubox
17 48 0.008014692 ubox
17 57 0.011563739 ubox
18 36 0.077229940 ubox
18 47 0.007865102 ubox
18 51 0.004924419 ubox
18 56 0.011575886 ubox
19 35 0.077306751 ubox
19 50 0.004529288 ubox
19 55 0.011574221 ubox
20 31 0.006748121 ubox
20 34 0.077289103 ubox
20 39 0.995632618 ubox
20 41 0.023423669 ubox
20 54 0.011575531 ubox
21 28 0.004418806 ubox
21 30 0.007027587 ubox
21 33 0.077320345 ubox
21 38 0.995947165 ubox
21 40 0.021925486 ubox
21 43 0.010399865 ubox
21 53 0.011574411 ubox
21 59 0.027176143 ubox
22 27 0.004385634 ubox
22 29 0.007065339 ubox
22 32 0.076532376 ubox
22 37 0.995074450 ubox
22 40 0.007657979 ubox
22 42 0.010185912 ubox
22 52 0.011382655 ubox
22 58 0.027331976 ubox
22 62 0.011335046 ubox
23 31 0.069212263 ubox
23 36 0.994884879 ubox
23 39 0.014345911 ubox
23 41 0.009019567 ubox
23 51 0.009437846 ubox
23 57 0.027447402 ubox
23 61 0.015012352 ubox
24 34 0.004020946 ubox
24 35 0.992049591 ubox
24 36 0.043031836 ubox
24 50 0.008833133 ubox
24 56 0.027443490 ubox
25 34 0.988007217 ubox
25 35 0.056563800 ubox
25 55 0.027394299 ubox
26 34 0.056945993 ubox
26 35 0.012656929 ubox
26 36 0.017434442 ubox
26 54 0.027261415 ubox
26 57 0.004000299 ubox
27 34 0.023328796 ubox
27 35 0.018508290 ubox
27 36 0.011702510 ubox
27 56 0.003950061 ubox
27 57 0.019538645 ubox
28 34 0.020368379 ubox
28 35 0.012678492 ubox
28 36 0.005710824 ubox
28 55 0.003914174 ubox
28 56 0.019569611 ubox
29 34 0.013951069 ubox
29 35 0.005611787 ubox
29 36 0.004711225 ubox
29 48 0.003312399 ubox
29 51 0.013696675 ubox
29 54 0.003905457 ubox
29 55 0.019611360 ubox
30 34 0.004086758 ubox
30 35 0.004516051 ubox
30 47 0.003323249 ubox
30 50 0.015687690 ubox
30 54 0.019713636 ubox
31 46 0.003287068 ubox
31 49 0.025243044 ubox
31 52 0.003493266 ubox
31 53 0.019689568 ubox
32 48 0.027554078 ubox
32 51 0.003279308 ubox
33 47 0.027563747 ubox
34 46 0.027443822 ubox
35 44 0.003969263 ubox
35 45 0.027266863 ubox
36 43 0.004673779 ubox
36 44 0.027254183 ubox
36 49 0.022861345 ubox
37 48 0.024877762 ubox
38 47 0.024908072 ubox
39 46 0.024941261 ubox
40 47 0.005674546 ubox
40 61 0.051969814 ubox
41 46 0.006299717 ubox
41 58 0.008934925 ubox
41 60 0.051497226 ubox
41 62 0.006253757 ubox
42 48 0.003648669 ubox
42 57 0.009074221 ubox
42 61 0.006941624 ubox
43 47 0.003605105 ubox
43 56 0.007950845 ubox
43 57 0.064608866 ubox
44 55 0.006590187 ubox
44 56 0.064814803 ubox
44 57 0.004803095 ubox
45 54 0.004933817 ubox
45 55 0.064927663 ubox
45 56 0.004788645 ubox
46 54 0.065295088 ubox
47 53 0.065443087 ubox
48 52 0.064967494 ubox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
showpage
end
%%EOF
