%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCCGCCCGGCGACGCGCCCGCCGGCGUCCCCGGAGGUGCCCCCGGCCCGGCCGGGUCGUCGCCCCGCCGCCGCGCCCGCGAGCCGCUUUGUCUCGGGCGGGGCGCGCGGGAGAGGCCGCCAGGUGCCCCCCGCCACGGGCCCGGGCCCCCCGCCCCGGGGCGGCGGCGGCGGCGCCGGGCCCCGGGGCGGGGGGCGCGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[149.82730103 280.05792236]
[152.30874634 260.83575439]
[152.53529358 245.83746338]
[152.76184082 230.83917236]
[152.98838806 215.84088135]
[145.44419861 202.99819946]
[153.38905334 189.31646729]
[153.61560059 174.31817627]
[153.84214783 159.31988525]
[148.41731262 145.33520508]
[138.13589478 134.41310120]
[127.85448456 123.49098206]
[85.91589355 114.59807587]
[71.97258759 120.12837219]
[58.02927780 125.65866852]
[44.08596802 131.18896484]
[30.14265823 136.71925354]
[16.19935036 142.24954224]
[9.37406158 148.32383728]
[2.00345564 147.75631714]
[-12.02178764 153.07539368]
[-26.04703140 158.39447021]
[-40.07227707 163.71353149]
[-54.09751892 169.03260803]
[-68.08219147 174.45744324]
[-82.02550507 179.98774719]
[-95.96881104 185.51803589]
[-109.91211700 191.04832458]
[-111.74620056 199.19743347]
[-116.59751129 205.88143921]
[-123.61544800 210.05477905]
[-131.61843872 211.10118103]
[-139.29266357 208.92370605]
[-145.40773010 203.94865417]
[-159.65951538 208.62698364]
[-173.91130066 213.30531311]
[-188.16307068 217.98364258]
[-195.34266663 223.63475037]
[-202.66555786 222.62322998]
[-216.98637390 227.08578491]
[-230.30952454 237.57054138]
[-244.07273865 227.67053223]
[-238.36967468 211.70458984]
[-221.44891357 212.76496887]
[-207.12811279 208.30242920]
[-192.84140015 203.73185730]
[-178.58961487 199.05352783]
[-164.33784485 194.37519836]
[-150.08605957 189.69686890]
[-137.31211853 172.22607422]
[-115.44241333 177.10502625]
[-101.49910736 171.57472229]
[-87.55579376 166.04443359]
[-73.61248779 160.51414490]
[-68.55267334 155.12469482]
[-59.41659164 155.00737000]
[-45.39134979 149.68829346]
[-31.36610413 144.36921692]
[-17.34086037 139.05014038]
[-3.31561756 133.73107910]
[10.66905689 128.30622864]
[24.61236572 122.77593994]
[38.55567551 117.24565125]
[52.49898148 111.71535492]
[66.44229126 106.18506622]
[80.38559723 100.65476990]
[86.12585449 86.79657745]
[80.17694855 73.02665710]
[74.22805023 59.25674438]
[68.27915192 45.48682785]
[62.33024979 31.71691322]
[56.27753067 17.99231529]
[50.12134171 4.31381702]
[43.96514893 -9.36468029]
[37.80895615 -23.04317856]
[25.08954620 -32.45206451]
[26.92175293 -47.23355103]
[20.76556015 -60.91204834]
[14.60936928 -74.59054565]
[8.45317650 -88.26904297]
[2.29698467 -101.94754028]
[-3.85920739 -115.62603760]
[-16.57861710 -125.03492737]
[-14.74641037 -139.81640625]
[-20.90260124 -153.49490356]
[-36.17550278 -155.67253113]
[-47.83161163 -165.77890015]
[-52.15150833 -180.58911133]
[-47.75672913 -195.37725830]
[-36.04963303 -205.42451477]
[-20.76591110 -207.52484131]
[-6.78254223 -201.00802612]
[1.43843019 -187.95355225]
[1.27372360 -172.52706909]
[-7.22410440 -159.65110779]
[-1.06791246 -145.97261047]
[11.21116638 -137.54209900]
[9.81929016 -121.78223419]
[15.97548294 -108.10373688]
[22.13167381 -94.42523193]
[28.28786659 -80.74673462]
[34.44405746 -67.06823730]
[40.60025024 -53.38974380]
[52.87932968 -44.95923233]
[51.48745346 -29.19936943]
[57.64364624 -15.52087307]
[63.79983902 -1.84237492]
[69.95603180 11.83612251]
[75.56913757 16.64662552]
[76.10016632 25.76801300]
[82.04906464 39.53792953]
[87.99797058 53.30784607]
[93.94686890 67.07775879]
[99.89576721 80.84767914]
[107.22872162 82.42178345]
[117.28808594 71.29483032]
[121.89462280 85.56999969]
[129.22756958 87.14411163]
[140.30372620 77.02883148]
[151.37988281 66.91355133]
[162.45602417 56.79827118]
[159.90370178 43.25157166]
[164.34367371 30.31552887]
[174.51486206 21.33487129]
[187.68928528 18.57557106]
[200.40325928 22.65379906]
[211.63092041 12.70695877]
[222.85858154 2.76011848]
[234.08624268 -7.18672132]
[236.48623657 -23.04924202]
[250.45585632 -30.93781471]
[265.27877808 -24.80100250]
[269.58413696 -9.34644318]
[260.06924438 3.57044935]
[244.03308105 4.04093981]
[232.80541992 13.98777962]
[221.57775879 23.93461990]
[210.35009766 33.88145828]
[212.45733643 50.16033554]
[204.36596680 64.63291168]
[189.09146118 71.49975586]
[172.57130432 67.87442017]
[161.49516296 77.98970032]
[150.41900635 88.10498047]
[139.34284973 98.22026062]
[138.77659607 113.20957184]
[149.05801392 124.13168335]
[159.33941650 135.05380249]
[189.72100830 139.43977356]
[202.55773926 147.19984436]
[215.39445496 154.95989990]
[228.23117065 162.71997070]
[241.06788635 170.48004150]
[253.90461731 178.24011230]
[266.74133301 186.00016785]
[279.57806396 193.76023865]
[292.41476440 201.52030945]
[305.25149536 209.28038025]
[318.08819580 217.04043579]
[330.92492676 224.80050659]
[343.76165771 232.56057739]
[356.59835815 240.32064819]
[369.43508911 248.08071899]
[382.27178955 255.84077454]
[395.10852051 263.60086060]
[407.79727173 261.27755737]
[418.32983398 268.00708008]
[421.35241699 279.72143555]
[434.07046509 287.67449951]
[446.78851318 295.62756348]
[459.50656128 303.58062744]
[472.22463989 311.53369141]
[488.62371826 311.57043457]
[496.55569458 325.92370605]
[487.86080933 339.82803345]
[471.48361206 338.97988892]
[464.27157593 324.25173950]
[451.55352783 316.29867554]
[438.83544922 308.34561157]
[426.11740112 300.39254761]
[413.39935303 292.43951416]
[395.85443115 292.76818848]
[387.34844971 276.43756104]
[374.51174927 268.67749023]
[361.67501831 260.91741943]
[348.83828735 253.15736389]
[336.00158691 245.39729309]
[323.16485596 237.63722229]
[310.32812500 229.87716675]
[297.49142456 222.11709595]
[284.65469360 214.35702515]
[271.81799316 206.59695435]
[258.98126221 198.83689880]
[246.14454651 191.07682800]
[233.30783081 183.31675720]
[220.47109985 175.55668640]
[207.63438416 167.79663086]
[194.79766846 160.03656006]
[181.96095276 152.27648926]
[168.84043884 159.54643250]
[168.61387634 174.54472351]
[168.38732910 189.54301453]
[175.91532898 203.45846558]
[167.98667908 216.06742859]
[167.76013184 231.06571960]
[167.53358459 246.06401062]
[167.30703735 261.06228638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[7 202]
[8 201]
[9 200]
[10 148]
[11 147]
[12 146]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 54]
[26 53]
[27 52]
[28 51]
[34 49]
[35 48]
[36 47]
[37 46]
[39 45]
[40 44]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 108]
[73 107]
[74 106]
[75 105]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[84 96]
[85 95]
[118 145]
[119 144]
[120 143]
[121 142]
[126 138]
[127 137]
[128 136]
[129 135]
[149 199]
[150 198]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
