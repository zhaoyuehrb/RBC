%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXCR6)
} def

/sequence { (\
GCAGACCUUGCUUCAUGAGCAAGCUCAUCUCUGGAACAAACUGGCAAAGCAUCUCUGCUGGUGUUCAUCAGAACAGACACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.053190213 ubox
1 24 0.027770055 ubox
1 45 0.008041018 ubox
1 58 0.049708327 ubox
2 10 0.053279824 ubox
2 23 0.024732488 ubox
2 33 0.063819896 ubox
2 43 0.005635773 ubox
2 44 0.007128754 ubox
2 57 0.049795807 ubox
3 9 0.051835649 ubox
3 25 0.068288562 ubox
3 30 0.035790863 ubox
3 32 0.063925156 ubox
3 42 0.006729162 ubox
3 56 0.049764727 ubox
4 8 0.035170776 ubox
4 24 0.073476702 ubox
4 26 0.961461211 ubox
4 29 0.054317832 ubox
4 31 0.062749955 ubox
4 41 0.006733127 ubox
4 55 0.049679742 ubox
5 25 0.947255557 ubox
5 28 0.052765449 ubox
5 30 0.060849229 ubox
5 54 0.047197970 ubox
6 44 0.003355848 ubox
7 23 0.993966618 ubox
7 43 0.003355107 ubox
7 49 0.006531107 ubox
8 22 0.996652514 ubox
8 39 0.008161191 ubox
8 47 0.005604313 ubox
8 48 0.005349630 ubox
9 21 0.996939087 ubox
9 38 0.008614521 ubox
9 46 0.006986827 ubox
9 47 0.003772161 ubox
9 51 0.040436747 ubox
10 20 0.997524476 ubox
10 24 0.007574177 ubox
10 37 0.008671993 ubox
10 45 0.007969844 ubox
10 50 0.041463727 ubox
11 19 0.997501859 ubox
11 23 0.007582257 ubox
11 44 0.007968229 ubox
11 49 0.041462621 ubox
12 18 0.990122290 ubox
12 19 0.003767138 ubox
12 22 0.007533519 ubox
12 35 0.008531422 ubox
12 36 0.006221534 ubox
12 43 0.007134492 ubox
12 48 0.040783802 ubox
13 17 0.892232114 ubox
13 18 0.021584887 ubox
13 21 0.007049423 ubox
13 34 0.009741181 ubox
13 35 0.008798152 ubox
13 44 0.004181027 ubox
13 47 0.036286113 ubox
13 77 0.006924244 ubox
14 33 0.010439386 ubox
14 34 0.009065544 ubox
14 43 0.005756266 ubox
14 76 0.007479227 ubox
15 28 0.061097798 ubox
15 32 0.009046869 ubox
15 42 0.004660737 ubox
16 27 0.067042865 ubox
17 26 0.068671061 ubox
17 31 0.008820825 ubox
18 25 0.068616014 ubox
18 30 0.008814942 ubox
18 42 0.004482344 ubox
19 24 0.068040886 ubox
19 29 0.008711603 ubox
19 41 0.004511024 ubox
23 45 0.003186567 ubox
23 50 0.012644205 ubox
24 34 0.005468832 ubox
24 44 0.003269808 ubox
24 49 0.013084644 ubox
24 76 0.076380450 ubox
25 33 0.003255293 ubox
25 34 0.011213866 ubox
25 35 0.007134139 ubox
25 48 0.012623060 ubox
25 75 0.074978833 ubox
25 77 0.106586450 ubox
26 33 0.015027592 ubox
26 34 0.007370814 ubox
26 43 0.003250488 ubox
26 76 0.116435823 ubox
27 32 0.013242731 ubox
28 35 0.014004868 ubox
28 72 0.258454275 ubox
28 77 0.270628259 ubox
29 33 0.005035998 ubox
29 34 0.015108590 ubox
29 43 0.003990305 ubox
29 44 0.004549590 ubox
29 49 0.004832231 ubox
29 71 0.275125322 ubox
29 76 0.296027983 ubox
30 43 0.003927638 ubox
30 44 0.005519469 ubox
30 48 0.004831114 ubox
30 70 0.266716119 ubox
30 72 0.879939646 ubox
30 75 0.182411578 ubox
30 77 0.142716517 ubox
31 43 0.007539954 ubox
31 44 0.040083140 ubox
31 71 0.939495030 ubox
31 76 0.154371545 ubox
32 38 0.008084675 ubox
32 43 0.040671334 ubox
32 46 0.009097030 ubox
32 67 0.032296965 ubox
32 70 0.938826386 ubox
32 75 0.154231510 ubox
32 79 0.007743955 ubox
33 37 0.008666528 ubox
33 42 0.042054030 ubox
33 45 0.009739782 ubox
33 66 0.028389536 ubox
33 69 0.929837383 ubox
33 74 0.153389751 ubox
33 78 0.008724207 ubox
33 81 0.009460224 ubox
34 41 0.042183376 ubox
34 65 0.021394231 ubox
34 66 0.906614230 ubox
34 68 0.368855361 ubox
34 69 0.031653908 ubox
34 80 0.009562624 ubox
35 64 0.016146507 ubox
35 65 0.929587094 ubox
35 68 0.037740646 ubox
36 64 0.933696342 ubox
37 43 0.010720623 ubox
37 63 0.930914446 ubox
38 42 0.008712539 ubox
38 62 0.615417332 ubox
38 65 0.035139172 ubox
39 64 0.032592030 ubox
39 65 0.008557156 ubox
40 62 0.743520644 ubox
40 64 0.008001864 ubox
41 49 0.007606812 ubox
41 61 0.989516982 ubox
41 63 0.007696707 ubox
41 71 0.025753066 ubox
42 48 0.007639286 ubox
42 51 0.009006938 ubox
42 60 0.988876194 ubox
42 67 0.011220224 ubox
42 70 0.025853599 ubox
43 50 0.009956048 ubox
43 59 0.993148188 ubox
43 62 0.003636694 ubox
43 65 0.012742626 ubox
43 66 0.011418965 ubox
43 69 0.025840775 ubox
44 50 0.012148037 ubox
44 58 0.997312511 ubox
44 62 0.012542488 ubox
44 64 0.017364707 ubox
44 65 0.008209696 ubox
44 68 0.023154382 ubox
45 49 0.012155785 ubox
45 57 0.997272437 ubox
45 60 0.004502523 ubox
45 61 0.014697174 ubox
45 63 0.019135353 ubox
46 56 0.970092796 ubox
46 62 0.018568408 ubox
47 65 0.004159518 ubox
48 54 0.849009194 ubox
48 56 0.056923108 ubox
48 59 0.045332714 ubox
48 65 0.022211641 ubox
49 53 0.846078415 ubox
49 55 0.082817811 ubox
49 58 0.046206493 ubox
49 64 0.025726708 ubox
50 57 0.046250802 ubox
50 63 0.026033670 ubox
51 56 0.040396002 ubox
51 62 0.026038114 ubox
52 61 0.026021891 ubox
53 60 0.025994336 ubox
54 77 0.004125629 ubox
55 76 0.004466325 ubox
56 75 0.004462293 ubox
57 74 0.004411837 ubox
58 71 0.004845416 ubox
59 70 0.004982998 ubox
59 79 0.016649013 ubox
60 69 0.005031807 ubox
60 78 0.019235752 ubox
60 81 0.047925551 ubox
61 68 0.004869149 ubox
61 78 0.004382041 ubox
61 80 0.048506498 ubox
62 67 0.004641351 ubox
62 75 0.040409333 ubox
62 79 0.048007024 ubox
63 74 0.076125758 ubox
63 78 0.047487465 ubox
64 73 0.077430075 ubox
64 77 0.044695822 ubox
65 72 0.079092414 ubox
65 76 0.038823979 ubox
65 77 0.013304288 ubox
66 71 0.079504913 ubox
66 76 0.018784128 ubox
68 77 0.028756373 ubox
69 76 0.031563795 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
30 72 0.9500000 lbox
31 71 0.9500000 lbox
32 70 0.9500000 lbox
33 69 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
