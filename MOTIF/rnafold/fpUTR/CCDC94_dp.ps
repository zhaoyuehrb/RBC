%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC94)
} def

/sequence { (\
GGCUUCCGUCGGAAAAGCUCGAUAAUUACCCAGCCUAACCAUUUCUCAGGUGCUUGCGAGGUGAUCAGAAGGCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.126585413 ubox
1 10 0.331325791 ubox
1 19 0.276860609 ubox
1 20 0.174022239 ubox
1 30 0.084395840 ubox
1 31 0.099137202 ubox
1 35 0.025103080 ubox
1 66 0.012532057 ubox
2 6 0.124635519 ubox
2 9 0.332174685 ubox
2 18 0.383501814 ubox
2 19 0.020260328 ubox
2 29 0.084904523 ubox
2 30 0.098706407 ubox
2 34 0.025158075 ubox
2 65 0.003827716 ubox
2 73 0.596273381 ubox
3 8 0.331915768 ubox
3 12 0.022175335 ubox
3 17 0.384131223 ubox
3 33 0.025155395 ubox
3 61 0.003251817 ubox
3 68 0.011509176 ubox
3 71 0.428537355 ubox
3 72 0.541399437 ubox
3 77 0.037006307 ubox
4 11 0.021013405 ubox
4 13 0.040288831 ubox
4 14 0.424431156 ubox
4 15 0.046880242 ubox
4 16 0.331313255 ubox
4 25 0.015397661 ubox
4 32 0.024083831 ubox
4 60 0.003242997 ubox
4 67 0.010823176 ubox
4 68 0.003788889 ubox
4 69 0.008659271 ubox
4 70 0.497448955 ubox
4 71 0.470618371 ubox
4 75 0.030412673 ubox
4 76 0.036894376 ubox
5 11 0.003242776 ubox
5 12 0.043874038 ubox
5 13 0.556173912 ubox
5 14 0.044676504 ubox
5 15 0.143832671 ubox
5 24 0.020118296 ubox
5 59 0.003241138 ubox
5 67 0.006968183 ubox
5 68 0.012715754 ubox
5 69 0.536519007 ubox
5 70 0.376443647 ubox
5 71 0.009373025 ubox
5 72 0.005831857 ubox
5 74 0.033815010 ubox
5 75 0.030952594 ubox
5 76 0.003563235 ubox
6 11 0.046454929 ubox
6 12 0.581292420 ubox
6 58 0.003211924 ubox
6 68 0.571110676 ubox
6 71 0.010353940 ubox
6 72 0.064995438 ubox
7 11 0.577199608 ubox
7 21 0.022334333 ubox
7 63 0.003252581 ubox
7 71 0.065736999 ubox
8 18 0.012160667 ubox
8 20 0.022370230 ubox
8 23 0.694760028 ubox
8 29 0.004038425 ubox
8 65 0.007794056 ubox
8 73 0.014375132 ubox
9 17 0.011963382 ubox
9 22 0.720122809 ubox
9 64 0.007451053 ubox
9 69 0.028684066 ubox
9 72 0.014239162 ubox
10 21 0.725012531 ubox
10 63 0.007178663 ubox
10 68 0.029278582 ubox
10 71 0.013839771 ubox
11 19 0.033763297 ubox
11 20 0.722702561 ubox
11 30 0.005074648 ubox
11 31 0.008095002 ubox
11 62 0.004071906 ubox
11 66 0.006430816 ubox
12 18 0.179870999 ubox
12 19 0.595948166 ubox
12 20 0.052494963 ubox
12 29 0.005082961 ubox
12 30 0.008083394 ubox
12 65 0.004384953 ubox
12 66 0.024953945 ubox
13 19 0.067607502 ubox
13 65 0.023744551 ubox
15 27 0.004756935 ubox
16 26 0.004797329 ubox
17 62 0.005581063 ubox
17 73 0.558521133 ubox
18 60 0.022744701 ubox
18 61 0.004195491 ubox
18 68 0.028281195 ubox
18 71 0.052100109 ubox
18 72 0.557890870 ubox
19 59 0.023082386 ubox
19 67 0.028827263 ubox
19 69 0.170007164 ubox
19 70 0.048639352 ubox
19 71 0.504325131 ubox
19 72 0.054163923 ubox
20 58 0.023162809 ubox
20 68 0.210366598 ubox
20 71 0.188215055 ubox
21 27 0.004483324 ubox
21 57 0.023133795 ubox
21 66 0.149760107 ubox
22 26 0.004066372 ubox
22 65 0.139334927 ubox
23 56 0.020992903 ubox
23 64 0.090866615 ubox
24 55 0.021049410 ubox
25 54 0.020173030 ubox
25 62 0.003710599 ubox
25 65 0.900510536 ubox
26 64 0.964255273 ubox
26 75 0.003305472 ubox
27 52 0.020423368 ubox
27 63 0.978594322 ubox
27 74 0.003670184 ubox
28 51 0.021103522 ubox
28 62 0.980455710 ubox
29 50 0.021087796 ubox
29 61 0.980822009 ubox
29 72 0.003864793 ubox
30 49 0.021003635 ubox
30 60 0.979955835 ubox
30 61 0.023416410 ubox
30 71 0.003861689 ubox
30 72 0.004425825 ubox
31 52 0.003651987 ubox
31 56 0.063733396 ubox
31 60 0.031960050 ubox
31 71 0.004473404 ubox
32 46 0.009369837 ubox
32 54 0.055672463 ubox
32 55 0.047818104 ubox
33 45 0.009560146 ubox
33 51 0.012832868 ubox
33 53 0.070546737 ubox
33 54 0.019588518 ubox
33 57 0.977465189 ubox
33 73 0.189178031 ubox
34 50 0.013826663 ubox
34 52 0.070759133 ubox
34 56 0.976325105 ubox
34 72 0.189375370 ubox
35 49 0.014048741 ubox
35 50 0.010630450 ubox
35 68 0.009728775 ubox
35 71 0.189266300 ubox
36 48 0.013581041 ubox
36 49 0.010335421 ubox
36 52 0.086950019 ubox
36 56 0.009591052 ubox
36 67 0.013597465 ubox
36 70 0.182301304 ubox
37 43 0.004953004 ubox
37 44 0.004093649 ubox
37 51 0.062741877 ubox
37 55 0.058943912 ubox
38 42 0.003886389 ubox
38 43 0.003469053 ubox
38 51 0.969998109 ubox
38 54 0.063255501 ubox
38 62 0.005510084 ubox
39 50 0.977276350 ubox
39 61 0.005678054 ubox
40 49 0.977094704 ubox
40 52 0.086290207 ubox
40 60 0.005638727 ubox
40 63 0.188072602 ubox
41 51 0.086441028 ubox
41 62 0.188740570 ubox
41 65 0.017841349 ubox
42 49 0.005958487 ubox
42 50 0.086026049 ubox
42 61 0.188590070 ubox
42 64 0.018786175 ubox
43 48 0.020702913 ubox
43 49 0.081313519 ubox
43 50 0.003615334 ubox
43 60 0.188045117 ubox
43 63 0.017701545 ubox
43 70 0.004421681 ubox
44 48 0.063062702 ubox
44 49 0.003999599 ubox
44 59 0.188800208 ubox
44 61 0.021627832 ubox
44 64 0.003806922 ubox
44 69 0.007703104 ubox
45 49 0.003813832 ubox
45 58 0.188754712 ubox
45 60 0.024410921 ubox
45 61 0.006114356 ubox
45 63 0.003855850 ubox
45 68 0.007748592 ubox
46 59 0.024470862 ubox
46 60 0.004086273 ubox
46 61 0.005149264 ubox
46 67 0.007285756 ubox
46 69 0.005093907 ubox
47 56 0.188139679 ubox
47 58 0.024339249 ubox
47 60 0.006771066 ubox
47 68 0.005130176 ubox
48 54 0.019378504 ubox
48 55 0.182852924 ubox
49 53 0.026185158 ubox
49 54 0.147601421 ubox
49 55 0.006445466 ubox
49 66 0.007977097 ubox
50 54 0.005585966 ubox
50 57 0.016008263 ubox
50 65 0.008059686 ubox
51 56 0.015410945 ubox
51 63 0.004289015 ubox
51 64 0.007970685 ubox
51 74 0.007502353 ubox
52 62 0.011532581 ubox
52 73 0.014205270 ubox
53 61 0.011865430 ubox
53 71 0.003449327 ubox
53 72 0.014037283 ubox
54 60 0.011656812 ubox
54 64 0.003252268 ubox
54 70 0.004165869 ubox
54 71 0.013807839 ubox
54 75 0.005698707 ubox
55 59 0.008897802 ubox
55 63 0.003408264 ubox
55 69 0.004650658 ubox
55 70 0.013352742 ubox
55 74 0.006835290 ubox
56 62 0.003571636 ubox
56 73 0.007084496 ubox
57 61 0.003567856 ubox
57 72 0.007083573 ubox
58 66 0.014634322 ubox
59 65 0.014518595 ubox
63 73 0.004572699 ubox
65 72 0.018771603 ubox
66 71 0.049684534 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
7 11 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
showpage
end
%%EOF
