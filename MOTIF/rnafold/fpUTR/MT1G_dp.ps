%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MT1G)
} def

/sequence { (\
ACUCCGCCUUCCACGUGCACCCACUGCCUCUUCCCUUCUCGCUUGGGAACUCUAGUCUCGCCUCGGGUUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.054342714 ubox
1 68 0.009268983 ubox
2 15 0.062091157 ubox
2 67 0.010601831 ubox
3 66 0.006894528 ubox
3 67 0.010529490 ubox
4 65 0.006764727 ubox
4 66 0.015595410 ubox
5 15 0.273781125 ubox
5 17 0.035154324 ubox
5 65 0.015616685 ubox
5 70 0.010646234 ubox
6 14 0.277307226 ubox
6 16 0.108895562 ubox
6 18 0.020811743 ubox
6 61 0.006427562 ubox
6 64 0.014853731 ubox
6 68 0.026834847 ubox
6 69 0.008106689 ubox
6 71 0.233218439 ubox
7 15 0.116610146 ubox
7 17 0.020794987 ubox
7 60 0.006533986 ubox
7 67 0.028611188 ubox
7 70 0.232811921 ubox
8 66 0.028555422 ubox
8 67 0.005268690 ubox
9 48 0.003171072 ubox
9 65 0.023816730 ubox
9 66 0.004838953 ubox
9 67 0.004657557 ubox
10 47 0.004195379 ubox
10 65 0.003414945 ubox
10 66 0.004852792 ubox
10 67 0.065678472 ubox
11 46 0.004592227 ubox
11 65 0.005386200 ubox
11 66 0.071353230 ubox
11 67 0.225897528 ubox
12 26 0.012805377 ubox
12 45 0.004599480 ubox
12 65 0.070840397 ubox
12 66 0.226064595 ubox
12 70 0.005628243 ubox
13 25 0.012910252 ubox
13 44 0.004550534 ubox
13 56 0.004383562 ubox
13 68 0.003437125 ubox
13 69 0.005531818 ubox
14 26 0.004805710 ubox
14 55 0.004531315 ubox
14 60 0.009094747 ubox
14 65 0.221761596 ubox
14 67 0.003742957 ubox
14 70 0.007935982 ubox
15 24 0.024860083 ubox
15 42 0.004379798 ubox
15 59 0.008947287 ubox
15 61 0.042677593 ubox
15 64 0.222862759 ubox
15 69 0.007721995 ubox
15 71 0.088553530 ubox
16 23 0.024904799 ubox
16 41 0.004366551 ubox
16 60 0.042813371 ubox
16 65 0.003534355 ubox
16 70 0.088124578 ubox
16 72 0.753198994 ubox
17 22 0.024658869 ubox
17 27 0.022653731 ubox
17 40 0.003315994 ubox
17 59 0.042292805 ubox
17 61 0.226074342 ubox
17 69 0.079392179 ubox
17 71 0.964080323 ubox
18 26 0.022775067 ubox
18 60 0.225937120 ubox
18 70 0.964573873 ubox
19 25 0.021081677 ubox
19 56 0.003261087 ubox
19 68 0.685687341 ubox
19 69 0.682065902 ubox
20 47 0.021258065 ubox
20 66 0.007737857 ubox
20 67 0.967198113 ubox
21 46 0.021364380 ubox
21 65 0.007897309 ubox
21 66 0.967310235 ubox
21 67 0.068363217 ubox
22 45 0.021363760 ubox
22 65 0.966328733 ubox
22 66 0.068381275 ubox
23 44 0.021043838 ubox
23 56 0.764945916 ubox
24 55 0.773019851 ubox
25 54 0.769641423 ubox
25 60 0.063101954 ubox
25 72 0.006885985 ubox
26 42 0.023945977 ubox
26 53 0.726261528 ubox
26 56 0.028893549 ubox
26 59 0.068118748 ubox
26 61 0.612999238 ubox
26 64 0.007271675 ubox
26 68 0.006572638 ubox
26 71 0.009051091 ubox
27 41 0.023921022 ubox
27 55 0.030252366 ubox
27 60 0.612982076 ubox
27 67 0.006666826 ubox
27 70 0.009026745 ubox
28 47 0.004089492 ubox
28 55 0.259242815 ubox
28 66 0.006658104 ubox
29 46 0.004091713 ubox
29 48 0.003404748 ubox
29 54 0.249434383 ubox
29 65 0.005787740 ubox
30 45 0.004312293 ubox
30 55 0.463855960 ubox
31 48 0.028675254 ubox
31 49 0.824992535 ubox
31 54 0.430252103 ubox
31 55 0.031777898 ubox
32 47 0.016993200 ubox
32 48 0.935255575 ubox
32 54 0.025921994 ubox
33 46 0.017103238 ubox
33 47 0.939040063 ubox
33 67 0.003428205 ubox
34 45 0.016915979 ubox
34 46 0.938983253 ubox
34 47 0.026956091 ubox
34 66 0.003441814 ubox
35 45 0.938567888 ubox
35 46 0.029917678 ubox
35 55 0.008238391 ubox
35 65 0.003434265 ubox
36 45 0.032370109 ubox
36 47 0.004267690 ubox
36 48 0.011871343 ubox
36 49 0.313719100 ubox
36 54 0.007204482 ubox
37 46 0.005444334 ubox
37 47 0.011661038 ubox
37 48 0.339104341 ubox
38 45 0.012469017 ubox
38 46 0.011850342 ubox
38 47 0.340352029 ubox
39 45 0.010495120 ubox
39 46 0.339108494 ubox
39 47 0.004682072 ubox
39 48 0.013245663 ubox
40 45 0.336906510 ubox
40 46 0.023722500 ubox
40 47 0.013589782 ubox
41 56 0.004970347 ubox
41 61 0.004502068 ubox
42 55 0.005098019 ubox
42 60 0.004460339 ubox
43 54 0.004218125 ubox
44 54 0.004158119 ubox
44 60 0.008532698 ubox
45 53 0.005008426 ubox
45 59 0.016435221 ubox
45 62 0.004154402 ubox
46 52 0.005070322 ubox
46 58 0.016564002 ubox
46 61 0.004158940 ubox
47 51 0.003288076 ubox
47 57 0.016815877 ubox
47 59 0.006590172 ubox
48 56 0.014567732 ubox
48 58 0.007156944 ubox
48 69 0.022274349 ubox
49 56 0.084460961 ubox
49 68 0.028747571 ubox
50 55 0.099917030 ubox
50 67 0.030600224 ubox
51 66 0.030553445 ubox
52 65 0.031086000 ubox
53 70 0.006049784 ubox
54 63 0.065558847 ubox
54 69 0.007403862 ubox
55 61 0.057420802 ubox
55 62 0.069194108 ubox
55 68 0.007587905 ubox
55 71 0.008041970 ubox
56 60 0.054374941 ubox
56 70 0.007789182 ubox
57 65 0.006336754 ubox
57 66 0.003487217 ubox
57 67 0.021735953 ubox
58 66 0.022040868 ubox
59 65 0.033164903 ubox
59 66 0.003497417 ubox
60 64 0.052327305 ubox
60 68 0.010204167 ubox
60 71 0.003576501 ubox
61 67 0.010637662 ubox
61 70 0.003575195 ubox
62 66 0.010567854 ubox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
19 69 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
showpage
end
%%EOF
