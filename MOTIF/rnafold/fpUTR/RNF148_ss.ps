%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACCAAUCACAAGUCUUGUUAUUUUGUUUCAUUAUGAGAAAGAUAAUCUACUAAAUAUUAAAAUACUGGAAGGAGCAAGAUAGCUUUGAUCCAGGGAGACCUUUUCCAUUUAUGUGCUUUAGUAAUCUGCCGCCAACAAGCUAUCUUCUUUAUGUUCUUCUACAACUGAUGUUGUUUUGUUUUCUCAUGUUUGUCUCUUAAUAGACAAAUGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[80.74428558 171.08964539]
[87.86849213 184.28985596]
[86.73609924 199.24705505]
[77.70574951 211.22422791]
[63.63737869 216.42817688]
[48.98649979 213.21076965]
[38.39309692 202.59098816]
[35.21214294 187.93214417]
[40.45105743 173.87677002]
[52.45022202 164.87638855]
[58.98988724 151.37702942]
[65.52955627 137.87767029]
[58.20409775 136.26902771]
[45.99306107 144.98056030]
[33.78202820 153.69207764]
[33.10481644 167.14093018]
[24.92621994 177.59266663]
[12.40724087 181.37117004]
[0.18128723 177.31193542]
[-12.15401745 185.84658813]
[-24.48932266 194.38122559]
[-36.82462692 202.91587830]
[-49.15993118 211.45053101]
[-61.49523544 219.98518372]
[-73.83054352 228.51983643]
[-86.16584778 237.05448914]
[-91.43889618 244.50668335]
[-98.74096680 245.62173462]
[-111.19798279 253.97775269]
[-123.65499115 262.33374023]
[-136.11199951 270.68975830]
[-148.56901550 279.04577637]
[-158.35469055 292.89050293]
[-174.36730957 287.31988525]
[-173.44712830 270.39093018]
[-156.92501831 266.58874512]
[-144.46801758 258.23275757]
[-132.01100159 249.87673950]
[-119.55398560 241.52073669]
[-107.09697723 233.16473389]
[-94.70049286 224.71917725]
[-82.36518860 216.18452454]
[-70.02988434 207.64988708]
[-57.69458008 199.11523438]
[-45.35927582 190.58058167]
[-33.02397156 182.04592896]
[-20.68866730 173.51127625]
[-8.35336304 164.97662354]
[-6.04806900 148.31518555]
[7.86979723 138.28070068]
[25.07050514 141.48104858]
[37.28153992 132.76951599]
[49.49257660 124.05799866]
[34.60380936 122.23464966]
[20.94532776 116.03417969]
[9.77206612 106.02626801]
[2.11061835 93.13044739]
[-1.33508682 78.53157043]
[-0.24845996 63.57098389]
[5.27066040 49.62324905]
[14.71518040 37.96987915]
[27.21734238 29.68157578]
[41.62845612 25.51986885]
[56.62443542 25.86713219]
[70.82746124 30.69145775]
[82.93256378 39.54958725]
[91.82752991 51.62764740]
[96.69510651 65.81591034]
[97.08766937 80.81378937]
[99.88140106 66.07625580]
[102.67513275 51.33871460]
[105.46886444 36.60117340]
[108.26259613 21.86363602]
[106.78658295 12.85466194]
[111.20423126 6.93452358]
[114.21004486 -7.76122665]
[117.21586609 -22.45697594]
[120.22167969 -37.15272522]
[122.58954620 -51.96465683]
[124.31503296 -66.86508179]
[126.04051971 -81.76550293]
[127.76601410 -96.66593170]
[129.49150085 -111.56636047]
[131.21699524 -126.46678162]
[132.94247437 -141.36720276]
[134.66796875 -156.26763916]
[136.39346313 -171.16806030]
[123.75437927 -177.72764587]
[114.13304138 -188.18492126]
[108.66977692 -201.27038574]
[108.00179291 -215.40490723]
[112.18894196 -228.89024353]
[120.70896912 -240.11314392]
[132.52256775 -247.73826599]
[146.20008850 -250.86714172]
[148.14012146 -265.74114990]
[142.25265503 -280.42611694]
[151.57106018 -292.04577637]
[153.51109314 -306.91979980]
[155.45112610 -321.79382324]
[146.88551331 -340.04565430]
[159.30566406 -354.86938477]
[160.81625366 -369.79312134]
[148.46792603 -378.81900024]
[142.33581543 -392.72201538]
[143.97517395 -407.72796631]
[152.84617615 -419.81768799]
[166.48564148 -425.80355835]
[167.99623108 -440.72729492]
[169.50682068 -455.65103149]
[162.28936768 -470.37652588]
[171.65667725 -483.83706665]
[187.97245789 -482.18557739]
[194.45243835 -467.12097168]
[184.43057251 -454.14044189]
[182.91998291 -439.21670532]
[181.40939331 -424.29296875]
[193.57272339 -415.69534302]
[199.84115601 -402.07321167]
[198.44024658 -387.04309082]
[189.64653015 -374.65087891]
[175.73999023 -368.28256226]
[174.22940063 -353.35879517]
[181.37248230 -346.06091309]
[183.36401367 -335.82141113]
[179.31021118 -325.97213745]
[170.32513428 -319.85379028]
[168.38510132 -304.97976685]
[166.44506836 -290.10574341]
[172.47129822 -276.48468018]
[163.01412964 -263.80111694]
[161.07409668 -248.92710876]
[174.92921448 -241.23049927]
[184.79309082 -228.77540588]
[189.13159180 -213.45127869]
[187.25172424 -197.59735107]
[179.41201782 -183.64555359]
[166.78756714 -173.74748230]
[151.29388428 -169.44256592]
[149.56838989 -154.54214478]
[147.84291077 -139.64172363]
[146.11741638 -124.74129486]
[144.39192200 -109.84086609]
[142.66644287 -94.94044495]
[140.94094849 -80.04001617]
[139.21545410 -65.13959503]
[137.48997498 -50.23916626]
[149.86868286 -58.71072769]
[164.63606262 -56.07926178]
[173.32659912 -43.85327530]
[170.95837402 -29.04140472]
[158.88899231 -20.13465881]
[144.03732300 -22.23889351]
[134.91743469 -34.14691162]
[131.91162109 -19.45116043]
[128.90579224 -4.75541067]
[125.89998627 9.94033909]
[123.00013733 24.65736580]
[120.20640564 39.39490509]
[117.41267395 54.13244629]
[114.61894226 68.86998749]
[111.82521057 83.60752106]
[120.35986328 95.94282532]
[135.13612366 98.52389526]
[149.91239929 101.10495758]
[164.68865967 103.68602753]
[179.46493530 106.26708984]
[194.67182922 100.12849426]
[207.42304993 110.44055176]
[204.60122681 126.59509277]
[189.10922241 131.97372437]
[176.88386536 121.04335785]
[162.10760498 118.46229553]
[147.33132935 115.88122559]
[132.55506897 113.30016327]
[117.77879333 110.71909332]
[113.46714020 116.85584259]
[125.74063110 125.47914886]
[140.07810974 129.88786316]
[140.31550598 144.88598633]
[126.12474060 149.74626160]
[117.11731720 137.75263977]
[104.84382629 129.12933350]
[100.53217316 135.26606750]
[107.96968842 148.29232788]
[115.40719604 161.31858826]
[122.84471130 174.34484863]
[135.05578613 178.48782349]
[140.98326111 189.48623657]
[137.93086243 201.18795776]
[145.17988586 214.32003784]
[152.42890930 227.45213318]
[159.67793274 240.58421326]
[166.92695618 253.71629333]
[174.17597961 266.84838867]
[181.42501831 279.98046875]
[188.67404175 293.11254883]
[203.92599487 297.25421143]
[211.70956421 311.00888062]
[207.40689087 326.21621704]
[193.57067871 333.85391235]
[178.40969849 329.39071655]
[170.91870117 315.47451782]
[175.54194641 300.36157227]
[168.29292297 287.22949219]
[161.04389954 274.09741211]
[153.79487610 260.96533203]
[146.54585266 247.83323669]
[139.29682922 234.70115662]
[132.04780579 221.56906128]
[124.79877472 208.43698120]
[109.30486298 200.19177246]
[109.81845093 181.78236389]
[102.38094330 168.75610352]
[94.94342804 155.72984314]
[87.50591278 142.70358276]
[80.18045807 141.09494019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 53]
[14 52]
[15 51]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[95 132]
[96 131]
[98 129]
[99 128]
[100 127]
[102 123]
[103 122]
[108 117]
[109 116]
[110 115]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
[184 216]
[185 215]
[186 214]
[187 213]
[190 211]
[191 210]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
