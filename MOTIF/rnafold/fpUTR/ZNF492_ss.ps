%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUGUCUCUCGCUGCAGUCGGAGUAUGGUCUAGUGUUCGCUGUUCUGCGUCCUCUGGUCCUAGAGGCCCAUCCUCUGUGGCCCUGUGACCUGCAGGUAUUGGGAGAUCCACAGCUAAGACGCUAGGACCCCCUGGAAGCCUAGAAACGGGAGUGUUGACAUUUAGGGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAAUGCCUGGACACCGCACAGCAGAAUUUAUAUAGGAAUGUG\
) } def
/len { sequence length } bind def

/coor [
[267.45803833 521.21392822]
[261.82904053 507.31018066]
[256.20004272 493.40643311]
[250.57102966 479.50268555]
[244.49928284 465.78649902]
[237.99102783 452.27194214]
[231.48277283 438.75741577]
[224.97451782 425.24288940]
[218.46626282 411.72836304]
[205.97303772 403.61856079]
[206.95643616 387.82794189]
[200.44816589 374.31341553]
[193.93991089 360.79888916]
[188.21905518 356.14672852]
[187.43609619 347.06909180]
[181.10166931 333.47219849]
[168.71345520 325.20288086]
[169.89924622 309.42617798]
[163.56481934 295.82931519]
[157.23039246 282.23245239]
[143.19151306 277.39038086]
[136.57380676 263.69143677]
[141.74780273 248.99900818]
[135.41336060 235.40214539]
[129.07893372 221.80526733]
[122.74450684 208.20838928]
[116.41007233 194.61152649]
[109.81529999 181.13899231]
[102.96263885 167.79579163]
[96.10997009 154.45259094]
[89.25730133 141.10939026]
[82.40463257 127.76619720]
[71.90052795 117.05808258]
[58.69159317 109.95005035]
[45.48266220 102.84201813]
[32.27372742 95.73399353]
[19.06479454 88.62596130]
[5.85586214 81.51792908]
[-7.35307074 74.40990448]
[-20.56200409 67.30187225]
[-40.67996597 68.79216003]
[-50.07837677 51.87891388]
[-63.46523666 45.11193466]
[-76.85209656 38.34495926]
[-90.23895264 31.57798004]
[-103.62581635 24.81100273]
[-117.22268677 18.47657013]
[-131.01560974 12.58119583]
[-144.80851746 6.68582010]
[-159.32757568 12.32806778]
[-173.23156738 6.15283298]
[-178.52111816 -7.72363281]
[-192.31402588 -13.61900806]
[-206.14445496 -19.42583084]
[-220.01184082 -25.14386368]
[-233.87921143 -30.86189461]
[-249.91690063 -23.84843254]
[-265.74871826 -30.48371315]
[-271.75204468 -46.20441055]
[-285.69161987 -51.74415588]
[-299.63116455 -57.28390503]
[-313.57070923 -62.82365036]
[-329.25277710 -60.72998047]
[-338.22277832 -72.62067413]
[-352.16232300 -78.16042328]
[-366.10189819 -83.70017242]
[-375.20956421 -83.95831299]
[-380.18392944 -89.40135193]
[-394.05130005 -95.11938477]
[-407.91867065 -100.83741760]
[-421.78604126 -106.55545044]
[-435.68978882 -112.18445587]
[-449.62936401 -117.72419739]
[-464.87115479 -112.71752930]
[-478.20913696 -121.63259888]
[-479.41149902 -137.63053894]
[-467.55590820 -148.43908691]
[-451.73696899 -145.76686096]
[-444.08959961 -131.66375732]
[-430.15005493 -126.12400818]
[-422.79010010 -126.57344055]
[-416.06802368 -120.42282104]
[-402.20065308 -114.70479584]
[-388.33325195 -108.98676300]
[-374.46588135 -103.26873016]
[-360.56213379 -97.63972473]
[-346.62258911 -92.09997559]
[-332.68301392 -86.56022644]
[-317.99801636 -89.05014038]
[-308.03097534 -76.76320648]
[-294.09143066 -71.22345734]
[-280.15185547 -65.68371582]
[-266.21231079 -60.14396667]
[-255.22332764 -66.84724426]
[-242.18478394 -65.99151611]
[-231.86337280 -57.66542816]
[-228.16117859 -44.72927094]
[-214.29380798 -39.01123810]
[-200.42642212 -33.29320908]
[-193.06130981 -33.64823151]
[-186.41865540 -27.41192436]
[-172.62573242 -21.51655006]
[-158.94049072 -27.28280067]
[-144.86853027 -21.50053787]
[-138.91314697 -7.10709667]
[-125.12023163 -1.21172118]
[-111.32730865 4.68365431]
[-114.53115082 -9.97019863]
[-105.17444611 -21.69419098]
[-90.17497253 -21.82030678]
[-80.62245178 -10.25530529]
[-83.57942963 4.45034885]
[-96.85883331 11.42414284]
[-83.47197723 18.19112015]
[-70.08511353 24.95809937]
[-56.69825745 31.72507668]
[-43.31139755 38.49205399]
[-33.95642090 34.45044708]
[-23.70339203 36.25125504]
[-15.96607685 43.53925705]
[-13.45397377 54.09293747]
[-0.24504068 61.20096970]
[12.96389198 68.30899811]
[26.17282486 75.41703033]
[39.38175964 82.52505493]
[52.59069061 89.63308716]
[65.79962158 96.74111938]
[79.00856018 103.84915161]
[77.09881592 84.29878998]
[93.62843323 66.40683746]
[101.15617371 53.43251801]
[108.60058594 40.41019821]
[115.96134949 27.34041595]
[123.32211304 14.27063560]
[130.34530640 1.01640189]
[137.02632141 -12.41356850]
[143.70733643 -25.84353828]
[150.38833618 -39.27350998]
[148.83312988 -55.59874344]
[162.34867859 -64.88648224]
[177.03134155 -57.58228683]
[177.77687073 -41.20009613]
[163.81831360 -32.59249878]
[157.13729858 -19.16252708]
[150.45628357 -5.73255730]
[143.77528381 7.69741297]
[144.52040100 10.37763977]
[144.26089478 13.51138210]
[142.81993103 16.72183228]
[140.15869141 19.57554817]
[136.39189148 21.63139915]
[129.03112793 34.70117950]
[121.67036438 47.77096176]
[121.12777710 55.12463379]
[114.13050079 60.96026230]
[106.60275269 73.93458557]
[111.60931396 79.51888275]
[122.77807617 69.50595856]
[132.79081726 80.67488098]
[121.62242126 90.68747711]
[126.62898254 96.27178192]
[140.34516907 90.20002747]
[154.06135559 84.12828064]
[167.77754211 78.05652618]
[181.49374390 71.98477936]
[190.71891785 58.42645645]
[207.05116272 59.90621185]
[213.68927002 74.90179443]
[203.80451965 87.98704529]
[187.56549072 85.70096588]
[173.84930420 91.77272034]
[160.13311768 97.84446716]
[146.41691589 103.91622162]
[132.70072937 109.98796844]
[114.20166779 123.86011505]
[95.74783325 120.91352844]
[102.60050201 134.25672913]
[109.45317078 147.59992981]
[116.30583191 160.94313049]
[123.15850067 174.28633118]
[127.50737000 177.09136963]
[130.10046387 180.89782715]
[130.84968567 184.87518311]
[130.00694275 188.27708435]
[136.34138489 201.87396240]
[142.67581177 215.47084045]
[149.01023865 229.06770325]
[155.34466553 242.66458130]
[169.92160034 248.15557861]
[176.15191650 262.03497314]
[170.82725525 275.89801025]
[177.16169739 289.49487305]
[183.49612427 303.09176636]
[196.33741760 312.33361816]
[194.69854736 327.13778687]
[201.03297424 340.73464966]
[207.45445251 354.29061890]
[213.96270752 367.80517578]
[220.47096252 381.31970215]
[233.42970276 390.39614868]
[231.98078918 405.22009277]
[238.48904419 418.73461914]
[244.99729919 432.24917603]
[251.50555420 445.76370239]
[258.01382446 459.27822876]
[265.24243164 446.13491821]
[280.00238037 443.46203613]
[291.38101196 453.23580933]
[290.96569824 468.23004150]
[279.06344604 477.35894775]
[264.47479248 473.87368774]
[270.10379028 487.77743530]
[275.73278809 501.68118286]
[281.36178589 515.58489990]
[290.41763306 518.06353760]
[297.22576904 524.32781982]
[300.35366821 532.88848877]
[299.22219849 541.79382324]
[294.20858765 549.07409668]
[299.29870605 563.18402100]
[304.38882446 577.29400635]
[309.47894287 591.40393066]
[324.59854126 590.90081787]
[339.13302612 595.09649658]
[351.65847778 603.57989502]
[360.94778442 615.51989746]
[366.09085083 629.74676514]
[366.58383179 644.86669922]
[362.37841797 659.39837646]
[353.88662720 671.91815186]
[341.94036865 681.19946289]
[327.71005249 686.33300781]
[312.58981323 686.81585693]
[298.06094360 682.60070801]
[285.54687500 674.10052490]
[276.27359009 662.14807129]
[271.14959717 647.91430664]
[270.67687988 632.79376221]
[274.90173340 618.26770020]
[283.41030884 605.75933838]
[295.36898804 596.49401855]
[290.27886963 582.38409424]
[285.18875122 568.27416992]
[280.09863281 554.16418457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[11 199]
[12 198]
[13 197]
[15 196]
[16 195]
[18 193]
[19 192]
[20 191]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[39 122]
[40 121]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 107]
[48 106]
[49 105]
[52 102]
[53 101]
[54 99]
[55 98]
[56 97]
[59 93]
[60 92]
[61 91]
[62 90]
[64 88]
[65 87]
[66 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 80]
[73 79]
[130 156]
[131 155]
[132 153]
[133 152]
[134 151]
[135 146]
[136 145]
[137 144]
[138 143]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[219 244]
[220 243]
[221 242]
[222 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
