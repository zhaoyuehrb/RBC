%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WNT9A)
} def

/sequence { (\
GCGGAGCUGGGAGCGCGAUGGUCGGCCGCCGAGGCGCGGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.090211633 ubox
1 14 0.121260616 ubox
1 16 0.682594092 ubox
1 22 0.035507061 ubox
1 26 0.027784551 ubox
1 29 0.006993611 ubox
1 35 0.012222262 ubox
1 37 0.232800536 ubox
1 40 0.436044315 ubox
2 6 0.089736942 ubox
2 9 0.026417573 ubox
2 13 0.121372249 ubox
2 15 0.683246066 ubox
2 17 0.298224044 ubox
2 20 0.178374187 ubox
2 21 0.038304559 ubox
2 24 0.041364765 ubox
2 25 0.027895477 ubox
2 28 0.007601139 ubox
2 31 0.007584635 ubox
2 34 0.012209164 ubox
2 36 0.232968681 ubox
2 38 0.100060158 ubox
2 39 0.430945462 ubox
3 8 0.020525217 ubox
3 14 0.656942502 ubox
3 16 0.300554326 ubox
3 19 0.176133222 ubox
3 23 0.041390013 ubox
3 27 0.014596799 ubox
3 30 0.007884780 ubox
3 35 0.229514766 ubox
3 37 0.120943395 ubox
4 22 0.032064306 ubox
4 23 0.032684982 ubox
4 26 0.011675461 ubox
4 29 0.007877212 ubox
5 22 0.030620912 ubox
6 14 0.391121434 ubox
6 16 0.181328567 ubox
6 22 0.023388650 ubox
6 26 0.050076986 ubox
6 29 0.005263722 ubox
6 35 0.431464423 ubox
6 37 0.016380206 ubox
6 40 0.256524074 ubox
7 13 0.399648882 ubox
7 15 0.179602095 ubox
7 21 0.031221249 ubox
7 25 0.050898954 ubox
7 28 0.005182547 ubox
7 33 0.206666761 ubox
7 34 0.419430805 ubox
7 36 0.016314704 ubox
7 39 0.256763042 ubox
7 43 0.072449923 ubox
8 12 0.360090270 ubox
8 15 0.031991178 ubox
8 17 0.033589167 ubox
8 20 0.030363189 ubox
8 24 0.050823103 ubox
8 31 0.246665359 ubox
8 32 0.219903273 ubox
8 33 0.344057466 ubox
8 38 0.253946609 ubox
8 41 0.112767159 ubox
8 42 0.071635625 ubox
9 14 0.121845611 ubox
9 16 0.039399699 ubox
9 19 0.024537071 ubox
9 23 0.048027724 ubox
9 27 0.013329881 ubox
9 30 0.440447348 ubox
9 37 0.083488718 ubox
9 40 0.123106609 ubox
10 22 0.035265702 ubox
10 23 0.007890364 ubox
10 26 0.013141571 ubox
10 27 0.017766377 ubox
10 29 0.441352858 ubox
10 30 0.222958694 ubox
11 22 0.004508945 ubox
11 23 0.083793845 ubox
11 26 0.017608593 ubox
11 29 0.221872859 ubox
12 22 0.083594760 ubox
13 22 0.035251485 ubox
13 26 0.484231943 ubox
13 29 0.074509097 ubox
13 35 0.031914791 ubox
13 37 0.291810837 ubox
13 40 0.042888394 ubox
14 20 0.083149509 ubox
14 21 0.040722838 ubox
14 24 0.054947637 ubox
14 25 0.483281871 ubox
14 28 0.076944619 ubox
14 31 0.003590625 ubox
14 34 0.031982325 ubox
14 36 0.300455375 ubox
14 38 0.053586280 ubox
14 39 0.031153373 ubox
15 19 0.051404892 ubox
15 22 0.076742693 ubox
15 23 0.061331392 ubox
15 26 0.067358168 ubox
15 27 0.060018187 ubox
15 29 0.005676124 ubox
15 35 0.300517809 ubox
15 37 0.065718065 ubox
15 40 0.007199578 ubox
16 21 0.100196306 ubox
16 24 0.493396984 ubox
16 25 0.080006646 ubox
16 28 0.006312410 ubox
16 31 0.031992847 ubox
16 34 0.300448072 ubox
16 36 0.065814732 ubox
16 38 0.010075025 ubox
16 39 0.006924313 ubox
17 23 0.499166091 ubox
17 27 0.006239625 ubox
17 30 0.032624824 ubox
17 35 0.065667390 ubox
17 37 0.010403944 ubox
18 22 0.434305415 ubox
19 28 0.034116143 ubox
19 31 0.282412207 ubox
19 36 0.007309050 ubox
19 41 0.104339434 ubox
20 27 0.043597760 ubox
20 30 0.299091597 ubox
20 35 0.007506078 ubox
20 40 0.084538467 ubox
21 26 0.043361723 ubox
21 29 0.299110105 ubox
21 37 0.004689069 ubox
21 40 0.713150144 ubox
22 28 0.291362364 ubox
22 32 0.070451017 ubox
22 36 0.003872464 ubox
22 39 0.718016374 ubox
23 31 0.071701552 ubox
23 36 0.003812010 ubox
23 38 0.719376623 ubox
24 30 0.071714568 ubox
24 37 0.716334888 ubox
25 29 0.070557172 ubox
25 35 0.717206001 ubox
25 37 0.023315819 ubox
25 40 0.359521131 ubox
26 34 0.717751805 ubox
26 36 0.022847829 ubox
26 39 0.359986635 ubox
27 33 0.717629638 ubox
27 36 0.055730809 ubox
27 38 0.360009442 ubox
28 35 0.062276141 ubox
28 37 0.359866345 ubox
28 40 0.072386981 ubox
29 34 0.062416904 ubox
29 36 0.355808745 ubox
29 39 0.072533607 ubox
30 36 0.049652454 ubox
30 38 0.072615848 ubox
31 35 0.065685023 ubox
31 37 0.072000426 ubox
34 40 0.007501096 ubox
35 39 0.007455795 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
showpage
end
%%EOF
