%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MEP1A)
} def

/sequence { (\
AUUUAUGACAAGGUGUGUGCUAAAAUCAGCUCACUUGCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.055829267 ubox
1 18 0.004034753 ubox
1 26 0.005106712 ubox
2 8 0.016285184 ubox
2 11 0.015483237 ubox
2 12 0.018215594 ubox
2 13 0.058078908 ubox
2 17 0.004305588 ubox
2 24 0.031227749 ubox
2 25 0.005493339 ubox
2 40 0.021758482 ubox
3 7 0.016296579 ubox
3 10 0.016869559 ubox
3 11 0.024185717 ubox
3 12 0.060360933 ubox
3 13 0.006120126 ubox
3 23 0.035901173 ubox
3 24 0.005205348 ubox
3 39 0.013030428 ubox
3 40 0.034308111 ubox
4 10 0.024551160 ubox
4 11 0.056412036 ubox
4 12 0.008598789 ubox
4 15 0.009232173 ubox
4 17 0.003957812 ubox
4 19 0.003749895 ubox
4 22 0.036960233 ubox
4 23 0.004413378 ubox
4 37 0.005122632 ubox
4 39 0.019863870 ubox
5 14 0.037825564 ubox
5 16 0.004592261 ubox
5 18 0.004920460 ubox
5 21 0.036918078 ubox
5 36 0.004642385 ubox
6 13 0.038802544 ubox
6 15 0.004594662 ubox
6 17 0.004824037 ubox
6 28 0.011581288 ubox
6 33 0.004289084 ubox
6 37 0.008326663 ubox
6 39 0.675139856 ubox
6 42 0.266838150 ubox
7 14 0.006932784 ubox
7 27 0.012856546 ubox
7 32 0.004918915 ubox
7 36 0.011138555 ubox
7 38 0.749294227 ubox
7 41 0.328887338 ubox
8 14 0.040253333 ubox
8 16 0.017531181 ubox
8 18 0.039689152 ubox
8 26 0.012581478 ubox
8 31 0.004224052 ubox
8 35 0.010753047 ubox
9 13 0.040954816 ubox
9 15 0.018313965 ubox
9 17 0.039972120 ubox
9 37 0.811749075 ubox
10 14 0.015194339 ubox
10 16 0.037395697 ubox
10 36 0.770316406 ubox
11 21 0.005151613 ubox
11 31 0.009439152 ubox
11 35 0.720480163 ubox
11 36 0.446088316 ubox
12 20 0.005298664 ubox
12 21 0.014800471 ubox
12 27 0.006714573 ubox
12 30 0.010577953 ubox
12 31 0.007954502 ubox
12 32 0.004145830 ubox
12 34 0.515499938 ubox
12 35 0.529285248 ubox
12 36 0.113866302 ubox
13 20 0.015360428 ubox
13 26 0.006763730 ubox
13 30 0.017493978 ubox
13 31 0.005072628 ubox
13 34 0.617222290 ubox
13 35 0.121307469 ubox
13 38 0.202085236 ubox
13 41 0.070590516 ubox
14 19 0.014740446 ubox
14 25 0.006742287 ubox
14 28 0.011491237 ubox
14 29 0.017017443 ubox
14 33 0.689265671 ubox
14 37 0.194209196 ubox
14 39 0.014729274 ubox
14 40 0.069930083 ubox
14 42 0.011995842 ubox
15 26 0.004002937 ubox
15 27 0.011818006 ubox
15 30 0.036998725 ubox
15 32 0.690219183 ubox
15 34 0.588816601 ubox
15 36 0.022637278 ubox
15 38 0.015423338 ubox
15 41 0.015320783 ubox
16 25 0.006341397 ubox
16 28 0.029663189 ubox
16 29 0.034183374 ubox
16 33 0.695039567 ubox
16 37 0.013654855 ubox
16 39 0.007086956 ubox
16 40 0.014047902 ubox
16 42 0.006031622 ubox
17 26 0.024895970 ubox
17 27 0.031187211 ubox
17 30 0.264833857 ubox
17 32 0.699155027 ubox
17 34 0.022859805 ubox
17 36 0.003178809 ubox
17 38 0.008205667 ubox
17 41 0.008088793 ubox
18 25 0.030531533 ubox
18 28 0.065922928 ubox
18 29 0.255469586 ubox
18 33 0.021991206 ubox
18 37 0.008169692 ubox
18 39 0.015366897 ubox
18 40 0.005102663 ubox
18 42 0.019381268 ubox
19 27 0.076999197 ubox
19 30 0.958610695 ubox
19 32 0.011832449 ubox
19 38 0.017480167 ubox
19 41 0.026568851 ubox
20 29 0.960229442 ubox
20 37 0.017466245 ubox
20 40 0.026582154 ubox
21 28 0.920891609 ubox
21 39 0.026235517 ubox
22 36 0.004022396 ubox
23 35 0.003865064 ubox
23 36 0.003331425 ubox
24 36 0.006262656 ubox
25 35 0.005478906 ubox
27 37 0.003594739 ubox
28 35 0.003618488 ubox
28 36 0.003453100 ubox
29 34 0.004006657 ubox
29 38 0.043256279 ubox
29 41 0.024553249 ubox
30 37 0.043279064 ubox
30 40 0.024575356 ubox
31 39 0.023708014 ubox
34 40 0.004048778 ubox
35 39 0.005383337 ubox
36 42 0.018356212 ubox
37 41 0.025478830 ubox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
