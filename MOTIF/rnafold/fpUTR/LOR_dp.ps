%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOR)
} def

/sequence { (\
CUCUCCUCACUCACCCUUCCUGGUGCUUUGGGCUCUCCUUCCUUCUCAGACAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.007107093 ubox
1 32 0.048265446 ubox
1 49 0.029718073 ubox
1 54 0.022379141 ubox
2 30 0.005756583 ubox
2 31 0.047956289 ubox
2 32 0.020461346 ubox
2 48 0.028579139 ubox
2 50 0.143683946 ubox
2 53 0.021289248 ubox
3 30 0.048338697 ubox
3 31 0.025345727 ubox
3 32 0.108917176 ubox
3 49 0.155292744 ubox
3 54 0.032380166 ubox
4 30 0.022665927 ubox
4 31 0.063171291 ubox
4 32 0.354094248 ubox
4 48 0.150652206 ubox
4 50 0.034627032 ubox
4 53 0.032501552 ubox
5 23 0.016319517 ubox
5 30 0.062850698 ubox
5 31 0.474606706 ubox
5 32 0.545046201 ubox
5 49 0.036981540 ubox
6 22 0.016481374 ubox
6 30 0.475030202 ubox
6 31 0.550693478 ubox
6 32 0.558559283 ubox
6 49 0.019856462 ubox
6 54 0.014624840 ubox
7 23 0.004556036 ubox
7 30 0.470583382 ubox
7 31 0.565211410 ubox
7 32 0.019683353 ubox
7 48 0.018627687 ubox
7 50 0.034580981 ubox
7 53 0.014071191 ubox
8 22 0.006175782 ubox
8 25 0.068132265 ubox
8 30 0.624725615 ubox
8 31 0.026094740 ubox
8 49 0.036050635 ubox
9 21 0.005666230 ubox
9 24 0.068697034 ubox
9 29 0.600713676 ubox
10 23 0.068261004 ubox
10 31 0.031498877 ubox
10 32 0.023453464 ubox
10 49 0.014679924 ubox
10 54 0.016211688 ubox
11 22 0.041887590 ubox
11 23 0.010084722 ubox
11 30 0.031352403 ubox
11 31 0.023509787 ubox
11 48 0.013840469 ubox
11 50 0.007523713 ubox
11 53 0.015565155 ubox
12 22 0.053171155 ubox
12 25 0.976986877 ubox
12 30 0.018229845 ubox
12 49 0.007895876 ubox
13 21 0.050319678 ubox
13 24 0.982268759 ubox
13 29 0.015274368 ubox
14 23 0.977963655 ubox
14 32 0.042242280 ubox
15 22 0.970142993 ubox
15 23 0.125690587 ubox
15 31 0.042431415 ubox
15 32 0.004847574 ubox
16 22 0.160831123 ubox
16 23 0.011222611 ubox
16 30 0.042415221 ubox
16 31 0.004891360 ubox
16 49 0.004510716 ubox
16 54 0.049942459 ubox
17 22 0.011863649 ubox
17 30 0.004823889 ubox
17 48 0.004287805 ubox
17 50 0.003398255 ubox
17 53 0.050725721 ubox
17 54 0.003952601 ubox
18 32 0.007252697 ubox
18 50 0.021834907 ubox
18 52 0.047338521 ubox
18 53 0.006169254 ubox
19 31 0.009406724 ubox
19 32 0.017681201 ubox
19 49 0.018051218 ubox
20 30 0.009423799 ubox
20 31 0.017849907 ubox
20 49 0.131866904 ubox
20 54 0.013327021 ubox
21 30 0.017759017 ubox
21 48 0.133142692 ubox
21 52 0.011581461 ubox
21 53 0.012647647 ubox
22 29 0.016238224 ubox
22 35 0.007563293 ubox
22 36 0.018096833 ubox
22 37 0.005412816 ubox
22 38 0.017891028 ubox
22 42 0.006560746 ubox
22 45 0.003956860 ubox
22 46 0.013414567 ubox
22 47 0.132805747 ubox
22 51 0.012619235 ubox
23 28 0.014694560 ubox
23 33 0.003490748 ubox
23 34 0.007186145 ubox
23 35 0.020795019 ubox
23 36 0.003410911 ubox
23 37 0.017899590 ubox
23 41 0.006585240 ubox
23 44 0.004484790 ubox
23 45 0.059911212 ubox
23 46 0.108519126 ubox
23 51 0.015822487 ubox
24 32 0.003483099 ubox
24 48 0.013751636 ubox
24 50 0.015724102 ubox
24 52 0.049251176 ubox
25 33 0.041701355 ubox
25 47 0.016232118 ubox
25 51 0.061107865 ubox
26 32 0.042598780 ubox
26 49 0.063371083 ubox
26 54 0.028902696 ubox
27 31 0.038386625 ubox
27 48 0.061178550 ubox
27 49 0.009327101 ubox
27 50 0.227122708 ubox
27 53 0.026732300 ubox
27 54 0.021877853 ubox
28 48 0.008862479 ubox
28 49 0.247390201 ubox
28 50 0.008960091 ubox
28 52 0.020955757 ubox
28 53 0.035758675 ubox
29 48 0.255801682 ubox
29 49 0.008335516 ubox
29 52 0.038560925 ubox
30 36 0.004863597 ubox
30 37 0.009309944 ubox
30 38 0.129532658 ubox
30 39 0.137464567 ubox
30 40 0.011458867 ubox
30 41 0.013337769 ubox
30 42 0.092963606 ubox
30 43 0.106841291 ubox
30 44 0.007956408 ubox
30 45 0.020337631 ubox
30 46 0.012656799 ubox
30 47 0.257126097 ubox
30 51 0.039035420 ubox
31 35 0.005575073 ubox
31 36 0.007514315 ubox
31 37 0.129764065 ubox
31 38 0.147151781 ubox
31 39 0.015447563 ubox
31 40 0.013003045 ubox
31 41 0.093168996 ubox
31 42 0.121718330 ubox
31 43 0.010829787 ubox
31 44 0.015984499 ubox
31 45 0.034575783 ubox
31 46 0.252059751 ubox
31 47 0.006781737 ubox
32 36 0.084132203 ubox
32 37 0.145346264 ubox
32 38 0.020701337 ubox
32 39 0.013108892 ubox
32 40 0.079162424 ubox
32 41 0.122208071 ubox
32 42 0.013751168 ubox
32 43 0.013048724 ubox
32 44 0.028131884 ubox
32 45 0.249203449 ubox
32 46 0.005700972 ubox
33 49 0.060419491 ubox
33 54 0.054335168 ubox
34 48 0.057301251 ubox
34 50 0.197227465 ubox
34 53 0.053081309 ubox
35 49 0.213088635 ubox
35 54 0.057866177 ubox
36 48 0.202921711 ubox
36 50 0.080183896 ubox
36 53 0.058332056 ubox
37 49 0.082788585 ubox
38 49 0.198143883 ubox
38 54 0.124951159 ubox
39 48 0.197413691 ubox
39 49 0.018887441 ubox
39 50 0.053183603 ubox
39 53 0.126549615 ubox
39 54 0.011789698 ubox
40 48 0.021472628 ubox
40 49 0.054513461 ubox
40 50 0.128150516 ubox
40 52 0.114845809 ubox
40 53 0.017831702 ubox
41 49 0.136335865 ubox
42 49 0.208929206 ubox
42 54 0.109933898 ubox
43 48 0.192842824 ubox
43 49 0.028864058 ubox
43 50 0.046788528 ubox
43 53 0.111444809 ubox
43 54 0.013715375 ubox
44 48 0.026578616 ubox
44 49 0.046308630 ubox
44 50 0.104979999 ubox
44 52 0.102321630 ubox
44 53 0.021617263 ubox
45 49 0.110807359 ubox
45 54 0.075943829 ubox
46 53 0.074569850 ubox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
showpage
end
%%EOF
