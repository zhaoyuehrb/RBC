%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCGCAGGCUCCGCGGCCCGAGCAGGCGCGUCAGCCGAGCUCGGCGGUGGCGCGGGCGGCUGGGACGCAGCUGCCCCCGCUCGGCGCCCGCUGCACCCUUAGCAGCCACUGCCACCUGGGCCCGGAGCCUCCACGAUCUCGCCCGGCGAUUGUGGGCAGGGGCGCCUCCGGAUCGAUCUUCUGAAAUUCAAGUUUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[255.13365173 297.43533325]
[269.43069458 301.97344971]
[281.91998291 310.27239990]
[274.79153442 297.07449341]
[267.66305542 283.87658691]
[260.53460693 270.67864990]
[253.40612793 257.48074341]
[252.49195862 218.05010986]
[240.07662964 209.63230896]
[227.66130066 201.21450806]
[215.24595642 192.79669189]
[202.83062744 184.37889099]
[190.41528320 175.96109009]
[177.99995422 167.54327393]
[165.58462524 159.12547302]
[158.27947998 157.97302246]
[153.04367065 150.48010254]
[140.76008606 141.87117004]
[128.47650146 133.26223755]
[116.19292450 124.65331268]
[103.90934753 116.04438782]
[88.91652679 115.58018494]
[76.12389374 123.41271210]
[63.33126450 131.24523926]
[50.53862762 139.07777405]
[42.12752151 155.45536804]
[24.58270264 155.23052979]
[11.91280937 163.26008606]
[-0.75708205 171.28964233]
[-3.96923018 186.76406860]
[-17.22828102 195.36482239]
[-32.66787338 191.98925781]
[-41.12797546 178.64001465]
[-37.58935165 163.23696899]
[-24.15141106 154.91847229]
[-8.78664207 158.61975098]
[3.88324952 150.59019470]
[16.55314064 142.56063843]
[19.50638199 130.82597351]
[30.00168991 124.03371429]
[42.70610046 126.28514099]
[55.49873352 118.45261383]
[68.29136658 110.62007904]
[81.08399963 102.78755188]
[80.85187531 87.78934479]
[67.82297516 80.35646057]
[54.79407883 72.92356873]
[41.76517868 65.49068451]
[25.94441223 65.37290955]
[18.72362328 52.34564590]
[5.69472551 44.91275787]
[-7.39129686 37.58090973]
[-20.53365898 30.35053635]
[-33.67602158 23.12016296]
[-49.49671936 23.24723053]
[-56.91824341 10.33327484]
[-70.06060791 3.10290146]
[-83.20296478 -4.12747192]
[-96.34532928 -11.35784531]
[-109.48769379 -18.58821869]
[-122.63005829 -25.81859207]
[-135.77241516 -33.04896545]
[-148.91477966 -40.27933884]
[-162.05714417 -47.50971222]
[-177.80329895 -44.43750763]
[-189.92893982 -54.94218063]
[-189.13233948 -70.96544647]
[-176.02456665 -80.21562195]
[-160.66078186 -75.59677124]
[-154.82676697 -60.65207291]
[-141.68440247 -53.42169952]
[-128.54205322 -46.19132614]
[-115.39968109 -38.96095276]
[-102.25732422 -31.73058128]
[-89.11495972 -24.50020790]
[-75.97259521 -17.26983452]
[-62.83023071 -10.03946114]
[-49.68787003 -2.80908823]
[-34.80720139 -3.45332026]
[-26.44565010 9.97780037]
[-13.30328655 17.20817375]
[-0.16092345 24.43854713]
[7.21960449 24.90868187]
[13.12761307 31.88386154]
[26.15651131 39.31674957]
[41.04536438 38.90287781]
[49.19806671 52.46178436]
[62.22696686 59.89467239]
[75.25586700 67.32756042]
[88.28475952 74.76045227]
[94.68107605 70.84418488]
[113.87002563 59.09539032]
[113.17386627 44.11155319]
[112.47770691 29.12771797]
[111.78153992 14.14388084]
[111.08538055 -0.83995557]
[98.54379272 -10.18032551]
[94.99057007 -25.40887260]
[102.10344696 -39.33514404]
[116.52393341 -45.38357925]
[131.44311523 -40.69829178]
[139.81661987 -27.49152946]
[137.69071960 -11.99912643]
[126.06921387 -1.53611755]
[126.76538086 13.44771862]
[127.46154022 28.43155479]
[128.15769958 43.41539383]
[128.85386658 58.39922714]
[135.42655945 44.91591644]
[150.11993408 41.89853668]
[164.75596619 45.18286133]
[176.75122070 54.18917465]
[183.98844910 67.32777405]
[185.19017029 82.27955627]
[180.14428711 96.40538788]
[169.74145508 107.21191406]
[155.81787109 112.79167175]
[140.83117676 112.15978241]
[127.42546844 105.42678833]
[112.51827240 103.76080322]
[124.80185699 112.36973572]
[137.08543396 120.97866058]
[149.36901855 129.58758545]
[161.65260315 138.19651794]
[174.00242615 146.71014404]
[186.41775513 155.12794495]
[198.83309937 163.54574585]
[211.24842834 171.96356201]
[223.66377258 180.38136292]
[236.07910156 188.79916382]
[248.49443054 197.21697998]
[260.90975952 205.63478088]
[275.65185547 208.40444946]
[290.27575684 205.06663513]
[304.89968872 201.72882080]
[319.52362061 198.39100647]
[334.14752197 195.05319214]
[348.77145386 191.71537781]
[363.39535522 188.37756348]
[378.01928711 185.03974915]
[392.61694336 181.58886719]
[407.18743896 178.02514648]
[418.65423584 166.30146790]
[434.47134399 170.63172913]
[438.36749268 186.56134033]
[426.33462524 197.70326233]
[410.75115967 192.59567261]
[396.18066406 196.15939331]
[390.42654419 200.80516052]
[381.35708618 199.66366577]
[366.73318481 203.00148010]
[352.10925293 206.33929443]
[337.48535156 209.67710876]
[322.86141968 213.01492310]
[308.23748779 216.35273743]
[293.61358643 219.69055176]
[278.98965454 223.02836609]
[275.89324951 229.85934448]
[290.82128906 228.39160156]
[299.55630493 240.58583069]
[293.36318970 254.24766541]
[278.43515015 255.71507263]
[269.70043945 243.52130127]
[266.60403442 250.35227966]
[273.73251343 263.55020142]
[280.86096191 276.74810791]
[287.98944092 289.94604492]
[295.11788940 303.14395142]
[301.78231812 306.39682007]
[305.55075073 311.93725586]
[305.98657227 317.91030884]
[316.46936035 328.63928223]
[326.95214844 339.36828613]
[337.43490601 350.09729004]
[353.01303101 348.73495483]
[365.79254150 357.74703979]
[369.73934937 372.87835693]
[362.98986816 386.98434448]
[348.73104858 393.40457153]
[333.69540405 389.10763550]
[324.98236084 376.12237549]
[326.70593262 360.58004761]
[316.22314453 349.85107422]
[305.74035645 339.12207031]
[295.25756836 328.39306641]
[299.47015381 342.78939819]
[299.55249023 357.78918457]
[295.49816895 372.23086548]
[287.62118530 384.99618530]
[276.53146362 395.09658813]
[263.08779907 401.74996948]
[248.33117676 404.44113159]
[233.40432739 402.96160889]
[219.46310425 397.42605591]
[207.58708191 388.26309204]
[198.69590759 376.18222046]
[193.47805786 362.11901855]
[192.33758545 347.16244507]
[195.36283875 332.47067261]
[202.31950378 319.18139648]
[212.66891479 308.32369995]
[225.60964966 300.73834229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[14 126]
[15 125]
[17 124]
[18 123]
[19 122]
[20 121]
[21 120]
[22 44]
[23 43]
[24 42]
[25 41]
[27 38]
[28 37]
[29 36]
[45 90]
[46 89]
[47 88]
[48 87]
[50 85]
[51 84]
[52 82]
[53 81]
[54 80]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 148]
[142 147]
[171 185]
[172 184]
[173 183]
[174 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
