%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM166B)
} def

/sequence { (\
AGCCCUGGACACGGUACACACAGACCAGAGCCUUGGCUCAAAGGCAAACAAAAGGAAAUGCCCGGCUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.004860756 ubox
1 38 0.157395195 ubox
1 67 0.815834064 ubox
2 15 0.116965059 ubox
2 31 0.043194143 ubox
2 32 0.004018712 ubox
2 37 0.182029963 ubox
2 45 0.026661213 ubox
2 61 0.008340540 ubox
2 66 0.937726597 ubox
3 14 0.119381189 ubox
3 30 0.043471455 ubox
3 36 0.182103050 ubox
3 44 0.026433420 ubox
3 55 0.008635792 ubox
3 60 0.008339978 ubox
3 65 0.936352823 ubox
4 13 0.119036664 ubox
4 14 0.028955764 ubox
4 35 0.181972160 ubox
4 36 0.004504844 ubox
4 43 0.026112582 ubox
4 44 0.004663262 ubox
4 54 0.008639515 ubox
4 55 0.014101076 ubox
4 64 0.932272898 ubox
4 65 0.066152037 ubox
5 13 0.030942684 ubox
5 14 0.204254066 ubox
5 23 0.196054964 ubox
5 28 0.770030871 ubox
5 35 0.006973373 ubox
5 43 0.006443301 ubox
5 54 0.014723557 ubox
5 64 0.087957068 ubox
5 65 0.049602984 ubox
6 13 0.206366272 ubox
6 16 0.003338540 ubox
6 18 0.024011974 ubox
6 20 0.015791045 ubox
6 22 0.196640478 ubox
6 27 0.775788405 ubox
6 29 0.003330345 ubox
6 40 0.005758008 ubox
6 42 0.007305220 ubox
6 50 0.014380315 ubox
6 53 0.014258544 ubox
6 64 0.055988591 ubox
7 12 0.271611836 ubox
7 15 0.003638761 ubox
7 17 0.027132800 ubox
7 19 0.018029045 ubox
7 21 0.196676224 ubox
7 26 0.776628481 ubox
7 32 0.182717270 ubox
7 33 0.005349407 ubox
7 39 0.005885743 ubox
7 49 0.015531833 ubox
7 62 0.256479909 ubox
7 63 0.184708801 ubox
7 69 0.164112867 ubox
7 70 0.056131322 ubox
7 71 0.029451536 ubox
8 25 0.774529813 ubox
8 31 0.182674572 ubox
8 32 0.005332761 ubox
8 37 0.003897658 ubox
8 38 0.004587714 ubox
8 61 0.256683928 ubox
8 62 0.181572276 ubox
8 66 0.003413097 ubox
8 68 0.164775480 ubox
8 69 0.055691093 ubox
8 70 0.029682192 ubox
9 15 0.064551809 ubox
9 67 0.163751074 ubox
10 14 0.065611579 ubox
10 35 0.007317388 ubox
10 60 0.257504539 ubox
11 34 0.007298449 ubox
11 59 0.224223726 ubox
12 60 0.019671638 ubox
12 64 0.160721925 ubox
13 26 0.520203177 ubox
13 32 0.008203121 ubox
13 59 0.003727106 ubox
13 62 0.090683265 ubox
13 63 0.128947389 ubox
13 70 0.005798757 ubox
14 21 0.586144932 ubox
14 25 0.521181197 ubox
14 31 0.008213502 ubox
14 61 0.122239168 ubox
14 62 0.093786814 ubox
14 69 0.005797436 ubox
15 20 0.548860352 ubox
15 24 0.517821086 ubox
15 30 0.008058628 ubox
15 60 0.146335526 ubox
16 59 0.135691743 ubox
17 60 0.033450116 ubox
18 59 0.031986859 ubox
19 60 0.008819909 ubox
20 59 0.008587350 ubox
21 60 0.008120522 ubox
22 38 0.032028800 ubox
22 59 0.008132494 ubox
22 67 0.013994681 ubox
23 37 0.034244765 ubox
23 39 0.048243373 ubox
23 66 0.014968051 ubox
23 68 0.014034320 ubox
24 38 0.048193138 ubox
24 67 0.014017860 ubox
25 36 0.064232851 ubox
25 44 0.042065008 ubox
25 55 0.016233567 ubox
25 65 0.022280027 ubox
26 35 0.064334558 ubox
26 43 0.042339007 ubox
26 54 0.016238941 ubox
26 60 0.004563184 ubox
26 64 0.022280014 ubox
27 33 0.006358222 ubox
27 34 0.062481389 ubox
27 59 0.004914078 ubox
28 32 0.008766537 ubox
28 33 0.050423975 ubox
28 39 0.325846218 ubox
28 68 0.214606188 ubox
29 38 0.328502222 ubox
29 67 0.217729889 ubox
30 37 0.328864389 ubox
30 45 0.895665112 ubox
30 66 0.218159910 ubox
31 36 0.327799056 ubox
31 44 0.896621494 ubox
31 55 0.013259938 ubox
31 65 0.218001046 ubox
32 43 0.896625649 ubox
32 54 0.013304914 ubox
32 64 0.217523611 ubox
32 65 0.009263107 ubox
33 41 0.069764048 ubox
33 42 0.893362189 ubox
33 47 0.068994983 ubox
33 48 0.016998213 ubox
33 51 0.019324039 ubox
33 53 0.012301529 ubox
33 64 0.012274351 ubox
34 40 0.097427319 ubox
34 41 0.880894324 ubox
34 42 0.012689809 ubox
34 46 0.076456824 ubox
34 47 0.015673347 ubox
34 50 0.022055009 ubox
34 52 0.008449731 ubox
35 39 0.116738337 ubox
35 45 0.076767688 ubox
35 49 0.022646099 ubox
35 62 0.194393782 ubox
35 63 0.013447733 ubox
35 67 0.036796398 ubox
35 68 0.008795077 ubox
35 69 0.006128800 ubox
35 70 0.008045756 ubox
36 45 0.053900082 ubox
36 61 0.194764293 ubox
36 62 0.009722026 ubox
36 66 0.040747918 ubox
36 68 0.005998625 ubox
36 69 0.007999457 ubox
37 43 0.075448653 ubox
37 44 0.055354325 ubox
37 60 0.194772011 ubox
37 65 0.040730536 ubox
38 42 0.068034237 ubox
38 43 0.050906950 ubox
38 44 0.005009459 ubox
38 55 0.019356725 ubox
38 56 0.051133964 ubox
38 64 0.032188178 ubox
38 65 0.020827090 ubox
39 43 0.008195055 ubox
39 54 0.019956312 ubox
39 55 0.051461107 ubox
39 64 0.046491928 ubox
40 59 0.004429076 ubox
42 67 0.004281924 ubox
43 62 0.371652103 ubox
43 63 0.033567208 ubox
43 66 0.003258810 ubox
43 67 0.020799069 ubox
43 68 0.004908021 ubox
43 69 0.004363273 ubox
43 70 0.006278254 ubox
43 71 0.006457183 ubox
44 61 0.375112576 ubox
44 62 0.024210486 ubox
44 66 0.022609408 ubox
44 68 0.004295528 ubox
44 69 0.006232514 ubox
44 70 0.006495043 ubox
45 60 0.375806993 ubox
45 65 0.022633614 ubox
46 59 0.347741234 ubox
49 60 0.106439765 ubox
50 59 0.104863909 ubox
53 67 0.003773170 ubox
54 62 0.351185427 ubox
54 63 0.727971137 ubox
54 66 0.003930854 ubox
54 69 0.055853198 ubox
54 70 0.017543592 ubox
54 71 0.012431247 ubox
55 61 0.352335758 ubox
55 62 0.727074924 ubox
55 68 0.056043274 ubox
55 69 0.017378136 ubox
55 70 0.012510720 ubox
56 67 0.055042718 ubox
60 66 0.049511164 ubox
61 65 0.049182176 ubox
64 70 0.071079397 ubox
64 71 0.055500495 ubox
65 69 0.070099116 ubox
65 70 0.055245552 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
4 64 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
showpage
end
%%EOF
