%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUGUUACACCUCCCGCGGCCGCGCACAGCGGCAACCCGGGCGUGCGGGGGCGCGCGCGGUCAGGGAGGGGCCUGCGGAGGCGCGAGGCCCCCGGAAGCGCCUUUCCCGGAAGGCAGGGAGGCAGCGCCGGCCUCCGGAGGCGGCCUGGGCGAUGGCGGCGGAGUUUUGUCCAUAACGUGGGCAACCGCGCAGCUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[85.57711029 247.55337524]
[82.21823120 231.86589050]
[92.50000000 219.55065918]
[92.50000000 204.55065918]
[92.50000000 189.55065918]
[84.76270294 176.82339478]
[92.50000000 163.02322388]
[92.50000000 148.02322388]
[92.50000000 133.02322388]
[85.60926056 130.65435791]
[79.38478851 126.86626434]
[74.11476135 121.83431244]
[70.04315948 115.79148102]
[55.55427551 119.67376709]
[41.06538773 123.55605316]
[26.57649994 127.43833923]
[12.08761311 131.32061768]
[-2.40127444 135.20291138]
[-9.51705551 145.96499634]
[-21.66899872 148.89816284]
[-32.21152115 142.95960999]
[-46.75847626 146.61831665]
[-61.30543137 150.27702332]
[-75.85238647 153.93572998]
[-90.39933777 157.59443665]
[-104.94628906 161.25314331]
[-119.49324799 164.91183472]
[-134.04020691 168.57054138]
[-137.79397583 172.21369934]
[-142.13616943 173.88203430]
[-146.21461487 173.68261719]
[-149.34352112 172.04573059]
[-164.04391479 175.02870178]
[-178.74432373 178.01167297]
[-183.25968933 189.01651001]
[-192.43440247 196.39764404]
[-203.91471863 198.41003418]
[-214.82612610 194.66732788]
[-222.49308777 186.20962524]
[-237.27838135 188.73849487]
[-252.06365967 191.26734924]
[-266.84896851 193.79620361]
[-275.77453613 206.83880615]
[-291.32357788 209.66781616]
[-304.27108765 200.60482788]
[-306.93554688 185.02674866]
[-297.73617554 172.17579651]
[-282.13079834 169.67619324]
[-269.37780762 179.01091003]
[-254.59252930 176.48205566]
[-239.80723572 173.95320129]
[-225.02194214 171.42433167]
[-215.36898804 155.87477112]
[-197.10351562 152.25134277]
[-181.72729492 163.31126404]
[-167.02688599 160.32829285]
[-152.32649231 157.34532166]
[-137.69891357 154.02359009]
[-123.15195465 150.36488342]
[-108.60499573 146.70617676]
[-94.05804443 143.04747009]
[-79.51109314 139.38876343]
[-64.96413422 135.73007202]
[-50.41718292 132.07136536]
[-35.87022781 128.41265869]
[-23.95174026 115.53502655]
[-6.28355980 120.71401978]
[8.20532703 116.83173370]
[22.69421387 112.94944763]
[37.18310165 109.06716919]
[51.67198944 105.18488312]
[66.16087341 101.30259705]
[75.68849945 76.42599487]
[100.25989532 66.13681030]
[103.69416046 51.53524017]
[107.12841797 36.93367004]
[110.56267548 22.33209991]
[106.19044495 7.12702799]
[116.63614655 -3.49072337]
[120.07040405 -18.09229469]
[123.50466156 -32.69386673]
[126.93891907 -47.29543686]
[130.37318420 -61.89700699]
[133.80743408 -76.49858093]
[137.24169922 -91.10015106]
[140.45069885 -105.75287628]
[143.43367004 -120.45327759]
[146.41664124 -135.15368652]
[137.95367432 -148.23098755]
[141.18824768 -163.09678650]
[153.70761108 -171.08435059]
[156.69058228 -185.78475952]
[159.67355347 -200.48515320]
[162.54324341 -215.20809937]
[165.29949951 -229.95268250]
[168.05574036 -244.69728088]
[162.51972961 -249.79612732]
[159.12805176 -256.43850708]
[158.26013184 -263.77746582]
[159.97692871 -270.89535522]
[164.01914978 -276.91857910]
[169.84516907 -281.12487793]
[176.70321655 -283.02972412]
[180.58549500 -297.51861572]
[184.46778870 -312.00750732]
[188.35006714 -326.49639893]
[192.23236084 -340.98529053]
[196.11463928 -355.47415161]
[191.34989929 -371.16586304]
[202.75292969 -382.95156860]
[218.59329224 -378.70715332]
[222.57577515 -362.79891968]
[210.60353088 -351.59188843]
[206.72123718 -337.10299683]
[202.83895874 -322.61410522]
[198.95668030 -308.12521362]
[195.07438660 -293.63632202]
[191.19210815 -279.14743042]
[199.32199097 -258.22000122]
[182.80033875 -241.94104004]
[180.04408264 -227.19644165]
[177.28784180 -212.45184326]
[179.14993286 -205.29527283]
[174.37396240 -197.50218201]
[171.39099121 -182.80177307]
[168.40802002 -168.10137939]
[176.82373047 -155.86572266]
[174.00798035 -140.91493225]
[161.11703491 -132.17070007]
[158.13406372 -117.47030640]
[155.15109253 -102.76989746]
[156.99879456 -98.36042023]
[156.09217834 -92.74304962]
[151.84326172 -87.66589355]
[148.40901184 -73.06431580]
[144.97474670 -58.46274948]
[141.54049683 -43.86117935]
[138.10623169 -29.25960732]
[134.67198181 -14.65803623]
[131.23771667 -0.05646520]
[135.85559082 14.10420513]
[125.16424561 25.76635933]
[121.72998810 40.36792755]
[118.29573059 54.96950150]
[114.86147308 69.57106781]
[126.70673370 79.17853546]
[133.13479614 93.00942230]
[148.13302612 93.24041748]
[163.13124084 93.47140503]
[172.33612061 80.97941589]
[187.13578796 76.31577301]
[201.83946228 81.27374268]
[210.79328918 93.94689178]
[210.55433655 109.46212769]
[201.21447754 121.85352325]
[186.36509705 126.35634613]
[171.71606445 121.23915863]
[162.90025330 108.46962738]
[147.90202332 108.23863983]
[132.90380859 108.00764465]
[131.48228455 112.47593689]
[129.45716858 116.70503235]
[140.54229736 126.81046295]
[151.62744141 136.91590881]
[162.71257019 147.02133179]
[166.99716187 147.79991150]
[170.46041870 149.71173096]
[172.84654236 152.35839844]
[174.05572510 155.29934692]
[174.14450073 158.10647583]
[184.58650208 168.87515259]
[195.02851868 179.64382935]
[205.47052002 190.41250610]
[215.91253662 201.18118286]
[226.35453796 211.94985962]
[236.79655457 222.71853638]
[247.23855591 233.48722839]
[262.60546875 240.64926147]
[259.97729492 257.39825439]
[243.15530396 259.50939941]
[236.46987915 243.92922974]
[226.02787781 233.16055298]
[215.58586121 222.39187622]
[205.14385986 211.62319946]
[194.70184326 200.85452271]
[184.25984192 190.08583069]
[173.81782532 179.31715393]
[163.37580872 168.54847717]
[152.60713196 158.10647583]
[141.52200317 148.00103760]
[130.43687439 137.89559937]
[119.35173798 127.79016876]
[115.63648987 130.03802490]
[111.66413879 131.79199219]
[107.50000000 133.02322388]
[107.50000000 148.02322388]
[107.50000000 163.02322388]
[115.23729706 176.82339478]
[107.50000000 189.55065918]
[107.50000000 204.55065918]
[107.50000000 219.55065918]
[117.78176880 231.86589050]
[114.42288971 247.55337524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[7 197]
[8 196]
[9 195]
[13 72]
[14 71]
[15 70]
[16 69]
[17 68]
[18 67]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[32 57]
[33 56]
[34 55]
[39 52]
[40 51]
[41 50]
[42 49]
[74 145]
[75 144]
[76 143]
[77 142]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 131]
[87 130]
[88 129]
[91 126]
[92 125]
[93 124]
[94 122]
[95 121]
[96 120]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[147 160]
[148 159]
[149 158]
[162 192]
[163 191]
[164 190]
[165 189]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
