%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCAGUUUGCAAGUGCCAUCUGCAGUGUGGGGGAACCAAUCUUCAACUUGCCUGCAUUUGGUAUUAGUAUUUUAUUAACCUUUCAUUGAUCCAAUUACGGCUCUUUGACACAAUUUUCAUCAGUGAUGGACUAAGUGUGAUCCGGCCUGACCCGCCUCCGGCCGGCGUGAGAAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[-39.22291183 184.60050964]
[-50.89171982 192.10076904]
[-64.01209259 196.57243347]
[-77.81282043 197.75769043]
[-91.48391724 195.59178162]
[-104.22416687 190.20646667]
[-115.28805542 181.92205811]
[-124.02941895 171.22833252]
[-129.93916321 158.75564575]
[-144.66357422 161.61778259]
[-159.38798523 164.47991943]
[-171.45826721 174.70826721]
[-185.42803955 169.54159546]
[-200.15245056 172.40373230]
[-214.87686157 175.26586914]
[-229.60127258 178.12800598]
[-244.32566833 180.99014282]
[-259.05007935 183.85226440]
[-273.77447510 186.71440125]
[-282.62429810 199.53309631]
[-297.59771729 202.22595215]
[-309.76382446 193.71002197]
[-324.48822021 196.57215881]
[-339.21264648 199.43429565]
[-353.93704224 202.29643250]
[-368.66146851 205.15856934]
[-376.51440430 209.88018799]
[-383.66769409 207.93980408]
[-398.43981934 210.54452515]
[-413.21191406 213.14924622]
[-427.98403931 215.75396729]
[-442.75616455 218.35868835]
[-456.56610107 230.51971436]
[-472.81100464 223.91276550]
[-487.53540039 226.77490234]
[-502.25979614 229.63703918]
[-510.88854980 242.87788391]
[-526.36975098 246.05734253]
[-539.51861572 237.28909302]
[-542.53424072 221.77516174]
[-533.62744141 208.71972656]
[-518.08251953 205.86831665]
[-505.12194824 214.91262817]
[-490.39755249 212.05049133]
[-475.67312622 209.18835449]
[-468.63693237 199.32714844]
[-456.37231445 196.83497620]
[-445.36087036 203.58657837]
[-430.58877563 200.98185730]
[-415.81665039 198.37713623]
[-401.04452515 195.77241516]
[-386.27243042 193.16769409]
[-371.52359009 190.43415833]
[-356.79919434 187.57202148]
[-342.07476807 184.70988464]
[-327.35037231 181.84774780]
[-312.62597656 178.98561096]
[-304.53585815 166.53227234]
[-289.64398193 163.41990662]
[-276.63662720 171.98999023]
[-261.91223145 169.12786865]
[-247.18780518 166.26573181]
[-232.46339417 163.40359497]
[-217.73899841 160.54145813]
[-203.01458740 157.67932129]
[-188.29017639 154.81718445]
[-177.27308655 144.79356384]
[-162.25012207 149.75550842]
[-147.52571106 146.89337158]
[-132.80130005 144.03125000]
[-131.52291870 127.93007660]
[-125.77359772 112.82122803]
[-116.00785828 99.92110443]
[-103.00390625 90.27065277]
[-87.80165863 84.65133667]
[-71.61952209 83.52186584]
[-55.75682068 86.98075867]
[-41.48940659 94.75782013]
[-29.96706390 106.23521423]
[-22.12086296 120.49654388]
[-7.50531197 117.12227631]
[7.11023903 113.74800873]
[21.72579002 110.37374115]
[36.34133911 106.99948120]
[50.95689011 103.62521362]
[53.90324783 82.86938477]
[65.22666931 65.22666931]
[82.86938477 53.90324783]
[103.62521362 50.95689011]
[106.99948120 36.34133911]
[102.56484985 21.15435219]
[112.96685791 10.49379349]
[116.34111786 -4.12175751]
[107.75463104 -17.39005470]
[111.14681244 -32.82600784]
[124.50514984 -41.27173996]
[139.90437317 -37.71654892]
[148.20840454 -24.26966476]
[144.49060059 -8.90888691]
[130.95666504 -0.74749178]
[127.58240509 13.86805916]
[132.25839233 28.00964546]
[121.61502838 39.71560669]
[118.24076080 54.33115768]
[124.03897095 57.09899139]
[129.42684937 60.59911728]
[134.31242371 64.77179718]
[138.61230469 69.54579163]
[142.25309753 74.83963013]
[156.16085815 69.22052765]
[170.06861877 63.60143280]
[183.97637939 57.98233414]
[186.20669556 42.85048294]
[195.64932251 30.94528198]
[209.68983459 25.40179253]
[224.52070618 27.61565018]
[236.17367554 36.89325333]
[250.08143616 31.27415276]
[263.98919678 25.65505409]
[277.89694214 20.03595543]
[291.80471802 14.41685677]
[305.71246338 8.79775810]
[318.13327026 -2.74175406]
[332.66021729 5.99917126]
[328.28234863 22.37814140]
[311.33157349 22.70551491]
[297.42379761 28.32461548]
[283.51605225 33.94371414]
[269.60830688 39.56281281]
[255.70053101 45.18191147]
[241.79277039 50.80101013]
[239.85510254 65.56958771]
[230.72453308 77.46450043]
[216.77380371 83.23020935]
[201.71130371 81.22571564]
[189.59547424 71.89009094]
[175.68771362 77.50918579]
[161.77995300 83.12828827]
[147.87219238 88.74739075]
[149.13507080 97.97174835]
[148.63674927 107.26881409]
[146.39509583 116.30532837]
[142.49046326 124.75740051]
[154.14765930 134.19720459]
[165.80484009 143.63700867]
[177.46203613 153.07682800]
[189.11921692 162.51663208]
[200.77641296 171.95643616]
[216.37040710 174.62814331]
[221.39210510 188.65069580]
[233.04930115 198.09049988]
[248.73883057 196.18945312]
[261.12554932 206.00500488]
[262.86059570 221.71376038]
[252.91464233 233.99600220]
[237.18841553 235.56488037]
[225.01202393 225.48962402]
[223.60949707 209.74769592]
[211.95230103 200.30787659]
[197.19210815 198.31137085]
[191.33660889 183.61361694]
[179.67941284 174.17381287]
[168.02223206 164.73400879]
[156.36503601 155.29420471]
[144.70785522 145.85440063]
[133.05065918 136.41459656]
[119.85953522 144.98852539]
[104.63580322 148.95791626]
[88.93759918 147.91650391]
[74.37162781 141.97088623]
[62.42869568 131.72956848]
[54.33115768 118.24076080]
[39.71560669 121.61502838]
[25.10005569 124.98929596]
[10.48450470 128.36355591]
[-4.13104630 131.73782349]
[-18.74659729 135.11209106]
[-19.14071846 149.01757812]
[-22.86376953 162.41087341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 70]
[10 69]
[11 68]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[34 45]
[35 44]
[36 43]
[80 177]
[81 176]
[82 175]
[83 174]
[84 173]
[85 172]
[89 104]
[90 103]
[92 101]
[93 100]
[109 139]
[110 138]
[111 137]
[112 136]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
