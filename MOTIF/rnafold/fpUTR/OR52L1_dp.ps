%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR52L1)
} def

/sequence { (\
GGAUGAUGGUUGCCCCAUUUGGACAAUGUGAUAAUGUAGCAGGAAUGCAGAAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.042748229 ubox
1 15 0.032551058 ubox
1 16 0.037075429 ubox
1 19 0.004100409 ubox
1 20 0.118319523 ubox
1 55 0.027305057 ubox
2 11 0.033756071 ubox
2 13 0.042765648 ubox
2 14 0.032729857 ubox
2 15 0.036983073 ubox
2 18 0.003307968 ubox
2 19 0.140932357 ubox
2 20 0.039052864 ubox
2 54 0.019608514 ubox
2 55 0.167235393 ubox
3 10 0.041072834 ubox
3 18 0.143391244 ubox
3 19 0.029708611 ubox
3 27 0.020347176 ubox
3 29 0.049279792 ubox
3 32 0.491367960 ubox
3 35 0.114916002 ubox
3 37 0.037344983 ubox
3 46 0.036590311 ubox
3 54 0.168791558 ubox
4 9 0.041538981 ubox
4 12 0.025392783 ubox
4 17 0.143292714 ubox
4 21 0.030574806 ubox
4 25 0.026110112 ubox
4 26 0.020267104 ubox
4 28 0.049767160 ubox
4 30 0.018794263 ubox
4 31 0.506276846 ubox
4 33 0.078833972 ubox
4 34 0.114649627 ubox
4 36 0.037038077 ubox
4 38 0.017733343 ubox
4 41 0.006897117 ubox
4 45 0.037313480 ubox
4 47 0.012398550 ubox
4 49 0.206218727 ubox
4 53 0.162982388 ubox
5 11 0.026817913 ubox
5 16 0.142161984 ubox
5 19 0.440421838 ubox
5 20 0.044304753 ubox
5 24 0.027672290 ubox
5 27 0.014832712 ubox
5 29 0.025020954 ubox
5 32 0.082251206 ubox
5 35 0.025644797 ubox
5 37 0.018519447 ubox
5 40 0.007606379 ubox
5 46 0.014037835 ubox
5 48 0.228766361 ubox
5 55 0.305781796 ubox
6 10 0.023123027 ubox
6 18 0.479630243 ubox
6 19 0.033120433 ubox
6 27 0.021246948 ubox
6 29 0.473272631 ubox
6 32 0.092646266 ubox
6 35 0.031515735 ubox
6 37 0.017877492 ubox
6 46 0.173312795 ubox
6 54 0.309564332 ubox
7 17 0.486575742 ubox
7 25 0.011650638 ubox
7 26 0.019029991 ubox
7 28 0.389868213 ubox
7 30 0.049364817 ubox
7 31 0.091999662 ubox
7 33 0.027958712 ubox
7 34 0.031596691 ubox
7 36 0.017395113 ubox
7 38 0.009529688 ubox
7 41 0.007843515 ubox
7 45 0.169610341 ubox
7 47 0.022539305 ubox
7 49 0.077021957 ubox
7 53 0.305118159 ubox
8 14 0.090616274 ubox
8 15 0.116080772 ubox
8 16 0.488185690 ubox
8 20 0.003331874 ubox
8 24 0.011805000 ubox
8 27 0.277752816 ubox
8 29 0.043272971 ubox
8 32 0.029150361 ubox
8 35 0.014791896 ubox
8 37 0.009969691 ubox
8 40 0.006678699 ubox
8 46 0.017624644 ubox
8 48 0.076162503 ubox
8 55 0.051368729 ubox
9 13 0.089373998 ubox
9 14 0.118313817 ubox
9 15 0.486036205 ubox
9 18 0.003532531 ubox
9 19 0.003445471 ubox
9 24 0.040332834 ubox
9 27 0.619033154 ubox
9 29 0.045934346 ubox
9 32 0.056816103 ubox
9 35 0.021756543 ubox
9 40 0.041117581 ubox
9 46 0.038291588 ubox
9 48 0.068639386 ubox
9 54 0.053706635 ubox
10 17 0.003380473 ubox
10 23 0.039902944 ubox
10 26 0.688599855 ubox
10 28 0.009707906 ubox
10 31 0.059134643 ubox
10 34 0.022804131 ubox
10 39 0.041443996 ubox
10 42 0.279235420 ubox
10 43 0.016807447 ubox
10 44 0.012813524 ubox
10 45 0.037794377 ubox
10 47 0.066108777 ubox
10 50 0.302719350 ubox
10 51 0.014080958 ubox
10 52 0.007020341 ubox
10 53 0.053173583 ubox
11 17 0.005245428 ubox
11 21 0.003255592 ubox
11 22 0.029269634 ubox
11 25 0.702857602 ubox
11 30 0.058866913 ubox
11 33 0.022901323 ubox
11 38 0.043058403 ubox
11 41 0.317183752 ubox
11 42 0.009099541 ubox
11 43 0.008315243 ubox
11 44 0.022461238 ubox
11 49 0.321332946 ubox
11 50 0.011230839 ubox
11 51 0.007101555 ubox
11 52 0.049622535 ubox
12 16 0.005588351 ubox
12 24 0.704083192 ubox
12 29 0.058954566 ubox
12 32 0.021787539 ubox
12 37 0.043287625 ubox
12 40 0.321757778 ubox
12 48 0.323379418 ubox
13 22 0.557638752 ubox
13 28 0.058633056 ubox
13 36 0.042313581 ubox
13 39 0.321641074 ubox
13 43 0.027955201 ubox
13 47 0.321225644 ubox
14 21 0.555803707 ubox
14 22 0.404507347 ubox
14 42 0.028142471 ubox
14 43 0.084521792 ubox
15 21 0.403161542 ubox
15 22 0.207381681 ubox
15 42 0.084193123 ubox
15 43 0.186108882 ubox
16 21 0.210574279 ubox
16 28 0.041927190 ubox
16 30 0.037353103 ubox
16 36 0.329109543 ubox
16 42 0.185345299 ubox
16 47 0.061899265 ubox
17 27 0.043214555 ubox
17 29 0.037462548 ubox
17 32 0.022585129 ubox
17 35 0.329517509 ubox
17 37 0.009801645 ubox
17 46 0.089991867 ubox
17 54 0.005360298 ubox
18 26 0.043055225 ubox
18 28 0.036987646 ubox
18 31 0.023893792 ubox
18 34 0.326701277 ubox
18 36 0.009693058 ubox
18 39 0.015432886 ubox
18 42 0.044235032 ubox
18 43 0.186717227 ubox
18 44 0.025845171 ubox
18 45 0.090138119 ubox
18 51 0.033301191 ubox
18 52 0.004277414 ubox
18 53 0.006005780 ubox
19 25 0.040004531 ubox
19 26 0.011826066 ubox
19 30 0.023862713 ubox
19 31 0.023382378 ubox
19 33 0.316276618 ubox
19 34 0.040122868 ubox
19 38 0.016487653 ubox
19 39 0.042626493 ubox
19 41 0.042607328 ubox
19 42 0.212498067 ubox
19 43 0.024394138 ubox
19 44 0.088301082 ubox
19 50 0.043473887 ubox
19 51 0.006060520 ubox
19 52 0.007040649 ubox
19 53 0.003176155 ubox
20 25 0.014874420 ubox
20 28 0.012362586 ubox
20 30 0.028538912 ubox
20 33 0.057234711 ubox
20 36 0.005435880 ubox
20 38 0.046660162 ubox
20 41 0.265175537 ubox
20 42 0.021752510 ubox
20 43 0.085069105 ubox
20 44 0.003678080 ubox
20 47 0.003321361 ubox
20 49 0.059466242 ubox
20 50 0.006443322 ubox
20 51 0.007816442 ubox
20 52 0.005046114 ubox
21 27 0.017417529 ubox
21 29 0.031092715 ubox
21 32 0.065446307 ubox
21 35 0.007114522 ubox
21 37 0.037220373 ubox
21 40 0.268225951 ubox
21 46 0.005949233 ubox
21 48 0.061783662 ubox
21 55 0.010188990 ubox
22 54 0.008870414 ubox
22 55 0.014603024 ubox
23 29 0.292684303 ubox
23 37 0.346529721 ubox
23 54 0.013811702 ubox
24 28 0.291619526 ubox
24 30 0.094229189 ubox
24 36 0.353787671 ubox
24 47 0.009785470 ubox
25 29 0.076674147 ubox
25 35 0.306416995 ubox
25 46 0.008894118 ubox
26 32 0.038821594 ubox
26 35 0.204645300 ubox
26 37 0.186485167 ubox
26 46 0.003736945 ubox
26 54 0.008332778 ubox
27 31 0.037102630 ubox
27 33 0.150285579 ubox
27 34 0.252088717 ubox
27 36 0.191346091 ubox
27 38 0.018027851 ubox
27 41 0.085909489 ubox
27 45 0.003629301 ubox
27 49 0.028888194 ubox
27 53 0.008818165 ubox
28 32 0.128208570 ubox
28 35 0.209132018 ubox
28 37 0.019995634 ubox
28 40 0.090565725 ubox
28 46 0.004677210 ubox
28 48 0.033442652 ubox
28 54 0.035340767 ubox
29 34 0.212928812 ubox
29 36 0.013841050 ubox
29 38 0.029320403 ubox
29 39 0.088680144 ubox
29 41 0.017564947 ubox
29 45 0.004825769 ubox
29 47 0.032947093 ubox
29 49 0.007853544 ubox
29 53 0.037174687 ubox
30 35 0.009544835 ubox
30 37 0.029685172 ubox
30 40 0.018499553 ubox
30 46 0.020821858 ubox
30 48 0.008117850 ubox
30 55 0.226156298 ubox
31 37 0.049676930 ubox
31 46 0.009379765 ubox
31 54 0.228723790 ubox
32 36 0.048380837 ubox
32 38 0.024259860 ubox
32 45 0.009688802 ubox
32 53 0.216454769 ubox
33 37 0.023571519 ubox
34 46 0.008618403 ubox
34 54 0.089098916 ubox
35 41 0.031205607 ubox
35 45 0.008970769 ubox
35 49 0.302940852 ubox
35 53 0.094338892 ubox
36 40 0.031284660 ubox
36 46 0.005837152 ubox
36 48 0.320875023 ubox
36 54 0.018607644 ubox
37 45 0.005984773 ubox
37 47 0.320481302 ubox
37 53 0.018920115 ubox
38 46 0.316743600 ubox
39 48 0.814693827 ubox
40 47 0.815615147 ubox
41 46 0.786860311 ubox
42 55 0.004197233 ubox
43 55 0.014378860 ubox
44 54 0.012384289 ubox
45 54 0.025685974 ubox
46 53 0.028066569 ubox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
