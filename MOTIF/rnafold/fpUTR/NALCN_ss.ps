%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAGUGACACGGCGAGCGUGAGCCGCGGCCCCAGCCGGGCCGAGCGCGCUGCCUGAGCUGAGCCGCCGUAGGUGAGGGGCCCGCGUCCCCGCCCGCCCUGGGCGCCGCGCCUGGCACUGAUCCUGCCGGUCGCCCACUGUCGCCGCCGCCGCCGCCCGCGGGCACCAUGACAGCUCUGAGCGCUGGGGUUACAGACUGUGGUUUUGUGCUUGCUCACCAAAGCUAACCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[102.81513214 256.28012085]
[113.88124084 240.88656616]
[110.90594482 226.18461609]
[107.93064117 211.48265076]
[104.95534515 196.78070068]
[101.98004913 182.07873535]
[99.00474548 167.37677002]
[96.02944946 152.67481995]
[93.05414581 137.97285461]
[79.55215454 121.10299683]
[80.28720093 104.25211334]
[89.81804657 95.97719574]
[76.99724579 88.19085693]
[64.17644501 80.40451813]
[51.35564804 72.61817932]
[38.53484726 64.83184052]
[25.71404648 57.04549789]
[10.54309654 60.57820129]
[-2.34809804 52.49910736]
[-5.62249947 38.01415634]
[-18.44330025 30.22781563]
[-31.26409912 22.44147491]
[-47.07573318 21.89117813]
[-53.93763733 8.67136097]
[-66.75843811 0.88502121]
[-80.57811737 -4.94734144]
[-95.10088348 -8.70089340]
[-109.62365723 -12.45444584]
[-124.14642334 -16.20799828]
[-138.66918945 -19.96154976]
[-153.19197083 -23.71510124]
[-167.73939514 -27.37190819]
[-182.31085205 -30.93181038]
[-196.88229370 -34.49171066]
[-211.45373535 -38.05160904]
[-226.02519226 -41.61151123]
[-243.58711243 -36.04796982]
[-255.77645874 -48.68297958]
[-270.39401245 -52.04859924]
[-285.01156616 -55.41421509]
[-299.62908936 -58.77983475]
[-314.24664307 -62.14545441]
[-326.86172485 -50.86568832]
[-343.54925537 -49.34921646]
[-357.70709229 -57.99685287]
[-363.85263062 -73.22737122]
[-378.51367188 -76.39810944]
[-393.17471313 -79.56884766]
[-407.83578491 -82.73958588]
[-422.49682617 -85.91032410]
[-433.73092651 -79.59626007]
[-445.86834717 -82.52726746]
[-452.53979492 -92.60482025]
[-467.15731812 -95.97044373]
[-481.77487183 -99.33605957]
[-485.84289551 -97.93264771]
[-489.75488281 -97.89052582]
[-493.10473633 -98.99555969]
[-495.59661865 -100.92438507]
[-497.07086182 -103.28945160]
[-511.48855591 -107.42828369]
[-525.19555664 -100.02852631]
[-539.75817871 -104.43126678]
[-546.72827148 -117.54438019]
[-561.14593506 -121.68320465]
[-575.56365967 -125.82202911]
[-589.26550293 -117.94577026]
[-604.50152588 -122.14566803]
[-612.23248291 -135.92999268]
[-607.87170410 -151.12075806]
[-594.00640869 -158.70555115]
[-578.86260986 -154.18444824]
[-571.42480469 -140.23973083]
[-557.00714111 -136.10090637]
[-542.58941650 -131.96208191]
[-529.72515869 -139.38145447]
[-515.04461670 -135.38948059]
[-507.34973145 -121.84598541]
[-492.93203735 -117.70715332]
[-478.40927124 -113.95360565]
[-463.79171753 -110.58798218]
[-449.17416382 -107.22236633]
[-432.68676758 -113.25469208]
[-419.32608032 -100.57138062]
[-404.66503906 -97.40063477]
[-390.00396729 -94.22989655]
[-375.34292603 -91.05915833]
[-360.68188477 -87.88842010]
[-351.60522461 -97.66605377]
[-338.78088379 -101.71856689]
[-325.52233887 -98.88687897]
[-315.31069946 -89.80522919]
[-310.88101196 -76.76300049]
[-296.26348877 -73.39737701]
[-281.64593506 -70.03176117]
[-267.02838135 -66.66614532]
[-252.41084290 -63.30052567]
[-242.00415039 -69.44592285]
[-229.80705261 -66.77402496]
[-222.46528625 -56.18296051]
[-207.89384460 -52.62305832]
[-193.32238770 -49.06315994]
[-178.75094604 -45.50325775]
[-164.17948914 -41.94335556]
[-156.94839478 -43.40665817]
[-149.43841553 -38.23787308]
[-134.91564941 -34.48431778]
[-120.39287567 -30.73076820]
[-105.87010193 -26.97721481]
[-91.34733582 -23.22366333]
[-76.82456207 -19.47011185]
[-77.88999939 -34.09576797]
[-68.11512756 -43.34806824]
[-66.52072906 -58.26309204]
[-64.92632294 -73.17811584]
[-63.33192062 -88.09313202]
[-61.73751831 -103.00815582]
[-60.14311600 -117.92317963]
[-71.11556244 -129.06497192]
[-72.30759430 -144.65705872]
[-63.15638351 -157.33732605]
[-47.98284149 -161.11854553]
[-33.95145416 -154.21534729]
[-27.68741417 -139.88719177]
[-32.14841080 -124.89941406]
[-45.22809601 -116.32877350]
[-46.82249832 -101.41375732]
[-48.41690063 -86.49873352]
[-50.01130295 -71.58370972]
[-51.60570526 -56.66868973]
[-53.20010757 -41.75366592]
[-46.25231552 -32.16002274]
[-48.22726059 -19.75058365]
[-58.97209549 -11.93577862]
[-46.15129471 -4.14943838]
[-31.25669289 -4.15607214]
[-23.47775841 9.62067509]
[-10.65695953 17.40701485]
[2.16384053 25.19335556]
[16.52689552 21.42000008]
[29.63992882 29.13381767]
[33.50038910 44.22469711]
[46.32118607 52.01103592]
[59.14198685 59.79737854]
[71.96278381 67.58371735]
[84.78358459 75.37005615]
[97.60438538 83.15639496]
[112.60305786 82.95672607]
[125.21203613 74.83184814]
[137.82101440 66.70697021]
[150.42999268 58.58209610]
[151.16261292 43.08232498]
[160.89208984 30.99444771]
[175.87725830 26.96650124]
[190.35601807 32.54730988]
[198.76097107 45.59094620]
[197.86026001 61.08185577]
[188.00021362 73.06347656]
[172.97222900 76.92862701]
[158.55487061 71.19107819]
[145.94589233 79.31594849]
[133.33691406 87.44082642]
[120.72793579 95.56570435]
[122.91654968 110.40518188]
[137.33424377 114.54400635]
[151.75195312 118.68283081]
[166.16964722 122.82165527]
[185.50662231 117.08620453]
[198.29231262 131.60501099]
[212.81509399 135.35856628]
[228.11236572 131.32073975]
[238.49855042 141.99671936]
[253.02131653 145.75025940]
[267.54409790 149.50381470]
[282.06686401 153.25737000]
[291.14083862 152.37486267]
[296.75732422 157.15875244]
[311.22882080 161.10528564]
[325.70034790 165.05183411]
[340.17187500 168.99836731]
[354.66934204 172.84849548]
[369.19210815 176.60205078]
[383.71487427 180.35560608]
[397.20217896 172.11738586]
[412.54458618 175.91020203]
[420.63977051 189.48384094]
[416.68493652 204.78530884]
[403.02648926 212.73651123]
[387.76766968 208.62014771]
[379.96133423 194.87837219]
[365.43853760 191.12481689]
[350.91577148 187.37126160]
[343.66583252 188.73818970]
[336.22534180 183.46987915]
[321.75381470 179.52334595]
[307.28228760 175.57681274]
[292.81076050 171.63026428]
[278.31332397 167.78013611]
[263.79052734 164.02658081]
[249.26777649 160.27304077]
[234.74499512 156.51948547]
[220.48649597 160.82579041]
[209.06153870 149.88133240]
[194.53877258 146.12779236]
[186.25625610 152.07617188]
[175.84838867 152.50184631]
[166.73158264 147.02403259]
[162.03082275 137.23936462]
[147.61312866 133.10054016]
[133.19541931 128.96170044]
[118.77771759 124.82288361]
[107.75611115 134.99755859]
[110.73140717 149.69952393]
[113.70670319 164.40147400]
[116.68200684 179.10343933]
[119.65730286 193.80538940]
[122.63259888 208.50735474]
[125.60790253 223.20932007]
[128.58320618 237.91127014]
[139.56153870 242.41955566]
[146.93132019 251.56867981]
[148.95648193 263.01940918]
[145.24891663 273.91455078]
[136.83653259 281.59173584]
[139.41940308 296.36770630]
[142.00227356 311.14364624]
[155.07739258 320.02151489]
[157.96321106 335.56011963]
[148.94760132 348.54064941]
[133.37936401 351.26199341]
[120.49487305 342.10964966]
[117.93826294 326.51351929]
[127.22631836 313.72653198]
[124.64344788 298.95056152]
[122.06057739 284.17462158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 219]
[3 218]
[4 217]
[5 216]
[6 215]
[7 214]
[8 213]
[9 212]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[20 139]
[21 138]
[22 137]
[24 135]
[25 134]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[53 82]
[54 81]
[55 80]
[60 79]
[61 78]
[64 75]
[65 74]
[66 73]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[148 163]
[149 162]
[150 161]
[151 160]
[164 211]
[165 210]
[166 209]
[167 208]
[169 204]
[170 203]
[172 201]
[173 200]
[174 199]
[175 198]
[177 197]
[178 196]
[179 195]
[180 194]
[181 192]
[182 191]
[183 190]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
