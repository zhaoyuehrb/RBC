%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CUL7)
} def

/sequence { (\
AGGAGGUGCUGCGUCGCCAAGGUGGCAUCCUCGGCUCCGCCCCGGCGCUCUCCCAGGGCCCCUAGCUUUCCGCUGGGUCGGGCGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007360579 ubox
1 31 0.041072789 ubox
1 36 0.034357574 ubox
1 63 0.004290116 ubox
2 9 0.007786398 ubox
2 15 0.004180015 ubox
2 30 0.047157378 ubox
2 31 0.076654874 ubox
2 32 0.089552516 ubox
2 35 0.071389327 ubox
2 36 0.006229030 ubox
2 38 0.003234857 ubox
2 53 0.075325556 ubox
2 54 0.007626008 ubox
2 62 0.004542329 ubox
3 15 0.081510457 ubox
3 29 0.046385268 ubox
3 30 0.084860468 ubox
3 31 0.073515797 ubox
3 32 0.982730461 ubox
3 35 0.005998605 ubox
3 37 0.003408285 ubox
3 50 0.003413958 ubox
3 52 0.075855469 ubox
3 53 0.005614925 ubox
3 61 0.004535290 ubox
4 14 0.081461194 ubox
4 28 0.038381463 ubox
4 31 0.984353383 ubox
4 36 0.003595301 ubox
4 49 0.003247439 ubox
4 51 0.076010852 ubox
5 29 0.167187900 ubox
5 30 0.977989314 ubox
5 35 0.003772786 ubox
5 49 0.009280358 ubox
5 50 0.075532415 ubox
5 60 0.004549060 ubox
6 12 0.081621840 ubox
6 28 0.204746505 ubox
6 29 0.970932931 ubox
6 48 0.076139073 ubox
6 59 0.004549387 ubox
7 11 0.076364832 ubox
7 27 0.973114733 ubox
7 33 0.003658430 ubox
7 47 0.076156508 ubox
7 58 0.004541099 ubox
8 12 0.003234757 ubox
8 26 0.991081492 ubox
8 32 0.003639680 ubox
8 35 0.020310273 ubox
8 46 0.076204513 ubox
9 25 0.991068953 ubox
9 34 0.020346780 ubox
9 45 0.076202927 ubox
9 56 0.004546470 ubox
10 24 0.985782888 ubox
10 27 0.044329356 ubox
10 33 0.020313204 ubox
10 44 0.075250692 ubox
10 55 0.004543290 ubox
11 17 0.015765041 ubox
11 18 0.003679135 ubox
11 23 0.985327487 ubox
11 26 0.045005536 ubox
11 32 0.020138782 ubox
11 40 0.072150874 ubox
11 43 0.024338663 ubox
11 54 0.004427924 ubox
12 16 0.015737739 ubox
12 22 0.986522784 ubox
12 24 0.020841728 ubox
12 25 0.044375287 ubox
12 39 0.075207527 ubox
13 23 0.025383177 ubox
13 26 0.049849630 ubox
13 28 0.011378985 ubox
13 38 0.075023275 ubox
13 40 0.011221707 ubox
14 22 0.061614015 ubox
14 25 0.050734666 ubox
14 27 0.011433529 ubox
14 39 0.011128079 ubox
15 21 0.176040374 ubox
15 24 0.080949385 ubox
15 47 0.004304967 ubox
16 23 0.090036434 ubox
16 26 0.018862701 ubox
16 35 0.112944015 ubox
16 46 0.004358316 ubox
17 22 0.090315152 ubox
17 25 0.018909937 ubox
17 34 0.113051177 ubox
17 45 0.004358656 ubox
18 24 0.018946563 ubox
18 33 0.112889463 ubox
18 44 0.004353424 ubox
19 23 0.015359209 ubox
20 31 0.111921207 ubox
21 30 0.113050979 ubox
21 41 0.004374208 ubox
22 29 0.112859863 ubox
22 40 0.004380524 ubox
23 27 0.005752439 ubox
23 39 0.004375404 ubox
24 38 0.004281517 ubox
25 37 0.004137098 ubox
31 86 0.004185105 ubox
32 85 0.004972733 ubox
33 41 0.003564031 ubox
33 67 0.003987986 ubox
34 40 0.003582184 ubox
34 66 0.004265440 ubox
34 83 0.009618180 ubox
35 39 0.003559896 ubox
35 65 0.004266401 ubox
35 82 0.009581128 ubox
36 64 0.004136961 ubox
36 86 0.948451042 ubox
37 81 0.009412375 ubox
37 85 0.996771608 ubox
38 80 0.009448589 ubox
38 84 0.996982970 ubox
39 59 0.004793850 ubox
39 79 0.009381142 ubox
39 83 0.996973255 ubox
40 58 0.004811991 ubox
40 82 0.968782794 ubox
41 57 0.004820285 ubox
41 77 0.009683236 ubox
41 80 0.003952815 ubox
41 81 0.939717690 ubox
41 82 0.235530405 ubox
42 56 0.004841170 ubox
42 76 0.010117726 ubox
42 80 0.908009859 ubox
42 81 0.333031069 ubox
43 56 0.004496621 ubox
43 75 0.010521053 ubox
43 76 0.003590262 ubox
43 80 0.407825715 ubox
44 53 0.011355174 ubox
44 54 0.012585066 ubox
44 60 0.851382175 ubox
44 61 0.149791540 ubox
44 62 0.017769673 ubox
44 74 0.010284826 ubox
44 79 0.457536223 ubox
45 52 0.011293329 ubox
45 53 0.012519977 ubox
45 59 0.854569890 ubox
45 60 0.193586659 ubox
45 61 0.021792881 ubox
45 73 0.010293992 ubox
45 78 0.425734299 ubox
46 58 0.854377713 ubox
46 72 0.010292660 ubox
46 77 0.398379976 ubox
47 59 0.512015162 ubox
47 71 0.009232075 ubox
48 56 0.838295116 ubox
48 57 0.141025919 ubox
48 58 0.513090319 ubox
48 76 0.005010855 ubox
49 55 0.803994037 ubox
49 56 0.124884451 ubox
49 57 0.512736902 ubox
49 58 0.005268262 ubox
49 75 0.004686189 ubox
50 56 0.515304813 ubox
50 57 0.030565634 ubox
50 58 0.005266903 ubox
51 55 0.464359544 ubox
51 56 0.028263626 ubox
51 57 0.006586936 ubox
51 58 0.003427745 ubox
52 56 0.007954602 ubox
52 57 0.007737902 ubox
52 58 0.003723134 ubox
52 77 0.008666206 ubox
52 82 0.003242296 ubox
53 57 0.003850477 ubox
53 76 0.010588979 ubox
53 81 0.003332248 ubox
53 85 0.005335273 ubox
54 75 0.010605952 ubox
54 80 0.003390653 ubox
54 81 0.003390554 ubox
54 84 0.007264756 ubox
55 63 0.011651907 ubox
55 68 0.003658896 ubox
55 69 0.010170762 ubox
55 74 0.010587021 ubox
56 62 0.012204193 ubox
56 67 0.004901602 ubox
56 68 0.019927994 ubox
56 73 0.010485255 ubox
57 61 0.012014199 ubox
57 66 0.004924922 ubox
57 67 0.026349801 ubox
57 71 0.008354059 ubox
57 79 0.019169362 ubox
58 66 0.027062972 ubox
58 70 0.008162530 ubox
58 78 0.019285495 ubox
58 83 0.069997482 ubox
59 65 0.027084814 ubox
59 77 0.019077092 ubox
59 81 0.005074256 ubox
59 82 0.069988072 ubox
60 76 0.038821213 ubox
60 77 0.079089650 ubox
60 80 0.006151658 ubox
60 81 0.069883042 ubox
61 75 0.037913973 ubox
61 76 0.142585408 ubox
61 77 0.893805397 ubox
61 80 0.049608226 ubox
62 75 0.141341279 ubox
62 76 0.987507061 ubox
62 77 0.009141615 ubox
63 75 0.988008062 ubox
63 76 0.006900452 ubox
64 74 0.998367497 ubox
65 73 0.999381410 ubox
65 78 0.005833604 ubox
66 72 0.998634300 ubox
66 77 0.005986962 ubox
67 76 0.005963707 ubox
68 75 0.005636324 ubox
68 87 0.016067686 ubox
69 86 0.027286842 ubox
70 77 0.004544504 ubox
70 85 0.029247586 ubox
71 76 0.004667276 ubox
71 84 0.029256203 ubox
72 83 0.029256285 ubox
73 82 0.029202485 ubox
74 81 0.028805713 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
36 86 0.9500000 lbox
37 85 0.9500000 lbox
38 84 0.9500000 lbox
39 83 0.9500000 lbox
40 82 0.9500000 lbox
41 81 0.9500000 lbox
42 80 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
61 77 0.9500000 lbox
62 76 0.9500000 lbox
63 75 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
showpage
end
%%EOF
