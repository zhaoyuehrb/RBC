%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCGGGAGGCGGAGGCGCGGGGGAGGAGGCCCCGCUUGGCUCCUCAGCCCCGGAUGCUGCAUGACUUCAUCCUUCCGCCGGCUCCCCUGCUGAGGUAGGGCCGGUCCGGCAGCAAGCCCGCCGCCCGCGCCCCGCCGCAGUCCCGCUCCCGCCCCGCGCCCACCCCGCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[73.00492096 678.33367920]
[75.53340149 659.11761475]
[75.79664612 644.11993408]
[76.05989838 629.12219238]
[73.42535400 625.10705566]
[73.30503845 619.38861084]
[76.60478973 613.60528564]
[77.39421082 598.62609863]
[78.18363190 583.64685059]
[70.31994629 574.43109131]
[70.87322235 561.92736816]
[80.09210205 552.87939453]
[81.14427948 537.91638184]
[82.19646454 522.95330811]
[83.24864960 507.99023438]
[72.59120941 490.33392334]
[84.75591278 472.71499634]
[85.01916504 457.71731567]
[85.28240967 442.71960449]
[85.54566193 427.72192383]
[85.80890656 412.72424316]
[86.07215881 397.72656250]
[86.33540344 382.72885132]
[86.59865570 367.73117065]
[86.86190033 352.73348999]
[76.36374664 342.22994995]
[76.41707611 327.01638794]
[87.50533295 316.07617188]
[87.76858521 301.07849121]
[88.03182983 286.08081055]
[88.29508209 271.08312988]
[76.13853455 264.82534790]
[67.82923889 253.88406372]
[65.03751373 240.36419678]
[68.36518860 226.89794922]
[77.21700287 216.13226318]
[89.90617371 210.20855713]
[90.43258667 195.21780396]
[90.95899963 180.22703552]
[91.35385132 165.23223877]
[91.61709595 150.23454285]
[91.88034821 135.23686218]
[92.14359283 120.23916626]
[79.30547333 106.56380463]
[81.91460419 87.98894501]
[73.05528259 75.88471222]
[64.19596100 63.78047943]
[55.33664322 51.67624664]
[46.47732162 39.57201385]
[37.61800003 27.46778297]
[28.75867844 15.36355209]
[13.35412788 15.28616428]
[1.09224510 6.25845051]
[-3.44887829 -8.08875084]
[1.27246583 -22.19005966]
[-7.58685541 -34.29429245]
[-16.44617653 -46.39852524]
[-24.06299782 -51.49427032]
[-25.35255432 -58.79382324]
[-33.99808121 -71.05167389]
[-42.64361191 -83.30952454]
[-51.28913879 -95.56736755]
[-66.68995667 -95.91509247]
[-78.79151917 -105.15660858]
[-83.08015442 -119.58129883]
[-78.11206055 -133.59757996]
[-86.75758362 -145.85542297]
[-102.16586304 -145.08831787]
[-115.53147125 -152.79312134]
[-122.58948517 -166.51129150]
[-121.08771515 -181.86538696]
[-111.50538635 -193.95597839]
[-96.90016937 -198.92500305]
[-81.93254089 -195.18685913]
[-71.37861633 -183.93438721]
[-68.60611725 -168.75819397]
[-74.49974060 -154.50094604]
[-65.85420990 -142.24310303]
[-50.98352051 -142.21923828]
[-38.83464813 -133.33840942]
[-34.19035721 -118.83724213]
[-39.03129196 -104.21289825]
[-30.38576317 -91.95504761]
[-21.74023438 -79.69720459]
[-13.09470654 -67.43935394]
[-4.34194422 -55.25784302]
[4.51737690 -43.15361404]
[13.37669754 -31.04938126]
[28.24551582 -31.28649139]
[40.54837418 -22.62025261]
[45.44644547 -8.20282173]
[40.86291122 6.50423098]
[49.72223282 18.60846329]
[58.58155441 30.71269417]
[67.44087219 42.81692505]
[76.30019379 54.92115784]
[85.15951538 67.02539062]
[94.01883698 79.12962341]
[100.64732361 78.29912567]
[107.21451569 79.52323914]
[113.09864807 82.68606567]
[125.72391510 74.58652496]
[138.34918213 66.48697662]
[150.97445679 58.38743591]
[163.52816772 50.17741394]
[176.00933838 41.85754776]
[188.49052429 33.53768158]
[191.78996277 21.04899979]
[202.38107300 14.37983608]
[214.28091431 16.65176201]
[226.90617371 8.55221939]
[239.53144836 0.45267645]
[252.15670776 -7.64686632]
[252.06619263 -23.07396507]
[260.34985352 -36.08874893]
[274.36437988 -42.53824997]
[289.63784790 -40.36445618]
[301.29647827 -30.26101303]
[305.62008667 -15.45189762]
[301.22903442 -0.66264248]
[289.52444458 9.38755512]
[274.24127197 11.49171257]
[260.25625610 4.97840214]
[247.63098145 13.07794476]
[235.00572205 21.17748833]
[222.38044739 29.27703094]
[215.19604492 45.27443695]
[196.81037903 46.01885986]
[184.32920837 54.33872604]
[171.84802246 62.65859222]
[168.01519775 69.00334167]
[159.07400513 71.01270294]
[146.44873047 79.11225128]
[133.82345581 87.21179199]
[121.19819641 95.31133270]
[118.95861816 110.57912445]
[107.14128113 120.50241852]
[106.87803650 135.50010681]
[106.61478424 150.49778748]
[106.35153961 165.49548340]
[109.33666992 174.15986633]
[105.94976044 180.75344849]
[105.42334747 195.74421692]
[104.89692688 210.73497009]
[118.99759674 219.34355164]
[126.79574585 233.80158997]
[126.25023651 250.12568665]
[117.60414124 263.87207031]
[103.29277039 271.34637451]
[103.02951813 286.34405518]
[102.76627350 301.34173584]
[102.50302124 316.33944702]
[113.20051575 327.66204834]
[112.71989441 342.86807251]
[101.85959625 352.99673462]
[101.59634399 367.99441528]
[101.33309937 382.99209595]
[101.06984711 397.98980713]
[100.80660248 412.98748779]
[100.54335022 427.98516846]
[100.28010559 442.98287964]
[100.01685333 457.98056030]
[99.75360870 472.97824097]
[107.18756866 478.86227417]
[111.00794983 487.38839722]
[110.46736145 496.57757568]
[105.81500244 504.36022949]
[98.21170044 509.04241943]
[97.15951538 524.00549316]
[96.10733032 538.96850586]
[95.05515289 553.93157959]
[103.50782013 570.27600098]
[93.16284180 584.43627930]
[92.37342072 599.41546631]
[91.58399963 614.39471436]
[91.05758667 629.38543701]
[90.79433441 644.38317871]
[90.53108978 659.38085938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[7 175]
[8 174]
[9 173]
[12 171]
[13 170]
[14 169]
[15 168]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[28 152]
[29 151]
[30 150]
[31 149]
[37 144]
[38 143]
[39 142]
[40 140]
[41 139]
[42 138]
[43 137]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[55 88]
[56 87]
[57 86]
[59 85]
[60 84]
[61 83]
[62 82]
[66 78]
[67 77]
[101 135]
[102 134]
[103 133]
[104 132]
[105 130]
[106 129]
[107 128]
[110 126]
[111 125]
[112 124]
[113 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
