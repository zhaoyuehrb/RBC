%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACACUGAAUCAUCAUUUGUAGUUUGGGGGGCUUUACAUGCCUGCAGUGGUGAAAACUGAAAUUUUGUCCCACUUAAGGGAGUUUCUUCUUCCCUUUAUUAAUUGCAAAAUAAAUAUAUGUCACUUCAGAGGGCAGCAGCUGGACUACCUAUGUUUGUGGCGCUACACCAACCUGAACUUCGCUUCCUGAGACCUAAGAUUCAGCCCCGUGCUCAGCAGACAUCAGGGAUCACCGACUCUGUGCCAGGAGCUGU\
UCUUG\
) } def
/len { sequence length } bind def

/coor [
[394.44836426 109.99261475]
[382.79473877 94.76821136]
[367.82760620 95.76052094]
[352.86047363 96.75282288]
[337.89331055 97.74513245]
[335.38034058 111.25623322]
[329.70010376 123.78108215]
[321.17898560 134.58848572]
[310.30944824 143.04626465]
[297.72137451 148.65824890]
[284.14575195 151.09336853]
[270.37222290 150.20516968]
[257.20294189 146.04064941]
[245.40615845 138.83775330]
[235.67114258 129.01182556]
[228.56808472 117.13160706]
[224.51458740 103.88636780]
[209.52790833 104.51811218]
[194.54121399 105.14985657]
[179.55451965 105.78159332]
[164.56782532 106.41333771]
[149.58114624 107.04508209]
[134.59445190 107.67682648]
[119.60775757 108.30856323]
[104.62106323 108.94030762]
[89.95261383 112.07664490]
[76.01796722 117.62871552]
[62.08331680 123.18078613]
[48.14866638 128.73286438]
[35.20365524 136.31089783]
[23.54078865 145.74369812]
[11.87791920 155.17648315]
[0.21505074 164.60926819]
[0.11364818 180.24652100]
[-10.05479336 192.12663269]
[-25.48904800 194.64015198]
[-38.90153122 186.60029602]
[-43.95927811 171.80322266]
[-38.27417755 157.23567200]
[-24.53055763 149.77598572]
[-9.21773815 152.94639587]
[2.44513083 143.51361084]
[14.10799980 134.08082581]
[25.77086830 124.64803314]
[18.74442291 111.39476776]
[11.71861458 98.14267731]
[-2.63385153 102.50234222]
[-16.98631668 106.86201477]
[-31.33878326 111.22167969]
[-37.30802155 125.67513275]
[-51.19506454 132.86428833]
[-66.44287872 129.39466858]
[-75.85190582 116.90450287]
[-74.97949219 101.29127502]
[-64.23757172 89.92707062]
[-48.69814301 88.17771912]
[-35.69845200 96.86921692]
[-21.34598732 92.50954437]
[-6.99352074 88.14987946]
[7.35894537 83.79020691]
[-7.32666492 80.73523712]
[-2.52886915 66.52323151]
[8.07025433 55.90915680]
[22.27548409 51.09133148]
[37.14472580 53.06759262]
[49.59836578 61.42863083]
[57.05707932 74.44275665]
[57.97607040 89.41458130]
[52.16359329 103.24517822]
[42.59659195 114.79821014]
[56.53124237 109.24613953]
[70.46589661 103.69406128]
[84.40054321 98.14199066]
[84.94172668 90.66154480]
[72.52621460 82.24399567]
[86.02409363 75.70064545]
[86.56527710 68.22019196]
[73.57489777 60.72019577]
[60.58451462 53.22019577]
[47.59413528 45.72019577]
[34.60375214 38.22019577]
[21.61337280 30.72019577]
[8.62299061 23.22019577]
[-6.00866508 28.73822594]
[-20.74688721 23.51148415]
[-28.63273621 10.00787735]
[-25.94275856 -5.39660358]
[-13.94707584 -15.42843437]
[1.69031537 -15.35089111]
[13.58591747 -5.20058727]
[16.12299156 10.22981358]
[29.11337280 17.72981453]
[42.10375214 25.22981453]
[55.09413528 32.72981262]
[68.08451843 40.22981262]
[81.07489777 47.72981262]
[94.06527710 55.22981262]
[100.42131042 62.42412949]
[104.60730743 70.36132812]
[106.56333160 78.57157135]
[106.31856537 86.58624268]
[103.98932648 93.95362091]
[118.97601318 93.32187653]
[133.96270752 92.69013214]
[148.94940186 92.05838776]
[163.93608093 91.42665100]
[178.92277527 90.79490662]
[193.90946960 90.16316223]
[208.89616394 89.53141785]
[223.88284302 88.89967346]
[227.67790222 73.01740265]
[235.78463745 58.85855484]
[247.54017639 47.56505585]
[261.98773193 40.04517746]
[277.95440674 36.90048599]
[294.14657593 38.37775040]
[309.25457764 44.34957123]
[322.05865479 54.32532883]
[331.52743530 67.49150848]
[336.90103149 82.77799225]
[351.86816406 81.78568268]
[366.83529663 80.79337311]
[381.80242920 79.80107117]
[386.10879517 69.23428345]
[394.00085449 61.06414032]
[404.31881714 56.43650055]
[415.56658936 55.98062897]
[426.12866211 59.72388840]
[434.50228882 67.09326935]
[439.51101685 77.00274658]
[454.50424194 76.55143738]
[469.49743652 76.10012817]
[484.49066162 75.64881897]
[499.48385620 75.19750977]
[514.47705078 74.74619293]
[529.47027588 74.29488373]
[544.46350098 73.84357452]
[559.45672607 73.39226532]
[570.25701904 62.16767883]
[585.46868896 61.92356873]
[596.10302734 72.28917694]
[611.09625244 71.83786774]
[626.08947754 71.38655853]
[641.08270264 70.93524170]
[656.07287598 70.39370728]
[671.05957031 69.76196289]
[677.89691162 64.53157806]
[685.59362793 64.06006622]
[691.45471191 67.54386139]
[706.22680664 64.93914032]
[720.99896240 62.33441925]
[735.75512695 59.64083862]
[750.49481201 56.85850143]
[765.23449707 54.07616425]
[779.97418213 51.29382324]
[794.71386719 48.51148605]
[809.45361328 45.72914886]
[824.19329834 42.94681168]
[838.93298340 40.16447067]
[853.63812256 37.20492172]
[868.30657959 34.06858826]
[882.97503662 30.93225479]
[897.64343262 27.79592133]
[912.31188965 24.65958786]
[913.74078369 14.22890759]
[917.98638916 4.61773252]
[924.70782471 -3.43097734]
[933.37341309 -9.29854584]
[943.30249023 -12.53813076]
[953.71917725 -12.90873909]
[963.81268311 -10.39311409]
[972.80072021 -5.19817972]
[979.98986816 2.26192880]
[984.82928467 11.39886189]
[999.65979004 9.15047646]
[1014.49035645 6.90209103]
[1029.32092285 4.65370512]
[1044.15136719 2.40531969]
[1058.96813965 0.06771954]
[1073.77050781 -2.35901046]
[1088.57287598 -4.78574038]
[1099.06066895 -20.59192657]
[1117.46069336 -23.62823868]
[1131.96362305 -12.42115211]
[1146.70336914 -15.20349026]
[1161.44299316 -17.98582840]
[1175.88574219 -26.86523056]
[1188.41625977 -15.44498634]
[1180.91113281 -0.24270864]
[1164.22534180 -3.24613404]
[1149.48571777 -0.46379593]
[1134.74597168 2.31854200]
[1130.52844238 12.88027287]
[1121.65319824 20.18115234]
[1110.24121094 22.32715034]
[1099.09265137 18.67446709]
[1090.99963379 10.01665783]
[1076.19726562 12.44338703]
[1061.39489746 14.87011719]
[1055.32165527 19.04048157]
[1046.39978027 17.23585510]
[1031.56921387 19.48423958]
[1016.73870850 21.73262596]
[1001.90820312 23.98101044]
[987.07763672 26.22939682]
[981.01513672 44.90760040]
[966.20983887 57.92918777]
[946.75402832 61.58664322]
[928.08123779 54.77593613]
[915.44824219 39.32803726]
[900.77978516 42.46437073]
[886.11132812 45.60070419]
[871.44287109 48.73703766]
[856.77447510 51.87337112]
[853.48626709 55.29801178]
[848.02246094 56.71253967]
[841.71533203 54.90416718]
[826.97564697 57.68650436]
[812.23590088 60.46884155]
[797.49621582 63.25118256]
[782.75653076 66.03351593]
[768.01684570 68.81585693]
[753.27716064 71.59819794]
[738.53747559 74.38053131]
[732.56640625 78.69587708]
[723.60363770 77.10653687]
[708.83154297 79.71125793]
[694.05944824 82.31597900]
[707.87158203 88.16608429]
[718.26123047 98.98532104]
[723.54718018 113.02308655]
[722.87414551 128.00798035]
[716.35107422 141.51536560]
[705.03338623 151.35964966]
[690.75238037 155.94798279]
[675.81878662 154.53796387]
[662.64898682 147.35769653]
[653.37390137 135.56903076]
[649.49426270 121.07942963]
[651.63787842 106.23339081]
[659.45788574 93.43309021]
[671.69134521 84.74865723]
[656.70465088 85.38040161]
[650.17462158 88.79133606]
[641.53399658 85.92845154]
[626.54077148 86.37976074]
[611.54754639 86.83107758]
[596.55438232 87.28238678]
[586.56268311 98.26885223]
[571.36389160 98.94013214]
[559.90802002 88.38547516]
[544.91479492 88.83678436]
[529.92156982 89.28809357]
[514.92840576 89.73940277]
[499.93518066 90.19071198]
[484.94195557 90.64202881]
[469.94876099 91.09333801]
[454.95553589 91.54464722]
[439.96234131 91.99595642]
[430.31103516 108.03646851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 123]
[3 122]
[4 121]
[5 120]
[17 110]
[18 109]
[19 108]
[20 107]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[26 73]
[27 72]
[28 71]
[29 70]
[30 44]
[31 43]
[32 42]
[33 41]
[46 60]
[47 59]
[48 58]
[49 57]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[130 259]
[131 258]
[132 257]
[133 256]
[134 255]
[135 254]
[136 253]
[137 252]
[138 251]
[141 248]
[142 247]
[143 246]
[144 245]
[145 243]
[146 242]
[149 228]
[150 227]
[151 226]
[152 224]
[153 223]
[154 222]
[155 221]
[156 220]
[157 219]
[158 218]
[159 217]
[160 214]
[161 213]
[162 212]
[163 211]
[164 210]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[179 199]
[180 198]
[181 197]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
