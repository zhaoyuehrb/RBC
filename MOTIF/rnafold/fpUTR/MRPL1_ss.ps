%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGGGUCCUGGGCAACACGGAGGACUAACAGUAACACCGCCACGCCGGCAGCAAAGCUCAUUUUGGUCCCCGCCCCGUUCCUCUUUCUCUUUUUAACUCCUUCCCUCUUUGCGGAUUCUAGAACGGAACCUUUUUUUAAUUCUUCCCAGUAGAAACGUAGGAACAAUUUCGUGAACGCAAUCCGGAGUGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[117.40489960 250.66802979]
[109.67060852 263.75424194]
[97.51417542 272.88055420]
[82.78936005 276.65524292]
[67.74160004 274.50274658]
[54.66556549 266.75122070]
[45.55525589 254.58280945]
[41.79992676 239.85304260]
[43.97224045 224.80812073]
[51.74093628 211.74229431]
[63.92134094 202.64799500]
[78.65602875 198.91204834]
[80.78009796 184.06320190]
[82.90416718 169.21435547]
[85.02823639 154.36550903]
[87.15230560 139.51666260]
[80.22531128 135.17941284]
[74.47891998 129.70129395]
[70.08386993 123.37185669]
[67.14432526 116.50188446]
[65.69644165 109.40880585]
[50.71933746 110.23719788]
[35.74222946 111.06558990]
[27.33687210 114.66716003]
[20.52251244 111.78694153]
[5.53419399 112.37879944]
[-9.45412540 112.97065735]
[-24.44244385 113.56250763]
[-39.43076324 114.15436554]
[-54.41908264 114.74622345]
[-69.40740204 115.33807373]
[-86.78449249 127.86722565]
[-104.64123535 117.52854919]
[-119.58472443 118.82933807]
[-134.52821350 120.13011932]
[-139.16065979 134.58059692]
[-148.94630432 146.12547302]
[-162.37022400 153.02563477]
[-177.37257385 154.25729370]
[-191.66468811 149.66381836]
[-203.07821655 139.97480774]
[-209.89405823 126.69047546]
[-224.83755493 127.99125671]
[-239.78103638 129.29203796]
[-251.15824890 140.60304260]
[-267.07791138 138.61720276]
[-275.32785034 124.85791779]
[-269.57940674 109.88010406]
[-254.24227905 105.17346954]
[-241.08181763 114.34854889]
[-226.13833618 113.04776001]
[-211.19483948 111.74697876]
[-206.77684021 97.48477173]
[-197.20909119 85.96941376]
[-183.92559814 78.97556305]
[-168.93608093 77.59653473]
[-154.52182007 82.07347107]
[-142.88858032 91.75390625]
[-135.82901001 105.18662262]
[-120.88551331 103.88584137]
[-105.94201660 102.58506012]
[-101.40586090 94.93265533]
[-93.73738098 90.15785980]
[-84.59418488 89.44207764]
[-76.02250671 93.07260132]
[-69.99925995 100.34975433]
[-55.01093674 99.75790405]
[-40.02261734 99.16604614]
[-25.03429985 98.57418823]
[-10.04597950 97.98233795]
[4.94233894 97.39048004]
[19.93065834 96.79862213]
[34.91383743 96.08847809]
[49.89094543 95.26009369]
[64.86805725 94.43170166]
[69.65626526 81.43881989]
[79.04287720 71.25876617]
[91.60540771 65.43425751]
[105.44008636 64.84797668]
[118.45034790 69.58875275]
[128.75991821 58.69320297]
[139.06947327 47.79765701]
[149.37904358 36.90211105]
[159.68859863 26.00656509]
[169.99816895 15.11102009]
[155.85720825 20.11436272]
[140.99101257 22.11344910]
[126.03067780 21.02341843]
[111.61126709 16.89054298]
[98.34490967 9.89026833]
[86.79478455 0.31976369]
[77.45120239 -11.41469193]
[70.71080780 -24.81495667]
[66.85974121 -39.31217194]
[66.06148529 -54.29091644]
[68.34992218 -69.11532593]
[73.62790680 -83.15608215]
[81.67138672 -95.81713867]
[92.13890839 -106.56102753]
[104.58610535 -114.93164062]
[118.48458099 -120.57365417]
[133.24433899 -123.24755096]
[148.23880005 -122.83982086]
[162.83142090 -119.36776733]
[176.40275574 -112.97879028]
[188.37666321 -103.94410706]
[198.24484253 -92.64724731]
[205.58837891 -79.56777954]
[210.09553528 -65.26094055]
[211.57496643 -50.33407974]
[209.96388245 -35.42084885]
[205.33065796 -21.15434074]
[197.87200928 -8.14017963]
[187.90292358 3.07062531]
[201.88244629 -2.36747789]
[215.86196899 -7.80558109]
[221.76432800 -19.28122520]
[233.52758789 -23.51992416]
[244.65538025 -18.76095772]
[258.71899414 -23.97769928]
[272.78262329 -29.19444084]
[286.84625244 -34.41118240]
[300.90988159 -39.62792206]
[303.63195801 -53.14584351]
[312.60870361 -63.46995544]
[325.41302490 -67.97192383]
[338.66256714 -65.57595825]
[348.91311646 -57.01364136]
[363.05734253 -62.00772095]
[377.20156860 -67.00180054]
[391.34579468 -71.99588013]
[395.86044312 -86.72422791]
[408.03955078 -95.86328125]
[423.08676147 -96.07589722]
[435.22851562 -87.49011230]
[449.37277222 -92.48419189]
[459.61770630 -105.28938293]
[475.78683472 -102.55244446]
[481.24676514 -87.08889008]
[470.38073730 -74.80630493]
[454.36685181 -78.33995819]
[440.22259521 -73.34587860]
[436.16354370 -59.03986740]
[424.31875610 -49.75738144]
[409.10137939 -49.22321320]
[396.33987427 -57.85165405]
[382.19564819 -52.85757446]
[368.05142212 -47.86349487]
[353.90719604 -42.86941528]
[349.73995972 -26.99603081]
[336.80514526 -16.62772369]
[320.07327271 -16.00245476]
[306.12661743 -25.56429672]
[292.06298828 -20.34755516]
[277.99935913 -15.13081264]
[263.93572998 -9.91407108]
[249.87211609 -4.69733000]
[239.42517090 9.39813232]
[221.30007935 6.17394066]
[207.32055664 11.61204433]
[193.34103394 17.05014801]
[180.89370728 25.42058182]
[170.58415222 36.31612778]
[160.27458191 47.21167374]
[149.96502686 58.10721970]
[139.65545654 69.00276947]
[129.34590149 79.89831543]
[138.37269592 103.81238556]
[128.99072266 129.76855469]
[137.45915222 142.14941406]
[145.92758179 154.53028870]
[154.39601135 166.91114807]
[162.86442566 179.29200745]
[171.33285522 191.67286682]
[178.76826477 196.99601746]
[179.83543396 204.31669617]
[188.10736084 216.82969666]
[203.64073181 219.74342346]
[212.49508667 232.83448792]
[209.41729736 248.33619690]
[196.23335266 257.05163574]
[180.76506042 253.81013489]
[172.18948364 240.53479004]
[175.59434509 225.10162354]
[167.32243347 212.58862305]
[158.95199585 200.14129639]
[150.48356628 187.76043701]
[142.01513672 175.37957764]
[133.54672241 162.99870300]
[125.07829285 150.61784363]
[116.60986328 138.23698425]
[102.00115204 141.64071655]
[99.87708282 156.48957825]
[97.75301361 171.33842468]
[95.62895203 186.18727112]
[93.50488281 201.03611755]
[106.60126495 208.75318909]
[115.74355316 220.89761353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[21 75]
[22 74]
[23 73]
[25 72]
[26 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[33 61]
[34 60]
[35 59]
[42 52]
[43 51]
[44 50]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[114 161]
[115 160]
[116 159]
[119 157]
[120 156]
[121 155]
[122 154]
[123 153]
[128 149]
[129 148]
[130 147]
[131 146]
[135 142]
[136 141]
[169 191]
[170 190]
[171 189]
[172 188]
[173 187]
[174 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
