%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCGUCCGUCCUGCCUCCAUGGACCCGCCCGGGAACGGCCACCGCUGAGGACCCCACGCCCACUAGGAUCCCGGCUGGGUCGCACCCAGCUACCGCACCGUGACCUCCGCGGGCUGUGCCGGCUCCCGGCGCCUCUGCCCGCAGCGCUCGCCGUCGGGCUAGGGCUCCGCCGCCGCCACGCCUCGCGCCCGGCACUCACCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[104.71990967 194.69995117]
[102.47365570 179.86907959]
[100.22740936 165.03822327]
[97.98115540 150.20736694]
[95.73490906 135.37651062]
[94.19597626 131.51167297]
[93.11824036 127.60591888]
[85.78153992 140.68922424]
[78.44484711 153.77253723]
[71.10815430 166.85583496]
[63.77146149 179.93914795]
[56.43476486 193.02244568]
[63.76583862 206.59664917]
[62.57157898 221.97772217]
[53.23307037 234.25761414]
[38.73019791 239.51786804]
[23.69077301 236.07994080]
[12.91382504 225.04087830]
[9.83823681 209.92320251]
[15.44541740 195.55090332]
[27.94613647 186.51013184]
[43.35145950 185.68576050]
[50.68815231 172.60244751]
[58.02484894 159.51914978]
[65.36154175 146.43583679]
[72.69823456 133.35252380]
[80.03493500 120.26922607]
[72.00453949 105.06946564]
[74.19499207 88.01889801]
[85.80657196 75.34250641]
[82.01511383 60.82958603]
[78.22364807 46.31666565]
[74.43218231 31.80374908]
[70.64071655 17.29083061]
[66.96935272 13.57592201]
[65.26187897 9.25603199]
[65.41974640 5.18093777]
[67.02125549 2.03803325]
[63.88787842 -12.63104820]
[60.75450134 -27.30012894]
[57.62112427 -41.96921158]
[54.48774719 -56.63829422]
[40.46240234 -63.00978088]
[32.96573257 -76.26320648]
[34.69024277 -91.21279144]
[44.76638412 -102.14939880]
[41.63300705 -116.81848145]
[38.49963379 -131.48756409]
[35.36625671 -146.15664673]
[28.52627945 -159.50634766]
[18.45028496 -170.61825562]
[8.37429142 -181.73014832]
[-1.70170307 -192.84205627]
[-11.09976768 -192.04473877]
[-19.68337250 -195.60910034]
[-25.57509232 -202.61853027]
[-27.54974556 -211.41877747]
[-25.28766823 -220.00738525]
[-34.85250092 -231.56221008]
[-44.41733551 -243.11703491]
[-53.98217010 -254.67185974]
[-80.07269287 -250.43260193]
[-102.58097839 -272.88278198]
[-116.22545624 -279.11401367]
[-132.49002075 -277.01739502]
[-142.22157288 -290.21697998]
[-135.40911865 -305.13415527]
[-119.06073761 -306.42343140]
[-109.99423218 -292.75851440]
[-96.34975433 -286.52728271]
[-91.48103333 -292.23214722]
[-102.89078522 -301.96957397]
[-107.90322876 -316.10729980]
[-93.15335083 -313.37933350]
[-81.74359894 -303.64190674]
[-76.87488556 -309.34677124]
[-85.17325592 -321.84225464]
[-93.47161865 -334.33773804]
[-101.76998901 -346.83322144]
[-110.06835938 -359.32870483]
[-118.36672974 -371.82418823]
[-126.66510010 -384.31967163]
[-134.96347046 -396.81515503]
[-148.76286316 -406.66467285]
[-143.11831665 -422.65139771]
[-126.19378662 -421.65301514]
[-122.46798706 -405.11352539]
[-114.16961670 -392.61804199]
[-105.87124634 -380.12255859]
[-97.57287598 -367.62707520]
[-89.27450562 -355.13159180]
[-80.97614288 -342.63610840]
[-72.67777252 -330.14062500]
[-64.37940216 -317.64514160]
[-54.43416595 -314.76077271]
[-46.00650024 -309.48895264]
[-39.62107849 -302.41888428]
[-35.60228729 -294.23953247]
[-34.06081009 -285.67672729]
[-34.89876175 -277.43103027]
[-37.83206940 -270.12094116]
[-42.42734528 -264.23669434]
[-32.86251450 -252.68186951]
[-23.29767799 -241.12704468]
[-13.73284531 -229.57221985]
[6.16637325 -224.09934998]
[9.41019726 -202.91804504]
[19.48619270 -191.80615234]
[29.56218719 -180.69424438]
[39.63817978 -169.58235168]
[40.84630203 -171.74722290]
[42.56470490 -173.71076965]
[52.47253799 -184.97286987]
[62.38037109 -196.23497009]
[72.28820038 -207.49707031]
[82.19603729 -218.75915527]
[92.10386658 -230.02125549]
[95.02895355 -251.24893188]
[114.84365845 -257.02026367]
[124.23373413 -268.71755981]
[133.62380981 -280.41485596]
[143.01388550 -292.11215210]
[152.40394592 -303.80941772]
[161.79402161 -315.50671387]
[171.18409729 -327.20401001]
[176.38441467 -343.34069824]
[193.33007812 -342.81069946]
[197.51181030 -326.38055420]
[182.88139343 -317.81393433]
[173.49131775 -306.11663818]
[164.10124207 -294.41934204]
[154.71116638 -282.72207642]
[145.32109070 -271.02478027]
[135.93101501 -259.32748413]
[126.54094696 -247.63020325]
[128.93186951 -239.07656860]
[127.08970642 -230.24763489]
[121.30401611 -223.15043640]
[112.77495575 -219.45745850]
[103.36596680 -220.11341858]
[93.45813751 -208.85133362]
[83.55030060 -197.58923340]
[73.64246368 -186.32713318]
[63.73463440 -175.06503296]
[53.82680130 -163.80293274]
[50.03533554 -149.29002380]
[53.16871262 -134.62094116]
[56.30208969 -119.95185852]
[59.43546677 -105.28277588]
[73.10058594 -99.41740417]
[80.78249359 -86.47706604]
[79.35498047 -71.31739807]
[69.15682983 -59.77166748]
[72.29020691 -45.10258865]
[75.42358398 -30.43350601]
[78.55696106 -15.76442528]
[81.69033813 -1.09534359]
[85.15364075 13.49936581]
[88.94509888 28.01228523]
[92.73656464 42.52520370]
[96.52803040 57.03812027]
[100.31949615 71.55104065]
[119.00761414 75.70785522]
[132.17124939 91.64402771]
[132.83921814 113.83020782]
[144.60673523 123.13210297]
[156.37426758 132.43400574]
[168.14179993 141.73590088]
[181.02081299 141.01477051]
[190.63073730 149.00588989]
[192.16792297 161.00535583]
[203.79431152 170.48307800]
[219.30720520 169.07324219]
[230.96299744 178.85061646]
[232.21147156 193.64848328]
[243.83784485 203.12620544]
[259.53350830 201.27626038]
[271.88818359 211.13209534]
[273.57205200 226.84643555]
[263.58615112 239.09620667]
[247.85490417 240.61387634]
[235.71138000 230.49900818]
[234.36013794 214.75259399]
[222.73374939 205.27487183]
[207.98789978 207.03431702]
[196.06208801 197.58818054]
[194.31658936 182.10946655]
[182.69020081 172.63174438]
[165.24108887 170.76841736]
[158.83990479 153.50341797]
[147.07237244 144.20152283]
[135.30484009 134.89962769]
[123.53731537 125.59774017]
[110.56576538 133.13026428]
[112.81201935 147.96112061]
[115.05826569 162.79197693]
[117.30451965 177.62283325]
[119.55076599 192.45368958]
[134.03617859 197.39653015]
[144.55690002 208.51286316]
[148.69534302 223.24826050]
[145.50054932 238.21661377]
[135.70663452 249.97833252]
[121.56417084 255.83062744]
[106.32299805 254.42871094]
[93.48543549 246.09471130]
[86.00144196 232.74374390]
[85.59079742 217.44374084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[46 149]
[47 148]
[48 147]
[49 146]
[50 110]
[51 109]
[52 108]
[53 107]
[58 105]
[59 104]
[60 103]
[61 102]
[63 70]
[64 69]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[165 193]
[166 192]
[167 191]
[168 190]
[171 188]
[172 187]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
