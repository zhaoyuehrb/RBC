%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HJURP)
} def

/sequence { (\
CUAUUUGAGUUUGUGGCGCGCGAGGCCCUGCAGUCCGGGUUGGCGCUUGGGUACUGGCUGGGUCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.109926922 ubox
1 16 0.428747901 ubox
1 24 0.012650765 ubox
1 61 0.023965577 ubox
1 62 0.011251943 ubox
2 8 0.109051832 ubox
2 13 0.038385433 ubox
2 15 0.436907947 ubox
2 23 0.014729135 ubox
2 60 0.023987227 ubox
2 61 0.010756427 ubox
3 10 0.033511751 ubox
3 12 0.043613842 ubox
3 14 0.438469409 ubox
3 59 0.021599828 ubox
3 63 0.033397538 ubox
4 9 0.033592383 ubox
4 13 0.437546608 ubox
4 16 0.006748531 ubox
4 23 0.021488741 ubox
4 24 0.022103883 ubox
4 62 0.033054787 ubox
5 15 0.008710203 ubox
5 16 0.011743045 ubox
5 22 0.021747664 ubox
5 23 0.135714748 ubox
5 57 0.010147696 ubox
5 60 0.003506382 ubox
5 61 0.031412409 ubox
5 62 0.086230467 ubox
6 13 0.011403144 ubox
6 15 0.015036415 ubox
6 18 0.019703494 ubox
6 20 0.172441303 ubox
6 22 0.143321991 ubox
6 23 0.008839402 ubox
6 24 0.003970174 ubox
6 49 0.003291967 ubox
6 56 0.008637689 ubox
6 60 0.025865645 ubox
6 61 0.116330786 ubox
6 66 0.022240057 ubox
7 12 0.019216186 ubox
7 14 0.013080802 ubox
7 17 0.026408083 ubox
7 19 0.232259694 ubox
7 21 0.148691631 ubox
7 48 0.003766136 ubox
7 55 0.003174446 ubox
7 59 0.008862375 ubox
7 64 0.011751733 ubox
7 65 0.037518311 ubox
8 47 0.003641634 ubox
8 55 0.029505095 ubox
8 59 0.132034879 ubox
8 63 0.010844361 ubox
9 17 0.272280630 ubox
9 19 0.156184212 ubox
9 21 0.050224686 ubox
9 26 0.004009205 ubox
9 54 0.030118623 ubox
9 58 0.133286954 ubox
10 16 0.269769163 ubox
10 18 0.152732744 ubox
10 20 0.048901979 ubox
10 23 0.032060720 ubox
10 24 0.107696512 ubox
10 25 0.003744587 ubox
10 53 0.029719855 ubox
10 57 0.132983084 ubox
10 61 0.009352248 ubox
11 15 0.198639533 ubox
11 22 0.024996668 ubox
11 23 0.565282193 ubox
11 24 0.005167597 ubox
11 33 0.009890455 ubox
11 50 0.003261826 ubox
11 51 0.008833275 ubox
11 56 0.113639536 ubox
11 60 0.008040241 ubox
12 18 0.041085894 ubox
12 20 0.083779729 ubox
12 22 0.597312878 ubox
12 23 0.017525064 ubox
12 32 0.013127942 ubox
12 49 0.007108940 ubox
12 50 0.008415913 ubox
12 53 0.003388215 ubox
12 66 0.170099089 ubox
13 17 0.045449314 ubox
13 19 0.114548046 ubox
13 21 0.626154287 ubox
13 31 0.013630128 ubox
13 46 0.005686885 ubox
13 48 0.005571341 ubox
13 52 0.003471736 ubox
13 54 0.131495488 ubox
13 58 0.008605476 ubox
13 65 0.290234484 ubox
14 18 0.107226050 ubox
14 20 0.624992013 ubox
14 22 0.031506652 ubox
14 30 0.013490082 ubox
14 45 0.005702936 ubox
14 49 0.015583378 ubox
14 51 0.003606271 ubox
14 53 0.130712954 ubox
14 56 0.005884077 ubox
14 57 0.007617152 ubox
14 66 0.107172329 ubox
15 19 0.595460261 ubox
15 21 0.047148016 ubox
15 27 0.004313346 ubox
15 28 0.006381053 ubox
15 29 0.011790660 ubox
15 44 0.005785780 ubox
15 47 0.054701329 ubox
15 48 0.020593451 ubox
15 52 0.119557737 ubox
15 55 0.010485554 ubox
15 59 0.005180236 ubox
15 64 0.353611401 ubox
15 65 0.182380840 ubox
16 26 0.004515120 ubox
16 27 0.006401221 ubox
16 28 0.011816512 ubox
16 46 0.059992669 ubox
16 47 0.023898038 ubox
16 52 0.044478467 ubox
16 54 0.011330497 ubox
16 58 0.005303092 ubox
16 63 0.356257224 ubox
16 64 0.181325989 ubox
17 25 0.004657740 ubox
17 42 0.005759509 ubox
17 45 0.060017659 ubox
17 49 0.051562284 ubox
17 51 0.059493704 ubox
17 57 0.005292912 ubox
17 60 0.011619415 ubox
17 62 0.399425049 ubox
17 66 0.027701577 ubox
18 26 0.013896883 ubox
18 40 0.004305050 ubox
18 41 0.004062352 ubox
18 44 0.059961525 ubox
18 46 0.169179897 ubox
18 48 0.026517407 ubox
18 52 0.015715205 ubox
18 59 0.011996757 ubox
18 63 0.013886371 ubox
18 65 0.029655464 ubox
19 25 0.013979145 ubox
19 39 0.005956805 ubox
19 43 0.059859086 ubox
19 45 0.169521260 ubox
19 49 0.026817087 ubox
19 51 0.016434250 ubox
19 60 0.396947074 ubox
19 62 0.014006479 ubox
19 66 0.055297599 ubox
20 44 0.169589683 ubox
20 46 0.039289407 ubox
20 48 0.003842047 ubox
20 58 0.390901868 ubox
20 59 0.083356501 ubox
20 63 0.006900448 ubox
20 65 0.059498859 ubox
21 37 0.005999591 ubox
21 42 0.054303441 ubox
21 43 0.169451171 ubox
21 45 0.039529745 ubox
21 49 0.016571039 ubox
21 56 0.004200466 ubox
21 57 0.399765886 ubox
21 60 0.007530855 ubox
21 62 0.006990661 ubox
21 66 0.522391199 ubox
22 36 0.006000443 ubox
22 41 0.042583567 ubox
22 44 0.039288548 ubox
22 48 0.016551145 ubox
22 59 0.003965447 ubox
22 64 0.016674121 ubox
22 65 0.578919869 ubox
23 40 0.021859277 ubox
23 41 0.118274011 ubox
23 47 0.016568799 ubox
23 55 0.396779632 ubox
23 63 0.011186365 ubox
24 35 0.006118961 ubox
24 40 0.085113317 ubox
24 41 0.122726155 ubox
24 46 0.016493187 ubox
24 54 0.394572530 ubox
24 59 0.010402953 ubox
24 64 0.820953301 ubox
24 65 0.330535065 ubox
25 34 0.006149202 ubox
25 40 0.160337346 ubox
25 44 0.015776862 ubox
25 52 0.373824762 ubox
25 58 0.011474973 ubox
25 63 0.833554088 ubox
25 64 0.329442682 ubox
26 33 0.006284584 ubox
26 38 0.019528490 ubox
26 39 0.182455471 ubox
26 43 0.015729191 ubox
26 50 0.007296362 ubox
26 51 0.395233643 ubox
26 57 0.011495362 ubox
26 61 0.004045519 ubox
26 62 0.897006977 ubox
27 37 0.019355672 ubox
27 38 0.182438585 ubox
27 39 0.017376641 ubox
27 42 0.013806050 ubox
27 43 0.004432828 ubox
27 49 0.007738310 ubox
27 50 0.395272324 ubox
27 51 0.059951503 ubox
27 56 0.010960929 ubox
27 60 0.004464455 ubox
27 61 0.897027244 ubox
27 62 0.027992546 ubox
28 37 0.182348196 ubox
28 38 0.019492864 ubox
28 39 0.005330099 ubox
28 42 0.004591029 ubox
28 49 0.395004536 ubox
28 50 0.060015973 ubox
28 60 0.894621132 ubox
28 61 0.028267634 ubox
29 37 0.020051968 ubox
29 38 0.005358114 ubox
29 45 0.013203636 ubox
29 49 0.058324988 ubox
29 53 0.006860084 ubox
29 60 0.026844588 ubox
30 36 0.034279893 ubox
30 40 0.010912615 ubox
30 44 0.013792102 ubox
30 46 0.359307055 ubox
30 48 0.049751992 ubox
30 52 0.007220419 ubox
30 58 0.843925034 ubox
30 59 0.013915991 ubox
31 39 0.011004402 ubox
31 42 0.006725246 ubox
31 43 0.012574133 ubox
31 45 0.358470151 ubox
31 49 0.003974822 ubox
31 51 0.007097593 ubox
31 56 0.650696714 ubox
31 57 0.617556160 ubox
31 60 0.003418361 ubox
32 41 0.008825903 ubox
32 47 0.114489455 ubox
32 48 0.004601982 ubox
32 55 0.870385845 ubox
32 59 0.006289156 ubox
33 40 0.007416309 ubox
33 44 0.358140338 ubox
33 46 0.117626504 ubox
33 52 0.031153865 ubox
33 54 0.885409998 ubox
33 58 0.006358078 ubox
34 43 0.292447822 ubox
34 45 0.116288692 ubox
34 51 0.413763172 ubox
34 53 0.749342392 ubox
34 57 0.003884999 ubox
35 42 0.287653816 ubox
35 43 0.270991915 ubox
35 50 0.846828778 ubox
35 51 0.290996192 ubox
35 57 0.004927309 ubox
35 61 0.003237244 ubox
35 62 0.012333399 ubox
36 42 0.271963684 ubox
36 45 0.010644040 ubox
36 49 0.862069293 ubox
36 50 0.249584225 ubox
36 56 0.005028149 ubox
36 60 0.003237870 ubox
36 61 0.012465473 ubox
37 41 0.168414622 ubox
37 44 0.013750417 ubox
37 47 0.027279875 ubox
37 48 0.871995194 ubox
37 55 0.004900588 ubox
38 46 0.031803480 ubox
38 47 0.886297050 ubox
38 48 0.122418932 ubox
38 54 0.004735963 ubox
38 59 0.012544411 ubox
39 46 0.892671843 ubox
39 47 0.063063045 ubox
39 58 0.012691813 ubox
40 45 0.843020866 ubox
40 57 0.012781830 ubox
41 56 0.012567457 ubox
42 55 0.012654366 ubox
43 52 0.004692848 ubox
43 54 0.012657751 ubox
44 51 0.005188443 ubox
45 52 0.012264916 ubox
46 51 0.012378288 ubox
46 62 0.003451057 ubox
47 61 0.005082073 ubox
47 62 0.014241055 ubox
48 60 0.005401582 ubox
48 61 0.021243959 ubox
48 66 0.020303619 ubox
49 59 0.006040392 ubox
49 65 0.034248859 ubox
50 58 0.006071139 ubox
50 59 0.022748043 ubox
50 64 0.033694625 ubox
50 65 0.116235242 ubox
51 58 0.023039338 ubox
51 63 0.024648081 ubox
51 64 0.116485112 ubox
52 57 0.022460673 ubox
52 62 0.006893576 ubox
53 63 0.081889595 ubox
54 61 0.087229251 ubox
54 62 0.083813616 ubox
55 60 0.081639949 ubox
55 61 0.083088992 ubox
55 66 0.005122048 ubox
56 64 0.008242540 ubox
56 65 0.014596204 ubox
57 63 0.008442741 ubox
57 64 0.014473631 ubox
58 62 0.010497054 ubox
60 65 0.007100600 ubox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
