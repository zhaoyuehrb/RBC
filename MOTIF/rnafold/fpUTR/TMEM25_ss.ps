%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCCCACCUGCCGGGUAAGGGCCCCUCGGGCCCGUGGUCGGGCAUCGAUUGGCCCCGCCUGGCGCAGCCCCCGCCCCUGCAGCGGACUGCGGUGCUCAUCAGACCUGAGCAGUUGCUCCGGCGGCGCUCGGGGAGGGAGCCAGCAGCCUAGGGCCUAGGCCCGGGCCACC\
) } def
/len { sequence length } bind def

/coor [
[81.31112671 248.01046753]
[83.84730530 228.79542542]
[84.11656952 213.79783630]
[73.62263489 203.29008484]
[73.68206024 188.07656860]
[84.77471161 177.14080811]
[85.04397583 162.14323425]
[85.31324005 147.14564514]
[85.58250427 132.14805603]
[74.99006653 124.43425751]
[68.01953125 113.45699310]
[65.58084106 100.78624725]
[67.94194794 88.20265961]
[74.70144653 77.44733429]
[59.80345535 79.19367981]
[44.90546036 80.94002533]
[30.00746346 82.68637085]
[15.10946751 84.43271637]
[0.21147172 86.17906952]
[-14.68652344 87.92541504]
[-23.29868698 97.55651093]
[-35.76620865 98.68807220]
[-45.33707809 91.25621033]
[-60.26402283 92.73484039]
[-75.19096375 94.21347046]
[-90.11791229 95.69210052]
[-105.04485321 97.17073059]
[-115.04981995 109.10968018]
[-130.20892334 110.39658356]
[-141.52923584 100.78479767]
[-156.45617676 102.26342773]
[-171.38311768 103.74205780]
[-186.31005859 105.22069550]
[-201.22312927 106.83324432]
[-216.12112427 108.57958984]
[-231.01911926 110.32593536]
[-245.91711426 112.07228851]
[-260.81512451 113.81863403]
[-273.63558960 124.04447174]
[-288.80072021 117.80347443]
[-290.70996094 101.51584625]
[-277.39923096 91.93690491]
[-262.56146240 98.92063904]
[-247.66346741 97.17429352]
[-232.76547241 95.42794037]
[-217.86747742 93.68159485]
[-202.96948242 91.93524933]
[-196.67108154 88.02043152]
[-187.78869629 90.29374695]
[-172.86174011 88.81511688]
[-157.93479919 87.33648682]
[-143.00785828 85.85785675]
[-133.79330444 74.21192932]
[-118.67632294 72.49974823]
[-106.52348328 82.24378967]
[-91.59654236 80.76515961]
[-76.66959381 79.28652954]
[-61.74265289 77.80789185]
[-46.81570816 76.32926178]
[-33.14975357 65.34251404]
[-16.43287086 73.02742004]
[-1.53487480 71.28107452]
[13.36312103 69.53472137]
[28.26111603 67.78837585]
[43.15911102 66.04203033]
[58.05710602 64.29568481]
[72.95510101 62.54933929]
[81.55261993 50.25776672]
[78.08367920 35.66439819]
[74.61473846 21.07102966]
[71.14579773 6.47765923]
[61.53476715 1.29545867]
[56.48306274 -8.13594151]
[57.45449829 -18.56993484]
[63.88494110 -26.56362724]
[60.94208145 -41.27211380]
[57.99922180 -55.98060226]
[55.05636215 -70.68908691]
[41.25211716 -78.03597260]
[35.44790649 -92.55648041]
[40.38430786 -107.39447784]
[53.73050308 -115.54389954]
[69.18482208 -113.15685272]
[79.45021057 -101.36042023]
[79.67967224 -85.72452545]
[69.76484680 -73.63195038]
[72.70771027 -58.92346191]
[75.65056610 -44.21497345]
[78.59342957 -29.50648689]
[92.39823151 -15.99486160]
[85.73916626 3.00871730]
[89.20810699 17.60208702]
[92.67704773 32.19545746]
[96.14598846 46.78882599]
[109.09126282 54.36642456]
[123.51430511 50.24625015]
[137.89978027 45.99677658]
[152.24653625 41.61835480]
[166.59329224 37.23993301]
[180.94004822 32.86151123]
[188.86062622 17.28190613]
[205.27046204 12.33224106]
[219.89727783 20.60194206]
[234.16313171 15.96668720]
[239.15933228 -0.17623641]
[252.65171814 -10.07216072]
[269.21795654 -9.98919010]
[282.34478760 -0.15758163]
[296.52514648 -5.04817581]
[310.70547485 -9.93877029]
[324.88580322 -14.82936382]
[339.06616211 -19.71995926]
[353.24649048 -24.61055183]
[367.42684937 -29.50114632]
[374.54806519 -35.27635956]
[381.90585327 -34.34976959]
[396.17169189 -38.98502350]
[410.43753052 -43.62027740]
[424.70339966 -48.25553513]
[438.96923828 -52.89078903]
[449.53433228 -65.43315125]
[465.62918091 -62.28870773]
[470.69680786 -46.69219208]
[459.52404785 -34.68796158]
[443.60449219 -38.62494278]
[429.33865356 -33.98968506]
[415.07281494 -29.35443115]
[400.80694580 -24.71917725]
[386.54110718 -20.08392143]
[372.31744385 -15.32080460]
[358.13708496 -10.43021107]
[343.95675659 -5.53961658]
[329.77639771 -0.64902252]
[315.59606934 4.24157143]
[301.41574097 9.13216591]
[287.23538208 14.02276039]
[284.53259277 27.11591911]
[275.63537598 37.23939896]
[262.79284668 41.67181778]
[249.33250427 39.15133286]
[238.79838562 30.23253441]
[224.53253174 34.86779022]
[220.33593750 47.07101822]
[209.71235657 54.73491287]
[196.41882324 54.87226868]
[185.31846619 47.20826721]
[170.97171021 51.58668900]
[156.62495422 55.96511078]
[142.27819824 60.34353256]
[136.78004456 65.32006073]
[127.63448334 64.66928864]
[113.21144104 68.78946686]
[129.00715637 81.62251282]
[134.75672913 101.42295074]
[128.12159729 121.22587585]
[135.58270264 134.23864746]
[143.04379272 147.25140381]
[150.50489807 160.26416016]
[164.94659424 168.03392029]
[165.16812134 184.43157959]
[150.94157410 192.58862305]
[136.90200806 184.11380005]
[137.49212646 167.72526550]
[130.03103638 154.71250916]
[122.56993103 141.69973755]
[115.10883331 128.68698120]
[100.58008575 132.41732788]
[100.31082153 147.41490173]
[100.04155731 162.41249084]
[99.77229309 177.41007996]
[110.46524048 188.73696899]
[109.97851562 203.94282532]
[99.11415100 214.06710815]
[98.84488678 229.06469727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[6 170]
[7 169]
[8 168]
[9 167]
[14 67]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[30 52]
[31 51]
[32 50]
[33 49]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[68 94]
[69 93]
[70 92]
[71 91]
[75 89]
[76 88]
[77 87]
[78 86]
[95 152]
[96 151]
[97 149]
[98 148]
[99 147]
[100 146]
[103 142]
[104 141]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
