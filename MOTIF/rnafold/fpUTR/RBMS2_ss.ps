%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUCAUUCUCUGCCCGCAGCCCCCCUUCAUCUCUCUCCUCCUGCUCCUUUUCUCCUCCUUUCUCCUCCCCCUCCCUUUUUUCCUCCCUCCCUCUCCCCCUUUCCCUCGCUCCCCUCCUCCCUCCCUCCCCGUCUUUCUUACCCCCUCCCUUUCUCUCUCUCUCUCUCUCUCGCUCGUUCCCUAACAUUAAAGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[60.62208176 327.13333130]
[57.58027267 341.82168579]
[54.53846359 356.51000977]
[63.42377090 369.58010864]
[60.38265991 385.08901978]
[47.21937180 393.83566284]
[31.74345207 390.63073730]
[23.13648796 377.37573242]
[26.50483894 361.93453979]
[39.85012054 353.46820068]
[42.89193344 338.77987671]
[45.93374252 324.09152222]
[18.91943550 315.79183960]
[-6.87628984 304.24893188]
[-31.06574249 289.63635254]
[-53.28537369 272.17364502]
[-73.20124054 252.12330627]
[-90.51401520 229.78668213]
[-103.17893219 237.82408142]
[-115.84385681 245.86148071]
[-128.50877380 253.89888000]
[-124.14699554 268.35147095]
[-123.84737396 283.44494629]
[-127.63214874 298.05926514]
[-135.22047424 311.10992432]
[-146.04922485 321.62850952]
[-159.31484985 328.83447266]
[-174.03294373 332.19305420]
[-189.11134338 331.45504761]
[-203.43110657 326.67520142]
[-215.92962646 318.20825195]
[-225.67944336 306.68246460]
[-231.95701599 292.95312500]
[-234.29655457 278.03906250]
[-232.52441406 263.04699707]
[-226.77210999 249.08943176]
[-217.46650696 237.20211792]
[-205.29814148 228.26716614]
[-191.16996765 222.94761658]
[-176.13043213 221.63819885]
[-161.29551697 224.43609619]
[-147.76611328 231.13369751]
[-136.54617310 241.23396301]
[-123.88125610 233.19656372]
[-111.21633911 225.15916443]
[-98.55141449 217.12174988]
[-102.88188171 209.44914246]
[-106.91598511 201.61665344]
[-110.64785767 193.63574219]
[-114.07202911 185.51805115]
[-117.18350983 177.27543640]
[-119.97775269 168.91995239]
[-122.45066833 160.46380615]
[-124.59865570 151.91932678]
[-126.41856384 143.29901123]
[-127.90774536 134.61546326]
[-129.06402588 125.88133240]
[-129.88571167 117.10940552]
[-130.37159729 108.31248474]
[-130.52098083 99.50342560]
[-130.33364868 90.69509125]
[-129.80986023 81.90034485]
[-128.95039368 73.13203430]
[-127.75650024 64.40297699]
[-126.22991943 55.72591400]
[-124.37288666 47.11352158]
[-122.18811035 38.57838058]
[-119.67878723 30.13295746]
[-116.84857178 21.78959084]
[-113.70160675 13.56046486]
[-110.24249268 5.45760107]
[-106.47628021 -2.50716400]
[-102.40846252 -10.32219696]
[-98.04498291 -17.97608185]
[-93.39221954 -25.45763969]
[-88.45697784 -32.75594330]
[-83.24644470 -39.86032486]
[-77.76824951 -46.76041794]
[-72.03038788 -53.44613647]
[-66.04124451 -59.90771484]
[-59.80955887 -66.13571167]
[-53.34444427 -72.12104034]
[-46.65533447 -77.85494995]
[-39.75201035 -83.32907104]
[-32.64454651 -88.53540039]
[-25.34332848 -93.46633148]
[-17.85902214 -98.11466980]
[-10.20256042 -102.47361755]
[-2.38512468 -106.53681946]
[5.58186483 -110.29833221]
[13.68677139 -113.75265503]
[21.91775513 -116.89475250]
[30.26279449 -119.72003174]
[38.70969772 -122.22437286]
[47.24612808 -124.40409851]
[55.85961533 -126.25604248]
[64.53758240 -127.77749634]
[73.26734924 -128.96623230]
[82.03615570 -129.82052612]
[90.83120728 -130.33911133]
[99.63965607 -130.52124023]
[108.44863129 -130.36665344]
[117.24526215 -129.87556458]
[126.01670074 -129.04869080]
[134.75013733 -127.88725281]
[143.43281555 -126.39293671]
[152.05204773 -124.56793213]
[160.59526062 -122.41489410]
[169.04994202 -119.93698120]
[177.40377808 -117.13780212]
[185.64454651 -114.02145386]
[193.76020813 -110.59248352]
[201.73892212 -106.85590363]
[209.56901550 -102.81716156]
[217.23907471 -98.48217010]
[224.73786926 -93.85725403]
[232.05447388 -88.94916534]
[239.17817688 -83.76508331]
[246.09858704 -78.31257629]
[252.80558777 -72.59960938]
[259.28939819 -66.63452148]
[265.54049683 -60.42603302]
[271.54983521 -53.98320770]
[277.30856323 -47.31546402]
[282.80828857 -40.43253326]
[288.04101562 -33.34447098]
[292.99905396 -26.06163597]
[297.67517090 -18.59465981]
[302.06256104 -10.95445442]
[306.15478516 -3.15217686]
[309.94589233 4.80077505]
[313.43032837 12.89278412]
[316.60299683 21.11203194]
[319.45928955 29.44651031]
[321.99499512 37.88404846]
[324.20645142 46.41231537]
[326.09039307 55.01885986]
[327.64410400 63.69110870]
[328.86526489 72.41639709]
[329.75216675 81.18196869]
[330.30343628 89.97503662]
[330.51831055 98.78274536]
[330.39645386 107.59222412]
[329.93807983 116.39062500]
[329.14382935 125.16507721]
[328.01486206 133.90277100]
[326.55282593 142.59094238]
[324.75985718 151.21690369]
[322.63861084 159.76805115]
[320.19213867 168.23190308]
[317.42404175 176.59606934]
[314.33834839 184.84837341]
[310.93957520 192.97673035]
[307.23266602 200.96926880]
[303.22305298 208.81433105]
[298.91659546 216.50044250]
[294.31961060 224.01638794]
[289.43875122 231.35118103]
[284.28118896 238.49411011]
[278.85443115 245.43473816]
[273.16644287 252.16291809]
[267.22549438 258.66885376]
[261.04028320 264.94302368]
[254.61984253 270.97622681]
[247.97355652 276.75973511]
[241.11111450 282.28500366]
[234.04255676 287.54403687]
[226.77819824 292.52911377]
[234.61567688 305.31872559]
[242.45315552 318.10830688]
[250.29063416 330.89791870]
[258.12811279 343.68753052]
[273.28228760 342.23403931]
[287.50677490 347.48291016]
[297.99880981 358.34280396]
[302.71585083 372.62252808]
[300.77316284 387.47296143]
[292.60922241 399.95556641]
[300.44668579 412.74514771]
[308.28417969 425.53475952]
[322.94635010 432.87997437]
[323.64605713 449.26419067]
[309.66348267 457.83273315]
[295.38272095 449.77099609]
[295.49456787 433.37225342]
[287.65707397 420.58264160]
[279.81961060 407.79302979]
[264.99118042 409.40020752]
[250.87738037 404.38919067]
[240.29554749 393.70339966]
[235.38258362 379.42465210]
[237.16358948 364.36758423]
[245.33851624 351.52499390]
[237.50103760 338.73541260]
[229.66355896 325.94580078]
[221.82608032 313.15618896]
[213.98860168 300.36657715]
[177.96440125 316.93713379]
[139.63336182 327.08889771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[18 46]
[19 45]
[20 44]
[21 43]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
