%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCCAGAAGCUCCCCAGGCUCUAGUGCAGGAGGAGAAGGAGGAGGAGCAGGAGGUGGAGAUUCCCAGUUAAAAGGCUCCAGAAUCGUGUACCAGGCAGAGAACUGAAGUACUGGGGCCUCCUCCACUGGGUCCGAAUCAGUAGGUGACCCCGCCCCUGGAUUCUGGAAGACCUCACC\
) } def
/len { sequence length } bind def

/coor [
[109.59474945 170.59866333]
[122.55660248 163.04945374]
[137.40840149 160.94612122]
[151.95640564 164.59910583]
[141.53652954 153.80900574]
[131.11665344 143.01890564]
[120.69676971 132.22880554]
[110.27689362 121.43871307]
[104.76251984 123.29273224]
[98.96296692 123.75199890]
[93.22550964 122.78901672]
[87.89369965 120.46144104]
[76.57305908 130.30232239]
[65.25241852 140.14321899]
[53.93177032 149.98410034]
[42.69743729 159.92340088]
[31.55026436 169.96035767]
[30.09129143 182.79417419]
[20.57657051 190.92451477]
[8.47391891 190.39793396]
[-2.84672475 200.23881531]
[-3.69901514 216.02011108]
[-15.51637459 226.51419067]
[-31.28777313 225.49508667]
[-41.65631866 213.56744385]
[-40.47053909 197.80769348]
[-28.43393517 187.56584167]
[-12.68761063 188.91818237]
[-1.36696649 179.07728577]
[3.42804217 162.20848083]
[21.51330566 158.81318665]
[32.66047668 148.77622986]
[35.53543472 141.94474792]
[44.09088516 138.66345215]
[55.41152954 128.82257080]
[66.73217773 118.98168182]
[78.05281830 109.14080048]
[76.28709412 98.28793335]
[79.59352875 87.80127716]
[87.26486969 79.92391205]
[83.63603973 65.36947632]
[80.00720978 50.81504059]
[76.37837982 36.26060486]
[72.74954987 21.70616722]
[69.12072754 7.15173149]
[65.49189758 -7.40270424]
[61.86306763 -21.95713997]
[44.11217117 -34.48261261]
[45.06837463 -55.58162689]
[35.42655945 -67.07229614]
[25.78474617 -78.56295776]
[10.98705006 -84.16106415]
[8.73323345 -98.88416290]
[-0.90858114 -110.37483215]
[-18.34759712 -111.57133484]
[-29.32058716 -124.74184418]
[-27.42477417 -141.43974304]
[-37.26565933 -152.76039124]
[-47.10654449 -164.08103943]
[-56.94742966 -175.40167236]
[-66.78831482 -186.72232056]
[-71.00402069 -188.00256348]
[-74.25275421 -190.33488464]
[-76.32093811 -193.28054810]
[-77.16147614 -196.37666321]
[-76.88700867 -199.19317627]
[-85.91423798 -211.17269897]
[-101.42601013 -210.76725769]
[-114.19451904 -219.58456421]
[-119.31000519 -234.23419189]
[-114.80545044 -249.08305359]
[-102.41296387 -258.42144775]
[-86.89770508 -258.65859985]
[-74.22560120 -249.70330811]
[-69.26934052 -234.99905396]
[-73.93470001 -220.19993591]
[-64.90747833 -208.22039795]
[-55.46767044 -196.56320190]
[-45.62678528 -185.24256897]
[-35.78590012 -173.92192078]
[-25.94501495 -162.60127258]
[-16.10412979 -151.28063965]
[-3.23446226 -152.18635559]
[7.96970797 -145.40559387]
[13.29295731 -133.22715759]
[10.58208561 -120.01663971]
[20.22389984 -108.52597809]
[34.33194733 -103.74976349]
[37.27541351 -88.20477295]
[46.91722488 -76.71411133]
[56.55904007 -65.22344208]
[61.81510925 -66.40156555]
[67.19940948 -66.24799347]
[74.47154999 -79.36728668]
[81.74369812 -92.48658752]
[89.01583862 -105.60588074]
[79.05233765 -117.02973175]
[73.59978485 -131.17347717]
[73.31661987 -146.32919312]
[78.23702240 -160.66674805]
[87.76683044 -172.45480347]
[100.75527954 -180.26991272]
[115.63394928 -183.16836548]
[130.60617065 -180.80014038]
[143.86396790 -173.45121765]
[153.80639648 -162.00903320]
[159.23287964 -147.85525513]
[159.48811340 -132.69905090]
[154.54130554 -118.37059021]
[144.98977661 -106.60010529]
[131.98695374 -98.80894470]
[117.10296631 -95.93792725]
[102.13513184 -98.33373260]
[94.86299133 -85.21443939]
[87.59084320 -72.09514618]
[80.31870270 -58.97584915]
[85.77458954 -47.96903229]
[84.41542816 -35.52278519]
[76.41750336 -25.58596802]
[80.04633331 -11.03153324]
[83.67516327 3.52290320]
[87.30398560 18.07733917]
[90.93281555 32.63177490]
[94.56164551 47.18621063]
[98.19047546 61.74064636]
[101.81930542 76.29508209]
[120.79376221 88.47383118]
[121.06699371 111.01883698]
[131.48686218 121.80893707]
[141.90673828 132.59902954]
[152.32661438 143.38912964]
[162.74649048 154.17922974]
[174.40368652 163.61903381]
[187.12440491 171.56782532]
[199.84512329 179.51660156]
[212.63473511 187.35408020]
[225.49223328 195.07965088]
[238.34974670 202.80522156]
[251.20726013 210.53080750]
[264.06475830 218.25637817]
[277.49185181 210.93101501]
[292.68246460 211.30749512]
[305.55947876 219.18460083]
[312.71685791 232.36138916]
[312.32037354 247.25126648]
[325.17788696 254.97683716]
[338.03540039 262.70242310]
[350.89291382 270.42797852]
[367.29006958 270.17303467]
[375.47610474 284.38290405]
[367.02993774 298.43972778]
[350.64022827 297.88302612]
[343.16732788 283.28549194]
[330.30981445 275.55990601]
[317.45233154 267.83435059]
[304.59481812 260.10876465]
[291.63397217 267.44921875]
[276.63937378 267.31576538]
[263.63891602 259.64410400]
[256.17492676 246.40832520]
[256.33920288 231.11387634]
[243.48168945 223.38830566]
[230.62417603 215.66273499]
[217.76666260 207.93716431]
[204.90916443 200.21159363]
[197.53562927 199.45959473]
[191.89633179 192.23733521]
[179.17561340 184.28854370]
[166.45489502 176.33975220]
[173.05285645 189.81071472]
[174.08319092 204.77528381]
[169.39373779 219.02342224]
[159.67706299 230.45085144]
[146.36817932 237.36991882]
[131.43261719 238.75880432]
[117.07614136 234.41235352]
[105.41899872 224.97248840]
[98.18278503 211.83334351]
[96.43617249 196.93537903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[12 37]
[13 36]
[14 35]
[15 34]
[16 32]
[17 31]
[20 29]
[21 28]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[45 121]
[46 120]
[47 119]
[49 91]
[50 90]
[51 89]
[53 87]
[54 86]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[66 77]
[67 76]
[93 116]
[94 115]
[95 114]
[96 113]
[133 169]
[134 168]
[135 167]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
