%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DMRTB1)
} def

/sequence { (\
ACUUGCUCUGCAGCUCCCAGAGGUGGUGGUUGUGUUACGAAGGCUGACCCUGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.018430935 ubox
1 27 0.038434872 ubox
1 30 0.005298046 ubox
1 33 0.010026552 ubox
1 35 0.023792423 ubox
2 13 0.074172266 ubox
2 20 0.035425048 ubox
2 22 0.008442979 ubox
2 23 0.021045844 ubox
2 26 0.041361586 ubox
2 29 0.006354647 ubox
2 32 0.010578389 ubox
2 34 0.027218047 ubox
2 42 0.068415333 ubox
2 43 0.011149183 ubox
3 12 0.053408042 ubox
3 13 0.160443537 ubox
3 19 0.032112532 ubox
3 20 0.011462355 ubox
3 21 0.012821832 ubox
3 22 0.009652924 ubox
3 23 0.004496971 ubox
3 25 0.038970293 ubox
3 26 0.004262133 ubox
3 28 0.006205319 ubox
3 40 0.562365012 ubox
3 41 0.110124143 ubox
3 42 0.011065262 ubox
3 47 0.004820889 ubox
4 12 0.210765636 ubox
4 19 0.013474701 ubox
4 20 0.012847878 ubox
4 21 0.005935814 ubox
4 25 0.006813258 ubox
4 34 0.009437999 ubox
4 37 0.046939773 ubox
4 39 0.595233945 ubox
4 40 0.111131444 ubox
4 41 0.024624592 ubox
4 46 0.004915372 ubox
4 55 0.007818814 ubox
5 9 0.004923609 ubox
5 11 0.223387630 ubox
5 14 0.221579348 ubox
5 18 0.010756880 ubox
5 24 0.021987344 ubox
5 30 0.013586096 ubox
5 33 0.013091583 ubox
5 35 0.129026848 ubox
5 36 0.047993724 ubox
5 38 0.606824624 ubox
5 44 0.023953970 ubox
5 53 0.017739803 ubox
5 54 0.008546004 ubox
6 10 0.221804411 ubox
6 13 0.221940631 ubox
6 20 0.006777554 ubox
6 22 0.233881885 ubox
6 23 0.017585283 ubox
6 29 0.014058346 ubox
6 32 0.013277085 ubox
6 34 0.137103751 ubox
6 42 0.005794832 ubox
6 43 0.023836491 ubox
6 52 0.017910298 ubox
7 12 0.202829632 ubox
7 19 0.006383091 ubox
7 21 0.398678109 ubox
7 22 0.007628628 ubox
7 28 0.011966947 ubox
7 29 0.004697867 ubox
7 40 0.118721655 ubox
7 41 0.008184701 ubox
7 42 0.013899948 ubox
7 43 0.003606366 ubox
8 20 0.412012966 ubox
8 26 0.006383036 ubox
8 28 0.008240292 ubox
8 29 0.014995926 ubox
8 39 0.124867682 ubox
8 42 0.018228661 ubox
9 19 0.411869703 ubox
9 25 0.006188210 ubox
9 28 0.014974345 ubox
9 34 0.557818508 ubox
9 37 0.038126588 ubox
9 39 0.012615777 ubox
9 41 0.018562028 ubox
10 18 0.410135541 ubox
10 24 0.006539119 ubox
10 27 0.013938992 ubox
10 30 0.004709931 ubox
10 33 0.838153504 ubox
10 35 0.021925403 ubox
10 36 0.016223926 ubox
10 38 0.012091427 ubox
10 53 0.007334713 ubox
11 23 0.006593686 ubox
11 25 0.020082723 ubox
11 26 0.011142811 ubox
11 29 0.004765992 ubox
11 32 0.850449982 ubox
11 34 0.021982057 ubox
11 46 0.004858811 ubox
11 52 0.007407808 ubox
12 24 0.022277538 ubox
12 31 0.849866491 ubox
12 33 0.019371997 ubox
12 45 0.004865024 ubox
12 51 0.007348595 ubox
13 24 0.006577149 ubox
13 27 0.005604924 ubox
13 30 0.850518418 ubox
13 33 0.004643518 ubox
13 44 0.004866869 ubox
13 50 0.007236970 ubox
14 20 0.033989777 ubox
14 22 0.031530623 ubox
14 23 0.006979616 ubox
14 26 0.006117309 ubox
14 29 0.850915926 ubox
14 32 0.006132407 ubox
14 43 0.004854009 ubox
15 19 0.030874217 ubox
15 21 0.052378953 ubox
15 22 0.006360653 ubox
15 25 0.005881061 ubox
15 26 0.005334944 ubox
15 28 0.814420960 ubox
15 29 0.007435109 ubox
15 42 0.004356159 ubox
16 20 0.053620340 ubox
16 23 0.015672475 ubox
16 25 0.010687201 ubox
16 26 0.041722043 ubox
16 28 0.174259641 ubox
17 22 0.015709698 ubox
17 23 0.014096267 ubox
17 25 0.038311767 ubox
17 26 0.849123059 ubox
17 29 0.007244710 ubox
18 22 0.014367582 ubox
18 25 0.849923578 ubox
18 28 0.007402473 ubox
18 52 0.024567148 ubox
19 24 0.815096740 ubox
19 27 0.007321064 ubox
19 51 0.024824520 ubox
20 50 0.024847544 ubox
22 49 0.025188900 ubox
22 54 0.466622787 ubox
23 38 0.009000265 ubox
23 48 0.025227131 ubox
23 53 0.496811460 ubox
24 37 0.009004084 ubox
24 46 0.009569387 ubox
24 47 0.023152758 ubox
24 52 0.495888810 ubox
24 55 0.122355920 ubox
25 36 0.008945833 ubox
25 45 0.023575411 ubox
25 49 0.008678531 ubox
25 50 0.004685088 ubox
25 51 0.495067887 ubox
25 54 0.157886689 ubox
26 35 0.008334474 ubox
26 38 0.008513897 ubox
26 44 0.024936922 ubox
26 48 0.008744402 ubox
26 49 0.003690821 ubox
26 50 0.496900488 ubox
26 53 0.157963831 ubox
27 34 0.004968150 ubox
27 37 0.008537377 ubox
27 43 0.024617744 ubox
27 46 0.003832402 ubox
27 47 0.008196291 ubox
27 52 0.151711908 ubox
27 55 0.011666870 ubox
28 33 0.004949911 ubox
28 36 0.008450888 ubox
28 38 0.004034123 ubox
28 45 0.008380756 ubox
28 49 0.520590742 ubox
28 50 0.027162424 ubox
28 51 0.026801289 ubox
28 54 0.022226675 ubox
29 35 0.006928208 ubox
29 38 0.014119754 ubox
29 44 0.008809154 ubox
29 48 0.521077830 ubox
29 49 0.023038059 ubox
29 50 0.025509220 ubox
29 53 0.022242744 ubox
30 37 0.013921434 ubox
30 40 0.029593352 ubox
30 41 0.004607869 ubox
30 43 0.008623353 ubox
30 47 0.520528253 ubox
30 52 0.022078372 ubox
31 39 0.031916660 ubox
31 40 0.005189028 ubox
31 42 0.007785781 ubox
31 46 0.499745736 ubox
32 38 0.033465878 ubox
32 44 0.359454519 ubox
32 45 0.284804676 ubox
32 48 0.010981166 ubox
33 37 0.030176412 ubox
33 39 0.003573317 ubox
33 43 0.358723942 ubox
33 46 0.004923010 ubox
33 47 0.010608445 ubox
34 38 0.006198717 ubox
34 44 0.370938660 ubox
34 48 0.026072595 ubox
34 53 0.005223977 ubox
35 41 0.336131229 ubox
35 42 0.055998664 ubox
35 43 0.369265238 ubox
35 47 0.026155222 ubox
35 52 0.005219370 ubox
36 40 0.281115659 ubox
36 41 0.057388855 ubox
36 42 0.341526339 ubox
36 46 0.026036074 ubox
37 45 0.024622355 ubox
38 46 0.003919452 ubox
38 52 0.007057859 ubox
39 45 0.003750608 ubox
39 51 0.005185001 ubox
41 51 0.060636980 ubox
42 49 0.024286799 ubox
42 50 0.062449157 ubox
42 51 0.003305305 ubox
42 54 0.844836666 ubox
43 48 0.024663039 ubox
43 49 0.062002645 ubox
43 50 0.004012447 ubox
43 53 0.847634733 ubox
44 52 0.847427865 ubox
45 52 0.009059457 ubox
45 55 0.005474713 ubox
46 51 0.046001929 ubox
46 54 0.007178323 ubox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
showpage
end
%%EOF
