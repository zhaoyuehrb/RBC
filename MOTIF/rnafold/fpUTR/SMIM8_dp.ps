%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMIM8)
} def

/sequence { (\
GGGGCGGGGCGUCUCGGGCGAGGAGAGGAGGUGACCCCGCGAAAGGAGGAUGGACAGAAGAAAAAGAUAAUAAAUCAUCAUUGAUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.004258853 ubox
1 38 0.021226956 ubox
1 79 0.011532783 ubox
1 82 0.005794188 ubox
1 86 0.058166572 ubox
2 14 0.004274793 ubox
2 37 0.021243752 ubox
2 78 0.008436966 ubox
2 79 0.009029904 ubox
2 81 0.005113888 ubox
2 82 0.006254402 ubox
2 85 0.038888797 ubox
2 86 0.045528944 ubox
3 13 0.004282811 ubox
3 36 0.021244382 ubox
3 78 0.006632018 ubox
3 79 0.006339963 ubox
3 81 0.005449557 ubox
3 82 0.004872392 ubox
3 85 0.030553915 ubox
3 86 0.033991656 ubox
4 12 0.004283429 ubox
4 35 0.021238831 ubox
4 40 0.998816117 ubox
5 11 0.004289790 ubox
5 33 0.020326208 ubox
5 39 0.999709564 ubox
6 10 0.004013392 ubox
6 32 0.019798235 ubox
6 37 0.003603470 ubox
6 38 0.999735261 ubox
7 36 0.005069566 ubox
7 37 0.999744949 ubox
8 35 0.006159780 ubox
8 36 0.999737407 ubox
9 32 0.019920297 ubox
9 35 0.999424351 ubox
10 20 0.008911377 ubox
10 31 0.058041481 ubox
10 33 0.991136971 ubox
11 19 0.008996322 ubox
11 32 0.939774805 ubox
11 35 0.003284867 ubox
12 18 0.008981553 ubox
12 23 0.032372579 ubox
12 24 0.006548856 ubox
12 26 0.174033809 ubox
12 28 0.108082944 ubox
12 29 0.059159104 ubox
12 31 0.930266352 ubox
12 34 0.005557583 ubox
13 17 0.008667694 ubox
13 22 0.033761132 ubox
13 23 0.005609466 ubox
13 25 0.175354514 ubox
13 27 0.117926161 ubox
13 28 0.047284506 ubox
13 30 0.975254281 ubox
13 31 0.017338627 ubox
13 33 0.005456635 ubox
14 21 0.034212330 ubox
14 22 0.003197219 ubox
14 23 0.009234376 ubox
14 24 0.175758593 ubox
14 26 0.123534757 ubox
14 27 0.026149895 ubox
14 28 0.021879120 ubox
14 29 0.974989639 ubox
14 30 0.009565769 ubox
14 31 0.004681022 ubox
15 20 0.034371029 ubox
15 22 0.019404231 ubox
15 23 0.175672938 ubox
15 25 0.124979248 ubox
15 27 0.051219366 ubox
15 28 0.973855838 ubox
15 30 0.006404385 ubox
18 40 0.003243672 ubox
19 39 0.003246630 ubox
20 38 0.003239264 ubox
40 83 0.006838010 ubox
41 51 0.003318466 ubox
41 76 0.008145783 ubox
41 79 0.016614925 ubox
41 82 0.020867454 ubox
41 86 0.513699433 ubox
42 75 0.007738627 ubox
42 78 0.016049040 ubox
42 81 0.020488192 ubox
42 82 0.048918038 ubox
42 85 0.504239645 ubox
43 81 0.050363618 ubox
43 82 0.102946277 ubox
44 81 0.096203566 ubox
44 82 0.111052238 ubox
45 76 0.007493118 ubox
45 79 0.056958813 ubox
45 81 0.101779275 ubox
45 82 0.337476697 ubox
45 86 0.186809181 ubox
46 75 0.006318357 ubox
46 76 0.024786723 ubox
46 78 0.054712647 ubox
46 79 0.230921946 ubox
46 81 0.321291973 ubox
46 82 0.309875927 ubox
46 85 0.172348432 ubox
46 86 0.206206722 ubox
47 75 0.024575517 ubox
47 78 0.219285803 ubox
47 81 0.308342179 ubox
47 82 0.133600359 ubox
47 85 0.203868578 ubox
48 76 0.019845755 ubox
48 79 0.061878837 ubox
48 81 0.129287107 ubox
48 82 0.045158424 ubox
48 86 0.031022105 ubox
49 75 0.012900645 ubox
49 76 0.247663713 ubox
49 78 0.032398689 ubox
49 79 0.681334484 ubox
49 81 0.012841123 ubox
49 82 0.264171762 ubox
49 85 0.017586526 ubox
49 86 0.350922765 ubox
50 68 0.022712951 ubox
50 71 0.024127544 ubox
50 75 0.249798246 ubox
50 78 0.685197442 ubox
50 81 0.271879978 ubox
50 85 0.351693405 ubox
51 67 0.023426977 ubox
51 69 0.012080101 ubox
51 70 0.024788134 ubox
51 72 0.014649406 ubox
51 74 0.247966633 ubox
51 77 0.685472707 ubox
51 80 0.272883467 ubox
51 83 0.007176502 ubox
51 84 0.350178442 ubox
51 87 0.066631503 ubox
52 68 0.013568717 ubox
52 71 0.017980586 ubox
52 76 0.681334768 ubox
52 79 0.271487600 ubox
52 82 0.013071104 ubox
52 86 0.073191928 ubox
53 75 0.460027200 ubox
53 76 0.083109137 ubox
53 78 0.223455425 ubox
53 79 0.039058296 ubox
53 81 0.014366530 ubox
53 82 0.336906975 ubox
53 85 0.063086127 ubox
53 86 0.090730217 ubox
54 75 0.098357468 ubox
54 78 0.044239627 ubox
54 81 0.325188382 ubox
54 85 0.090709655 ubox
55 83 0.092440308 ubox
56 82 0.088878427 ubox
57 76 0.181969560 ubox
57 79 0.325743971 ubox
57 81 0.064932138 ubox
57 82 0.069848547 ubox
57 86 0.086801319 ubox
58 75 0.172126256 ubox
58 78 0.321142876 ubox
58 81 0.070676379 ubox
58 82 0.017029555 ubox
58 85 0.085443197 ubox
59 81 0.019536296 ubox
59 82 0.007831065 ubox
60 76 0.320611059 ubox
60 79 0.099524747 ubox
60 81 0.008117125 ubox
60 82 0.027383528 ubox
60 86 0.130403579 ubox
61 75 0.303294850 ubox
61 78 0.096253090 ubox
61 81 0.026951004 ubox
61 82 0.065408579 ubox
61 85 0.128285750 ubox
62 81 0.062977668 ubox
62 82 0.020541219 ubox
63 81 0.020178363 ubox
63 82 0.088885243 ubox
64 81 0.088020869 ubox
64 82 0.101865308 ubox
65 81 0.101867379 ubox
65 82 0.007024736 ubox
66 76 0.187437653 ubox
66 79 0.190962550 ubox
66 82 0.013587613 ubox
66 86 0.117475723 ubox
67 75 0.188503204 ubox
67 78 0.191027091 ubox
67 81 0.014218298 ubox
67 85 0.116033928 ubox
68 74 0.185087297 ubox
68 77 0.188945414 ubox
68 80 0.013819348 ubox
68 83 0.070033899 ubox
68 84 0.086808086 ubox
69 82 0.098253768 ubox
70 78 0.013386445 ubox
70 81 0.102501785 ubox
70 85 0.008336936 ubox
71 77 0.014367260 ubox
71 80 0.101608834 ubox
71 83 0.018197811 ubox
71 84 0.007520278 ubox
72 82 0.019771963 ubox
73 81 0.018503176 ubox
73 82 0.017176688 ubox
74 81 0.018749901 ubox
74 85 0.380006922 ubox
75 80 0.017342170 ubox
75 84 0.409253134 ubox
76 83 0.414707545 ubox
77 82 0.400122092 ubox
77 85 0.040239938 ubox
78 84 0.043782059 ubox
79 83 0.044133855 ubox
81 88 0.019206478 ubox
81 89 0.022020465 ubox
82 87 0.019657006 ubox
82 88 0.032345687 ubox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
74 85 0.9500000 lbox
75 84 0.9500000 lbox
76 83 0.9500000 lbox
77 82 0.9500000 lbox
showpage
end
%%EOF
