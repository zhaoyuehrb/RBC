%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGCGGCAAGAGGCCUCGGCACCCGCGAACUCAUAAAUACCGGGGCGGCGCUGGUGGCGGGAGAGGCGCGUGCGGGCAGCCGGCGCCCCCGAGGCACCUGGAUAACCACCCAUCUUGAAGGAGACCUCCCUGCCCUGCCUCUGUUGUCCCCCAGAGCACUGCCUGAUCAUCCUCUGUUCCCCAUCCUCCCAGCCCUUCCUGCUGUACCUGUGGGGAGCUGAUCUCCUCAGUCCCCCUGCUUUUCCCCGGUCUG\
CCAUCACCACCCCACCACC\
) } def
/len { sequence length } bind def

/coor [
[-85.95212555 543.56274414]
[-91.47399139 557.50939941]
[-85.44287109 571.87127686]
[-91.24150085 585.93646240]
[-104.97052002 591.59771729]
[-110.49238586 605.54437256]
[-116.01425934 619.49102783]
[-121.53612518 633.43768311]
[-115.32554626 640.78039551]
[-112.21430969 649.81927490]
[-112.58523560 659.31359863]
[-116.34619904 667.97625732]
[-122.94832611 674.64794922]
[-131.46568298 678.45245361]
[-140.72502136 678.91137695]
[-146.87820435 692.59124756]
[-144.68870544 708.84356689]
[-157.83248901 718.65032959]
[-172.78834534 711.92321777]
[-174.17097473 695.58245850]
[-160.55805969 686.43804932]
[-154.40486145 672.75817871]
[-163.19587708 654.27124023]
[-155.29502869 635.06604004]
[-135.48277283 627.91583252]
[-129.96090698 613.96917725]
[-124.43903351 600.02252197]
[-118.91716766 586.07586670]
[-125.04979706 572.55084229]
[-119.64851379 558.32830811]
[-105.42063904 551.98754883]
[-99.89877319 538.04089355]
[-109.70590210 530.71221924]
[-117.48662567 521.24554443]
[-122.78681946 510.18493652]
[-125.29516602 498.16796875]
[-124.86142731 485.88867188]
[-121.50543976 474.05743408]
[-115.41624451 463.36007690]
[-106.94149780 454.41793823]
[-96.56756592 447.75189209]
[-84.89165497 443.75192261]
[-72.58742523 442.65438843]
[-60.36610794 444.52798462]
[-54.21292114 430.84814453]
[-48.05973434 417.16827393]
[-41.90654755 403.48843384]
[-43.74200439 388.70736694]
[-31.02466011 379.29568481]
[-24.87147331 365.61581421]
[-25.74955368 362.23767090]
[-25.05821228 358.26959229]
[-22.53911972 354.44338989]
[-18.26590919 351.57827759]
[-11.64759350 338.11730957]
[-5.02927685 324.65634155]
[1.58903968 311.19534302]
[8.20735645 297.73437500]
[14.82567310 284.27340698]
[21.44398880 270.81243896]
[27.59717560 257.13256836]
[33.27800751 243.24992371]
[38.95883560 229.36726379]
[44.63966751 215.48460388]
[50.32049942 201.60194397]
[56.00132751 187.71929932]
[61.68215942 173.83663940]
[67.36299133 159.95397949]
[73.04382324 146.07131958]
[78.72465515 132.18865967]
[65.45275116 119.94779968]
[58.87438583 102.49217987]
[60.88924408 83.34468079]
[71.60158539 66.63043213]
[61.97436142 55.12754059]
[52.28159332 43.67982101]
[42.52359390 32.28765488]
[32.76559830 20.89548874]
[23.00759888 9.50332069]
[13.24959946 -1.88884568]
[3.49160123 -13.28101254]
[-6.10492229 6.48151779]
[-29.96800613 18.35310936]
[-62.30691910 14.74863243]
[-75.23980713 7.14991665]
[-91.05777740 6.83005190]
[-98.11156464 -6.28838444]
[-111.04444885 -13.88710022]
[-123.97733307 -21.48581696]
[-139.80397034 -18.85961342]
[-151.62806702 -29.70260429]
[-150.37918091 -45.69697189]
[-137.01535034 -54.57320786]
[-121.78816223 -49.52222443]
[-116.37861633 -34.41870117]
[-103.44573212 -26.81998444]
[-90.51284790 -19.22126961]
[-75.61992645 -19.44491577]
[-67.64109039 -5.78296804]
[-54.70820618 1.81574786]
[-44.95020676 -9.57641888]
[-54.44539261 -21.18854332]
[-63.94057846 -32.80066681]
[-79.42407990 -31.78040314]
[-92.53219604 -40.08442307]
[-98.22460938 -54.51966095]
[-94.31245422 -69.53547668]
[-82.30004120 -79.35797882]
[-66.80638123 -80.21021271]
[-53.78911591 -71.76448822]
[-48.25363922 -57.26834488]
[-52.32845688 -42.29585266]
[-42.83326721 -30.68372917]
[-33.33808136 -19.07160568]
[-26.64583588 -22.45743561]
[-33.41749573 -35.84192657]
[-40.18915558 -49.22642136]
[-39.36164856 -64.20357513]
[-26.80466270 -55.99807739]
[-20.03300285 -42.61358643]
[-13.26134396 -29.22909355]
[-6.56909752 -32.61492538]
[-10.29944611 -47.14367294]
[-14.02979469 -61.67242050]
[-25.88401985 -73.00420380]
[-21.73517609 -88.86986542]
[-5.85123825 -92.94816589]
[5.42776060 -81.04370117]
[0.49895319 -65.40276337]
[4.22930145 -50.87401962]
[7.95965004 -36.34527206]
[14.88376808 -23.03901100]
[24.64176559 -11.64684391]
[34.39976501 -0.25467756]
[44.15776443 11.13748932]
[53.91576385 22.52965546]
[63.67375946 33.92182159]
[70.38615417 36.94595337]
[73.47725677 45.50031662]
[83.10447693 57.00321579]
[97.77072906 53.85660934]
[101.83202362 39.41687775]
[105.89332581 24.97714424]
[109.95462036 10.53741264]
[114.01592255 -3.90231895]
[104.29536438 -15.99737453]
[103.57418823 -31.49768257]
[112.12970734 -44.44305801]
[126.67214203 -49.85573959]
[141.60963440 -45.65444183]
[151.19841003 -33.45464706]
[151.75140381 -17.94742966]
[143.05595398 -5.09562731]
[128.45565796 0.15897882]
[124.39435577 14.59871101]
[120.33305359 29.03844261]
[116.27175903 43.47817612]
[112.21046448 57.91790771]
[127.08683014 68.95437622]
[135.25617981 84.32350159]
[149.88552856 81.00955200]
[164.51486206 77.69561005]
[179.14421082 74.38166809]
[185.61936951 58.73628235]
[200.00837708 50.13085938]
[216.52426147 51.79492188]
[228.66149902 62.87339783]
[243.25202942 59.39254761]
[257.84255981 55.91169739]
[272.43310547 52.43085098]
[287.02362061 48.95000076]
[274.70037842 40.39794540]
[271.92935181 25.65612030]
[280.30615234 13.21308136]
[295.00729370 10.23371315]
[307.56762695 18.43358040]
[310.75476074 33.09107971]
[302.73236084 45.76700211]
[317.52703857 43.29363632]
[332.32171631 40.82027054]
[347.11639404 38.34690094]
[361.91104126 35.87353516]
[376.70571899 33.40016937]
[391.50039673 30.92680168]
[406.29507446 28.45343590]
[421.08975220 25.98006821]
[425.42126465 11.38557053]
[435.61831665 0.16472600]
[449.61871338 -5.49289989]
[464.62551880 -4.51481104]
[477.66571045 2.85154581]
[486.17913818 15.09845734]
[500.97381592 12.62509060]
[515.76849365 10.15172386]
[530.56317139 7.67835712]
[538.34558105 -5.88513374]
[553.04339600 -11.22438145]
[567.71679688 -5.81835556]
[575.43743896 7.78038263]
[572.55987549 23.15092468]
[560.44281006 33.03577423]
[544.80749512 32.76760101]
[533.03656006 22.47303391]
[518.24188232 24.94640160]
[503.44720459 27.41976738]
[488.65252686 29.89313316]
[484.58554077 44.24323273]
[474.65051270 55.45057297]
[460.77789307 61.25671005]
[445.69854736 60.46062469]
[432.40621948 53.16672134]
[423.56314087 40.77474594]
[408.76846313 43.24811172]
[393.97378540 45.72147751]
[379.17910767 48.19484711]
[364.38442993 50.66821289]
[349.58975220 53.14157867]
[334.79507446 55.61494446]
[320.00039673 58.08831406]
[305.20571899 60.56167984]
[290.50448608 63.54053497]
[275.91394043 67.02138519]
[261.32339478 70.50223541]
[246.73287964 73.98308563]
[232.14233398 77.46392822]
[228.19190979 90.19490051]
[218.39459229 99.39219666]
[205.22952271 102.58217621]
[192.10098267 98.83019257]
[182.45816040 89.01101685]
[167.82881165 92.32495880]
[153.19946289 95.63890076]
[138.57011414 98.95284271]
[137.17291260 110.34043884]
[132.48902893 120.81377411]
[124.93259430 129.44683838]
[115.17171478 135.47631836]
[104.06941223 138.36914062]
[92.60730743 137.86949158]
[86.92647552 151.75215149]
[81.24565125 165.63481140]
[75.56481934 179.51747131]
[69.88398743 193.40013123]
[64.20315552 207.28277588]
[58.52232361 221.16543579]
[52.84149551 235.04809570]
[47.16066360 248.93075562]
[41.47983170 262.81341553]
[55.61354828 257.78964233]
[69.20516968 264.13534546]
[74.42844391 278.19656372]
[68.27572632 291.87661743]
[54.28985214 297.29837036]
[40.52408600 291.33987427]
[34.90496445 277.43075562]
[28.28664970 290.89172363]
[21.66833305 304.35269165]
[15.05001640 317.81365967]
[8.43169975 331.27465820]
[1.81338310 344.73562622]
[-4.80493355 358.19659424]
[-11.19162273 371.76901245]
[-17.34481049 385.44885254]
[-15.94947147 401.20840454]
[-28.22669792 409.64163208]
[-34.37988281 423.32147217]
[-40.53307343 437.00131226]
[-46.68626022 450.68118286]
[-33.55770493 462.86056519]
[-25.41558838 478.78366089]
[-23.23370171 496.50997925]
[-27.26061440 513.88562012]
[-36.99146652 528.80493164]
[-51.23120499 539.46575928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[5 28]
[6 27]
[7 26]
[8 25]
[15 22]
[16 21]
[44 268]
[45 267]
[46 266]
[47 265]
[49 263]
[50 262]
[54 261]
[55 260]
[56 259]
[57 258]
[58 257]
[59 256]
[60 255]
[61 248]
[62 247]
[63 246]
[64 245]
[65 244]
[66 243]
[67 242]
[68 241]
[69 240]
[70 239]
[74 140]
[75 139]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[84 100]
[85 99]
[87 97]
[88 96]
[89 95]
[101 114]
[102 113]
[103 112]
[122 131]
[123 130]
[124 129]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[160 233]
[161 232]
[162 231]
[163 230]
[167 225]
[168 224]
[169 223]
[170 222]
[171 221]
[178 220]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[184 214]
[185 213]
[186 212]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
