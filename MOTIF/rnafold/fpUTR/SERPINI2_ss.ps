%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUUAAUCAAGCAAUGGUCAAGAUAAAUGGAGUUGGCCUUGAUCGCUCAGGUGUUUAUGUACAAGAGUUUUCCAGCAAGCGUAUUUUAGUUGUAACAUUCCAGUGAAUAAUCAGAAGUCAGUUUGGGAAGAUCCAGUUCUUAUAGGACUAUUCAUCAGGUUGUUUAGUUCAGCAUUACUUUGUGCUUUCUGAUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[242.79675293 198.69052124]
[231.17388916 189.20846558]
[219.55104065 179.72642517]
[207.92817688 170.24436951]
[196.30532837 160.76232910]
[184.68246460 151.28028870]
[173.05961609 141.79823303]
[155.61331177 139.93135071]
[149.21276855 122.66892242]
[137.44384766 113.36878204]
[125.67493439 104.06863403]
[123.02190399 116.67651367]
[114.09009552 127.45490265]
[100.14714813 133.29112244]
[83.97060394 131.92532349]
[72.05847931 141.04130554]
[60.14635468 150.15730286]
[55.22852707 157.86367798]
[47.97734833 159.32070923]
[35.92489243 168.25035095]
[23.87243843 177.17997742]
[11.81998348 186.10961914]
[-0.23247062 195.03924561]
[-12.28492451 203.96887207]
[-9.86921787 219.08255005]
[-14.76487541 233.58396912]
[-25.84691238 244.14080811]
[-40.56875610 248.32720947]
[-55.54743576 245.18113708]
[-67.34096527 235.42555237]
[-73.23926544 221.30223083]
[-71.88696289 206.05657959]
[-63.59479904 193.19194031]
[-50.26825714 185.66453552]
[-34.96967697 185.20410156]
[-21.21455765 191.91642761]
[-9.16210365 182.98678589]
[2.89035082 174.05715942]
[14.94280529 165.12753296]
[26.99526024 156.19789124]
[39.04771423 147.26826477]
[51.03036499 138.24517822]
[62.94248962 129.12918091]
[74.85461426 120.01319122]
[73.46300507 112.64343262]
[59.30658340 107.68402863]
[70.67979431 97.90390015]
[69.28818512 90.53413391]
[54.87211990 86.38961029]
[40.45605469 82.24508667]
[26.03998947 78.10055542]
[12.33008385 85.49489594]
[-2.23081517 81.08639526]
[-9.19569588 67.97052765]
[-23.61175919 63.82600021]
[-38.02782440 59.68147278]
[-51.73276138 67.55231476]
[-66.96712494 63.34639740]
[-74.69263458 49.55900955]
[-70.32588196 34.36996460]
[-56.45758438 26.79065895]
[-41.31555939 31.31775475]
[-33.88329697 45.26540756]
[-19.46723366 49.40993500]
[-5.05116940 53.55446243]
[7.81599808 46.14017868]
[22.49497795 50.13795471]
[30.18451691 63.68449402]
[44.60057831 67.82901764]
[59.01664352 71.97354889]
[73.43270874 76.11807251]
[95.68881226 69.44322968]
[113.76982117 77.95123291]
[114.46942902 62.96755981]
[115.16903687 47.98388290]
[115.86863708 33.00020599]
[113.17301941 26.95041084]
[113.84219360 21.29771805]
[116.83019257 17.56357193]
[117.99544525 2.60890079]
[119.16070557 -12.34576988]
[120.32596588 -27.30043983]
[121.49121857 -42.25511169]
[108.47447968 -53.05064774]
[104.49416351 -69.31546021]
[110.92582703 -84.59564209]
[125.05348969 -92.94895935]
[125.98603821 -107.91993713]
[126.91857910 -122.89092255]
[127.85112762 -137.86190796]
[120.98674011 -152.11640930]
[129.50032043 -164.33804321]
[130.43287659 -179.30902100]
[131.36541748 -194.27999878]
[132.29795837 -209.25099182]
[133.23049927 -224.22196960]
[124.65102386 -240.51156616]
[134.90802002 -254.74719238]
[135.60762024 -269.73086548]
[124.78173065 -281.24502563]
[125.35189056 -297.03900146]
[136.97985840 -307.74255371]
[152.76693726 -307.00546265]
[163.34696960 -295.26498413]
[162.44297791 -279.48657227]
[150.59129333 -269.03125000]
[149.89169312 -254.04757690]
[157.80444336 -244.89199829]
[157.33972168 -232.39865112]
[148.20149231 -223.28942871]
[147.26895142 -208.31845093]
[146.33639526 -193.34745789]
[145.40385437 -178.37648010]
[144.47131348 -163.40548706]
[151.40238953 -150.22181702]
[142.82211304 -136.92936707]
[141.88957214 -121.95838165]
[140.95701599 -106.98739624]
[140.02447510 -92.01641083]
[151.06419373 -84.50150299]
[156.99493408 -72.41519165]
[156.17071533 -58.86896896]
[148.70013428 -47.40945435]
[136.44589233 -41.08985519]
[135.28063965 -26.13518333]
[134.11537170 -11.18051243]
[132.95011902 3.77415848]
[131.78486633 18.72882843]
[130.85231018 33.69981384]
[130.15270996 48.68349075]
[129.45310974 63.66716385]
[128.75349426 78.65084076]
[134.97508240 92.29972076]
[146.74398804 101.59986877]
[158.51290894 110.90000916]
[171.39556885 110.17752075]
[181.00749207 118.17192841]
[182.54165649 130.17538452]
[194.16452026 139.65742493]
[205.78736877 149.13946533]
[217.41023254 158.62152100]
[229.03308105 168.10356140]
[240.65594482 177.58561707]
[252.27879333 187.06765747]
[266.98681641 176.03434753]
[288.03485107 174.66297913]
[308.87982178 186.19123840]
[321.64178467 209.48783875]
[336.05786133 213.63237000]
[350.47390747 217.77688599]
[364.88998413 221.92141724]
[379.30603027 226.06594849]
[393.72210693 230.21046448]
[407.43200684 222.81613159]
[421.99291992 227.22462463]
[428.95779419 240.34049988]
[443.37384033 244.48503113]
[457.07879639 236.61418152]
[472.31314087 240.82009888]
[480.03866577 254.60749817]
[475.67190552 269.79653931]
[461.80361938 277.37585449]
[446.66159058 272.84875488]
[439.22933960 258.90109253]
[424.81326294 254.75656128]
[411.94610596 262.17083740]
[397.26712036 258.17306519]
[389.57757568 244.62652588]
[375.16152954 240.48200989]
[360.74545288 236.33747864]
[346.32937622 232.19294739]
[331.91333008 228.04843140]
[317.49725342 223.90390015]
[308.94677734 236.22824097]
[317.87640381 248.28068542]
[326.80603027 260.33312988]
[335.73568726 272.38558960]
[344.66531372 284.43804932]
[360.33233643 286.51641846]
[369.87451172 299.11492920]
[367.63061523 314.75912476]
[354.93191528 324.16757202]
[339.31231689 321.75839233]
[330.03866577 308.96093750]
[332.61285400 293.36767578]
[323.68322754 281.31524658]
[314.75357056 269.26278687]
[305.82394409 257.21032715]
[296.89431763 245.15786743]
[290.04589844 248.21549988]
[269.50061035 257.38836670]
[272.51272583 272.08282471]
[275.52484131 286.77731323]
[286.80807495 298.67776489]
[281.88482666 314.32043457]
[265.81970215 317.61349487]
[255.13914490 305.16934204]
[260.83038330 289.78939819]
[257.81826782 275.09494019]
[254.80616760 260.40048218]
[236.36065674 239.96112061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[9 135]
[10 134]
[11 133]
[15 44]
[16 43]
[17 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[48 71]
[49 70]
[50 69]
[51 68]
[54 65]
[55 64]
[56 63]
[73 132]
[74 131]
[75 130]
[76 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[87 119]
[88 118]
[89 117]
[90 116]
[92 114]
[93 113]
[94 112]
[95 111]
[96 110]
[98 107]
[99 106]
[148 173]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[156 165]
[157 164]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
