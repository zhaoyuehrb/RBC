%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACACACCACCUCACAACCACACACUGCAUGCACACACAUACACCACAGCCACACACUGUGCAUACACGCACACCCCACAACCCACAUACUGCAUGCACACACACACACCUACAAGCUGCAUGCUGCAUACACAAGUCAUACAGGAGAUAAACUCAGAGUCCCAGCCCCAAAUAGACCCCAUCUCUUGCUCAGUUGCUGUCAUCCUAGACCUGUUUCUUUCGCCACAUUUCUAUAAUCUGCCAGUGUCUGCAA\
GGAGAAGAC\
) } def
/len { sequence length } bind def

/coor [
[130.89732361 697.80596924]
[117.96571350 705.65631104]
[103.24064636 709.12445068]
[88.16474915 707.87048340]
[74.21499634 702.01727295]
[62.75804138 692.13836670]
[54.91632462 679.20147705]
[51.45809555 664.47412109]
[52.72216034 649.39904785]
[58.58467102 635.45318604]
[68.47128296 624.00286865]
[81.41340637 616.16986084]
[96.14310455 612.72149658]
[97.38645935 597.77307129]
[98.62981415 582.82470703]
[86.93383026 575.80773926]
[79.35994720 564.38507080]
[77.43026733 550.74932861]
[81.57683563 537.54748535]
[91.04656219 527.36712646]
[104.03730774 522.22906494]
[105.45777893 507.29650879]
[98.96050262 493.89370728]
[107.96988678 480.88827515]
[109.39036560 465.95568848]
[110.81084442 451.02310181]
[112.23131561 436.09051514]
[113.65179443 421.15789795]
[115.07227325 406.22531128]
[113.14911652 403.30722046]
[112.52546692 399.32189941]
[113.68365479 394.88183594]
[116.81800079 390.79028320]
[118.76854706 375.91763306]
[120.71909332 361.04501343]
[109.14109039 356.83523560]
[98.62001801 350.41262817]
[89.57395935 342.02914429]
[82.36300659 332.01480103]
[77.27495575 320.76455688]
[74.51380920 308.72283936]
[74.19158936 296.36584473]
[76.32378387 284.18292236]
[80.82868195 272.65698242]
[87.53041840 262.24545288]
[96.16590881 253.36216736]
[106.39514923 246.36079407]
[117.81459045 241.52088928]
[115.16123962 226.75743103]
[112.50788879 211.99395752]
[109.85453033 197.23049927]
[107.20117950 182.46704102]
[97.33455658 171.30912781]
[102.50872803 156.35792542]
[99.85537720 141.59446716]
[82.95802307 141.16970825]
[66.53055573 133.73397827]
[53.50863266 119.67497253]
[46.55744171 100.60655975]
[47.56595612 79.20033264]
[32.57254410 78.75582886]
[17.57913017 78.31133270]
[2.58571720 77.86682892]
[-12.40769577 77.42233276]
[-23.73592758 88.44261932]
[-39.53734589 88.14132690]
[-50.43724442 76.69721222]
[-49.96891022 60.89986801]
[-38.41019821 50.12157059]
[-22.61868477 50.75689697]
[-11.96319580 62.42892075]
[3.03021693 62.87342072]
[18.02363014 63.31792068]
[33.01704025 63.76242065]
[48.01045609 64.20691681]
[51.82443619 57.74909210]
[38.87958527 50.17078018]
[25.93473244 42.59247208]
[12.98987961 35.01416016]
[0.04502692 27.43585014]
[-12.89982605 19.85754013]
[-25.84467888 12.27923012]
[-38.78953171 4.70092010]
[-51.49553680 -3.27137113]
[-43.86780930 -16.18716621]
[-30.75145149 -8.90913773]
[-17.86518478 -1.23162711]
[-4.97892046 6.44588375]
[7.90734434 14.12339497]
[20.79360962 21.80090523]
[33.67987442 29.47841644]
[46.56613922 37.15592575]
[59.45240402 44.83343887]
[63.26638794 38.37561035]
[55.63842010 25.45995712]
[48.01045609 12.54430199]
[40.38248825 -0.37135190]
[32.75452042 -13.28700638]
[25.12655449 -26.20265961]
[17.49858665 -39.11831284]
[2.79927087 -35.59389877]
[-12.28572941 -36.56042480]
[-26.41506577 -41.93194962]
[-38.33236694 -51.23083878]
[-46.97795486 -63.63024521]
[-51.58306885 -78.02761841]
[-51.73822403 -93.14275360]
[-47.42963028 -107.63162231]
[-39.04039764 -120.20589447]
[-27.31649399 -129.74745178]
[-13.30040169 -135.40789795]
[1.76157963 -136.68388367]
[16.53014755 -133.46195984]
[29.69209099 -126.02861023]
[40.07706070 -115.04480743]
[46.76163101 -101.48722839]
[49.15141296 -86.56140137]
[47.03390884 -71.59452057]
[40.59741211 -57.91742706]
[30.41424179 -46.74628067]
[38.04220963 -33.83062744]
[45.67017365 -20.91497231]
[53.29814148 -7.99931860]
[60.92610931 4.91633558]
[68.55407715 17.83198929]
[76.18204498 30.74764442]
[83.60627747 31.81100464]
[83.10420227 16.81941032]
[82.60212708 1.82781470]
[82.10005188 -13.16378021]
[81.59796906 -28.15537453]
[76.34091949 -42.20398331]
[79.81446075 -56.79626083]
[90.83729553 -66.96961212]
[105.66074371 -69.26425171]
[119.24359894 -62.89981461]
[126.96655273 -50.04073334]
[126.20315552 -35.06016922]
[117.21477509 -23.05404091]
[112.52476501 -8.80609894]
[107.83476257 5.44184256]
[103.14475250 19.68978500]
[98.45475006 33.93772507]
[105.87898254 35.00108719]
[116.82567596 24.74584961]
[127.77236938 14.49061394]
[138.71907043 4.23537779]
[149.66575623 -6.01985884]
[160.61245728 -16.27509499]
[171.55914307 -26.53033066]
[182.50584412 -36.78556824]
[179.13087463 -51.70390701]
[183.64643860 -66.21274567]
[194.74421692 -76.44532013]
[209.37588501 -79.72714996]
[223.58996582 -75.27456665]
[234.53665161 -85.52980804]
[227.89862061 -99.11022186]
[225.56002808 -114.04415894]
[227.72883606 -129.00369263]
[234.21218872 -142.65863037]
[244.43360901 -153.79479980]
[257.48419189 -161.42196655]
[272.20349121 -164.86192322]
[287.28271484 -163.80880737]
[301.38095093 -158.35624695]
[313.24468994 -148.98908997]
[321.81893921 -136.54025269]
[326.34130859 -122.11667633]
[326.40966797 -107.00089264]
[322.01797485 -92.53700256]
[313.55667114 -80.01110840]
[301.77819824 -70.53701019]
[287.72982788 -64.95713806]
[272.66076660 -63.76765060]
[257.91094971 -67.07431793]
[244.79190063 -74.58311462]
[233.84519958 -64.32787323]
[237.36218262 -49.85388184]
[233.13397217 -35.46714401]
[222.20004272 -25.05966377]
[207.42781067 -21.49904060]
[192.76107788 -25.83887291]
[181.81439209 -15.58363724]
[170.86769104 -5.32840061]
[159.92098999 4.92683601]
[148.97430420 15.18207264]
[138.02760315 25.43730927]
[127.08090973 35.69254684]
[116.13421631 45.94778061]
[137.91102600 62.32733917]
[148.46424866 85.86604309]
[146.42919922 110.12494659]
[133.69793701 129.15173340]
[114.61883545 138.94111633]
[117.27218628 153.70457458]
[127.32859039 165.91847229]
[121.96463776 179.81369019]
[124.61798859 194.57714844]
[127.27134705 209.34060669]
[129.92469788 224.10406494]
[132.57804871 238.86752319]
[153.57687378 241.33102417]
[172.51979065 250.66392517]
[187.23298645 265.77609253]
[196.03442383 284.91537476]
[197.92611694 305.87054443]
[192.70729065 326.22698975]
[205.57749939 333.93139648]
[218.44770813 341.63577271]
[231.31791687 349.34017944]
[246.46603394 345.71075439]
[259.40850830 353.70745850]
[262.77523804 368.17120361]
[275.64544678 375.87561035]
[288.51565552 383.57998657]
[301.89736938 376.04174805]
[317.25524902 376.22030640]
[330.45803833 384.06768799]
[337.95431519 397.47296143]
[337.72760010 412.83020020]
[329.83886719 426.00833130]
[316.41015625 433.46255493]
[301.05374146 433.18771362]
[287.90039062 425.25772095]
[280.48828125 411.80569458]
[280.81127930 396.45019531]
[267.94107056 388.74581909]
[255.07084656 381.04141235]
[240.73216248 384.90634155]
[227.57019043 377.27633667]
[223.61352539 362.21038818]
[210.74331665 354.50601196]
[197.87310791 346.80160522]
[185.00289917 339.09722900]
[178.63621521 346.10562134]
[171.27496338 352.06082153]
[163.09146118 356.82342529]
[154.27722168 360.28198242]
[145.03857422 362.35552979]
[135.59173584 362.99554443]
[133.64118958 377.86819458]
[131.69064331 392.74081421]
[130.00486755 407.64581299]
[128.58438110 422.57839966]
[127.16390991 437.51098633]
[125.74343109 452.44357300]
[124.32295227 467.37615967]
[122.90248108 482.30874634]
[129.29815674 496.77960205]
[120.39037323 508.71697998]
[118.96989441 523.64959717]
[132.54989624 533.10968018]
[139.45764160 548.04589844]
[137.88975525 564.33282471]
[128.36958313 577.52447510]
[113.57819366 584.06805420]
[112.33483887 599.01647949]
[111.09148407 613.96484375]
[125.04907227 619.79931641]
[136.51925659 629.66290283]
[144.37829590 642.58923340]
[147.85626221 657.31195068]
[146.61239624 672.38867188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 259]
[14 258]
[15 257]
[21 252]
[22 251]
[24 249]
[25 248]
[26 247]
[27 246]
[28 245]
[29 244]
[33 243]
[34 242]
[35 241]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[54 196]
[55 195]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 183]
[156 178]
[157 177]
[208 235]
[209 234]
[210 233]
[211 232]
[214 229]
[215 228]
[216 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
