%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCCGACGUGGUUCAGGAACUGGGCGUGGCUUCGGUUACUGUGGUAGCGGGGACGCUUAGGCAGGGCCUGCGCCCAGUUUAGAGGCCAAUGCUUCUCCCGUCCUUUGC\
) } def
/len { sequence length } bind def

/coor [
[95.12344360 156.96159363]
[91.40925598 142.42869568]
[87.69506836 127.89581299]
[72.93932343 125.19987488]
[64.32619476 137.48051453]
[55.71305847 149.76113892]
[47.09992599 162.04177856]
[38.48679352 174.32240295]
[39.83305740 190.30886841]
[28.07521248 201.22366333]
[12.23287106 198.69387817]
[4.45892191 184.66017151]
[10.71687317 169.88796997]
[26.20615959 165.70927429]
[34.81929398 153.42863464]
[43.43242645 141.14801025]
[52.04555893 128.86737061]
[60.65869141 116.58674622]
[68.85088348 97.18193817]
[83.38372803 89.12670135]
[95.93831635 92.60261536]
[92.62954712 77.97209930]
[89.32078552 63.34157944]
[86.01201630 48.71106339]
[82.70324707 34.08054352]
[79.39448547 19.45002556]
[76.08571625 4.81950760]
[72.77694702 -9.81101036]
[69.46818542 -24.44152832]
[66.15941620 -39.07204819]
[62.85065079 -53.70256424]
[59.33883286 -68.28567505]
[55.62464142 -82.81856537]
[51.91045380 -97.35144806]
[48.19626617 -111.88433838]
[39.73125839 -99.50113678]
[25.35150719 -95.23231506]
[11.50089264 -100.99082947]
[4.38616753 -114.19615936]
[7.19559526 -128.93070984]
[18.67020988 -138.59162903]
[33.66799164 -138.84962463]
[45.46762085 -129.58988953]
[44.63399887 -144.56671143]
[43.80037689 -159.54351807]
[42.96675491 -174.52033997]
[30.09181595 -182.97859192]
[24.72878075 -197.22959900]
[28.73818779 -211.73439026]
[40.38042831 -220.98620605]
[39.54681015 -235.96302795]
[38.71318817 -250.93983459]
[37.87956619 -265.91665649]
[28.45544052 -279.33746338]
[35.61057281 -294.09335327]
[51.98437500 -295.00473022]
[60.73288345 -281.13403320]
[52.85638428 -266.75027466]
[53.69000626 -251.77346802]
[54.52362823 -236.79664612]
[55.35724640 -221.81982422]
[67.95432281 -213.91719055]
[73.54866791 -199.94696045]
[69.80030823 -185.18879700]
[57.94357300 -175.35395813]
[58.77719498 -160.37713623]
[59.61081696 -145.40032959]
[60.44443893 -130.42350769]
[62.72915268 -115.59852600]
[66.44334412 -101.06563568]
[70.15753174 -86.53275299]
[73.87171936 -71.99986267]
[78.64397430 -66.21731567]
[77.48117065 -57.01133347]
[80.78993225 -42.38081360]
[84.09870148 -27.75029564]
[87.40747070 -13.11977673]
[90.71623230 1.51074100]
[94.02500153 16.14125824]
[97.33377075 30.77177811]
[100.64253235 45.40229416]
[103.95130157 60.03281403]
[107.26007080 74.66333008]
[110.56883240 89.29385376]
[120.01403809 100.94666290]
[133.64273071 107.21235657]
[147.27142334 113.47804260]
[160.90010071 119.74373627]
[174.52879333 126.00942993]
[188.15747070 132.27511597]
[204.42729187 130.21960449]
[214.12545776 143.44374084]
[207.27531433 158.34367371]
[190.92372131 159.59161377]
[181.89178467 145.90380859]
[168.26310730 139.63810730]
[154.63441467 133.37242126]
[141.00572205 127.10673523]
[127.37703705 120.84104156]
[113.74835205 114.57534790]
[102.22795105 124.18162537]
[105.94214630 138.71450806]
[109.65633392 153.24739075]
[124.46630096 157.31684875]
[135.24597168 168.25733948]
[139.09564209 183.12594604]
[134.97979736 197.92309570]
[124.00556946 208.66841125]
[109.12496185 212.47146606]
[94.34079742 208.30924988]
[83.62992859 197.30139160]
[79.87353516 182.40893555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[21 84]
[22 83]
[23 82]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 72]
[33 71]
[34 70]
[35 69]
[43 68]
[44 67]
[45 66]
[46 65]
[50 61]
[51 60]
[52 59]
[53 58]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
