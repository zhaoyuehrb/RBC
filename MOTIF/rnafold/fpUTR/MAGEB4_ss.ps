%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGACUAAGAACAAUAGCCCAGUGAAUACUUAGAGCAGUGUUCUCAAGGAAUCCUGCAGAGGCGGCUUCUGAAAAGCCAAGGUAGUAUCUGCCUGCUGAAGGUGUUCUCAGGAUUUCAUUUGCUCUUCUCCAGGAACCACAUCACCUGCCCUUCUGCCUACACUCCUGCCUGCUGUGCCUAACCACAGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[72.04219818 135.42779541]
[66.89930725 130.67755127]
[62.55297852 125.18904877]
[59.10779953 119.09438324]
[56.64667892 112.54022217]
[55.22884369 105.68428040]
[54.88840866 98.69155121]
[55.63357544 91.73030853]
[57.44640350 84.96807098]
[60.28327179 78.56757355]
[48.45003128 69.34941101]
[36.61679077 60.13125610]
[24.78355026 50.91310120]
[9.14192295 48.53610992]
[3.85650873 34.61082077]
[-7.97673178 25.39266586]
[-19.80997086 16.17450714]
[-9.53159618 27.09947968]
[-6.40868664 41.77079391]
[-11.34668827 55.93469620]
[-22.91389465 65.48455048]
[-37.75654602 67.65150452]
[-51.57121277 61.80728149]
[-60.35251617 49.64633179]
[-61.55443192 34.69456100]
[-54.82848358 21.28704071]
[-42.12711334 13.31179714]
[-55.90386200 19.24485779]
[-69.68061066 25.17791748]
[-83.45735931 31.11097908]
[-97.23410797 37.04404068]
[-111.01085663 42.97710037]
[-124.78760529 48.91016006]
[-130.39772034 63.68521500]
[-144.84625244 70.08951569]
[-159.56117249 64.32350922]
[-165.81236267 49.80806351]
[-159.89109802 35.15493393]
[-145.31037903 29.05756187]
[-130.72067261 35.13341141]
[-116.94391632 29.20035172]
[-103.16716766 23.26729012]
[-89.39041901 17.33423042]
[-75.61367035 11.40116978]
[-61.83692551 5.46810913]
[-48.06017685 -0.46495122]
[-45.31481552 -7.44442177]
[-59.27366638 -12.93537045]
[-53.78248596 -26.89412880]
[-39.82410049 -21.40336227]
[-37.07874298 -28.38283348]
[-43.12146378 -42.11183548]
[-49.16418457 -55.84083939]
[-55.20690536 -69.56983948]
[-61.24962616 -83.29884338]
[-67.29234314 -97.02784729]
[-73.33506775 -110.75685120]
[-79.37778473 -124.48585510]
[-85.42050934 -138.21485901]
[-91.74916077 -144.81805420]
[-91.44818115 -152.21130371]
[-97.27120209 -166.03492737]
[-103.09423065 -179.85853577]
[-108.91725159 -193.68215942]
[-115.13980103 -200.38543701]
[-114.72096252 -207.77294922]
[-120.32280731 -221.68765259]
[-132.65406799 -231.59980774]
[-130.22964478 -246.29579163]
[-135.83149719 -260.21051025]
[-141.43333435 -274.12521362]
[-147.03518677 -288.03994751]
[-155.28079224 -275.50958252]
[-170.20265198 -273.98052979]
[-180.81819153 -284.57818604]
[-179.31431580 -299.50259399]
[-166.79788208 -307.76934814]
[-152.47994995 -303.29299927]
[-156.95567322 -317.60968018]
[-161.43139648 -331.92639160]
[-166.04125977 -336.69168091]
[-167.34753418 -342.23751831]
[-165.81369019 -346.77148438]
[-169.83058167 -361.22360229]
[-173.84748840 -375.67575073]
[-177.86437988 -390.12789917]
[-181.88128662 -404.58004761]
[-185.89817810 -419.03219604]
[-195.96530151 -432.67367554]
[-185.64381409 -446.12368774]
[-169.86215210 -439.92889404]
[-171.44604492 -423.04910278]
[-167.42913818 -408.59695435]
[-163.41224670 -394.14480591]
[-159.39533997 -379.69265747]
[-155.37844849 -365.24050903]
[-151.36154175 -350.78836060]
[-147.11470032 -336.40213013]
[-142.63897705 -322.08541870]
[-138.16325378 -307.76870728]
[-133.12046814 -293.64178467]
[-127.51862335 -279.72705078]
[-121.91677856 -265.81234741]
[-116.31493378 -251.89762878]
[-104.38436127 -242.98074341]
[-106.40809631 -227.28950500]
[-100.80625153 -213.37478638]
[-95.09363556 -199.50517273]
[-89.27061462 -185.68156433]
[-83.44758606 -171.85794067]
[-77.62456512 -158.03433228]
[-71.69150543 -144.25758362]
[-65.64878082 -130.52857971]
[-59.60606384 -116.79956818]
[-53.56334305 -103.07057190]
[-47.52062225 -89.34156799]
[-41.47790146 -75.61256409]
[-35.43518066 -61.88356018]
[-29.39245796 -48.15455627]
[-23.34973717 -34.42555237]
[-10.87301350 -23.16175079]
[-6.74394083 -8.58936501]
[-10.59181404 4.34126711]
[1.24142587 13.55942440]
[13.07466602 22.77758217]
[27.86989975 24.49522591]
[34.00170898 39.07986069]
[45.83494568 48.29801559]
[57.66818619 57.51617432]
[69.50142670 66.73432922]
[92.46754456 55.50247574]
[117.85082245 58.54984283]
[137.50578308 74.89852905]
[145.12516785 99.30226898]
[159.95335388 101.56605530]
[174.78155518 103.82984161]
[189.60974121 106.09363556]
[204.43792725 108.35742188]
[209.74993896 94.26925659]
[217.87528992 81.59359741]
[228.45877075 70.88455963]
[241.03773499 62.61030197]
[255.06228638 57.13254166]
[269.91931152 54.69073486]
[284.95932007 55.39163589]
[299.52487183 59.20459747]
[312.97918701 65.96293640]
[324.73410034 75.37120819]
[334.27575684 87.01811981]
[341.18701172 100.39452362]
[345.16577148 114.91565704]
[346.03805542 129.94671631]
[343.76577759 144.83061218]
[338.44821167 158.91668701]
[330.31790161 171.58914185]
[319.73019409 182.29402161]
[307.14797974 190.56332397]
[293.12127686 196.03556824]
[278.26327515 198.47152710]
[263.22354126 197.76470947]
[248.65950012 193.94602966]
[235.20783997 187.18238831]
[223.45661926 177.76950073]
[213.91955566 166.11883545]
[207.01354980 152.73971558]
[203.04052734 138.21701050]
[202.17414856 123.18561554]
[187.34594727 120.92182159]
[172.51776123 118.65803528]
[157.68957520 116.39424896]
[142.86137390 114.13045502]
[139.98548889 120.92672729]
[136.04046631 127.16344452]
[131.13175964 132.67385864]
[125.39065552 137.31062317]
[131.65153503 150.94151306]
[137.91241455 164.57241821]
[144.17329407 178.20330811]
[150.43417358 191.83421326]
[156.69506836 205.46510315]
[171.60008240 210.72021484]
[178.34812927 225.01144409]
[172.93572998 239.86006165]
[158.57395935 246.45664978]
[143.78338623 240.88755798]
[137.33901978 226.45684814]
[143.06416321 211.72598267]
[136.80328369 198.09509277]
[130.54240417 184.46418762]
[124.28151703 170.83329773]
[118.02063751 157.20239258]
[111.75975800 143.57150269]
[104.87946320 144.86601257]
[97.88174438 145.08082581]
[90.93500519 144.21078491]
[84.20640564 142.27682495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 130]
[11 129]
[12 128]
[13 127]
[15 125]
[16 124]
[17 123]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[61 111]
[62 110]
[63 109]
[64 108]
[66 107]
[67 106]
[69 104]
[70 103]
[71 102]
[72 101]
[78 100]
[79 99]
[80 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
