%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RASSF1)
} def

/sequence { (\
UCUCCUCAGCUCCUUCCCGCCGCCCAGUCUGGAUCCUGGGGGAGGCGCUGAAGUCGGGGCCCGCCCUGUGGCCCCGCCCGGCCCGCGCUUGCUAGCGCCCAAAGCCAGCGAAGCACGGGCCCAACCGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 51 0.004178884 ubox
1 128 0.003609960 ubox
1 129 0.006032566 ubox
2 50 0.003522665 ubox
2 53 0.263955592 ubox
2 56 0.013873510 ubox
2 127 0.004556214 ubox
2 128 0.008425628 ubox
2 129 0.021681694 ubox
3 51 0.009858295 ubox
3 52 0.252980525 ubox
3 127 0.007610753 ubox
3 128 0.018665742 ubox
3 129 0.045394390 ubox
4 50 0.008460058 ubox
4 56 0.004333544 ubox
4 57 0.004379442 ubox
4 127 0.018696741 ubox
4 128 0.060668894 ubox
4 129 0.016336500 ubox
5 53 0.436177366 ubox
5 56 0.005504551 ubox
5 127 0.060653166 ubox
5 128 0.016457496 ubox
6 51 0.910485597 ubox
6 52 0.310170131 ubox
6 127 0.010156958 ubox
7 50 0.999681899 ubox
8 49 0.999703721 ubox
9 48 0.999958842 ubox
10 47 0.999566580 ubox
11 45 0.006638474 ubox
12 44 0.006034750 ubox
12 45 0.993934625 ubox
13 44 0.994053865 ubox
13 45 0.104430180 ubox
13 53 0.007551939 ubox
14 42 0.040254292 ubox
14 43 0.972328498 ubox
14 44 0.106870367 ubox
14 52 0.007618833 ubox
15 41 0.086874299 ubox
15 42 0.940383514 ubox
15 43 0.226478619 ubox
15 51 0.007647276 ubox
16 40 0.116832087 ubox
16 41 0.937405041 ubox
16 42 0.301984449 ubox
16 45 0.003766069 ubox
16 50 0.007636843 ubox
17 39 0.139707753 ubox
17 40 0.925697065 ubox
17 41 0.302272235 ubox
17 42 0.036036519 ubox
17 44 0.003624612 ubox
17 45 0.014197994 ubox
18 38 0.159252507 ubox
18 39 0.912167108 ubox
18 40 0.274836937 ubox
18 41 0.038137799 ubox
18 44 0.014447608 ubox
18 47 0.007808560 ubox
19 28 0.016391037 ubox
19 37 0.160182195 ubox
19 46 0.009212359 ubox
20 27 0.016549518 ubox
20 32 0.057366641 ubox
20 39 0.248763341 ubox
20 40 0.004986900 ubox
20 41 0.007810526 ubox
20 42 0.117513691 ubox
20 45 0.009212231 ubox
21 31 0.057620200 ubox
21 38 0.253996305 ubox
21 39 0.005021349 ubox
21 40 0.006340930 ubox
21 41 0.119919350 ubox
21 44 0.009185949 ubox
22 28 0.013487925 ubox
22 30 0.047068287 ubox
22 37 0.228647382 ubox
23 27 0.014658217 ubox
23 32 0.451190007 ubox
23 39 0.017143199 ubox
23 40 0.217050044 ubox
24 31 0.447581051 ubox
24 32 0.823756735 ubox
24 38 0.014804010 ubox
24 39 0.280932632 ubox
25 31 0.826394017 ubox
25 38 0.307945996 ubox
26 30 0.670888998 ubox
26 37 0.308579879 ubox
27 34 0.011762399 ubox
27 36 0.308329457 ubox
28 33 0.015383543 ubox
29 38 0.009083846 ubox
29 39 0.003718382 ubox
30 38 0.005657867 ubox
31 37 0.007178846 ubox
32 36 0.007469826 ubox
53 69 0.005357212 ubox
53 77 0.054819975 ubox
53 130 0.007737092 ubox
54 76 0.011851851 ubox
54 129 0.006252658 ubox
55 68 0.031923533 ubox
55 76 0.206604121 ubox
55 128 0.005708379 ubox
56 66 0.007469018 ubox
56 67 0.032722245 ubox
56 74 0.004404074 ubox
56 75 0.998034692 ubox
57 65 0.007481688 ubox
57 66 0.032848133 ubox
57 73 0.003816640 ubox
57 74 0.999121727 ubox
57 75 0.023357296 ubox
58 64 0.007480397 ubox
58 65 0.032848035 ubox
58 73 0.999141056 ubox
58 74 0.023160874 ubox
59 64 0.032644952 ubox
59 72 0.999138550 ubox
59 73 0.022889726 ubox
60 71 0.946782475 ubox
61 70 0.891010000 ubox
61 71 0.320006410 ubox
62 68 0.653110305 ubox
62 70 0.451977774 ubox
63 67 0.403313773 ubox
63 69 0.551173105 ubox
63 72 0.003959872 ubox
64 68 0.549757446 ubox
64 71 0.004288874 ubox
65 70 0.004617031 ubox
70 131 0.033215485 ubox
71 130 0.033603380 ubox
72 129 0.032610164 ubox
73 128 0.031583191 ubox
73 129 0.008398131 ubox
74 127 0.030472786 ubox
74 128 0.011694596 ubox
75 127 0.014243241 ubox
76 126 0.016491134 ubox
76 130 0.975636341 ubox
77 128 0.011020755 ubox
77 129 0.996337801 ubox
78 127 0.011205030 ubox
78 128 0.996672847 ubox
78 129 0.008589094 ubox
79 127 0.996384343 ubox
79 128 0.008844662 ubox
80 121 0.834673130 ubox
80 122 0.074836311 ubox
80 126 0.545069712 ubox
81 120 0.927452510 ubox
81 121 0.058716237 ubox
81 125 0.369114466 ubox
82 119 0.999931542 ubox
83 118 0.999991149 ubox
84 117 0.999975860 ubox
85 114 0.004956709 ubox
85 116 0.999777590 ubox
86 113 0.005435774 ubox
87 114 0.999751716 ubox
88 113 0.999879591 ubox
89 111 0.520512393 ubox
89 112 0.850746148 ubox
90 110 0.738038523 ubox
90 111 0.664508401 ubox
90 112 0.004073778 ubox
91 105 0.003401951 ubox
91 109 0.999259615 ubox
92 104 0.003417404 ubox
92 108 0.999906059 ubox
93 103 0.003333759 ubox
93 107 0.981062235 ubox
95 105 0.993972884 ubox
96 104 0.994454475 ubox
96 110 0.003771831 ubox
97 105 0.101999576 ubox
97 109 0.003778056 ubox
98 104 0.101942292 ubox
98 108 0.003771709 ubox
119 130 0.003975472 ubox
120 129 0.004653489 ubox
121 128 0.005634652 ubox
122 127 0.008982078 ubox
122 128 0.003222737 ubox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
76 130 0.9500000 lbox
77 129 0.9500000 lbox
78 128 0.9500000 lbox
79 127 0.9500000 lbox
80 121 0.9500000 lbox
81 120 0.9500000 lbox
82 119 0.9500000 lbox
83 118 0.9500000 lbox
84 117 0.9500000 lbox
85 116 0.9500000 lbox
87 114 0.9500000 lbox
88 113 0.9500000 lbox
89 112 0.9500000 lbox
90 111 0.9500000 lbox
91 109 0.9500000 lbox
92 108 0.9500000 lbox
93 107 0.9500000 lbox
95 105 0.9500000 lbox
96 104 0.9500000 lbox
showpage
end
%%EOF
