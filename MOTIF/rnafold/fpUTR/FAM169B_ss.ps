%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCGCAAGCAAAUGAAAAACAUCCUGGAAUUGUGAAUUCCCCUGUGGCAAGUGGUUAUCGUUCGUGGUGGCAGUCUGCUGUUACGAGCAUAAUAGGAUGAAUAUGGACUUUGACGUCAGAUGGAGCUGACUUGGAAUCCUGGCUCUGCCAGCUGACUGGCAGAGGGGUUGUGGCUGUUUACAUAAAGGAAUCCUGGUGCUCCACGGAAGAUGCACUAAGAACCUCUGAUCCUGCAAGAGAAGGGUUG\
) } def
/len { sequence length } bind def

/coor [
[126.23663330 217.60728455]
[122.27315521 197.69195557]
[127.44433594 178.00729370]
[140.74501038 162.54049683]
[134.04411316 149.12043762]
[127.34320831 135.70037842]
[120.64230347 122.28032684]
[120.08898163 137.27011108]
[119.53565979 152.25990295]
[120.95936584 167.19218445]
[117.29806519 181.73849487]
[108.97493744 194.21749878]
[96.95200348 203.18682861]
[82.61891937 207.60980225]
[67.63235474 206.97517395]
[53.72450256 201.35630798]
[42.50289154 191.40263367]
[35.26455688 178.26464844]
[32.84612656 163.46090698]
[35.52713776 148.70243835]
[42.99863434 135.69398499]
[56.11711121 128.42036438]
[69.23558807 121.14673615]
[54.23588181 121.24060822]
[39.23617554 121.33448029]
[24.23646927 121.42835236]
[9.23676300 121.52222443]
[-5.76294374 121.61609650]
[-19.91453743 126.58926392]
[-31.67537880 135.89961243]
[-43.43622208 145.20996094]
[-55.19706345 154.52030945]
[-66.95790863 163.83065796]
[-78.71875000 173.14100647]
[-87.38461304 187.71286011]
[-103.78594971 183.41955566]
[-104.20076752 166.47068787]
[-88.02909851 161.38017273]
[-76.26825714 152.06982422]
[-64.50740814 142.75946045]
[-52.74657059 133.44911194]
[-40.98572922 124.13877106]
[-29.22488594 114.82842255]
[-32.82487106 108.24890137]
[-43.62482071 88.51033020]
[-57.80725861 93.39483643]
[-64.50827026 107.70819092]
[-79.39591217 113.01229858]
[-93.63761902 106.16033173]
[-98.78402710 91.21744537]
[-91.78187561 77.04898071]
[-76.78540802 72.06083679]
[-62.69176865 79.21240234]
[-48.50932693 74.32788849]
[-48.46239471 66.82804108]
[-48.36852264 51.82833099]
[-48.32158661 44.32847977]
[-62.44178009 39.26684570]
[-76.56197357 34.20521164]
[-90.68216705 29.14357948]
[-104.80236053 24.08194733]
[-113.91012573 24.13456917]
[-119.06693268 18.86758995]
[-133.12266541 13.62962532]
[-147.17840576 8.39166069]
[-161.23414612 3.15369630]
[-175.28987122 -2.08426809]
[-189.34561157 -7.32223272]
[-203.40135193 -12.56019783]
[-217.45709229 -17.79816246]
[-231.51281738 -23.03612709]
[-245.56855774 -28.27409172]
[-259.62429810 -33.51205444]
[-273.68002319 -38.75001907]
[-287.73577881 -43.98798370]
[-304.68917847 -43.85325623]
[-309.51181030 -60.10682678]
[-295.22848511 -69.24042511]
[-282.49780273 -58.04372025]
[-268.44207764 -52.80575562]
[-254.38633728 -47.56779099]
[-240.33059692 -42.32982635]
[-226.27485657 -37.09186172]
[-212.21911621 -31.85389900]
[-198.16339111 -26.61593437]
[-184.10765076 -21.37796974]
[-170.05191040 -16.14000511]
[-155.99617004 -10.90204048]
[-141.94044495 -5.66407537]
[-127.88470459 -0.42611086]
[-113.82897186 4.81185389]
[-99.74073029 9.96175289]
[-85.62053680 15.02338600]
[-71.50034332 20.08502007]
[-57.38014603 25.14665222]
[-43.25995255 30.20828629]
[-5.85681534 106.61638641]
[9.14289093 106.52251434]
[24.14259720 106.42864227]
[39.14230347 106.33477020]
[54.14200974 106.24090576]
[69.14171600 106.14703369]
[73.64824677 100.15193176]
[58.75789261 98.34158325]
[52.88043594 84.54102325]
[61.89327240 72.55065918]
[76.78366089 74.36073303]
[82.66130066 88.16173553]
[87.16783142 82.16664124]
[83.08944702 67.73172760]
[79.01107025 53.29680634]
[65.09764099 45.80067444]
[60.64001846 30.63805008]
[68.28283691 16.80465126]
[83.49173737 12.50758934]
[97.24356079 20.29623413]
[101.37958527 35.54972076]
[93.44598389 49.21842575]
[97.52436829 63.65334320]
[101.60274506 78.08825684]
[108.63061523 80.70723724]
[120.19467926 71.15357208]
[122.68635559 85.94520569]
[129.71421814 88.56418610]
[142.24462891 80.31864929]
[154.77503967 72.07310486]
[167.30543518 63.82756805]
[179.83584595 55.58203125]
[192.36625671 47.33649063]
[195.64762878 41.64495087]
[200.56620789 38.86360931]
[205.31509399 39.04596710]
[218.04795837 31.11664772]
[230.78083801 23.18732834]
[238.40510559 9.32439518]
[253.29885864 9.16435528]
[266.03173828 1.23503494]
[278.76458740 -6.69428492]
[286.38888550 -20.55721855]
[301.28262329 -20.71725845]
[314.01547241 -28.64657784]
[326.74835205 -36.57589722]
[339.48120117 -44.50521851]
[329.86334229 -53.99737549]
[326.54528809 -70.06491852]
[332.76614380 -88.82313538]
[343.27270508 -99.52883148]
[353.77929688 -110.23453522]
[364.28585815 -120.94023132]
[374.79241943 -131.64593506]
[385.29898071 -142.35163879]
[395.80557251 -153.05732727]
[406.31213379 -163.76303101]
[416.81869507 -174.46873474]
[420.38806152 -190.47471619]
[436.11325073 -195.12773132]
[447.81753540 -183.64114380]
[443.46057129 -167.83137512]
[427.52438354 -163.96215820]
[417.01782227 -153.25646973]
[406.51126099 -142.55076599]
[396.00469971 -131.84506226]
[385.49810791 -121.13936615]
[374.99154663 -110.43366241]
[364.48498535 -99.72796631]
[353.97842407 -89.02226257]
[343.47183228 -78.31656647]
[347.11294556 -71.75970459]
[362.11083984 -71.50941467]
[354.39511108 -58.64597321]
[358.03619385 -52.08910751]
[372.67779541 -55.34843063]
[387.31942749 -58.60774994]
[401.96102905 -61.86707306]
[416.60266113 -65.12639618]
[422.65393066 -79.41490936]
[435.96542358 -87.38885498]
[451.41857910 -85.98207855]
[463.07138062 -75.73551178]
[466.44305420 -60.58917999]
[460.23715210 -46.36714935]
[446.83993530 -38.53808212]
[431.40292358 -40.11241150]
[419.86196899 -50.48478317]
[405.22036743 -47.22546005]
[390.57873535 -43.96613693]
[375.93713379 -40.70681763]
[361.29553223 -37.44749451]
[347.41052246 -31.77235031]
[334.67767334 -23.84303093]
[321.94479370 -15.91371155]
[309.21194458 -7.98439121]
[302.49838257 5.31138325]
[286.69390869 6.03858137]
[273.96102905 13.96790123]
[261.22817993 21.89722061]
[254.51463318 35.19299698]
[238.71014404 35.92019272]
[225.97727966 43.84951401]
[213.24441528 51.77883530]
[200.61178589 59.86689758]
[188.08139038 68.11243439]
[175.55097961 76.35797882]
[163.02056885 84.60351562]
[150.49017334 92.84905243]
[137.95976257 101.09458923]
[134.06236267 115.57942200]
[140.76325989 128.99948120]
[147.46417236 142.41954041]
[154.16506958 155.83959961]
[164.09304810 154.02062988]
[174.16694641 154.43904114]
[183.88932800 157.06942749]
[192.78117371 161.77734375]
[200.40542603 168.32604980]
[206.38854980 176.38850403]
[210.43878174 185.56361389]
[212.36033630 195.39625549]
[212.06292725 205.39984131]
[209.56594849 215.08032227]
[204.99729919 223.96072388]
[198.58685303 231.60449219]
[190.65486145 237.63708496]
[196.15577698 251.59201050]
[201.65669250 265.54693604]
[207.15760803 279.50186157]
[213.20056152 286.31631470]
[212.63883972 293.66604614]
[217.96466064 307.68872070]
[232.10224915 314.22830200]
[237.30363464 328.52517700]
[230.98202515 341.96289062]
[236.30784607 355.98556519]
[250.82383728 362.23550415]
[256.59112549 376.94992065]
[250.18806458 391.39901733]
[235.41349792 397.01040649]
[221.03289795 390.45495605]
[215.57803345 375.62188721]
[222.28515625 361.31140137]
[216.95933533 347.28872681]
[203.31103516 341.43557739]
[197.71012878 327.29046631]
[203.94198608 313.01452637]
[198.61614990 298.99185181]
[193.20268250 285.00277710]
[187.70176697 271.04785156]
[182.20085144 257.09292603]
[176.69993591 243.13800049]
[156.53617859 242.84947205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[45 54]
[46 53]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[109 120]
[110 119]
[111 118]
[124 206]
[125 205]
[126 204]
[127 203]
[128 202]
[129 201]
[132 200]
[133 199]
[134 198]
[136 196]
[137 195]
[138 194]
[140 192]
[141 191]
[142 190]
[143 189]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[223 249]
[224 248]
[225 247]
[226 246]
[228 245]
[229 244]
[232 241]
[233 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
