%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LAMA5)
} def

/sequence { (\
AGACCCGCCGGGCUCCCGCCGCGCGCGCUGUCCCUGGAGCUCGGGGACGCGGCCCGGAGCCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.034816757 ubox
2 13 0.073166796 ubox
2 15 0.004170749 ubox
2 32 0.006454896 ubox
3 14 0.006061262 ubox
3 31 0.006473145 ubox
4 11 0.023196678 ubox
4 12 0.122686335 ubox
4 30 0.006460086 ubox
4 63 0.016064808 ubox
4 64 0.273702656 ubox
5 10 0.023321172 ubox
5 11 0.123025851 ubox
5 12 0.029534805 ubox
5 62 0.016024532 ubox
5 63 0.274712560 ubox
5 64 0.033719884 ubox
6 10 0.122141546 ubox
6 11 0.029863846 ubox
6 25 0.014982043 ubox
6 27 0.006923645 ubox
6 62 0.274414877 ubox
6 63 0.026273310 ubox
7 13 0.009090082 ubox
7 24 0.015597712 ubox
7 26 0.007883916 ubox
7 60 0.016684180 ubox
7 61 0.185622381 ubox
8 12 0.009036217 ubox
8 23 0.015364640 ubox
8 25 0.007896827 ubox
8 57 0.158688730 ubox
8 59 0.018353940 ubox
8 63 0.182030485 ubox
8 64 0.930949052 ubox
9 18 0.011188057 ubox
9 21 0.006898470 ubox
9 23 0.008365071 ubox
9 56 0.159587391 ubox
9 62 0.183889465 ubox
9 63 0.933543248 ubox
10 17 0.011609721 ubox
10 20 0.006384908 ubox
10 22 0.008776744 ubox
10 55 0.159619584 ubox
10 61 0.151426359 ubox
11 16 0.011570198 ubox
11 19 0.005789337 ubox
11 20 0.017404952 ubox
11 54 0.159524357 ubox
11 60 0.107351983 ubox
11 61 0.961265756 ubox
12 19 0.017948417 ubox
12 22 0.003930363 ubox
12 53 0.159378372 ubox
12 60 0.972440336 ubox
13 18 0.018126272 ubox
13 21 0.003938612 ubox
13 52 0.157255638 ubox
13 59 0.978325801 ubox
13 67 0.027451491 ubox
14 51 0.074016644 ubox
14 52 0.003358845 ubox
14 58 0.978129602 ubox
14 65 0.117586074 ubox
14 66 0.020091986 ubox
15 51 0.026195939 ubox
15 52 0.004350371 ubox
15 56 0.005519266 ubox
15 57 0.973090079 ubox
15 64 0.129788135 ubox
16 51 0.005886958 ubox
16 52 0.023580194 ubox
16 56 0.967813131 ubox
16 57 0.069559432 ubox
16 63 0.129901010 ubox
17 23 0.009957671 ubox
17 25 0.139410456 ubox
17 27 0.030763388 ubox
17 49 0.026614867 ubox
17 51 0.034770853 ubox
17 56 0.097984202 ubox
17 62 0.129891453 ubox
18 22 0.010322047 ubox
18 24 0.144731885 ubox
18 26 0.043345298 ubox
18 28 0.007308700 ubox
18 48 0.026417722 ubox
18 50 0.037409328 ubox
18 53 0.955378292 ubox
18 55 0.107144844 ubox
18 60 0.019076049 ubox
18 61 0.128013532 ubox
19 23 0.143692755 ubox
19 25 0.043419846 ubox
19 27 0.006749643 ubox
19 46 0.027432507 ubox
19 49 0.037164296 ubox
19 52 0.956829314 ubox
19 57 0.147472072 ubox
19 59 0.024362357 ubox
20 27 0.007531159 ubox
20 45 0.027436440 ubox
20 51 0.956493336 ubox
20 56 0.157148152 ubox
21 26 0.010956173 ubox
21 28 0.054322969 ubox
21 50 0.954210945 ubox
21 53 0.099041771 ubox
21 55 0.191215293 ubox
22 27 0.055230982 ubox
22 43 0.027416102 ubox
22 49 0.948574051 ubox
22 51 0.018674346 ubox
22 52 0.099040783 ubox
22 56 0.021380074 ubox
23 29 0.024636404 ubox
23 31 0.013938639 ubox
23 42 0.027394403 ubox
23 48 0.589222764 ubox
23 50 0.029818256 ubox
23 53 0.216882860 ubox
23 55 0.022162178 ubox
24 30 0.054094592 ubox
24 43 0.042878509 ubox
24 49 0.031375612 ubox
24 51 0.093657572 ubox
24 52 0.216931258 ubox
25 29 0.038200309 ubox
25 31 0.021497888 ubox
25 40 0.026426674 ubox
25 42 0.042975762 ubox
25 48 0.023940192 ubox
25 50 0.096925471 ubox
25 53 0.023759754 ubox
26 30 0.026420766 ubox
26 39 0.026385722 ubox
26 49 0.096880516 ubox
26 51 0.258516795 ubox
26 52 0.019530559 ubox
27 40 0.043703946 ubox
27 48 0.061687646 ubox
27 50 0.271253158 ubox
27 53 0.006208286 ubox
28 37 0.025632097 ubox
28 39 0.043730482 ubox
28 49 0.265816451 ubox
28 52 0.006265978 ubox
29 36 0.024902684 ubox
29 38 0.043596049 ubox
29 49 0.121538472 ubox
29 51 0.005510140 ubox
30 35 0.013903600 ubox
30 48 0.803537158 ubox
30 50 0.003468170 ubox
31 37 0.006417670 ubox
31 38 0.003439197 ubox
31 46 0.007940860 ubox
31 47 0.995764345 ubox
32 36 0.006876835 ubox
32 37 0.003973080 ubox
32 45 0.009111439 ubox
32 46 0.998604188 ubox
33 44 0.009406555 ubox
33 45 0.998614066 ubox
33 64 0.006522200 ubox
34 43 0.009679870 ubox
34 44 0.998603979 ubox
34 63 0.006538862 ubox
35 43 0.997719101 ubox
35 62 0.006533972 ubox
36 42 0.995785834 ubox
36 61 0.006519357 ubox
37 41 0.645156580 ubox
37 60 0.005511840 ubox
39 60 0.003650638 ubox
40 57 0.004403992 ubox
40 59 0.004863322 ubox
41 58 0.004877969 ubox
42 56 0.004443187 ubox
42 57 0.004834153 ubox
43 55 0.004545771 ubox
44 54 0.004543290 ubox
44 55 0.004807850 ubox
45 53 0.004538629 ubox
45 54 0.004812856 ubox
46 53 0.004802327 ubox
51 61 0.003912149 ubox
52 60 0.003943257 ubox
53 59 0.003937714 ubox
53 64 0.015845631 ubox
54 63 0.015910901 ubox
55 62 0.015911181 ubox
56 61 0.015692740 ubox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
showpage
end
%%EOF
