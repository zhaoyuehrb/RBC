%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100A7A)
} def

/sequence { (\
AUCUCACUCAUCCUUCUACUCGUGACACUUCCCAGUUCUGGCUUUUUGAAAGCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.007592188 ubox
1 23 0.003904558 ubox
1 36 0.005507334 ubox
2 10 0.008546861 ubox
2 22 0.003907750 ubox
2 25 0.032120597 ubox
2 35 0.005437231 ubox
2 41 0.004196230 ubox
2 49 0.017198739 ubox
3 24 0.034425877 ubox
3 35 0.018738588 ubox
3 40 0.023610269 ubox
3 48 0.018338965 ubox
3 52 0.015111140 ubox
3 57 0.026203558 ubox
4 25 0.768484769 ubox
4 34 0.013571216 ubox
4 40 0.003830734 ubox
4 41 0.003950778 ubox
4 49 0.055582443 ubox
4 51 0.014374432 ubox
4 56 0.022836719 ubox
5 24 0.833622445 ubox
5 40 0.020624069 ubox
5 48 0.058447883 ubox
6 23 0.833677964 ubox
6 36 0.037556668 ubox
6 39 0.018696701 ubox
6 47 0.056094337 ubox
7 22 0.832701507 ubox
7 35 0.040366180 ubox
7 52 0.012497378 ubox
7 57 0.024684013 ubox
8 25 0.203207366 ubox
8 34 0.036227235 ubox
8 41 0.004277821 ubox
8 49 0.049421899 ubox
8 51 0.010918181 ubox
8 56 0.023410301 ubox
9 24 0.220620629 ubox
9 40 0.021555454 ubox
9 48 0.051928190 ubox
10 23 0.218953489 ubox
10 39 0.020604686 ubox
10 47 0.051048691 ubox
11 22 0.211287491 ubox
11 25 0.017399859 ubox
11 49 0.013964507 ubox
12 24 0.019023754 ubox
12 40 0.011923899 ubox
12 41 0.065927134 ubox
12 48 0.014716357 ubox
13 35 0.013609981 ubox
13 40 0.073537470 ubox
13 41 0.021694447 ubox
13 52 0.021684010 ubox
13 57 0.038612825 ubox
14 25 0.010979116 ubox
14 34 0.013139459 ubox
14 40 0.025566015 ubox
14 50 0.037972449 ubox
14 51 0.018874803 ubox
14 55 0.008705583 ubox
14 56 0.038937521 ubox
14 57 0.003305355 ubox
15 24 0.010975819 ubox
15 25 0.092162156 ubox
15 40 0.005041755 ubox
15 41 0.009159720 ubox
15 49 0.043128964 ubox
15 50 0.014946286 ubox
15 54 0.008836447 ubox
15 55 0.034982948 ubox
15 56 0.004570156 ubox
16 24 0.099512956 ubox
16 35 0.015465696 ubox
16 40 0.030575543 ubox
16 41 0.044641647 ubox
16 48 0.044832901 ubox
16 52 0.007455810 ubox
16 57 0.018725930 ubox
17 24 0.012533205 ubox
17 34 0.014836656 ubox
17 40 0.047769656 ubox
17 48 0.005887776 ubox
17 51 0.007290897 ubox
17 56 0.018603036 ubox
18 23 0.013714003 ubox
18 36 0.096962602 ubox
18 39 0.044998821 ubox
18 47 0.006813911 ubox
19 35 0.100694279 ubox
19 41 0.033435457 ubox
19 52 0.008325379 ubox
19 57 0.021568510 ubox
20 34 0.094171392 ubox
20 40 0.020410578 ubox
20 41 0.068988683 ubox
20 49 0.019093099 ubox
20 51 0.007786205 ubox
20 56 0.020755231 ubox
21 40 0.333270599 ubox
21 48 0.019923061 ubox
22 28 0.041686825 ubox
22 36 0.007444398 ubox
22 39 0.324661424 ubox
22 42 0.045697118 ubox
22 47 0.018693152 ubox
22 53 0.035296579 ubox
23 27 0.037627467 ubox
23 34 0.079470677 ubox
23 40 0.016307249 ubox
23 41 0.044975200 ubox
23 48 0.004687769 ubox
23 52 0.035163607 ubox
23 54 0.010671047 ubox
24 30 0.021507422 ubox
24 31 0.089188070 ubox
24 33 0.086888004 ubox
24 37 0.318475971 ubox
24 38 0.222078695 ubox
24 39 0.011367616 ubox
24 45 0.012572017 ubox
24 46 0.005085307 ubox
24 47 0.005884996 ubox
24 53 0.011542962 ubox
25 29 0.019477426 ubox
25 30 0.080698411 ubox
25 36 0.340449123 ubox
25 37 0.213937243 ubox
25 44 0.012397885 ubox
25 45 0.005220532 ubox
25 46 0.005993301 ubox
26 35 0.351798349 ubox
26 40 0.105819815 ubox
26 48 0.060030733 ubox
27 36 0.389395400 ubox
27 39 0.087489343 ubox
27 47 0.058160217 ubox
28 35 0.412378395 ubox
28 41 0.018199446 ubox
28 52 0.048950588 ubox
28 57 0.048885960 ubox
29 34 0.376988958 ubox
29 35 0.021134166 ubox
29 40 0.020720241 ubox
29 49 0.006358324 ubox
29 50 0.061723901 ubox
29 51 0.043034298 ubox
29 52 0.004334769 ubox
29 55 0.010384713 ubox
29 56 0.048960475 ubox
29 57 0.004661538 ubox
30 34 0.022852772 ubox
30 40 0.005642578 ubox
30 41 0.009833461 ubox
30 48 0.006398688 ubox
30 49 0.071604413 ubox
30 50 0.034436927 ubox
30 51 0.005368629 ubox
30 54 0.011151391 ubox
30 55 0.042998135 ubox
30 56 0.006672933 ubox
31 40 0.050310944 ubox
31 41 0.039257519 ubox
31 48 0.075834785 ubox
32 40 0.050783650 ubox
32 41 0.288016747 ubox
33 40 0.361103483 ubox
33 48 0.027135907 ubox
34 39 0.325878525 ubox
34 43 0.072345924 ubox
34 44 0.004637845 ubox
34 45 0.013204323 ubox
34 46 0.004326378 ubox
34 47 0.026645276 ubox
35 42 0.076805284 ubox
35 44 0.014050369 ubox
35 45 0.004598149 ubox
35 46 0.024782789 ubox
35 53 0.022294066 ubox
36 41 0.073149527 ubox
36 50 0.042859597 ubox
36 51 0.003492590 ubox
36 52 0.020939863 ubox
36 55 0.029762332 ubox
36 56 0.057763466 ubox
36 57 0.041240490 ubox
37 49 0.050408434 ubox
37 50 0.003330931 ubox
37 51 0.012840819 ubox
37 54 0.033705619 ubox
37 55 0.062732332 ubox
37 56 0.057474266 ubox
38 48 0.051340903 ubox
38 52 0.009927116 ubox
38 57 0.307474642 ubox
39 48 0.004399451 ubox
39 51 0.010048153 ubox
39 54 0.138407173 ubox
39 56 0.313627997 ubox
40 46 0.012971489 ubox
40 47 0.008022360 ubox
40 53 0.106390930 ubox
41 45 0.009863293 ubox
41 46 0.006832606 ubox
41 53 0.925757203 ubox
42 52 0.936608845 ubox
42 57 0.065933155 ubox
43 49 0.009902057 ubox
43 50 0.032957886 ubox
43 51 0.933971089 ubox
43 52 0.011113281 ubox
43 55 0.004720509 ubox
43 56 0.066589432 ubox
43 57 0.014951031 ubox
44 48 0.012622574 ubox
44 49 0.038534900 ubox
44 50 0.913161918 ubox
44 51 0.031809415 ubox
44 52 0.007147403 ubox
44 54 0.004737250 ubox
44 55 0.063751527 ubox
44 56 0.022129690 ubox
44 57 0.152968124 ubox
45 49 0.760813640 ubox
45 50 0.037777751 ubox
45 51 0.010400080 ubox
45 52 0.006056891 ubox
45 54 0.059624919 ubox
45 55 0.020753144 ubox
45 56 0.235993124 ubox
45 57 0.012893747 ubox
46 50 0.012461212 ubox
46 51 0.006990704 ubox
46 52 0.011795168 ubox
46 54 0.017081861 ubox
46 55 0.252186793 ubox
46 56 0.019087561 ubox
46 57 0.008291966 ubox
47 51 0.009568316 ubox
47 54 0.256656105 ubox
47 55 0.019478714 ubox
47 56 0.012649761 ubox
48 53 0.256806361 ubox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
