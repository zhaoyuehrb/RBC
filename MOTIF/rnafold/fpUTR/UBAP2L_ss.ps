%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGGCGGGGGAAGGCGCGAGAGCGAGCGCGAGAGGGAAAAGGAGGGAGGGGGUGGGGAAGAGGGAAUCUUAUAUCACGUGACAGGGGCGGCGCGGCCCGGGGUGUCAGUGUGGAGGAGACUGAGUAUUCUACCUUGUAAAUACUGUUAUUUGUAUAUACUGUAA\
) } def
/len { sequence length } bind def

/coor [
[102.20652771 268.59161377]
[87.12306213 271.83084106]
[72.69084167 266.37973022]
[63.51514435 253.97769165]
[62.52389526 238.58221436]
[70.03340149 225.10589600]
[83.64740753 217.84901428]
[84.76835632 202.89096069]
[85.88931274 187.93290710]
[87.01026154 172.97483826]
[80.41426086 171.48748779]
[73.98124695 169.40522766]
[67.76474762 166.74540710]
[61.81650162 163.53016663]
[56.18600082 159.78623962]
[50.92010498 155.54479980]
[46.06263351 150.84114075]
[34.16233444 159.97256470]
[22.26203156 169.10398865]
[10.36173248 178.23541260]
[10.90252590 193.74305725]
[2.19698048 206.58801270]
[-12.40744495 211.83114624]
[-27.29504967 207.45634460]
[-36.74124527 195.14582825]
[-37.11378098 179.63322449]
[-28.26940346 166.88345337]
[-13.60896015 161.79905701]
[1.23031092 166.33509827]
[13.13061142 157.20368958]
[25.03091049 148.07226562]
[36.93120956 138.94084167]
[32.67031097 130.99635315]
[29.40537643 122.59336853]
[27.18470001 113.85617065]
[26.04113388 104.91400146]
[25.99159431 95.89914703]
[27.03681183 86.94495392]
[29.16132545 78.18387604]
[32.33370972 69.74550629]
[36.50703812 61.75467682]
[41.61957550 54.32958221]
[47.59569550 47.58005905]
[54.34700012 41.60595322]
[61.77362061 36.49562836]
[69.76569366 32.32468796]
[78.20500946 29.15481949]
[86.96672058 27.03291893]
[95.92122650 25.99037361]
[104.93606567 26.04260445]
[113.87789154 27.18883705]
[122.61442566 29.41211891]
[128.61280823 15.66368580]
[134.61119080 1.91525185]
[140.60957336 -11.83318233]
[146.60795593 -25.58161545]
[152.60632324 -39.33005142]
[158.60470581 -53.07848358]
[164.60308838 -66.82691956]
[170.60147095 -80.57534790]
[160.73321533 -92.16754150]
[156.89227295 -106.83499146]
[159.78869629 -121.65494537]
[168.79539490 -133.69821167]
[182.08305359 -140.60816956]
[196.99142456 -141.06178284]
[202.98980713 -154.81021118]
[197.45631409 -169.37106323]
[203.73538208 -183.22846985]
[217.65103149 -188.41407776]
[223.64939880 -202.16250610]
[229.64778137 -215.91094971]
[235.64616394 -229.65937805]
[235.04624939 -234.92860413]
[236.41600037 -239.43595886]
[239.12556458 -242.55252075]
[242.38574219 -243.99562073]
[249.14556885 -257.38607788]
[255.90539551 -270.77655029]
[262.66522217 -284.16702271]
[269.42504883 -297.55749512]
[276.05935669 -311.01058960]
[282.56762695 -324.52514648]
[289.07586670 -338.03967285]
[295.58413696 -351.55419922]
[302.09240723 -365.06872559]
[299.12908936 -386.26477051]
[316.55520630 -397.28186035]
[322.29544067 -411.14004517]
[328.03570557 -424.99826050]
[333.77593994 -438.85644531]
[327.49713135 -453.35995483]
[333.39044189 -468.02435303]
[347.95953369 -474.14947510]
[362.56079102 -468.10144043]
[368.53155518 -453.46841431]
[362.32946777 -438.93191528]
[347.63415527 -433.11618042]
[341.89389038 -419.25799561]
[336.15362549 -405.39981079]
[330.41339111 -391.54162598]
[335.13598633 -383.93762207]
[335.81625366 -374.87396240]
[332.17272949 -366.39663696]
[324.91448975 -360.47851562]
[315.60693359 -358.56048584]
[309.09866333 -345.04592896]
[302.59042358 -331.53140259]
[296.08215332 -318.01687622]
[289.57391357 -304.50234985]
[289.50457764 -297.08059692]
[282.81552124 -290.79769897]
[276.05569458 -277.40722656]
[269.29586792 -264.01672363]
[262.53604126 -250.62626648]
[255.77621460 -237.23579407]
[249.39460754 -223.66099548]
[243.39622498 -209.91256714]
[237.39784241 -196.16413879]
[231.39945984 -182.41569519]
[237.06318665 -168.68769836]
[231.17582703 -154.65939331]
[216.73823547 -148.81182861]
[210.73986816 -135.06340027]
[220.54762268 -123.82625580]
[224.52017212 -109.38574219]
[221.81793213 -94.59186554]
[212.92419434 -82.38851929]
[199.55970764 -75.22771454]
[184.34989929 -74.57697296]
[178.35151672 -60.82853699]
[172.35314941 -47.08010483]
[166.35476685 -33.33166885]
[160.35638428 -19.58323479]
[154.35800171 -5.83480167]
[148.35961914 7.91363239]
[142.36123657 21.66206551]
[136.36285400 35.41049957]
[157.47436523 53.19445801]
[170.61482239 77.46982574]
[173.96177673 104.86987305]
[167.05108643 131.59452820]
[150.84114075 153.93736267]
[159.97256470 165.83766174]
[169.10398865 177.73796082]
[178.23541260 189.63827515]
[193.74305725 189.09747314]
[206.58801270 197.80302429]
[211.83114624 212.40744019]
[207.45634460 227.29504395]
[195.14582825 236.74124146]
[179.63322449 237.11378479]
[166.88345337 228.26940918]
[161.79905701 213.60896301]
[166.33509827 198.76968384]
[157.20368958 186.86938477]
[148.07226562 174.96908569]
[138.94084167 163.06878662]
[130.32513428 167.63465881]
[121.18463135 171.03007507]
[111.67751312 173.19628906]
[101.96831512 174.09579468]
[100.84736633 189.05384827]
[99.72641754 204.01190186]
[98.60546112 218.96997070]
[110.98582458 228.17486572]
[116.40292358 242.61988831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 165]
[8 164]
[9 163]
[10 162]
[17 32]
[18 31]
[19 30]
[20 29]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[66 124]
[67 123]
[70 120]
[71 119]
[72 118]
[73 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[88 101]
[89 100]
[90 99]
[91 98]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
