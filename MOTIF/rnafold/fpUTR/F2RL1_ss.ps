%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCCGGGGCGUGGCCUCCCGCAGGUGAGUACGCUGCUCCUUCGGUUUCCCUGAAACCUAACCCGCCCUGGGGAGGCGCGCAGCAGAGGCUCCGAUUCGGGGCAGGUGAGAGGCUGACUUUCUCUCGGUGCGUCCAGUGGAGCUCUGAGUUUCGAAUCGGCGGCGGCGGAUUCCCCGCGCGCCCGGCGUCGGGGCUUCCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[109.12265015 265.07202148]
[107.08015442 250.21171570]
[105.03765106 235.35144043]
[102.99514771 220.49114990]
[100.95265198 205.63085938]
[98.91014862 190.77056885]
[96.86765289 175.91027832]
[94.82514954 161.04998779]
[85.42688751 149.49482727]
[91.21299744 134.76962280]
[89.17050171 119.90933228]
[77.18412018 110.89119720]
[62.33975601 113.04640198]
[47.49539566 115.20160675]
[32.66781616 117.46939850]
[17.85787010 119.84963226]
[3.04792547 122.22987366]
[-11.76201916 124.61011505]
[-26.57196426 126.99034882]
[-41.38190842 129.37059021]
[-56.19185257 131.75082397]
[-64.17115021 136.20362854]
[-71.24446869 134.05302429]
[-86.08882904 136.20823669]
[-100.93318939 138.36344910]
[-115.77755737 140.51864624]
[-126.44737244 165.39936829]
[-158.40586853 171.74816895]
[-171.28092957 179.44444275]
[-184.15599060 187.14073181]
[-197.03105164 194.83700562]
[-209.90611267 202.53329468]
[-220.39915466 215.84991455]
[-236.10012817 209.45336914]
[-234.30001831 192.59524536]
[-217.60240173 189.65821838]
[-204.72734070 181.96194458]
[-191.85227966 174.26565552]
[-178.97720337 166.56938171]
[-166.10214233 158.87310791]
[-168.07075500 151.63607788]
[-182.54487610 155.57307434]
[-186.48165894 141.09890747]
[-172.00799561 137.16201782]
[-173.97660828 129.92498779]
[-188.97618103 129.81117249]
[-203.97573853 129.69734192]
[-218.97531128 129.58352661]
[-233.97488403 129.46969604]
[-248.97444153 129.35586548]
[-264.85900879 135.28184509]
[-274.95068359 121.65853119]
[-264.65341187 108.18994141]
[-248.86062622 114.35630035]
[-233.86105347 114.47013092]
[-218.86148071 114.58395386]
[-203.86192322 114.69777679]
[-188.86235046 114.81159973]
[-173.86277771 114.92543030]
[-166.98669434 109.09431458]
[-159.20692444 105.20988464]
[-151.03735352 103.36247253]
[-142.98234558 103.51382446]
[-135.50604248 105.50678253]
[-129.00561523 109.08207703]
[-123.79029083 113.90072632]
[-120.06685638 119.57048035]
[-117.93276215 125.67428589]
[-103.08839417 123.51908112]
[-88.24403381 121.36387634]
[-73.39967346 119.20867157]
[-58.57209396 116.94087982]
[-43.76214600 114.56064606]
[-28.95220184 112.18040466]
[-14.14225769 109.80017090]
[0.66768730 107.41992950]
[15.47763252 105.03968811]
[30.28757668 102.65945435]
[36.39473724 98.49298859]
[45.34019089 100.35724640]
[60.18455124 98.20204163]
[75.02891541 96.04683685]
[81.82862854 82.67657471]
[74.82678986 69.41104889]
[67.82495117 56.14551926]
[53.66355896 47.87586975]
[54.01515579 31.48049164]
[68.51804352 23.82554436]
[82.25289917 32.78578186]
[81.09047699 49.14368057]
[88.09231567 62.40920639]
[95.09415436 75.67473602]
[109.99708557 77.37844086]
[119.81217957 66.03542328]
[129.62725830 54.69240189]
[139.44235229 43.34938812]
[149.25744629 32.00637054]
[159.07252502 20.66335106]
[168.88761902 9.32033443]
[178.70271301 -2.02268267]
[188.51779175 -13.36569977]
[198.33288574 -24.70871735]
[208.14796448 -36.05173492]
[217.96305847 -47.39475250]
[210.69654846 -49.82334900]
[204.02969360 -55.14641953]
[198.87850952 -63.15370178]
[196.08184814 -73.37558746]
[196.33293152 -85.10972595]
[201.88864136 -99.04292297]
[207.44436646 -112.97612000]
[213.00007629 -126.90931702]
[218.55580139 -140.84251404]
[213.56660461 -156.09005737]
[222.49694824 -169.41778564]
[238.49624634 -170.60180664]
[249.29121399 -158.73384094]
[246.60084534 -142.91798401]
[232.48899841 -135.28678894]
[226.93327332 -121.35359955]
[221.37756348 -107.42040253]
[215.82183838 -93.48719788]
[210.26612854 -79.55400085]
[215.97470093 -74.68963623]
[227.39187622 -64.96090698]
[233.10046387 -60.09654236]
[245.97552490 -67.79282379]
[258.85058594 -75.48910522]
[271.72564697 -83.18538666]
[279.60095215 -96.90726471]
[294.49514771 -96.79622650]
[307.37020874 -104.49250793]
[313.13281250 -111.58399963]
[320.49960327 -112.20618439]
[333.48999023 -119.70618439]
[346.48034668 -127.20618439]
[357.17428589 -140.36203003]
[372.77636719 -133.72793579]
[370.72061157 -116.89908600]
[353.98034668 -114.21580505]
[340.98999023 -106.71580505]
[327.99960327 -99.21580505]
[315.06649780 -91.61744690]
[302.19143677 -83.92116547]
[295.23703003 -70.74977112]
[279.42193604 -70.31031799]
[266.54687500 -62.61404037]
[253.67181396 -54.91775894]
[240.79673767 -47.22147751]
[229.30607605 -37.57966232]
[219.49098206 -26.23664665]
[209.67590332 -14.89362907]
[199.86080933 -3.55061173]
[190.04573059 7.79240561]
[180.23063660 19.13542366]
[170.41554260 30.47843933]
[160.60046387 41.82145691]
[150.78536987 53.16447449]
[140.97027588 64.50749207]
[131.15519714 75.85050964]
[121.34010315 87.19352722]
[129.07978821 87.09895325]
[137.06929016 88.75179291]
[149.82606506 96.64257812]
[162.58285522 104.53337097]
[175.33963013 112.42415619]
[188.15591431 120.21791840]
[201.03099060 127.91419983]
[213.90605164 135.61047363]
[226.78111267 143.30676270]
[242.62715149 140.80029297]
[254.36892700 151.73237610]
[252.99914551 167.71684265]
[239.56858826 176.49179077]
[224.38002014 171.32582092]
[219.08482361 156.18182373]
[206.20976257 148.48554993]
[193.33470154 140.78926086]
[180.45964050 133.09298706]
[173.10313416 132.35906982]
[167.44883728 125.18093872]
[154.69206238 117.29015350]
[141.93528748 109.39936066]
[129.17849731 101.50857544]
[122.89157104 105.59813690]
[110.31771851 113.77726746]
[104.03079224 117.86682892]
[106.07328796 132.72712708]
[115.61764526 145.34519958]
[109.68544006 159.00749207]
[111.72794342 173.86778259]
[113.77043915 188.72807312]
[115.81294250 203.58834839]
[117.85543823 218.44863892]
[119.89794159 233.30892944]
[121.94043732 248.16921997]
[123.98294067 263.02951050]
[138.23602295 268.75186157]
[147.70573425 280.84402466]
[149.84478760 296.05322266]
[144.07777405 310.28829956]
[131.95600891 319.72006226]
[116.74017334 321.81143188]
[102.52324677 315.99984741]
[93.12952423 303.84857178]
[91.08586121 288.62625122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[10 188]
[11 187]
[12 82]
[13 81]
[14 80]
[15 78]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[21 72]
[23 71]
[24 70]
[25 69]
[26 68]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[83 92]
[84 91]
[85 90]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[126 149]
[127 148]
[128 147]
[129 146]
[131 144]
[132 143]
[134 142]
[135 141]
[136 140]
[163 184]
[164 183]
[165 182]
[166 181]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
