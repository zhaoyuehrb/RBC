%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCCAGCACGCUGGUCAGCUCCUCUUGCUCGCAAGCAGGUCUGGCCCCAGCGGCGCGAAGUCACGAGGCUGGGGGCGGCCGGCGGCGAAGGGGGCGGGGCGAGGCCGGGGCGCCGCAGCGCGCAUAGGCGGAGCCUCGGGCCGCGGGCCGCCUUGGUAUAUCUGCGCGUGCGCGGCGUCGCUGCUGGGCCAGUCGGGACAGAGGAGACAAG\
) } def
/len { sequence length } bind def

/coor [
[98.51065063 246.30603027]
[102.75161743 231.37974548]
[114.97684479 221.82341003]
[114.31951141 206.83782959]
[113.66217804 191.85223389]
[113.00484467 176.86663818]
[110.28028870 162.11616516]
[105.54093170 147.88455200]
[100.80157471 133.65295410]
[96.06221771 119.42134857]
[92.43165588 115.33549500]
[90.54801941 110.84543610]
[90.33813477 106.54692078]
[91.54824066 102.96244812]
[77.03598022 99.16844940]
[62.52372742 95.37445068]
[48.01147079 91.58044434]
[33.49921417 87.78644562]
[18.98695946 83.99244690]
[1.34577334 89.27651978]
[-10.64626598 76.46234894]
[-25.21240807 72.88079834]
[-39.77854919 69.29924774]
[-54.34469223 65.71770477]
[-68.91083527 62.13615417]
[-84.15928650 66.35459137]
[-94.67100525 55.80219650]
[-109.23714447 52.22064590]
[-123.80329132 48.63909912]
[-139.05174255 52.85754013]
[-149.56346130 42.30514145]
[-164.12959290 38.72359085]
[-178.72152710 35.24855804]
[-193.33843994 31.88022423]
[-207.95535278 28.51189041]
[-219.28271484 34.67652130]
[-231.38636780 31.57219315]
[-237.91487122 21.39086533]
[-252.48101807 17.80931664]
[-267.72946167 22.02775764]
[-278.24118042 11.47535992]
[-292.80731201 7.89381075]
[-301.88485718 8.88364697]
[-307.55935669 4.15205050]
[-322.07162476 0.35804963]
[-336.58386230 -3.43595123]
[-351.89233398 0.55923653]
[-362.24874878 -10.14562702]
[-376.76098633 -13.93962765]
[-391.27325439 -17.73362923]
[-405.78552246 -21.52762985]
[-420.29776001 -25.32163048]
[-434.81002808 -29.11563110]
[-449.32226562 -32.90963364]
[-462.84899902 -25.18526840]
[-477.51242065 -29.23965645]
[-484.79306030 -42.18291473]
[-499.30532837 -45.97691345]
[-511.21884155 -36.03469849]
[-526.70318604 -35.02745819]
[-539.80432129 -43.34250641]
[-545.48461914 -57.78252792]
[-541.55981445 -72.79504395]
[-529.53912354 -82.60743713]
[-514.04473877 -83.44664001]
[-501.03460693 -74.98995972]
[-495.51132202 -60.48917007]
[-480.99908447 -56.69516754]
[-468.31533813 -64.41905212]
[-453.54379272 -60.77812958]
[-445.52825928 -47.42188644]
[-431.01602173 -43.62788773]
[-416.50375366 -39.83388519]
[-401.99151611 -36.03988647]
[-387.47924805 -32.24588394]
[-372.96701050 -28.45188332]
[-358.45474243 -24.65788269]
[-344.18429565 -28.92444229]
[-332.78988647 -17.94820595]
[-318.27761841 -14.15420628]
[-303.76535034 -10.36020470]
[-289.22576904 -6.67233181]
[-274.65963745 -3.09078240]
[-260.45303345 -7.56540012]
[-248.89945984 3.24317431]
[-234.33331299 6.82472372]
[-217.76635742 1.03269029]
[-204.58702087 13.89497185]
[-189.97010803 17.26330566]
[-175.35317993 20.63163757]
[-168.13151550 19.07097626]
[-160.54804993 24.15744972]
[-145.98190308 27.73899841]
[-131.77532959 23.26438141]
[-120.22174072 34.07295609]
[-105.65559387 37.65450287]
[-91.08945465 41.23605347]
[-76.88287354 36.76143646]
[-65.32928467 47.57001114]
[-50.76314545 51.15155792]
[-36.19700241 54.73310852]
[-21.63085938 58.31465912]
[-7.06471682 61.89620590]
[3.44074774 55.90322113]
[15.60388088 58.76565552]
[22.78096008 69.48018646]
[37.29321671 73.27419281]
[51.80547333 77.06819153]
[66.31772614 80.86219025]
[80.82997894 84.65619659]
[95.34223938 88.45019531]
[110.29382324 87.24599457]
[124.01182556 81.17833710]
[137.72982788 75.11067963]
[151.44781494 69.04301453]
[165.16581726 62.97535706]
[178.88381958 56.90769958]
[192.60182190 50.84003830]
[206.31982422 44.77237701]
[212.89968872 38.44098282]
[220.28286743 38.71791077]
[234.08805847 32.85134125]
[247.89324951 26.98476982]
[261.69845581 21.11819839]
[275.50363159 15.25162792]
[289.30883789 9.38505650]
[291.79193115 5.83135223]
[294.95761108 3.48671365]
[298.34252930 2.41727066]
[301.50942993 2.53209424]
[304.09600830 3.60525656]
[318.22030640 -1.44486666]
[332.34463501 -6.49498987]
[346.46893311 -11.54511261]
[360.59326172 -16.59523582]
[374.60351562 -21.95369911]
[388.49295044 -27.61792946]
[402.38238525 -33.28215790]
[406.18670654 -51.01279449]
[419.75531006 -62.80518341]
[437.52932739 -64.07833862]
[452.37573242 -54.51065063]
[466.09371948 -60.57831192]
[479.81170654 -66.64597321]
[493.52972412 -72.71363068]
[505.56933594 -84.65030670]
[520.37237549 -76.38561249]
[516.52862549 -59.87314987]
[499.59738159 -58.99563217]
[485.87936401 -52.92797089]
[472.16137695 -46.86030960]
[458.44338989 -40.79265213]
[457.67886353 -28.68033218]
[451.80340576 -17.97853470]
[441.87771606 -10.74681854]
[429.74850464 -8.40654850]
[417.70492554 -11.46188259]
[408.04660034 -19.39271927]
[394.15716553 -13.72848988]
[380.26773071 -8.06426048]
[378.57119751 -4.97654104]
[375.29632568 -2.55604529]
[370.77252197 -1.53495610]
[365.64337158 -2.47092175]
[351.51907349 2.57920122]
[337.39474487 7.62932444]
[323.27044678 12.67944813]
[309.14611816 17.72957039]
[295.17541504 23.19025040]
[281.37020874 29.05681992]
[267.56503296 34.92338943]
[253.75982666 40.78996277]
[239.95463562 46.65653229]
[226.14944458 52.52310181]
[212.38748169 58.49037933]
[198.66947937 64.55803680]
[184.95147705 70.62569427]
[171.23347473 76.69335938]
[157.51548767 82.76101685]
[143.79748535 88.82867432]
[130.07948303 94.89633942]
[116.36148071 100.96399689]
[110.29382324 114.68199158]
[115.03318024 128.91358948]
[119.77253723 143.14520264]
[124.51189423 157.37680054]
[169.21865845 159.05465698]
[177.31150818 171.68421936]
[185.40434265 184.31378174]
[200.58381653 187.80969238]
[208.61120605 200.73315430]
[205.18484497 215.18292236]
[213.27767944 227.81248474]
[228.08448792 234.86164856]
[229.11320496 251.22850037]
[215.30560303 260.07620239]
[200.86573792 252.30302429]
[200.64811707 235.90531921]
[192.55528259 223.27575684]
[177.99566650 220.35115051]
[169.60845947 207.65826416]
[172.77478027 192.40663147]
[164.68194580 179.77706909]
[156.58909607 167.14750671]
[149.43943787 169.41294861]
[127.99043274 176.20930481]
[128.64776611 191.19490051]
[129.30509949 206.18049622]
[129.96243286 221.16607666]
[142.97746277 229.61526489]
[148.50907898 244.11288452]
[144.43028259 259.08428955]
[132.30944824 268.77267456]
[116.80728149 269.45266724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[7 186]
[8 185]
[9 184]
[10 183]
[14 111]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[27 97]
[28 96]
[29 95]
[31 93]
[32 92]
[33 90]
[34 89]
[35 88]
[38 86]
[39 85]
[41 83]
[42 82]
[44 81]
[45 80]
[46 79]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[57 68]
[58 67]
[112 182]
[113 181]
[114 180]
[115 179]
[116 178]
[117 177]
[118 176]
[119 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 170]
[126 169]
[131 168]
[132 167]
[133 166]
[134 165]
[135 164]
[136 160]
[137 159]
[138 158]
[142 152]
[143 151]
[144 150]
[145 149]
[187 204]
[188 203]
[189 202]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
