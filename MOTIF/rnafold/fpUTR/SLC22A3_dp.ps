%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC22A3)
} def

/sequence { (\
GGGUCACUCCGAGGCGCGGGCUGCGGGCGGCGGGCGGCGGGCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.057553056 ubox
1 9 0.066611726 ubox
1 10 0.515912380 ubox
1 47 0.147141882 ubox
2 7 0.068465151 ubox
2 8 0.066512468 ubox
2 9 0.515594250 ubox
2 10 0.271750848 ubox
2 46 0.148398670 ubox
2 47 0.201758862 ubox
3 7 0.094573482 ubox
3 8 0.375725977 ubox
3 9 0.272005103 ubox
3 15 0.015593069 ubox
3 24 0.003225414 ubox
3 28 0.009361435 ubox
3 31 0.702332707 ubox
3 35 0.007379703 ubox
3 38 0.229234258 ubox
3 42 0.038534538 ubox
3 44 0.128351920 ubox
3 46 0.204239757 ubox
4 12 0.043798860 ubox
4 14 0.015607999 ubox
4 27 0.008520318 ubox
4 30 0.702591164 ubox
4 33 0.005834705 ubox
4 34 0.007127069 ubox
4 37 0.229323613 ubox
4 40 0.006369500 ubox
4 41 0.038047163 ubox
4 43 0.127436393 ubox
4 45 0.198579783 ubox
5 11 0.047295529 ubox
5 13 0.020638797 ubox
5 23 0.003257591 ubox
5 29 0.701972929 ubox
5 32 0.007978674 ubox
5 33 0.006378783 ubox
5 36 0.229326732 ubox
5 39 0.009546773 ubox
5 40 0.036676911 ubox
6 22 0.003331651 ubox
7 13 0.028856804 ubox
7 20 0.003597082 ubox
7 26 0.003400916 ubox
7 27 0.664783827 ubox
7 30 0.012711768 ubox
7 33 0.003811865 ubox
7 34 0.217158377 ubox
7 37 0.028845443 ubox
7 40 0.016410827 ubox
7 41 0.065299741 ubox
8 12 0.026079914 ubox
8 13 0.003520605 ubox
8 20 0.007519312 ubox
8 26 0.105730403 ubox
8 27 0.215016971 ubox
8 29 0.010386129 ubox
8 32 0.003485873 ubox
8 33 0.029438017 ubox
8 34 0.076337622 ubox
8 36 0.023426684 ubox
8 39 0.014794944 ubox
8 40 0.009717405 ubox
8 41 0.216327356 ubox
9 13 0.006924565 ubox
9 19 0.013410018 ubox
9 25 0.088167369 ubox
9 26 0.697341573 ubox
9 27 0.012399305 ubox
9 30 0.006397904 ubox
9 32 0.022219736 ubox
9 33 0.260239706 ubox
9 34 0.006109843 ubox
9 37 0.011899152 ubox
9 39 0.007588779 ubox
9 40 0.241699396 ubox
9 41 0.009638397 ubox
10 18 0.013455156 ubox
10 23 0.021145807 ubox
10 25 0.699827728 ubox
10 26 0.011280129 ubox
10 29 0.006524689 ubox
10 32 0.261159156 ubox
10 33 0.005332099 ubox
10 36 0.011916700 ubox
10 39 0.241877842 ubox
10 40 0.009284410 ubox
11 17 0.013351453 ubox
11 22 0.009820039 ubox
11 24 0.696327005 ubox
11 28 0.006014934 ubox
11 31 0.262073533 ubox
11 35 0.011338830 ubox
11 38 0.241471069 ubox
11 42 0.003576883 ubox
12 22 0.038555554 ubox
13 21 0.030839700 ubox
13 22 0.645218246 ubox
13 47 0.179262426 ubox
14 21 0.704856352 ubox
14 28 0.263027237 ubox
14 35 0.235534573 ubox
14 38 0.009398984 ubox
14 42 0.036784322 ubox
14 44 0.581698687 ubox
14 46 0.179343277 ubox
15 20 0.705044479 ubox
15 25 0.009690503 ubox
15 27 0.263026713 ubox
15 29 0.004462263 ubox
15 32 0.013355061 ubox
15 34 0.235521580 ubox
15 36 0.055081978 ubox
15 37 0.008819049 ubox
15 39 0.011114325 ubox
15 41 0.036802393 ubox
15 43 0.582783872 ubox
16 24 0.012335361 ubox
16 28 0.004753633 ubox
16 31 0.016048295 ubox
16 35 0.055702704 ubox
16 38 0.011888793 ubox
16 42 0.582825931 ubox
16 44 0.180446370 ubox
17 23 0.012355956 ubox
17 25 0.262866889 ubox
17 27 0.004743067 ubox
17 30 0.016050822 ubox
17 32 0.231090515 ubox
17 34 0.055631471 ubox
17 36 0.007880582 ubox
17 37 0.011835629 ubox
17 39 0.036640564 ubox
17 41 0.581987341 ubox
17 43 0.180479543 ubox
18 22 0.007633398 ubox
18 24 0.262405065 ubox
18 31 0.219734641 ubox
18 35 0.008244208 ubox
18 38 0.036783263 ubox
18 42 0.179449452 ubox
20 28 0.217968148 ubox
20 31 0.097072396 ubox
20 35 0.045747175 ubox
20 38 0.583997312 ubox
20 42 0.008228685 ubox
21 27 0.218026489 ubox
21 30 0.102115583 ubox
21 33 0.044733292 ubox
21 34 0.038116658 ubox
21 37 0.584846855 ubox
21 40 0.169479227 ubox
21 41 0.007630419 ubox
22 26 0.196418027 ubox
22 29 0.101987061 ubox
22 32 0.051832855 ubox
22 33 0.027615077 ubox
22 36 0.584357127 ubox
22 39 0.169672624 ubox
22 40 0.005825378 ubox
22 45 0.004452647 ubox
23 28 0.100173749 ubox
23 31 0.059362230 ubox
23 35 0.584446115 ubox
23 38 0.170011634 ubox
23 44 0.005381460 ubox
24 30 0.059533158 ubox
24 32 0.042905934 ubox
24 34 0.582932383 ubox
24 36 0.004896369 ubox
24 37 0.169862501 ubox
24 39 0.003606869 ubox
24 43 0.005383268 ubox
25 31 0.099292522 ubox
25 35 0.006099984 ubox
25 38 0.003641038 ubox
25 42 0.005308255 ubox
25 47 0.005522074 ubox
26 46 0.005642869 ubox
27 35 0.169604592 ubox
27 38 0.004831174 ubox
27 42 0.010783574 ubox
27 44 0.025231483 ubox
28 34 0.169712963 ubox
28 36 0.012060462 ubox
28 37 0.004722224 ubox
28 39 0.003355534 ubox
28 41 0.010807009 ubox
28 43 0.025303819 ubox
29 35 0.012145703 ubox
29 42 0.024945955 ubox
29 47 0.011391697 ubox
30 38 0.016530417 ubox
30 42 0.004122733 ubox
30 44 0.009263376 ubox
30 46 0.011472069 ubox
31 37 0.016630966 ubox
31 39 0.022420871 ubox
31 41 0.005548514 ubox
31 43 0.009273970 ubox
32 38 0.022658463 ubox
32 42 0.008425225 ubox
32 47 0.676071876 ubox
33 46 0.680437704 ubox
33 47 0.030045061 ubox
34 42 0.044588054 ubox
34 44 0.712085551 ubox
34 46 0.029986422 ubox
35 41 0.044687317 ubox
35 43 0.712694951 ubox
36 42 0.711291927 ubox
36 47 0.006428438 ubox
37 44 0.041166341 ubox
37 46 0.006412915 ubox
38 43 0.041153151 ubox
39 47 0.181261570 ubox
40 46 0.182523336 ubox
40 47 0.050618047 ubox
41 46 0.051003915 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
showpage
end
%%EOF
