%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5V1)
} def

/sequence { (\
GUCAUGCUAUUGCAGCAUAUGAUUCAUUUUUAUAAUCUGGUCUUCUCUUUGCCCAAUUCCUGAAAGGAAACCAGGCGACAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.012493157 ubox
1 13 0.010092941 ubox
1 16 0.112315140 ubox
1 18 0.037068338 ubox
1 20 0.072410181 ubox
1 23 0.310753448 ubox
1 27 0.003220398 ubox
1 76 0.060686637 ubox
1 79 0.882163155 ubox
1 81 0.005766118 ubox
2 6 0.011704561 ubox
2 12 0.004284391 ubox
2 15 0.109267770 ubox
2 17 0.038753925 ubox
2 19 0.074973671 ubox
2 22 0.345077660 ubox
2 40 0.008415737 ubox
2 75 0.058477254 ubox
2 78 0.882703082 ubox
2 80 0.005909272 ubox
3 12 0.021039936 ubox
3 21 0.351413017 ubox
3 39 0.011512870 ubox
3 74 0.044899793 ubox
3 77 0.881708079 ubox
4 10 0.004319148 ubox
4 11 0.021425823 ubox
4 18 0.660361760 ubox
4 20 0.305080661 ubox
4 23 0.004645167 ubox
4 27 0.007055898 ubox
4 38 0.009273301 ubox
4 81 0.015930906 ubox
5 9 0.004111932 ubox
5 14 0.439090477 ubox
5 17 0.814298473 ubox
5 19 0.166158441 ubox
5 22 0.003892829 ubox
5 26 0.007425914 ubox
5 77 0.006755108 ubox
5 80 0.017107031 ubox
6 13 0.488318663 ubox
6 16 0.865828162 ubox
6 18 0.033810497 ubox
6 25 0.007496689 ubox
6 41 0.008487608 ubox
6 76 0.027179564 ubox
6 79 0.017257977 ubox
7 12 0.488495269 ubox
7 15 0.866201682 ubox
7 40 0.008921054 ubox
7 75 0.027157124 ubox
8 14 0.839997992 ubox
8 19 0.006280545 ubox
8 21 0.007473211 ubox
8 39 0.005055283 ubox
8 74 0.012606157 ubox
9 18 0.007055236 ubox
9 20 0.007978949 ubox
9 23 0.005014193 ubox
9 38 0.003584439 ubox
9 41 0.005736305 ubox
10 17 0.006920673 ubox
10 19 0.007973024 ubox
10 22 0.005076715 ubox
10 35 0.003303248 ubox
10 40 0.005644857 ubox
10 78 0.020003948 ubox
11 17 0.010839262 ubox
11 21 0.004703652 ubox
11 34 0.003356763 ubox
11 77 0.021597613 ubox
11 80 0.017028376 ubox
12 16 0.011374099 ubox
12 20 0.003196312 ubox
12 25 0.003251852 ubox
12 41 0.012542533 ubox
12 76 0.023164677 ubox
12 79 0.018945003 ubox
13 21 0.013642388 ubox
13 39 0.083290648 ubox
13 40 0.009795971 ubox
13 75 0.023096657 ubox
14 20 0.014500923 ubox
14 31 0.003824197 ubox
14 38 0.090162226 ubox
14 43 0.015403184 ubox
14 46 0.005470630 ubox
14 48 0.006628615 ubox
14 50 0.003195734 ubox
15 23 0.003956022 ubox
15 28 0.003715405 ubox
15 29 0.004970480 ubox
15 30 0.004821595 ubox
15 37 0.093753800 ubox
15 41 0.035794969 ubox
15 42 0.020124342 ubox
15 43 0.004850013 ubox
15 45 0.007137335 ubox
15 47 0.008658928 ubox
15 52 0.007311981 ubox
15 76 0.105622819 ubox
16 39 0.027792520 ubox
16 40 0.038245388 ubox
16 51 0.007343830 ubox
16 75 0.105454426 ubox
17 23 0.009462855 ubox
17 27 0.010386441 ubox
17 33 0.090839010 ubox
17 36 0.047759495 ubox
17 38 0.027792368 ubox
17 41 0.023771138 ubox
17 50 0.007298881 ubox
18 22 0.009461452 ubox
18 26 0.011190423 ubox
18 32 0.099075171 ubox
18 34 0.561717628 ubox
18 35 0.040652221 ubox
18 39 0.025164011 ubox
18 40 0.024277951 ubox
19 27 0.163152401 ubox
19 31 0.103018589 ubox
19 33 0.686406284 ubox
19 36 0.033920676 ubox
19 38 0.030640455 ubox
19 41 0.010659411 ubox
19 81 0.014413747 ubox
20 26 0.178512609 ubox
20 32 0.699245282 ubox
20 34 0.019641196 ubox
20 35 0.037591698 ubox
20 39 0.007213858 ubox
20 40 0.010489057 ubox
20 77 0.003288962 ubox
20 80 0.015755193 ubox
21 25 0.180538619 ubox
21 28 0.038865807 ubox
21 29 0.107534674 ubox
21 30 0.110733309 ubox
21 31 0.700049626 ubox
21 33 0.016426995 ubox
21 37 0.164006808 ubox
21 42 0.140556743 ubox
21 44 0.006601439 ubox
21 45 0.031035385 ubox
21 47 0.011653395 ubox
21 76 0.011471813 ubox
21 79 0.016017918 ubox
21 82 0.014841505 ubox
22 27 0.036670135 ubox
22 28 0.117289896 ubox
22 29 0.126829571 ubox
22 30 0.691802585 ubox
22 33 0.094933186 ubox
22 36 0.168288182 ubox
22 41 0.140354871 ubox
22 43 0.007249871 ubox
22 44 0.030530868 ubox
22 46 0.011177856 ubox
22 81 0.015013111 ubox
23 32 0.099281365 ubox
23 35 0.168590874 ubox
23 40 0.123782528 ubox
23 69 0.003636717 ubox
23 78 0.005965498 ubox
23 80 0.014506566 ubox
24 34 0.160947520 ubox
24 39 0.092527626 ubox
24 40 0.077871657 ubox
24 68 0.004105355 ubox
24 77 0.005740338 ubox
24 78 0.021715587 ubox
25 39 0.107413582 ubox
25 67 0.004143922 ubox
25 77 0.022910232 ubox
26 33 0.148202371 ubox
26 36 0.104933946 ubox
26 38 0.103225531 ubox
26 41 0.012821089 ubox
26 81 0.006306495 ubox
27 32 0.147309990 ubox
27 35 0.119070189 ubox
27 40 0.013434277 ubox
27 75 0.008048080 ubox
27 78 0.004416418 ubox
27 80 0.006483664 ubox
28 34 0.121774697 ubox
28 35 0.100472961 ubox
28 39 0.013253917 ubox
28 40 0.005246278 ubox
28 65 0.003551150 ubox
28 77 0.004625444 ubox
28 78 0.005094092 ubox
29 34 0.103656879 ubox
29 35 0.072199556 ubox
29 39 0.006260611 ubox
29 40 0.008395662 ubox
29 64 0.003590997 ubox
29 77 0.005323033 ubox
29 78 0.009790143 ubox
30 34 0.061977163 ubox
30 39 0.011074811 ubox
30 40 0.009553748 ubox
30 63 0.003601987 ubox
30 77 0.010125139 ubox
30 78 0.014614768 ubox
31 39 0.013015241 ubox
31 62 0.003587310 ubox
31 77 0.015268517 ubox
32 38 0.012932700 ubox
32 41 0.011968921 ubox
32 61 0.003371723 ubox
32 81 0.016682545 ubox
33 39 0.005129726 ubox
33 40 0.012446174 ubox
33 80 0.017369012 ubox
34 38 0.005201916 ubox
34 44 0.004661231 ubox
34 49 0.004877328 ubox
34 50 0.009584147 ubox
34 58 0.004892500 ubox
35 41 0.008184717 ubox
35 43 0.005170980 ubox
35 48 0.005933726 ubox
35 49 0.010722151 ubox
35 57 0.005906042 ubox
35 81 0.008540230 ubox
36 40 0.007905845 ubox
36 56 0.006063694 ubox
36 75 0.684061947 ubox
36 78 0.007614976 ubox
36 80 0.006864999 ubox
37 74 0.942452510 ubox
37 75 0.015069003 ubox
37 77 0.006815619 ubox
38 55 0.014280059 ubox
38 73 0.945931665 ubox
38 74 0.007685224 ubox
38 80 0.014330720 ubox
39 45 0.038439191 ubox
39 46 0.071031894 ubox
39 47 0.048812122 ubox
39 48 0.083046629 ubox
39 49 0.005998317 ubox
39 50 0.014401004 ubox
39 53 0.015310735 ubox
39 54 0.015145226 ubox
39 72 0.946802557 ubox
39 79 0.015133084 ubox
39 82 0.007571470 ubox
40 44 0.025154771 ubox
40 45 0.080712928 ubox
40 46 0.037217011 ubox
40 47 0.090790975 ubox
40 48 0.005963061 ubox
40 49 0.017077412 ubox
40 52 0.015716131 ubox
40 53 0.014801296 ubox
40 71 0.946756505 ubox
40 76 0.011777632 ubox
40 79 0.046599013 ubox
40 81 0.007864091 ubox
41 51 0.015436902 ubox
41 67 0.013886232 ubox
41 68 0.058420075 ubox
41 70 0.931831068 ubox
41 75 0.011784264 ubox
41 78 0.046464175 ubox
41 80 0.007644326 ubox
42 66 0.028443055 ubox
42 67 0.078747363 ubox
42 74 0.011786601 ubox
42 77 0.045591153 ubox
43 56 0.003625580 ubox
43 64 0.012370271 ubox
43 65 0.026792225 ubox
43 66 0.078393267 ubox
43 68 0.261419396 ubox
43 69 0.856002502 ubox
43 70 0.022059308 ubox
43 73 0.010920337 ubox
44 55 0.003808631 ubox
44 63 0.018482220 ubox
44 64 0.024314021 ubox
44 65 0.073621119 ubox
44 67 0.260223616 ubox
44 68 0.882737857 ubox
44 69 0.046550872 ubox
44 75 0.006429657 ubox
44 78 0.006484233 ubox
45 62 0.021260635 ubox
45 66 0.257651973 ubox
45 67 0.881280701 ubox
45 74 0.006666625 ubox
45 77 0.006861018 ubox
46 63 0.097389936 ubox
46 65 0.245077328 ubox
46 66 0.242428813 ubox
46 67 0.118186058 ubox
46 68 0.082457624 ubox
46 73 0.006307565 ubox
46 78 0.011266059 ubox
47 62 0.109204798 ubox
47 66 0.855285242 ubox
47 67 0.085315502 ubox
47 77 0.011977459 ubox
48 56 0.008439437 ubox
48 63 0.164767827 ubox
48 64 0.243367788 ubox
48 65 0.859672252 ubox
48 66 0.086022603 ubox
48 69 0.003421995 ubox
48 78 0.012552088 ubox
49 55 0.008840449 ubox
49 56 0.013080250 ubox
49 62 0.165137696 ubox
49 63 0.251964879 ubox
49 64 0.858128389 ubox
49 65 0.092921816 ubox
49 66 0.006169619 ubox
49 69 0.004528584 ubox
49 70 0.004020576 ubox
49 77 0.009672627 ubox
49 78 0.195232594 ubox
50 55 0.013641944 ubox
50 62 0.246370659 ubox
50 63 0.849117268 ubox
50 64 0.095828986 ubox
50 65 0.014398904 ubox
50 66 0.003397953 ubox
50 68 0.004196051 ubox
50 69 0.003970338 ubox
50 73 0.003621214 ubox
50 77 0.214319004 ubox
51 61 0.165130889 ubox
51 72 0.003977447 ubox
51 76 0.320161935 ubox
52 67 0.007776491 ubox
52 75 0.320198981 ubox
53 66 0.007829963 ubox
53 67 0.005034516 ubox
53 74 0.319579344 ubox
53 75 0.011659547 ubox
54 62 0.251368784 ubox
54 66 0.005247260 ubox
54 74 0.015247985 ubox
55 61 0.240063878 ubox
57 63 0.008882707 ubox
57 64 0.008554236 ubox
57 65 0.004565997 ubox
57 68 0.005811302 ubox
57 69 0.330262545 ubox
57 70 0.034580278 ubox
58 62 0.009553363 ubox
58 63 0.008341003 ubox
58 64 0.005215008 ubox
58 67 0.004646839 ubox
58 68 0.351048507 ubox
58 69 0.026436145 ubox
59 66 0.004911356 ubox
59 67 0.353067261 ubox
59 75 0.013406620 ubox
60 66 0.352972910 ubox
60 67 0.008746808 ubox
60 74 0.013578689 ubox
61 65 0.317989966 ubox
61 66 0.008968662 ubox
61 73 0.013595045 ubox
62 72 0.013547979 ubox
75 81 0.003591632 ubox
1 79 0.9500000 lbox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
36 75 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
43 69 0.9500000 lbox
44 68 0.9500000 lbox
45 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
showpage
end
%%EOF
