%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUCACCAGGGAAGCUGGCAAGGGAAGGGAGACUAGGGUGCGCUCUAGGAGAAGCCGACAGCCUGAGAGUCCCAGAAGAGGAGCCCUGUGGACCCUCCCCUGCCAGCCACUCCCUUACCCUGGGUAUAAGAGCCACCACCGCCUGCCAUCCGCCACCAUCUCCCACUCCUGCAGCUCUUCUCACAGGACCAGCCACUAGCGCAGCCUCGAGCG\
) } def
/len { sequence length } bind def

/coor [
[242.88648987 544.46099854]
[238.14712524 530.22937012]
[233.40777588 515.99780273]
[228.66841125 501.76620483]
[223.92906189 487.53457642]
[209.31036377 484.67816162]
[198.00903320 474.82238770]
[193.12603760 460.53872681]
[196.06752014 445.63085938]
[206.14173889 434.12185669]
[201.40238953 419.89025879]
[196.66302490 405.65866089]
[191.92367554 391.42706299]
[186.97686768 377.26623535]
[181.82369995 363.17916870]
[176.67051697 349.09213257]
[171.51733398 335.00509644]
[166.36415100 320.91806030]
[161.11573792 315.71783447]
[161.24023438 306.58737183]
[156.29344177 292.42651367]
[151.12156677 287.15017700]
[151.37947083 278.02249146]
[146.64010620 263.79089355]
[141.90075684 249.55928040]
[128.50708008 243.14483643]
[123.49796295 228.77947998]
[130.31683350 214.77445984]
[125.57747650 200.54286194]
[120.83811951 186.31126404]
[116.09876251 172.07965088]
[111.35940552 157.84805298]
[106.62004852 143.61645508]
[84.47254181 141.29307556]
[66.28153229 128.44793701]
[56.68222427 108.35405731]
[58.12058640 86.13151550]
[70.23011780 67.44275665]
[62.13727570 54.81319046]
[54.04443359 42.18362808]
[45.95158768 29.55406380]
[38.68899536 24.01908684]
[37.83433151 16.68030930]
[29.92689133 3.93384385]
[22.01945114 -8.81262112]
[14.11200905 -21.55908585]
[6.20456791 -34.30554962]
[-15.45735741 -42.67862320]
[-17.41835022 -65.12983704]
[-27.75029182 -76.00416565]
[-38.08223343 -86.87849426]
[-48.41417313 -97.75282288]
[-63.98069000 -98.31970978]
[-74.30384064 -109.49501038]
[-73.66746521 -124.33181000]
[-83.99940491 -135.20613098]
[-99.28781128 -133.31651306]
[-112.60176849 -140.70515442]
[-118.93714905 -154.35531616]
[-116.05445099 -168.94393921]
[-126.38639069 -179.81826782]
[-136.71833801 -190.69259644]
[-150.13125610 -189.48454285]
[-161.62367249 -196.12434387]
[-167.11305237 -207.99458313]
[-164.79905701 -220.66854858]
[-174.97100830 -231.69268799]
[-185.14295959 -242.71681213]
[-200.18772888 -247.61224365]
[-203.13200378 -262.21295166]
[-213.30395508 -273.23709106]
[-223.47590637 -284.26123047]
[-233.64784241 -295.28533936]
[-243.90007019 -306.23486328]
[-254.23200989 -317.10919189]
[-264.56393433 -327.98352051]
[-279.47729492 -324.31100464]
[-294.22442627 -328.60260010]
[-304.83843994 -339.70388794]
[-308.46417236 -354.62869263]
[-304.12637329 -369.36230469]
[-292.99185181 -379.94143677]
[-278.05578613 -383.52038574]
[-263.33584595 -379.13644409]
[-252.79165649 -367.96881104]
[-249.25953674 -353.02157593]
[-253.68962097 -338.31546021]
[-243.35768127 -327.44113159]
[-233.02574158 -316.56680298]
[-226.14176941 -313.88372803]
[-222.62371826 -305.45730591]
[-212.45176697 -294.43316650]
[-202.27981567 -283.40902710]
[-192.10787964 -272.38488770]
[-177.79066467 -268.27798462]
[-174.11882019 -252.88876343]
[-163.94686890 -241.86463928]
[-153.77493286 -230.84049988]
[-136.95581055 -230.88262939]
[-125.07735443 -218.50257874]
[-125.84400177 -201.02453613]
[-115.51206207 -190.15020752]
[-105.18012238 -179.27587891]
[-90.46320343 -181.40904236]
[-77.15475464 -174.38415527]
[-70.45638275 -160.70989990]
[-73.12507629 -145.53807068]
[-62.79313660 -134.66375732]
[-47.94320297 -134.54083252]
[-37.31023788 -123.65990448]
[-37.53984451 -108.08476257]
[-27.20790482 -97.21043396]
[-16.87596321 -86.33610535]
[-6.54402256 -75.46178436]
[-3.54141760 -76.45307922]
[-0.42394480 -76.98192596]
[2.73759818 -77.03630066]
[8.90531921 -90.70960236]
[15.07304001 -104.38290405]
[21.24076080 -118.05621338]
[22.24195480 -134.98057556]
[38.78206253 -138.70362854]
[46.93838120 -123.84056091]
[34.91406250 -111.88848877]
[28.74634361 -98.21518707]
[22.57862282 -84.54188538]
[16.41090202 -70.86858368]
[21.99528503 -62.35537338]
[22.98223877 -52.01321793]
[18.95103264 -42.21299362]
[26.85847473 -29.46652794]
[34.76591492 -16.72006226]
[42.67335510 -3.97359753]
[50.58079910 8.77286720]
[58.58115387 21.46122169]
[66.67399597 34.09078598]
[74.76683807 46.72034836]
[82.85968018 59.34991455]
[90.57692719 56.90213776]
[98.61152649 55.90587234]
[106.69289398 56.39466476]
[114.54885101 58.35206223]
[121.91481018 61.71213150]
[128.54269409 66.36170959]
[134.20927429 72.14421082]
[138.72370911 78.86486816]
[152.92031860 74.02165985]
[161.25614929 60.31424332]
[177.18794250 58.42803574]
[188.49417114 69.80998230]
[186.50166321 85.72882843]
[172.73892212 93.97299194]
[157.76351929 88.21826172]
[143.56692505 93.06146240]
[144.06488037 102.12277222]
[142.69821167 111.09424591]
[139.52474976 119.59626770]
[134.67878723 127.26906586]
[128.36537170 133.78796387]
[120.85165405 138.87709045]
[125.59101105 153.10870361]
[130.33036804 167.34030151]
[135.06971741 181.57189941]
[139.80908203 195.80349731]
[144.54843140 210.03511047]
[158.40249634 217.15570068]
[163.00613403 231.65608215]
[156.13235474 244.81993103]
[160.87171936 259.05154419]
[165.61106873 273.28314209]
[170.45426941 287.47973633]
[175.40107727 301.64056396]
[180.45120239 315.76489258]
[185.60437012 329.85192871]
[190.75755310 343.93896484]
[195.91073608 358.02600098]
[201.06391907 372.11303711]
[205.87850952 376.63705444]
[207.45179749 382.09402466]
[206.15527344 386.68771362]
[210.89462280 400.91931152]
[215.63398743 415.15090942]
[220.37333679 429.38250732]
[235.33631897 432.55371094]
[246.62841797 442.72155762]
[251.28402710 457.08093262]
[248.14805603 471.74456787]
[238.16065979 482.79522705]
[242.90000916 497.02682495]
[247.63937378 511.25842285]
[252.37872314 525.49005127]
[257.11807251 539.72161865]
[263.31024170 540.86706543]
[268.90176392 543.67486572]
[273.45953369 547.90246582]
[276.63766479 553.19830322]
[278.20349121 559.13104248]
[278.05462646 565.22485352]
[276.22537231 570.99719238]
[272.88211060 575.99743652]
[268.30847168 579.84167480]
[271.56994629 594.48284912]
[274.83139038 609.12396240]
[289.12078857 615.17315674]
[297.09667969 628.48352051]
[295.69213867 643.93688965]
[285.44726562 655.59118652]
[270.30142212 658.96502686]
[256.07849121 652.76116943]
[248.24748230 639.36511230]
[249.81956482 623.92791748]
[260.19024658 612.38543701]
[256.92880249 597.74426270]
[253.66734314 583.10314941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[10 183]
[11 182]
[12 181]
[13 180]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[20 172]
[21 171]
[23 170]
[24 169]
[25 168]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[38 138]
[39 137]
[40 136]
[41 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[49 114]
[50 113]
[51 112]
[52 111]
[55 108]
[56 107]
[60 103]
[61 102]
[62 101]
[66 98]
[67 97]
[68 96]
[70 94]
[71 93]
[72 92]
[73 91]
[74 89]
[75 88]
[76 87]
[117 127]
[118 126]
[119 125]
[120 124]
[146 154]
[147 153]
[201 214]
[202 213]
[203 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
