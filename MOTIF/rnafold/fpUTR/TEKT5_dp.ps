%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TEKT5)
} def

/sequence { (\
ACUUUCACCUUUCCUGGUGAUGCCUUUGGCUCCUUGAGCUGAGUUUUGCCCGAGUGGGGCUCAUGAGGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 29 0.003718415 ubox
2 67 0.009314538 ubox
2 68 0.008483954 ubox
2 69 0.006854971 ubox
2 71 0.034649629 ubox
2 72 0.017072424 ubox
3 28 0.003431523 ubox
3 66 0.009262447 ubox
3 67 0.008388345 ubox
3 68 0.006468507 ubox
3 70 0.033909500 ubox
3 71 0.016706639 ubox
3 72 0.004341809 ubox
4 20 0.006378313 ubox
4 65 0.008574828 ubox
4 66 0.007601926 ubox
4 67 0.005972438 ubox
4 69 0.030294076 ubox
4 70 0.013591960 ubox
4 71 0.007148035 ubox
5 20 0.140317846 ubox
5 65 0.004993672 ubox
5 66 0.004805930 ubox
5 68 0.007187896 ubox
5 69 0.008578201 ubox
5 70 0.007663908 ubox
5 72 0.006805926 ubox
6 19 0.150516816 ubox
6 65 0.004343292 ubox
6 67 0.004223601 ubox
6 69 0.007750134 ubox
6 71 0.010366004 ubox
7 18 0.150629894 ubox
8 17 0.150682043 ubox
8 68 0.006503944 ubox
8 72 0.623117497 ubox
9 16 0.150630809 ubox
9 67 0.006511807 ubox
9 71 0.629187574 ubox
9 72 0.737016109 ubox
10 66 0.006412409 ubox
10 70 0.514756135 ubox
10 71 0.754074710 ubox
10 72 0.009801946 ubox
11 65 0.006068340 ubox
11 69 0.362726362 ubox
11 70 0.840519655 ubox
11 71 0.015771182 ubox
12 68 0.053633600 ubox
12 69 0.915479882 ubox
12 70 0.019085795 ubox
13 67 0.038803069 ubox
13 68 0.986774185 ubox
13 69 0.018614022 ubox
14 67 0.987631513 ubox
14 68 0.016493542 ubox
15 66 0.986390971 ubox
15 67 0.013765592 ubox
16 24 0.025234357 ubox
16 64 0.003309874 ubox
17 23 0.025280363 ubox
17 64 0.984975026 ubox
18 22 0.023650200 ubox
18 63 0.987936510 ubox
19 47 0.005831988 ubox
19 62 0.987986524 ubox
20 25 0.005122443 ubox
20 26 0.004850437 ubox
20 44 0.009889506 ubox
20 45 0.007986727 ubox
20 46 0.021690479 ubox
20 61 0.944753434 ubox
21 43 0.010966128 ubox
22 27 0.005434328 ubox
22 30 0.074945791 ubox
22 44 0.162867651 ubox
22 47 0.028073483 ubox
22 49 0.003350426 ubox
22 60 0.630972152 ubox
23 29 0.082392148 ubox
23 43 0.162757348 ubox
23 48 0.004383772 ubox
23 57 0.005529779 ubox
23 58 0.056675107 ubox
23 59 0.630452902 ubox
23 68 0.078982573 ubox
23 69 0.063188976 ubox
23 72 0.023641821 ubox
24 28 0.082011720 ubox
24 43 0.298412445 ubox
24 54 0.007756478 ubox
24 56 0.005860198 ubox
24 57 0.057931451 ubox
24 58 0.598570480 ubox
24 59 0.011389865 ubox
24 67 0.079269252 ubox
24 68 0.063334548 ubox
24 71 0.024080331 ubox
24 72 0.003379375 ubox
25 42 0.261753777 ubox
25 43 0.573083053 ubox
25 53 0.015670983 ubox
25 54 0.026698894 ubox
25 56 0.055383876 ubox
25 57 0.510293475 ubox
25 58 0.008071270 ubox
25 66 0.078857103 ubox
25 67 0.062807274 ubox
25 70 0.023565115 ubox
25 71 0.003211057 ubox
26 41 0.199425982 ubox
26 42 0.749945480 ubox
26 43 0.028592189 ubox
26 52 0.022685743 ubox
26 53 0.065579701 ubox
26 54 0.015253532 ubox
26 56 0.388893122 ubox
26 57 0.040336618 ubox
26 58 0.011908174 ubox
26 65 0.074601751 ubox
26 66 0.060730594 ubox
26 69 0.021738682 ubox
26 70 0.003310191 ubox
27 41 0.782108293 ubox
27 42 0.035546087 ubox
27 52 0.072477847 ubox
27 53 0.017997260 ubox
27 56 0.038227104 ubox
27 57 0.112216496 ubox
27 63 0.056284018 ubox
27 65 0.057240217 ubox
27 68 0.016805747 ubox
27 69 0.003330106 ubox
28 40 0.820131373 ubox
28 45 0.032989698 ubox
28 50 0.065960284 ubox
28 51 0.065685760 ubox
28 55 0.041252569 ubox
28 61 0.071104752 ubox
28 62 0.060507313 ubox
28 64 0.013763987 ubox
29 39 0.835839703 ubox
29 44 0.042864525 ubox
29 49 0.073077940 ubox
29 50 0.055688708 ubox
29 55 0.451673881 ubox
29 60 0.098271838 ubox
29 61 0.007704208 ubox
30 38 0.835936858 ubox
30 43 0.052686190 ubox
30 48 0.079256527 ubox
30 54 0.460023734 ubox
30 57 0.129351555 ubox
30 58 0.039571524 ubox
30 59 0.097721703 ubox
30 67 0.014315598 ubox
30 71 0.081575056 ubox
31 37 0.835322501 ubox
31 42 0.054344691 ubox
31 53 0.456794906 ubox
31 56 0.135640559 ubox
31 57 0.076931037 ubox
31 58 0.096774305 ubox
31 66 0.014427216 ubox
31 69 0.026278963 ubox
31 70 0.096082039 ubox
32 36 0.828311935 ubox
32 41 0.054408944 ubox
32 52 0.451109795 ubox
32 56 0.134466600 ubox
32 57 0.095832465 ubox
32 58 0.004210966 ubox
32 65 0.014426562 ubox
32 68 0.034141739 ubox
32 69 0.097481065 ubox
32 72 0.010999210 ubox
33 43 0.072592059 ubox
33 54 0.242343729 ubox
33 56 0.085790660 ubox
33 57 0.004069076 ubox
33 67 0.034483253 ubox
33 68 0.097381305 ubox
33 71 0.011248906 ubox
34 42 0.072628262 ubox
34 43 0.016989812 ubox
34 53 0.259711367 ubox
34 54 0.016482497 ubox
34 56 0.003371746 ubox
34 66 0.034518661 ubox
34 67 0.096903287 ubox
34 70 0.011221926 ubox
35 41 0.070862618 ubox
35 42 0.018939124 ubox
35 48 0.030333033 ubox
35 52 0.270526844 ubox
35 53 0.015930506 ubox
35 63 0.029774714 ubox
35 65 0.032056815 ubox
35 66 0.092020093 ubox
35 67 0.004360563 ubox
35 69 0.011041683 ubox
36 40 0.033003240 ubox
36 45 0.021580456 ubox
36 46 0.144938398 ubox
36 47 0.045575260 ubox
36 51 0.435776569 ubox
36 62 0.033152905 ubox
36 64 0.027288352 ubox
37 44 0.021554808 ubox
37 45 0.147844517 ubox
37 46 0.045212729 ubox
37 47 0.020353705 ubox
37 61 0.033160796 ubox
38 44 0.148756607 ubox
38 45 0.036430126 ubox
38 46 0.017555561 ubox
38 49 0.502093581 ubox
38 55 0.006169531 ubox
38 60 0.032684615 ubox
39 43 0.148342177 ubox
39 48 0.502478833 ubox
39 54 0.006250849 ubox
39 59 0.032522163 ubox
39 68 0.003393084 ubox
40 48 0.005042422 ubox
40 52 0.009703383 ubox
40 53 0.005948534 ubox
40 58 0.019062522 ubox
40 63 0.097819911 ubox
40 67 0.003421699 ubox
41 47 0.034766134 ubox
41 51 0.025285156 ubox
41 62 0.103844135 ubox
42 46 0.031991473 ubox
42 61 0.103886897 ubox
43 49 0.059571649 ubox
43 55 0.008188208 ubox
43 60 0.101107956 ubox
43 64 0.005399087 ubox
44 48 0.056058754 ubox
44 53 0.015331466 ubox
44 54 0.017547554 ubox
44 57 0.003671782 ubox
44 59 0.100040247 ubox
44 63 0.005349284 ubox
44 66 0.004471835 ubox
45 52 0.015404988 ubox
45 53 0.021647116 ubox
45 54 0.020963179 ubox
45 56 0.005828113 ubox
45 57 0.004263812 ubox
45 58 0.087443667 ubox
45 59 0.003164393 ubox
45 65 0.005100529 ubox
45 67 0.003279595 ubox
46 52 0.021169073 ubox
46 53 0.026195473 ubox
46 54 0.015715665 ubox
46 56 0.005853362 ubox
46 57 0.094163613 ubox
46 66 0.003664088 ubox
46 71 0.005022886 ubox
46 72 0.003359044 ubox
47 52 0.025117535 ubox
47 53 0.020174213 ubox
47 56 0.104936608 ubox
47 65 0.003717408 ubox
47 70 0.005539121 ubox
47 71 0.004161607 ubox
48 55 0.121457914 ubox
48 60 0.757791224 ubox
49 54 0.122264574 ubox
49 57 0.092580157 ubox
49 58 0.201753904 ubox
49 59 0.759249789 ubox
49 69 0.017162914 ubox
50 56 0.093235801 ubox
50 57 0.281140147 ubox
50 58 0.759566803 ubox
50 59 0.004763727 ubox
50 68 0.017264528 ubox
51 56 0.282880744 ubox
51 57 0.759673361 ubox
51 58 0.006182237 ubox
51 67 0.017264550 ubox
52 62 0.003729179 ubox
53 61 0.003744288 ubox
54 60 0.003753181 ubox
54 64 0.017051559 ubox
55 59 0.003511551 ubox
55 63 0.017081911 ubox
56 62 0.017073538 ubox
57 61 0.011060176 ubox
60 71 0.004999556 ubox
61 68 0.006479808 ubox
61 69 0.003168696 ubox
61 70 0.008262924 ubox
62 67 0.008052452 ubox
62 68 0.004568994 ubox
62 69 0.008675227 ubox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
showpage
end
%%EOF
