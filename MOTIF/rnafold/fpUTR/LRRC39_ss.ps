%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUAGAACUAGGCUGACAUUACAUUUCACUUGGUUACAGCUGACUGGGGAUUUUAAUCAUUUGGAGCCACACUGAAAAAAAAAUUUCCCCCUGCAAUCUACUCUUAACUGAUAGUCGCUAACUUUGGUUAUGUGUGGUAAGUAUUUGACAAUGUCUAUUCAGAAUAUUACAUUAAUUGAUUUCUCAAACAAAGGUCCUUUCUGAAAUGGUAUCUAUGAUUCAGCUAUUCAAAACCUAAUGAAGUUGGUGACU\
AUGACAAUGUGGAGAAAUC\
) } def
/len { sequence length } bind def

/coor [
[163.03129578 170.28263855]
[150.58119202 178.64891052]
[135.98597717 182.11012268]
[121.10486603 180.22537231]
[107.83343506 173.23471069]
[97.86224365 162.02867126]
[92.46146393 148.03469849]
[92.31904602 133.03536987]
[97.45194244 118.94341278]
[89.77947235 131.83268738]
[82.10700989 144.72195435]
[74.43454742 157.61122131]
[66.76208496 170.50048828]
[59.08961868 183.38975525]
[51.41715622 196.27903748]
[49.72782135 205.21649170]
[43.58270264 209.27101135]
[35.76349640 222.07179260]
[27.94429016 234.87257385]
[34.76436234 248.71057129]
[32.99768829 264.03643799]
[23.20800018 275.95977783]
[8.51915646 280.67584229]
[-6.38168812 276.67980957]
[-16.73972702 265.24676514]
[-19.24975014 250.02494812]
[-13.11081409 235.87161255]
[-0.28183499 227.30300903]
[15.14350891 227.05335999]
[22.96271515 214.25257874]
[30.78192329 201.45179749]
[38.52788544 188.60656738]
[46.20034790 175.71730042]
[53.87281418 162.82803345]
[61.54527664 149.93875122]
[69.21774292 137.04948425]
[76.89020538 124.16021729]
[84.56266785 111.27094269]
[80.91203308 104.71939087]
[65.91377258 104.49095154]
[73.61076355 91.61627960]
[69.96012878 85.06472778]
[54.96233368 84.80770111]
[49.41815567 93.84546661]
[40.70085907 99.73836517]
[30.40673256 101.48765564]
[20.38796806 98.84610748]
[12.41939831 92.35051727]
[7.88412094 83.21418762]
[-7.09606266 82.44341278]
[-22.07624626 81.67263031]
[-37.05643082 80.90185547]
[-52.03661346 80.13107300]
[-63.71485138 90.43915558]
[-78.89590454 89.44408417]
[-88.65111542 78.24713898]
[-103.63130188 77.47636414]
[-111.00418091 90.79560089]
[-123.37841797 99.55717468]
[-138.26872253 102.06698608]
[-152.71276855 97.88005066]
[-163.86058044 87.87827301]
[-169.53683472 74.08531189]
[-184.51701355 73.31453705]
[-199.49719238 72.54375458]
[-214.47738647 71.77297974]
[-229.45756531 71.00219727]
[-239.97831726 82.57145691]
[-255.48112488 84.62016296]
[-268.64602661 76.18099213]
[-273.25692749 61.23865891]
[-267.13674927 46.84847260]
[-253.17523193 39.80504227]
[-237.96456909 43.43405914]
[-228.68678284 56.02201462]
[-213.70660400 56.79279327]
[-198.72640991 57.56357193]
[-183.74623108 58.33435059]
[-168.76605225 59.10512924]
[-161.70414734 45.96758652]
[-149.58866882 37.16277695]
[-134.79116821 34.48041534]
[-120.23709869 38.50523758]
[-108.82744598 48.49056625]
[-102.86051941 62.49618149]
[-87.88034058 63.26696014]
[-77.02745056 53.13037491]
[-61.82443237 53.69865417]
[-51.26583481 65.15089417]
[-36.28565216 65.92166901]
[-21.30546761 66.69245148]
[-6.32528400 67.46322632]
[8.65489960 68.23400879]
[22.17543983 54.16516113]
[41.98912811 54.64305496]
[55.21936035 69.80990601]
[70.21715546 70.06693268]
[89.54285431 69.71153259]
[102.57362366 78.29201508]
[106.28614044 90.15920258]
[119.38924408 82.85794067]
[132.49235535 75.55667114]
[145.59545898 68.25540161]
[158.69857788 60.95413208]
[156.25730896 48.50664520]
[157.39712524 35.89125443]
[162.01689148 24.11614609]
[169.73777771 14.11954212]
[179.93429565 6.69494581]
[191.78497314 2.42815971]
[204.33847046 1.65107429]
[216.59007263 4.41587353]
[227.56198120 10.49165630]
[236.38140869 19.38368797]
[249.72700500 12.53568745]
[263.07260132 5.68768692]
[276.41818237 -1.16031349]
[289.76379395 -8.00831413]
[303.10937500 -14.85631371]
[316.45498657 -21.70431519]
[329.80056763 -28.55231476]
[343.14617920 -35.40031433]
[356.49176025 -42.24831390]
[369.83734131 -49.09631729]
[383.18295288 -55.94431686]
[396.52853394 -62.79231644]
[409.87414551 -69.64031982]
[423.21972656 -76.48831940]
[436.40539551 -83.63941956]
[449.42425537 -91.08990479]
[462.44308472 -98.54038239]
[475.46194458 -105.99085999]
[483.59631348 -119.56076813]
[498.48571777 -119.16699982]
[511.50457764 -126.61747742]
[519.63891602 -140.18739319]
[534.52832031 -139.79362488]
[547.54718018 -147.24409485]
[560.56604004 -154.69458008]
[573.58489990 -162.14506531]
[586.60375977 -169.59553528]
[587.06854248 -183.34996033]
[594.20385742 -194.99139404]
[606.06011963 -201.54310608]
[619.49713135 -201.39176941]
[631.01593018 -194.68351746]
[644.11907959 -201.98478699]
[657.22216797 -209.28605652]
[656.70660400 -223.24389648]
[662.22119141 -236.00453186]
[672.64044189 -245.10678101]
[685.89892578 -248.82179260]
[699.40051270 -246.48121643]
[710.52703857 -238.59667969]
[723.71270752 -245.74778748]
[736.89837646 -252.89889526]
[742.92144775 -259.71463013]
[750.27575684 -260.05538940]
[763.54223633 -267.05541992]
[776.80871582 -274.05541992]
[790.07519531 -281.05541992]
[803.34173584 -288.05545044]
[816.56799316 -295.13110352]
[829.75366211 -302.28222656]
[842.93933105 -309.43331909]
[856.12500000 -316.58444214]
[869.31066895 -323.73553467]
[865.53320312 -338.32376099]
[865.35717773 -353.38302612]
[868.78851318 -368.03790283]
[875.62347412 -381.43750000]
[885.46087646 -392.80490112]
[897.72570801 -401.48220825]
[911.70239258 -406.96853638]
[926.57702637 -408.94900513]
[941.48425293 -407.31280518]
[955.55816650 -402.15936279]
[967.98205566 -393.79235840]
[978.03619385 -382.70169067]
[991.22186279 -389.85278320]
[1004.40747070 -397.00390625]
[1017.59313965 -404.15499878]
[1025.70251465 -418.40881348]
[1042.10070801 -418.24227905]
[1049.91894531 -403.82669067]
[1041.11425781 -389.99160767]
[1024.74426270 -390.96932983]
[1011.55859375 -383.81823730]
[998.37292480 -376.66711426]
[985.18725586 -369.51602173]
[988.99902344 -355.03988647]
[989.23541260 -340.06307983]
[985.87835693 -325.45617676]
[979.11877441 -312.06918335]
[969.34564209 -300.68222046]
[957.12390137 -291.96005249]
[943.16131592 -286.41320801]
[928.26800537 -284.36816406]
[913.30902100 -285.94805908]
[899.15447998 -291.06539917]
[886.62854004 -299.42681885]
[876.46179199 -310.54986572]
[863.27612305 -303.39877319]
[850.09045410 -296.24765015]
[836.90478516 -289.09655762]
[823.71911621 -281.94543457]
[819.35418701 -276.01678467]
[810.34173584 -274.78894043]
[797.07525635 -267.78894043]
[783.80871582 -260.78890991]
[770.54223633 -253.78890991]
[757.27575684 -246.78890991]
[744.04943848 -239.71322632]
[730.86376953 -232.56211853]
[717.67810059 -225.41102600]
[717.63604736 -209.23474121]
[709.38494873 -195.21174622]
[695.10070801 -187.22714233]
[678.64544678 -187.54855347]
[664.52343750 -196.18295288]
[651.42034912 -188.88168335]
[638.31719971 -181.58041382]
[636.86621094 -165.21154785]
[625.82348633 -152.81794739]
[609.40374756 -149.42843628]
[594.05419922 -156.57669067]
[581.03533936 -149.12620544]
[568.01654053 -141.67573547]
[554.99768066 -134.22525024]
[541.97882080 -126.77478027]
[534.77563477 -113.73777771]
[518.95501709 -113.59863281]
[505.93618774 -106.14815521]
[498.73300171 -93.11115265]
[482.91241455 -92.97200775]
[469.89355469 -85.52153015]
[456.87472534 -78.07105255]
[443.85586548 -70.62057495]
[442.98211670 -67.99467468]
[441.03521729 -65.54974365]
[438.07662964 -63.68911362]
[434.31002808 -62.78737640]
[430.06771851 -63.14272308]
[416.72213745 -56.29472351]
[403.37655640 -49.44672012]
[390.03094482 -42.59872055]
[376.68536377 -35.75072098]
[363.33975220 -28.90272141]
[349.99417114 -22.05471992]
[336.64855957 -15.20672035]
[323.30297852 -8.35871983]
[309.95736694 -1.51071966]
[296.61178589 5.33728075]
[283.26620483 12.18528080]
[269.92059326 19.03328133]
[256.57501221 25.88128090]
[243.22941589 32.72928238]
[245.15907288 50.03130341]
[240.26222229 66.77463531]
[229.26907349 80.36531830]
[213.85647583 88.68683624]
[196.39222717 90.42975616]
[179.57124329 85.29768372]
[165.99984741 74.05724335]
[152.89672852 81.35851288]
[139.79362488 88.65977478]
[126.69051361 95.96104431]
[113.58740234 103.26231384]
[127.82254028 98.53358459]
[142.81164551 99.10511780]
[156.64537048 104.90409088]
[167.56152344 115.19183350]
[174.16958618 128.65785217]
[175.62779236 143.58680725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[17 31]
[18 30]
[19 29]
[42 97]
[43 96]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[56 86]
[57 85]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[100 268]
[101 267]
[102 266]
[103 265]
[104 264]
[114 257]
[115 256]
[116 255]
[117 254]
[118 253]
[119 252]
[120 251]
[121 250]
[122 249]
[123 248]
[124 247]
[125 246]
[126 245]
[127 244]
[128 243]
[129 238]
[130 237]
[131 236]
[132 235]
[134 233]
[135 232]
[137 230]
[138 229]
[139 228]
[140 227]
[141 226]
[146 222]
[147 221]
[148 220]
[154 215]
[155 214]
[156 213]
[158 212]
[159 211]
[160 210]
[161 209]
[162 208]
[163 206]
[164 205]
[165 204]
[166 203]
[167 202]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
