%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CREB3L3)
} def

/sequence { (\
GUGACCGCUUCAGCAUCUUUUGGGAGUGGUGACAGAGCCACAGAGGGCUGUGAGCUUGCCCGGCCCCAGGUAACGCUGGCGGUGGGUGGGCCUCCAGCUUGGAGCAGAGACCCCCCGAGGCAUCUGCAGACAGAACUGGAUGGACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.997638835 ubox
2 31 0.005206404 ubox
2 32 0.996029362 ubox
2 34 0.012315640 ubox
3 30 0.004430234 ubox
3 33 0.013570792 ubox
4 30 0.997083554 ubox
4 83 0.007740212 ubox
5 29 0.999899919 ubox
5 82 0.007955344 ubox
5 85 0.006463919 ubox
6 28 0.999875717 ubox
6 81 0.007957125 ubox
6 84 0.006532909 ubox
7 27 0.999507962 ubox
7 55 0.008227810 ubox
7 80 0.007955197 ubox
7 83 0.006586631 ubox
8 26 0.999877982 ubox
8 54 0.008238821 ubox
8 79 0.007859705 ubox
8 82 0.006596468 ubox
9 24 0.149807903 ubox
9 25 0.984398463 ubox
9 53 0.008218829 ubox
9 78 0.003315591 ubox
9 81 0.006421275 ubox
10 23 0.324321363 ubox
10 24 0.934939480 ubox
10 25 0.077867614 ubox
10 52 0.007685700 ubox
10 79 0.006250401 ubox
11 22 0.436265840 ubox
11 23 0.876328414 ubox
11 24 0.110135242 ubox
11 50 0.008210436 ubox
11 78 0.009721834 ubox
12 18 0.097132374 ubox
12 19 0.053340010 ubox
12 20 0.061093238 ubox
12 21 0.518245368 ubox
12 49 0.008222485 ubox
12 77 0.010274251 ubox
13 17 0.096792290 ubox
13 18 0.042333147 ubox
13 19 0.066595572 ubox
13 20 0.436824635 ubox
13 48 0.008225805 ubox
13 76 0.010335385 ubox
14 22 0.600436929 ubox
14 47 0.008206601 ubox
14 75 0.010320842 ubox
15 21 0.597156815 ubox
16 23 0.040969901 ubox
16 24 0.008557851 ubox
16 25 0.006057171 ubox
16 46 0.006931885 ubox
17 22 0.096238623 ubox
17 23 0.014290315 ubox
17 24 0.007685350 ubox
17 45 0.007693602 ubox
18 22 0.014202713 ubox
18 23 0.007278573 ubox
18 44 0.007664353 ubox
19 43 0.007611503 ubox
19 70 0.009460662 ubox
20 42 0.007341447 ubox
20 69 0.009999210 ubox
21 40 0.004856001 ubox
21 68 0.010240690 ubox
22 39 0.004936933 ubox
22 67 0.010297096 ubox
23 38 0.004936031 ubox
23 66 0.010293504 ubox
24 65 0.010281884 ubox
26 41 0.006452984 ubox
26 64 0.006952301 ubox
27 34 0.005070525 ubox
27 40 0.006632475 ubox
27 62 0.007931263 ubox
27 63 0.005987033 ubox
28 33 0.005119163 ubox
28 39 0.006638324 ubox
28 60 0.005258834 ubox
28 61 0.008532204 ubox
29 38 0.006638330 ubox
29 59 0.005408049 ubox
29 60 0.008446321 ubox
30 37 0.006571836 ubox
30 58 0.005491831 ubox
33 52 0.015597242 ubox
33 58 0.013851239 ubox
34 51 0.027770555 ubox
34 56 0.006563008 ubox
34 57 0.050867670 ubox
35 55 0.005224904 ubox
35 56 0.035627033 ubox
35 57 0.913680722 ubox
36 49 0.033066111 ubox
36 56 0.989128293 ubox
36 57 0.026034324 ubox
37 48 0.033421022 ubox
37 55 0.999061800 ubox
37 56 0.004248199 ubox
38 47 0.033397883 ubox
38 54 0.999016696 ubox
38 143 0.007659679 ubox
39 46 0.033337886 ubox
39 52 0.999062068 ubox
39 142 0.007661352 ubox
40 51 0.999143144 ubox
40 141 0.007212570 ubox
41 50 0.999343060 ubox
41 138 0.005151130 ubox
42 49 0.998244802 ubox
42 137 0.005179802 ubox
43 48 0.992299231 ubox
43 136 0.005148583 ubox
44 137 0.005418813 ubox
45 100 0.004047738 ubox
45 136 0.005458911 ubox
46 99 0.006342803 ubox
47 98 0.006751389 ubox
48 97 0.006768657 ubox
48 133 0.005110189 ubox
49 96 0.006767370 ubox
49 132 0.005109295 ubox
50 95 0.006768044 ubox
50 131 0.005109886 ubox
51 130 0.004983774 ubox
52 94 0.006771746 ubox
53 93 0.006829255 ubox
54 91 0.018336676 ubox
54 92 0.004878864 ubox
55 90 0.020540013 ubox
56 89 0.020857893 ubox
57 88 0.056586237 ubox
58 87 0.943258561 ubox
58 91 0.006206643 ubox
59 85 0.007502583 ubox
59 86 0.971513805 ubox
59 90 0.007025260 ubox
60 84 0.007512832 ubox
60 85 0.970642825 ubox
60 86 0.234204524 ubox
60 89 0.006996094 ubox
61 84 0.968082290 ubox
61 85 0.239990576 ubox
61 88 0.006957589 ubox
62 83 0.682319653 ubox
62 87 0.006811068 ubox
63 80 0.005225632 ubox
63 83 0.724242866 ubox
64 79 0.004858931 ubox
64 82 0.998145291 ubox
64 85 0.004883890 ubox
65 78 0.004412054 ubox
65 81 0.998447584 ubox
65 84 0.004871240 ubox
66 79 0.999787755 ubox
67 78 0.999909248 ubox
68 77 0.999368259 ubox
69 76 0.997860408 ubox
69 77 0.024180666 ubox
70 76 0.048273443 ubox
71 75 0.059581824 ubox
84 147 0.003298344 ubox
85 146 0.003338128 ubox
86 145 0.003340837 ubox
87 144 0.003304548 ubox
88 146 0.120577589 ubox
88 147 0.979381551 ubox
89 145 0.120068086 ubox
89 146 0.992078970 ubox
89 147 0.010808873 ubox
90 145 0.992059264 ubox
90 146 0.010381781 ubox
91 143 0.999015502 ubox
92 142 0.999148752 ubox
92 143 0.022569554 ubox
93 103 0.005430839 ubox
93 140 0.986029431 ubox
93 142 0.013564250 ubox
94 102 0.005674058 ubox
94 139 0.999932555 ubox
95 101 0.005678256 ubox
95 138 0.999945490 ubox
96 100 0.004602382 ubox
96 137 0.999412453 ubox
97 136 0.995830277 ubox
98 119 0.010626393 ubox
98 129 0.017511291 ubox
98 133 0.261248836 ubox
99 118 0.010714086 ubox
99 128 0.017318531 ubox
99 130 0.013940688 ubox
99 132 0.215339358 ubox
99 133 0.786108777 ubox
99 134 0.358445895 ubox
99 135 0.112349443 ubox
100 117 0.010725721 ubox
100 128 0.005025502 ubox
100 129 0.016371993 ubox
100 132 0.908147699 ubox
100 133 0.299148699 ubox
100 134 0.084996627 ubox
101 116 0.010768561 ubox
101 131 0.941588673 ubox
102 115 0.010736712 ubox
104 127 0.998655757 ubox
105 126 0.999910649 ubox
106 125 0.999668871 ubox
107 124 0.999876968 ubox
108 123 0.998617886 ubox
108 125 0.006541435 ubox
109 124 0.008537243 ubox
110 123 0.009332313 ubox
111 120 0.967684005 ubox
112 119 0.965489839 ubox
112 120 0.207903482 ubox
113 119 0.210573474 ubox
113 120 0.128082490 ubox
114 119 0.128361135 ubox
114 120 0.038007642 ubox
115 119 0.037982128 ubox
123 134 0.009963569 ubox
124 133 0.010649691 ubox
125 132 0.010646077 ubox
126 131 0.010583740 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
4 30 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
58 87 0.9500000 lbox
59 86 0.9500000 lbox
60 85 0.9500000 lbox
61 84 0.9500000 lbox
62 83 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
88 147 0.9500000 lbox
89 146 0.9500000 lbox
90 145 0.9500000 lbox
91 143 0.9500000 lbox
92 142 0.9500000 lbox
93 140 0.9500000 lbox
94 139 0.9500000 lbox
95 138 0.9500000 lbox
96 137 0.9500000 lbox
97 136 0.9500000 lbox
99 133 0.9500000 lbox
100 132 0.9500000 lbox
101 131 0.9500000 lbox
104 127 0.9500000 lbox
105 126 0.9500000 lbox
106 125 0.9500000 lbox
107 124 0.9500000 lbox
108 123 0.9500000 lbox
111 120 0.9500000 lbox
112 119 0.9500000 lbox
showpage
end
%%EOF
