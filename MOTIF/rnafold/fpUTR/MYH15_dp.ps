%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYH15)
} def

/sequence { (\
CAUUUCUACUUCAUAUGAUCAUUUUAAUUGUAUUUACCUCAUCUUACCAAAAAGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.162120727 ubox
1 30 0.048775783 ubox
2 14 0.013885627 ubox
2 16 0.162697283 ubox
2 19 0.036008193 ubox
2 22 0.023947158 ubox
2 28 0.041492294 ubox
2 29 0.046370330 ubox
2 31 0.010685778 ubox
2 33 0.008710162 ubox
2 42 0.005013227 ubox
2 56 0.013856771 ubox
3 13 0.014100911 ubox
3 15 0.160206740 ubox
3 18 0.038394183 ubox
3 21 0.025157708 ubox
3 27 0.046572201 ubox
3 30 0.010798153 ubox
3 32 0.007995130 ubox
3 41 0.005717845 ubox
3 51 0.003300282 ubox
3 52 0.003980314 ubox
3 53 0.005380821 ubox
3 54 0.004297499 ubox
3 55 0.014372782 ubox
4 17 0.038388116 ubox
4 18 0.016905919 ubox
4 26 0.046424273 ubox
4 27 0.024147456 ubox
4 50 0.003724461 ubox
4 51 0.004501867 ubox
4 52 0.006079564 ubox
4 53 0.006179062 ubox
4 54 0.014114781 ubox
4 55 0.005086439 ubox
5 17 0.016428623 ubox
5 18 0.130454969 ubox
5 26 0.023529106 ubox
5 49 0.003502865 ubox
5 50 0.004220767 ubox
5 51 0.005727337 ubox
5 52 0.006097129 ubox
5 53 0.012306410 ubox
5 54 0.003495525 ubox
5 55 0.079742805 ubox
6 17 0.139535932 ubox
6 54 0.085313815 ubox
7 15 0.051075541 ubox
7 17 0.015129782 ubox
7 26 0.011519224 ubox
7 30 0.007684767 ubox
7 32 0.190827897 ubox
7 36 0.041392556 ubox
7 53 0.082766074 ubox
8 14 0.050533154 ubox
8 16 0.018792576 ubox
8 25 0.011460395 ubox
8 29 0.007921308 ubox
8 31 0.202033300 ubox
8 35 0.042420740 ubox
9 30 0.202488424 ubox
9 54 0.018420436 ubox
10 18 0.020218253 ubox
10 27 0.013637923 ubox
10 50 0.045776746 ubox
10 51 0.009562089 ubox
10 52 0.005970163 ubox
10 53 0.018340603 ubox
11 17 0.019378951 ubox
11 18 0.166588955 ubox
11 26 0.013796568 ubox
11 49 0.045499762 ubox
11 50 0.009504008 ubox
11 51 0.006211767 ubox
11 52 0.016786303 ubox
11 55 0.009746697 ubox
12 17 0.177207848 ubox
12 30 0.138975335 ubox
12 54 0.010373071 ubox
13 19 0.012779922 ubox
13 22 0.022971050 ubox
13 28 0.050928960 ubox
13 29 0.139099596 ubox
13 31 0.059976914 ubox
13 33 0.552203243 ubox
14 18 0.012232916 ubox
14 21 0.023532866 ubox
14 26 0.065889755 ubox
14 27 0.052152945 ubox
14 30 0.061939381 ubox
14 32 0.596439619 ubox
14 36 0.050718613 ubox
14 46 0.060612710 ubox
15 22 0.030548831 ubox
15 25 0.067629711 ubox
15 28 0.036324313 ubox
15 29 0.058687282 ubox
15 31 0.603547574 ubox
15 33 0.027823088 ubox
15 35 0.052761722 ubox
15 42 0.061694288 ubox
15 45 0.060808447 ubox
16 21 0.029596729 ubox
16 26 0.175279006 ubox
16 27 0.037215173 ubox
16 30 0.601225251 ubox
16 32 0.029998199 ubox
16 36 0.064384670 ubox
16 41 0.075873448 ubox
16 46 0.006021620 ubox
16 49 0.006988312 ubox
17 23 0.042925036 ubox
17 24 0.084328117 ubox
17 25 0.187701366 ubox
17 29 0.598575359 ubox
17 31 0.026316108 ubox
17 34 0.124329100 ubox
17 35 0.070873348 ubox
17 40 0.093076992 ubox
17 43 0.091520726 ubox
17 45 0.006351863 ubox
17 48 0.007504868 ubox
17 57 0.430308050 ubox
18 22 0.039063703 ubox
18 23 0.085948055 ubox
18 24 0.186667082 ubox
18 28 0.597766567 ubox
18 31 0.034110469 ubox
18 33 0.136081909 ubox
18 34 0.069052904 ubox
18 39 0.089043249 ubox
18 42 0.091437376 ubox
18 44 0.006049637 ubox
18 56 0.436801233 ubox
19 27 0.577020699 ubox
19 30 0.023519551 ubox
19 32 0.135809436 ubox
19 41 0.086258225 ubox
19 55 0.437734950 ubox
20 30 0.183733714 ubox
20 54 0.437039098 ubox
21 28 0.033526709 ubox
21 29 0.181526928 ubox
21 31 0.060777063 ubox
21 33 0.018291180 ubox
21 42 0.003761376 ubox
21 56 0.061747487 ubox
22 27 0.036081026 ubox
22 30 0.061369264 ubox
22 32 0.019332089 ubox
22 41 0.004073329 ubox
22 50 0.012766345 ubox
22 51 0.029345091 ubox
22 52 0.288321047 ubox
22 53 0.288000088 ubox
22 54 0.015249434 ubox
22 55 0.066784539 ubox
23 49 0.012122831 ubox
23 50 0.031407529 ubox
23 51 0.299421693 ubox
23 52 0.290833692 ubox
23 53 0.063059401 ubox
23 54 0.067792899 ubox
23 55 0.015167247 ubox
24 49 0.029550014 ubox
24 50 0.293712283 ubox
24 51 0.288142596 ubox
24 52 0.073135215 ubox
24 53 0.071717007 ubox
24 54 0.016374700 ubox
24 55 0.004796995 ubox
25 32 0.053957497 ubox
25 36 0.148065068 ubox
25 46 0.057436160 ubox
25 49 0.263713000 ubox
25 50 0.261393031 ubox
25 51 0.068861017 ubox
25 52 0.066961485 ubox
25 53 0.017882396 ubox
25 54 0.004993504 ubox
26 31 0.051446113 ubox
26 34 0.047971046 ubox
26 35 0.158254827 ubox
26 45 0.068583971 ubox
27 33 0.049933107 ubox
27 34 0.155171379 ubox
27 42 0.010027601 ubox
27 44 0.065556645 ubox
27 56 0.007041895 ubox
28 32 0.044889016 ubox
28 41 0.010029297 ubox
28 50 0.103668963 ubox
28 51 0.012688958 ubox
28 52 0.005697422 ubox
28 53 0.006150684 ubox
28 55 0.007361023 ubox
29 36 0.036139980 ubox
29 41 0.089486464 ubox
29 46 0.051413389 ubox
29 49 0.135757137 ubox
29 50 0.013721371 ubox
29 51 0.006566206 ubox
29 52 0.006493799 ubox
29 54 0.007297184 ubox
30 35 0.038409887 ubox
30 37 0.091688244 ubox
30 40 0.097484667 ubox
30 42 0.019907923 ubox
30 45 0.053338921 ubox
30 47 0.367260033 ubox
30 48 0.108748198 ubox
30 56 0.003510673 ubox
31 36 0.086269458 ubox
31 41 0.020264201 ubox
31 46 0.377714939 ubox
31 55 0.003343968 ubox
32 42 0.040802256 ubox
32 45 0.374127366 ubox
32 56 0.007587848 ubox
33 41 0.042396373 ubox
33 51 0.005597113 ubox
33 52 0.005324401 ubox
33 53 0.005984367 ubox
33 55 0.008226926 ubox
34 49 0.003374293 ubox
34 50 0.006800272 ubox
34 51 0.006492480 ubox
34 52 0.007015142 ubox
34 53 0.004173891 ubox
34 54 0.008389469 ubox
34 55 0.003348835 ubox
35 46 0.015819119 ubox
35 49 0.006646885 ubox
35 50 0.006398375 ubox
35 51 0.006893939 ubox
35 52 0.004243111 ubox
35 53 0.007776259 ubox
35 54 0.003405337 ubox
36 45 0.016886081 ubox
38 54 0.017659319 ubox
39 53 0.016894910 ubox
39 55 0.024320884 ubox
40 54 0.025811792 ubox
41 56 0.788270042 ubox
42 55 0.852829053 ubox
43 54 0.865922813 ubox
44 50 0.009428351 ubox
44 51 0.016294725 ubox
44 52 0.032881138 ubox
44 53 0.863808277 ubox
44 54 0.006068615 ubox
44 55 0.012592072 ubox
45 49 0.010413550 ubox
45 50 0.022838949 ubox
45 51 0.043588498 ubox
45 52 0.815599070 ubox
45 53 0.013029942 ubox
45 54 0.013510559 ubox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
showpage
end
%%EOF
