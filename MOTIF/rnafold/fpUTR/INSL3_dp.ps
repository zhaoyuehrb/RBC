%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INSL3)
} def

/sequence { (\
CCCCCAGCUGGGACGGCCCAGGCGCCUAUAAAGGGGGUCCCCGCUUGGCCCCGGCGCCACCCACCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.012528352 ubox
1 12 0.248194560 ubox
1 16 0.151671098 ubox
1 37 0.006145055 ubox
2 10 0.012911742 ubox
2 11 0.249170895 ubox
2 12 0.270669304 ubox
2 15 0.152958181 ubox
2 16 0.017739907 ubox
2 36 0.006215322 ubox
3 10 0.248371558 ubox
3 11 0.270470655 ubox
3 12 0.535879718 ubox
3 15 0.015085896 ubox
3 16 0.003220076 ubox
3 35 0.006219618 ubox
4 10 0.269084740 ubox
4 11 0.537904518 ubox
4 12 0.034766814 ubox
4 16 0.004563985 ubox
4 34 0.006219702 ubox
4 47 0.003174372 ubox
5 10 0.537716166 ubox
5 11 0.034814806 ubox
5 15 0.004604835 ubox
5 33 0.006202364 ubox
5 47 0.003199368 ubox
6 45 0.009856145 ubox
7 17 0.075795638 ubox
7 23 0.006467710 ubox
7 44 0.010685787 ubox
7 55 0.055217019 ubox
8 16 0.075973227 ubox
8 21 0.264971715 ubox
8 22 0.004969283 ubox
8 43 0.010670864 ubox
8 54 0.055285210 ubox
9 15 0.075700229 ubox
9 20 0.571229120 ubox
9 28 0.004351786 ubox
9 53 0.055232268 ubox
9 63 0.379076241 ubox
9 66 0.077664062 ubox
10 14 0.072134169 ubox
10 18 0.015781277 ubox
10 19 0.607704735 ubox
10 27 0.004613482 ubox
10 41 0.010315072 ubox
10 52 0.055209453 ubox
10 61 0.007912147 ubox
10 62 0.427678283 ubox
10 65 0.087457836 ubox
10 68 0.015275173 ubox
11 17 0.016236515 ubox
11 18 0.607760884 ubox
11 19 0.014758295 ubox
11 26 0.004635036 ubox
11 40 0.010325604 ubox
11 51 0.055116368 ubox
11 60 0.008024289 ubox
11 61 0.427736082 ubox
11 62 0.055999157 ubox
11 64 0.086380349 ubox
11 65 0.026643283 ubox
11 67 0.015400449 ubox
11 68 0.009782317 ubox
12 17 0.605038373 ubox
12 18 0.015090570 ubox
12 25 0.004633123 ubox
12 39 0.010324863 ubox
12 50 0.040768336 ubox
12 51 0.003616805 ubox
12 60 0.427121320 ubox
12 61 0.058173310 ubox
12 64 0.026963479 ubox
12 67 0.010501832 ubox
13 38 0.010295501 ubox
14 24 0.004340838 ubox
14 37 0.010255678 ubox
14 47 0.011291691 ubox
14 53 0.004876498 ubox
14 56 0.005932679 ubox
15 23 0.003553984 ubox
15 26 0.004661322 ubox
15 45 0.009775444 ubox
15 46 0.007986330 ubox
15 50 0.037693555 ubox
15 51 0.003423985 ubox
15 52 0.004864456 ubox
15 55 0.004442061 ubox
15 58 0.468158014 ubox
15 61 0.159202907 ubox
15 62 0.331008075 ubox
15 65 0.383961821 ubox
15 68 0.026449982 ubox
16 23 0.005592216 ubox
16 25 0.004667891 ubox
16 44 0.012726395 ubox
16 49 0.052854639 ubox
16 50 0.003674433 ubox
16 51 0.004758058 ubox
16 55 0.019832818 ubox
16 57 0.468794614 ubox
16 60 0.159466970 ubox
16 61 0.330763675 ubox
16 64 0.383709246 ubox
16 67 0.026587840 ubox
17 22 0.006141214 ubox
17 24 0.004660329 ubox
17 35 0.009298887 ubox
17 43 0.012754422 ubox
17 48 0.043472773 ubox
17 54 0.019943580 ubox
17 56 0.468743579 ubox
18 34 0.009304960 ubox
18 47 0.031358757 ubox
18 48 0.032786034 ubox
18 53 0.019608279 ubox
18 54 0.467783121 ubox
19 33 0.009297948 ubox
19 47 0.044519208 ubox
19 53 0.467178939 ubox
20 27 0.004340227 ubox
20 45 0.004243756 ubox
20 46 0.053694037 ubox
21 26 0.004426367 ubox
21 39 0.012577202 ubox
21 40 0.004267150 ubox
21 44 0.003424503 ubox
21 45 0.054028537 ubox
21 50 0.004847900 ubox
21 51 0.421127929 ubox
21 52 0.206146572 ubox
21 58 0.839288182 ubox
21 61 0.003918913 ubox
21 62 0.003668763 ubox
22 38 0.013041191 ubox
22 39 0.004312197 ubox
22 40 0.003163245 ubox
22 44 0.054113703 ubox
22 49 0.004808409 ubox
22 50 0.421375862 ubox
22 51 0.205911424 ubox
22 57 0.880944123 ubox
23 37 0.013720816 ubox
23 43 0.054117668 ubox
23 48 0.004719081 ubox
23 56 0.881136798 ubox
24 38 0.017389440 ubox
24 42 0.049421828 ubox
24 49 0.469014363 ubox
24 55 0.881158410 ubox
25 34 0.018112859 ubox
25 35 0.020089303 ubox
25 36 0.028040896 ubox
25 37 0.029207900 ubox
25 48 0.468805771 ubox
25 54 0.881076321 ubox
26 33 0.035434204 ubox
26 34 0.020165040 ubox
26 35 0.028123118 ubox
26 36 0.029134421 ubox
26 47 0.468094638 ubox
26 48 0.018441161 ubox
26 53 0.879910552 ubox
26 54 0.012081075 ubox
27 32 0.057785506 ubox
27 33 0.047173143 ubox
27 34 0.027668448 ubox
27 35 0.028582777 ubox
27 47 0.025571788 ubox
27 53 0.016916487 ubox
28 46 0.107987264 ubox
29 47 0.023344343 ubox
30 46 0.070773356 ubox
31 45 0.067664460 ubox
31 46 0.321436387 ubox
32 45 0.331032440 ubox
32 46 0.062707274 ubox
33 40 0.020616775 ubox
33 41 0.077077012 ubox
33 42 0.313842678 ubox
33 44 0.332804095 ubox
33 45 0.064543170 ubox
33 46 0.006538303 ubox
33 51 0.004418485 ubox
33 52 0.154217108 ubox
33 62 0.003881952 ubox
33 65 0.005530894 ubox
34 39 0.020595102 ubox
34 40 0.077367863 ubox
34 41 0.313935440 ubox
34 42 0.184270181 ubox
34 44 0.065019475 ubox
34 45 0.006570161 ubox
34 50 0.004422859 ubox
34 51 0.147146971 ubox
34 52 0.863157341 ubox
34 61 0.003885701 ubox
34 64 0.005531124 ubox
35 39 0.076283810 ubox
35 40 0.312844670 ubox
35 41 0.184577498 ubox
35 42 0.289371029 ubox
35 44 0.006609706 ubox
35 49 0.004410744 ubox
35 50 0.139626281 ubox
35 51 0.864964669 ubox
35 52 0.030270578 ubox
35 60 0.003882312 ubox
35 62 0.005835185 ubox
36 40 0.181722991 ubox
36 41 0.288404011 ubox
36 42 0.062743016 ubox
36 45 0.004525330 ubox
36 49 0.131342877 ubox
36 50 0.866214688 ubox
36 51 0.030222808 ubox
36 58 0.003887388 ubox
36 61 0.005845568 ubox
37 41 0.061917737 ubox
37 44 0.011926819 ubox
37 49 0.867409205 ubox
37 50 0.030124859 ubox
37 57 0.003892978 ubox
37 60 0.005847699 ubox
38 43 0.011286123 ubox
38 48 0.720343316 ubox
38 56 0.003785738 ubox
38 59 0.005557274 ubox
39 47 0.711923774 ubox
39 48 0.482747358 ubox
40 47 0.484113146 ubox
40 48 0.070194012 ubox
41 47 0.074458535 ubox
41 48 0.096656609 ubox
42 47 0.100237679 ubox
42 56 0.005721741 ubox
43 49 0.005690205 ubox
43 55 0.005805467 ubox
44 48 0.005736721 ubox
44 54 0.005794389 ubox
45 53 0.004997135 ubox
46 59 0.010365775 ubox
47 52 0.005196203 ubox
47 58 0.011752576 ubox
48 57 0.011759730 ubox
49 56 0.011740935 ubox
53 61 0.003923864 ubox
53 62 0.004982464 ubox
54 60 0.003935365 ubox
54 61 0.004950005 ubox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
showpage
end
%%EOF
