%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C3)
} def

/sequence { (\
AGAUAAAAAGCCAGCUCCAGCAGGCGCUGCUCACUCCUCCCCAUCCUCUCCCUCUGUCCCUCUGUCCCUCUGACCCUGCACUGUCCCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.014992966 ubox
1 35 0.035978720 ubox
1 38 0.118484854 ubox
1 47 0.013768379 ubox
1 49 0.040113421 ubox
1 53 0.008093513 ubox
1 55 0.051848995 ubox
1 61 0.007777304 ubox
1 63 0.033336555 ubox
1 69 0.005287503 ubox
1 71 0.022388042 ubox
1 77 0.041660816 ubox
1 82 0.020239956 ubox
2 17 0.003496171 ubox
2 30 0.017155277 ubox
2 32 0.086212191 ubox
2 34 0.041172951 ubox
2 36 0.209372285 ubox
2 37 0.134289495 ubox
2 39 0.280363514 ubox
2 45 0.081890223 ubox
2 46 0.013721525 ubox
2 48 0.046045805 ubox
2 50 0.020574176 ubox
2 52 0.009155425 ubox
2 54 0.054996787 ubox
2 58 0.126837913 ubox
2 60 0.008291732 ubox
2 62 0.035249928 ubox
2 66 0.059799453 ubox
2 68 0.005885403 ubox
2 70 0.023698521 ubox
2 76 0.046560627 ubox
2 81 0.021689490 ubox
2 85 0.232230404 ubox
3 16 0.003332159 ubox
3 31 0.074427843 ubox
3 35 0.206169205 ubox
3 38 0.274738731 ubox
3 44 0.082213571 ubox
3 47 0.044890307 ubox
3 49 0.020090669 ubox
3 53 0.053579784 ubox
3 57 0.127152682 ubox
3 61 0.033221140 ubox
3 65 0.059888397 ubox
3 69 0.022190975 ubox
3 84 0.232638226 ubox
4 29 0.017743820 ubox
4 43 0.077635597 ubox
4 56 0.126330448 ubox
4 64 0.059544067 ubox
4 78 0.006720589 ubox
4 83 0.231562235 ubox
5 28 0.017097822 ubox
5 55 0.117077470 ubox
5 63 0.055708228 ubox
5 77 0.007424263 ubox
5 82 0.216664274 ubox
9 16 0.008247642 ubox
9 28 0.013631096 ubox
9 31 0.896240999 ubox
9 35 0.041274862 ubox
9 38 0.025519112 ubox
9 47 0.011615481 ubox
9 49 0.011159715 ubox
9 53 0.020024678 ubox
9 55 0.016014392 ubox
9 61 0.008494100 ubox
9 63 0.004325976 ubox
9 71 0.005420262 ubox
9 77 0.037559354 ubox
9 82 0.021735868 ubox
10 15 0.008666246 ubox
10 21 0.008462045 ubox
10 25 0.129363801 ubox
10 27 0.013638791 ubox
10 30 0.946997913 ubox
10 34 0.043008621 ubox
10 37 0.026052347 ubox
10 46 0.011786215 ubox
10 48 0.011310850 ubox
10 52 0.019865560 ubox
10 54 0.015892504 ubox
10 57 0.017107686 ubox
10 60 0.008279026 ubox
10 62 0.004288499 ubox
10 70 0.005539202 ubox
10 76 0.037460964 ubox
10 79 0.099893100 ubox
10 81 0.023412312 ubox
10 84 0.008041879 ubox
10 90 0.055264406 ubox
11 20 0.008467654 ubox
11 24 0.129516328 ubox
11 26 0.013486742 ubox
11 29 0.671928470 ubox
11 56 0.017474003 ubox
11 78 0.082254268 ubox
11 83 0.008196742 ubox
11 89 0.054693948 ubox
12 23 0.129312345 ubox
12 29 0.715877015 ubox
12 56 0.012610912 ubox
12 64 0.005319991 ubox
12 72 0.045853194 ubox
12 78 0.072580871 ubox
12 83 0.010626036 ubox
13 28 0.979220930 ubox
13 31 0.015289442 ubox
13 35 0.011991783 ubox
13 38 0.006274483 ubox
13 55 0.012746191 ubox
13 63 0.005446209 ubox
13 69 0.009627947 ubox
13 71 0.045891703 ubox
13 77 0.092218738 ubox
13 82 0.010685137 ubox
14 21 0.129062608 ubox
14 25 0.027298847 ubox
14 27 0.982249433 ubox
14 30 0.015801087 ubox
14 34 0.012525889 ubox
14 37 0.006645921 ubox
14 54 0.012672663 ubox
14 62 0.005424596 ubox
14 68 0.010470573 ubox
14 70 0.045696443 ubox
14 76 0.092158690 ubox
14 79 0.013927442 ubox
14 81 0.010263994 ubox
14 84 0.008000545 ubox
14 90 0.057048776 ubox
15 20 0.128828943 ubox
15 24 0.027311667 ubox
15 26 0.981875804 ubox
15 29 0.014102287 ubox
15 78 0.014006627 ubox
15 83 0.008160596 ubox
15 89 0.057092922 ubox
16 23 0.025656554 ubox
16 24 0.035544158 ubox
16 73 0.021661856 ubox
16 88 0.055074312 ubox
17 23 0.036070930 ubox
17 24 0.980763577 ubox
17 72 0.016693258 ubox
18 23 0.979734594 ubox
18 29 0.030128001 ubox
18 56 0.007156716 ubox
18 64 0.051480651 ubox
18 72 0.093890730 ubox
18 83 0.009420794 ubox
19 28 0.033361553 ubox
19 31 0.030341431 ubox
19 49 0.006145516 ubox
19 55 0.007178349 ubox
19 63 0.051767852 ubox
19 71 0.095282140 ubox
19 82 0.008888978 ubox
20 27 0.033467595 ubox
20 30 0.032131952 ubox
20 48 0.006359798 ubox
20 54 0.007166079 ubox
20 57 0.003565495 ubox
20 62 0.051782937 ubox
20 65 0.008908357 ubox
20 70 0.095276597 ubox
20 79 0.019006074 ubox
20 81 0.004402493 ubox
20 84 0.051739042 ubox
20 90 0.010328255 ubox
21 26 0.033420472 ubox
21 29 0.032146513 ubox
21 56 0.003800016 ubox
21 64 0.009682983 ubox
21 78 0.019452098 ubox
21 83 0.052600966 ubox
21 89 0.010330750 ubox
22 28 0.032067740 ubox
22 47 0.006550471 ubox
22 53 0.007031566 ubox
22 55 0.003789685 ubox
22 61 0.051592554 ubox
22 63 0.009333340 ubox
22 69 0.094111169 ubox
22 77 0.019432445 ubox
22 82 0.052540092 ubox
23 27 0.031364973 ubox
23 46 0.006599065 ubox
23 52 0.007062786 ubox
23 54 0.003760399 ubox
23 59 0.005956446 ubox
23 60 0.051881245 ubox
23 62 0.008949830 ubox
23 66 0.004691816 ubox
23 67 0.011797269 ubox
23 68 0.094449513 ubox
23 76 0.019298662 ubox
23 81 0.052327409 ubox
23 85 0.010379087 ubox
23 86 0.004247271 ubox
23 87 0.005316468 ubox
23 93 0.010557721 ubox
24 30 0.006840701 ubox
24 45 0.006558916 ubox
24 51 0.007005033 ubox
24 58 0.006086214 ubox
24 59 0.051842651 ubox
24 61 0.007804057 ubox
24 65 0.005014935 ubox
24 66 0.011992979 ubox
24 67 0.094325904 ubox
24 75 0.018738858 ubox
24 79 0.045524251 ubox
24 81 0.004534144 ubox
24 84 0.010468223 ubox
24 85 0.004261702 ubox
24 86 0.005262042 ubox
24 92 0.010656028 ubox
25 29 0.007061496 ubox
25 56 0.004540756 ubox
25 64 0.009096341 ubox
25 72 0.005255692 ubox
25 78 0.045540512 ubox
25 83 0.011401622 ubox
26 55 0.003502259 ubox
26 57 0.052848853 ubox
26 63 0.007700511 ubox
26 65 0.093009142 ubox
26 71 0.004553258 ubox
26 77 0.037908217 ubox
26 79 0.025804798 ubox
26 82 0.011271786 ubox
26 84 0.006699229 ubox
26 90 0.092987626 ubox
27 56 0.053593488 ubox
27 64 0.094077433 ubox
27 78 0.025820494 ubox
27 83 0.006849003 ubox
27 89 0.093076847 ubox
28 43 0.010947693 ubox
28 80 0.022931822 ubox
28 88 0.092782271 ubox
28 91 0.022981986 ubox
29 42 0.011965987 ubox
29 57 0.018795846 ubox
29 63 0.003422662 ubox
29 65 0.008171517 ubox
29 79 0.025504303 ubox
29 84 0.005607062 ubox
29 87 0.091721666 ubox
29 90 0.026530461 ubox
30 56 0.023279143 ubox
30 64 0.010676791 ubox
30 78 0.025703566 ubox
30 83 0.010612255 ubox
30 89 0.026509797 ubox
31 73 0.043025017 ubox
31 88 0.025323188 ubox
32 56 0.038232635 ubox
32 64 0.016525991 ubox
32 72 0.046457783 ubox
32 78 0.006007404 ubox
32 83 0.036908880 ubox
33 55 0.034762269 ubox
33 57 0.113909533 ubox
33 63 0.015293316 ubox
33 65 0.049288251 ubox
33 71 0.041443483 ubox
33 77 0.005615737 ubox
33 82 0.034337772 ubox
33 84 0.058156654 ubox
34 56 0.120963092 ubox
34 64 0.052861879 ubox
34 83 0.060133521 ubox
34 89 0.005166095 ubox
35 73 0.014987717 ubox
35 88 0.004796841 ubox
36 72 0.015730918 ubox
37 89 0.005493718 ubox
38 73 0.012186028 ubox
38 88 0.005265501 ubox
39 72 0.013063571 ubox
42 56 0.094541369 ubox
42 64 0.033378250 ubox
42 72 0.026307956 ubox
42 78 0.023504990 ubox
42 83 0.009903845 ubox
43 55 0.088019116 ubox
43 57 0.019042999 ubox
43 63 0.030888774 ubox
43 65 0.007197655 ubox
43 71 0.024143180 ubox
43 77 0.022797659 ubox
43 82 0.009544006 ubox
44 56 0.019187628 ubox
44 64 0.007192500 ubox
44 73 0.022625338 ubox
45 72 0.023686664 ubox
46 89 0.034159643 ubox
47 73 0.052455547 ubox
47 88 0.033185170 ubox
48 72 0.056062938 ubox
48 89 0.032631274 ubox
49 73 0.018172870 ubox
49 88 0.031934291 ubox
50 72 0.019554728 ubox
52 89 0.013686217 ubox
53 73 0.060115485 ubox
53 88 0.013170463 ubox
54 72 0.064913945 ubox
54 89 0.100498277 ubox
55 64 0.016365650 ubox
55 72 0.003627659 ubox
55 78 0.005629498 ubox
55 80 0.207162923 ubox
55 83 0.011059474 ubox
55 88 0.102097318 ubox
55 91 0.056215833 ubox
56 63 0.023585418 ubox
56 65 0.009142523 ubox
56 71 0.004791755 ubox
56 74 0.259432874 ubox
56 77 0.004432556 ubox
56 79 0.232952058 ubox
56 81 0.114196231 ubox
56 82 0.010766284 ubox
56 87 0.101802131 ubox
56 90 0.063332475 ubox
56 92 0.039321840 ubox
57 64 0.009879243 ubox
57 73 0.260463709 ubox
57 78 0.228554975 ubox
57 80 0.111127078 ubox
57 83 0.005874915 ubox
57 89 0.048489908 ubox
57 91 0.036153163 ubox
58 72 0.259840488 ubox
60 89 0.012676073 ubox
61 73 0.151509661 ubox
61 88 0.012179901 ubox
62 72 0.159317700 ubox
62 89 0.124905155 ubox
63 72 0.016940948 ubox
63 78 0.012755656 ubox
63 80 0.095143115 ubox
63 83 0.005189712 ubox
63 88 0.127546370 ubox
63 91 0.145605234 ubox
64 71 0.025622544 ubox
64 74 0.687518358 ubox
64 77 0.003489391 ubox
64 79 0.101064880 ubox
64 81 0.021790893 ubox
64 87 0.127079065 ubox
64 90 0.164257087 ubox
64 92 0.151220355 ubox
65 73 0.690496352 ubox
65 78 0.097078244 ubox
65 80 0.020386223 ubox
65 89 0.143110731 ubox
65 91 0.147708918 ubox
66 72 0.689612265 ubox
68 89 0.278423678 ubox
69 88 0.279153680 ubox
70 89 0.134249473 ubox
71 78 0.006862358 ubox
71 80 0.102812534 ubox
71 83 0.003635402 ubox
71 88 0.133491701 ubox
71 91 0.045371257 ubox
72 77 0.008964945 ubox
72 79 0.109439043 ubox
72 82 0.004016423 ubox
72 85 0.429145298 ubox
72 87 0.108302512 ubox
72 90 0.050923133 ubox
73 84 0.434493000 ubox
74 83 0.434888625 ubox
76 89 0.299004721 ubox
77 83 0.009325110 ubox
77 88 0.302892754 ubox
77 91 0.541467471 ubox
78 82 0.010776832 ubox
78 84 0.042872355 ubox
78 87 0.303022887 ubox
78 90 0.611466487 ubox
79 83 0.046495659 ubox
79 89 0.606036849 ubox
81 89 0.302443691 ubox
82 88 0.339133870 ubox
82 91 0.205995280 ubox
83 87 0.339441917 ubox
83 90 0.232561422 ubox
83 92 0.052453612 ubox
84 89 0.221468501 ubox
84 91 0.049756885 ubox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
77 91 0.9500000 lbox
78 90 0.9500000 lbox
79 89 0.9500000 lbox
showpage
end
%%EOF
