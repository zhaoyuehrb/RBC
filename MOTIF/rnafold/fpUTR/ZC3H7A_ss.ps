%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCCGCCGCCGCUAACCGAGGGAGAGCUGCGAGCGAGCACCCAGGCCCCGCCGCCGCCGCCGCCACCGCUGCCCGCCUGCCGCCGCCCGCCUCCGCCUGCCUUCUGCCGCCGGCCGGCGCGUCGUCCCCACAGAUUGCUCAUUUAGAAAGUGGAUGUGUGGGAUAAC\
) } def
/len { sequence length } bind def

/coor [
[308.13824463 289.22055054]
[296.68728638 279.53161621]
[289.52175903 277.60403442]
[285.11636353 269.55630493]
[273.84640503 259.65744019]
[262.57641602 249.75857544]
[251.30644226 239.85971069]
[239.94548035 230.06539917]
[228.49450684 220.37648010]
[216.95449829 210.79377747]
[205.32643127 201.31811523]
[190.57246399 199.27613831]
[184.76225281 184.56044006]
[173.13420105 175.08476257]
[163.51560974 178.85836792]
[153.11871338 178.27374268]
[143.84060669 173.36997986]
[137.40237427 164.98037720]
[135.02995300 154.59156799]
[137.22117615 144.08032227]
[126.13604736 133.97488403]
[115.05091095 123.86944580]
[103.96577454 113.76400757]
[90.35002136 110.58552551]
[85.92878723 97.32112122]
[74.84365082 87.21569061]
[66.35788727 83.72784424]
[63.64925003 76.81962585]
[52.75274658 66.51107788]
[31.65809822 62.88652420]
[26.46858978 42.93236160]
[15.01761532 33.24344254]
[3.56664109 23.55452156]
[-11.96612644 20.54724312]
[-16.68436432 6.41970015]
[-28.13533783 -3.26922083]
[-39.58631134 -12.95814228]
[-48.19516754 -16.13003731]
[-51.15722275 -22.93345070]
[-62.42720032 -32.83231735]
[-75.70240784 -30.42057037]
[-87.76148224 -36.02472305]
[-94.28350830 -47.38903046]
[-93.07510376 -60.24034500]
[-104.16024017 -70.34577942]
[-115.24537659 -80.45121765]
[-126.33050537 -90.55664825]
[-137.41563416 -100.66208649]
[-150.73313904 -98.49606323]
[-162.68661499 -104.32209778]
[-168.99752808 -115.80497742]
[-167.55184937 -128.63177490]
[-178.44834900 -138.94032288]
[-193.79061890 -142.80366516]
[-197.71878052 -157.17095947]
[-208.61528015 -167.47950745]
[-229.70993042 -171.10406494]
[-234.89942932 -191.05822754]
[-246.35040283 -200.74714661]
[-262.57595825 -203.12705994]
[-268.37533569 -218.46652222]
[-257.78265381 -230.98561096]
[-241.69476318 -227.80574036]
[-236.66148376 -212.19812012]
[-225.21051025 -202.50920105]
[-216.53343201 -204.69029236]
[-207.69700623 -202.57986450]
[-200.73358154 -196.53228760]
[-197.30494690 -187.82189941]
[-198.30673218 -178.37600708]
[-187.41021729 -168.06745911]
[-172.84735107 -164.94145203]
[-168.13980103 -149.83682251]
[-157.24330139 -139.52827454]
[-140.48568726 -140.72271729]
[-127.78645325 -129.21537781]
[-127.31020355 -111.74721527]
[-116.22507477 -101.64178467]
[-105.13993835 -91.53634644]
[-94.05480194 -81.43091583]
[-82.96967316 -71.32547760]
[-66.23699951 -72.82938385]
[-53.32728958 -61.55866623]
[-52.52833176 -44.10229492]
[-41.25835419 -34.20343018]
[-29.89739227 -24.40911674]
[-18.44641685 -14.72019482]
[-6.99544334 -5.03127432]
[7.71827364 -2.71701384]
[13.25556183 12.10354614]
[24.70653534 21.79246712]
[36.15750885 31.48138809]
[44.83458710 29.30029869]
[53.67102432 31.41071510]
[60.63444138 37.45829773]
[64.06307220 46.16868210]
[63.06129837 55.61457443]
[73.95780182 65.92312622]
[84.94908905 76.13055420]
[96.03422546 86.23599243]
[109.64997864 89.41447449]
[114.07121277 102.67887878]
[125.15634918 112.78430939]
[136.24148560 122.88974762]
[147.32661438 132.99517822]
[167.27885437 130.96563721]
[182.10549927 144.01533508]
[182.60986328 163.45671082]
[194.23791504 172.93237305]
[209.82360840 175.65211487]
[214.80210876 189.69004822]
[226.43016052 199.16571045]
[235.09616089 202.17799377]
[238.18342590 208.92550659]
[249.63439941 218.61442566]
[258.24325562 221.78631592]
[261.20532227 228.58973694]
[272.47528076 238.48860168]
[283.74526978 248.38746643]
[295.01525879 258.28634644]
[306.37622070 268.08065796]
[317.82717896 277.76956177]
[331.34622192 270.87670898]
[346.43362427 269.68807983]
[360.78790283 274.35375977]
[372.23129272 284.13314819]
[379.04025269 297.51235962]
[380.20492554 312.43847656]
[375.57888794 326.63455200]
[387.02987671 336.32348633]
[398.48083496 346.01239014]
[409.93182373 355.70132446]
[421.38278198 365.39025879]
[432.83377075 375.07916260]
[448.36651611 378.08645630]
[453.08477783 392.21398926]
[464.53573608 401.90292358]
[475.98672485 411.59182739]
[481.20187378 412.52749634]
[485.12454224 415.12896729]
[487.33367920 418.61450195]
[487.78436279 422.14886475]
[498.68087769 432.45742798]
[509.57739258 442.76599121]
[520.47387695 453.07452393]
[531.37042236 463.38308716]
[547.03173828 469.87603760]
[545.12799072 486.72277832]
[528.41265869 489.55706787]
[521.06182861 474.27957153]
[510.16534424 463.97103882]
[499.26882935 453.66247559]
[488.37234497 443.35394287]
[477.47583008 433.04537964]
[466.29779053 423.04281616]
[454.84683228 413.35388184]
[443.39584351 403.66494751]
[428.68212891 401.35070801]
[423.14483643 386.53015137]
[411.69387817 376.84121704]
[400.24288940 367.15231323]
[388.79193115 357.46337891]
[377.34094238 347.77444458]
[365.88998413 338.08554077]
[352.65560913 344.99795532]
[337.74267578 346.32040405]
[323.42083740 341.82040405]
[311.88189697 332.15396118]
[304.90420532 318.77017212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 122]
[2 121]
[4 120]
[5 119]
[6 118]
[7 117]
[8 115]
[9 114]
[10 112]
[11 111]
[13 109]
[14 108]
[20 105]
[21 104]
[22 103]
[23 102]
[25 100]
[26 99]
[28 98]
[29 97]
[31 92]
[32 91]
[33 90]
[35 88]
[36 87]
[37 86]
[39 85]
[40 84]
[44 81]
[45 80]
[46 79]
[47 78]
[48 77]
[52 74]
[53 73]
[55 71]
[56 70]
[58 65]
[59 64]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[136 157]
[137 156]
[138 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
