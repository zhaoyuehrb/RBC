%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGGGGCGGUUGGUGAUCAUCCUAGCCUGCGGUAGAUGGUGCGCCCUGCCUUCCCUGCCCAGACGUAAGAAAAGUGCACUGUCCGUCCAGAAAGUUGAAAUAAAAGGACCAUC\
) } def
/len { sequence length } bind def

/coor [
[60.88862228 114.72015381]
[72.73645782 105.52076721]
[87.68467712 104.28249359]
[72.91256714 101.67777252]
[58.14044952 99.07305145]
[43.36833191 96.46832275]
[28.59621620 93.86360168]
[13.82409859 91.25888062]
[-0.94801730 88.65415955]
[-18.02389526 95.38185883]
[-31.07437897 83.73325348]
[-45.91110229 81.52606964]
[-60.74782562 79.31888580]
[-77.63692474 86.50261688]
[-90.99544525 75.20858765]
[-105.88607788 73.40053558]
[-120.77671051 71.59248352]
[-135.66734314 69.78443909]
[-150.58090210 68.17646027]
[-165.51470947 66.76884460]
[-180.44851685 65.36122894]
[-195.38232422 63.95361328]
[-210.31613159 62.54599762]
[-225.24993896 61.13838577]
[-233.34384155 68.64850616]
[-244.02861023 70.35496521]
[-253.65701294 65.92414856]
[-259.07971191 57.07587433]
[-273.91641235 54.86869049]
[-288.75314331 52.66151047]
[-305.30957031 56.31137848]
[-313.40005493 41.41238022]
[-301.32299805 29.51360703]
[-286.54595947 37.82478714]
[-271.70922852 40.03197098]
[-256.87252808 42.23915100]
[-239.58427429 33.75254059]
[-223.84233093 46.20457458]
[-208.90852356 47.61219025]
[-193.97471619 49.01980591]
[-179.04090881 50.42742157]
[-164.10710144 51.83503342]
[-149.17329407 53.24264908]
[-142.12692261 50.70444870]
[-133.85929871 54.89380264]
[-118.96865845 56.70185089]
[-104.07802582 58.50990295]
[-89.18739319 60.31795120]
[-79.39560699 53.07696533]
[-66.90111542 54.54874420]
[-58.54064178 64.48216248]
[-43.70391846 66.68934631]
[-28.86719704 68.89653015]
[-18.88453293 61.92103958]
[-6.43406391 63.72774124]
[1.65670538 73.88204193]
[16.42882156 76.48676300]
[31.20093727 79.09148407]
[45.97305298 81.69621277]
[60.74517059 84.30093384]
[75.51728821 86.90565491]
[90.28940582 89.51037598]
[104.63984680 85.14406586]
[115.45788574 74.75319672]
[126.27592468 64.36233521]
[127.34001160 51.42254639]
[136.67430115 42.98754501]
[148.85037231 43.22094727]
[159.94348145 33.12426758]
[171.03659058 23.02759171]
[170.22618103 7.41102123]
[179.68473816 -5.04168272]
[194.94619751 -8.45073414]
[208.80459595 -1.20648432]
[214.71638489 13.27055454]
[209.89022827 28.14476776]
[196.60487366 36.39300537]
[181.13327026 34.12070084]
[170.04016113 44.21738052]
[158.94705200 54.31405640]
[154.59600830 71.25730896]
[136.66679382 75.18037415]
[125.84875488 85.57123566]
[115.03071594 95.96210480]
[115.43328857 103.45128632]
[128.80752563 110.24317169]
[116.23844147 118.42966461]
[116.64101410 125.91885376]
[128.51060486 135.09016418]
[140.38018799 144.26147461]
[152.24977112 153.43278503]
[164.88508606 145.08848572]
[179.54580688 141.30140686]
[194.64164734 142.48233032]
[208.53511047 148.50317383]
[219.71913147 158.71083069]
[226.98057556 171.99804688]
[229.53175354 186.92353821]
[227.09594727 201.86828613]
[219.93736267 215.21119690]
[208.83251953 225.50494385]
[194.98599243 231.63293457]
[179.89973450 232.93043518]
[165.21018982 229.25672913]
[152.51078796 221.01028442]
[143.17904663 209.08563232]
[138.22721863 194.77626038]
[138.19242859 179.63435364]
[143.07846069 165.30236816]
[131.20887756 156.13105774]
[119.33928680 146.95974731]
[107.46970367 137.78843689]
[99.16600037 150.28038025]
[85.38866425 156.21208191]
[70.60751343 153.65910339]
[59.61803818 143.44972229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[11 53]
[12 52]
[13 51]
[15 48]
[16 47]
[17 46]
[18 45]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[28 36]
[29 35]
[30 34]
[63 84]
[64 83]
[65 82]
[68 80]
[69 79]
[70 78]
[88 112]
[89 111]
[90 110]
[91 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
