%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGUGGCCACGUCGACCGCGCGGGACCGUUAAAUUUGAAACUUGGCGGCUAGGGGUGUGGGCUUGAGGUGGCCGGUUUGUUAGGGAGUCGUGUACGUGCCUUGGUCGCUUCUGUAGCUCCGAGGGCAGGUUGCGGAAGAAAGCCCAGGCGGUCUGUGGCCCAGAGGAAAGGCCUGCAGCAGGACGAGGACCUGAGCCAGGAAUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-117.96601868 348.25881958]
[-130.36349487 338.92703247]
[-134.87597656 324.08056641]
[-129.76832581 309.42822266]
[-117.00453186 300.60409546]
[-116.78330231 285.60571289]
[-116.56207275 270.60736084]
[-116.34084320 255.60899353]
[-128.35798645 246.63189697]
[-142.67753601 251.09851074]
[-156.99708557 255.56512451]
[-171.31663513 260.03173828]
[-185.63618469 264.49832153]
[-199.95571899 268.96493530]
[-210.82591248 280.46057129]
[-225.27978516 276.86413574]
[-239.59933472 281.33071899]
[-253.91888428 285.79733276]
[-268.23843384 290.26394653]
[-282.49053955 294.94125366]
[-296.67211914 299.82827759]
[-310.85369873 304.71527100]
[-325.03527832 309.60229492]
[-339.21685791 314.48928833]
[-353.39843750 319.37631226]
[-356.34304810 336.70281982]
[-367.60086060 350.08255005]
[-384.00079346 355.88690186]
[-400.99386597 352.60162354]
[-413.91482544 341.22048950]
[-427.94607544 346.52365112]
[-441.97735596 351.82681274]
[-456.00863647 357.12994385]
[-470.03988647 362.43310547]
[-484.07116699 367.73626709]
[-498.10244751 373.03942871]
[-501.21539307 388.14947510]
[-512.01959229 399.16183472]
[-527.06744385 402.56256104]
[-541.55731201 397.26647949]
[-550.86541748 384.96353149]
[-552.02166748 369.57955933]
[-544.65704346 356.02352905]
[-531.12158203 348.62112427]
[-515.73443604 349.73440552]
[-503.40557861 359.00814819]
[-489.37432861 353.70501709]
[-475.34304810 348.40185547]
[-461.31176758 343.09869385]
[-447.28051758 337.79553223]
[-433.24923706 332.49237061]
[-419.21798706 327.18920898]
[-418.53112793 314.57556152]
[-413.10519409 303.11614990]
[-403.71417236 294.52816772]
[-391.72900391 290.11315918]
[-378.91757202 290.56005859]
[-367.18399048 295.83779907]
[-358.28543091 305.19473267]
[-344.10385132 300.30770874]
[-329.92227173 295.42071533]
[-315.74069214 290.53369141]
[-301.55914307 285.64669800]
[-287.37756348 280.75967407]
[-284.51742554 276.93667603]
[-279.22595215 274.86892700]
[-272.70504761 275.94439697]
[-258.38549805 271.47778320]
[-244.06594849 267.01116943]
[-229.74639893 262.54458618]
[-219.90045166 251.36842346]
[-204.42233276 254.64540100]
[-190.10278320 250.17878723]
[-175.78323364 245.71217346]
[-161.46369934 241.24557495]
[-147.14414978 236.77896118]
[-132.82460022 232.31236267]
[-99.10881805 223.61883545]
[-86.70634460 215.18209839]
[-74.30386353 206.74536133]
[-73.28888702 203.37014771]
[-70.58955383 200.31848145]
[-66.37553406 198.37626648]
[-61.16092300 198.22401428]
[-48.39739990 190.34413147]
[-35.63387680 182.46424866]
[-22.87035561 174.58436584]
[-10.10683250 166.70449829]
[-7.02342033 147.46763611]
[9.46922970 136.53378296]
[28.98172760 141.32945251]
[41.38420486 132.89271545]
[53.78668213 124.45597839]
[59.95815659 110.90009308]
[75.72041321 109.53563690]
[88.12289429 101.09889984]
[85.60421753 87.71305084]
[98.30365753 74.13065338]
[106.83162689 61.79072952]
[109.13557434 52.95324326]
[115.57749176 49.33296204]
[124.28653717 37.12015915]
[132.99557495 24.90735435]
[141.70462036 12.69455147]
[150.41366577 0.48174796]
[152.12648010 -15.24647045]
[165.81558228 -21.11654854]
[174.52461243 -33.32935333]
[183.23365784 -45.54215622]
[180.02912903 -62.74029160]
[190.05747986 -76.66046906]
[206.71617126 -78.97345734]
[215.24414062 -91.31337738]
[223.77212524 -103.65330505]
[232.30009460 -115.99322510]
[240.82806396 -128.33314514]
[249.35603333 -140.67306519]
[257.88400269 -153.01298523]
[266.41198730 -165.35292053]
[274.93994141 -177.69284058]
[283.46792603 -190.03276062]
[291.99591064 -202.37268066]
[300.34094238 -214.83703613]
[308.50125122 -227.42311096]
[312.04473877 -244.00262451]
[328.95724487 -245.18727112]
[334.77746582 -229.26365662]
[321.08734131 -219.26281738]
[312.92703247 -206.67672729]
[313.02923584 -201.90333557]
[310.13494873 -197.01473999]
[304.33581543 -193.84471130]
[295.80786133 -181.50479126]
[287.27987671 -169.16485596]
[278.75189209 -156.82493591]
[270.22393799 -144.48501587]
[261.69595337 -132.14509583]
[253.16798401 -119.80517578]
[244.64001465 -107.46525574]
[236.11204529 -95.12532806]
[227.58407593 -82.78540802]
[219.05609131 -70.44548798]
[223.12214661 -58.21953583]
[219.34819031 -45.69691849]
[208.89736938 -37.51358795]
[195.44647217 -36.83311081]
[186.73742676 -24.62030983]
[178.02838135 -12.40750599]
[176.93849182 2.44717073]
[162.62646484 9.19079113]
[153.91741943 21.40359497]
[145.20837402 33.61639786]
[136.49934387 45.82920074]
[127.79029083 58.04200363]
[119.17155457 70.31870270]
[110.64357758 82.65862274]
[115.63504028 96.80377960]
[130.01890564 101.05870056]
[144.40277100 105.31362915]
[158.78663635 109.56855774]
[173.20149231 113.71729279]
[187.64654541 117.75961304]
[202.09159851 121.80193329]
[216.53665161 125.84425354]
[227.99766541 115.51716614]
[243.22621155 113.04830933]
[257.36288452 119.22549438]
[265.89675903 132.07759094]
[266.10470581 147.50355530]
[257.92034912 160.58100891]
[243.95529175 167.13699341]
[228.66574097 165.07949829]
[216.93054199 155.06509399]
[212.49433899 140.28930664]
[198.04928589 136.24699402]
[183.60421753 132.20466614]
[169.15916443 128.16235352]
[161.87181091 129.38676453]
[154.53170776 123.95242310]
[140.14784241 119.69749451]
[125.76397705 115.44256592]
[111.38011169 111.18764496]
[96.55963135 113.50137329]
[84.15715790 121.93811798]
[77.09857178 136.09745789]
[62.22341919 136.85845947]
[49.82094193 145.29519653]
[37.41846848 153.73193359]
[38.10032272 164.37628174]
[34.33184814 174.26817322]
[26.85539627 181.64723206]
[17.06659698 185.23016357]
[6.75415182 184.43359375]
[-2.22695374 179.46801758]
[-14.99047661 187.34790039]
[-27.75399971 195.22776794]
[-40.51752090 203.10765076]
[-53.28104401 210.98753357]
[-65.86712646 219.14784241]
[-78.26959991 227.58457947]
[-90.67208099 236.02131653]
[-75.86054993 238.39167786]
[-69.21471405 251.83908081]
[-76.32826996 265.04504395]
[-91.21385193 266.89425659]
[-101.34246826 255.83021545]
[-101.56370544 270.82858276]
[-101.78493500 285.82696533]
[-102.00616455 300.82531738]
[-89.50818634 310.02206421]
[-84.83491516 324.81869507]
[-89.78331757 339.52560425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 77]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[16 70]
[17 69]
[18 68]
[19 67]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[78 201]
[79 200]
[80 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[91 188]
[92 187]
[93 186]
[95 184]
[96 183]
[98 156]
[99 155]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[107 148]
[108 147]
[109 146]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 129]
[124 128]
[157 182]
[158 181]
[159 180]
[160 179]
[161 177]
[162 176]
[163 175]
[164 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
