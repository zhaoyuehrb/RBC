%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCGAGCGUGGGGCGGACGCGGCGGACGUGGGUGAGGGCGCGGCCGUAAGAGAGCGGGACGCGGGGUGCCCGGCGCGUGGUGGGGGUCCCCGGCGCCUGCCCCCACGGCACCCAAGAAGGCCUGGCCAGGGUACCCUCCGCGGAGCCCGGGGGUGGGGGGCGCGGGCCCGGCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[96.75296021 227.54306030]
[85.67074585 237.65170288]
[70.83100128 235.46490479]
[63.13585281 222.59022522]
[56.86183548 236.21508789]
[50.58781815 249.83993530]
[54.31861115 262.20446777]
[48.79243469 273.43209839]
[37.46853638 277.73199463]
[30.96027946 291.24652100]
[34.88045883 306.80325317]
[25.04766083 319.47982788]
[9.00476933 319.55187988]
[-0.94148278 306.96411133]
[2.83881736 291.37280273]
[17.44574738 284.73828125]
[23.95400238 271.22372437]
[21.69078255 253.83242798]
[36.96296310 243.56591797]
[43.23698044 229.94107056]
[49.51099777 216.31620789]
[55.19139099 202.43338013]
[60.26758957 188.31840515]
[65.34378815 174.20344543]
[70.41998291 160.08848572]
[75.49617767 145.97351074]
[80.57237244 131.85855103]
[66.69161224 116.82115173]
[62.82917404 96.72437286]
[70.14678955 77.61281586]
[60.19995117 66.38515472]
[50.25310898 55.15749359]
[40.30627060 43.92983246]
[30.35943031 32.70217133]
[20.41259003 21.47451019]
[5.06763077 22.83038330]
[-7.98084211 14.98240566]
[-13.83684635 1.11982322]
[-10.44767094 -13.35952377]
[-20.39451027 -24.58718491]
[-30.34135056 -35.81484604]
[-40.28818893 -47.04250717]
[-50.23503113 -58.27016830]
[-60.18186951 -69.49783325]
[-66.14061737 -58.91437531]
[-78.29151154 -51.47570419]
[-94.93315887 -49.93923569]
[-109.36470032 -54.02952957]
[-123.79624939 -58.11981964]
[-138.22779846 -62.21011353]
[-151.90304565 -54.28779602]
[-167.15310669 -58.43640518]
[-174.93040466 -72.19464874]
[-170.62078857 -87.40000153]
[-156.78108215 -95.03140259]
[-141.62214661 -90.56127167]
[-134.13749695 -76.64166260]
[-119.70595551 -72.55136871]
[-105.27440643 -68.46107483]
[-90.84286499 -64.37078094]
[-85.82117462 -69.94147491]
[-96.96241760 -79.98502350]
[-86.91870117 -91.12610626]
[-75.77780914 -81.08287048]
[-70.75611877 -86.65357208]
[-76.31648254 -100.58491516]
[-81.87685394 -114.51625824]
[-87.43721771 -128.44760132]
[-92.99758148 -142.37895203]
[-107.24291229 -148.68038940]
[-112.68345642 -162.88796997]
[-106.58820343 -176.42988586]
[-112.14856720 -190.36122131]
[-117.70893860 -204.29257202]
[-130.01060486 -214.24140930]
[-127.54241943 -228.93009949]
[-133.10278320 -242.86143494]
[-147.21719360 -250.48791504]
[-149.91282654 -266.30288696]
[-139.12182617 -278.17443848]
[-123.12212372 -276.99575806]
[-114.18733215 -263.67102051]
[-119.17144775 -248.42179871]
[-113.61107635 -234.49046326]
[-101.70713043 -225.53807068]
[-103.77759552 -209.85293579]
[-98.21722412 -195.92158508]
[-92.65686035 -181.99024963]
[-78.91226196 -176.36694336]
[-73.07480621 -162.31777954]
[-79.06623840 -147.93931580]
[-73.50587463 -134.00796509]
[-67.94551086 -120.07662201]
[-62.38514328 -106.14527893]
[-56.82477570 -92.21393585]
[-48.95420837 -79.44467163]
[-39.00737000 -68.21701050]
[-29.06052971 -56.98934555]
[-19.11368942 -45.76168442]
[-9.16684914 -34.53402328]
[0.77999055 -23.30636406]
[15.56228638 -24.92553711]
[28.61793137 -17.44127846]
[34.83586884 -3.54197454]
[31.64025116 11.52767086]
[41.58709335 22.75533295]
[51.53393173 33.98299408]
[61.48077011 45.21065521]
[71.42761230 56.43831635]
[81.37445068 67.66597748]
[98.65277100 62.70944977]
[116.24372101 66.40622711]
[130.06530762 77.89846802]
[143.69015503 71.62445068]
[157.31501770 65.35043335]
[170.93986511 59.07641602]
[172.33937073 50.78836441]
[176.86257935 43.81575775]
[183.70361328 39.26370621]
[191.69689941 37.81805801]
[199.51559448 39.64289093]
[205.89176941 44.36558914]
[219.91700745 39.04651642]
[233.94224548 33.72744370]
[246.60803223 22.45738220]
[260.94390869 31.50832176]
[256.21524048 47.78947830]
[239.26132202 47.75268555]
[225.23608398 53.07175827]
[211.21083069 58.39083099]
[199.29405212 76.44768524]
[177.21388245 72.70127106]
[163.58903503 78.97528839]
[149.96417236 85.24930573]
[136.33932495 91.52332306]
[140.25561523 99.34471893]
[142.37457275 108.44045258]
[156.10568237 114.47836304]
[169.83680725 120.51627350]
[183.61952209 126.43544769]
[197.45281982 132.23544312]
[211.28611755 138.03544617]
[227.00465393 136.23602295]
[235.75024414 148.29272461]
[249.58352661 154.09272766]
[263.41683960 159.89273071]
[280.36190796 160.44114685]
[284.52578735 176.87582397]
[269.88607788 185.42654419]
[257.61682129 173.72602844]
[243.78353882 167.92602539]
[229.95024109 162.12602234]
[215.22114563 164.34030151]
[205.48611450 151.86874390]
[191.65281677 146.06874084]
[177.81953430 140.26873779]
[170.41598511 140.58280945]
[163.79890442 134.24739075]
[150.06777954 128.20948792]
[136.33665466 122.17157745]
[126.38982391 133.39923096]
[134.03880310 146.30245972]
[141.68780518 159.20567322]
[149.33679199 172.10888672]
[163.88963318 179.66842651]
[164.34887695 196.06115723]
[150.24209595 204.42361450]
[136.08113098 196.15322876]
[136.43357849 179.75787354]
[128.78457642 166.85466003]
[121.13559723 153.95144653]
[113.48660278 141.04823303]
[106.73395538 140.68949890]
[100.41537476 139.27671814]
[94.68733978 136.93475342]
[89.61114502 151.04971313]
[84.53494263 165.16467285]
[79.45874786 179.27964783]
[74.38255310 193.39460754]
[69.30635834 207.50956726]
[83.82025909 203.72187805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[6 19]
[9 17]
[10 16]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[27 175]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[47 60]
[48 59]
[49 58]
[50 57]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[72 88]
[73 87]
[74 86]
[76 84]
[77 83]
[113 135]
[114 134]
[115 133]
[116 132]
[122 130]
[123 129]
[124 128]
[137 160]
[138 159]
[139 158]
[140 156]
[141 155]
[142 154]
[144 152]
[145 151]
[146 150]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
