%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGCACCGCACACCCUUUACUGGCCGGCCCCGCGCUGCUCUCCUAAGACCCCGCGGGCCAGCGCCGCGACCCCUUCCCAGCGCUCCUCGCGCUGUGUGCGGCGCGUCCUCUCGCCGGUGACCCGGUGUGCGUGGGGUCGAGGCGCCGGGCGGAGUGGCUCCGGGCCGAAACGCC\
) } def
/len { sequence length } bind def

/coor [
[265.58920288 375.34295654]
[252.31443787 382.32730103]
[237.34219360 381.41513062]
[225.01348877 372.87097168]
[218.90284729 359.17205811]
[220.78196716 344.29022217]
[230.10604858 332.54025269]
[244.17167664 327.32891846]
[258.89852905 330.16604614]
[250.16812134 317.96850586]
[241.43771362 305.77093506]
[232.70730591 293.57339478]
[223.97691345 281.37585449]
[215.24650574 269.17831421]
[206.51611328 256.98077393]
[197.78570557 244.78321838]
[181.10461426 242.75688171]
[170.83609009 229.03192139]
[173.71118164 211.79153442]
[164.76567078 199.75086975]
[155.82015991 187.71018982]
[146.87464905 175.66952515]
[137.92913818 163.62884521]
[128.98362732 151.58816528]
[120.03812408 139.54750061]
[111.09261322 127.50682068]
[86.55844116 126.43852234]
[71.23925781 107.24504852]
[56.23984528 107.11193085]
[41.24043655 106.97881317]
[26.24102783 106.84570312]
[11.24161816 106.71258545]
[2.60128808 109.77330017]
[-4.02221012 106.44163513]
[-19.01689339 106.04232788]
[-34.01157761 105.64302063]
[-41.58308029 117.18211365]
[-53.77455521 123.41647339]
[-67.34567261 122.80944824]
[-78.74849701 115.62701416]
[-85.05501556 103.84011078]
[-100.04025269 103.17473602]
[-115.02548218 102.50936890]
[-129.31988525 110.54690552]
[-143.28793335 101.95471954]
[-142.56050110 85.57171631]
[-127.88590240 78.25131989]
[-114.36011505 87.52413177]
[-99.37487793 88.18950653]
[-84.38964081 88.85487366]
[-74.59152985 75.70173645]
[-58.72856140 70.92188263]
[-42.98229980 76.58439636]
[-33.61227036 90.64833832]
[-18.61758614 91.04764557]
[-3.62290239 91.44695282]
[11.37473488 91.71317291]
[26.37414360 91.84629059]
[41.37355423 91.97940826]
[56.37296295 92.11252594]
[71.37237549 92.24564362]
[77.67931366 80.46904755]
[88.51462555 72.65484619]
[86.39188385 57.80580902]
[84.26914215 42.95676804]
[82.14640045 28.10773087]
[80.02365112 13.25869083]
[77.90090942 -1.59034801]
[75.77816772 -16.43938637]
[73.65542603 -31.28842545]
[66.10185242 -33.37968826]
[59.41522598 -37.41655350]
[54.08348846 -43.08742523]
[50.49110794 -49.96212006]
[48.89138031 -57.52448654]
[49.38859177 -65.21113586]
[51.93137741 -72.45343018]
[56.31757355 -78.71954346]
[62.21023178 -83.55349731]
[69.16347504 -86.60834503]
[68.89724731 -101.60598755]
[68.63102722 -116.60362244]
[68.36480713 -131.60125732]
[68.09857941 -146.59889221]
[67.83235931 -161.59652710]
[57.33363724 -173.72734070]
[60.41356659 -189.47196960]
[74.70948792 -196.75250244]
[89.25479889 -189.98393250]
[92.89157104 -174.35852051]
[82.82999420 -161.86276245]
[83.09622192 -146.86512756]
[83.36244202 -131.86747742]
[83.62866211 -116.86984253]
[83.89488983 -101.87220764]
[84.16110992 -86.87457275]
[102.02279663 -73.15290070]
[104.03379822 -50.45213699]
[88.50446320 -33.41117096]
[90.62720490 -18.56212997]
[92.74994659 -3.71309137]
[94.87269592 11.13594723]
[96.99543762 25.98498726]
[99.11817932 40.83402634]
[101.24092102 55.68306351]
[103.36367035 70.53210449]
[110.18933105 72.14594269]
[116.44517517 75.31746674]
[121.78134918 79.86933136]
[125.89943695 85.54696655]
[128.56913757 92.03285980]
[129.64115906 98.96430969]
[129.05554199 105.95367432]
[126.84505463 112.61009216]
[123.13328552 118.56130981]
[132.07879639 130.60198975]
[141.02430725 142.64265442]
[149.96981812 154.68333435]
[158.91532898 166.72401428]
[167.86083984 178.76467896]
[176.80635071 190.80535889]
[185.75186157 202.84602356]
[199.23297119 203.26850891]
[209.84831238 211.26956177]
[213.84843445 223.74195862]
[209.98324585 236.05282593]
[218.71365356 248.25036621]
[227.44406128 260.44790649]
[236.17445374 272.64544678]
[244.90486145 284.84298706]
[253.63525391 297.04055786]
[262.36566162 309.23809814]
[271.09606934 321.43563843]
[281.76129150 326.76998901]
[284.09829712 337.11862183]
[294.46697998 347.95791626]
[309.59744263 352.58181763]
[312.80398560 367.12716675]
[323.17266846 377.96646118]
[338.45458984 376.02508545]
[351.79348755 383.36862183]
[358.17501831 396.99728394]
[355.34173584 411.59558105]
[365.71041870 422.43487549]
[376.07910156 433.27416992]
[384.29974365 437.32934570]
[386.53350830 444.39904785]
[396.70819092 455.42065430]
[406.88287354 466.44229126]
[417.05752563 477.46389771]
[427.32962036 488.39477539]
[437.69830322 499.23406982]
[453.50228882 499.33407593]
[464.54705811 510.63842773]
[464.27999878 526.44042969]
[452.85949707 537.36511230]
[437.06118774 536.93096924]
[426.25787354 525.39562988]
[426.85900879 509.60275269]
[416.49032593 498.76345825]
[409.57293701 496.09509277]
[406.03591919 487.63858032]
[395.86123657 476.61694336]
[385.68658447 465.59533691]
[375.51190186 454.57373047]
[365.23980713 443.64285278]
[354.87112427 432.80355835]
[344.50244141 421.96426392]
[329.79281616 424.14721680]
[316.46066284 417.16741943]
[309.71603394 403.51589966]
[312.33337402 388.33514404]
[301.96469116 377.49584961]
[287.57589722 373.64724731]
[283.62768555 358.32659912]
[273.25900269 347.48730469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 133]
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[19 122]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[25 116]
[26 115]
[28 61]
[29 60]
[30 59]
[31 58]
[32 57]
[34 56]
[35 55]
[36 54]
[41 50]
[42 49]
[43 48]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[135 176]
[136 175]
[138 173]
[139 172]
[143 168]
[144 167]
[145 166]
[147 165]
[148 164]
[149 163]
[150 162]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
