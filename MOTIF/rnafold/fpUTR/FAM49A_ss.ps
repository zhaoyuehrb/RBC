%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCCGUCUCGCAGGCUGCGGCGGCCGCGGGAGAGGCGUACUCGGCGGCGGCGGAGCGGGCGGCAGAGCAGGGCGGCGGCGACUCGCAGGGUACCACCAUCUUAAGGACAGAAAAGCUACAGGACUCUAGGAGGCCACCGUCCUGAUUUGGGAAGUCCAACUUACUUUGGCCAGACAGCAGCUAAGCUGGUUCAUCCCAUCAGCCUGGAUUGGUGAAACUGAAUCACAGGAGAUAUUUCCAGGUUUGCUGGG\
) } def
/len { sequence length } bind def

/coor [
[124.92971802 164.10566711]
[114.92958069 152.92544556]
[104.92944336 141.74522400]
[89.95812225 140.81817627]
[78.65507507 150.67927551]
[67.35202789 160.54037476]
[56.04898453 170.40147400]
[44.74594116 180.26255798]
[33.44289780 190.12365723]
[29.04973602 198.10012817]
[21.93853378 200.03576660]
[10.51439095 209.75630188]
[-0.90975279 219.47685242]
[-1.15164900 230.31643677]
[-7.18195295 239.06199646]
[-16.82126808 242.97653198]
[-26.81157494 240.99652100]
[-38.47265625 250.43151855]
[-50.13373566 259.86651611]
[-61.79481506 269.30151367]
[-67.65637970 283.99685669]
[-82.41739655 285.98727417]
[-94.07847595 295.42227173]
[-99.94004059 310.11761475]
[-114.70104980 312.10803223]
[-126.36212921 321.54302979]
[-138.02320862 330.97802734]
[-149.68429565 340.41302490]
[-154.37033081 348.22103882]
[-161.54844666 349.89154053]
[-173.32533264 359.18161011]
[-171.03736877 374.36911011]
[-176.66462708 388.66000366]
[-188.69340515 398.21008301]
[-203.88803101 400.45043945]
[-218.16120911 394.77838135]
[-227.67353821 382.71972656]
[-229.86624146 367.51815796]
[-224.14949036 353.26284790]
[-212.06108093 343.78836060]
[-196.85272217 341.64331055]
[-182.61537170 347.40472412]
[-170.83850098 338.11465454]
[-159.11929321 328.75195312]
[-147.45820618 319.31695557]
[-135.79713440 309.88195801]
[-124.13604736 300.44696045]
[-119.10855865 286.42648315]
[-103.51347351 283.76119995]
[-91.85239410 274.32620239]
[-86.82490540 260.30572510]
[-71.22981262 257.64044189]
[-59.56873322 248.20544434]
[-47.90765381 238.77044678]
[-36.24657440 229.33544922]
[-30.61579895 210.82080078]
[-10.63029575 208.05270386]
[0.79384804 198.33215332]
[12.21799183 188.61161804]
[23.58180237 178.82061768]
[34.88484573 168.95951843]
[46.18789291 159.09841919]
[57.49093628 149.23733521]
[68.79398346 139.37623596]
[80.09702301 129.51513672]
[71.65073395 119.86553955]
[67.36917877 108.15643311]
[67.58731079 96.04761505]
[72.02047729 85.16139221]
[79.83610535 76.86521149]
[73.04278564 63.49169922]
[66.24945831 50.11819077]
[59.45613861 36.74467850]
[52.66281891 23.37116814]
[45.86949539 9.99765873]
[39.07617569 -3.37585211]
[32.28285217 -16.74936295]
[19.13459396 -25.54901505]
[20.26888847 -40.40036392]
[13.47556686 -53.77387619]
[6.68224478 -67.14738464]
[1.39523041 -71.04283142]
[-0.81909537 -76.23918915]
[-0.10908898 -80.93675995]
[-6.56954622 -94.47420502]
[-13.03000355 -108.01165771]
[-27.65730476 -113.36701202]
[-34.01628113 -127.18793488]
[-28.82062721 -141.09982300]
[-35.28108597 -154.63728333]
[-41.74154282 -168.17472839]
[-48.20199966 -181.71217346]
[-54.66245651 -195.24961853]
[-61.16474152 -201.62490845]
[-61.11793900 -208.99468994]
[-67.41046906 -222.61100769]
[-82.63073730 -222.93464661]
[-96.14608002 -229.80651855]
[-105.30007935 -241.81587219]
[-108.31970215 -256.54824829]
[-104.65847778 -271.07080078]
[-95.09454346 -282.51617432]
[-101.38706970 -296.13250732]
[-107.67960358 -309.74880981]
[-122.98241425 -311.06005859]
[-135.57023621 -319.86019897]
[-142.05699158 -333.78204346]
[-140.69778442 -349.08065796]
[-131.85823059 -361.64083862]
[-117.91612244 -368.08392334]
[-102.62182617 -366.67675781]
[-90.08943176 -357.79788208]
[-83.69007874 -343.83566284]
[-85.14516449 -328.54583740]
[-94.06328583 -316.04135132]
[-87.77075195 -302.42501831]
[-81.47822571 -288.80871582]
[-66.56354523 -288.67568970]
[-53.13041306 -282.05294800]
[-43.86691666 -270.20608521]
[-40.65260696 -255.45179749]
[-44.17735672 -240.70516968]
[-53.79415131 -228.90353394]
[-47.50162506 -215.28721619]
[-41.12500763 -201.71008301]
[-34.66455078 -188.17263794]
[-28.20409393 -174.63517761]
[-21.74363708 -161.09773254]
[-15.28317928 -147.56028748]
[-1.19993281 -142.84883118]
[5.54473543 -129.21197510]
[0.50744438 -114.47211456]
[6.96790171 -100.93466187]
[13.42835903 -87.39721680]
[20.05575562 -73.94071198]
[26.84907722 -60.56719971]
[33.64239883 -47.19368744]
[46.30475235 -39.35059738]
[45.65636444 -23.54268456]
[52.44968414 -10.16917324]
[59.24300766 3.20433664]
[66.03633118 16.57784653]
[72.82965088 29.95135689]
[79.62297058 43.32486725]
[86.41629028 56.69837952]
[93.20961761 70.07189178]
[104.89707184 66.13590240]
[118.43693542 67.06548309]
[129.86108398 57.34493637]
[141.28523254 47.62439346]
[152.70936584 37.90385437]
[164.13351440 28.18330956]
[175.43655396 18.32221603]
[186.61677551 8.32207680]
[197.79698181 -1.67806137]
[208.97720337 -11.67819977]
[220.15742493 -21.67833710]
[219.48242188 -37.30134583]
[229.04855347 -49.67159271]
[244.33900452 -52.94822311]
[258.13406372 -45.58411407]
[263.92016602 -31.05637360]
[258.96524048 -16.22455597]
[245.60888672 -8.09179020]
[230.15756226 -10.49812222]
[218.97734070 -0.49798349]
[207.79713440 9.50215435]
[196.61691284 19.50229263]
[185.43669128 29.50243187]
[184.28071594 34.11057281]
[180.23417664 38.05150986]
[173.85404968 39.60745239]
[162.42991638 49.32799530]
[151.00576782 59.04853821]
[139.58161926 68.76908112]
[128.15748596 78.48962402]
[134.53410339 92.06676483]
[149.30978394 89.48234558]
[164.08546448 86.89792633]
[178.86114502 84.31350708]
[187.73764038 71.23744965]
[203.27592468 68.35001373]
[216.25740051 77.36426544]
[218.98039246 92.93220520]
[209.82940674 105.81765747]
[194.23353577 108.37590790]
[181.44555664 99.08918762]
[166.66987610 101.67360687]
[151.89419556 104.25802612]
[137.11851501 106.84244537]
[129.37571716 121.95117950]
[116.10965729 131.74508667]
[126.10980225 142.92530823]
[136.10993958 154.10551453]
[148.90365601 155.59519958]
[157.00263977 165.08992004]
[156.48939514 177.15829468]
[166.35049438 188.46134949]
[176.21159363 199.76438904]
[186.07267761 211.06742859]
[200.97534180 216.37980652]
[203.51199341 231.05682373]
[213.37309265 242.35986328]
[223.23417664 253.66291809]
[233.16499329 264.90475464]
[243.16513062 276.08496094]
[253.16526794 287.26519775]
[263.16540527 298.44540405]
[273.16552734 309.62561035]
[283.16567993 320.80584717]
[298.50402832 319.37698364]
[311.58966064 327.16281128]
[317.51156616 340.99737549]
[314.19131470 355.49267578]
[324.19143677 366.67288208]
[337.74664307 364.26089478]
[350.62377930 368.81875610]
[359.50158691 379.05770874]
[362.14642334 392.23864746]
[357.97348022 404.90444946]
[367.83459473 416.20748901]
[377.69567871 427.51052856]
[393.53945923 430.03118896]
[401.32150269 444.06045532]
[395.07202148 458.83624268]
[379.58514404 463.02383423]
[366.74105835 453.41088867]
[366.39263916 437.37161255]
[356.53152466 426.06857300]
[346.67044067 414.76553345]
[330.36166382 416.74404907]
[315.94772339 408.52075195]
[309.21795654 393.17001343]
[313.01123047 376.67303467]
[303.01107788 365.49279785]
[288.23666382 367.18228149]
[275.14556885 359.76022339]
[268.86157227 345.89065552]
[271.98547363 330.80596924]
[261.98532104 319.62576294]
[251.98518372 308.44555664]
[241.98504639 297.26531982]
[231.98490906 286.08511353]
[221.98477173 274.90490723]
[215.20182800 272.02264404]
[211.93113708 263.52401733]
[202.07003784 252.22096252]
[192.20895386 240.91792297]
[178.01162720 236.41400146]
[174.76963806 220.92852783]
[164.90853882 209.62548828]
[155.04745483 198.32243347]
[145.18635559 187.01939392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[11 59]
[12 58]
[13 57]
[17 55]
[18 54]
[19 53]
[20 52]
[22 50]
[23 49]
[25 47]
[26 46]
[27 45]
[28 44]
[30 43]
[31 42]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[79 137]
[80 136]
[81 135]
[84 134]
[85 133]
[86 132]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[95 124]
[96 123]
[102 117]
[103 116]
[104 115]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
[177 190]
[178 189]
[179 188]
[180 187]
[197 253]
[198 252]
[199 251]
[200 250]
[202 248]
[203 247]
[204 246]
[205 244]
[206 243]
[207 242]
[208 241]
[209 240]
[210 239]
[214 235]
[215 234]
[220 230]
[221 229]
[222 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
