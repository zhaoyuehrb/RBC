%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLRB1)
} def

/sequence { (\
GCCUCACAGAAUUGAGAGUUUGUUCUUACACACAAGUUUAAUGCCACCUUCCUCUGUCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.074542388 ubox
1 23 0.003663673 ubox
1 37 0.006074513 ubox
1 44 0.031196282 ubox
1 57 0.007283308 ubox
1 61 0.817101470 ubox
2 18 0.083748472 ubox
2 22 0.004000585 ubox
2 36 0.006623469 ubox
2 43 0.031187670 ubox
2 56 0.007838130 ubox
2 60 0.818319279 ubox
3 9 0.008963504 ubox
3 16 0.162887006 ubox
3 18 0.031782565 ubox
4 8 0.008103788 ubox
4 10 0.006916543 ubox
4 15 0.163626415 ubox
4 17 0.032508706 ubox
5 9 0.007204129 ubox
5 14 0.163790995 ubox
5 16 0.032490411 ubox
5 43 0.006792360 ubox
5 56 0.013486126 ubox
5 60 0.055721841 ubox
6 13 0.147549129 ubox
6 23 0.009013808 ubox
6 37 0.003937211 ubox
6 42 0.006903338 ubox
6 55 0.012603744 ubox
6 57 0.890309462 ubox
6 59 0.037636837 ubox
7 14 0.031085667 ubox
7 22 0.009638189 ubox
7 36 0.004136063 ubox
7 43 0.005729100 ubox
7 56 0.929856357 ubox
7 60 0.319536700 ubox
8 13 0.028158651 ubox
8 21 0.009560856 ubox
8 26 0.012036769 ubox
8 42 0.005289373 ubox
8 53 0.010776601 ubox
8 55 0.929933147 ubox
8 59 0.321447223 ubox
9 20 0.009406065 ubox
9 25 0.013001793 ubox
9 39 0.011146951 ubox
9 51 0.012176407 ubox
9 52 0.010510509 ubox
9 54 0.929963720 ubox
9 58 0.321606418 ubox
10 19 0.009162391 ubox
10 20 0.004859917 ubox
10 24 0.013060659 ubox
10 38 0.012881288 ubox
10 49 0.004464406 ubox
10 50 0.014446187 ubox
10 53 0.914672974 ubox
10 57 0.280711228 ubox
11 19 0.009738684 ubox
11 20 0.004132334 ubox
11 23 0.013165237 ubox
11 37 0.018405904 ubox
11 42 0.400880579 ubox
11 49 0.016955192 ubox
11 57 0.140288400 ubox
12 18 0.010153612 ubox
12 22 0.012875428 ubox
12 35 0.015243585 ubox
12 36 0.018181287 ubox
12 41 0.405588547 ubox
12 56 0.185954800 ubox
13 17 0.008384493 ubox
13 28 0.210780500 ubox
13 30 0.034414860 ubox
13 32 0.012341873 ubox
13 34 0.017054686 ubox
13 35 0.013131244 ubox
13 40 0.405220837 ubox
13 43 0.007093908 ubox
13 46 0.022585387 ubox
13 56 0.027237736 ubox
14 20 0.006555801 ubox
14 21 0.004873098 ubox
14 25 0.020538595 ubox
14 27 0.237605340 ubox
14 29 0.038850441 ubox
14 31 0.013526770 ubox
14 33 0.017145697 ubox
14 38 0.015550264 ubox
14 39 0.400025289 ubox
14 42 0.009375244 ubox
14 45 0.023304790 ubox
14 50 0.527209371 ubox
14 51 0.562232192 ubox
14 54 0.273471435 ubox
14 55 0.012934972 ubox
14 58 0.007226304 ubox
15 19 0.005865642 ubox
15 20 0.005081933 ubox
15 24 0.020484917 ubox
15 26 0.241254957 ubox
15 27 0.004502305 ubox
15 37 0.019023530 ubox
15 38 0.395388041 ubox
15 39 0.074473696 ubox
15 49 0.568348809 ubox
15 50 0.539235599 ubox
15 53 0.274075065 ubox
15 55 0.085382220 ubox
15 57 0.007062548 ubox
16 23 0.017031070 ubox
16 24 0.004252204 ubox
16 25 0.242090298 ubox
16 27 0.053939800 ubox
16 37 0.359770723 ubox
16 38 0.090259740 ubox
16 39 0.103507321 ubox
16 48 0.584258637 ubox
16 49 0.465648579 ubox
16 50 0.134428473 ubox
16 51 0.134361691 ubox
16 52 0.248142419 ubox
16 54 0.094511599 ubox
17 23 0.011255689 ubox
17 24 0.236728046 ubox
17 26 0.062453664 ubox
17 27 0.003299122 ubox
17 37 0.108858434 ubox
17 38 0.140062838 ubox
17 39 0.019112145 ubox
17 49 0.223915047 ubox
17 50 0.164717067 ubox
17 53 0.094500937 ubox
17 55 0.007898532 ubox
17 59 0.004259192 ubox
18 23 0.167491762 ubox
18 25 0.063304146 ubox
18 29 0.038355429 ubox
18 31 0.027218903 ubox
18 33 0.325774653 ubox
18 37 0.141605647 ubox
18 38 0.016846398 ubox
18 42 0.035511725 ubox
18 44 0.210733810 ubox
18 47 0.699155133 ubox
18 48 0.250370704 ubox
18 49 0.138740939 ubox
18 52 0.093335292 ubox
18 54 0.007884845 ubox
18 58 0.004306016 ubox
18 61 0.003386794 ubox
19 28 0.038307375 ubox
19 30 0.023488911 ubox
19 32 0.320549517 ubox
19 35 0.088380039 ubox
19 36 0.300710757 ubox
19 41 0.037426320 ubox
19 43 0.205986970 ubox
19 46 0.675879389 ubox
19 60 0.003257763 ubox
20 34 0.083213789 ubox
20 35 0.391410648 ubox
20 36 0.014373223 ubox
20 40 0.039364618 ubox
20 41 0.222942227 ubox
21 28 0.020412365 ubox
21 30 0.347436235 ubox
21 32 0.161150810 ubox
21 34 0.402002282 ubox
21 35 0.011123326 ubox
21 40 0.235971213 ubox
21 43 0.121844686 ubox
21 46 0.164050022 ubox
22 27 0.020455660 ubox
22 29 0.354230926 ubox
22 31 0.168573174 ubox
22 33 0.404289135 ubox
22 37 0.004388746 ubox
22 39 0.230145632 ubox
22 42 0.174652193 ubox
22 44 0.592469617 ubox
22 45 0.174349886 ubox
22 47 0.047523481 ubox
22 61 0.006437192 ubox
23 28 0.345134213 ubox
23 30 0.159292900 ubox
23 32 0.398677847 ubox
23 35 0.004144759 ubox
23 41 0.177291034 ubox
23 43 0.591736718 ubox
23 46 0.046100269 ubox
23 60 0.006368210 ubox
24 34 0.004092669 ubox
24 35 0.003382711 ubox
24 40 0.160821388 ubox
25 36 0.296172503 ubox
26 35 0.296044707 ubox
26 36 0.013503793 ubox
26 41 0.481350919 ubox
27 34 0.274192748 ubox
27 35 0.014784604 ubox
27 40 0.501727161 ubox
27 43 0.005648731 ubox
27 60 0.004158997 ubox
28 37 0.464014596 ubox
28 39 0.496221301 ubox
28 42 0.005904741 ubox
28 57 0.010316864 ubox
28 59 0.004550562 ubox
29 36 0.472666275 ubox
29 43 0.034003860 ubox
29 56 0.012318055 ubox
29 60 0.033815312 ubox
30 37 0.527575943 ubox
30 42 0.030416923 ubox
30 55 0.011734719 ubox
30 57 0.010788679 ubox
30 59 0.033728555 ubox
31 36 0.538636689 ubox
31 43 0.042739071 ubox
31 56 0.012375586 ubox
31 60 0.006827513 ubox
32 42 0.038681428 ubox
32 55 0.011516369 ubox
32 57 0.038275776 ubox
32 59 0.006037030 ubox
33 43 0.068931417 ubox
33 56 0.040106642 ubox
33 60 0.005275024 ubox
34 42 0.065601965 ubox
34 50 0.081081018 ubox
34 55 0.035764278 ubox
34 59 0.004650127 ubox
35 49 0.091964300 ubox
35 50 0.008632357 ubox
35 53 0.025686178 ubox
35 55 0.022040646 ubox
35 59 0.010975190 ubox
36 42 0.021033655 ubox
36 44 0.250845404 ubox
36 47 0.117811295 ubox
36 48 0.088568857 ubox
36 49 0.007259442 ubox
36 52 0.027407653 ubox
36 54 0.027157318 ubox
36 58 0.011576556 ubox
36 61 0.011967193 ubox
37 41 0.020975555 ubox
37 43 0.249668811 ubox
37 46 0.119701099 ubox
37 60 0.011871680 ubox
39 56 0.003594272 ubox
40 50 0.019155304 ubox
40 55 0.003652871 ubox
41 49 0.019983643 ubox
41 57 0.004390712 ubox
42 56 0.004476697 ubox
43 55 0.003242797 ubox
43 57 0.012509120 ubox
43 61 0.059703321 ubox
44 56 0.012594363 ubox
44 60 0.059508694 ubox
45 56 0.042791285 ubox
45 60 0.010358208 ubox
46 55 0.042102747 ubox
46 57 0.051876968 ubox
46 59 0.010623539 ubox
47 56 0.054191868 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
