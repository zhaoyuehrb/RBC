%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCCGCCCUGCCCCGCGCCGCCAAGCGGUUCCCGCCCUCGCCCAGCGCCCAGGUAGCUGCGAGGAAACUUUUGCAGCGGCUGGGUAGCAGCACGUCUCUUGCUCCUCAGGGCCACUGCCAGGCUUGCCGAGUCCUGGGACUGCUCUCGCUCCGGCUGCCACUCUCCCGCGCUCUCCUAGCUCCCUGCGAAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[81.69798279 336.94900513]
[77.64208221 351.83364868]
[66.16749573 362.14566040]
[50.93572998 364.59448242]
[36.80717468 358.39871216]
[28.29020882 345.53540039]
[28.10256004 330.10919189]
[36.30410767 317.04251099]
[50.27777100 310.50491333]
[52.17665863 295.62557983]
[54.07554245 280.74624634]
[55.97443008 265.86694336]
[57.87331772 250.98760986]
[48.58451462 239.40081787]
[50.29829407 224.28402710]
[62.51456833 214.61962891]
[64.41345215 199.74031067]
[66.31233978 184.86099243]
[52.87243652 178.19998169]
[42.18202209 188.72210693]
[31.49161148 199.24423218]
[20.80119896 209.76635742]
[10.11078548 220.28848267]
[3.06368375 235.70841980]
[-13.70447540 233.20539856]
[-15.94115067 216.39962769]
[-0.41133773 209.59806824]
[10.27907467 199.07594299]
[20.96948814 188.55381775]
[31.65990067 178.03169250]
[42.35031128 167.50958252]
[34.82790375 159.71287537]
[28.34238434 151.09317017]
[22.98174477 141.78642273]
[18.81636238 131.93771362]
[15.89808559 121.69904327]
[14.25962639 111.22687531]
[13.91422272 100.67984772]
[-1.03859854 99.49109650]
[-15.99141979 98.30234528]
[-30.94424248 97.11359406]
[-45.89706421 95.92485046]
[-60.84988403 94.73609924]
[-66.98964691 97.23473358]
[-72.62139130 96.37837219]
[-76.25579071 93.26501465]
[-91.16336823 91.60243988]
[-106.07093811 89.93986511]
[-120.99124146 88.39560699]
[-135.92332458 86.96977234]
[-150.60760498 94.27069855]
[-164.12109375 84.97996521]
[-162.56225586 68.65507507]
[-147.53469849 62.08967590]
[-134.49748230 72.03768921]
[-119.56539917 73.46353149]
[-112.60057068 70.96713257]
[-104.40837097 75.03228760]
[-89.50079346 76.69486237]
[-74.59321594 78.35743713]
[-59.66113663 79.78327942]
[-44.70831299 80.97202301]
[-29.75549316 82.16077423]
[-14.80267048 83.34952545]
[0.15015087 84.53827667]
[15.10297203 85.72702026]
[18.53444672 72.16860199]
[24.11605453 59.34474182]
[31.70048332 47.59390259]
[41.08755493 37.22622681]
[52.02951050 28.51535034]
[64.23756409 21.69118118]
[77.38949585 16.93383217]
[91.13819122 14.36886311]
[105.12078094 14.06397343]
[118.96822357 16.02720833]
[132.31501770 20.20675278]
[144.80892944 26.49229431]
[153.70254517 14.41324139]
[162.59617615 2.33418727]
[171.48979187 -9.74486637]
[180.38340759 -21.82392120]
[189.27702332 -33.90297318]
[198.17065430 -45.98202896]
[207.06427002 -58.06108093]
[215.86178589 -70.21031189]
[224.56263733 -82.42894745]
[233.16627502 -94.71623230]
[241.67218018 -107.07138062]
[243.96469116 -115.92474365]
[250.41233826 -119.55361938]
[259.11318970 -131.77226257]
[267.81402588 -143.99089050]
[276.51489258 -156.20953369]
[278.94757080 -165.02540588]
[285.45199585 -168.55152893]
[294.34561157 -180.63058472]
[303.23922729 -192.70964050]
[312.13284302 -204.78869629]
[321.02645874 -216.86773682]
[318.08123779 -234.10626221]
[328.30902100 -247.87350464]
[344.99362183 -249.94744873]
[353.69448853 -262.16610718]
[362.39532471 -274.38473511]
[371.09619141 -286.60336304]
[365.75064087 -299.31488037]
[367.37399292 -312.89971924]
[375.43563843 -323.81948853]
[387.74215698 -329.28332520]
[401.03317261 -327.96078491]
[409.92678833 -340.03985596]
[418.82040405 -352.11889648]
[427.71401978 -364.19796753]
[436.60763550 -376.27700806]
[432.74536133 -391.43011475]
[439.57345581 -405.49819946]
[453.86791992 -411.83874512]
[468.87933350 -407.45794678]
[477.51974487 -394.42425537]
[475.70947266 -378.89181519]
[464.30322266 -368.19454956]
[448.68670654 -367.38339233]
[439.79306030 -355.30435181]
[430.89944458 -343.22528076]
[422.00582886 -331.14624023]
[413.11221313 -319.06716919]
[418.58483887 -303.59567261]
[413.71218872 -287.75097656]
[400.22396851 -277.83123779]
[383.31481934 -277.90252686]
[374.61398315 -265.68386841]
[365.91311646 -253.46524048]
[357.21228027 -241.24659729]
[361.10632324 -228.95735168]
[357.14898682 -216.48396301]
[346.57247925 -208.45179749]
[333.10552979 -207.97412109]
[324.21191406 -195.89506531]
[315.31829834 -183.81600952]
[306.42465210 -171.73696899]
[297.53103638 -159.65791321]
[288.73352051 -147.50868225]
[280.03268433 -135.29003906]
[271.33181763 -123.07140350]
[262.63098145 -110.85276031]
[254.02732849 -98.56548309]
[245.52142334 -86.21033478]
[244.31661987 -78.91038513]
[236.78126526 -73.72809601]
[228.08041382 -61.50945663]
[226.75994873 -54.22954178]
[219.14332581 -49.16746140]
[210.24969482 -37.08840942]
[201.35607910 -25.00935555]
[192.46246338 -12.93030167]
[183.56884766 -0.85124755]
[174.67523193 11.22780609]
[165.78160095 23.30685997]
[156.88798523 35.38591385]
[165.28273010 43.88059616]
[172.42109680 53.45531845]
[178.16569519 63.92580414]
[182.40596008 75.09055328]
[185.06030273 86.73468781]
[186.07762146 98.63412476]
[185.43835449 110.55984497]
[183.15480042 122.28233337]
[179.27090454 133.57600403]
[173.86140442 144.22348022]
[167.03042603 154.01986694]
[158.90942383 162.77661133]
[168.18180847 174.56741333]
[177.45419312 186.35821533]
[193.14897156 189.68286133]
[200.20606995 204.09039307]
[193.21189880 218.52856445]
[177.53176880 221.92166138]
[165.19413757 211.66677856]
[165.66339111 195.63059998]
[156.39100647 183.83979797]
[147.11862183 172.04899597]
[137.41101074 178.03164673]
[126.94504547 182.70541382]
[115.89734650 185.97439575]
[104.45658875 187.76652527]
[92.82035828 188.03509521]
[81.19166565 186.75987244]
[79.29277802 201.63919067]
[77.39389038 216.51852417]
[86.79142761 228.94123840]
[84.65372467 244.00393677]
[72.75263977 252.88650513]
[70.85375214 267.76580811]
[68.95486450 282.64514160]
[67.05597687 297.52447510]
[65.15708923 312.40377808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[16 190]
[17 189]
[18 188]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[46 60]
[47 59]
[48 58]
[49 56]
[50 55]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[86 151]
[87 150]
[88 148]
[89 147]
[91 146]
[92 145]
[93 144]
[94 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
[103 134]
[104 133]
[105 132]
[106 131]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
