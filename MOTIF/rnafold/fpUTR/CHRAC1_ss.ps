%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGAUCGGGGGCGCGAGGCCUCACGGAGCUCGUAGUUUCCCGGACGGGCCGCUCCCGGCCUCGCGGCCUCGCCUCCCCACACUACAACUCCCACGGGGCAGCGGGCGCGGCUCCCCGUACCCACCAGCUGGCCGGGCAGGGCAGCCACUUCGCGGUCGGGCCCGCCGGCUGCGGGCACCCGCGCGACGGGCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[11.91571331 149.23593140]
[2.12598562 157.90673828]
[-9.17566299 164.47538757]
[-21.54484367 168.68615723]
[-34.49569702 170.37600708]
[-47.51996994 169.48085022]
[-60.10698700 166.03799438]
[-71.76363373 160.18464661]
[-82.03371429 152.15235901]
[-90.51577759 142.25790405]
[-96.87882996 130.89082336]
[-100.87522888 118.49805450]
[-115.79940033 120.00440216]
[-130.72357178 121.51074982]
[-145.64775085 123.01710510]
[-160.57191467 124.52345276]
[-173.52532959 133.60749817]
[-186.96525574 127.18742371]
[-201.88943481 128.69377136]
[-216.81359863 130.20011902]
[-231.73777771 131.70648193]
[-246.66195679 133.21282959]
[-261.58612061 134.71917725]
[-276.51028442 136.22552490]
[-291.43447876 137.73187256]
[-305.94808960 141.52064514]
[-319.70425415 147.50129700]
[-326.33175659 153.79681396]
[-333.71984863 153.46621704]
[-347.56692505 159.23327637]
[-361.41400146 165.00032043]
[-375.17013550 170.98097229]
[-388.83209229 177.17376709]
[-402.49407959 183.36657715]
[-416.15603638 189.55938721]
[-428.08599854 201.60562134]
[-442.96401978 193.47659302]
[-439.27133179 176.92968750]
[-422.34884644 175.89743042]
[-408.68685913 169.70462036]
[-395.02490234 163.51181030]
[-381.36294556 157.31900024]
[-378.87109375 153.23791504]
[-373.78607178 150.68226624]
[-367.18103027 151.15325928]
[-353.33398438 145.38621521]
[-339.48690796 139.61915588]
[-325.68487549 133.74513245]
[-311.92874146 127.76449585]
[-313.08825684 112.80937958]
[-327.60186768 109.02059937]
[-342.14437866 105.34423828]
[-356.71490479 101.78051758]
[-371.28540039 98.21679688]
[-385.85592651 94.65306854]
[-400.42645264 91.08934784]
[-416.00991821 96.19695282]
[-428.04275513 85.05502319]
[-424.14660645 69.12541962]
[-408.32949829 64.79515839]
[-396.86270142 76.51883698]
[-382.29220581 80.08255768]
[-367.72167969 83.64627838]
[-353.15118408 87.20999908]
[-338.58065796 90.77372742]
[-331.33181763 89.30827332]
[-323.81311035 94.50698090]
[-309.29946899 98.29575348]
[-295.49804688 109.33328247]
[-292.94082642 122.80770111]
[-278.01663208 121.30135345]
[-263.09246826 119.79500580]
[-248.16830444 118.28865051]
[-233.24412537 116.78230286]
[-218.31996155 115.27595520]
[-203.39578247 113.76959991]
[-188.47161865 112.26325226]
[-176.58567810 103.28694916]
[-162.07826233 109.59928131]
[-147.15409851 108.09293365]
[-132.22991943 106.58657837]
[-117.30575562 105.08023071]
[-102.38157654 103.57388306]
[-99.99073029 86.74386597]
[-93.36139679 71.07994843]
[-82.93190765 57.63103867]
[-69.39527130 47.29913330]
[-53.65309143 40.77886581]
[-36.75553131 38.51075745]
[-19.83126068 40.65149689]
[-4.01206207 47.06310654]
[9.64285660 57.32182312]
[20.21777725 70.74611664]
[27.00188446 86.44194031]
[41.80428314 84.01521301]
[56.60668182 81.58848572]
[71.40908051 79.16175079]
[82.61302948 69.18820953]
[86.73767090 54.76644516]
[90.86231232 40.34467697]
[94.98695374 25.92291260]
[99.11159515 11.50114632]
[103.23623657 -2.92061996]
[102.58741760 -12.03855515]
[107.53790283 -17.53272438]
[111.88523102 -31.88893318]
[116.23255920 -46.24514389]
[107.52989197 -59.23735428]
[109.26587677 -74.77828217]
[120.62084198 -85.52996826]
[136.23330688 -86.41580200]
[148.73156738 -77.01751709]
[152.21429443 -61.77269745]
[145.03707886 -47.87947845]
[130.58876038 -41.89781570]
[126.24143982 -27.54160500]
[121.89411163 -13.18539619]
[117.65799713 1.20402193]
[113.53335571 15.62578773]
[109.40871429 30.04755402]
[105.28407288 44.46931839]
[101.15943146 58.89108658]
[97.03479004 73.31285095]
[112.93305206 79.33524323]
[120.63845825 92.65947723]
[135.63800049 92.77554321]
[150.63755798 92.89160919]
[160.36268616 84.41265106]
[172.85745239 84.82175446]
[181.43780518 93.35412598]
[196.43376160 93.70230103]
[211.42971802 94.05047607]
[226.42567444 94.39865112]
[241.42163086 94.74682617]
[256.41760254 95.09500122]
[271.41354370 95.44317627]
[286.40951538 95.79135132]
[295.06790161 92.86051178]
[301.63433838 96.26273346]
[316.62313843 96.84293365]
[331.61190796 97.42313385]
[346.60067749 98.00332642]
[358.14688110 87.54755402]
[373.33935547 88.34947968]
[383.23617554 99.42144775]
[398.22494507 100.00164795]
[413.21371460 100.58184814]
[427.30285645 93.38412476]
[439.72131348 101.60792542]
[454.71008301 102.18812561]
[466.13760376 91.27082825]
[481.93566895 91.71514130]
[492.73153687 103.25744629]
[492.12020874 119.04990387]
[480.46441650 129.72312927]
[464.67929077 128.94490051]
[454.12988281 117.17689514]
[439.14111328 116.59670258]
[426.12408447 123.83592224]
[412.63351440 115.57061768]
[397.64474487 114.99042511]
[382.65597534 114.41022491]
[371.93289185 124.68401337]
[356.72387695 124.30913544]
[346.02047729 112.99210358]
[331.03170776 112.41190338]
[316.04293823 111.83170319]
[301.05413818 111.25151062]
[286.06134033 110.78730774]
[271.06536865 110.43913269]
[256.06942749 110.09095764]
[241.07345581 109.74278259]
[226.07749939 109.39460754]
[211.08154297 109.04643250]
[196.08558655 108.69825745]
[181.08963013 108.35008240]
[166.17214966 117.58805084]
[150.52148438 107.89116669]
[135.52194214 107.77509308]
[120.52238464 107.65902710]
[119.21501923 110.51722717]
[117.51206207 113.15890503]
[115.44857025 115.52967834]
[121.74690247 129.14331055]
[128.04524231 142.75694275]
[134.34358215 156.37057495]
[148.84608459 163.23036194]
[152.38465881 178.87831116]
[142.24479675 191.31063843]
[126.20494080 190.99032593]
[116.56949615 178.16310120]
[120.72994995 162.66889954]
[114.43161011 149.05528259]
[108.13327789 135.44165039]
[101.83493805 121.82801056]
[81.57572174 115.96377563]
[73.83580780 93.96414948]
[59.03341293 96.39088440]
[44.23101425 98.81761169]
[29.42861557 101.24433899]
[28.74180031 114.32637024]
[25.49174500 127.01104736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[18 77]
[19 76]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[26 49]
[27 48]
[29 47]
[30 46]
[31 45]
[32 42]
[33 41]
[34 40]
[35 39]
[50 68]
[51 67]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[94 200]
[95 199]
[96 198]
[97 197]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[105 117]
[106 116]
[107 115]
[125 180]
[126 179]
[127 178]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[135 171]
[136 170]
[137 169]
[139 168]
[140 167]
[141 166]
[142 165]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
[183 195]
[184 194]
[185 193]
[186 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
