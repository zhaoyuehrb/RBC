%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SRI)
} def

/sequence { (\
GCAGGGGGCGGAGAGGCCUGGCGCACAGGGCGAGGGCGGCUGCGGCGCAGUCUGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.054503908 ubox
1 22 0.028107562 ubox
1 24 0.061507335 ubox
1 31 0.003197546 ubox
1 37 0.010996560 ubox
1 43 0.003591036 ubox
1 46 0.003503625 ubox
1 55 0.994219404 ubox
1 58 0.011482978 ubox
2 8 0.054508668 ubox
2 20 0.008759476 ubox
2 21 0.028210905 ubox
2 23 0.061477498 ubox
2 30 0.003198543 ubox
2 36 0.010990287 ubox
2 42 0.003593827 ubox
2 45 0.003502152 ubox
2 54 0.994963420 ubox
2 57 0.011541906 ubox
3 19 0.008373522 ubox
3 41 0.003557517 ubox
3 53 0.994485971 ubox
4 18 0.007731516 ubox
4 19 0.003363196 ubox
4 40 0.003511195 ubox
4 52 0.993472191 ubox
4 53 0.014693938 ubox
5 17 0.007503593 ubox
5 18 0.004672244 ubox
5 19 0.036125874 ubox
5 51 0.873013114 ubox
5 52 0.029362215 ubox
6 17 0.004501154 ubox
6 18 0.033953362 ubox
6 19 0.697280114 ubox
6 51 0.021488251 ubox
6 52 0.003742056 ubox
7 17 0.025449500 ubox
7 18 0.733728489 ubox
7 40 0.003232011 ubox
7 51 0.003299638 ubox
8 17 0.734602183 ubox
8 37 0.009904501 ubox
8 43 0.052443080 ubox
8 46 0.547297941 ubox
8 48 0.310238019 ubox
8 51 0.003581730 ubox
8 55 0.017064096 ubox
8 58 0.005321515 ubox
9 16 0.734819562 ubox
9 20 0.011297642 ubox
9 36 0.009909883 ubox
9 38 0.007683450 ubox
9 42 0.052493075 ubox
9 44 0.453979262 ubox
9 45 0.391724812 ubox
9 47 0.303256501 ubox
9 50 0.003558037 ubox
9 54 0.017083835 ubox
9 57 0.005380566 ubox
10 18 0.009025732 ubox
10 19 0.011286154 ubox
10 37 0.007989314 ubox
10 41 0.052634507 ubox
10 43 0.612111330 ubox
10 46 0.259033016 ubox
10 53 0.016583732 ubox
11 17 0.009045428 ubox
11 18 0.011284120 ubox
11 40 0.053226248 ubox
11 52 0.015782573 ubox
12 19 0.003507897 ubox
12 41 0.627320464 ubox
12 51 0.013844977 ubox
13 18 0.003588230 ubox
13 40 0.633896899 ubox
14 41 0.119777350 ubox
14 53 0.006195997 ubox
15 40 0.118997691 ubox
15 41 0.161561281 ubox
15 52 0.006376640 ubox
16 31 0.013559371 ubox
16 37 0.654335271 ubox
16 40 0.162202963 ubox
16 46 0.003192408 ubox
16 48 0.004046104 ubox
16 51 0.006623894 ubox
17 29 0.022120828 ubox
17 30 0.012131980 ubox
17 35 0.120543700 ubox
17 36 0.646559673 ubox
17 39 0.160816466 ubox
17 45 0.003258974 ubox
17 47 0.003995322 ubox
17 50 0.006040228 ubox
18 28 0.024860820 ubox
18 29 0.010520656 ubox
18 34 0.159287358 ubox
18 35 0.638420382 ubox
18 36 0.028335130 ubox
18 38 0.156381069 ubox
18 39 0.003638948 ubox
18 44 0.003192754 ubox
18 50 0.025119654 ubox
19 27 0.029556893 ubox
19 28 0.008567233 ubox
19 33 0.191741319 ubox
19 34 0.626665590 ubox
19 35 0.056327251 ubox
19 38 0.005057135 ubox
19 47 0.017099327 ubox
19 49 0.045869933 ubox
20 26 0.030643107 ubox
20 31 0.003960755 ubox
20 37 0.020392091 ubox
20 46 0.054490556 ubox
20 48 0.049142090 ubox
21 31 0.246740732 ubox
21 37 0.024435476 ubox
21 46 0.012462527 ubox
21 48 0.726528946 ubox
22 30 0.246864422 ubox
22 32 0.626880749 ubox
22 36 0.023728531 ubox
22 38 0.009704389 ubox
22 44 0.055655372 ubox
22 45 0.009490750 ubox
22 47 0.729014372 ubox
23 31 0.631038227 ubox
23 37 0.011685628 ubox
23 43 0.056289849 ubox
23 46 0.729060483 ubox
23 55 0.007103168 ubox
24 30 0.630583334 ubox
24 36 0.011679632 ubox
24 42 0.056084121 ubox
24 45 0.728909261 ubox
24 54 0.007109552 ubox
25 41 0.049939366 ubox
25 53 0.006312507 ubox
26 42 0.610577888 ubox
27 41 0.609108647 ubox
28 40 0.603168153 ubox
28 41 0.375065043 ubox
29 40 0.386026263 ubox
29 41 0.131629372 ubox
30 37 0.599417292 ubox
30 40 0.133931231 ubox
30 43 0.008205973 ubox
30 55 0.005747680 ubox
30 58 0.005705468 ubox
31 36 0.599553432 ubox
31 38 0.400718592 ubox
31 39 0.132366779 ubox
31 42 0.008216572 ubox
31 44 0.005909346 ubox
31 54 0.005751711 ubox
31 57 0.005744225 ubox
32 37 0.394016213 ubox
32 41 0.005229412 ubox
32 43 0.006073115 ubox
32 52 0.004487983 ubox
32 53 0.003386565 ubox
33 41 0.006870943 ubox
33 51 0.005058782 ubox
34 40 0.007672926 ubox
34 41 0.005295641 ubox
35 40 0.005852553 ubox
36 43 0.014335613 ubox
36 46 0.004086021 ubox
36 48 0.017339420 ubox
36 55 0.036164956 ubox
37 42 0.014329259 ubox
37 44 0.009830039 ubox
37 45 0.003971811 ubox
37 47 0.017336530 ubox
37 54 0.036209944 ubox
38 43 0.012710599 ubox
38 46 0.013295289 ubox
38 52 0.031672082 ubox
38 53 0.030184679 ubox
39 46 0.035661274 ubox
39 51 0.040259893 ubox
39 52 0.029946782 ubox
39 58 0.086133373 ubox
40 45 0.038532606 ubox
40 50 0.051516512 ubox
40 57 0.087130844 ubox
41 49 0.051541515 ubox
41 56 0.087133586 ubox
42 48 0.051583155 ubox
42 55 0.087176893 ubox
43 47 0.051208291 ubox
43 54 0.087172136 ubox
44 52 0.024251360 ubox
44 53 0.083593579 ubox
45 51 0.025219238 ubox
45 52 0.082580313 ubox
45 55 0.003717329 ubox
45 58 0.007522653 ubox
46 50 0.043808912 ubox
46 54 0.003721762 ubox
46 57 0.007606437 ubox
47 55 0.011406260 ubox
48 54 0.011427560 ubox
49 53 0.009269488 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
