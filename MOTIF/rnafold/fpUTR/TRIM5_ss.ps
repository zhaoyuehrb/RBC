%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUAUCUUUCACUUUCCUGCCCUGAGUGUGAGCAAGAAUUUCCUGCGGUUCCUCUAGGAAAAUUCCUUUGUGCAGAUCAGGCCCGUGGAUUGGUGAGUGAAUCCUAACCACGUCUUCCCUGGCCUGUCUUCACUCUUCUCCCCAGAAUCACCACUUCUGCACUGGUGUCUGAAGGUGUAUUGAGUGAUUUUGUGGAGGGCAGAAGUAGGAAGUCUUUGGGACAAAACUGUAUUUACCUUGGGAUCUGUGAACA\
AGAGGAACCUCAGCAGCCAGGACAGGCAGGAGCAGUGGAAUAGCUACU\
) } def
/len { sequence length } bind def

/coor [
[91.45706177 735.98529053]
[91.45706177 720.98529053]
[91.45706177 705.98529053]
[77.97399902 699.60778809]
[68.55826569 687.96075439]
[65.11907196 673.32061768]
[68.39071655 658.57897949]
[77.77656555 646.67126465]
[91.45706177 639.99255371]
[91.45706177 624.99255371]
[91.45706177 609.99255371]
[91.45706177 594.99255371]
[91.45706177 579.99255371]
[91.45706177 564.99255371]
[91.45706177 549.99255371]
[91.37955475 534.99273682]
[91.22454834 519.99353027]
[91.06953430 504.99435425]
[90.91452789 489.99514771]
[90.75951385 474.99597168]
[90.60450745 459.99676514]
[90.44949341 444.99755859]
[90.29448700 429.99835205]
[89.82952118 415.00558472]
[89.05480194 400.02560425]
[88.28008270 385.04562378]
[77.08058167 375.29333496]
[76.08150482 360.11254883]
[86.38652039 348.43161011]
[85.61180115 333.45162964]
[84.75968933 318.47586060]
[83.83020782 303.50466919]
[82.90072632 288.53350830]
[69.04253387 282.79324341]
[57.79907227 292.72222900]
[46.55561066 302.65121460]
[41.33306122 317.58557129]
[26.67159081 320.21057129]
[15.42812920 330.13952637]
[7.55794859 345.15606689]
[-9.05042553 341.75045776]
[-10.37555695 324.84838867]
[5.49915218 318.89608765]
[16.74261284 308.96710205]
[21.16095352 294.74291992]
[36.62663269 291.40774536]
[47.87009430 281.47875977]
[59.11355591 271.54977417]
[65.90959930 258.17764282]
[67.30270386 243.24249268]
[68.69580841 228.30732727]
[70.08891296 213.37214661]
[71.48201752 198.43698120]
[72.87512207 183.50181580]
[74.26822662 168.56665039]
[75.66133118 153.63148499]
[77.05443573 138.69630432]
[65.60817719 129.00181580]
[51.10599899 132.83416748]
[36.60382462 136.66651917]
[22.10164833 140.49887085]
[10.85344505 152.43244934]
[-5.04097700 148.39518738]
[-9.23079777 132.54029846]
[2.59411073 121.17793274]
[18.26929665 125.99670410]
[32.77147293 122.16435242]
[47.27364731 118.33200073]
[61.77582169 114.49964905]
[61.11688995 104.79364777]
[62.78411865 95.61694336]
[66.48818207 87.49566650]
[53.84657288 79.42164612]
[41.20496368 71.34763336]
[25.40979958 70.44023895]
[18.84832573 57.06876755]
[6.20671606 48.99475479]
[-6.43489313 40.92073822]
[-15.30320072 38.95502472]
[-19.16482162 32.69739914]
[-31.72231865 24.49317741]
[-44.27981567 16.28895378]
[-56.83731461 8.08473206]
[-69.39481354 -0.11949058]
[-81.95230865 -8.32371330]
[-94.83811951 -16.00198936]
[-108.03022003 -23.14119911]
[-121.22232819 -30.28041077]
[-134.41442871 -37.41962051]
[-147.60653687 -44.55883408]
[-156.59373474 -45.87843704]
[-160.89752197 -51.84059525]
[-174.01515198 -59.11574936]
[-187.13278198 -66.39090729]
[-200.25041199 -73.66606140]
[-209.22348022 -75.07846832]
[-213.46543884 -81.08478546]
[-226.50717163 -88.49510956]
[-242.29406738 -85.63961792]
[-254.27418518 -96.30995941]
[-253.25741577 -112.32076263]
[-240.02374268 -121.38990784]
[-224.72489929 -116.56032562]
[-219.09684753 -101.53685760]
[-206.05509949 -94.12652588]
[-192.97525024 -86.78369141]
[-179.85762024 -79.50852966]
[-166.73999023 -72.23337555]
[-153.62237549 -64.95822144]
[-140.46733093 -57.75093842]
[-127.27522278 -50.61172867]
[-114.08312225 -43.47251511]
[-100.89101410 -36.33330536]
[-87.69890594 -29.19409561]
[-93.31432343 -43.10333633]
[-89.75937653 -57.67599487]
[-78.36969757 -67.43689728]
[-63.42456818 -68.71873474]
[-50.53909302 -61.03989029]
[-44.55454636 -47.28543091]
[-47.71940231 -32.62310791]
[-58.84458542 -22.56177902]
[-73.74808502 -20.88121033]
[-61.19058990 -12.67698765]
[-48.63309097 -4.47276545]
[-36.07559204 3.73145700]
[-23.51809692 11.93567944]
[-10.96059990 20.13990211]
[1.63912189 28.27912903]
[14.28073120 36.35314560]
[26.92234039 44.42715836]
[41.81329346 44.75704193]
[49.27898026 58.70602417]
[61.92058945 66.78003693]
[74.56219482 74.85405731]
[82.67954254 67.21540070]
[93.09292603 62.23784637]
[104.91864014 60.60727692]
[117.07096100 62.71346283]
[122.37888336 48.68399429]
[127.68680573 34.65452957]
[132.99473572 20.62506104]
[138.30265808 6.59559298]
[135.94932556 -9.04961109]
[147.68969727 -18.21546745]
[152.99761963 -32.24493408]
[158.30554199 -46.27440262]
[163.61346436 -60.30387115]
[168.92138672 -74.33333588]
[174.22930908 -88.36280823]
[179.53723145 -102.39227295]
[184.84515381 -116.42173767]
[190.15307617 -130.45120239]
[195.38842773 -144.50791931]
[200.55108643 -158.59149170]
[195.52903748 -166.46713257]
[194.67651367 -175.63110352]
[198.05751038 -184.04359436]
[204.80751038 -189.88932800]
[213.35040283 -191.96897888]
[218.94714355 -205.88575745]
[224.54386902 -219.80252075]
[230.14060974 -233.71929932]
[235.73735046 -247.63606262]
[241.33407593 -261.55285645]
[231.79573059 -273.59094238]
[229.57020569 -288.78771973]
[235.25616455 -303.05535889]
[247.32409668 -312.55593872]
[262.52780151 -314.73379517]
[276.77752686 -309.00317383]
[286.24023438 -296.90551758]
[288.37042236 -281.69506836]
[282.59515381 -267.46334839]
[270.46789551 -258.03863525]
[255.25085449 -255.95610046]
[249.65411377 -242.03933716]
[244.05738831 -228.12255859]
[238.46064758 -214.20579529]
[232.86390686 -200.28901672]
[227.26718140 -186.37223816]
[231.86267090 -166.22528076]
[214.63465881 -153.42883301]
[209.47200012 -139.34526062]
[210.11691284 -132.02035522]
[204.18254089 -125.14328766]
[198.87461853 -111.11381531]
[193.56669617 -97.08435059]
[188.25877380 -83.05488586]
[182.95085144 -69.02541351]
[177.64292908 -54.99594879]
[172.33500671 -40.96648026]
[167.02708435 -26.93701363]
[161.71916199 -12.90754604]
[164.45214844 1.73417687]
[152.33212280 11.90351582]
[147.02420044 25.93298340]
[141.71627808 39.96245193]
[136.40835571 53.99191666]
[131.10043335 68.02138519]
[139.94227600 80.13838959]
[154.92225647 79.36367035]
[169.90223694 78.58895111]
[184.88221741 77.81423187]
[199.86219788 77.03951263]
[187.38346863 68.71597290]
[181.31781006 54.99708557]
[183.55871582 40.16541672]
[193.40666199 28.85090637]
[207.78742981 24.58555031]
[222.21186829 28.70084572]
[232.17715454 39.91213989]
[234.57246399 54.71965408]
[228.65007019 68.50099182]
[216.25659180 76.95480347]
[231.24377441 77.57467651]
[246.23095703 78.19454956]
[261.21813965 78.81443024]
[275.32626343 71.65402985]
[287.72293091 79.91067505]
[302.71011353 80.53054810]
[317.69729614 81.15042114]
[332.69549561 81.38293457]
[347.69470215 81.22792053]
[362.69390869 81.07291412]
[376.52743530 72.26578522]
[390.94439697 80.08134460]
[391.11386108 96.47961426]
[376.86151123 104.59146118]
[362.84890747 96.07211304]
[347.84970093 96.22711945]
[332.85049438 96.38213348]
[341.80804443 108.41384888]
[338.08895874 122.94548035]
[324.45272827 129.19474792]
[311.01727295 122.52476501]
[307.75152588 107.88458252]
[317.07742310 96.13761139]
[302.09024048 95.51773071]
[287.10305786 94.89785767]
[274.06692505 102.10259247]
[260.59826660 93.80161285]
[245.61108398 93.18173981]
[230.62390137 92.56186676]
[215.63670349 91.94198608]
[200.63691711 92.01949310]
[185.65693665 92.79421234]
[170.67695618 93.56893158]
[155.69697571 94.34365082]
[140.71699524 95.11837006]
[140.20880127 107.95139313]
[135.75737000 119.99130249]
[127.80335999 130.05802917]
[117.13054657 137.16621399]
[104.78854370 140.62171936]
[91.98960114 140.08941650]
[90.59649658 155.02458191]
[89.20339203 169.95974731]
[87.81028748 184.89491272]
[86.41718292 199.83009338]
[85.02407837 214.76525879]
[83.63097382 229.70042419]
[82.23786926 244.63558960]
[80.84476471 259.57077026]
[97.87190247 287.60400391]
[98.80138397 302.57519531]
[99.73085785 317.54635620]
[103.37043762 325.86889648]
[100.59178162 332.67691040]
[101.36650085 347.65689087]
[112.82151031 358.21246338]
[113.39379120 373.41534424]
[103.26006317 384.27090454]
[104.03478241 399.25088501]
[104.80950165 414.23086548]
[107.22914886 417.70132446]
[108.33746338 421.38891602]
[108.22370148 424.86346436]
[107.10514069 427.76596069]
[105.29368591 429.84335327]
[105.44869232 444.84255981]
[105.60370636 459.84176636]
[105.75871277 474.84094238]
[105.91372681 489.84014893]
[106.06873322 504.83935547]
[106.22374725 519.83856201]
[106.37875366 534.83776855]
[109.58363342 543.33715820]
[106.45706177 549.99255371]
[106.45706177 564.99255371]
[106.45706177 579.99255371]
[106.45706177 594.99255371]
[106.45706177 609.99255371]
[106.45706177 624.99255371]
[106.45706177 639.99255371]
[120.13755798 646.67126465]
[129.52340698 658.57897949]
[132.79504395 673.32061768]
[129.35586548 687.96075439]
[119.94012451 699.60778809]
[106.45706177 705.98529053]
[106.45706177 720.98529053]
[106.45706177 735.98529053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 303]
[2 302]
[3 301]
[9 295]
[10 294]
[11 293]
[12 292]
[13 291]
[14 290]
[15 289]
[16 287]
[17 286]
[18 285]
[19 284]
[20 283]
[21 282]
[22 281]
[23 280]
[24 275]
[25 274]
[26 273]
[29 270]
[30 269]
[31 267]
[32 266]
[33 265]
[34 48]
[35 47]
[36 46]
[38 44]
[39 43]
[49 264]
[50 263]
[51 262]
[52 261]
[53 260]
[54 259]
[55 258]
[56 257]
[57 256]
[58 69]
[59 68]
[60 67]
[61 66]
[72 135]
[73 134]
[74 133]
[76 131]
[77 130]
[78 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 114]
[87 113]
[88 112]
[89 111]
[90 110]
[92 109]
[93 108]
[94 107]
[95 106]
[97 105]
[98 104]
[139 200]
[140 199]
[141 198]
[142 197]
[143 196]
[145 194]
[146 193]
[147 192]
[148 191]
[149 190]
[150 189]
[151 188]
[152 187]
[153 186]
[154 184]
[155 183]
[160 181]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
[201 250]
[202 249]
[203 248]
[204 247]
[205 246]
[215 245]
[216 244]
[217 243]
[218 242]
[220 240]
[221 239]
[222 238]
[223 232]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
