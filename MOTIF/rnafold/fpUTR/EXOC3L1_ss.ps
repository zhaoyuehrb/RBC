%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUGUUGAUGGCCUUGGGGAGGGAGGAGCCUCGGUGGGAAGAAGGGGCUUCUGGGUGGGGAGUGGGAGAGAGACUUCCUUGGGGAGAGGAAUUCAGCUGCACGCUGGAGUCAGCUGGAGUUGCCCAGGCCCUGUGAGCAAGUGGCAGGCGUGCCCAGCUGCAUUGGGGAGAGGGCUGUUCUCAAGGCCAAGGUCAUUUUUGGAGGGAGAACUGGACGCCUGAUCAAAUCUGGCCCACA\
) } def
/len { sequence length } bind def

/coor [
[122.03073883 406.76861572]
[107.70592499 402.31893921]
[95.68020630 393.35333252]
[87.32607269 380.89505005]
[83.59697723 366.36599731]
[84.91852570 351.42431641]
[91.13988495 337.77532959]
[101.55101013 326.97680664]
[114.96369171 320.26113892]
[129.84713745 318.39483643]
[144.50270081 321.59085083]
[157.25962830 329.48614502]
[150.15649414 316.27456665]
[143.05337524 303.06298828]
[135.95024109 289.85144043]
[128.84710693 276.63986206]
[121.74398041 263.42828369]
[114.64084625 250.21672058]
[107.53771973 237.00515747]
[100.43458557 223.79357910]
[93.33145905 210.58201599]
[86.22832489 197.37045288]
[79.12519836 184.15887451]
[66.28350830 176.61300659]
[66.56333923 160.79426575]
[59.46020889 147.58270264]
[45.06781387 143.35670471]
[31.94956589 150.63075256]
[18.83131981 157.90478516]
[5.71307373 165.17881775]
[-7.40517282 172.45285034]
[-20.52341843 179.72689819]
[-33.64166641 187.00093079]
[-46.75991058 194.27496338]
[-59.87815857 201.54901123]
[-59.46289444 216.84887695]
[-66.21581268 230.58410645]
[-78.58513641 239.59844971]
[-93.72849274 241.82046509]
[-108.16604614 236.73956299]
[-118.58015442 225.52328491]
[-122.57772827 210.74903870]
[-119.24015045 195.81187439]
[-109.33438873 184.14421082]
[-95.13669586 178.42720032]
[-79.90960693 179.97457886]
[-67.15219879 188.43075562]
[-54.03395081 181.15672302]
[-40.91570282 173.88269043]
[-27.79745674 166.60864258]
[-14.67920971 159.33460999]
[-1.56096280 152.06057739]
[11.55728340 144.78654480]
[24.67552948 137.51249695]
[37.79377747 130.23846436]
[36.91949844 122.78959656]
[22.02173424 124.53792572]
[20.27363777 109.64012909]
[35.17094040 107.89186096]
[34.29666138 100.44299316]
[19.85062218 96.40419006]
[5.40458059 92.36539459]
[-9.04146099 88.32659912]
[-23.48750114 84.28779602]
[-37.93354416 80.24900055]
[-52.37958527 76.21019745]
[-63.83808136 86.54008484]
[-79.06600952 89.01264954]
[-93.20420837 82.83891296]
[-101.74121857 69.98889160]
[-101.95291138 54.56297684]
[-93.77173615 41.48352814]
[-79.80828094 34.92414856]
[-64.51823425 36.97790909]
[-52.78058624 46.98945999]
[-48.34078598 61.76416016]
[-33.89474487 65.80295563]
[-19.44870377 69.84175873]
[-5.00266218 73.88055420]
[9.44337940 77.91935730]
[23.88941956 81.95815277]
[38.33546066 85.99694824]
[48.30470657 74.78917694]
[42.60945892 60.91242981]
[36.91421509 47.03567886]
[31.21896935 33.15892792]
[18.82137299 23.32988167]
[21.14694977 8.61794853]
[15.45170403 -5.25880098]
[7.33203697 -6.98670387]
[0.62551993 -11.71844196]
[-3.62655640 -18.62903214]
[-4.79984188 -26.56295013]
[-2.77770495 -34.22711945]
[2.04167461 -40.40162659]
[-2.92563772 -54.55527878]
[-7.89295006 -68.70893097]
[-12.86026287 -82.86257935]
[-17.82757378 -97.01622772]
[-22.79488754 -111.16987610]
[-27.76219940 -125.32352448]
[-32.72951126 -139.47717285]
[-38.51236343 -146.52043152]
[-37.66814041 -153.84692383]
[-42.45129776 -168.06385803]
[-56.71645737 -174.86686707]
[-61.91417313 -189.79199219]
[-54.96073532 -203.98442078]
[-39.98149490 -209.02404785]
[-25.86336708 -201.92094421]
[-20.98238945 -186.88926697]
[-28.23435974 -172.84703064]
[-23.45120049 -158.63008118]
[-18.57586098 -144.44448853]
[-13.60854912 -130.29084778]
[-8.64123726 -116.13719177]
[-3.67392468 -101.98354340]
[1.29338765 -87.82988739]
[6.26069975 -73.67623901]
[11.22801208 -59.52259064]
[16.19532394 -45.36894226]
[33.89561844 -32.90219116]
[29.32845306 -10.95404625]
[35.02370071 2.92270327]
[47.01393509 11.75919247]
[45.09571838 27.46368408]
[50.79096603 41.34043503]
[56.48620987 55.21718216]
[62.18145370 69.09393311]
[82.75042725 60.02819443]
[102.70601654 61.86679840]
[117.18290710 71.91644287]
[127.72043610 61.24122238]
[138.25796509 50.56599808]
[142.44612122 35.30919647]
[156.89355469 31.68690300]
[167.43109131 21.01167870]
[177.96862793 10.33645439]
[188.43664551 -0.40694278]
[198.83470154 -11.21805954]
[209.23277283 -22.02917671]
[206.69505310 -33.61823273]
[210.02314758 -44.88071060]
[218.28231812 -53.06043243]
[229.34616089 -56.21383667]
[240.44326782 -53.67098618]
[251.11849976 -64.20851898]
[261.79373169 -74.74604797]
[272.46893311 -85.28358459]
[276.29199219 -101.23088074]
[292.08908081 -105.63363647]
[303.60949707 -93.96266174]
[299.00207520 -78.22406769]
[283.00646973 -74.60836029]
[272.33126831 -64.07083130]
[261.65603638 -53.53329468]
[250.98080444 -42.99576187]
[251.95069885 -24.70031738]
[239.00199890 -11.29047680]
[220.04388428 -11.63111115]
[209.64582825 -0.81999463]
[199.24775696 9.99112225]
[196.88128662 16.97610283]
[188.64384460 20.87398720]
[178.10630798 31.54920959]
[167.56878662 42.22443390]
[164.13433838 56.71767044]
[148.93319702 61.10352707]
[138.39566040 71.77875519]
[127.85813141 82.45397949]
[134.06201172 92.33898926]
[136.63899231 104.40319824]
[134.84194946 117.28153229]
[128.44531250 129.36332703]
[117.82063293 138.99244690]
[103.93585205 144.68844604]
[88.27317047 145.35978699]
[72.67177582 140.47956848]
[79.77490997 153.69113159]
[93.12465668 162.18199158]
[92.33676910 177.05574036]
[99.43989563 190.26731873]
[106.54302979 203.47888184]
[113.64615631 216.69046021]
[120.74928284 229.90202332]
[127.85241699 243.11358643]
[134.95555115 256.32516479]
[142.05867004 269.53671265]
[149.16180420 282.74829102]
[156.26493835 295.95986938]
[163.36807251 309.17144775]
[170.47119141 322.38299561]
[179.96571350 328.64801025]
[181.37773132 338.64859009]
[190.90303040 350.23602295]
[200.42834473 361.82345581]
[209.95364380 373.41088867]
[219.47894287 384.99832153]
[234.96470642 386.68032837]
[244.45964050 398.56732178]
[242.76066589 413.32028198]
[252.28596497 424.90771484]
[261.81127930 436.49511719]
[271.33657837 448.08255005]
[280.86187744 459.66998291]
[298.25274658 465.75219727]
[300.42547607 483.17507935]
[310.10040283 494.63787842]
[319.77532959 506.10067749]
[334.70568848 502.73275757]
[349.48800659 506.70028687]
[360.72543335 517.09161377]
[365.83566284 531.51879883]
[363.64443970 546.66662598]
[354.65524292 559.05426025]
[340.93377686 565.83508301]
[325.63308716 565.45086670]
[312.26916504 557.98999023]
[303.91299438 545.16687012]
[302.48471069 529.92816162]
[308.31253052 515.77557373]
[298.63760376 504.31280518]
[288.96267700 492.85000610]
[276.95223999 491.52343750]
[268.79736328 482.07101440]
[269.27444458 469.19531250]
[259.74914551 457.60787964]
[250.22383118 446.02044678]
[240.69853210 434.43301392]
[231.17323303 422.84558105]
[216.37036133 421.65777588]
[206.54528809 410.04217529]
[207.89151001 394.52362061]
[198.36621094 382.93618774]
[188.84091187 371.34875488]
[179.31559753 359.76132202]
[169.79029846 348.17388916]
[172.25077820 362.97070312]
[169.64384460 377.74243164]
[162.26704407 390.80316162]
[150.96226501 400.66229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[25 179]
[26 178]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[83 129]
[84 128]
[85 127]
[86 126]
[88 124]
[89 123]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[104 113]
[105 112]
[132 170]
[133 169]
[134 168]
[136 166]
[137 165]
[138 164]
[139 162]
[140 161]
[141 160]
[146 157]
[147 156]
[148 155]
[149 154]
[194 237]
[195 236]
[196 235]
[197 234]
[198 233]
[201 230]
[202 229]
[203 228]
[204 227]
[205 226]
[207 223]
[208 222]
[209 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
