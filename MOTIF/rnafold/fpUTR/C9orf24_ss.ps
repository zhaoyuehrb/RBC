%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGCAGUGCCCAUCCUGGAGGGGGCAUCAGUGUGGGGUGGGAGCAGGAAGGCUGUUGGGGAAGGAAGCUGAGAGAUCCUCUGCAGGAGGGGAUUAUAGCAGCUAAGGGCACCUGCCAGGCUGGAGGUGUGGCCUGUCUAGGGGAAGGGUGGUCACUGAUGUCCAGCAGGAGCCCUUGACAGGUAGAGCCCACCACGGCAUCUCCAAGACCACACC\
) } def
/len { sequence length } bind def

/coor [
[-69.05525970 510.97131348]
[-88.41061401 521.87054443]
[-92.24092102 536.37322998]
[-96.07122040 550.87597656]
[-99.90151978 565.37872314]
[-103.73181915 579.88140869]
[-107.56211853 594.38415527]
[-105.76079559 611.24212646]
[-121.46131134 617.63977051]
[-131.95529175 604.32391357]
[-122.06483459 590.55383301]
[-118.23453522 576.05108643]
[-114.40423584 561.54840088]
[-110.57393646 547.04565430]
[-106.74363708 532.54296875]
[-102.91333771 518.04022217]
[-116.50036621 511.68472290]
[-125.17729950 523.92034912]
[-133.85423279 536.15600586]
[-134.84156799 552.52539062]
[-149.63049316 559.61199951]
[-163.00743103 550.12567139]
[-161.21133423 533.82519531]
[-146.08987427 527.47906494]
[-137.41293335 515.24340820]
[-128.73600769 503.00778198]
[-132.64521790 490.61068726]
[-132.28341675 477.89987183]
[-127.87511444 466.27447510]
[-120.08022308 456.95410156]
[-109.90233612 450.85095215]
[-98.56239319 448.48196411]
[-87.35334015 449.92868042]
[-80.90052795 436.38757324]
[-74.44771576 422.84649658]
[-67.99490356 409.30538940]
[-61.54209518 395.76428223]
[-55.08928299 382.22320557]
[-63.64255905 370.02865601]
[-64.95223999 355.09075928]
[-58.56684113 341.41256714]
[-46.11051178 332.70986938]
[-30.87119484 331.40200806]
[-24.41838264 317.86093140]
[-17.96557236 304.31982422]
[-11.51276207 290.77874756]
[-16.94959831 284.11746216]
[-19.94719696 276.01223755]
[-20.15508652 267.32955933]
[-17.52264786 259.00735474]
[-12.30761909 251.95387268]
[-5.05114222 246.94833374]
[3.47830129 244.55506897]
[12.36623764 245.05989075]
[19.77287102 232.01605225]
[27.17950439 218.97221375]
[34.58613586 205.92837524]
[41.99277115 192.88453674]
[49.21153259 179.73577881]
[56.24093628 166.48484802]
[63.27033997 153.23390198]
[70.29974365 139.98295593]
[61.46439362 131.55549622]
[54.94492340 121.23162842]
[51.13313675 109.63181305]
[50.25811005 97.45314026]
[52.37242889 85.42753601]
[57.34903336 74.27768707]
[64.88883972 64.67368317]
[56.03728104 52.56377411]
[47.18572235 40.45386505]
[38.33416367 28.34395599]
[29.48260498 16.23404694]
[12.56767368 16.51151085]
[-1.04320085 6.74734449]
[-6.09936905 -9.04785347]
[-0.79612452 -24.58626747]
[-9.82048512 -36.56795883]
[-18.84484673 -48.54964828]
[-27.86920738 -60.53133774]
[-36.89356995 -72.51303101]
[-45.91793060 -84.49472046]
[-54.94229126 -96.47640991]
[-63.96665192 -108.45809937]
[-79.58865356 -112.10948944]
[-86.34362030 -126.66111755]
[-79.04972076 -140.95022583]
[-63.30221176 -144.01542664]
[-51.18123245 -133.50537109]
[-51.98496246 -117.48246002]
[-42.96059799 -105.50077057]
[-33.93623734 -93.51908112]
[-24.91187859 -81.53739166]
[-15.88751698 -69.55570221]
[-6.86315584 -57.57400894]
[2.16120505 -45.59231949]
[11.18556595 -33.61062622]
[24.45206833 -35.07839584]
[36.81118011 -29.75791359]
[44.99376678 -18.94011688]
[46.77817154 -5.38493538]
[41.59251404 7.38248730]
[50.44407272 19.49239731]
[59.29563141 31.60230637]
[68.14719391 43.71221542]
[76.99874878 55.82212448]
[83.13669586 53.13454437]
[89.57983398 51.29515076]
[96.21156311 50.33723831]
[102.91185760 50.27814102]
[109.55945587 51.11893082]
[114.62229919 36.99916840]
[119.68514252 22.87940979]
[124.74798584 8.75965023]
[129.81082153 -5.36010933]
[134.87367249 -19.47986984]
[134.82382202 -28.60808372]
[140.11174011 -33.76497650]
[145.37660217 -47.81065750]
[150.64146423 -61.85633850]
[150.53919983 -78.80997467]
[166.80197144 -83.60148621]
[175.90820312 -69.30068970]
[164.68714905 -56.59147263]
[159.42228699 -42.54579163]
[154.15742493 -28.50010872]
[148.99343872 -14.41702557]
[143.93058777 -0.29726565]
[138.86775208 13.82249451]
[133.80490112 27.94225311]
[128.74206543 42.06201553]
[123.67921448 56.18177414]
[138.90887451 68.90592957]
[147.96130371 86.56662750]
[162.84992981 84.74214935]
[177.73855591 82.91767120]
[192.62719727 81.09318542]
[207.51582336 79.26870728]
[222.40444946 77.44422913]
[237.29307556 75.61974335]
[250.04968262 66.26135254]
[263.62356567 72.39315796]
[278.51220703 70.56867981]
[293.40081787 68.74420166]
[308.28945923 66.91971588]
[312.49145508 51.39745331]
[322.30578613 38.70737457]
[336.20565796 30.77528763]
[352.04711914 28.79056168]
[367.39990234 33.02786255]
[379.92004395 42.80958176]
[387.70788574 56.61399841]
[402.56878662 54.57613373]
[417.42971802 52.53826904]
[430.05078125 42.99784851]
[443.71121216 48.93431091]
[458.57214355 46.89644623]
[471.18981934 36.42141342]
[486.47433472 42.36412430]
[488.70227051 58.61122513]
[475.58175659 68.44908905]
[460.61001587 61.75737000]
[445.74908447 63.79523849]
[434.19097900 73.18989563]
[419.46759033 67.39919281]
[404.60665894 69.43705750]
[389.74572754 71.47492218]
[386.70706177 85.17240143]
[379.16018677 97.03569031]
[367.99407959 105.62939453]
[354.53704834 109.90546417]
[340.39880371 109.33104706]
[327.27774048 103.95474243]
[316.75714111 94.40324402]
[310.11392212 81.80834961]
[295.22531128 83.63282776]
[280.33666992 85.45730591]
[265.44802856 87.28179169]
[253.75637817 96.50968170]
[239.11755371 90.50837708]
[224.22892761 92.33285522]
[209.34030151 94.15733337]
[194.45167542 95.98181915]
[179.56304932 97.80629730]
[164.67440796 99.63077545]
[149.78578186 101.45526123]
[145.78067017 119.61817932]
[135.39155579 135.04539490]
[120.06719971 145.58563232]
[101.94451904 149.76907349]
[83.55068970 147.01235962]
[76.52128601 160.26330566]
[69.49187469 173.51425171]
[62.46247482 186.76519775]
[62.31775284 193.36549377]
[59.31550980 198.18199158]
[55.03660965 200.29116821]
[47.62997818 213.33500671]
[40.22334290 226.37884521]
[32.81671143 239.42268372]
[25.41007805 252.46652222]
[32.75330734 273.01116943]
[22.62534142 292.01324463]
[2.02833223 297.23153687]
[-4.42447853 310.77264404]
[-10.87728882 324.31375122]
[-17.33009911 337.85482788]
[-8.74700165 350.51492310]
[-7.66035652 365.67129517]
[-14.26211548 379.24639893]
[-26.68923378 387.63821411]
[-41.54819107 388.67599487]
[-48.00099945 402.21710205]
[-54.45381165 415.75820923]
[-60.90662003 429.29928589]
[-67.35942841 442.84039307]
[-73.81224060 456.38146973]
[-61.37384415 471.59979248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[17 26]
[18 25]
[19 24]
[33 217]
[34 216]
[35 215]
[36 214]
[37 213]
[38 212]
[43 207]
[44 206]
[45 205]
[46 204]
[54 201]
[55 200]
[56 199]
[57 198]
[58 197]
[59 194]
[60 193]
[61 192]
[62 191]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[118 126]
[119 125]
[120 124]
[134 186]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[142 178]
[143 177]
[144 176]
[145 175]
[152 167]
[153 166]
[154 165]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
