%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAAGCAGUUGGGCCGAACGAAGCGUGCGCGCUUUGGUAACCGGCUAGAAAUCCCGCACGCGCGCCUGCCUCCUCUCCCCAGGCCUGAGCUGCCCCUCCCACUGCCUUUCCUUCUUCCCGCGAGUCAGAAGCUUCGCGAGGGCCCAGAGAGGCGGUGGGGUGGGCGACCCUACGCCAGCUCCGGGCGGGAGAAAGCCCACCCUCUCCCGCGCCCCAGGAAACCGCCGGCGUUCGGCGCUGCGCAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[82.40995789 364.53341675]
[76.08333588 350.71160889]
[75.53267670 335.52066040]
[80.84194183 321.27703857]
[91.20151520 310.15286255]
[105.03163147 303.84442139]
[104.46852875 288.85498047]
[103.90542603 273.86557007]
[103.34233093 258.87612915]
[102.77922821 243.88671875]
[100.48097992 241.24488831]
[99.33484650 237.36770630]
[99.90361023 232.80265808]
[102.48705292 228.32626343]
[102.48705292 213.32626343]
[102.48705292 198.32626343]
[102.48705292 183.32626343]
[102.48705292 168.32626343]
[102.48705292 153.32626343]
[102.48705292 138.32626343]
[88.76064301 137.85829163]
[75.70365906 132.49771118]
[65.04827118 122.67115021]
[58.30410004 109.41281128]
[45.10025406 116.53028870]
[31.89640999 123.64776611]
[18.69256401 130.76524353]
[5.48871803 137.88272095]
[-7.71512747 145.00018311]
[-20.91897392 152.11766052]
[-22.81762505 170.17111206]
[-35.08048248 183.34141541]
[-52.64237213 186.46661377]
[-68.41471100 178.47772217]
[-81.43627167 185.92346191]
[-94.45782471 193.36920166]
[-107.47938538 200.81494141]
[-120.50094604 208.26066589]
[-133.52250671 215.70640564]
[-139.10971069 230.74511719]
[-154.39537048 235.61625671]
[-167.65364075 226.58309937]
[-168.71391296 210.57511902]
[-156.76283264 199.87226868]
[-140.96824646 202.68484497]
[-127.94668579 195.23912048]
[-114.92512512 187.79338074]
[-101.90356445 180.34764099]
[-88.88200378 172.90190125]
[-75.86045074 165.45616150]
[-76.34745026 153.35527039]
[-71.62468719 142.12516785]
[-62.52867508 133.91276550]
[-50.73812485 130.31610107]
[-38.46432877 132.07369995]
[-28.03644943 138.91381836]
[-14.83260250 131.79634094]
[-1.62875712 124.67887115]
[11.57508850 117.56139374]
[24.77893448 110.44391632]
[37.98278046 103.32644653]
[51.18662643 96.20896912]
[50.15484619 81.24449158]
[36.09910965 76.00653076]
[21.91666985 71.12202454]
[7.61641598 66.59403229]
[-6.68383884 62.06604004]
[-20.98409462 57.53804779]
[-35.28434753 53.01005554]
[-46.11137009 63.82828903]
[-60.72914886 68.36471558]
[-75.77862549 65.57689667]
[-87.80153656 56.10546112]
[-94.03510284 42.12686539]
[-93.04691315 26.85329056]
[-85.06402588 13.79449463]
[-71.92086029 5.95129251]
[-56.63761902 5.12599468]
[-42.72628021 11.50824833]
[-33.38356018 23.63145828]
[-30.75635719 38.70980072]
[-16.45610237 43.23779297]
[-2.15584731 47.76578522]
[12.14440727 52.29377365]
[26.44466209 56.82176590]
[28.97563553 55.67484283]
[32.10772705 55.44817734]
[35.49741745 56.37355804]
[38.72438431 58.55597305]
[41.33707428 61.95079422]
[55.39281082 67.18875885]
[68.12567902 59.25943756]
[69.62512207 44.33457184]
[71.12457275 29.40970421]
[72.62402344 14.48483753]
[74.12346649 -0.44002926]
[67.80443573 -14.94452381]
[76.77523804 -26.83460045]
[78.27468872 -41.75946808]
[79.77413177 -56.68433380]
[81.27358246 -71.60919952]
[82.77303314 -86.53407288]
[84.27247620 -101.45893860]
[85.77192688 -116.38380432]
[87.27137756 -131.30867004]
[88.77082062 -146.23353577]
[90.27027130 -161.15840149]
[91.76972198 -176.08326721]
[93.26916504 -191.00813293]
[94.76861572 -205.93299866]
[96.26806641 -220.85787964]
[84.51591492 -228.41799927]
[77.19773865 -240.24464417]
[75.69074249 -254.00398254]
[80.23190308 -267.00946045]
[89.88285828 -276.74630737]
[102.72313690 -281.35784912]
[104.40927124 -296.26278687]
[106.09539795 -311.16772461]
[107.68821716 -326.08291626]
[109.18766785 -341.00778198]
[110.68711853 -355.93264771]
[112.18656158 -370.85751343]
[113.68601227 -385.78237915]
[115.18546295 -400.70724487]
[103.51728058 -410.93627930]
[100.12285614 -426.07754517]
[106.30740356 -440.30886841]
[119.69283295 -448.15808105]
[135.13218689 -446.60693359]
[146.68870544 -436.25192261]
[149.91868591 -421.07473755]
[143.58012390 -406.91131592]
[130.11032104 -399.20779419]
[128.61088562 -384.28292847]
[127.11142731 -369.35806274]
[125.61198425 -354.43319702]
[124.11253357 -339.50833130]
[122.61308289 -324.58346558]
[125.06516266 -317.63214111]
[121.00032806 -309.48159790]
[119.31420135 -294.57666016]
[117.62806702 -279.67172241]
[130.86331177 -270.38058472]
[137.63922119 -255.59436035]
[136.01699829 -239.31614685]
[126.34576416 -226.00588989]
[111.19293213 -219.35842896]
[109.69348145 -204.43356323]
[108.19403076 -189.50869751]
[106.69458771 -174.58381653]
[105.19513702 -159.65895081]
[103.69568634 -144.73408508]
[102.19624329 -129.80921936]
[100.69679260 -114.88435364]
[99.19734192 -99.95948792]
[97.69789886 -85.03462219]
[96.19844818 -70.10975647]
[94.69899750 -55.18488693]
[93.19955444 -40.26002121]
[91.70010376 -25.33515358]
[98.12638855 -11.89818478]
[89.04833984 1.05941892]
[87.54888916 15.98428631]
[86.04943848 30.90915298]
[84.54999542 45.83401871]
[83.05054474 60.75888824]
[95.46261597 58.04174805]
[107.96134949 59.10719299]
[119.43428802 63.76433563]
[128.88870239 71.50691986]
[135.53742981 81.56658173]
[138.86401367 92.98838043]
[138.66197205 104.72109985]
[135.04510498 115.71392822]
[149.10084534 120.95189667]
[163.15658569 126.18985748]
[178.78987122 123.75861359]
[188.01409912 135.45318604]
[202.06983948 140.69114685]
[216.25227356 145.57565308]
[230.55253601 150.10363770]
[244.85278320 154.63163757]
[259.23553467 158.89036560]
[273.69567871 162.87832642]
[288.18051147 166.77572632]
[302.68945312 170.58239746]
[317.19839478 174.38906860]
[331.70733643 178.19573975]
[346.21624756 182.00241089]
[360.72518921 185.80908203]
[375.23413086 189.61575317]
[389.74307251 193.42242432]
[400.48947144 182.44927979]
[415.28704834 178.33489990]
[430.15527344 182.18606567]
[441.09466553 192.96682739]
[445.16265869 207.77720642]
[441.26489258 222.63328552]
[430.44989014 233.53884888]
[415.62686157 237.56037903]
[400.78305054 233.61607361]
[389.91143799 222.76695251]
[385.93640137 207.93136597]
[371.42745972 204.12469482]
[356.91851807 200.31802368]
[342.40957642 196.51135254]
[327.90066528 192.70468140]
[313.39172363 188.89801025]
[298.88278198 185.09133911]
[284.37384033 181.28466797]
[277.12533569 182.62365723]
[269.70770264 177.33848572]
[255.24755859 173.35052490]
[252.03521729 174.74407959]
[247.99291992 174.66635132]
[243.81251526 172.74609375]
[240.32479858 168.93188477]
[226.02453613 164.40390015]
[211.72428894 159.87590027]
[209.19331360 161.02282715]
[206.06121826 161.24949646]
[202.67152405 160.32411194]
[199.44456482 158.14170837]
[196.83187866 154.74688721]
[182.77613831 149.50891113]
[168.14820862 152.31481934]
[157.91862488 140.24559021]
[143.86288452 135.00762939]
[129.80714417 129.76966858]
[117.48705292 138.32626343]
[117.48705292 153.32626343]
[117.48705292 168.32626343]
[117.48705292 183.32626343]
[117.48705292 198.32626343]
[117.48705292 213.32626343]
[117.48705292 228.32626343]
[117.76865387 243.32360840]
[118.33175659 258.31304932]
[118.89485931 273.30245972]
[119.45795441 288.29190063]
[120.02105713 303.28131104]
[134.28549194 308.53433228]
[145.45048523 318.84991455]
[151.81344604 332.65502930]
[152.40408325 347.84451294]
[147.13230896 362.10202026]
[136.80203247 373.25341797]
[122.98856354 379.59823608]
[107.79833984 380.16885376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 242]
[7 241]
[8 240]
[9 239]
[10 238]
[14 237]
[15 236]
[16 235]
[17 234]
[18 233]
[19 232]
[20 231]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[63 91]
[64 90]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[92 167]
[93 166]
[94 165]
[95 164]
[96 163]
[98 161]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[117 143]
[118 142]
[119 141]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[175 230]
[176 229]
[177 228]
[179 226]
[180 225]
[181 220]
[182 219]
[183 218]
[184 214]
[185 213]
[186 211]
[187 210]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
