%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTP4)
} def

/sequence { (\
UUUGUCUCUUCCUGAGAAACGAGCAAACCUGAAAGCUACUCUCUCAGCUUCAGAGGGAAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.007090858 ubox
1 22 0.006303775 ubox
1 23 0.061038923 ubox
1 26 0.003498265 ubox
1 27 0.052552718 ubox
1 57 0.005586759 ubox
1 58 0.092675765 ubox
1 59 0.068033049 ubox
1 60 0.804408942 ubox
1 61 0.099933858 ubox
1 62 0.076714475 ubox
2 18 0.008446245 ubox
2 19 0.009042337 ubox
2 21 0.005696165 ubox
2 22 0.083305124 ubox
2 26 0.064756924 ubox
2 56 0.005012198 ubox
2 57 0.099941346 ubox
2 58 0.074725401 ubox
2 59 0.924052334 ubox
2 60 0.105474326 ubox
2 61 0.111235455 ubox
2 62 0.021935090 ubox
3 17 0.007422783 ubox
3 18 0.010336698 ubox
3 21 0.086238291 ubox
3 25 0.067326339 ubox
3 55 0.003192078 ubox
3 56 0.100544342 ubox
3 57 0.068861459 ubox
3 58 0.947466831 ubox
3 59 0.096434320 ubox
3 60 0.105196819 ubox
3 61 0.028819258 ubox
4 20 0.087275101 ubox
4 24 0.067793792 ubox
5 15 0.007343495 ubox
5 17 0.069160905 ubox
5 19 0.072249346 ubox
5 22 0.012262923 ubox
5 23 0.024113436 ubox
5 54 0.102486370 ubox
5 56 0.953723751 ubox
5 57 0.013361143 ubox
5 58 0.182337143 ubox
6 14 0.007385148 ubox
6 16 0.084760122 ubox
6 21 0.014279401 ubox
6 23 0.059721392 ubox
6 53 0.102729711 ubox
6 55 0.966827238 ubox
6 56 0.012570161 ubox
6 57 0.192862151 ubox
7 15 0.084933046 ubox
7 17 0.061477046 ubox
7 22 0.060311921 ubox
7 52 0.099103743 ubox
7 54 0.966833280 ubox
7 55 0.005819825 ubox
7 56 0.183978196 ubox
7 57 0.035975005 ubox
7 58 0.006549551 ubox
8 14 0.084927199 ubox
8 16 0.062842177 ubox
8 21 0.060130309 ubox
8 53 0.966840523 ubox
8 55 0.184006400 ubox
8 56 0.071597516 ubox
8 57 0.005995239 ubox
9 15 0.062393254 ubox
9 17 0.003343139 ubox
9 18 0.047005033 ubox
9 19 0.014161208 ubox
9 52 0.937205332 ubox
9 53 0.008973270 ubox
9 54 0.177649048 ubox
9 55 0.071896069 ubox
9 56 0.004821632 ubox
9 58 0.006324793 ubox
9 59 0.005962658 ubox
10 14 0.056225493 ubox
10 16 0.003226400 ubox
10 17 0.055184066 ubox
10 18 0.011727039 ubox
10 52 0.029024050 ubox
10 53 0.165295475 ubox
10 54 0.085005316 ubox
10 57 0.006698485 ubox
10 58 0.006615716 ubox
11 16 0.055642908 ubox
11 53 0.096260757 ubox
11 56 0.006905394 ubox
11 57 0.006671613 ubox
12 23 0.006839005 ubox
12 47 0.988793583 ubox
12 53 0.005887618 ubox
12 55 0.006858294 ubox
12 56 0.006498562 ubox
13 22 0.006893105 ubox
13 46 0.991799857 ubox
13 52 0.006441633 ubox
13 54 0.006543187 ubox
13 55 0.005659382 ubox
14 20 0.003971995 ubox
14 43 0.008637164 ubox
14 45 0.992252948 ubox
14 51 0.006363364 ubox
15 42 0.009831563 ubox
15 44 0.992101230 ubox
15 50 0.005642871 ubox
16 41 0.011638833 ubox
16 43 0.992051964 ubox
16 48 0.003188192 ubox
16 49 0.003485823 ubox
17 40 0.012305214 ubox
17 42 0.970312397 ubox
21 41 0.134248162 ubox
21 43 0.003403920 ubox
22 30 0.005149003 ubox
22 37 0.973591397 ubox
22 40 0.131907119 ubox
22 42 0.003584282 ubox
23 29 0.005289658 ubox
23 36 0.984001240 ubox
23 39 0.127502909 ubox
23 41 0.003819005 ubox
24 31 0.037214693 ubox
24 35 0.983227712 ubox
25 30 0.046767265 ubox
28 56 0.051843994 ubox
28 57 0.024778361 ubox
29 35 0.039276248 ubox
29 47 0.003697977 ubox
29 53 0.101821532 ubox
29 55 0.050712587 ubox
29 56 0.024240070 ubox
30 34 0.037585154 ubox
30 38 0.008451672 ubox
30 46 0.004209900 ubox
30 52 0.104539468 ubox
30 54 0.045551278 ubox
30 55 0.022058906 ubox
31 37 0.008255775 ubox
31 41 0.005916769 ubox
31 45 0.004219386 ubox
31 51 0.107234505 ubox
32 40 0.005764138 ubox
32 44 0.004120002 ubox
32 50 0.087493276 ubox
33 49 0.061471243 ubox
33 50 0.073620269 ubox
34 42 0.003878866 ubox
34 49 0.098575240 ubox
35 41 0.004026587 ubox
35 48 0.116807604 ubox
36 47 0.116812380 ubox
37 46 0.115639302 ubox
39 57 0.015141224 ubox
40 56 0.015225118 ubox
40 58 0.035578071 ubox
41 55 0.015299842 ubox
41 57 0.037384150 ubox
42 54 0.015299248 ubox
42 56 0.037373659 ubox
43 53 0.015299217 ubox
43 55 0.037410051 ubox
44 52 0.014759182 ubox
44 54 0.037406740 ubox
45 53 0.037388794 ubox
49 59 0.003206815 ubox
50 58 0.003577065 ubox
51 57 0.003618272 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
showpage
end
%%EOF
