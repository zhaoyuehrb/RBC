%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAUUUAAAUGUUAGAUCACGAGGAAGAAGGAAAACGAUUUCAAGAGCUGCACUUAAGCAUCUAGAAUUUUCUGCGUCACACCUCUUGAGAGAAGAGACUGGCUCCAGGUCUGACUCAGUCCACUACAAGCUAGACGGUCUUCUUAAAGCACCAACAUUACUUGAGUCUUUGGAUAAAAUUGAGAAAAGAGUCUACAAGUAUUGUGGACUCUACAGGAGGCAGGAGGCUGACAACUGGCAGUAAAGACAAAG\
) } def
/len { sequence length } bind def

/coor [
[-20.82337379 600.11401367]
[-12.33186531 586.08453369]
[-12.51665974 571.08569336]
[-12.70145512 556.08679199]
[-22.45816994 541.48571777]
[-13.27790737 525.50823975]
[-13.64746857 510.51278687]
[-14.01703072 495.51733398]
[-14.38659286 480.52191162]
[-22.92020416 471.97329712]
[-23.36693573 459.50192261]
[-14.94387341 449.75814819]
[-15.12866783 434.75927734]
[-15.31346321 419.76040649]
[-15.49825764 404.76153564]
[-15.68305302 389.76269531]
[-15.86784744 374.76382446]
[-26.91576004 358.87506104]
[-16.70905876 341.47045898]
[-17.26333046 326.48071289]
[-17.81760216 311.49093628]
[-23.83045959 307.00814819]
[-30.53051186 320.42861938]
[-37.23056412 333.84912109]
[-42.81311035 347.77157593]
[-57.25199127 351.83590698]
[-69.27733612 342.86981201]
[-69.50308990 327.87149048]
[-57.75443268 318.54782104]
[-46.80530167 308.29516602]
[-35.85617447 298.04254150]
[-41.86903000 293.55972290]
[-56.39317322 297.30798340]
[-70.91731262 301.05621338]
[-85.44145203 304.80447388]
[-99.96559143 308.55270386]
[-114.48973083 312.30096436]
[-117.43817902 315.40200806]
[-120.87057495 317.23590088]
[-124.33448029 317.80511475]
[-127.42385864 317.25714111]
[-129.82182312 315.85723877]
[-144.51296997 318.88546753]
[-159.20411682 321.91369629]
[-171.15811157 332.27770996]
[-185.18534851 327.26913452]
[-199.87649536 330.29736328]
[-214.56764221 333.32559204]
[-229.23985291 336.44427490]
[-243.89257812 339.65325928]
[-258.54531860 342.86227417]
[-265.64074707 356.79742432]
[-280.05368042 362.86389160]
[-294.97869873 358.19726562]
[-303.36871338 345.00097656]
[-301.26220703 329.50595093]
[-289.65377808 319.02841187]
[-274.02462769 318.51556396]
[-261.75430298 328.20953369]
[-247.10157776 325.00054932]
[-232.44885254 321.79153442]
[-226.60377502 317.30322266]
[-217.59588623 318.63446045]
[-202.90473938 315.60620117]
[-188.21359253 312.57797241]
[-177.31039429 302.43057251]
[-162.23234558 307.22256470]
[-147.54119873 304.19430542]
[-132.85005188 301.16607666]
[-118.23797607 297.77682495]
[-103.71383667 294.02856445]
[-89.18969727 290.28033447]
[-74.66555786 286.53207397]
[-60.14141846 282.78384399]
[-45.61727524 279.03558350]
[-33.21626282 270.59667969]
[-24.39948463 258.46142578]
[-23.17819023 243.61698914]
[-8.80704403 237.00028992]
[0.00973434 224.86503601]
[-4.76107836 210.78038025]
[-0.27034384 196.41732788]
[11.95977497 187.34663391]
[27.36396027 187.21516418]
[36.18073654 175.07991028]
[44.99751663 162.94465637]
[53.81429672 150.80940247]
[62.63107300 138.67414856]
[71.44785309 126.53889465]
[80.26463318 114.40364075]
[69.66133881 85.42520905]
[98.08683014 57.15931702]
[95.14914703 42.44979477]
[92.21146393 27.74027443]
[89.27378082 13.03075218]
[86.33610535 -1.67876935]
[83.39842224 -16.38829041]
[80.46073914 -31.09781265]
[64.30194092 -41.02913284]
[60.62584686 -59.30971146]
[71.31616974 -74.19496918]
[68.01697540 -88.82764435]
[64.71777344 -103.46032715]
[61.41858292 -118.09300232]
[58.11938477 -132.72567749]
[54.82019043 -147.35836792]
[36.91518784 -154.20497131]
[26.86287880 -170.34991455]
[28.59222031 -189.13839722]
[41.21935654 -202.95460510]
[37.38171768 -217.45536804]
[26.37125015 -228.81672668]
[30.59486008 -243.09994507]
[26.75721931 -257.60070801]
[22.91957664 -272.10150146]
[13.02214241 -285.86657715]
[23.50938416 -299.18774414]
[39.21313477 -292.79803467]
[37.42035294 -275.93914795]
[41.25799561 -261.43835449]
[45.09563828 -246.93759155]
[55.83160782 -236.61343384]
[51.88249207 -221.29301453]
[55.72013474 -206.79223633]
[66.65079498 -204.81193542]
[76.10327911 -198.87966919]
[82.70008087 -189.81495667]
[85.46318817 -178.89694214]
[83.95891571 -167.68395996]
[78.36548615 -157.79109192]
[69.45287323 -150.65756226]
[72.75206757 -136.02488708]
[76.05126190 -121.39219666]
[79.35045624 -106.75952148]
[82.64965057 -92.12683868]
[85.94884491 -77.49416351]
[96.65565491 -73.64916992]
[104.26525116 -65.03224182]
[106.80894470 -53.69853210]
[103.54508209 -42.42620087]
[95.17025757 -34.03549576]
[98.10794067 -19.32597351]
[101.04562378 -4.61645126]
[103.98330688 10.09307003]
[106.92098999 24.80259132]
[109.85866547 39.51211166]
[112.79634857 54.22163391]
[127.09048462 58.76892471]
[137.98698425 48.46037292]
[148.88348389 38.15182495]
[159.77999878 27.84327507]
[163.84786987 19.69671059]
[170.87481689 17.47587013]
[181.89749146 7.30234385]
[192.85728455 -2.93888927]
[203.75378418 -13.24743938]
[214.65028381 -23.55599022]
[214.83773804 -39.35916519]
[226.20303345 -50.34122849]
[242.00334167 -49.98671341]
[252.86462402 -38.50594711]
[252.34307861 -22.71026611]
[240.74812317 -11.97096729]
[224.95884705 -12.65948582]
[214.06233215 -2.35093594]
[203.16583252 7.95761442]
[200.47430420 14.81805801]
[192.07101440 18.32501793]
[181.04833984 28.49854469]
[170.08854675 38.73977661]
[159.19203186 49.04832840]
[148.29553223 59.35688019]
[137.39903259 69.66542816]
[139.22837830 76.93890381]
[153.73315430 73.11636353]
[168.23791504 69.29382324]
[182.74267578 65.47128296]
[197.24743652 61.64873886]
[211.75219727 57.82619476]
[222.96142578 47.85858536]
[237.29679871 52.27414703]
[240.95503235 66.82122040]
[230.41369629 77.49268341]
[215.82356262 74.01383972]
[201.23626709 77.50823975]
[186.64897156 81.00264740]
[172.06167603 84.49704742]
[157.47438049 87.99145508]
[142.88708496 91.48586273]
[144.71644592 98.75933838]
[159.19329834 102.68622589]
[173.67016602 106.61312103]
[188.14703369 110.54001617]
[202.62388611 114.46691132]
[217.10075378 118.39379883]
[231.57760620 122.32069397]
[246.05447388 126.24758911]
[260.53134155 130.17448425]
[275.00820923 134.10137939]
[289.48504639 138.02825928]
[306.35467529 136.33937073]
[312.64755249 152.08218384]
[299.26199341 162.48716736]
[285.55816650 152.50512695]
[271.08129883 148.57823181]
[256.60443115 144.65133667]
[242.12757874 140.72444153]
[227.65071106 136.79756165]
[213.17385864 132.87066650]
[198.69699097 128.94377136]
[184.22013855 125.01687622]
[169.74327087 121.08998108]
[155.26641846 117.16309357]
[140.78955078 113.23619843]
[115.25378418 130.00300598]
[92.39988708 123.22042084]
[83.58310699 135.35568237]
[74.76632690 147.49093628]
[65.94955444 159.62619019]
[57.13277054 171.76144409]
[48.31599426 183.89669800]
[39.49921417 196.03195190]
[44.13434219 210.72282410]
[39.28691101 225.15736389]
[27.01454926 233.86672974]
[12.14498901 233.68180847]
[3.32821059 245.81706238]
[1.47628009 261.52951050]
[-12.26422977 267.27822876]
[-21.08100891 279.41348267]
[-2.82784700 310.93667603]
[-2.27357459 325.92642212]
[-1.71930206 340.91619873]
[6.63983536 347.82022095]
[9.77007103 357.97091675]
[6.87281656 367.96255493]
[-0.86898613 374.57904053]
[-0.68419123 389.57788086]
[-0.49939632 404.57675171]
[-0.31460142 419.57562256]
[-0.12980653 434.57446289]
[0.05498835 449.57333374]
[9.81937408 465.20071411]
[0.60885435 480.15234375]
[0.97841609 495.14779663]
[1.34797776 510.14321899]
[1.71753955 525.13867188]
[10.49489689 534.56457520]
[10.50930691 547.04394531]
[2.29740667 555.90203857]
[2.48220158 570.90087891]
[2.66699648 585.89978027]
[11.50157833 599.71575928]
[3.71466112 614.14825439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[6 247]
[7 246]
[8 245]
[9 244]
[12 242]
[13 241]
[14 240]
[15 239]
[16 238]
[17 237]
[19 233]
[20 232]
[21 231]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[42 69]
[43 68]
[44 67]
[46 65]
[47 64]
[48 63]
[49 61]
[50 60]
[51 59]
[76 230]
[77 229]
[79 227]
[80 226]
[84 222]
[85 221]
[86 220]
[87 219]
[88 218]
[89 217]
[90 216]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[110 124]
[111 123]
[113 121]
[114 120]
[115 119]
[148 173]
[149 172]
[150 171]
[151 170]
[153 169]
[154 168]
[155 166]
[156 165]
[157 164]
[190 214]
[191 213]
[192 212]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
