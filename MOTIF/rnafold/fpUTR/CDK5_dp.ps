%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CDK5)
} def

/sequence { (\
AGAAGGCCCUGCGCGGGCAGACGGGGCGGGGCUGGAGGCUCAGGUGCCGCCUCCUCUGCAACGCCGGGGCCAGAGUCUUAAAACCGAGGGCCCGCAGGGGUCCCCGCGGCCGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.199678134 ubox
1 79 0.016663317 ubox
2 77 0.230072538 ubox
2 78 0.007809668 ubox
2 79 0.010946068 ubox
3 76 0.224345434 ubox
3 78 0.010852009 ubox
3 79 0.019870742 ubox
4 78 0.020751985 ubox
4 79 0.006502593 ubox
5 71 0.998562555 ubox
5 77 0.010460046 ubox
5 102 0.003346771 ubox
6 70 0.999975800 ubox
6 101 0.003346207 ubox
7 69 0.999981403 ubox
7 99 0.003591389 ubox
7 100 0.003203813 ubox
8 68 0.999979824 ubox
8 98 0.003981977 ubox
9 67 0.999971062 ubox
9 97 0.004324805 ubox
10 66 0.999142249 ubox
10 96 0.004641322 ubox
11 64 0.031497308 ubox
11 65 0.998531097 ubox
11 95 0.004743146 ubox
12 63 0.044102070 ubox
12 66 0.004135047 ubox
12 94 0.004730271 ubox
13 62 0.043481565 ubox
13 64 0.998872658 ubox
13 65 0.003367217 ubox
14 63 0.998959656 ubox
15 62 0.996980519 ubox
17 59 0.998761065 ubox
18 58 0.999981135 ubox
19 57 0.999752401 ubox
20 56 0.999952852 ubox
21 55 0.991933144 ubox
23 53 0.939791866 ubox
23 54 0.329398251 ubox
24 51 0.003315005 ubox
24 52 0.943853087 ubox
24 53 0.328213827 ubox
25 51 0.999150273 ubox
25 52 0.040414793 ubox
26 50 0.999582859 ubox
26 51 0.028605220 ubox
27 49 0.999980449 ubox
28 48 0.999968677 ubox
29 41 0.005484680 ubox
29 47 0.999839174 ubox
29 48 0.003770740 ubox
30 40 0.016522316 ubox
30 41 0.003966240 ubox
30 47 0.005260654 ubox
31 39 0.017108513 ubox
31 45 0.987268072 ubox
32 38 0.017121667 ubox
32 43 0.451579913 ubox
32 44 0.891838184 ubox
33 37 0.015440559 ubox
33 42 0.621539670 ubox
33 43 0.736746712 ubox
34 40 0.084492910 ubox
34 41 0.667457385 ubox
35 39 0.118626423 ubox
35 40 0.523243598 ubox
35 41 0.672972515 ubox
36 40 0.593072530 ubox
67 93 0.004469231 ubox
68 92 0.004478811 ubox
69 91 0.004483248 ubox
70 90 0.004483314 ubox
71 89 0.004465531 ubox
72 78 0.068874973 ubox
72 79 0.037090403 ubox
73 77 0.072112876 ubox
73 78 0.034379027 ubox
73 79 0.038068899 ubox
74 78 0.033634064 ubox
75 84 0.186464021 ubox
75 91 0.010456714 ubox
75 110 0.008307615 ubox
75 113 0.005492610 ubox
75 116 0.024248103 ubox
76 83 0.178116315 ubox
76 87 0.262336472 ubox
76 89 0.010156069 ubox
76 90 0.010447290 ubox
76 109 0.008115022 ubox
76 112 0.005370442 ubox
76 115 0.023090056 ubox
77 86 0.280350837 ubox
77 88 0.067057300 ubox
77 89 0.010909263 ubox
77 108 0.008060149 ubox
78 87 0.089287602 ubox
78 88 0.011008615 ubox
79 86 0.087992773 ubox
79 87 0.017963859 ubox
84 109 0.084422813 ubox
85 106 0.071018879 ubox
85 108 0.085588356 ubox
85 115 0.156763134 ubox
85 117 0.061188665 ubox
86 105 0.358015100 ubox
86 107 0.085176422 ubox
86 114 0.162397605 ubox
86 116 0.064473546 ubox
88 102 0.005517543 ubox
88 103 0.905281898 ubox
88 104 0.368852715 ubox
88 105 0.044775977 ubox
88 111 0.005373464 ubox
88 114 0.022130704 ubox
89 101 0.004896670 ubox
89 102 0.909268581 ubox
89 103 0.368068268 ubox
89 104 0.043125201 ubox
89 110 0.004783854 ubox
89 111 0.170040309 ubox
89 113 0.019231134 ubox
89 114 0.077728577 ubox
90 101 0.910127926 ubox
90 102 0.365975185 ubox
90 103 0.038924598 ubox
90 110 0.170343741 ubox
90 113 0.077989276 ubox
91 99 0.013192931 ubox
91 100 0.981700837 ubox
91 109 0.139282213 ubox
91 112 0.077837385 ubox
92 98 0.015256400 ubox
92 99 0.981690425 ubox
92 100 0.021888423 ubox
92 108 0.098827778 ubox
92 109 0.126365601 ubox
93 97 0.016922676 ubox
93 98 0.981336020 ubox
93 99 0.022066191 ubox
93 106 0.006852814 ubox
93 108 0.160183456 ubox
93 117 0.008625344 ubox
94 105 0.006148124 ubox
94 107 0.187853490 ubox
94 116 0.009220006 ubox
95 106 0.187330686 ubox
95 115 0.009191755 ubox
97 103 0.006409862 ubox
97 104 0.070302019 ubox
97 105 0.173995639 ubox
97 114 0.009143566 ubox
98 102 0.006414236 ubox
98 103 0.070107210 ubox
98 104 0.174072988 ubox
98 105 0.010947400 ubox
98 113 0.009140443 ubox
99 103 0.171264067 ubox
99 104 0.011076276 ubox
99 111 0.009233874 ubox
100 110 0.009241922 ubox
101 109 0.008444648 ubox
102 108 0.008384472 ubox
102 109 0.003745102 ubox
103 108 0.003757977 ubox
105 117 0.851127373 ubox
106 113 0.009860983 ubox
106 116 0.975345097 ubox
107 112 0.010134242 ubox
107 115 0.977362709 ubox
107 117 0.008686164 ubox
108 114 0.977244360 ubox
108 116 0.008754424 ubox
109 113 0.961468589 ubox
109 116 0.032354194 ubox
110 115 0.032873525 ubox
111 117 0.010139728 ubox
112 116 0.010291932 ubox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
88 103 0.9500000 lbox
89 102 0.9500000 lbox
90 101 0.9500000 lbox
91 100 0.9500000 lbox
92 99 0.9500000 lbox
93 98 0.9500000 lbox
105 117 0.9500000 lbox
106 116 0.9500000 lbox
107 115 0.9500000 lbox
108 114 0.9500000 lbox
109 113 0.9500000 lbox
showpage
end
%%EOF
