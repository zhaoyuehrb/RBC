%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCCACAGGACCUCGGGACGGGGGCGGGGCUCCGACAGAGGCGGCGAUUGUGGCGGCCCAUUUGUAAAUGCUGCGGAGAUUGAGGUGUCGGUUCGUGCUGCUGAGCUGCCCAGGCUUCACGGAGCGGUGUUGGAAAUCAAUAGCUCUUCUAGCCUUUGCAUUGUUUAAAUAUAAUAGUGUCAUUGGACUAAG\
) } def
/len { sequence length } bind def

/coor [
[93.55642700 141.08480835]
[86.38816833 139.29631042]
[79.64950562 136.26760864]
[73.55310822 132.09428406]
[68.29137421 126.90808105]
[64.03036499 120.87264252]
[60.90456772 114.17846680]
[59.01262665 107.03681946]
[58.41424561 99.67308044]
[59.12831879 92.31966400]
[61.13230896 85.20864105]
[48.30516815 77.43275452]
[35.47802734 69.65686798]
[22.58897781 61.98402405]
[9.63885403 54.41472626]
[-3.31127024 46.84542847]
[-12.31162643 45.21315002]
[-16.40690804 39.04960632]
[-29.23404884 31.27371788]
[-42.06119156 23.49782944]
[-51.03422928 21.72150230]
[-55.03019333 15.49311256]
[-67.73105621 7.51263189]
[-80.43192291 -0.46784931]
[-100.58152008 -0.29918826]
[-108.89057159 -17.75108337]
[-121.84069824 -25.32038116]
[-134.79081726 -32.88967896]
[-147.74095154 -40.45897675]
[-160.69107056 -48.02827454]
[-176.50973511 -48.31218338]
[-183.59332275 -61.41455078]
[-196.54344177 -68.98384857]
[-216.67729187 -68.16944885]
[-225.54142761 -85.34606171]
[-238.72750854 -92.49639893]
[-251.91357422 -99.64673615]
[-265.09967041 -106.79707336]
[-278.28573608 -113.94741058]
[-282.64743042 -113.67294312]
[-286.48034668 -114.70394897]
[-289.43746948 -116.71185303]
[-291.31506348 -119.28887939]
[-292.06600952 -122.00192261]
[-304.76687622 -129.98240662]
[-319.98980713 -126.68090057]
[-332.75659180 -134.95516968]
[-335.81027222 -149.48826599]
[-348.51113892 -157.46875000]
[-361.21200562 -165.44923401]
[-373.91287231 -173.42970276]
[-386.61370850 -181.41018677]
[-400.95950317 -175.79731750]
[-415.68743896 -179.66278076]
[-425.20263672 -191.32147217]
[-426.01840210 -206.16978455]
[-438.71926880 -214.15026855]
[-451.42010498 -222.13075256]
[-464.12097168 -230.11122131]
[-476.82183838 -238.09170532]
[-489.71801758 -229.92765808]
[-504.88027954 -228.17608643]
[-519.29821777 -233.18473816]
[-530.10906982 -243.95916748]
[-535.16632080 -258.36007690]
[-533.46594238 -273.52819824]
[-525.34545898 -286.45184326]
[-512.41729736 -294.56503296]
[-497.24819946 -296.25689697]
[-482.85012817 -291.19149780]
[-472.08178711 -280.37460327]
[-467.08123779 -265.95385742]
[-468.84136963 -250.79257202]
[-456.14050293 -242.81208801]
[-443.43963623 -234.83160400]
[-430.73876953 -226.85113525]
[-418.03790283 -218.87065125]
[-404.30609131 -224.57810974]
[-389.67349243 -221.06373596]
[-379.80062866 -209.47149658]
[-378.63323975 -194.11105347]
[-365.93237305 -186.13056946]
[-353.23150635 -178.15008545]
[-340.53063965 -170.16960144]
[-327.82977295 -162.18913269]
[-313.41098022 -165.74354553]
[-300.41680908 -157.83113098]
[-296.78637695 -142.68327332]
[-284.08554077 -134.70278931]
[-271.13540649 -127.13349152]
[-257.94931030 -119.98315430]
[-244.76324463 -112.83281708]
[-231.57716370 -105.68247223]
[-218.39108276 -98.53213501]
[-208.88146973 -102.31251526]
[-198.64743042 -100.18326569]
[-191.12478638 -92.61221313]
[-188.97413635 -81.93397522]
[-176.02401733 -74.36467743]
[-161.13163757 -74.62217712]
[-153.12176514 -60.97840118]
[-140.17164612 -53.40910339]
[-127.22151947 -45.83980560]
[-114.27140045 -38.27050781]
[-101.32127380 -30.70120811]
[-91.69538116 -34.17484665]
[-81.53484344 -31.71867371]
[-74.25872040 -23.91039276]
[-72.45143890 -13.16871262]
[-59.75057602 -5.18823099]
[-47.04971313 2.79224992]
[-34.28530121 10.67068768]
[-21.45816040 18.44657707]
[-8.63101864 26.22246552]
[4.25802803 33.89530563]
[17.20815277 41.46460342]
[30.15827751 49.03390121]
[37.52864838 49.69585419]
[43.25391388 56.82972336]
[56.08105469 64.60561371]
[68.90819550 72.38150024]
[91.46517944 59.29817581]
[117.37784576 62.21783066]
[136.45796204 79.99253082]
[150.69380188 75.26590729]
[164.92962646 70.53928375]
[179.16546631 65.81266022]
[193.40130615 61.08603668]
[198.08584595 56.39212418]
[203.60910034 54.98888779]
[208.16978455 56.44401169]
[222.54980469 52.17609787]
[236.92980957 47.90818405]
[251.30982971 43.64027023]
[265.68984985 39.37235641]
[274.57061768 26.01153183]
[290.56539917 24.76806068]
[301.40438843 36.59582520]
[298.77282715 52.42157745]
[284.68942261 60.10515213]
[269.95776367 53.75237274]
[255.57774353 58.02028656]
[241.19772339 62.28820038]
[226.81771851 66.55611420]
[212.43769836 70.82402802]
[198.12792969 75.32187653]
[183.89208984 80.04850006]
[169.65625000 84.77512360]
[155.42042542 89.50174713]
[141.18458557 94.22837067]
[141.26484680 105.16668701]
[138.49020386 115.74755096]
[133.05265808 125.23892975]
[143.13717651 136.34309387]
[153.22167969 147.44726562]
[163.39486694 158.47026062]
[173.65605164 169.41137695]
[189.21856689 170.07920837]
[199.46902466 181.32122803]
[198.73641968 196.15359497]
[208.99761963 207.09469604]
[219.34617615 217.95323181]
[229.78140259 228.72846985]
[240.21664429 239.50370789]
[250.65188599 250.27894592]
[261.08712769 261.05419922]
[271.52236938 271.82943726]
[281.95761108 282.60467529]
[297.54159546 281.31121826]
[310.28112793 290.37976074]
[314.16098022 305.52838135]
[307.34921265 319.60437012]
[293.06210327 325.96148682]
[278.04562378 321.59808350]
[269.39007568 308.57443237]
[271.18237305 293.03991699]
[260.74713135 282.26467896]
[250.31187439 271.48944092]
[239.87664795 260.71417236]
[229.44140625 249.93894958]
[219.00616455 239.16371155]
[208.57092285 228.38845825]
[201.65063477 225.76737976]
[198.05650330 217.35589600]
[187.79531860 206.41477966]
[172.94648743 206.19555664]
[162.38432312 195.24589539]
[162.71495056 179.67256165]
[152.45375061 168.73146057]
[145.57635498 165.99978638]
[142.11750793 157.53178406]
[132.03300476 146.42761230]
[121.94848633 135.32344055]
[115.35167694 138.64981079]
[108.27036285 140.75637817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 121]
[12 120]
[13 119]
[14 117]
[15 116]
[16 115]
[18 114]
[19 113]
[20 112]
[22 111]
[23 110]
[24 109]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[32 99]
[33 98]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[44 89]
[45 88]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[153 193]
[154 192]
[155 191]
[156 189]
[157 188]
[160 185]
[161 184]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
