%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL22)
} def

/sequence { (\
CGACCAGGUUCUCCUUCCCCAGUCACCAGUUGCUCGAGUUAGAAUUGUCUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.108048238 ubox
1 36 0.121700050 ubox
1 47 0.006859291 ubox
1 51 0.132848938 ubox
2 10 0.008680398 ubox
2 11 0.013137152 ubox
2 13 0.008641690 ubox
2 16 0.005277099 ubox
2 17 0.095719716 ubox
2 24 0.322651245 ubox
2 31 0.115737536 ubox
2 35 0.124026115 ubox
2 40 0.004435935 ubox
2 46 0.006141492 ubox
2 49 0.887678224 ubox
2 50 0.042720191 ubox
3 9 0.009722351 ubox
3 10 0.012071661 ubox
3 12 0.008510146 ubox
3 15 0.003706678 ubox
3 16 0.092828358 ubox
3 23 0.322992465 ubox
3 30 0.117153993 ubox
3 34 0.121748619 ubox
3 39 0.004957239 ubox
3 45 0.004329622 ubox
3 48 0.888764597 ubox
4 8 0.010100450 ubox
4 22 0.322289576 ubox
4 29 0.117168691 ubox
4 38 0.005004132 ubox
4 47 0.865299679 ubox
5 32 0.121356157 ubox
5 47 0.201279787 ubox
5 51 0.160676281 ubox
6 12 0.003744683 ubox
6 15 0.173615395 ubox
6 16 0.014794560 ubox
6 31 0.119582292 ubox
6 46 0.256626029 ubox
6 50 0.161967514 ubox
7 11 0.003887748 ubox
7 13 0.004480303 ubox
7 14 0.184135925 ubox
7 15 0.014095759 ubox
7 17 0.014027196 ubox
7 18 0.218365007 ubox
7 19 0.215290368 ubox
7 20 0.075880944 ubox
7 27 0.174187225 ubox
7 30 0.032440482 ubox
7 34 0.003723598 ubox
7 45 0.188587364 ubox
7 46 0.654941958 ubox
7 49 0.160327361 ubox
7 50 0.003474418 ubox
8 13 0.183685513 ubox
8 14 0.014299465 ubox
8 16 0.013557642 ubox
8 17 0.221175810 ubox
8 18 0.212097677 ubox
8 19 0.075582021 ubox
8 26 0.174840428 ubox
8 33 0.005178129 ubox
8 45 0.880347532 ubox
8 48 0.095775791 ubox
8 49 0.003796338 ubox
9 25 0.172001391 ubox
9 32 0.005134413 ubox
9 42 0.004318043 ubox
9 43 0.012186334 ubox
9 44 0.907063185 ubox
9 47 0.017457068 ubox
10 41 0.003791352 ubox
10 42 0.008501784 ubox
10 43 0.911143410 ubox
11 22 0.161483285 ubox
11 29 0.005459160 ubox
11 38 0.011198411 ubox
11 42 0.911543513 ubox
12 21 0.159400640 ubox
12 28 0.005213572 ubox
12 37 0.012330127 ubox
12 41 0.891608749 ubox
12 43 0.010830581 ubox
13 36 0.012941114 ubox
13 42 0.011163032 ubox
14 22 0.040298573 ubox
14 29 0.003524692 ubox
14 38 0.310055001 ubox
14 42 0.007917036 ubox
15 21 0.038767858 ubox
15 22 0.007467043 ubox
15 28 0.003371825 ubox
15 37 0.291571068 ubox
15 38 0.792766714 ubox
15 41 0.008372605 ubox
16 21 0.007530027 ubox
16 36 0.260822498 ubox
16 37 0.854769835 ubox
16 43 0.003866227 ubox
17 36 0.863066979 ubox
17 42 0.003957326 ubox
20 32 0.288606167 ubox
20 47 0.008363625 ubox
20 51 0.116600837 ubox
21 31 0.285556865 ubox
21 34 0.840490509 ubox
21 40 0.004344648 ubox
21 46 0.008428488 ubox
21 50 0.117579821 ubox
22 30 0.247748759 ubox
22 33 0.851684107 ubox
22 39 0.003962783 ubox
22 45 0.008356479 ubox
22 49 0.117397327 ubox
22 52 0.076349290 ubox
23 29 0.115684040 ubox
23 32 0.736923989 ubox
23 37 0.013780976 ubox
23 43 0.004785931 ubox
23 44 0.007335909 ubox
23 51 0.069467527 ubox
24 32 0.416147238 ubox
24 36 0.014152375 ubox
24 42 0.006134530 ubox
24 47 0.093598536 ubox
24 51 0.034056728 ubox
25 31 0.392557077 ubox
25 39 0.008396772 ubox
25 46 0.088735771 ubox
25 48 0.050437357 ubox
25 50 0.034651311 ubox
26 38 0.008994435 ubox
26 47 0.038853289 ubox
27 47 0.209296128 ubox
27 51 0.141412886 ubox
28 34 0.015390140 ubox
28 40 0.005822376 ubox
28 46 0.214468246 ubox
28 50 0.142661279 ubox
29 33 0.015895857 ubox
29 39 0.006101623 ubox
29 45 0.218910346 ubox
29 49 0.142505745 ubox
29 52 0.049130742 ubox
30 37 0.009505211 ubox
30 38 0.008924568 ubox
30 42 0.027095569 ubox
30 43 0.015040941 ubox
30 44 0.218716133 ubox
30 47 0.051158094 ubox
30 51 0.048689816 ubox
31 36 0.009393292 ubox
31 37 0.011681405 ubox
31 41 0.027443851 ubox
31 42 0.015750485 ubox
31 43 0.207163768 ubox
31 47 0.023540611 ubox
31 51 0.004626098 ubox
31 53 0.152866079 ubox
32 39 0.087820924 ubox
32 40 0.022773868 ubox
32 46 0.033412771 ubox
32 48 0.056181003 ubox
32 50 0.005812113 ubox
32 52 0.196033853 ubox
33 38 0.089806570 ubox
33 42 0.169735927 ubox
33 47 0.058071010 ubox
33 51 0.195950116 ubox
34 41 0.159164633 ubox
34 43 0.162717855 ubox
35 42 0.168539889 ubox
35 47 0.123780471 ubox
35 51 0.005341832 ubox
36 46 0.124083737 ubox
36 49 0.111480951 ubox
36 50 0.003998838 ubox
37 45 0.122949247 ubox
37 46 0.067097048 ubox
37 48 0.109823589 ubox
37 50 0.031103195 ubox
38 45 0.068791796 ubox
38 49 0.031676057 ubox
38 52 0.160420850 ubox
39 44 0.065896568 ubox
39 47 0.021195684 ubox
39 51 0.116200555 ubox
40 47 0.023855898 ubox
40 51 0.156553468 ubox
41 46 0.024657026 ubox
41 50 0.202475564 ubox
42 49 0.205860082 ubox
43 48 0.188141649 ubox
46 53 0.012317545 ubox
47 52 0.016871189 ubox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
showpage
end
%%EOF
