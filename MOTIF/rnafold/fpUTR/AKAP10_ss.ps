%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGAAGCCUAGCGCGGGGAAGGACCGGAACUCCGGGCGGGCGGCUUGUUGAUAAUAUGGCGGCUGGAGCUGCCUGGGCAUCCCGAGGAGGCGGUGGGGCCCACUCCCGGAAGAAGGGUCCCUUUUCGCGCUAGUGCAGCGGCCCCUCUGGACCCGGAAGUCCGGGCCGGUUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[327.22964478 514.42431641]
[314.93438721 505.83212280]
[309.12002563 492.00485229]
[311.58020020 477.20797729]
[321.55599976 466.00601196]
[335.97006226 461.85455322]
[350.37390137 466.03292847]
[341.90325928 453.65356445]
[333.32373047 441.34942627]
[324.63595581 429.12149048]
[315.94818115 416.89355469]
[307.26040649 404.66561890]
[298.57263184 392.43768311]
[289.88482666 380.20974731]
[281.19705200 367.98181152]
[272.50927734 355.75387573]
[263.82150269 343.52593994]
[255.13372803 331.29797363]
[246.44595337 319.07003784]
[237.75816345 306.84210205]
[224.07929993 300.94821167]
[222.39385986 285.21704102]
[213.70608521 272.98910522]
[205.01831055 260.76116943]
[196.33052063 248.53323364]
[187.64274597 236.30528259]
[172.95765686 238.91557312]
[158.53619385 234.87440491]
[147.25325012 224.93177795]
[141.38212585 211.01954651]
[142.13667297 195.87631226]
[149.42074585 182.50830078]
[140.73297119 170.28036499]
[132.04518127 158.05241394]
[123.35740662 145.82447815]
[114.66962433 133.59654236]
[105.98184967 121.36859894]
[81.59577942 118.49082184]
[71.08496857 92.05182648]
[57.52159882 85.64597321]
[43.95822144 79.24012756]
[30.39484787 72.83428192]
[16.83147430 66.42843628]
[3.26809931 60.02259064]
[-10.29527569 53.61674500]
[-23.85865021 47.21089554]
[-37.42202377 40.80504990]
[-51.09634018 34.63957596]
[-64.87733459 28.71638870]
[-78.65833282 22.79320526]
[-92.43933105 16.87001991]
[-105.16923523 25.58512688]
[-120.59070587 26.01159286]
[-133.78280640 18.01333618]
[-140.53598022 4.14256907]
[-138.69531250 -11.17459488]
[-128.84817505 -23.05050659]
[-114.13672638 -27.69560242]
[-99.25534821 -23.62765312]
[-88.95263672 -12.14472485]
[-86.51614380 3.08902264]
[-72.73515320 9.01220798]
[-58.95415115 14.93539238]
[-45.17315674 20.85857773]
[-40.45842361 19.94032288]
[-35.11922836 21.99537849]
[-31.01617813 27.24167633]
[-17.45280266 33.64752197]
[-3.88942862 40.05336761]
[9.67394543 46.45921707]
[23.23731995 52.86506271]
[36.80069351 59.27090836]
[50.36407089 65.67675781]
[63.92744446 72.08260345]
[77.49082184 78.48844910]
[90.16140747 70.45999146]
[90.16140747 55.45998764]
[90.16140747 40.45998764]
[90.16140747 25.45998955]
[82.42411041 11.65981674]
[90.16140747 -1.06745470]
[90.16140747 -16.06745529]
[90.02903748 -31.06686974]
[89.76431274 -46.06453323]
[89.49958801 -61.06219864]
[77.95613861 -71.85684204]
[77.51016998 -87.65483856]
[88.42625427 -99.08351135]
[104.22808075 -99.36243439]
[115.54070282 -88.32612610]
[115.65254211 -72.52223206]
[104.49724579 -61.32692719]
[104.76197815 -46.32926178]
[105.02670288 -31.33159828]
[108.29840851 -24.67919540]
[105.16140747 -16.06745529]
[105.16140747 -1.06745470]
[112.89871216 11.65981674]
[105.16140747 25.45998955]
[105.16140747 40.45998764]
[105.16140747 55.45998764]
[105.16140747 70.45999146]
[117.51016235 78.10175323]
[124.08224487 89.96649170]
[124.00199890 102.57228088]
[118.20978546 112.68082428]
[126.89756775 124.90876007]
[135.58534241 137.13670349]
[144.27313232 149.36463928]
[152.96090698 161.59257507]
[161.64868164 173.82052612]
[176.66918945 171.34144592]
[191.21723938 175.61239624]
[202.42242432 185.73484802]
[208.09814453 199.66133118]
[207.16827393 214.60940552]
[199.87068176 227.61750793]
[208.55847168 239.84544373]
[217.24624634 252.07337952]
[225.93402100 264.30133057]
[234.62179565 276.52926636]
[248.92207336 283.29779053]
[249.98611450 298.15432739]
[258.67388916 310.38226318]
[267.36166382 322.61019897]
[276.04943848 334.83813477]
[284.73721313 347.06610107]
[293.42498779 359.29403687]
[302.11279297 371.52197266]
[310.80056763 383.74990845]
[319.48834229 395.97784424]
[328.17611694 408.20578003]
[336.86389160 420.43371582]
[345.55166626 432.66165161]
[353.09674072 437.86502075]
[354.28262329 445.18295288]
[362.75326538 457.56231689]
[372.17932129 469.23059082]
[382.50146484 480.11425781]
[392.82357788 490.99789429]
[403.14569092 501.88156128]
[413.46780396 512.76519775]
[423.78991699 523.64886475]
[434.11203003 534.53253174]
[437.28277588 519.87145996]
[450.64077759 513.04766846]
[464.37811279 519.07135010]
[468.40841675 533.51977539]
[459.77249146 545.78442383]
[444.81140137 546.86022949]
[454.13415527 558.61126709]
[461.94403076 563.40802002]
[463.51553345 570.65289307]
[472.62945557 582.56665039]
[481.74334717 594.48034668]
[490.85726929 606.39410400]
[499.97119141 618.30780029]
[515.31231689 624.10272217]
[517.69696045 640.32757568]
[504.67196655 650.29162598]
[489.63635254 643.74468994]
[488.05746460 627.42169189]
[478.94354248 615.50799561]
[469.82965088 603.59423828]
[460.71572876 591.68054199]
[451.60183716 579.76684570]
[442.38314819 567.93402100]
[433.06039429 556.18298340]
[423.22839355 544.85461426]
[412.90628052 533.97094727]
[402.58416748 523.08734131]
[392.26202393 512.20367432]
[381.93991089 501.32000732]
[371.61779785 490.43637085]
[361.29568481 479.55270386]
[362.35229492 494.51544189]
[355.26235962 507.73410034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 137]
[8 136]
[9 134]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[32 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 64]
[49 63]
[50 62]
[51 61]
[76 102]
[77 101]
[78 100]
[79 99]
[81 97]
[82 96]
[83 94]
[84 93]
[85 92]
[138 175]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[150 168]
[151 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
