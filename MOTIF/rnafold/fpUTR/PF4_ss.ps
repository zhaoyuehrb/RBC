%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUAGUUUCCGCACCGCAGUUCCUCGGUGUCCACUUCAGGCUUCCGGACUGGAAGGACAGCCGGGAAUAAAACGUGCCGGCGAGGCUCAGGAGUCAUUGGCCACAGAGACCCAGCCCGAGUUUCCCAUCGCACUGAGCACUGAGAUCCUGCUGGAAGCUCUGCCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[83.00849152 538.84197998]
[79.03780365 524.21295166]
[80.31310272 509.10833740]
[86.68038940 495.35211182]
[97.37078857 484.60543823]
[111.09337616 478.16598511]
[109.72540283 463.22851562]
[108.35742188 448.29101562]
[106.98944855 433.35351562]
[105.62146759 418.41601562]
[104.25349426 403.47854614]
[102.88552094 388.54104614]
[101.51753998 373.60354614]
[99.41152954 371.70074463]
[97.94683838 368.83377075]
[97.50028229 365.24807739]
[98.35095978 361.32272339]
[100.63601685 357.53204346]
[100.36205292 342.53454590]
[100.08809662 327.53704834]
[99.81413269 312.53955078]
[87.52084351 304.17218018]
[82.45189667 290.00286865]
[86.74856567 275.39489746]
[98.96416473 266.00952148]
[98.69020081 251.01203918]
[98.41624451 236.01454163]
[98.14228058 221.01704407]
[97.86832428 206.01954651]
[97.59436035 191.02204895]
[97.32039642 176.02455139]
[97.04644012 161.02705383]
[89.07798004 148.44320679]
[96.56194305 134.50402832]
[96.28797913 119.50653076]
[93.33972168 134.21394348]
[82.63697052 144.72351074]
[67.87831879 147.40344238]
[54.16393280 141.32762146]
[46.23313522 128.59567261]
[46.82658768 113.60741425]
[55.73921204 101.54238129]
[69.89105225 96.56990814]
[84.39191437 100.40853119]
[71.05178070 93.54989624]
[57.71165085 86.69126129]
[44.37151718 79.83262634]
[31.03138542 72.97399139]
[17.69125366 66.11535645]
[8.59135342 64.96600342]
[4.17181206 59.00768661]
[-9.04082870 51.90655136]
[-22.25346947 44.80541611]
[-37.31355667 49.59804916]
[-51.31297302 42.26375961]
[-55.94611740 27.15384293]
[-48.46422195 13.23274994]
[-33.30616760 8.75961781]
[-19.46495628 16.38827515]
[-15.15233326 31.59277534]
[-1.93969262 38.69391251]
[11.27294827 45.79504776]
[24.54988861 52.77522278]
[37.89001846 59.63385773]
[51.23015213 66.49249268]
[64.57028198 73.35112762]
[77.91041565 80.20976257]
[91.25054932 87.06839752]
[79.25646210 78.06052399]
[75.28601837 63.59554291]
[81.00078583 49.72682190]
[94.00923157 42.25819397]
[108.86752319 44.31515884]
[119.35771942 55.03690720]
[121.08982849 69.93656158]
[113.33802795 82.77967834]
[123.14210510 71.42713928]
[132.94618225 60.07460022]
[142.75025940 48.72206116]
[145.59475708 28.78974533]
[164.06872559 23.15309525]
[173.45164490 11.45006657]
[176.39390564 2.76259089]
[183.11436462 -0.37896591]
[192.70945740 -11.90867329]
[202.30455017 -23.43837929]
[211.89964294 -34.96808624]
[221.49475098 -46.49779510]
[231.08984375 -58.02750015]
[240.68493652 -69.55720520]
[243.56527710 -85.11401367]
[257.65383911 -89.94745636]
[267.24893188 -101.47715759]
[269.52935791 -122.76065826]
[289.11743164 -129.19964600]
[298.06665039 -141.23754883]
[307.01589966 -153.27546692]
[309.03991699 -168.96665955]
[322.84259033 -174.56445312]
[331.79183960 -186.60235596]
[340.74105835 -198.64025879]
[342.09536743 -214.98338318]
[357.03955078 -221.73643494]
[370.20031738 -211.95243835]
[368.03897095 -195.69635010]
[352.77896118 -189.69102478]
[343.82974243 -177.65312195]
[334.88049316 -165.61521912]
[333.49658203 -150.78503418]
[319.05380249 -144.32621765]
[310.10455322 -132.28831482]
[301.15533447 -120.25041199]
[303.87707520 -111.73173523]
[302.32913208 -102.78378296]
[296.73663330 -95.45507050]
[288.26492310 -91.48282623]
[278.77862549 -91.88206482]
[269.18353271 -80.35235596]
[266.98950195 -65.62023163]
[252.21464539 -59.96211243]
[242.61955261 -48.43240738]
[233.02444458 -36.90269852]
[223.42935181 -25.37299156]
[213.83425903 -13.84328461]
[204.23916626 -2.31357765]
[194.64407349 9.21612930]
[185.15466309 20.83298111]
[175.77175903 32.53601074]
[177.80119324 42.59666824]
[173.85691833 52.30970764]
[165.02488708 58.35597610]
[154.10279846 58.52613449]
[144.29872131 69.87867737]
[134.49464417 81.23121643]
[124.69056702 92.58374786]
[111.28547668 119.23256683]
[111.55944061 134.23007202]
[119.54749298 147.88662720]
[112.04393768 160.75308228]
[112.31789398 175.75057983]
[112.59185791 190.74807739]
[112.86582184 205.74557495]
[113.13977814 220.74307251]
[113.41374207 235.74057007]
[113.68769836 250.73806763]
[113.96166229 265.73556519]
[126.51188660 274.66854858]
[131.33920288 289.10983276]
[126.79113007 303.45483398]
[114.81163025 312.26559448]
[115.08559418 327.26309204]
[115.35955048 342.26058960]
[115.63351440 357.25808716]
[116.45503235 372.23556519]
[117.82300568 387.17306519]
[119.19098663 402.11056519]
[120.55895996 417.04806519]
[121.92694092 431.98553467]
[123.29491425 446.92303467]
[124.66289520 461.86053467]
[126.03086853 476.79800415]
[140.69483948 480.63781738]
[153.15939331 489.26394653]
[161.91940308 501.63482666]
[165.91705322 516.25653076]
[164.66958618 531.36346436]
[158.32765198 545.13140869]
[147.65708923 555.89776611]
[133.94638062 562.36248779]
[118.85119629 563.74487305]
[104.19433594 559.87811279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[18 153]
[19 152]
[20 151]
[21 150]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[34 137]
[35 136]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[51 62]
[52 61]
[53 60]
[76 135]
[77 134]
[78 133]
[79 132]
[81 128]
[82 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 118]
[93 117]
[95 112]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
