%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUGGACGCGCGCCUCGGUUCCGAACGCAGCGGACGGCGCCUCAGGCAGCGCGGCGGACAGCCCGUCCUCCGGCGCGCCGCGAGCCUCGGAGGACCCUAGCGACGGUCGUGGCGUAAGACCGGGGGGACGCGGCGGUAGCGGCGGCCGUUGCGAUUGAUUGCGCUGGUUGCCUGCGGCGUCCACUUCCUUGGCCGCCCUUGCUACACUGGCUGAUUGUUGUGCAGCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-46.84874725 440.96286011]
[-54.46392822 453.88604736]
[-68.95538330 457.75872803]
[-82.00211334 450.35717773]
[-86.11272430 435.93197632]
[-94.23760223 448.54095459]
[-91.11000824 463.80056763]
[-99.52941132 476.47210693]
[-114.09639740 479.35977173]
[-122.22127533 491.96875000]
[-130.34614563 504.57772827]
[-138.38691711 517.24047852]
[-146.34323120 529.95654297]
[-154.29954529 542.67254639]
[-152.17094421 555.38244629]
[-159.04562378 565.80578613]
[-170.78880310 568.66290283]
[-178.91368103 581.27191162]
[-187.03855896 593.88085938]
[-187.29780579 610.27795410]
[-201.75735474 618.01446533]
[-215.54244995 609.13177490]
[-214.47218323 592.76757812]
[-199.64753723 585.75598145]
[-191.52265930 573.14703369]
[-183.39778137 560.53802490]
[-183.47923279 542.98193359]
[-167.01556396 534.71618652]
[-159.05924988 522.00018311]
[-151.10293579 509.28417969]
[-150.22106934 501.95941162]
[-142.95512390 496.45285034]
[-134.83024597 483.84387207]
[-126.70537567 471.23489380]
[-130.09504700 456.77645874]
[-122.03488159 443.87341309]
[-106.84658051 440.41607666]
[-98.72170258 427.80709839]
[-91.10671997 414.88375854]
[-84.01376343 401.66674805]
[-76.92081451 388.44970703]
[-69.82785797 375.23266602]
[-62.73490524 362.01562500]
[-63.38711166 358.56701660]
[-62.41205978 354.63189697]
[-59.59945679 350.97366333]
[-55.08574295 348.42080688]
[-47.47075653 335.49749756]
[-39.85577011 322.57418823]
[-40.06067276 307.68099976]
[-26.38869286 299.71936035]
[-18.77370644 286.79605103]
[-11.15871906 273.87274170]
[-3.54373240 260.94943237]
[4.07125473 248.02612305]
[11.68624115 235.10281372]
[19.30122948 222.17950439]
[26.91621590 209.25619507]
[34.53120422 196.33288574]
[34.32630157 181.43968201]
[47.99827957 173.47805786]
[55.61326599 160.55474854]
[63.22825241 147.63143921]
[70.84323883 134.70811462]
[78.45822906 121.78481293]
[70.05529022 106.47612762]
[71.38156128 89.06331635]
[59.10702133 80.44150543]
[46.83248138 71.81969452]
[34.55793762 63.19788361]
[22.28339767 54.57607269]
[10.00885582 45.95426178]
[-2.26568604 37.33245087]
[-14.54022789 28.71063995]
[-26.81476974 20.08882904]
[-42.55479050 18.48811913]
[-48.52225113 4.84118843]
[-60.79679108 -3.78062296]
[-75.85992432 0.41890159]
[-90.07690430 -6.09350681]
[-96.73490906 -20.24288750]
[-92.69023132 -35.34833908]
[-79.85264587 -44.27752304]
[-64.28366852 -42.81435776]
[-53.33448792 -31.64970016]
[-52.17498016 -16.05516434]
[-39.90044022 -7.43335342]
[-25.03837395 -6.44933224]
[-18.19295883 7.81428766]
[-5.91841650 16.43609810]
[6.35612488 25.05790901]
[18.63066673 33.67972183]
[30.90520859 42.30153275]
[43.17974854 50.92334366]
[55.45429230 59.54515457]
[67.72883606 68.16696930]
[80.00337219 76.78878021]
[92.54145813 70.28475189]
[106.66486359 70.09673309]
[119.37164307 76.26467896]
[131.41232300 67.31916809]
[143.45298767 58.37366104]
[155.49366760 49.42815018]
[167.53434753 40.48263931]
[179.57501221 31.53713036]
[184.58612061 23.92103386]
[191.83602905 22.55394745]
[203.99472046 13.76950932]
[207.03105164 7.92778349]
[211.83581543 4.93349934]
[216.59605408 4.91816044]
[228.98426819 -3.53949499]
[241.37249756 -11.99715042]
[253.76071167 -20.45480537]
[266.14892578 -28.91246033]
[271.46011353 -36.32241821]
[278.75881958 -37.39896011]
[291.25854492 -45.69095993]
[303.75823975 -53.98296356]
[316.25796509 -62.27496338]
[318.56695557 -66.91814423]
[322.07031250 -69.92146301]
[325.94796753 -71.10456848]
[329.42639160 -70.63682556]
[342.24719238 -78.42317200]
[355.06799316 -86.20951080]
[367.88879395 -93.99584961]
[380.65750122 -101.86734772]
[393.37350464 -109.82366180]
[406.08950806 -117.77997589]
[418.80554199 -125.73628998]
[431.52154541 -133.69261169]
[444.23757935 -141.64892578]
[451.83242798 -155.52799988]
[466.72579956 -155.71963501]
[479.44180298 -163.67594910]
[492.15783691 -171.63226318]
[478.31048584 -177.39859009]
[474.05374146 -191.78192139]
[482.53253174 -204.15568542]
[497.48266602 -205.37799072]
[507.85876465 -194.54579163]
[505.99490356 -179.66207886]
[519.21191406 -186.75503540]
[532.42895508 -193.84799194]
[545.64599609 -200.94093323]
[558.86303711 -208.03388977]
[572.08007812 -215.12684631]
[585.29711914 -222.21980286]
[598.51416016 -229.31275940]
[607.01525879 -242.65596008]
[621.88842773 -241.85661316]
[635.10546875 -248.94956970]
[648.32250977 -256.04251099]
[661.53955078 -263.13546753]
[674.75653076 -270.22842407]
[682.92858887 -284.44638062]
[699.32598877 -284.20761108]
[707.08056641 -269.75775146]
[698.21502686 -255.96156311]
[681.84948730 -257.01138306]
[668.63250732 -249.91844177]
[655.41546631 -242.82548523]
[642.19842529 -235.73252869]
[628.98138428 -228.63958740]
[621.42559814 -215.80371094]
[605.60711670 -216.09571838]
[592.39007568 -209.00276184]
[579.17303467 -201.90980530]
[565.95599365 -194.81686401]
[552.73895264 -187.72390747]
[539.52191162 -180.63095093]
[526.30487061 -173.53799438]
[513.08782959 -166.44503784]
[500.11413574 -158.91624451]
[487.39813232 -150.95993042]
[474.68209839 -143.00361633]
[467.99679565 -129.69361877]
[452.19387817 -128.93290710]
[439.47787476 -120.97658539]
[426.76184082 -113.02027130]
[414.04583740 -105.06395721]
[401.32983398 -97.10765076]
[388.61380005 -89.15133667]
[384.61755371 -82.94971466]
[375.67514038 -81.17504883]
[362.85433960 -73.38871002]
[350.03353882 -65.60237122]
[337.21273804 -57.81602859]
[324.54995728 -49.77525330]
[312.05026245 -41.48325348]
[299.55053711 -33.19125366]
[287.05084229 -24.89925194]
[274.60659790 -16.52423859]
[262.21838379 -8.06658268]
[249.83015442 0.39107248]
[237.44192505 8.84872818]
[225.05369568 17.30638313]
[212.77915955 25.92819405]
[200.62046814 34.71263504]
[188.52052307 43.57780457]
[176.47985840 52.52331543]
[164.43917847 61.46882629]
[152.39849854 70.41433716]
[140.35783386 79.35984802]
[128.31715393 88.30535889]
[130.58572388 101.77193451]
[126.77721405 114.88645172]
[117.64836121 125.04319000]
[105.01296234 130.22409058]
[91.38153839 129.39979553]
[83.76654816 142.32310486]
[76.15156555 155.24641418]
[68.53657532 168.16972351]
[60.92158890 181.09304810]
[60.58181763 196.91059875]
[47.45451355 203.94787598]
[39.83952713 216.87118530]
[32.22454071 229.79449463]
[24.60955238 242.71780396]
[16.99456596 255.64111328]
[9.37957859 268.56442261]
[1.76459181 281.48773193]
[-5.85039520 294.41104126]
[-13.46538258 307.33435059]
[-13.80515480 323.15191650]
[-26.93245888 330.18917847]
[-34.54744720 343.11248779]
[-42.16243362 356.03579712]
[-49.51786804 369.10858154]
[-56.61082458 382.32562256]
[-63.70377731 395.54266357]
[-70.79673004 408.75970459]
[-77.88968658 421.97671509]
[-63.27866745 418.58288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 38]
[6 37]
[9 34]
[10 33]
[11 32]
[12 30]
[13 29]
[14 28]
[17 26]
[18 25]
[19 24]
[39 234]
[40 233]
[41 232]
[42 231]
[43 230]
[47 229]
[48 228]
[49 227]
[51 225]
[52 224]
[53 223]
[54 222]
[55 221]
[56 220]
[57 219]
[58 218]
[59 217]
[61 215]
[62 214]
[63 213]
[64 212]
[65 211]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[77 87]
[78 86]
[100 206]
[101 205]
[102 204]
[103 203]
[104 202]
[105 201]
[107 200]
[108 199]
[111 198]
[112 197]
[113 196]
[114 195]
[115 194]
[117 193]
[118 192]
[119 191]
[120 190]
[124 189]
[125 188]
[126 187]
[127 186]
[128 184]
[129 183]
[130 182]
[131 181]
[132 180]
[133 179]
[135 177]
[136 176]
[137 175]
[143 174]
[144 173]
[145 172]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
