%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCGGGCAGGCCCCGCCCCCUGUUUCCGCUGGCGGCGGCGGCGGCGGCGGUGCCGGAGCGCGAGCAGAGCGGAGACCCCCAGGUCCUGCGGGCGCGGAAUAUCCUGGAACCUUCUUUUGUUUGUCAGCAGCCAAGGUGUUUCCAGGAAGUUCAGAGAGAACAGAAUUUAAGAAGUGCAAC\
) } def
/len { sequence length } bind def

/coor [
[66.38655853 180.09053040]
[72.22833252 166.27482605]
[80.41117096 153.70338440]
[90.67945862 142.76893616]
[102.71832275 133.80940247]
[89.40004730 140.71037292]
[76.08177185 147.61135864]
[62.76349258 154.51232910]
[56.56532288 161.25529480]
[49.15839767 161.41523743]
[35.72423935 168.08782959]
[25.91075516 183.65609741]
[8.45969200 181.90367126]
[-4.85858679 188.80465698]
[-18.17686462 195.70562744]
[-31.43574524 202.72004700]
[-44.63426208 209.84739685]
[-57.83277893 216.97474670]
[-71.03129578 224.10211182]
[-84.22981262 231.22946167]
[-97.36700439 238.46922302]
[-110.44190979 245.82087708]
[-123.45358276 253.28388977]
[-136.40106201 260.85769653]
[-149.34855652 268.43151855]
[-162.29603577 276.00531006]
[-175.24353027 283.57913208]
[-179.00405884 298.92950439]
[-192.56065369 307.05319214]
[-207.87040710 303.13055420]
[-215.85032654 289.48883057]
[-211.76605225 274.22140503]
[-198.04072571 266.38616943]
[-182.81733704 270.63165283]
[-169.86984253 263.05783081]
[-156.92236328 255.48402405]
[-143.97486877 247.91020203]
[-131.02738953 240.33639526]
[-126.83130646 234.23057556]
[-117.79356384 232.74597168]
[-104.71865845 225.39431763]
[-100.41893768 219.36103821]
[-91.35716248 218.03094482]
[-78.15864563 210.90359497]
[-64.96012878 203.77624512]
[-51.76161575 196.64888000]
[-38.56309891 189.52153015]
[-34.16099930 183.56253052]
[-25.07784081 182.38734436]
[-11.75956249 175.48637390]
[1.55871606 168.58540344]
[5.52459764 157.14160156]
[16.58397865 151.28874207]
[29.05165291 154.65367126]
[42.48580933 147.98107910]
[55.86251450 141.19404602]
[69.18079376 134.29307556]
[82.49906921 127.39210510]
[95.81735229 120.49112701]
[82.12175751 106.34102631]
[86.84519958 89.19210815]
[80.63516235 75.53797150]
[74.42512512 61.88383865]
[68.21508026 48.22970200]
[53.68889236 42.60586548]
[47.58553696 28.67016411]
[53.03652954 14.85632038]
[46.82649231 1.20218539]
[40.61645126 -12.45195007]
[34.40641403 -26.10608482]
[27.99847221 -12.54369926]
[13.93143845 -7.33615208]
[0.23696497 -13.45672226]
[-5.26600933 -27.41083527]
[0.56447136 -41.23130798]
[14.39945984 -47.02726364]
[28.34012032 -41.48914719]
[23.55896568 -55.70676422]
[18.77781296 -69.92437744]
[13.99666023 -84.14199066]
[1.34672546 -94.57804871]
[4.32612610 -110.70426941]
[19.86991119 -115.93139648]
[31.98796463 -104.88219452]
[28.21427536 -88.92314911]
[32.99542999 -74.70552826]
[37.77658081 -60.48791504]
[42.55773544 -46.27030182]
[48.06054688 -32.31612396]
[54.27058792 -18.66198921]
[60.48062515 -5.00785351]
[66.69066620 8.64628124]
[80.68475342 13.61630726]
[87.17712402 27.37507820]
[81.86921692 42.01966476]
[88.07925415 55.67380142]
[94.28929901 69.32793427]
[100.49933624 82.98207092]
[116.60781860 90.83372498]
[118.01453400 110.62343597]
[132.06062317 105.35966492]
[146.10671997 100.09589386]
[160.15281677 94.83212280]
[170.36021423 82.74414062]
[184.99327087 85.52316284]
[199.03936768 80.25939178]
[213.08546448 74.99562073]
[227.13154602 69.73184967]
[241.17764282 64.46807861]
[255.22373962 59.20431137]
[269.26983643 53.94054031]
[283.17651367 48.31880188]
[296.93469238 42.34278488]
[310.69287109 36.36676788]
[324.45101929 30.39075279]
[338.20919800 24.41473579]
[341.68148804 11.38619518]
[351.87963867 2.86657596]
[364.92993164 1.79960024]
[376.04095459 8.35185242]
[389.89913940 2.61160135]
[403.75732422 -3.12865019]
[417.61550903 -8.86890125]
[431.47372437 -14.60915279]
[441.02218628 -27.94178009]
[457.31411743 -26.06981659]
[463.58981323 -10.91898060]
[453.39334106 1.92484868]
[437.21395874 -0.75096011]
[423.35577393 4.98929119]
[409.49758911 10.72954273]
[395.63937378 16.46979523]
[381.78118896 22.21004677]
[376.02545166 38.00082016]
[360.32559204 44.88917160]
[344.18521118 38.17290497]
[330.42703247 44.14892197]
[316.66888428 50.12493896]
[302.91070557 56.10095596]
[289.15252686 62.07697296]
[287.52459717 65.22998047]
[284.27615356 67.74263763]
[279.72888184 68.85629272]
[274.53359985 67.98663330]
[260.48751831 73.25040436]
[246.44140625 78.51417542]
[232.39532471 83.77794647]
[218.34922791 89.04171753]
[204.30313110 94.30548859]
[190.25704956 99.56925964]
[181.05430603 111.28074646]
[165.41658020 108.87821960]
[151.37048340 114.14199066]
[137.32440186 119.40576172]
[123.27830505 124.66953278]
[137.98855591 121.73550415]
[152.98558044 121.43710327]
[167.80090332 123.78366089]
[181.97169495 128.70185852]
[195.05528259 136.03805542]
[206.64292908 145.56309509]
[216.37266541 156.97941589]
[223.94053650 169.93037415]
[229.11013794 184.01139832]
[231.71997070 198.78260803]
[231.68849182 213.78257751]
[229.01670837 228.54270935]
[223.78807068 242.60191345]
[216.16592407 255.52101135]
[206.38836670 266.89639282]
[194.76084900 276.37271118]
[181.64660645 283.65396118]
[167.45530701 288.51266479]
[152.63026428 290.79702759]
[137.63461304 290.43569946]
[122.93680573 287.43997192]
[108.99597931 281.90344238]
[96.24763489 273.99902344]
[85.09001160 263.97369385]
[75.87167358 252.14059448]
[68.88058472 238.86938477]
[64.33513641 224.57467651]
[62.37733841 209.70298767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[10 55]
[11 54]
[13 51]
[14 50]
[15 49]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 41]
[22 40]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[61 98]
[62 97]
[63 96]
[64 95]
[67 92]
[68 91]
[69 90]
[70 89]
[77 88]
[78 87]
[79 86]
[80 85]
[100 155]
[101 154]
[102 153]
[103 152]
[105 150]
[106 149]
[107 148]
[108 147]
[109 146]
[110 145]
[111 144]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
