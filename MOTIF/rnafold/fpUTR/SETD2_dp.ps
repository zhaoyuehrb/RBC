%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SETD2)
} def

/sequence { (\
GCGUCGCCCUGCUGCGGGGAGGGGGCUCGCGUCGCCGUCUCCAGCCGCUCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.140452458 ubox
1 12 0.759489426 ubox
1 15 0.068910256 ubox
1 26 0.003639151 ubox
1 30 0.010193662 ubox
1 35 0.003960717 ubox
1 45 0.014518039 ubox
1 48 0.280060305 ubox
2 6 0.139890861 ubox
2 11 0.760710690 ubox
2 14 0.069041551 ubox
2 16 0.147678751 ubox
2 25 0.003644982 ubox
2 29 0.010200423 ubox
2 34 0.003973809 ubox
2 44 0.014535833 ubox
2 47 0.280513169 ubox
2 53 0.096466007 ubox
3 10 0.598719157 ubox
3 12 0.096991162 ubox
3 13 0.056617430 ubox
3 15 0.150070022 ubox
3 26 0.003806294 ubox
3 28 0.010013643 ubox
3 33 0.003973024 ubox
3 45 0.012742676 ubox
3 46 0.278494610 ubox
3 48 0.033416809 ubox
3 52 0.103266723 ubox
4 11 0.089005494 ubox
4 14 0.147868219 ubox
4 17 0.078404855 ubox
4 20 0.013562921 ubox
4 23 0.003571708 ubox
4 25 0.003976872 ubox
4 44 0.016497142 ubox
4 47 0.011765319 ubox
5 11 0.054271182 ubox
5 14 0.016949319 ubox
5 16 0.143970238 ubox
5 19 0.014448573 ubox
5 21 0.005507462 ubox
5 22 0.003740559 ubox
5 24 0.004040223 ubox
5 31 0.003967996 ubox
5 47 0.037977636 ubox
5 53 0.113489350 ubox
6 10 0.034302058 ubox
6 12 0.238826004 ubox
6 13 0.010858108 ubox
6 15 0.146272391 ubox
6 26 0.009460509 ubox
6 30 0.003951133 ubox
6 45 0.025461212 ubox
6 46 0.039514456 ubox
6 48 0.293027287 ubox
6 52 0.123234700 ubox
7 11 0.237357962 ubox
7 14 0.145879010 ubox
7 17 0.007345138 ubox
7 18 0.017936086 ubox
7 19 0.036703543 ubox
7 23 0.005364934 ubox
7 25 0.009440293 ubox
7 29 0.003924790 ubox
7 44 0.025297434 ubox
7 47 0.293277273 ubox
8 16 0.007392572 ubox
8 17 0.030742215 ubox
8 18 0.037568107 ubox
8 22 0.005422400 ubox
8 24 0.009412157 ubox
8 25 0.003795146 ubox
9 16 0.030805916 ubox
9 17 0.038844373 ubox
9 21 0.005434703 ubox
9 23 0.009380973 ubox
9 24 0.003820319 ubox
9 44 0.003323986 ubox
10 16 0.038723716 ubox
10 20 0.005437518 ubox
10 22 0.008799460 ubox
10 23 0.003829467 ubox
10 43 0.003750359 ubox
10 47 0.010868862 ubox
10 53 0.041410970 ubox
11 15 0.037060985 ubox
11 45 0.399247356 ubox
11 46 0.012890900 ubox
11 48 0.253676678 ubox
11 52 0.072921774 ubox
12 18 0.005280870 ubox
12 19 0.006288373 ubox
12 21 0.008091317 ubox
12 44 0.399669743 ubox
12 47 0.253872106 ubox
13 17 0.004764635 ubox
13 18 0.006182840 ubox
13 20 0.008093711 ubox
13 43 0.398293825 ubox
13 47 0.006516932 ubox
13 53 0.008706106 ubox
14 42 0.389660866 ubox
14 45 0.262183417 ubox
14 46 0.010292672 ubox
14 48 0.845889910 ubox
14 52 0.004884509 ubox
15 44 0.262368307 ubox
15 47 0.847338006 ubox
15 53 0.013037759 ubox
16 40 0.013128600 ubox
16 41 0.386344170 ubox
16 42 0.234364939 ubox
16 46 0.847511103 ubox
16 51 0.004470073 ubox
16 52 0.016962025 ubox
17 39 0.013337194 ubox
17 40 0.386145234 ubox
17 41 0.239565554 ubox
17 42 0.024790804 ubox
17 45 0.843085875 ubox
17 46 0.009208752 ubox
17 50 0.004528255 ubox
17 51 0.016345957 ubox
17 52 0.192436704 ubox
18 38 0.012016640 ubox
18 39 0.386328992 ubox
18 40 0.240044364 ubox
18 41 0.022209667 ubox
18 42 0.862860184 ubox
18 45 0.009506533 ubox
18 50 0.013995009 ubox
18 51 0.192746086 ubox
18 52 0.009121129 ubox
19 38 0.376140192 ubox
19 39 0.241205408 ubox
19 40 0.006531886 ubox
19 41 0.867514952 ubox
19 49 0.006223994 ubox
19 50 0.192799635 ubox
19 51 0.009115581 ubox
20 38 0.239028618 ubox
20 40 0.867513819 ubox
20 49 0.189344296 ubox
21 36 0.412067285 ubox
21 39 0.867538072 ubox
21 42 0.021245563 ubox
21 48 0.173777814 ubox
21 49 0.037678553 ubox
21 50 0.005727648 ubox
21 52 0.038151880 ubox
22 35 0.412154896 ubox
22 36 0.195002548 ubox
22 38 0.858775953 ubox
22 39 0.004315723 ubox
22 41 0.021900448 ubox
22 42 0.011567445 ubox
22 46 0.023193279 ubox
22 48 0.083854642 ubox
22 49 0.005808135 ubox
22 51 0.038261919 ubox
22 52 0.004032692 ubox
23 33 0.004676612 ubox
23 35 0.194886716 ubox
23 36 0.009061365 ubox
23 38 0.005039246 ubox
23 40 0.021917261 ubox
23 41 0.011599180 ubox
23 42 0.003171368 ubox
23 45 0.022962647 ubox
23 46 0.130558337 ubox
23 48 0.006418810 ubox
23 50 0.038261338 ubox
23 51 0.004033851 ubox
23 52 0.004012457 ubox
24 32 0.004086258 ubox
24 33 0.455345223 ubox
24 35 0.008266337 ubox
24 36 0.867540202 ubox
24 39 0.022612322 ubox
24 40 0.010976242 ubox
24 41 0.004063366 ubox
24 42 0.015944340 ubox
24 45 0.106772580 ubox
24 46 0.139865893 ubox
24 49 0.038018506 ubox
24 50 0.004010447 ubox
24 51 0.004029789 ubox
25 32 0.455322593 ubox
25 35 0.867608664 ubox
25 38 0.023048681 ubox
25 39 0.011475466 ubox
25 40 0.004724933 ubox
25 41 0.017167586 ubox
25 45 0.158457822 ubox
25 48 0.038096917 ubox
25 50 0.004029472 ubox
26 31 0.454865222 ubox
26 34 0.866748389 ubox
26 37 0.023230081 ubox
26 44 0.175022735 ubox
26 47 0.038023854 ubox
27 43 0.168227462 ubox
28 34 0.026894137 ubox
28 37 0.041099250 ubox
29 33 0.053205271 ubox
29 35 0.027621151 ubox
29 36 0.037596408 ubox
29 38 0.179309811 ubox
29 45 0.036999521 ubox
29 48 0.007043759 ubox
30 34 0.030968550 ubox
30 37 0.183181208 ubox
30 44 0.037066925 ubox
30 47 0.007077576 ubox
31 36 0.177693981 ubox
31 38 0.004603978 ubox
31 46 0.007059230 ubox
31 48 0.006086698 ubox
32 37 0.003252793 ubox
32 47 0.005892673 ubox
34 45 0.010696321 ubox
34 48 0.007603674 ubox
35 44 0.010778571 ubox
35 47 0.007536743 ubox
37 45 0.008835020 ubox
38 44 0.008663532 ubox
43 49 0.004162156 ubox
44 48 0.004365466 ubox
46 53 0.017671498 ubox
47 52 0.018057977 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
showpage
end
%%EOF
