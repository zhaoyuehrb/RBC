%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUCGCUGAGCCUAUCGGCGAGUAAGCCGAGCCUGCGGGCGCGGUGUUUACUUCUCGCGAGUCGGAGGUGCUGCGCUGUUCUCGCGAGACGAGGAAGCGGUUCCGCGGCCCGGCACGUGUCUUAGGGUAGCGCGCGCCUGUCUCUCUUCGGGUCUCGGGCCCUUGGGCGCAGCGGGGCGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[117.31950378 111.28348541]
[98.74580383 119.11130524]
[91.98065186 132.49908447]
[92.66232300 148.30560303]
[80.01651001 156.17532349]
[73.25135803 169.56311035]
[66.48620605 182.95089722]
[59.72105408 196.33866882]
[52.95590210 209.72645569]
[46.19075012 223.11424255]
[39.42559814 236.50202942]
[43.04798126 252.13078308]
[32.97489548 264.61727905]
[16.93355370 264.38293457]
[7.22949982 251.60752869]
[11.30685234 236.09126282]
[26.03781700 229.73687744]
[32.80296707 216.34909058]
[39.56811905 202.96130371]
[46.33327103 189.57351685]
[53.09842300 176.18574524]
[59.86357498 162.79795837]
[66.62873077 149.41017151]
[65.46317291 134.56124878]
[78.59287262 125.73393250]
[85.35802460 112.34615326]
[78.91603851 103.83556366]
[77.65457153 92.07966614]
[63.40429306 96.76257324]
[49.15401840 101.44548035]
[34.90373993 106.12838745]
[24.20886040 117.78729248]
[9.70217991 114.41009521]
[-4.54809666 119.09300232]
[-18.79837227 123.77590942]
[-29.32148933 136.35351562]
[-45.42676926 133.26287842]
[-50.54647827 117.68338013]
[-39.41390610 105.64187622]
[-23.48127937 109.52562714]
[-9.23100376 104.84272003]
[5.01927280 100.15981293]
[14.69487858 88.83586121]
[30.22083473 91.87811279]
[44.47111130 87.19520569]
[58.72138596 82.51229858]
[72.97166443 77.82939148]
[77.29594421 63.46622086]
[67.99969482 51.69422913]
[58.70344543 39.92224121]
[43.25365448 37.93687057]
[33.99363327 25.86596680]
[35.98159027 11.14918804]
[26.68534279 -0.62280297]
[17.19368553 -12.23781109]
[7.50926733 -23.69259453]
[-2.17515063 -35.14737701]
[-11.85956860 -46.60216141]
[-21.54398537 -58.05694199]
[-31.22840309 -69.51172638]
[-40.91282272 -80.96650696]
[-50.59724045 -92.42129517]
[-60.28165817 -103.87607574]
[-72.54146576 -101.31999969]
[-84.65261078 -104.21000671]
[-94.32438660 -111.93623352]
[-99.75446320 -122.98016357]
[-99.96458435 -135.21278381]
[-94.97627258 -146.30490112]
[-104.27252197 -158.07688904]
[-113.56877136 -169.84887695]
[-122.86502075 -181.62086487]
[-137.42648315 -190.30419922]
[-133.11352539 -206.70037842]
[-116.16416168 -207.09487915]
[-111.09302521 -190.91711426]
[-101.79677582 -179.14512634]
[-92.50053406 -167.37313843]
[-83.20428467 -155.60115051]
[-65.62704468 -157.13717651]
[-50.50543594 -147.74459839]
[-43.97795868 -131.01469421]
[-48.82687378 -113.56049347]
[-39.14245605 -102.10571289]
[-29.45803833 -90.65092468]
[-19.77362061 -79.19614410]
[-10.08920288 -67.74136353]
[-0.40478548 -56.28657913]
[9.27963257 -44.83179474]
[18.96405029 -33.37701035]
[28.64846802 -21.92222977]
[33.26722717 -20.63798904]
[37.12057877 -16.42680359]
[38.45733261 -9.91905117]
[47.75358200 1.85293949]
[62.53030777 3.33078027]
[72.12571716 15.13682461]
[70.47543335 30.62599182]
[79.77168274 42.39798355]
[89.06793213 54.16997528]
[102.22218323 61.37870026]
[117.14685059 62.88013458]
[132.07151794 64.38156891]
[142.54666138 56.83373642]
[154.95782471 58.40392685]
[162.70889282 67.70711517]
[177.60638428 69.45772552]
[192.50387573 71.20834351]
[207.40136719 72.95895386]
[222.01023865 66.88511658]
[233.74754333 76.05490875]
[248.64503479 77.80552673]
[263.54254150 79.55613708]
[278.44003296 81.30675507]
[286.17474365 72.24721527]
[297.21273804 68.09756470]
[308.76260376 69.78328705]
[317.96292114 76.76957703]
[322.59112549 87.22309875]
[337.42181396 89.47052765]
[352.25250244 91.71796417]
[367.08319092 93.96540070]
[381.91384888 96.21283722]
[396.74453735 98.46027374]
[411.54818726 92.87798309]
[422.97253418 102.43486023]
[437.80322266 104.68229675]
[452.63388062 106.92973328]
[467.46456909 109.17716980]
[482.29525757 111.42459869]
[493.13546753 104.41117096]
[505.45236206 106.60131836]
[512.72747803 116.28123474]
[527.51855469 118.77616882]
[537.53271484 109.75112915]
[550.72467041 108.17099762]
[562.24432373 114.39075470]
[567.98620605 125.93881226]
[582.73352051 128.68055725]
[597.48083496 131.42230225]
[612.22814941 134.16404724]
[626.97540283 136.90580750]
[638.14398193 126.13349152]
[653.51599121 124.01657867]
[667.18054199 131.36904907]
[673.88342285 145.36373901]
[671.04718018 160.61941528]
[659.76239014 171.26992798]
[644.36834717 173.21995544]
[630.78430176 165.71968079]
[624.23370361 151.65310669]
[609.48638916 148.91134644]
[594.73907471 146.16960144]
[579.99176025 143.42785645]
[565.24450684 140.68611145]
[551.80926514 150.78721619]
[534.89086914 148.00067139]
[525.02362061 133.56723022]
[510.23254395 131.07228088]
[494.15234375 138.07920837]
[480.04782104 126.25527954]
[465.21713257 124.00784302]
[450.38644409 121.76040649]
[435.55578613 119.51296997]
[420.72509766 117.26553345]
[406.98220825 123.00858307]
[394.49710083 113.29095459]
[379.66641235 111.04351807]
[364.83575439 108.79608154]
[350.00506592 106.54864502]
[335.17437744 104.30120850]
[320.34371948 102.05377197]
[306.30599976 113.78118134]
[287.83508301 111.50460815]
[276.68942261 96.20424652]
[261.79190063 94.45363617]
[246.89442444 92.70301819]
[231.99691772 90.95240784]
[218.45362854 97.15146637]
[205.65075684 87.85645294]
[190.75326538 86.10583496]
[175.85577393 84.35522461]
[160.95828247 82.60460663]
[145.24938965 90.40851593]
[130.57008362 79.30623627]
[115.64540863 77.80480194]
[100.72074890 76.30336761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[28 47]
[29 46]
[30 45]
[31 44]
[33 42]
[34 41]
[35 40]
[48 100]
[49 99]
[50 98]
[53 95]
[54 94]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[69 79]
[70 78]
[71 77]
[72 76]
[101 187]
[102 186]
[103 185]
[106 183]
[107 182]
[108 181]
[109 180]
[111 178]
[112 177]
[113 176]
[114 175]
[119 172]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[126 165]
[127 164]
[128 163]
[129 162]
[130 161]
[133 159]
[134 158]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
