%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAAGCGCAGUGCGCAGGCGCAACUGCCUGGCUCUGCUCGCUCCGGCGCUCCGGCCCAGCUCUCGCGGACAAGUCCAGACAUCGCGCGCCCCCCCUUCUCCGGGUCCGCCCCCUCCCCCUUCUCGGCGUCGUCGAAGAUAAACAAUAGUUGGCCGGCGAGCGCCUAGUGUGUCUCCCGCCGCCGGAUUCGGCGGGCUGCGUGGGACCGGCGGGAUCCCGGCCAGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[269.18600464 557.88391113]
[268.26977539 552.77612305]
[258.59356689 541.31439209]
[248.91737366 529.85266113]
[239.24118042 518.39093018]
[225.11888123 513.65704346]
[222.12884521 498.12094116]
[212.45265198 486.65921021]
[197.45809937 487.06365967]
[188.41383362 499.03033447]
[179.36956787 510.99700928]
[170.32530212 522.96368408]
[168.17712402 538.63836670]
[154.33055115 544.12670898]
[145.28628540 556.09338379]
[142.61470032 564.81195068]
[136.03852844 568.15930176]
[126.83374023 580.00292969]
[117.62895203 591.84661865]
[108.42416382 603.69024658]
[99.21937561 615.53387451]
[101.43381500 631.18225098]
[91.86795044 643.76281738]
[76.19702911 645.81164551]
[63.71833801 636.11334229]
[61.83526230 620.42163086]
[71.66499329 608.04614258]
[87.37573242 606.32910156]
[96.58052063 594.48547363]
[105.78530884 582.64178467]
[114.99009705 570.79815674]
[124.19488525 558.95452881]
[133.31961060 547.04907227]
[142.36387634 535.08239746]
[143.86515808 520.26367188]
[158.35862732 513.91943359]
[167.40289307 501.95272827]
[176.44715881 489.98605347]
[185.49142456 478.01937866]
[180.49540710 457.26031494]
[191.68028259 442.35522461]
[187.48959351 427.95251465]
[183.29890442 413.54980469]
[179.10821533 399.14709473]
[168.66703796 393.05810547]
[165.05189514 381.10534668]
[170.71977234 369.53042603]
[166.72364807 355.07250977]
[162.72752380 340.61462402]
[158.73139954 326.15670776]
[154.73529053 311.69879150]
[150.73916626 297.24090576]
[146.54846191 282.83819580]
[142.16397095 268.49328613]
[137.77946472 254.14839172]
[133.39495850 239.80348206]
[129.01046753 225.45858765]
[124.62596130 211.11369324]
[119.67263031 205.64418030]
[120.28045654 196.54574585]
[116.08976746 182.14303589]
[111.89907074 167.74032593]
[107.70838165 153.33761597]
[87.89131165 155.39485168]
[67.68752289 149.97805786]
[49.93995667 137.12670898]
[37.38989258 117.96321106]
[32.26658630 94.61544037]
[35.92307663 69.98554993]
[22.17368126 63.98937607]
[8.42428493 57.99320221]
[-7.80191183 60.36861420]
[-17.75852966 47.33796692]
[-11.20305538 32.30607224]
[5.12080336 30.73645973]
[14.42045879 44.24380875]
[28.16985512 50.23998260]
[41.91925049 56.23615265]
[47.02231216 50.73990250]
[36.02980804 40.53378296]
[22.42146492 34.22403336]
[24.21720695 19.33191109]
[38.93537521 16.43786812]
[46.23593140 29.54128075]
[57.22843170 39.74740219]
[62.33149338 34.25114822]
[55.33310699 20.98379898]
[48.33472443 7.71644640]
[35.05256653 -0.87976342]
[35.95811081 -15.74681568]
[28.95972633 -29.01416779]
[21.96134186 -42.28152084]
[14.96295834 -55.54887009]
[-0.38758257 -56.05529022]
[-13.41984749 -64.18275452]
[-20.62822151 -77.74501038]
[-20.07369041 -93.09389496]
[-11.90541744 -106.10061646]
[1.67937136 -113.26644135]
[17.02643585 -112.66380310]
[30.00749397 -104.45480347]
[37.13070679 -90.84761810]
[36.47996140 -75.50251770]
[28.23031044 -62.54725647]
[35.22869492 -49.27990341]
[42.22707748 -36.01255035]
[49.22546005 -22.74519920]
[62.00704956 -15.09795952]
[61.60207748 0.71806270]
[68.60046387 13.98541451]
[75.59884644 27.25276566]
[83.09271240 26.94947624]
[82.48612976 11.96174622]
[81.87954712 -3.02598429]
[81.27297211 -18.01371384]
[76.06478882 -32.08051300]
[87.83380890 -41.38051987]
[100.31536865 -33.06122208]
[96.26069641 -18.62029457]
[96.86727905 -3.63256407]
[97.47386169 11.35516644]
[98.08043671 26.34289742]
[105.57430267 26.03960609]
[111.47764587 12.25009918]
[117.38099670 -1.53940856]
[123.19123840 -15.36840057]
[128.90812683 -29.23624802]
[134.62501526 -43.10409546]
[140.34190369 -56.97194290]
[140.78862000 -73.92000580]
[157.19801331 -78.18243408]
[165.83642578 -63.59428787]
[154.20974731 -51.25505829]
[148.49285889 -37.38721085]
[142.77597046 -23.51936150]
[137.05909729 -9.65151405]
[137.41514587 -2.28101850]
[131.17050171 4.36393595]
[125.26715851 18.15344429]
[119.36381531 31.94295120]
[135.91613770 41.22029114]
[148.98416138 54.27360535]
[157.78366089 69.93754578]
[161.89279175 86.90949249]
[161.26669312 103.85633850]
[156.22209167 119.51867676]
[147.39433289 132.80439758]
[135.67135620 142.86465454]
[122.11109161 149.14692688]
[126.30178070 163.54963684]
[130.49247742 177.95234680]
[134.68316650 192.35505676]
[138.97085571 206.72918701]
[143.35536194 221.07408142]
[147.73986816 235.41899109]
[152.12435913 249.76388550]
[156.50886536 264.10879517]
[160.89337158 278.45367432]
[165.44271851 283.21688843]
[166.72320557 288.73400879]
[165.19706726 293.24478149]
[169.19319153 307.70266724]
[173.18931580 322.16058350]
[177.18544006 336.61849976]
[181.18154907 351.07638550]
[185.17767334 365.53430176]
[198.59736633 378.15390015]
[193.51092529 394.95639038]
[197.70161438 409.35910034]
[201.89230347 423.76181030]
[206.08299255 438.16452026]
[226.37533569 450.08871460]
[223.91438293 476.98300171]
[233.59057617 488.44473267]
[248.40498352 493.99847412]
[250.70289612 508.71475220]
[260.37908936 520.17645264]
[270.05529785 531.63818359]
[279.73150635 543.09991455]
[289.63751221 554.36364746]
[299.76928711 565.42468262]
[309.90109253 576.48571777]
[322.28109741 584.95544434]
[336.26171875 590.39068604]
[350.24234009 595.82592773]
[364.22296143 601.26123047]
[380.33984375 598.23156738]
[390.81524658 610.84893799]
[384.87301636 626.13360596]
[368.62597656 628.36206055]
[358.78768921 615.24182129]
[344.80706787 609.80657959]
[330.82644653 604.37133789]
[316.84582520 598.93603516]
[307.32461548 610.52770996]
[297.80426025 622.11834717]
[305.85189819 634.77673340]
[313.89953613 647.43518066]
[321.94717407 660.09356689]
[329.99484253 672.75201416]
[345.16171265 676.30212402]
[353.14285278 689.25421143]
[349.66485596 703.69165039]
[357.71249390 716.35003662]
[365.76013184 729.00848389]
[373.80780029 741.66687012]
[381.85543823 754.32525635]
[389.98825073 766.92913818]
[398.20581055 779.47790527]
[413.08172607 786.38000488]
[414.27258301 802.73590088]
[400.55331421 811.71997070]
[386.03713989 804.09020996]
[385.65707397 787.69549561]
[377.43948364 775.14672852]
[371.15530396 771.27886963]
[369.19702148 762.37292480]
[361.14938354 749.71453857]
[353.10174561 737.05609131]
[345.05407715 724.39770508]
[337.00643921 711.73925781]
[322.45736694 708.76263428]
[314.11560059 696.03985596]
[317.33642578 680.79962158]
[309.28878784 668.14123535]
[301.24111938 655.48278809]
[293.19348145 642.82440186]
[285.14584351 630.16601562]
[298.84002686 586.61749268]
[288.70825195 575.55645752]
[278.57644653 564.49542236]
[275.10415649 563.97222900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[7 174]
[8 173]
[9 39]
[10 38]
[11 37]
[12 36]
[14 34]
[15 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[41 171]
[42 170]
[43 169]
[44 168]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[60 152]
[61 151]
[62 150]
[63 149]
[69 78]
[70 77]
[71 76]
[86 111]
[87 110]
[88 109]
[90 107]
[91 106]
[92 105]
[93 104]
[123 140]
[124 139]
[125 138]
[126 136]
[127 135]
[128 134]
[129 133]
[180 231]
[181 230]
[182 229]
[183 194]
[184 193]
[185 192]
[186 191]
[196 228]
[197 227]
[198 226]
[199 225]
[200 224]
[203 221]
[204 220]
[205 219]
[206 218]
[207 217]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
