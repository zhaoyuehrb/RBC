%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHTF18)
} def

/sequence { (\
GCAGUGCGCGACGGCGGCGGCGGCGCGGGAGGUUCGGAGCGGGAGCUCGGGCUCGCGGACGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.028488245 ubox
1 9 0.042730176 ubox
1 15 0.042571388 ubox
1 18 0.130630236 ubox
1 21 0.602817020 ubox
1 24 0.295890607 ubox
1 26 0.033684353 ubox
1 33 0.025212966 ubox
1 56 0.042453586 ubox
1 63 0.452262600 ubox
2 6 0.028691401 ubox
2 8 0.042749109 ubox
2 14 0.042468249 ubox
2 17 0.130592102 ubox
2 20 0.604752468 ubox
2 23 0.296748875 ubox
2 25 0.034438365 ubox
2 32 0.027600482 ubox
2 55 0.042443311 ubox
2 62 0.500866675 ubox
3 53 0.008937272 ubox
4 12 0.042411028 ubox
4 15 0.036194626 ubox
4 18 0.518911925 ubox
4 21 0.262483845 ubox
4 24 0.023556918 ubox
4 26 0.106649396 ubox
4 52 0.008963353 ubox
4 56 0.006814534 ubox
4 60 0.644479807 ubox
5 11 0.042582273 ubox
5 13 0.005193979 ubox
5 14 0.035554118 ubox
5 16 0.115982882 ubox
5 17 0.487688743 ubox
5 19 0.260699622 ubox
5 20 0.210055379 ubox
5 22 0.050822569 ubox
5 23 0.019659431 ubox
5 25 0.110121466 ubox
5 27 0.066821239 ubox
5 51 0.008581497 ubox
5 55 0.006691885 ubox
5 57 0.009547810 ubox
5 59 0.646341337 ubox
5 61 0.007165745 ubox
6 12 0.006682531 ubox
6 15 0.148935280 ubox
6 18 0.335294752 ubox
6 21 0.063040567 ubox
6 24 0.114634785 ubox
6 26 0.127258564 ubox
6 54 0.005328106 ubox
6 56 0.011990658 ubox
6 60 0.009105489 ubox
6 63 0.007990395 ubox
7 13 0.021515156 ubox
7 14 0.148932604 ubox
7 16 0.647243987 ubox
7 17 0.246272560 ubox
7 19 0.161386071 ubox
7 20 0.046760969 ubox
7 22 0.035649118 ubox
7 23 0.112373774 ubox
7 25 0.130343245 ubox
7 27 0.041480915 ubox
7 49 0.006056759 ubox
7 55 0.011893892 ubox
7 57 0.647569535 ubox
7 61 0.005543251 ubox
7 62 0.008576697 ubox
8 12 0.021486496 ubox
8 15 0.693763486 ubox
8 18 0.168929794 ubox
8 21 0.042530810 ubox
8 24 0.130569029 ubox
8 26 0.046373310 ubox
8 54 0.008870708 ubox
8 56 0.647251953 ubox
8 60 0.005424339 ubox
8 63 0.003235436 ubox
9 14 0.693799935 ubox
9 16 0.094645485 ubox
9 17 0.166199414 ubox
9 19 0.016684339 ubox
9 20 0.042153764 ubox
9 22 0.116794854 ubox
9 23 0.123106390 ubox
9 25 0.046526990 ubox
9 27 0.030740111 ubox
9 55 0.646697179 ubox
9 61 0.010094118 ubox
9 62 0.003384296 ubox
10 15 0.098326154 ubox
10 18 0.017373776 ubox
10 21 0.120625583 ubox
10 24 0.045198287 ubox
10 26 0.092144769 ubox
10 34 0.005514099 ubox
10 54 0.626909890 ubox
10 60 0.010170228 ubox
11 33 0.021131322 ubox
11 53 0.428503712 ubox
12 19 0.174052009 ubox
12 22 0.063128294 ubox
12 25 0.407713071 ubox
12 27 0.188117382 ubox
12 32 0.028274392 ubox
12 36 0.008903132 ubox
12 49 0.012178741 ubox
12 61 0.009757039 ubox
13 18 0.174786583 ubox
13 21 0.050937691 ubox
13 24 0.421709911 ubox
13 26 0.165030220 ubox
13 34 0.004864695 ubox
13 35 0.008915258 ubox
13 48 0.008966777 ubox
13 53 0.121781760 ubox
13 54 0.004680875 ubox
13 60 0.009813812 ubox
14 21 0.111493582 ubox
14 24 0.136808761 ubox
14 26 0.297418937 ubox
14 33 0.008100267 ubox
14 34 0.007273727 ubox
14 46 0.006236670 ubox
14 52 0.201453678 ubox
14 56 0.005914677 ubox
15 20 0.118183714 ubox
15 22 0.424767556 ubox
15 23 0.129146331 ubox
15 25 0.311082091 ubox
15 27 0.157134687 ubox
15 32 0.009049211 ubox
15 45 0.006265951 ubox
15 49 0.043237796 ubox
15 51 0.201400285 ubox
15 55 0.006180228 ubox
15 61 0.010196532 ubox
16 21 0.425465055 ubox
16 24 0.247356543 ubox
16 26 0.149626326 ubox
16 47 0.012334350 ubox
16 48 0.037235733 ubox
16 53 0.003313956 ubox
16 54 0.005958617 ubox
16 60 0.012251008 ubox
17 24 0.252181401 ubox
17 26 0.284983334 ubox
17 33 0.003973655 ubox
17 46 0.033094264 ubox
17 47 0.008969401 ubox
17 52 0.005302046 ubox
17 56 0.013623198 ubox
17 63 0.035142651 ubox
18 23 0.314929010 ubox
18 25 0.291176105 ubox
18 27 0.018654961 ubox
18 32 0.004068898 ubox
18 36 0.004555249 ubox
18 45 0.033262172 ubox
18 49 0.054033850 ubox
18 51 0.005278979 ubox
18 55 0.013671753 ubox
18 57 0.009178226 ubox
18 61 0.072253713 ubox
18 62 0.036313155 ubox
19 24 0.289993668 ubox
19 26 0.018736899 ubox
19 35 0.004596225 ubox
19 47 0.041366735 ubox
19 48 0.053333124 ubox
19 54 0.013526029 ubox
19 56 0.007819785 ubox
19 60 0.076831953 ubox
20 26 0.021776960 ubox
20 33 0.004288032 ubox
20 34 0.003602968 ubox
20 40 0.005422660 ubox
20 46 0.068544807 ubox
20 47 0.006490781 ubox
20 53 0.006750877 ubox
20 56 0.050234022 ubox
20 63 0.081847718 ubox
21 25 0.021773484 ubox
21 27 0.009224846 ubox
21 32 0.004682672 ubox
21 36 0.009129126 ubox
21 39 0.005534037 ubox
21 41 0.018546805 ubox
21 45 0.068775454 ubox
21 55 0.050596187 ubox
21 61 0.238852886 ubox
21 62 0.083323945 ubox
22 26 0.009312866 ubox
22 34 0.009892034 ubox
22 35 0.009459108 ubox
22 40 0.017866329 ubox
22 53 0.065450903 ubox
22 54 0.050269543 ubox
22 60 0.346650974 ubox
23 33 0.015641184 ubox
23 34 0.008238167 ubox
23 40 0.024622525 ubox
23 52 0.107661029 ubox
23 53 0.022913831 ubox
23 56 0.026051791 ubox
23 63 0.028994348 ubox
24 32 0.016397455 ubox
24 36 0.003554282 ubox
24 39 0.025151022 ubox
24 41 0.070023659 ubox
24 51 0.107880152 ubox
24 55 0.026129033 ubox
24 57 0.602471965 ubox
24 61 0.135848347 ubox
24 62 0.026452428 ubox
25 33 0.040832619 ubox
25 35 0.003350504 ubox
25 40 0.070193866 ubox
25 52 0.093174359 ubox
25 54 0.025506279 ubox
25 56 0.620208373 ubox
25 60 0.138752632 ubox
25 63 0.004837911 ubox
26 32 0.054103204 ubox
26 36 0.077708343 ubox
26 39 0.070074606 ubox
26 49 0.103884602 ubox
26 51 0.094837468 ubox
26 55 0.620224110 ubox
26 57 0.392345663 ubox
26 61 0.008556798 ubox
26 62 0.004505772 ubox
27 34 0.016225408 ubox
27 35 0.082449310 ubox
27 48 0.090582834 ubox
27 53 0.007767559 ubox
27 54 0.616366311 ubox
27 56 0.421856968 ubox
27 60 0.008248420 ubox
28 33 0.020051525 ubox
28 34 0.076779403 ubox
28 35 0.034461510 ubox
28 47 0.071530101 ubox
28 48 0.012225216 ubox
28 52 0.017747878 ubox
28 53 0.518835247 ubox
28 54 0.035289535 ubox
29 33 0.050051840 ubox
29 34 0.028132686 ubox
29 35 0.060242034 ubox
29 46 0.063360188 ubox
29 47 0.006640535 ubox
29 48 0.177161036 ubox
29 52 0.477919741 ubox
29 53 0.022387629 ubox
29 54 0.449902884 ubox
30 34 0.052603741 ubox
30 47 0.181334052 ubox
30 53 0.438586011 ubox
31 46 0.182472345 ubox
31 47 0.049338636 ubox
31 48 0.014074499 ubox
31 52 0.371558491 ubox
31 53 0.535084768 ubox
31 54 0.030054654 ubox
32 40 0.015096274 ubox
32 46 0.060843449 ubox
32 52 0.722399774 ubox
32 53 0.018627725 ubox
32 60 0.086115095 ubox
33 39 0.014955133 ubox
33 42 0.008311812 ubox
33 43 0.021399088 ubox
33 44 0.187025304 ubox
33 45 0.065174098 ubox
33 50 0.128689844 ubox
33 51 0.759249789 ubox
33 59 0.086204777 ubox
34 38 0.011402778 ubox
34 41 0.006130749 ubox
34 42 0.032944715 ubox
34 43 0.187484125 ubox
34 44 0.065608162 ubox
34 49 0.087179240 ubox
34 50 0.750849918 ubox
34 51 0.503964473 ubox
34 58 0.086188929 ubox
34 62 0.037291123 ubox
35 41 0.035872467 ubox
35 42 0.187384232 ubox
35 43 0.065610355 ubox
35 49 0.751190711 ubox
35 50 0.572483139 ubox
35 57 0.086188997 ubox
35 61 0.050918613 ubox
36 40 0.034712796 ubox
36 48 0.558901909 ubox
36 56 0.085736783 ubox
36 60 0.051090081 ubox
37 46 0.006155554 ubox
37 47 0.242000623 ubox
37 48 0.793217211 ubox
37 54 0.085834656 ubox
38 47 0.939178903 ubox
38 53 0.085914229 ubox
39 46 0.970917523 ubox
39 52 0.085924725 ubox
39 56 0.009612524 ubox
40 45 0.970559829 ubox
40 49 0.006900748 ubox
40 51 0.085635127 ubox
40 55 0.009783003 ubox
40 57 0.051308574 ubox
41 47 0.007351286 ubox
41 48 0.016471609 ubox
41 54 0.009261186 ubox
41 56 0.051533015 ubox
42 46 0.007567449 ubox
42 47 0.013196054 ubox
42 48 0.037303770 ubox
42 53 0.008974506 ubox
43 47 0.024258207 ubox
43 52 0.008882250 ubox
43 54 0.051751199 ubox
44 53 0.051813233 ubox
45 52 0.051852253 ubox
46 51 0.051688512 ubox
53 62 0.006460454 ubox
54 61 0.015034827 ubox
55 60 0.015119870 ubox
55 63 0.018638225 ubox
56 62 0.019958276 ubox
1 21 0.9500000 lbox
2 20 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
