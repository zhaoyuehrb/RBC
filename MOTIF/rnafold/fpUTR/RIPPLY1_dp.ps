%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RIPPLY1)
} def

/sequence { (\
GGUUCUGGGAAGUAGGAGACCCCACUGGCUUUGGUCCCCUAAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.044085841 ubox
1 22 0.012945883 ubox
1 23 0.012176185 ubox
1 26 0.018904731 ubox
1 30 0.026832354 ubox
1 36 0.007061587 ubox
1 37 0.100440388 ubox
1 38 0.090189182 ubox
1 39 0.055940144 ubox
1 40 0.082282041 ubox
2 13 0.011075787 ubox
2 20 0.044283593 ubox
2 21 0.012905049 ubox
2 22 0.012086990 ubox
2 25 0.020013651 ubox
2 29 0.034465080 ubox
2 35 0.006188144 ubox
2 36 0.100813636 ubox
2 37 0.090493620 ubox
2 38 0.050059631 ubox
2 39 0.086981038 ubox
3 9 0.012924501 ubox
3 10 0.029651457 ubox
3 11 0.139713246 ubox
3 12 0.019094248 ubox
3 17 0.027474752 ubox
3 18 0.024307416 ubox
3 19 0.035727082 ubox
3 24 0.017132186 ubox
3 28 0.034055423 ubox
3 34 0.016455263 ubox
3 42 0.150705862 ubox
3 43 0.078796396 ubox
3 44 0.046338347 ubox
4 8 0.012107409 ubox
4 9 0.029511297 ubox
4 10 0.160368331 ubox
4 11 0.021244157 ubox
4 14 0.008041992 ubox
4 16 0.031844241 ubox
4 17 0.034905068 ubox
4 18 0.022229255 ubox
4 19 0.013688804 ubox
4 27 0.029940206 ubox
4 28 0.008563021 ubox
4 33 0.014540455 ubox
4 34 0.081279881 ubox
4 41 0.168639667 ubox
4 42 0.092604006 ubox
4 43 0.048163888 ubox
4 44 0.434090836 ubox
5 9 0.161144135 ubox
5 12 0.209440651 ubox
5 15 0.037287089 ubox
5 16 0.038122940 ubox
5 18 0.015948122 ubox
5 27 0.011293092 ubox
5 28 0.003786066 ubox
5 33 0.099525065 ubox
5 34 0.087002166 ubox
5 43 0.509849308 ubox
6 11 0.209819045 ubox
6 14 0.038115504 ubox
6 15 0.037779565 ubox
6 17 0.015886239 ubox
6 24 0.051326239 ubox
6 27 0.003364341 ubox
6 33 0.082646197 ubox
6 41 0.144813443 ubox
6 42 0.491177400 ubox
7 13 0.038144754 ubox
7 21 0.003533203 ubox
7 22 0.015742939 ubox
7 23 0.056909173 ubox
7 30 0.079157936 ubox
7 31 0.081848184 ubox
7 32 0.050432246 ubox
7 37 0.018795481 ubox
7 38 0.647790816 ubox
7 39 0.227175779 ubox
7 40 0.170716663 ubox
8 20 0.003541473 ubox
8 21 0.015873917 ubox
8 22 0.056892665 ubox
8 29 0.082566107 ubox
8 30 0.097310355 ubox
8 31 0.042884503 ubox
8 32 0.005444952 ubox
8 36 0.018690503 ubox
8 37 0.651032964 ubox
8 38 0.223394233 ubox
8 39 0.174646290 ubox
8 40 0.040937339 ubox
9 20 0.015910001 ubox
9 21 0.056707474 ubox
9 29 0.099936220 ubox
9 30 0.030032394 ubox
9 31 0.005986492 ubox
9 32 0.037242178 ubox
9 35 0.015608918 ubox
9 36 0.652485678 ubox
9 37 0.218517785 ubox
9 38 0.172488813 ubox
9 39 0.043845208 ubox
10 30 0.006472631 ubox
10 31 0.060411246 ubox
10 32 0.005169500 ubox
10 35 0.649153716 ubox
11 26 0.227726732 ubox
11 30 0.090293469 ubox
11 31 0.006513539 ubox
11 32 0.007949570 ubox
11 40 0.021997489 ubox
12 20 0.028935453 ubox
12 25 0.232051835 ubox
12 29 0.090875014 ubox
12 31 0.006873585 ubox
12 35 0.056723474 ubox
12 39 0.022888772 ubox
13 19 0.028588245 ubox
13 24 0.228548634 ubox
13 27 0.043257919 ubox
13 28 0.077378401 ubox
13 33 0.142431778 ubox
13 34 0.069023800 ubox
13 41 0.641024442 ubox
14 26 0.059736596 ubox
14 30 0.036619439 ubox
14 31 0.071715059 ubox
14 32 0.138126247 ubox
14 40 0.675751614 ubox
15 21 0.019070131 ubox
15 22 0.199266559 ubox
15 23 0.124413777 ubox
15 25 0.060671054 ubox
15 26 0.060046964 ubox
15 29 0.037059887 ubox
15 30 0.073456067 ubox
15 31 0.104789054 ubox
15 32 0.635121759 ubox
15 37 0.028211548 ubox
15 38 0.084588300 ubox
15 39 0.679079398 ubox
15 40 0.003557622 ubox
16 20 0.019122092 ubox
16 21 0.198887868 ubox
16 22 0.124248571 ubox
16 25 0.060550080 ubox
16 29 0.073488413 ubox
16 30 0.053040451 ubox
16 31 0.657869679 ubox
16 32 0.044391177 ubox
16 36 0.027807054 ubox
16 37 0.092089719 ubox
16 38 0.678100575 ubox
16 39 0.003707853 ubox
17 26 0.043298347 ubox
17 30 0.666492057 ubox
17 31 0.043434171 ubox
17 32 0.026026961 ubox
17 35 0.026202021 ubox
18 25 0.044936579 ubox
18 29 0.668348795 ubox
18 30 0.039089920 ubox
18 31 0.028547089 ubox
18 32 0.006401895 ubox
18 36 0.686002683 ubox
19 30 0.028716420 ubox
19 31 0.006507042 ubox
19 35 0.687032649 ubox
20 28 0.660893226 ubox
20 34 0.686035699 ubox
21 27 0.658831085 ubox
21 28 0.120710474 ubox
21 33 0.683193395 ubox
21 34 0.025008647 ubox
22 27 0.131325887 ubox
22 28 0.505026024 ubox
22 33 0.033774831 ubox
22 34 0.042661469 ubox
23 27 0.501701381 ubox
23 33 0.047283105 ubox
24 32 0.054960006 ubox
24 35 0.011851838 ubox
25 34 0.013795214 ubox
25 43 0.008073239 ubox
26 33 0.013591963 ubox
26 42 0.007936692 ubox
27 32 0.022917777 ubox
27 36 0.159167775 ubox
27 37 0.038701537 ubox
27 38 0.009001711 ubox
27 39 0.006164008 ubox
28 35 0.162532358 ubox
28 36 0.038861625 ubox
28 37 0.009105959 ubox
28 38 0.006071329 ubox
29 34 0.167335882 ubox
29 43 0.043374724 ubox
30 42 0.043044219 ubox
30 43 0.027543701 ubox
31 41 0.034973619 ubox
31 42 0.037532682 ubox
32 41 0.040011923 ubox
33 39 0.044270123 ubox
33 40 0.040383432 ubox
34 38 0.043644969 ubox
34 39 0.040069384 ubox
35 44 0.005269630 ubox
36 43 0.006245736 ubox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
showpage
end
%%EOF
