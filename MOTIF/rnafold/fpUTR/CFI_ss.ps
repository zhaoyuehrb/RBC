%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCUUCUGGUGGAAACAAGUUCCUAUUGGUCACCUCCCUCAGCUCUUUAAUGGGAAGGCCAUUUUUUGGUUUCAGUUACGGUAAAUCUCUCUGGAUUUCAGCCAAAUUCUUUCAGAGUUCAAAAGUACAAAGCUCUUUAGGAGGUUUGUUCUUUUGAAACAUUUUUUCAGAGGUUAAAAAUUAAAUUUCAAAAGAAUACCUGGAGUGGAAAAGAGUUCUCAGCAGAGACAAAGACCCCGAACACCUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[160.68159485 434.74340820]
[173.91267395 427.51834106]
[170.07504272 413.01754761]
[166.23739624 398.51678467]
[162.39974976 384.01599121]
[158.56211853 369.51522827]
[154.72447205 355.01443481]
[143.98849487 344.69027710]
[147.93762207 329.36987305]
[144.09997559 314.86911011]
[140.26232910 300.36831665]
[136.68101501 297.24728394]
[135.00552368 291.85369873]
[136.51347351 285.46295166]
[133.03425598 270.87200928]
[129.55505371 256.28109741]
[126.07583618 241.69017029]
[111.48123169 238.61396790]
[99.62078094 229.46852112]
[92.87963867 216.02537537]
[92.64276123 200.92689514]
[99.01068878 187.16694641]
[110.76898193 177.49719238]
[107.28976440 162.90628052]
[103.81055450 148.31535339]
[100.33133698 133.72442627]
[92.43976593 132.86775208]
[84.96700287 130.19032288]
[78.32702637 125.84044647]
[72.88764954 120.05909729]
[59.14714813 126.07561493]
[45.40664291 132.09214783]
[31.66613960 138.10865784]
[17.92563629 144.12518311]
[14.57093525 154.43473816]
[6.27717161 161.07167053]
[-4.08054638 162.04325867]
[-13.07647705 157.26972961]
[-26.96104240 162.94589233]
[-40.84560776 168.62205505]
[-54.73017120 174.29821777]
[-55.15696335 189.52114868]
[-61.74443817 203.25160217]
[-73.35127258 213.11067200]
[-87.96652222 217.39021301]
[-103.05799103 215.34880066]
[-116.01100159 207.34008789]
[-124.58135986 194.75164795]
[-127.28421021 179.76449585]
[-123.65125275 164.97526550]
[-114.31193542 152.94625854]
[-100.88433838 145.76158142]
[-85.69487762 144.66603088]
[-71.37522125 149.84939575]
[-60.40633774 160.41365051]
[-46.52177048 154.73748779]
[-32.63720703 149.06132507]
[-18.75264168 143.38516235]
[-8.02678871 127.27722168]
[11.90911293 130.38468933]
[25.64961815 124.36815643]
[39.39012146 118.35163879]
[53.13062668 112.33511353]
[66.87113190 106.31858826]
[66.30801392 101.51554871]
[66.43762207 96.68135071]
[67.25728607 91.91537476]
[68.75014496 87.31562805]
[56.45403671 78.72460175]
[44.15792847 70.13357544]
[31.86182213 61.54254913]
[19.56571579 52.95152283]
[7.26960850 44.36049652]
[-5.02649879 35.76947021]
[-20.39246559 38.32384491]
[-32.74008560 29.43615723]
[-35.08059311 14.77131557]
[-47.37670135 6.18028831]
[-59.67280960 -2.41073895]
[-71.96891785 -11.00176620]
[-80.76897430 -13.34124184]
[-84.36270142 -19.77514458]
[-96.55204010 -28.51700401]
[-108.74137115 -37.25886154]
[-123.04460907 -31.47778320]
[-138.19848633 -34.36979294]
[-149.36744690 -45.01206207]
[-152.98751831 -60.00868225]
[-147.90354919 -74.57428741]
[-135.73782349 -84.06104279]
[-120.37236023 -85.44176483]
[-106.71025085 -78.27586365]
[-99.11100006 -64.84995270]
[-99.99951172 -49.44820023]
[-87.81018066 -40.70634079]
[-75.62084198 -31.96448135]
[-63.37788773 -23.29787254]
[-51.08178329 -14.70684624]
[-38.78567505 -6.11581898]
[-26.48956680 2.47520804]
[-11.91443539 -0.37103668]
[0.67794865 8.16632366]
[3.56452847 23.47336197]
[15.86063576 32.06438828]
[28.15674210 40.65541458]
[40.45285034 49.24644470]
[52.74895859 57.83747101]
[65.04506683 66.42849731]
[77.34117126 75.01952362]
[86.70165253 69.00643921]
[97.50924683 66.36605072]
[108.58788300 67.38566589]
[118.73198700 71.95433807]
[129.62849426 61.64578629]
[140.52499390 51.33723831]
[151.42150879 41.02868652]
[162.31800842 30.72013664]
[173.21450806 20.41158676]
[171.36529541 2.79562521]
[181.02560425 -11.75679874]
[197.50718689 -16.74932098]
[202.40527344 -30.92707825]
[207.30335999 -45.10483551]
[212.20143127 -59.28259277]
[217.09951782 -73.46035004]
[221.99760437 -87.63810730]
[226.89567566 -101.81586456]
[231.79376221 -115.99362183]
[228.98687744 -131.56384277]
[240.45599365 -141.06694031]
[245.35408020 -155.24468994]
[250.25215149 -169.42245483]
[255.15023804 -183.60020447]
[260.04830933 -197.77796936]
[257.24142456 -213.34819031]
[268.71057129 -222.85127258]
[273.60864258 -237.02903748]
[278.50671387 -251.20678711]
[283.40478516 -265.38455200]
[282.86199951 -282.32980347]
[298.99475098 -287.54232788]
[308.46954346 -273.48300171]
[297.58255005 -260.48648071]
[292.68447876 -246.30871582]
[287.78640747 -232.13095093]
[282.88830566 -217.95320129]
[286.04553223 -203.39704895]
[274.22607422 -192.87988281]
[269.32800293 -178.70211792]
[264.42990112 -164.52436829]
[259.53182983 -150.34660339]
[254.63375854 -136.16885376]
[257.79098511 -121.61271667]
[245.97151184 -111.09554291]
[241.07344055 -96.91778564]
[236.17535400 -82.74002838]
[231.27726746 -68.56227112]
[226.37919617 -54.38451385]
[221.48110962 -40.20675278]
[216.58303833 -26.02899742]
[211.68495178 -11.85124016]
[214.30200195 -9.63807487]
[216.59538269 -7.09101915]
[218.52287292 -4.25696087]
[233.13494873 -7.64623022]
[247.74702454 -11.03549957]
[262.35910034 -14.42476845]
[276.97119141 -17.81403732]
[291.58325195 -21.20330811]
[306.19534302 -24.59257698]
[313.65515137 -35.09212875]
[325.87466431 -37.62560654]
[336.20819092 -31.37108231]
[350.86093140 -34.58007812]
[365.51364136 -37.78907394]
[380.16638184 -40.99807358]
[394.81909180 -44.20706940]
[409.47183228 -47.41606522]
[415.57217407 -61.68370438]
[428.91098022 -69.61186218]
[444.35922241 -68.15200043]
[455.97674561 -57.86546326]
[459.29635620 -42.70763397]
[453.04159546 -28.50700760]
[439.61758423 -20.72401810]
[424.18606567 -22.35137939]
[412.68081665 -32.76334000]
[398.02810669 -29.55434227]
[383.37536621 -26.34534645]
[368.72265625 -23.13635063]
[354.06991577 -19.92735481]
[339.41720581 -16.71835899]
[327.08648682 -4.21483707]
[309.58462524 -9.98049736]
[294.97253418 -6.59122849]
[280.36044312 -3.20195889]
[265.74838257 0.18731035]
[251.13629150 3.57657957]
[236.52421570 6.96584892]
[221.91213989 10.35511780]
[215.51283264 25.91821289]
[200.58789062 34.19759750]
[183.52305603 31.30809021]
[172.62655640 41.61663818]
[161.73005676 51.92518997]
[150.83354187 62.23374176]
[139.93704224 72.54228973]
[129.04054260 82.85083771]
[132.32241821 109.62850189]
[114.92226410 130.24520874]
[118.40147400 144.83613586]
[121.88069153 159.42706299]
[125.35990143 174.01799011]
[140.21643066 177.34140015]
[152.10826111 186.74731445]
[158.70997620 200.32809448]
[158.76031494 215.36666870]
[152.30287170 228.88002014]
[140.66676331 238.21095276]
[144.14596558 252.80187988]
[147.62518311 267.39279175]
[151.10440063 281.98373413]
[154.76310730 296.53067017]
[158.60075378 311.03146362]
[162.43838501 325.53222656]
[173.44885254 336.89358521]
[169.22525024 351.17681885]
[173.06288147 365.67758179]
[176.90052795 380.17834473]
[180.73817444 394.67913818]
[184.57580566 409.17990112]
[188.41345215 423.68069458]
[203.48637390 423.41510010]
[218.18470764 426.76510620]
[231.65390015 433.53594971]
[243.11088562 443.33395386]
[251.88957214 455.58947754]
[257.47955322 469.59002686]
[259.55587769 484.52163696]
[257.99777222 499.51614380]
[252.89587402 513.70184326]
[244.54678345 526.25396729]
[233.43589783 536.44281006]
[220.20921326 543.67590332]
[205.63568115 547.53277588]
[190.56259155 547.78924561]
[175.86630249 544.43029785]
[162.40121460 537.65130615]
[150.95016479 527.84637451]
[142.17892456 515.58551025]
[136.59741211 501.58157349]
[134.53016663 486.64874268]
[136.09733582 471.65515137]
[141.20783997 457.47256470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 232]
[3 231]
[4 230]
[5 229]
[6 228]
[7 227]
[9 225]
[10 224]
[11 223]
[14 222]
[15 221]
[16 220]
[17 219]
[23 213]
[24 212]
[25 211]
[26 210]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[38 58]
[39 57]
[40 56]
[41 55]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[77 100]
[78 99]
[79 98]
[80 97]
[82 96]
[83 95]
[84 94]
[113 208]
[114 207]
[115 206]
[116 205]
[117 204]
[118 203]
[121 161]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[136 146]
[137 145]
[138 144]
[139 143]
[164 200]
[165 199]
[166 198]
[167 197]
[168 196]
[169 195]
[170 194]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
