%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCDH11X)
} def

/sequence { (\
UGUUGUGCGGGUUAAUACAACAAACUGUAACAAGUGUACCUGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008759721 ubox
1 9 0.008291141 ubox
1 17 0.005990761 ubox
1 19 0.008082365 ubox
1 22 0.630929902 ubox
1 32 0.091640949 ubox
1 36 0.025536323 ubox
1 38 0.011370978 ubox
1 42 0.015202790 ubox
2 6 0.007808569 ubox
2 8 0.021581799 ubox
2 16 0.006986446 ubox
2 18 0.008969142 ubox
2 21 0.700354863 ubox
2 25 0.005749596 ubox
2 31 0.101703628 ubox
2 35 0.031260574 ubox
2 37 0.012599109 ubox
2 39 0.029917568 ubox
2 41 0.017204823 ubox
2 44 0.007011787 ubox
3 7 0.020955003 ubox
3 15 0.007105847 ubox
3 17 0.007300235 ubox
3 20 0.700232511 ubox
3 23 0.010294769 ubox
3 24 0.005056867 ubox
3 30 0.099466773 ubox
3 33 0.181943456 ubox
3 34 0.009645099 ubox
3 36 0.003521261 ubox
3 38 0.027385541 ubox
3 43 0.019967000 ubox
4 14 0.007181076 ubox
4 17 0.007683995 ubox
4 19 0.700266219 ubox
4 22 0.012045651 ubox
4 23 0.004055207 ubox
4 29 0.068771334 ubox
4 32 0.209470407 ubox
4 33 0.008956491 ubox
4 38 0.022598717 ubox
4 42 0.018989913 ubox
5 13 0.007081259 ubox
5 16 0.010488814 ubox
5 18 0.700635423 ubox
5 21 0.012563986 ubox
5 25 0.004436630 ubox
5 28 0.029978305 ubox
5 31 0.213842173 ubox
5 37 0.025575329 ubox
5 39 0.228672430 ubox
5 44 0.034244513 ubox
6 14 0.006718848 ubox
6 15 0.015246486 ubox
6 17 0.698946617 ubox
6 20 0.012109130 ubox
6 24 0.004499300 ubox
6 27 0.007071864 ubox
6 29 0.164331273 ubox
6 30 0.157956968 ubox
6 36 0.032737443 ubox
6 38 0.229585710 ubox
6 42 0.004151716 ubox
6 43 0.035279550 ubox
7 13 0.011265530 ubox
7 16 0.681049014 ubox
7 18 0.004158110 ubox
7 26 0.004633685 ubox
7 28 0.229496676 ubox
7 35 0.048948978 ubox
7 37 0.229610908 ubox
7 44 0.083928877 ubox
8 27 0.234864582 ubox
8 34 0.049973948 ubox
8 36 0.229575455 ubox
8 42 0.617935958 ubox
8 43 0.069548730 ubox
9 26 0.232558371 ubox
9 35 0.219119084 ubox
9 40 0.012713434 ubox
9 41 0.625771499 ubox
10 25 0.230412573 ubox
10 26 0.065119631 ubox
10 39 0.012602328 ubox
10 40 0.627570327 ubox
10 41 0.022952378 ubox
11 18 0.027107622 ubox
11 21 0.079205542 ubox
11 25 0.072930933 ubox
11 31 0.110179243 ubox
11 35 0.003811463 ubox
11 39 0.627541358 ubox
11 40 0.022600807 ubox
12 17 0.026560144 ubox
12 20 0.079060064 ubox
12 23 0.074440412 ubox
12 24 0.078877529 ubox
12 30 0.110141626 ubox
12 33 0.095338799 ubox
12 34 0.017444874 ubox
12 36 0.006261694 ubox
12 38 0.602791015 ubox
13 19 0.074920232 ubox
13 22 0.118124798 ubox
13 23 0.075764637 ubox
13 29 0.084535479 ubox
13 32 0.104343545 ubox
13 33 0.029196154 ubox
13 36 0.106134793 ubox
13 38 0.071031609 ubox
14 28 0.058712586 ubox
14 35 0.103948932 ubox
14 37 0.073650067 ubox
15 28 0.033135577 ubox
15 35 0.341511646 ubox
15 37 0.359422225 ubox
16 27 0.044699757 ubox
16 29 0.339945997 ubox
16 34 0.271050126 ubox
16 36 0.383670779 ubox
16 38 0.092828749 ubox
17 26 0.044067296 ubox
17 28 0.417343135 ubox
17 35 0.384377860 ubox
17 37 0.158470088 ubox
18 27 0.420180769 ubox
18 34 0.383696586 ubox
18 36 0.159299004 ubox
18 42 0.007018469 ubox
19 26 0.393180935 ubox
19 35 0.122716096 ubox
19 41 0.006817014 ubox
20 28 0.228213224 ubox
20 35 0.054880220 ubox
20 37 0.116579837 ubox
21 27 0.234737259 ubox
21 34 0.075207889 ubox
21 36 0.117200700 ubox
21 42 0.003416063 ubox
22 26 0.190296361 ubox
22 35 0.079722023 ubox
22 41 0.004011009 ubox
24 35 0.611319374 ubox
24 37 0.066342618 ubox
24 44 0.175982101 ubox
25 34 0.638670498 ubox
25 36 0.068305365 ubox
25 43 0.195312424 ubox
26 32 0.061143108 ubox
26 33 0.633636974 ubox
26 36 0.003564272 ubox
26 38 0.008999024 ubox
26 42 0.183681376 ubox
27 31 0.077922723 ubox
27 35 0.005330327 ubox
27 37 0.009553761 ubox
27 39 0.219269927 ubox
27 41 0.062755164 ubox
28 34 0.008232179 ubox
28 36 0.012621413 ubox
28 38 0.220255499 ubox
28 42 0.007863576 ubox
29 35 0.013218670 ubox
29 37 0.177649876 ubox
29 41 0.009020332 ubox
30 37 0.179454310 ubox
30 44 0.067148042 ubox
31 36 0.221790118 ubox
31 42 0.098131188 ubox
31 43 0.073714078 ubox
32 41 0.092948938 ubox
33 41 0.092906445 ubox
34 40 0.101872741 ubox
35 42 0.009194171 ubox
35 43 0.007800436 ubox
36 41 0.012841716 ubox
36 44 0.005342076 ubox
37 43 0.012115417 ubox
38 44 0.040548427 ubox
39 43 0.045308029 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
showpage
end
%%EOF
