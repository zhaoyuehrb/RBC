%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAGGCGGGGCGUUGGAGUUCAGAUGUUCGCUCCCGGGAUAGGCUGCCCCGGAGAGGGAGAGGCGGGGUCGGCUGUAUCACGUGGAUCUGCUCCCGCCGCCGCCGCCGCCGCCGUCGUCUUUCUCUGUCUCGGCUGAGGCAGCCAUCUUUCUCUUGCCGCGUGCUGGUGUUGGAGGACCCUCCCUGCUUCAGAUUUACCAACAGC\
) } def
/len { sequence length } bind def

/coor [
[119.26737976 281.92651367]
[132.25498962 274.16909790]
[128.90147400 259.54876709]
[125.54795837 244.92845154]
[122.19444275 230.30812073]
[118.84093475 215.68778992]
[115.48741913 201.06745911]
[112.13390350 186.44714355]
[101.74703979 175.77182007]
[106.20323181 160.59114075]
[102.84971619 145.97082520]
[99.49620056 131.35049438]
[96.14268494 116.73016357]
[81.75028992 112.50418091]
[71.02479553 122.99053192]
[68.87623596 129.24580383]
[64.54133606 132.92384338]
[59.81575394 133.62484741]
[48.77989578 143.78407288]
[37.74403381 153.94329834]
[26.70817757 164.10252380]
[15.67231846 174.26174927]
[19.10926628 189.23114014]
[14.58571339 203.90878296]
[3.31847119 214.34643555]
[-11.66162872 217.73645020]
[-26.32501602 213.16691589]
[-36.72731018 201.86700439]
[-40.07034683 186.87635803]
[-35.45486832 172.22737122]
[-24.12241554 161.86054993]
[-9.12135696 158.56451416]
[5.51309443 163.22587585]
[16.54895401 153.06666565]
[27.58481216 142.90744019]
[38.62067032 132.74821472]
[49.65652847 122.58898926]
[60.53843689 112.26502991]
[71.26393890 101.77867889]
[75.16436768 87.29466248]
[71.15518951 72.84037781]
[67.14601135 58.38608551]
[63.13683319 43.93179703]
[57.82678986 36.49739075]
[59.17777252 29.23006821]
[55.38630676 14.71715069]
[51.59484482 0.20423239]
[47.80337906 -14.30868626]
[44.01191711 -28.82160378]
[40.22045135 -43.33452225]
[36.42898560 -57.84744263]
[32.20299911 -72.23983765]
[27.54630470 -86.49870300]
[22.88961220 -100.75756073]
[18.12588501 -114.98102570]
[13.25539303 -129.16828918]
[1.45641196 -139.70843506]
[4.64194536 -154.25839233]
[-0.22854652 -168.44566345]
[-5.09903860 -182.63291931]
[-9.96953106 -196.82017517]
[-14.84002304 -211.00743103]
[-19.71051407 -225.19468689]
[-24.58100700 -239.38195801]
[-29.45149803 -253.56921387]
[-34.32199097 -267.75646973]
[-39.19248199 -281.94372559]
[-44.06297302 -296.13098145]
[-48.93346786 -310.31823730]
[-53.91044998 -324.46850586]
[-58.99363708 -338.58093262]
[-64.07682800 -352.69338989]
[-69.37156677 -366.72784424]
[-74.87666321 -380.68112183]
[-80.38175201 -394.63439941]
[-85.88684845 -408.58767700]
[-98.14897919 -418.58520508]
[-95.62258148 -433.26397705]
[-101.12767792 -447.21725464]
[-115.05220032 -448.55676270]
[-126.98401642 -455.73114014]
[-134.62374878 -467.29122925]
[-136.52787781 -480.94943237]
[-132.38125610 -494.03213501]
[-123.04753876 -504.00317383]
[-128.34228516 -518.03759766]
[-133.63702393 -532.07208252]
[-138.93176270 -546.10650635]
[-153.93174744 -550.07891846]
[-163.70596313 -562.13061523]
[-164.49601746 -577.62756348]
[-155.99812317 -590.61083984]
[-141.47987366 -596.08813477]
[-126.52386475 -591.95324707]
[-116.88095856 -579.79620361]
[-116.25906372 -564.29156494]
[-124.89730835 -551.40124512]
[-119.60256958 -537.36682129]
[-114.30783081 -523.33233643]
[-109.01309204 -509.29791260]
[-93.00928497 -507.06909180]
[-80.23944092 -497.01608276]
[-74.24712372 -481.80801392]
[-76.75579834 -465.56060791]
[-87.17440033 -452.72235107]
[-81.66930389 -438.76907349]
[-69.80094147 -429.76959229]
[-71.93357086 -414.09277344]
[-66.42847443 -400.13949585]
[-60.92338562 -386.18621826]
[-55.41829300 -372.23294067]
[-51.47061539 -369.54251099]
[-49.17199707 -364.34292603]
[-49.96438217 -357.77658081]
[-44.88119125 -343.66412354]
[-39.79800034 -329.55169678]
[-34.57294846 -324.32312012]
[-34.74620819 -315.18875122]
[-29.87571716 -301.00146484]
[-25.00522423 -286.81420898]
[-20.13473129 -272.62695312]
[-15.26424026 -258.43969727]
[-10.39374828 -244.25244141]
[-5.52325583 -230.06518555]
[-0.65276402 -215.87792969]
[4.21772814 -201.69067383]
[9.08821964 -187.50340271]
[13.95871258 -173.31614685]
[18.82920456 -159.12889099]
[30.27981377 -149.60351562]
[27.44265175 -134.03877258]
[32.31314468 -119.85151672]
[37.45901489 -114.54499817]
[37.14847565 -105.41426086]
[41.80516815 -91.15539551]
[46.46186447 -76.89653015]
[48.89925003 -75.50888062]
[50.93338394 -73.07139587]
[52.16136169 -69.73297882]
[52.24164581 -65.78562164]
[50.94190598 -61.63890457]
[54.73336792 -47.12598801]
[58.52483368 -32.61306763]
[62.31629944 -18.10015106]
[66.10776520 -3.58723164]
[69.89922333 10.92568684]
[73.69068909 25.43860435]
[77.59112549 39.92261887]
[81.60030365 54.37690735]
[85.60948181 68.83119965]
[89.61865997 83.28548431]
[125.76262665 88.62895203]
[140.18637085 92.74665070]
[154.61012268 96.86434937]
[169.03387451 100.98204803]
[183.45762634 105.09974670]
[197.88136292 109.21744537]
[217.19281006 103.43905640]
[230.02738953 117.90023804]
[244.56840515 121.58251953]
[259.10940552 125.26480103]
[273.65042114 128.94708252]
[288.11282349 122.00314331]
[302.49572754 129.11030579]
[305.76577759 144.81654358]
[295.41448975 157.07339478]
[279.38247681 156.47845459]
[269.96813965 143.48808289]
[255.42712402 139.80580139]
[240.88612366 136.12351990]
[226.34510803 132.44123840]
[218.07144165 138.44108582]
[207.64201355 138.90534973]
[198.49075317 133.43946838]
[193.76367188 123.64119720]
[179.33992004 119.52349854]
[164.91616821 115.40579987]
[150.49241638 111.28810120]
[136.06867981 107.17039490]
[121.64492035 103.05269623]
[110.76301575 113.37665558]
[114.11653137 127.99697876]
[117.47003937 142.61730957]
[120.82355499 157.23764038]
[131.45028687 168.95869446]
[126.75423431 183.09362793]
[130.10774231 197.71395874]
[133.46125793 212.33427429]
[136.81477356 226.95460510]
[140.16828918 241.57493591]
[143.52180481 256.19525146]
[146.87530518 270.81558228]
[161.94541931 272.13729858]
[175.86872864 278.05310059]
[187.28117371 287.98342896]
[195.06465149 300.95541382]
[198.45666504 315.69818115]
[197.12486267 330.76742554]
[191.19972229 344.68676758]
[181.26174927 356.09252930]
[168.28454590 363.86734009]
[153.53950500 367.24945068]
[138.47117615 365.90756226]
[124.55580902 359.97308350]
[113.15668488 350.02746582]
[105.39058685 337.04507446]
[102.01834869 322.29776001]
[103.37034607 307.23034668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[10 184]
[11 183]
[12 182]
[13 181]
[14 39]
[15 38]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[40 151]
[41 150]
[42 149]
[43 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 136]
[53 135]
[54 134]
[55 132]
[56 131]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 116]
[71 115]
[72 114]
[73 111]
[74 110]
[75 109]
[76 108]
[78 106]
[79 105]
[85 100]
[86 99]
[87 98]
[88 97]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
