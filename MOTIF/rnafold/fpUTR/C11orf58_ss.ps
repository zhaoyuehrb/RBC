%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCCCCGGGGCGGCGAGGGGCCGCAACGGUGACGACUGUGGCAGAGAAGGCCCGGAGGGGCUCUGCGUUCUGUAGUGGCGCUGCUUGGGCCCUUGGCGGAUUGUAAGCUGCUGGUUUUGCGGCUGGGAAGAGCGGCGAGAGGGUUCGGCAUUUUUCGUCGGGAUCCCCGCAAGG\
) } def
/len { sequence length } bind def

/coor [
[132.52467346 137.87757874]
[121.79611969 148.36080933]
[106.83134460 149.38813782]
[94.77085114 140.46934509]
[91.36952972 125.85885620]
[79.50269318 135.03373718]
[67.63586426 144.20860291]
[55.76903152 153.38348389]
[44.75195694 163.56306458]
[34.66943359 174.66905212]
[24.58691025 185.77502441]
[25.16988564 201.34094238]
[14.78656292 212.46035767]
[-0.05675642 212.92021179]
[-10.13928127 224.02618408]
[-20.22180557 235.13215637]
[-30.30433083 246.23812866]
[-40.38685608 257.34411621]
[-41.05215454 273.37335205]
[-54.08370209 282.73062134]
[-69.48480988 278.23779297]
[-75.44106293 263.34140015]
[-67.38333893 249.46867371]
[-51.49283218 247.26158142]
[-41.41030502 236.15560913]
[-31.32778168 225.04963684]
[-21.24525642 213.94364929]
[-11.16273212 202.83767700]
[-12.13561440 188.01913452]
[-2.06870961 176.61247253]
[13.48093319 175.69250488]
[23.56345749 164.58651733]
[33.64598083 153.48054504]
[18.89787483 156.21794128]
[4.71857691 151.32432556]
[-5.20177269 140.07324219]
[-8.28141975 125.39279175]
[-3.71889067 111.10351562]
[7.29842377 100.92418671]
[21.90328598 97.50395203]
[36.29480362 101.73292542]
[46.72761154 112.51052094]
[50.48658371 127.03188324]
[46.59415817 141.51664734]
[58.46099091 132.34176636]
[70.32781982 123.16690063]
[82.19465637 113.99202728]
[67.96214294 118.72865295]
[54.86565399 111.41551971]
[51.43171310 96.81387329]
[59.89600372 84.43018341]
[74.74781036 82.32691193]
[86.31760406 91.87300110]
[78.55319977 79.03890228]
[70.78880310 66.20480347]
[63.02440262 53.37070465]
[55.26000214 40.53660202]
[47.49560547 27.70250511]
[40.35469055 21.95881653]
[39.70983887 14.57433224]
[32.17187119 1.60594475]
[18.54750252 -6.43688631]
[18.84100723 -21.32859993]
[11.30304050 -34.29698563]
[3.76507378 -47.26537323]
[-9.85929585 -55.30820465]
[-9.56579208 -70.19992065]
[-17.10375786 -83.16830444]
[-24.64172554 -96.13668823]
[-32.17969131 -109.10507965]
[-47.62954330 -110.54788208]
[-59.25841904 -120.82157898]
[-62.59477234 -135.97573853]
[-56.35571289 -150.18325806]
[-42.94028473 -157.98106384]
[-27.50699043 -156.37075806]
[-15.99025249 -145.97151184]
[-12.81848717 -130.78205872]
[-19.21130371 -116.64304352]
[-11.67333794 -103.67465973]
[-4.13537121 -90.70626831]
[3.40259504 -77.73788452]
[16.48779869 -70.62264252]
[16.73346138 -54.80334091]
[24.27142715 -41.83495331]
[31.80939293 -28.86656570]
[44.89459610 -21.75131989]
[45.14025879 -5.93202162]
[52.67822647 7.03636551]
[60.32970428 19.93810463]
[68.09410095 32.77220535]
[75.85850525 45.60630417]
[83.62290192 58.44040298]
[91.38729858 71.27450562]
[99.15170288 84.10860443]
[111.91716766 91.98532104]
[126.87041473 93.16876984]
[141.82365417 94.35221863]
[156.77690125 95.53566742]
[165.60820007 93.08806610]
[171.98143005 96.87335968]
[186.91159058 98.31905365]
[201.84176636 99.76474762]
[190.53741455 89.90514374]
[188.76283264 75.01048279]
[197.43421936 62.77091980]
[212.07453918 59.50576019]
[225.12493896 66.90081787]
[229.84748840 81.13800049]
[223.80247498 94.86808777]
[236.70420837 87.21660614]
[249.60595703 79.56513214]
[262.50769043 71.91365051]
[275.40942383 64.26217651]
[288.31115723 56.61069870]
[290.66754150 41.15166855]
[302.44357300 30.86287880]
[318.07897949 30.60237885]
[330.19119263 40.49317169]
[333.06124878 55.86512375]
[325.33392334 69.46007538]
[310.65786743 74.85889435]
[295.96264648 69.51243591]
[283.06091309 77.16391754]
[270.15917969 84.81539154]
[257.25741577 92.46687317]
[244.35568237 100.11834717]
[231.45394897 107.76982880]
[231.38813782 115.26953888]
[231.19068909 137.76867676]
[243.95616150 145.64540100]
[256.72161865 153.52210999]
[269.06335449 147.34748840]
[282.73562622 148.07920837]
[294.16549683 155.41874695]
[300.41915894 167.35485840]
[299.95465088 180.71359253]
[312.57992554 188.81312561]
[325.20520020 196.91267395]
[337.83044434 205.01222229]
[350.45571899 213.11175537]
[363.08099365 221.21130371]
[375.70626831 229.31085205]
[388.33154297 237.41038513]
[400.95678711 245.50993347]
[413.58206177 253.60948181]
[427.98788452 247.84298706]
[443.02359009 251.67794800]
[452.90765381 263.63973999]
[453.83947754 279.12881470]
[445.46072388 292.18930054]
[430.99322510 297.79916382]
[416.00000000 293.80133057]
[406.24624634 281.73300171]
[405.48251343 266.23474121]
[392.85726929 258.13519287]
[380.23199463 250.03565979]
[367.60671997 241.93611145]
[354.98144531 233.83657837]
[342.35617065 225.73703003]
[329.73092651 217.63748169]
[317.10565186 209.53794861]
[304.48037720 201.43840027]
[291.85510254 193.33885193]
[276.77630615 199.79409790]
[260.65722656 195.96145630]
[249.88380432 183.15612793]
[248.84490967 166.28758240]
[236.07943726 158.41085815]
[223.31396484 150.53413391]
[200.39607239 114.69491577]
[185.46589661 113.24922180]
[170.53573608 111.80352783]
[155.59344482 110.48890686]
[140.64021301 109.30546570]
[125.68696594 108.12201691]
[110.73372650 106.93856812]
[125.26038361 110.67703247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 47]
[6 46]
[7 45]
[8 44]
[9 33]
[10 32]
[11 31]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[60 89]
[61 88]
[63 86]
[64 85]
[65 84]
[67 82]
[68 81]
[69 80]
[70 79]
[96 177]
[97 176]
[98 175]
[99 174]
[101 173]
[102 172]
[103 171]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[130 170]
[131 169]
[132 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
