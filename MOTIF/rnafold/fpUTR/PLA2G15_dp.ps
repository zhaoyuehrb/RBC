%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLA2G15)
} def

/sequence { (\
AAGCGCGUCGCCACCGCCCCCGCCUAGGCGAGAGCCCAGAGAGCUGAACCUGCAUCCCGGACCUGCGGCGACCGUCGUACACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 25 0.003919060 ubox
2 45 0.006489127 ubox
3 11 0.004986189 ubox
3 17 0.006961626 ubox
3 24 0.004060271 ubox
3 35 0.033944065 ubox
3 44 0.006704134 ubox
3 53 0.008072097 ubox
3 75 0.785407524 ubox
3 78 0.557006796 ubox
4 10 0.004997870 ubox
4 16 0.006978253 ubox
4 34 0.034078356 ubox
4 43 0.006701300 ubox
4 52 0.008072500 ubox
4 67 0.003432466 ubox
4 74 0.814174101 ubox
4 77 0.569551143 ubox
5 9 0.004676570 ubox
5 15 0.006965852 ubox
5 23 0.005435618 ubox
5 35 0.028606692 ubox
5 66 0.003511022 ubox
5 73 0.814971576 ubox
5 75 0.129242127 ubox
5 76 0.559106178 ubox
5 78 0.015518038 ubox
6 22 0.005441862 ubox
6 34 0.028696274 ubox
6 65 0.003509257 ubox
6 70 0.024394743 ubox
6 74 0.522570732 ubox
6 77 0.015988148 ubox
7 14 0.006874303 ubox
7 21 0.005393379 ubox
7 69 0.024866170 ubox
7 72 0.926946301 ubox
7 73 0.370121153 ubox
7 76 0.012344438 ubox
8 13 0.006305610 ubox
8 31 0.045568337 ubox
8 68 0.024870945 ubox
8 71 0.997915539 ubox
9 30 0.046445428 ubox
9 67 0.024887312 ubox
9 70 0.998456270 ubox
9 74 0.009290892 ubox
10 17 0.006952539 ubox
10 29 0.046544299 ubox
10 35 0.005041452 ubox
10 66 0.024886972 ubox
10 69 0.998395527 ubox
10 73 0.009199579 ubox
11 16 0.006989821 ubox
11 28 0.046545998 ubox
11 34 0.005209146 ubox
11 65 0.024598215 ubox
11 68 0.993062692 ubox
12 27 0.046484878 ubox
12 65 0.011521287 ubox
12 67 0.985286593 ubox
13 64 0.019121618 ubox
14 28 0.011421050 ubox
14 60 0.051396494 ubox
14 68 0.102394956 ubox
15 22 0.062798851 ubox
15 27 0.013586138 ubox
15 30 0.858178919 ubox
15 46 0.009519581 ubox
15 59 0.051445797 ubox
15 65 0.144040344 ubox
15 67 0.150530836 ubox
15 70 0.004568646 ubox
16 21 0.062961865 ubox
16 23 0.262572121 ubox
16 29 0.869351137 ubox
16 35 0.095011847 ubox
16 44 0.016774753 ubox
16 45 0.007345133 ubox
16 53 0.006263898 ubox
16 58 0.045545308 ubox
16 64 0.129127573 ubox
16 66 0.274019331 ubox
16 69 0.004641355 ubox
17 22 0.262411709 ubox
17 28 0.868901046 ubox
17 34 0.095155884 ubox
17 43 0.016812376 ubox
17 52 0.006385536 ubox
17 60 0.051348448 ubox
17 65 0.273735007 ubox
17 68 0.004591330 ubox
18 27 0.868013109 ubox
18 28 0.026947438 ubox
18 59 0.051246004 ubox
18 60 0.055325234 ubox
18 67 0.004517903 ubox
19 27 0.037843174 ubox
19 28 0.009118246 ubox
19 59 0.055228742 ubox
19 60 0.065248302 ubox
20 27 0.012439601 ubox
20 28 0.018003255 ubox
20 59 0.063738097 ubox
20 60 0.312514078 ubox
20 68 0.006506761 ubox
21 27 0.023768120 ubox
21 30 0.171939226 ubox
21 46 0.031262892 ubox
21 52 0.003430764 ubox
21 59 0.313303225 ubox
21 67 0.009452387 ubox
21 70 0.004780130 ubox
22 29 0.173735808 ubox
22 35 0.006437564 ubox
22 44 0.096982242 ubox
22 45 0.007370710 ubox
22 53 0.033356004 ubox
22 58 0.302497574 ubox
22 66 0.017209770 ubox
22 69 0.005050345 ubox
23 28 0.173613362 ubox
23 34 0.006464203 ubox
23 43 0.097550526 ubox
23 52 0.033588991 ubox
23 60 0.060186601 ubox
23 65 0.017133835 ubox
23 68 0.005053922 ubox
24 32 0.006815294 ubox
24 39 0.364497211 ubox
24 41 0.107460674 ubox
24 59 0.059860338 ubox
24 60 0.005570901 ubox
24 67 0.005070952 ubox
25 31 0.006669583 ubox
25 38 0.359289677 ubox
25 40 0.106308705 ubox
25 42 0.003280311 ubox
25 52 0.078849568 ubox
25 59 0.005224993 ubox
25 65 0.013313263 ubox
26 51 0.087207636 ubox
26 64 0.017402049 ubox
27 36 0.442086059 ubox
27 37 0.026879008 ubox
27 50 0.088028762 ubox
27 51 0.008659519 ubox
27 56 0.004525274 ubox
27 57 0.011632351 ubox
27 58 0.017264297 ubox
27 63 0.017765713 ubox
27 76 0.003657684 ubox
28 35 0.443103868 ubox
28 36 0.019359042 ubox
28 44 0.003202024 ubox
28 49 0.087834579 ubox
28 50 0.008699302 ubox
28 53 0.055203621 ubox
28 56 0.011446729 ubox
28 57 0.017398926 ubox
28 62 0.017632245 ubox
28 66 0.053327130 ubox
28 75 0.003680283 ubox
29 34 0.443342536 ubox
29 43 0.003242715 ubox
29 46 0.003933645 ubox
29 52 0.055212964 ubox
29 59 0.017981700 ubox
29 65 0.053577693 ubox
29 74 0.003683781 ubox
30 51 0.039743835 ubox
30 56 0.017580137 ubox
30 58 0.019330060 ubox
30 64 0.028039621 ubox
30 66 0.064128553 ubox
30 73 0.003662449 ubox
31 45 0.012014872 ubox
31 51 0.086960113 ubox
31 55 0.017591303 ubox
31 64 0.723544096 ubox
32 44 0.011922972 ubox
32 50 0.090822379 ubox
32 56 0.040795754 ubox
32 63 0.742671367 ubox
33 45 0.241525499 ubox
33 51 0.077789043 ubox
33 55 0.040718069 ubox
33 64 0.092699317 ubox
34 44 0.247183875 ubox
34 50 0.079583437 ubox
34 53 0.043347627 ubox
34 63 0.094475704 ubox
34 66 0.125673210 ubox
34 69 0.010159703 ubox
35 43 0.246914313 ubox
35 52 0.043049183 ubox
35 60 0.765609508 ubox
35 65 0.125373959 ubox
35 68 0.010258082 ubox
36 59 0.764796685 ubox
36 60 0.207957848 ubox
36 67 0.010446609 ubox
37 46 0.346839470 ubox
37 52 0.051793363 ubox
37 59 0.209402637 ubox
37 65 0.039646351 ubox
38 45 0.347349514 ubox
38 51 0.053805684 ubox
38 64 0.041281565 ubox
39 44 0.345370353 ubox
39 50 0.053929688 ubox
39 56 0.745556903 ubox
39 63 0.041196385 ubox
40 51 0.069027817 ubox
40 55 0.744061884 ubox
40 64 0.101465518 ubox
41 50 0.071130491 ubox
41 56 0.340048936 ubox
41 63 0.103939919 ubox
42 51 0.053238254 ubox
42 55 0.339683341 ubox
42 64 0.011322674 ubox
43 50 0.054625214 ubox
43 53 0.853586364 ubox
43 63 0.011514846 ubox
43 66 0.197317711 ubox
44 52 0.854441300 ubox
44 60 0.112685045 ubox
44 65 0.197444183 ubox
45 52 0.012605879 ubox
45 54 0.045405180 ubox
45 59 0.112543900 ubox
45 65 0.003365132 ubox
46 51 0.047983782 ubox
46 53 0.049607931 ubox
46 56 0.025252949 ubox
46 58 0.111693089 ubox
46 64 0.011561570 ubox
46 66 0.015272720 ubox
47 55 0.025046118 ubox
49 60 0.254392320 ubox
49 68 0.004044813 ubox
50 59 0.255007805 ubox
50 60 0.149256099 ubox
50 67 0.006311210 ubox
50 68 0.010560871 ubox
51 59 0.149671619 ubox
51 67 0.023620270 ubox
52 58 0.153022282 ubox
52 66 0.355921426 ubox
53 65 0.356274749 ubox
54 64 0.331645585 ubox
55 61 0.173976984 ubox
55 71 0.006955171 ubox
56 60 0.178418238 ubox
56 70 0.007481738 ubox
57 68 0.014719537 ubox
58 65 0.031438012 ubox
58 67 0.026592933 ubox
59 64 0.024840561 ubox
59 66 0.073665812 ubox
59 83 0.018023562 ubox
60 82 0.018129352 ubox
64 79 0.040598806 ubox
65 75 0.004237756 ubox
65 78 0.045249295 ubox
66 74 0.004671460 ubox
66 77 0.045552415 ubox
67 73 0.004690632 ubox
67 76 0.045575094 ubox
68 72 0.004615362 ubox
68 75 0.045525939 ubox
68 78 0.005070084 ubox
69 74 0.045486051 ubox
69 77 0.005937164 ubox
70 76 0.005996919 ubox
71 75 0.005218909 ubox
74 80 0.011837073 ubox
74 82 0.010255203 ubox
75 79 0.010856044 ubox
75 81 0.010168726 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
35 60 0.9500000 lbox
36 59 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
showpage
end
%%EOF
