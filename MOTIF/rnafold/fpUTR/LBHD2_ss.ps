%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGCGCGGAGCCAGCGGAGCGCGGAGGCCCCAGCGCCAGCACCCGCGCGGGCGGUGAGCGUGAGUGUGGCGCAGGGUCGCCCCUCCCCAGCCUGGCCCCGGCAGUGCGGGCCCCGGGAGCGCCCUGACGGCUAGUCCUCGUGCAGCUUAGUGGCGCAGUGGCGGCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[141.59225464 149.50967407]
[134.10522461 147.68324280]
[127.36490631 143.89158630]
[121.87820435 138.40315247]
[118.06223297 131.61454773]
[116.21260071 124.02199554]
[116.48061371 116.18496704]
[102.94952393 109.71119690]
[94.86906433 109.34564972]
[89.23627472 102.99921417]
[75.82289124 96.28495026]
[62.40951538 89.57069397]
[46.60570526 90.31239319]
[38.68800354 77.69655609]
[25.27462578 70.98229980]
[11.86124611 64.26803589]
[-1.55213261 57.55377960]
[-15.02490139 50.95950317]
[-28.55598640 44.48572922]
[-42.25553513 38.37652588]
[-56.11372757 32.63627625]
[-69.97192383 26.89602470]
[-83.83011627 21.15577316]
[-93.65987396 25.90680313]
[-104.26132202 24.47478485]
[-112.14694977 17.57551575]
[-114.85794830 7.68247271]
[-128.50242615 1.45124745]
[-144.26969910 2.75654459]
[-152.63264465 -9.56865120]
[-166.27711487 -15.79987621]
[-179.92160034 -22.03110123]
[-193.56608582 -28.26232719]
[-207.21055603 -34.49355316]
[-219.56758118 -30.72357559]
[-230.81466675 -36.21945190]
[-235.14590454 -47.53570557]
[-248.67698669 -54.00947952]
[-262.20806885 -60.48325348]
[-275.73916626 -66.95702362]
[-289.27026367 -73.43080139]
[-302.80133057 -79.90457153]
[-311.92584229 -80.79191589]
[-316.51458740 -86.61655426]
[-329.92797852 -93.33081818]
[-343.34133911 -100.04507446]
[-359.14517212 -99.30337524]
[-367.06286621 -111.91921234]
[-380.47622681 -118.63346863]
[-393.88961792 -125.34773254]
[-407.30300903 -132.06198120]
[-420.71636963 -138.77624512]
[-433.93136597 -130.81587219]
[-449.35153198 -131.28657532]
[-462.05639648 -140.03816223]
[-467.99185181 -154.27803040]
[-465.26391602 -169.46229553]
[-454.74307251 -180.74571228]
[-439.78646851 -184.52778625]
[-425.16674805 -179.60165405]
[-415.54895020 -167.53924561]
[-414.00210571 -152.18962097]
[-400.58874512 -145.47537231]
[-387.17535400 -138.76110840]
[-373.76199341 -132.04684448]
[-360.34860229 -125.33259583]
[-345.50421143 -126.55453491]
[-336.62707520 -113.45845032]
[-323.21371460 -106.74419403]
[-309.80032349 -100.02993774]
[-296.32757568 -93.43565369]
[-282.79647827 -86.96188354]
[-269.26538086 -80.48811340]
[-255.73429871 -74.01433563]
[-242.20321655 -67.54056549]
[-228.67213440 -61.06679153]
[-211.28976440 -63.37699509]
[-200.97933960 -48.13803101]
[-187.33485413 -41.90680695]
[-173.69038391 -35.67558289]
[-160.04589844 -29.44435692]
[-146.40141296 -23.21313095]
[-131.61009216 -24.96412659]
[-122.27120209 -12.19323254]
[-108.62672424 -5.96200752]
[-89.58843994 -9.23394871]
[-78.08986664 7.29757977]
[-64.23166656 13.03783131]
[-50.37347794 18.77808189]
[-36.51528549 24.51833344]
[-33.11010742 23.49199486]
[-29.03517342 24.08418465]
[-25.06599045 26.59299278]
[-22.08221245 30.95464325]
[-8.55112839 37.42841721]
[-1.13624537 37.47898102]
[5.16212559 44.14039993]
[18.57550430 50.85466003]
[31.98888397 57.56891632]
[45.40226364 64.28317261]
[60.24665833 63.06123352]
[69.12377167 76.15731812]
[82.53715515 82.87157440]
[95.95053101 89.58583069]
[109.42330170 96.18010712]
[122.95438385 102.65388489]
[143.86297607 92.94002533]
[164.92126465 101.65184784]
[172.67314148 122.79934692]
[186.90553284 127.53633881]
[201.13790894 132.27333069]
[213.02113342 127.20405579]
[224.79127502 131.46618652]
[230.30734253 142.25460815]
[244.45291138 147.24488831]
[258.59848022 152.23515320]
[272.78802490 157.09898376]
[287.02041626 161.83598328]
[301.25280762 166.57296753]
[312.54132080 159.19013977]
[325.82656860 159.66047668]
[336.25451660 167.58743286]
[340.14453125 179.89114380]
[354.29010010 184.88142395]
[368.43566895 189.87168884]
[382.58123779 194.86196899]
[396.72680664 199.85224915]
[410.91635132 204.71606445]
[425.14874268 209.45306396]
[439.38113403 214.19006348]
[445.97543335 213.23020935]
[451.25769043 215.43470764]
[454.03167725 219.35847473]
[468.08593750 224.60043335]
[482.14016724 229.84239197]
[496.19442749 235.08436584]
[505.36169434 235.15489197]
[510.45132446 240.54734802]
[524.40979004 246.03933716]
[538.79888916 239.50262451]
[553.56616211 245.13327026]
[559.95037842 259.59069824]
[554.16387939 274.29757690]
[539.63977051 280.52859497]
[524.99487305 274.58697510]
[518.91778564 259.99777222]
[504.95935059 254.50579834]
[490.95245361 249.13861084]
[476.89819336 243.89665222]
[462.84396362 238.65467834]
[448.78970337 233.41271973]
[434.64413452 228.42243958]
[420.41174316 223.68545532]
[406.17938232 218.94845581]
[398.81597900 219.82237244]
[391.73654175 213.99781799]
[377.59097290 209.00753784]
[363.44540405 204.01727295]
[349.29983521 199.02699280]
[335.15426636 194.03672791]
[320.32476807 201.93829346]
[304.04354858 196.57913208]
[296.51580811 180.80535889]
[282.28341675 176.06837463]
[268.05102539 171.33137512]
[260.68765259 172.20527649]
[253.60821533 166.38072205]
[239.46264648 161.39045715]
[225.31707764 156.40017700]
[208.28125000 160.55523682]
[196.40092468 146.50572205]
[182.16853333 141.76873779]
[167.93614197 137.03173828]
[162.94006348 142.75691223]
[156.56221008 146.93692017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 106]
[8 105]
[10 104]
[11 103]
[12 102]
[14 100]
[15 99]
[16 98]
[17 97]
[18 95]
[19 94]
[20 90]
[21 89]
[22 88]
[23 87]
[27 85]
[28 84]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[44 70]
[45 69]
[46 68]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[109 173]
[110 172]
[111 171]
[114 169]
[115 168]
[116 167]
[117 165]
[118 164]
[119 163]
[123 160]
[124 159]
[125 158]
[126 157]
[127 156]
[128 154]
[129 153]
[130 152]
[133 151]
[134 150]
[135 149]
[136 148]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
