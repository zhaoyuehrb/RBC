%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACGGUUCUGCUCAGCUGCCUAAAGGUUCUGCUCAGGUGCCUAACGGUUCUGCUCAGCUGCCUAACGGUUUUGCGCAGCCAUUUUCUCCCGGGAGAGGUUGGAGUGUCCAAAAGCUUGGCCCGACUGAGAUUUCUAGUCUUGUCAGGGCGGAUGCAGGGACUGAAGAAGGGCGAGGGCGAGCGGCGGGGACUGGGGAAGGGCGAGCAGCGGGAGGCACGGGCUCUCUCUAGCAGGUGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[33.30056763 922.30029297]
[28.25772285 936.70623779]
[17.45768166 947.49151611]
[3.04480481 952.51464844]
[-12.11922359 950.77825928]
[-25.02357483 942.62719727]
[-33.10607910 929.67974854]
[-34.76195145 914.50671387]
[-29.66241455 900.12072754]
[-18.81998634 889.37805176]
[-4.38743973 884.41174316]
[-2.68100119 869.50909424]
[-0.97456235 854.60650635]
[0.63745177 839.69335938]
[2.15497661 824.77032471]
[3.67250133 809.84729004]
[5.19002628 794.92425537]
[6.70755100 780.00122070]
[8.22507572 765.07818604]
[9.74260044 750.15515137]
[11.26012516 735.23205566]
[12.77765083 720.30902100]
[1.60071528 707.72802734]
[3.02089524 690.61999512]
[16.64547539 679.62933350]
[17.97384262 664.68829346]
[19.30220985 649.74719238]
[7.03487539 641.29864502]
[0.60068315 627.75402832]
[1.81807840 612.70794678]
[10.45992470 600.20935059]
[24.28771400 593.67175293]
[25.61608124 578.73071289]
[26.94444847 563.78967285]
[28.27281570 548.84857178]
[25.96549606 544.69219971]
[26.22801399 539.04571533]
[29.82878685 533.54748535]
[31.53522682 518.64483643]
[33.24166489 503.74224854]
[34.94810486 488.83963013]
[36.65454102 473.93698120]
[38.36098099 459.03436279]
[28.92321587 447.56860352]
[30.44149399 432.43090820]
[42.53185272 422.60946655]
[44.23829269 407.70684814]
[42.36383820 404.74737549]
[41.81610107 400.73947144]
[43.06949234 396.31036377]
[46.30317307 392.27435303]
[48.57458878 377.44732666]
[50.84600449 362.62030029]
[53.11742401 347.79327393]
[55.38883972 332.96624756]
[57.66025543 318.13922119]
[55.57157898 311.06890869]
[60.05550003 303.13925171]
[62.51455688 288.34219360]
[64.97360992 273.54513550]
[56.89317703 255.96296692]
[69.99562073 240.62271118]
[72.07903290 225.76809692]
[74.16244507 210.91349792]
[72.06860352 206.64556885]
[72.61677551 201.01962280]
[76.49140930 195.71083069]
[78.95046234 180.91377258]
[81.40951538 166.11669922]
[83.86856842 151.31964111]
[86.32762146 136.52258301]
[88.78668213 121.72551727]
[91.24573517 106.92845154]
[93.61101532 92.11611176]
[95.88243103 77.28908539]
[98.05989075 62.44797516]
[100.14330292 47.59336472]
[92.85124969 30.67238998]
[104.21066284 17.28239059]
[106.10574341 2.40258312]
[108.00081635 -12.47722435]
[106.00219727 -17.24710083]
[106.01559448 -21.85011673]
[107.64475250 -25.55268860]
[110.26102448 -27.88231277]
[112.72007751 -42.67937469]
[115.17913055 -57.47643661]
[109.80886841 -72.35833740]
[119.52796173 -83.64498901]
[121.98701477 -98.44204712]
[124.44606781 -113.23911285]
[111.60308075 -121.32202911]
[102.85673523 -133.67291260]
[99.51440430 -148.39169312]
[102.05504608 -163.22856140]
[110.06082153 -175.92787170]
[122.28541565 -184.57106018]
[136.84803772 -187.86643982]
[139.30708313 -202.66351318]
[141.76614380 -217.46057129]
[144.22518921 -232.25762939]
[133.50955200 -243.32475281]
[131.39004517 -258.40325928]
[138.47195435 -271.68145752]
[151.85446167 -278.16580200]
[154.31350708 -292.96286011]
[156.77256775 -307.75991821]
[159.23161316 -322.55697632]
[161.69067383 -337.35406494]
[164.14971924 -352.15112305]
[153.18170166 -341.91870117]
[138.43922424 -339.15112305]
[124.50691223 -344.70907593]
[115.71743011 -356.86410522]
[114.80413055 -371.83627319]
[122.05102539 -384.96954346]
[135.20448303 -392.17968750]
[150.17404175 -391.22457886]
[162.30447388 -382.40115356]
[167.82363892 -368.45141602]
[171.95008850 -382.87268066]
[176.07652283 -397.29391479]
[180.20297241 -411.71517944]
[184.23797607 -426.16226196]
[188.18141174 -440.63464355]
[192.12484741 -455.10699463]
[191.36112976 -464.18453979]
[196.21098328 -469.73712158]
[200.33741760 -484.15835571]
[204.46386719 -498.57962036]
[208.59030151 -513.00085449]
[212.71673584 -527.42211914]
[216.84318542 -541.84338379]
[215.38742065 -558.73468018]
[231.21563721 -564.80957031]
[241.43476868 -551.28161621]
[231.26443481 -537.71691895]
[227.13800049 -523.29565430]
[223.01155090 -508.87442017]
[218.88511658 -494.45318604]
[214.75866699 -480.03192139]
[210.63223267 -465.61068726]
[206.59721375 -451.16357422]
[202.65377808 -436.69122314]
[198.71034241 -422.21884155]
[199.98112488 -414.95681763]
[194.62422180 -407.58874512]
[190.49777222 -393.16748047]
[186.37133789 -378.74624634]
[182.24488831 -364.32498169]
[178.94679260 -349.69204712]
[176.48773193 -334.89498901]
[174.02867126 -320.09793091]
[171.56962585 -305.30087280]
[169.11056519 -290.50381470]
[166.65151978 -275.70675659]
[177.21740723 -265.24252319]
[179.62399292 -250.38748169]
[172.74145508 -236.80499268]
[159.02224731 -229.79858398]
[156.56320190 -215.00151062]
[154.10414124 -200.20445251]
[151.64509583 -185.40739441]
[164.35910034 -177.57902527]
[173.13108826 -165.44651794]
[176.59910583 -150.84043884]
[174.20437622 -135.97932434]
[166.28109741 -123.13271332]
[154.01011658 -114.27460480]
[139.24313354 -110.78005981]
[136.78407288 -95.98299408]
[134.32502747 -81.18593597]
[139.87117004 -67.36241913]
[129.97619629 -55.01738358]
[127.51714325 -40.22032166]
[125.05808258 -25.42325974]
[122.88063049 -10.58214569]
[120.98554993 4.29766226]
[119.09046936 19.17746925]
[126.23882294 28.91706276]
[124.79798126 41.31542587]
[114.99791718 49.67678070]
[112.91449738 64.53138733]
[115.09257507 71.57469177]
[110.70945740 79.56050110]
[108.43804169 94.38752747]
[110.42412567 102.17780304]
[106.04279327 109.38750458]
[103.58374023 124.18457031]
[101.12468719 138.98162842]
[98.66563416 153.77870178]
[96.20658112 168.57575989]
[93.74752808 183.37281799]
[91.28847504 198.16987610]
[89.01705170 212.99690247]
[86.93363953 227.85151672]
[84.85022736 242.70611572]
[91.87167358 250.97315979]
[93.17113495 261.52053833]
[88.56021118 270.85131836]
[79.77066803 276.00418091]
[77.31161499 290.80123901]
[74.85256195 305.59829712]
[72.48728180 320.41064453]
[70.21586609 335.23767090]
[67.94445038 350.06469727]
[65.67302704 364.89172363]
[63.40161514 379.71875000]
[61.13019562 394.54577637]
[59.14091110 409.41326904]
[57.43447113 424.31588745]
[66.99176025 436.61611938]
[65.04889679 451.70520020]
[53.26359940 460.74081421]
[51.55716324 475.64343262]
[49.85072327 490.54605103]
[48.14428329 505.44866943]
[46.43784714 520.35131836]
[44.73140717 535.25390625]
[43.21388245 550.17694092]
[41.88551331 565.11804199]
[40.55714798 580.05908203]
[39.22877884 595.00012207]
[51.68632889 603.87463379]
[57.98762512 617.70178223]
[56.53150177 632.72668457]
[47.80868912 644.92370605]
[34.24327469 651.07556152]
[32.91490936 666.01666260]
[31.58654022 680.95770264]
[41.35277557 690.21209717]
[43.97526932 703.21020508]
[38.71766663 715.17126465]
[27.70068932 721.82653809]
[26.18316460 736.74963379]
[24.66563988 751.67266846]
[23.14811516 766.59570312]
[21.63059044 781.51873779]
[20.11306572 796.44177246]
[18.59554100 811.36480713]
[17.07801628 826.28784180]
[15.56049156 841.21087646]
[17.80202103 850.04040527]
[13.92805672 856.31292725]
[12.22161865 871.21557617]
[10.51517963 886.11816406]
[23.45152855 894.21838379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 246]
[12 245]
[13 244]
[14 242]
[15 241]
[16 240]
[17 239]
[18 238]
[19 237]
[20 236]
[21 235]
[22 234]
[25 230]
[26 229]
[27 228]
[32 223]
[33 222]
[34 221]
[35 220]
[38 219]
[39 218]
[40 217]
[41 216]
[42 215]
[43 214]
[46 211]
[47 210]
[51 209]
[52 208]
[53 207]
[54 206]
[55 205]
[56 204]
[58 203]
[59 202]
[60 201]
[62 197]
[63 196]
[64 195]
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[72 189]
[73 188]
[74 186]
[75 185]
[76 183]
[77 182]
[79 179]
[80 178]
[81 177]
[85 176]
[86 175]
[87 174]
[89 172]
[90 171]
[91 170]
[98 163]
[99 162]
[100 161]
[101 160]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[120 150]
[121 149]
[122 148]
[123 147]
[124 145]
[125 144]
[126 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
