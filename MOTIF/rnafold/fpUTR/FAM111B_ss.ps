%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGAAAAGUUCAGCUGAGAGAUAUAAAAGAGCAGUCUUUCCAGCACCUGCAAAUCCAGAGCGGCGGGCACUGACGGGCACUUGCACCGUGUGGACAGACUCUCCGGUUCUGGGGAAAUCCAGUCCCUGUUACUCCAUUUUGGCCAGAAAUUCAAGACAUUUCAGGUGGCAGAAUAAAUUCAAUCCUUGUUUCUCCAUCUUAUCGAGUAGUAGAAGUUAGUUACAUUCUCUUUGAACUCAUC\
) } def
/len { sequence length } bind def

/coor [
[100.54334259 352.32647705]
[85.50447845 354.72494507]
[70.79193878 350.79290771]
[58.95474625 341.21160889]
[52.04377747 327.64111328]
[51.25639725 312.43255615]
[56.72901917 298.22094727]
[67.51348114 287.46850586]
[81.74131775 282.03814697]
[82.51349640 267.05804443]
[83.28567505 252.07792664]
[84.05786133 237.09780884]
[84.83003998 222.11769104]
[85.60221863 207.13758850]
[83.54454041 204.29981995]
[82.74717712 200.33110046]
[83.72389221 195.82910156]
[86.70454407 191.59727478]
[88.05463409 176.65815735]
[89.40471649 161.71903992]
[90.75479889 146.77992249]
[92.10488892 131.84080505]
[93.45497131 116.90167999]
[90.68495178 131.64369202]
[79.47052002 141.60545349]
[64.50474548 142.61811829]
[52.05054855 134.25790405]
[47.31982422 120.02342987]
[52.29228973 105.87159729]
[64.88706207 97.72470093]
[79.83457947 98.99261475]
[65.07760620 96.30339813]
[50.32063675 93.61418915]
[41.33956146 95.15285492]
[35.39151382 90.79418945]
[20.67039108 87.91519928]
[5.94926882 85.03621674]
[-8.77185345 82.15723419]
[-23.49297714 79.27824402]
[-38.52161789 84.22299957]
[-49.52722549 74.18677521]
[-64.24835205 71.30778503]
[-78.96947479 68.42880249]
[-93.69059753 65.54981995]
[-108.65952301 66.51480865]
[-122.88913727 71.26012421]
[-133.35702515 83.88373566]
[-149.47569275 80.86371613]
[-154.66363525 65.30681610]
[-143.58395386 53.21663284]
[-127.63446045 57.03051376]
[-113.40484619 52.28519058]
[-114.12796021 44.82013321]
[-129.05807495 46.26636124]
[-142.71118164 40.05405807]
[-130.50430298 31.33624458]
[-115.57418823 29.89001465]
[-116.29730225 22.42495537]
[-131.17314148 20.49897957]
[-146.04898071 18.57300377]
[-160.72837830 24.47434044]
[-172.35685730 15.16692448]
[-187.23269653 13.24094868]
[-200.76614380 21.85635757]
[-215.89251709 16.51103020]
[-221.00814819 1.30544281]
[-212.18876648 -12.09597778]
[-196.19984436 -13.41280937]
[-185.30671692 -1.63489103]
[-170.43087769 0.29108429]
[-156.81549072 -5.74801111]
[-144.12301636 3.69716454]
[-129.24716187 5.62313986]
[-114.37133026 7.54911518]
[-109.26119995 -6.55359936]
[-121.91783142 -14.60404205]
[-134.57446289 -22.65448570]
[-147.23109436 -30.70492744]
[-159.93930054 -38.67372513]
[-172.69853210 -46.56054688]
[-189.09761047 -46.51203537]
[-197.10411072 -60.82384872]
[-188.48162842 -74.77321625]
[-172.10023499 -74.01023102]
[-164.81170654 -59.31977844]
[-152.05247498 -51.43296051]
[-144.72656250 -50.59136963]
[-139.18064880 -43.36156082]
[-126.52401733 -35.31111908]
[-113.86738586 -27.26067543]
[-101.21075439 -19.21023178]
[-77.88919830 19.97521782]
[-90.81160736 50.82869720]
[-76.09048462 53.70767975]
[-61.36936569 56.58666611]
[-46.64824295 59.46564865]
[-32.67255402 54.31497574]
[-20.61399078 64.55712128]
[-5.89286900 67.43611145]
[8.82825375 70.31509399]
[23.54937553 73.19407654]
[38.27050018 76.07306671]
[53.00984955 78.85721588]
[67.76681519 81.54643250]
[82.52378845 84.23564148]
[86.32202148 81.83747864]
[90.37689972 80.28533173]
[88.45092010 65.40949249]
[78.73903656 56.94361115]
[77.43066406 44.52910995]
[84.68431091 34.86589813]
[82.95001984 19.96649361]
[81.21573639 5.06708956]
[79.48144531 -9.83231449]
[77.74715424 -24.73171806]
[67.53169250 -37.56045151]
[73.78496552 -52.72055435]
[90.07412720 -54.61661148]
[99.64230347 -41.29812241]
[92.64656067 -26.46600723]
[94.38085175 -11.56660366]
[96.11513519 3.33280087]
[97.84942627 18.23220444]
[99.58371735 33.13161087]
[110.79808807 46.64207077]
[103.32675934 63.48351669]
[105.25273895 78.35935974]
[117.90937042 86.40979767]
[132.19889832 81.84807587]
[146.48843384 77.28635406]
[160.77796936 72.72463226]
[175.06748962 68.16291046]
[189.35702515 63.60118866]
[203.64656067 59.03946686]
[217.93608093 54.47774124]
[232.22561646 49.91601944]
[234.55010986 29.08244896]
[251.01838684 12.67637157]
[276.39697266 9.86847401]
[285.85678101 -1.77249300]
[295.31658936 -13.41345978]
[304.77639771 -25.05442619]
[314.23620605 -36.69539261]
[323.69601440 -48.33636093]
[319.57565308 -63.29638290]
[325.06698608 -77.80930328]
[338.05847168 -86.29460907]
[353.55465698 -85.48952484]
[365.59692383 -75.70362854]
[369.55474854 -60.69978714]
[363.90628052 -46.24729156]
[350.82351685 -37.90341568]
[335.33697510 -38.87655640]
[325.87716675 -27.23558998]
[316.41735840 -15.59462261]
[306.95755005 -3.95365572]
[297.49774170 7.68731117]
[288.03796387 19.32827759]
[291.26098633 26.10043716]
[304.80529785 19.65439415]
[318.34970093 13.20857525]
[324.79531860 26.75310707]
[311.25134277 33.19871140]
[297.70703125 39.64475250]
[300.93002319 46.41691208]
[315.93002319 46.41691208]
[330.93002319 46.41691208]
[345.93002319 46.41691208]
[360.93002319 46.41691208]
[375.93002319 46.41691208]
[384.48974609 43.29304504]
[391.12286377 46.51472092]
[406.12161255 46.70784378]
[421.12036133 46.90097046]
[436.11911011 47.09409714]
[447.39160156 36.34378433]
[462.59970093 36.75330353]
[472.77902222 47.56613159]
[487.77777100 47.75925827]
[496.95108032 35.24406815]
[511.73892212 30.54307747]
[526.45507812 35.46391296]
[535.44085693 48.11441422]
[535.24108887 63.63020325]
[525.93255615 76.04514313]
[511.09457397 80.58543396]
[496.43267822 75.50524902]
[487.58465576 62.75801468]
[472.58590698 62.56488800]
[462.13156128 73.11203766]
[446.91793823 73.12984467]
[435.92599487 62.09285355]
[420.92724609 61.89972687]
[405.92849731 61.70660400]
[390.92971802 61.51347733]
[375.93002319 61.41691208]
[360.93002319 61.41691208]
[345.93002319 61.41691208]
[330.93002319 61.41691208]
[315.93002319 61.41691208]
[300.93002319 61.41691208]
[289.80480957 75.39962769]
[274.50946045 82.63677979]
[258.53698730 82.38750458]
[245.16578674 75.52655029]
[236.78733826 64.20555115]
[222.49780273 68.76727295]
[208.20828247 73.32899475]
[193.91874695 77.89071655]
[179.62921143 82.45243835]
[165.33969116 87.01416016]
[151.05015564 91.57588959]
[136.76062012 96.13761139]
[122.47109222 100.69933319]
[137.19834900 103.54680634]
[152.07148743 101.60018158]
[166.39256287 106.06192017]
[177.52824402 116.11162567]
[183.43095398 129.90139771]
[183.01535034 144.89564514]
[176.35783386 158.33728027]
[164.68255615 167.75469971]
[150.13632202 171.41630554]
[135.39384460 168.64878845]
[123.16588593 159.96102905]
[115.70087433 146.95051575]
[114.37147522 132.00933838]
[108.39408875 118.25177002]
[107.04400635 133.19088745]
[105.69392395 148.13000488]
[104.34383392 163.06912231]
[102.99375153 178.00823975]
[101.64366150 192.94735718]
[100.58233643 207.90975952]
[99.81015015 222.88987732]
[99.03797150 237.86999512]
[98.26579285 252.85009766]
[97.49360657 267.83020020]
[96.72142792 282.81033325]
[110.31549072 289.67480469]
[119.93721771 301.47915649]
[123.91958618 316.17816162]
[121.57261658 331.22512817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 239]
[10 238]
[11 237]
[12 236]
[13 235]
[14 234]
[18 233]
[19 232]
[20 231]
[21 230]
[22 229]
[23 228]
[31 105]
[32 104]
[33 103]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[41 96]
[42 95]
[43 94]
[44 93]
[45 52]
[46 51]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[75 91]
[76 90]
[77 89]
[78 88]
[79 86]
[80 85]
[107 127]
[108 126]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[128 214]
[129 213]
[130 212]
[131 211]
[132 210]
[133 209]
[134 208]
[135 207]
[136 206]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
[165 201]
[166 200]
[167 199]
[168 198]
[169 197]
[170 196]
[172 195]
[173 194]
[174 193]
[175 192]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
