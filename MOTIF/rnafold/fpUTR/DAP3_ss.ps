%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCUCAGGACGGGCGCUUUGGAGCCGGCCCCAGGCAGCGUGUGUCGGUCGCCUAGUCUGGAGAACUAGUCCUCGACUCACGAGAUGAAGUUUUACCAUGUUGGCCAGGCUGGUCUCGAAUUCCUGACCUCAAGUGAUCUGCCCACCUUGACCUCCCAAAGUGCUGGGAUUACAGUGCAAGG\
) } def
/len { sequence length } bind def

/coor [
[104.10034180 404.32464600]
[103.08222961 389.35922241]
[102.06411743 374.39382935]
[100.41177368 359.48510742]
[98.12817383 344.65997314]
[95.84457397 329.83480835]
[93.56097412 315.00964355]
[91.27738190 300.18450928]
[88.99378204 285.35934448]
[79.16001892 296.68618774]
[64.20911407 297.89877319]
[52.67856216 288.30468750]
[51.15272903 273.38247681]
[60.50291824 261.65328979]
[75.38983154 259.81488037]
[87.31269073 268.91738892]
[86.54885101 253.93684387]
[85.78501129 238.95629883]
[85.02117157 223.97576904]
[84.25733185 208.99522400]
[83.49349213 194.01467896]
[82.72965240 179.03414917]
[81.96581268 164.05360413]
[81.20196533 149.07307434]
[83.69165802 94.69554138]
[72.95082855 84.22488403]
[62.21000290 73.75422668]
[51.46917725 63.28357315]
[40.63983536 52.90448761]
[29.72275925 42.61772919]
[18.80568314 32.33096695]
[7.88860703 22.04420853]
[-5.88276577 16.09868050]
[-20.85627937 15.20767212]
[-35.82979202 14.31666374]
[-50.80330658 13.42565536]
[-65.77681732 12.53464794]
[-80.75033569 11.64363956]
[-95.73087311 10.87979889]
[-110.71735382 10.24318027]
[-119.44712067 13.01033497]
[-125.95228577 9.46636868]
[-140.92579651 8.57536030]
[-155.89930725 7.68435240]
[-166.51260376 19.16877747]
[-182.03135681 21.09297371]
[-195.12806702 12.54839230]
[-199.61889648 -2.43047571]
[-193.38340759 -16.77106667]
[-179.36578369 -23.70219231]
[-164.18475342 -19.95118713]
[-155.00830078 -7.28916121]
[-140.03479004 -6.39815283]
[-125.06127930 -5.50714445]
[-110.08074188 -4.74330378]
[-95.09425354 -4.10668612]
[-88.26235962 -6.97061062]
[-79.85932159 -3.32987428]
[-64.88581085 -2.43886590]
[-49.91229630 -1.54785776]
[-34.93878555 -0.65684950]
[-19.96527100 0.23415877]
[-4.99175739 1.12516701]
[3.51308084 -11.23071098]
[-2.66543794 -24.89913940]
[-8.84395695 -38.56756592]
[-15.02247524 -52.23599243]
[-21.20099449 -65.90441895]
[-27.37951279 -79.57284546]
[-42.57990646 -89.94784546]
[-40.19142532 -107.32371521]
[-46.60115433 -120.88525391]
[-53.01088333 -134.44679260]
[-59.52220535 -140.88639832]
[-59.41212082 -148.29348755]
[-65.59063721 -161.96191406]
[-71.76915741 -175.63034058]
[-86.21085358 -182.61724854]
[-89.61184692 -198.29566956]
[-79.36317444 -210.63845825]
[-63.32675171 -210.17727661]
[-53.80434418 -197.26591492]
[-58.10073090 -181.80885315]
[-51.92221069 -168.14042664]
[-45.74369049 -154.47200012]
[-39.44934082 -140.85652161]
[-33.03961182 -127.29498291]
[-26.62988472 -113.73344421]
[-15.33917046 -109.35245514]
[-9.89405823 -98.08744812]
[-13.71108532 -85.75136566]
[-7.53256655 -72.08293915]
[-1.35404789 -58.41451263]
[4.82447100 -44.74608612]
[11.00298977 -31.07765770]
[17.18150902 -17.40922928]
[28.13108635 -27.66138840]
[42.88766098 -30.35275650]
[56.75151062 -24.62618256]
[65.30722809 -12.30548096]
[65.82996368 2.68540788]
[58.15323257 15.57213593]
[44.72194290 22.25049591]
[29.81374168 20.59354019]
[18.17536736 11.12713146]
[29.09244347 21.41389084]
[40.00952148 31.70065117]
[50.92659760 41.98741150]
[57.96705246 44.29151154]
[61.93983459 52.54274750]
[72.68066406 63.01340485]
[83.42148590 73.48406219]
[94.16231537 83.95471954]
[109.07102966 85.60706329]
[121.84396362 77.74245453]
[134.61689758 69.87784576]
[147.38983154 62.01323700]
[146.87500000 46.66297531]
[154.11842346 33.11940002]
[167.17166138 25.02566528]
[182.52345276 24.55894470]
[196.04426575 31.84478378]
[204.09704590 44.92332840]
[204.51564026 60.27651596]
[197.18745422 73.77441406]
[184.08374023 81.78615570]
[168.72930908 82.15663147]
[155.25444031 74.78617096]
[142.48150635 82.65077972]
[129.70857239 90.51538849]
[116.93563843 98.37999725]
[120.09582520 113.04332733]
[134.97433472 114.94859314]
[149.85284424 116.85386658]
[164.73133850 118.75913239]
[179.60984802 120.66439819]
[194.50399780 122.44326782]
[209.41271973 124.09561157]
[220.59704590 113.16654205]
[236.19364929 112.03510284]
[248.83827209 121.23551941]
[252.56050110 136.42362976]
[245.60282898 150.42810059]
[231.25045776 156.63641357]
[216.28012085 152.11721802]
[207.76036072 139.00433350]
[192.85165405 137.35197449]
[185.84112549 139.74559021]
[177.70458984 135.54290771]
[162.82608032 133.63763428]
[147.94757080 131.73237610]
[133.06906128 129.82710266]
[118.19055939 127.92183685]
[112.68854523 133.01867676]
[122.88207245 144.02287292]
[111.87773132 154.21621704]
[101.68451691 143.21237183]
[96.18251038 148.30923462]
[96.94635010 163.28976440]
[97.71018982 178.27030945]
[98.47402954 193.25083923]
[99.23786926 208.23138428]
[100.00170898 223.21192932]
[100.76554871 238.19245911]
[101.52939606 253.17300415]
[102.29323578 268.15353394]
[103.81893158 283.07574463]
[106.10253143 297.90090942]
[108.38613129 312.72604370]
[110.66973114 327.55120850]
[112.95333099 342.37637329]
[115.23693085 357.20150757]
[126.16593933 346.92742920]
[141.03651428 348.89370728]
[148.91963196 361.65521240]
[144.02166748 375.83303833]
[129.94233704 381.00723267]
[117.02952576 373.37570190]
[118.04763794 388.34112549]
[119.06575012 403.30651855]
[130.15969849 414.89547729]
[127.87332916 430.77478027]
[113.96056366 438.76318359]
[99.09407806 432.73266602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 113]
[26 112]
[27 111]
[28 110]
[29 108]
[30 107]
[31 106]
[32 105]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[39 56]
[40 55]
[42 54]
[43 53]
[44 52]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[71 88]
[72 87]
[73 86]
[75 85]
[76 84]
[77 83]
[114 131]
[115 130]
[116 129]
[117 128]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
