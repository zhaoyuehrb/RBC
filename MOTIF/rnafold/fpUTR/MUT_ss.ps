%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGUCAUCAGGAAUGCGCCCAUGAGAGCGCUAUUAGAUUGGCUGGAGGGAGGGCGGUGUCGGCCUACGCCCCCAGAGUCGUCCGGCUGACGCUGGCGGUGGCGCGGUUUGUGUGGGCUUGGUGAGGGCGGGGAGGCCUGGCUGUGUGGAUGUCUGACAGGUGAGGCGGGGGACGCAGAAGUGCAGCCGCCCUCUCCCACAGCGGAGUCCAAAACAGGCCUACCAGUCAGUUCUUAUUUCUAUUGGGUGUUUCC\
AUGCUCCACC\
) } def
/len { sequence length } bind def

/coor [
[71.14898682 688.85693359]
[56.62202835 684.77893066]
[43.64601517 677.07922363]
[33.10567856 666.28277588]
[25.71967316 653.12567139]
[21.99158859 638.50500488]
[22.17561150 623.41766357]
[26.25919724 608.89227295]
[33.96391678 595.91918945]
[44.76445389 585.38305664]
[57.92440796 578.00213623]
[72.54650879 574.27966309]
[72.72366333 559.28070068]
[72.90081787 544.28179932]
[73.07796478 529.28283691]
[70.02486420 522.58007812]
[73.34683228 514.10803223]
[73.70111084 499.11224365]
[74.05538940 484.11642456]
[74.40967560 469.12060547]
[74.76395416 454.12478638]
[75.11824036 439.12896729]
[75.47251892 424.13314819]
[65.03832245 413.56607056]
[65.18399048 398.35314941]
[76.33845520 387.48043823]
[76.69274139 372.48461914]
[77.04701996 357.48880005]
[77.40129852 342.49298096]
[75.60112762 340.38580322]
[74.51284027 337.45040894]
[74.45169067 333.94927979]
[75.63399506 330.25274658]
[78.14312744 326.80194092]
[79.20518494 311.83959961]
[72.38844299 298.59643555]
[81.08342743 285.37872314]
[82.14548492 270.41638184]
[83.20753479 255.45402527]
[84.18122101 240.48565674]
[85.06649017 225.51181030]
[85.95176697 210.53794861]
[86.83703613 195.56410217]
[87.72231293 180.59024048]
[88.60758209 165.61639404]
[89.49285126 150.64253235]
[90.37812805 135.66868591]
[83.89779663 133.24987793]
[77.98194122 129.66548157]
[72.83794403 125.04113007]
[68.64613342 119.53894806]
[65.55345154 113.35181427]
[50.75803375 115.82073212]
[35.96261215 118.28965759]
[23.62417603 128.19285583]
[9.79696941 122.65592957]
[-4.99845028 125.12484741]
[-17.30635262 135.96217346]
[-32.75712204 130.46620178]
[-35.45633316 114.29071045]
[-22.62726784 104.07566833]
[-7.46736908 110.32942963]
[7.32805061 107.86051178]
[18.60822105 98.13389587]
[33.49369431 103.49423218]
[48.28911591 101.02531433]
[63.08453369 98.55639648]
[63.42672729 94.78163147]
[64.15388489 91.06179047]
[50.63935089 84.55353546]
[37.12481689 78.04528046]
[23.61028481 71.53702545]
[7.81967020 72.52042389]
[-0.29011676 60.02719879]
[-13.80464935 53.51893997]
[-27.31918335 47.01068497]
[-40.83371735 40.50242996]
[-56.62432861 41.48582458]
[-64.73411560 28.99260139]
[-78.24864960 22.48434639]
[-91.76318359 15.97609043]
[-105.27771759 9.46783447]
[-120.11046600 14.92357159]
[-134.42134094 8.21727562]
[-139.71995544 -6.67232656]
[-132.86273193 -20.91149902]
[-117.91793823 -26.05239296]
[-103.75205994 -19.04500580]
[-98.76946259 -4.04669905]
[-85.25492859 2.46155715]
[-71.74039459 8.96981335]
[-58.22586060 15.47806931]
[-43.40189743 14.02915859]
[-34.32545853 26.98789597]
[-20.81092644 33.49615097]
[-7.29639387 40.00440979]
[6.21813917 46.51266479]
[21.04210472 45.06375504]
[30.11853981 58.02249146]
[43.63307190 64.53074646]
[57.14760590 71.03900146]
[70.66213989 77.54725647]
[78.27998352 70.11561584]
[87.70025635 65.16392517]
[98.14122772 63.10310745]
[108.73645020 64.10417938]
[118.60667419 68.08406067]
[128.63485718 56.92898560]
[138.66302490 45.77391434]
[148.69120789 34.61884308]
[158.71939087 23.46377182]
[168.74757385 12.30870056]
[178.77574158 1.15362847]
[182.18803406 -16.95737839]
[199.09730530 -21.70547485]
[208.99302673 -32.97820282]
[218.88876343 -44.25093079]
[228.78450012 -55.52366257]
[238.68023682 -66.79638672]
[248.57597351 -78.06911469]
[258.47171021 -89.34185028]
[261.76119995 -104.81730652]
[275.97229004 -109.27762604]
[285.86801147 -120.55035400]
[295.28945923 -132.22239685]
[304.22048950 -144.27380371]
[313.15155029 -156.32521057]
[322.08258057 -168.37661743]
[331.01364136 -180.42803955]
[339.94467163 -192.47944641]
[348.87570190 -204.53085327]
[357.80676270 -216.58226013]
[353.81240845 -227.73706055]
[355.66400146 -239.31871033]
[362.79022217 -248.48320007]
[373.33895874 -253.03633118]
[384.65756226 -251.95858765]
[393.87075806 -263.79568481]
[403.01388550 -275.68701172]
[412.08660889 -287.63211060]
[411.11376953 -300.47146606]
[418.88861084 -310.22839355]
[430.82946777 -312.02630615]
[440.04266357 -323.86343384]
[449.25585938 -335.70053101]
[458.46905518 -347.53762817]
[467.68225098 -359.37475586]
[476.89541626 -371.21185303]
[471.98464966 -387.41439819]
[477.65451050 -403.19039917]
[491.47866821 -412.37579346]
[507.88687134 -411.50778198]
[516.95959473 -423.45285034]
[526.03234863 -435.39794922]
[535.10510254 -447.34304810]
[544.17785645 -459.28814697]
[539.56884766 -474.10491943]
[544.58105469 -488.79019165]
[557.28710938 -497.69720459]
[572.80139160 -497.40100098]
[585.15820312 -488.01550293]
[589.60626221 -473.14962769]
[584.43505859 -458.51956177]
[571.63305664 -449.75091553]
[556.12292480 -450.21539307]
[547.05023193 -438.27029419]
[537.97747803 -426.32519531]
[528.90472412 -414.38009644]
[519.83197021 -402.43502808]
[524.85266113 -390.08438110]
[523.10949707 -376.75765991]
[514.95080566 -365.94122314]
[502.41732788 -360.51785278]
[488.73254395 -361.99865723]
[479.51934814 -350.16156006]
[470.30615234 -338.32443237]
[461.09295654 -326.48733521]
[451.87976074 -314.65023804]
[442.66659546 -302.81311035]
[441.17935181 -285.31295776]
[424.03170776 -278.55935669]
[414.95895386 -266.61425781]
[413.42108154 -259.41125488]
[405.70785522 -254.58250427]
[396.49465942 -242.74539185]
[399.83023071 -224.72114563]
[388.71322632 -209.74584961]
[369.85815430 -207.65122986]
[360.92712402 -195.59980774]
[351.99609375 -183.54840088]
[343.06503296 -171.49699402]
[334.13400269 -159.44558716]
[325.20294189 -147.39416504]
[316.27191162 -135.34275818]
[307.34088135 -123.29135132]
[322.12396240 -125.83307648]
[335.13217163 -118.36405182]
[340.38952637 -104.31555939]
[335.48080444 -90.14148712]
[322.66107178 -82.35341644]
[307.81970215 -84.52919006]
[297.77484131 -95.66925812]
[297.14074707 -110.65461731]
[287.24502563 -99.38188934]
[284.66333008 -84.71273041]
[269.74444580 -79.44611359]
[259.84869385 -68.17338562]
[249.95297241 -56.90065384]
[240.05723572 -45.62792587]
[230.16149902 -34.35519791]
[220.26576233 -23.08246803]
[210.37002563 -11.80973911]
[210.84713745 0.25629321]
[202.72436523 9.72552109]
[189.93081665 11.18180752]
[179.90263367 22.33687973]
[169.87446594 33.49195099]
[159.84628296 44.64702225]
[149.81809998 55.80209351]
[139.78991699 66.95716858]
[129.76174927 78.11223602]
[136.89297485 101.93485260]
[127.30896759 124.88082886]
[105.35198212 136.55395508]
[104.46670532 151.52781677]
[103.58143616 166.50166321]
[102.69615936 181.47552490]
[101.81089020 196.44937134]
[100.92562103 211.42323303]
[100.04034424 226.39707947]
[99.15507507 241.37094116]
[101.76607513 250.08834839]
[98.16989136 256.51608276]
[97.10783386 271.47842407]
[96.04578400 286.44079590]
[102.78656006 300.75415039]
[94.16754150 312.90167236]
[93.10548401 327.86401367]
[92.39711761 342.84729004]
[92.04283905 357.84307861]
[91.68855286 372.83889771]
[91.33427429 387.83471680]
[101.96283722 399.22204590]
[101.38992310 414.42489624]
[90.46833801 424.48742676]
[90.11405182 439.48324585]
[89.75977325 454.47906494]
[89.40548706 469.47488403]
[89.05120850 484.47070312]
[88.69692993 499.46652222]
[88.34264374 514.46234131]
[88.07691956 529.45996094]
[87.89977264 544.45892334]
[87.72261810 559.45788574]
[87.54546356 574.45684814]
[102.07556915 578.52362061]
[115.05751801 586.21325684]
[125.60619354 597.00158691]
[133.00234985 610.15301514]
[136.74172974 624.77075195]
[136.56935120 639.85827637]
[132.49699402 654.38684082]
[124.80228424 667.36578369]
[114.00988770 677.91027832]
[100.85564423 685.30139160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 255]
[13 254]
[14 253]
[15 252]
[17 251]
[18 250]
[19 249]
[20 248]
[21 247]
[22 246]
[23 245]
[26 242]
[27 241]
[28 240]
[29 239]
[34 238]
[35 237]
[37 235]
[38 234]
[39 233]
[40 231]
[41 230]
[42 229]
[43 228]
[44 227]
[45 226]
[46 225]
[47 224]
[52 67]
[53 66]
[54 65]
[56 63]
[57 62]
[69 102]
[70 101]
[71 100]
[72 99]
[74 97]
[75 96]
[76 95]
[77 94]
[79 92]
[80 91]
[81 90]
[82 89]
[107 221]
[108 220]
[109 219]
[110 218]
[111 217]
[112 216]
[113 215]
[115 212]
[116 211]
[117 210]
[118 209]
[119 208]
[120 207]
[121 206]
[123 204]
[124 203]
[125 195]
[126 194]
[127 193]
[128 192]
[129 191]
[130 190]
[131 189]
[132 188]
[137 185]
[138 184]
[139 182]
[140 181]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[148 174]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
