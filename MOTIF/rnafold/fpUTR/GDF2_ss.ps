%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACAAGUGGAGGACAAUCCAGCCCGGCAGCGGGUGAGAGUGGGUGCUGGCCAGGACGGUUCCUUCAGAGCAAACAGCAGGGAGAUGCCGGCCCGCUCCUUCCCAGCUCCUCCCCGUGCCCGCUAACACAGCACGGCCGCCUGCAGUCUCCUCUCUGGGUGAUUGCGCGGGCCUAAG\
) } def
/len { sequence length } bind def

/coor [
[134.18815613 211.75733948]
[123.68905640 222.47036743]
[108.81745911 224.42880249]
[95.90280914 216.79913330]
[90.44168091 202.82859802]
[94.75936127 188.46176147]
[95.89764404 173.50500488]
[97.03592682 158.54826355]
[98.17421722 143.59152222]
[90.73838043 144.57046509]
[82.56879425 157.15051270]
[74.39920807 169.73057556]
[66.22962189 182.31063843]
[69.76026154 197.71551514]
[61.29324341 211.06036377]
[45.85190582 214.42793274]
[32.59731293 205.82031250]
[29.39318275 190.34422302]
[38.14046860 177.18138123]
[53.64956284 174.14105225]
[61.81914902 161.56098938]
[69.98873138 148.98092651]
[78.15831757 136.40087891]
[67.92868042 124.90940094]
[62.85687637 111.09909821]
[63.19345474 97.06339264]
[68.40538025 84.75340271]
[77.31414032 75.70693970]
[69.81414032 62.71655655]
[62.31414032 49.72617340]
[54.81414032 36.73579407]
[47.79308319 30.84789085]
[47.29887009 23.45260239]
[40.02672577 10.33330727]
[32.75458145 -2.78598857]
[25.48243904 -15.90528393]
[18.56521225 -21.91482544]
[18.20013809 -29.31761169]
[11.15806580 -42.56182480]
[4.11599207 -55.80603790]
[-3.04138947 -68.98829651]
[-10.31353378 -82.10758972]
[-17.58567810 -95.22689056]
[-25.42315674 -108.01648712]
[-33.81105042 -120.45205688]
[-42.19894409 -132.88761902]
[-56.33041382 -140.00183105]
[-57.03290176 -154.87986755]
[-65.42079926 -167.31542969]
[-79.55226898 -174.42964172]
[-80.25475311 -189.30767822]
[-88.64264679 -201.74324036]
[-97.03054047 -214.17880249]
[-105.41843414 -226.61436462]
[-112.83310699 -231.99816895]
[-113.84198761 -239.34095764]
[-122.01157379 -251.92102051]
[-129.33114624 -257.43341064]
[-130.21173096 -264.79269409]
[-138.16052246 -277.51339722]
[-152.03509521 -285.11648560]
[-152.21792603 -300.00994873]
[-160.16670227 -312.73068237]
[-168.11549377 -325.45141602]
[-176.06428528 -338.17211914]
[-184.01307678 -350.89285278]
[-191.96186829 -363.61355591]
[-195.92538452 -365.53753662]
[-198.76927185 -368.34933472]
[-200.35119629 -371.58227539]
[-200.69703674 -374.77175903]
[-199.98535156 -377.51065063]
[-207.02743530 -390.75488281]
[-221.88734436 -396.80157471]
[-226.28645325 -412.22970581]
[-216.85015869 -425.20413208]
[-200.81715393 -425.77197266]
[-190.48660278 -413.49765015]
[-193.78321838 -397.79693604]
[-186.74114990 -384.55273438]
[-179.24114990 -371.56234741]
[-171.29235840 -358.84164429]
[-163.34356689 -346.12091064]
[-155.39477539 -333.40017700]
[-147.44598389 -320.67947388]
[-139.49719238 -307.95874023]
[-126.19116974 -301.26556396]
[-125.43979645 -285.46218872]
[-117.49100494 -272.74148560]
[-109.43151093 -260.09060669]
[-101.26192474 -247.51054382]
[-92.98287201 -235.00225830]
[-84.59497833 -222.56669617]
[-76.20708466 -210.13113403]
[-67.81919098 -197.69557190]
[-54.28767776 -191.47082520]
[-52.98523331 -175.70332336]
[-44.59733963 -163.26776123]
[-31.06582642 -157.04301453]
[-29.76338005 -141.27551270]
[-21.37548637 -128.83995056]
[-12.98759270 -116.40438080]
[-7.45626688 -130.34729004]
[6.84023619 -134.88710022]
[19.40217400 -126.68968964]
[21.00371933 -111.77542877]
[10.46865273 -101.09777069]
[-4.46638250 -102.49903107]
[2.80576181 -89.37973785]
[10.07790661 -76.26043701]
[16.08757210 -71.92241669]
[17.36020660 -62.84811401]
[24.40227890 -49.60390091]
[31.44435310 -36.35968399]
[38.60173416 -23.17742920]
[45.87387848 -10.05813313]
[53.14602280 3.06116271]
[60.41816711 16.18045807]
[67.80451965 29.23579407]
[75.30451965 42.22617340]
[82.80451965 55.21655655]
[90.30451965 68.20693970]
[113.51933289 69.63507080]
[130.11439514 85.93143463]
[144.78660583 82.81275940]
[159.45881653 79.69408417]
[169.36723328 67.07651520]
[185.41026306 67.10038757]
[195.28108215 79.74738312]
[191.40763855 95.31581116]
[176.76130676 101.86290741]
[162.57749939 94.36629486]
[147.90528870 97.48497009]
[133.23306274 100.60364532]
[135.01037598 109.62508392]
[134.20565796 119.51330566]
[130.51867676 129.50750732]
[141.66586304 139.54446411]
[152.81303406 149.58142090]
[163.96020508 159.61837769]
[175.19453430 169.55767822]
[186.51518250 179.39855957]
[192.96540833 181.04383850]
[196.99368286 185.10246277]
[198.05143738 189.78585815]
[209.02174377 200.01583862]
[219.99205017 210.24581909]
[230.96235657 220.47578430]
[241.93266296 230.70576477]
[252.90296936 240.93574524]
[268.27261353 244.68873596]
[272.30392456 259.02740479]
[283.27423096 269.25738525]
[294.24453735 279.48736572]
[310.33639526 282.64715576]
[315.38912964 298.24847412]
[304.20492554 310.24206543]
[288.28915405 306.28991699]
[284.01455688 290.45767212]
[273.04425049 280.22769165]
[262.07394409 269.99771118]
[247.48896790 266.97644043]
[242.67298889 251.90605164]
[231.70268250 241.67607117]
[220.73237610 231.44609070]
[209.76208496 221.21612549]
[198.79177856 210.98614502]
[187.82147217 200.75616455]
[176.67430115 190.71920776]
[165.35365295 180.87832642]
[158.22271729 178.85734558]
[153.92324829 170.76554871]
[142.77606201 160.72859192]
[131.62889099 150.69163513]
[120.48172760 140.65467834]
[113.04589081 141.63362122]
[118.01647949 155.78611755]
[122.98706818 169.93861389]
[127.95765686 184.09112549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 23]
[11 22]
[12 21]
[13 20]
[28 122]
[29 121]
[30 120]
[31 119]
[33 118]
[34 117]
[35 116]
[36 115]
[38 114]
[39 113]
[40 112]
[41 110]
[42 109]
[43 108]
[44 102]
[45 101]
[46 100]
[48 98]
[49 97]
[51 95]
[52 94]
[53 93]
[54 92]
[56 91]
[57 90]
[59 89]
[60 88]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[72 80]
[73 79]
[124 134]
[125 133]
[126 132]
[137 175]
[138 174]
[139 173]
[140 172]
[141 170]
[142 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
