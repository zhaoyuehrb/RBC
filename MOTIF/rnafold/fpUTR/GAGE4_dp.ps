%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE4)
} def

/sequence { (\
CGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.005052539 ubox
1 63 0.003615281 ubox
1 74 0.004394275 ubox
1 76 0.066815134 ubox
1 78 0.821090003 ubox
2 38 0.003761285 ubox
2 39 0.005202164 ubox
2 62 0.003333048 ubox
2 73 0.003325043 ubox
2 75 0.068619428 ubox
2 77 0.832196322 ubox
3 37 0.003680402 ubox
3 74 0.056738871 ubox
3 76 0.833031461 ubox
4 37 0.004986024 ubox
4 63 0.028686139 ubox
4 74 0.832322012 ubox
4 76 0.013666269 ubox
4 78 0.012061298 ubox
5 12 0.003178196 ubox
5 36 0.004911855 ubox
5 50 0.018800999 ubox
5 51 0.028885632 ubox
5 52 0.422665562 ubox
5 53 0.034622090 ubox
5 54 0.020871632 ubox
5 57 0.024521485 ubox
5 59 0.004568101 ubox
5 62 0.028646045 ubox
5 73 0.830185109 ubox
5 75 0.014838001 ubox
5 77 0.009437701 ubox
6 11 0.003182180 ubox
6 35 0.004227777 ubox
6 36 0.004899529 ubox
6 49 0.020083859 ubox
6 50 0.031129364 ubox
6 51 0.518808134 ubox
6 52 0.033632640 ubox
6 53 0.018522856 ubox
6 54 0.006974715 ubox
6 55 0.015755998 ubox
6 56 0.028085720 ubox
6 57 0.005569232 ubox
6 58 0.004972653 ubox
6 61 0.028176738 ubox
6 69 0.008711693 ubox
6 72 0.823069454 ubox
6 73 0.026238974 ubox
7 34 0.003404550 ubox
7 35 0.006913373 ubox
7 48 0.020345976 ubox
7 49 0.033248725 ubox
7 50 0.917443697 ubox
7 51 0.042115246 ubox
7 52 0.015729378 ubox
7 53 0.007597618 ubox
7 54 0.009780507 ubox
7 55 0.029410770 ubox
7 56 0.008873058 ubox
7 59 0.011918293 ubox
7 68 0.006848665 ubox
7 69 0.027512227 ubox
7 71 0.283002848 ubox
7 72 0.028240945 ubox
7 73 0.010139217 ubox
8 34 0.007369056 ubox
8 47 0.020440988 ubox
8 48 0.025873607 ubox
8 49 0.995903027 ubox
8 50 0.006151225 ubox
8 51 0.014036888 ubox
8 54 0.010995848 ubox
8 55 0.009208078 ubox
8 58 0.013172446 ubox
8 68 0.007751914 ubox
8 69 0.066263986 ubox
8 72 0.009288827 ubox
9 33 0.007779672 ubox
9 48 0.996596385 ubox
9 50 0.014401026 ubox
9 53 0.009150781 ubox
9 54 0.008650555 ubox
9 57 0.013153250 ubox
9 67 0.006782342 ubox
9 68 0.062429444 ubox
9 71 0.007900158 ubox
10 19 0.004865613 ubox
10 22 0.003986213 ubox
10 32 0.007870710 ubox
10 47 0.996851196 ubox
10 49 0.014546145 ubox
10 52 0.007574727 ubox
10 53 0.007455737 ubox
10 56 0.013081887 ubox
10 67 0.046149569 ubox
11 18 0.004874624 ubox
11 21 0.004305226 ubox
11 31 0.008051700 ubox
11 45 0.999164202 ubox
11 65 0.016217124 ubox
12 17 0.004747934 ubox
12 20 0.004319868 ubox
12 30 0.007934689 ubox
12 44 0.998532888 ubox
12 64 0.015372187 ubox
13 19 0.004327466 ubox
13 29 0.005837318 ubox
13 43 0.997371946 ubox
13 61 0.012511872 ubox
14 18 0.004048331 ubox
14 28 0.004773736 ubox
14 40 0.003988424 ubox
14 44 0.005162164 ubox
14 60 0.012364917 ubox
15 42 0.937101502 ubox
15 43 0.005871050 ubox
15 52 0.009677687 ubox
15 58 0.015121161 ubox
16 41 0.913061197 ubox
16 51 0.009930601 ubox
16 57 0.015241309 ubox
17 25 0.007768985 ubox
17 39 0.998308002 ubox
17 50 0.010032859 ubox
17 56 0.015076426 ubox
18 24 0.007828026 ubox
18 38 0.999770377 ubox
18 49 0.010089720 ubox
18 55 0.015023605 ubox
19 23 0.007774379 ubox
19 37 0.999766173 ubox
20 36 0.999321022 ubox
20 48 0.015554662 ubox
20 53 0.006253118 ubox
21 35 0.998050996 ubox
21 47 0.016196151 ubox
21 52 0.005917715 ubox
22 30 0.026531952 ubox
22 31 0.013819350 ubox
22 46 0.016160678 ubox
23 29 0.030243713 ubox
23 32 0.990709811 ubox
24 28 0.030267591 ubox
24 31 0.994984836 ubox
24 45 0.017384262 ubox
25 30 0.930838730 ubox
25 44 0.017408526 ubox
26 32 0.007401706 ubox
26 43 0.017326637 ubox
26 47 0.008094224 ubox
27 31 0.003360091 ubox
27 46 0.008094384 ubox
28 41 0.010682996 ubox
29 40 0.016470023 ubox
29 44 0.008048761 ubox
30 39 0.017642343 ubox
30 43 0.008043620 ubox
31 38 0.017645770 ubox
31 42 0.008028075 ubox
32 37 0.017363890 ubox
38 45 0.003592058 ubox
39 44 0.003614127 ubox
43 78 0.003970712 ubox
44 55 0.005050902 ubox
44 56 0.009870693 ubox
44 77 0.004010566 ubox
45 54 0.005098880 ubox
45 55 0.010207402 ubox
46 53 0.005211684 ubox
46 54 0.009843357 ubox
46 67 0.003359997 ubox
46 75 0.004064022 ubox
47 65 0.015685627 ubox
47 74 0.004065034 ubox
48 64 0.015792602 ubox
48 66 0.011631514 ubox
49 63 0.015803624 ubox
49 65 0.012610412 ubox
50 64 0.012734971 ubox
50 65 0.003796661 ubox
50 66 0.010788377 ubox
51 63 0.012637025 ubox
51 64 0.006289470 ubox
51 65 0.013520864 ubox
51 66 0.025315281 ubox
51 81 0.006583973 ubox
52 63 0.006492116 ubox
52 64 0.014483155 ubox
52 65 0.024500551 ubox
52 66 0.072030109 ubox
52 80 0.008496460 ubox
52 81 0.079557737 ubox
53 63 0.014441462 ubox
53 64 0.024644115 ubox
53 65 0.076921985 ubox
53 66 0.027016054 ubox
53 79 0.008272167 ubox
53 80 0.106638174 ubox
53 81 0.013107122 ubox
54 63 0.024104050 ubox
54 64 0.079155771 ubox
54 65 0.010087282 ubox
54 66 0.162965296 ubox
54 78 0.006692227 ubox
54 79 0.111918203 ubox
54 80 0.012939645 ubox
55 63 0.079351704 ubox
55 65 0.123985626 ubox
55 78 0.112306027 ubox
56 65 0.954916942 ubox
57 64 0.965711535 ubox
57 66 0.102549026 ubox
57 79 0.113731067 ubox
58 63 0.965637591 ubox
58 65 0.109712807 ubox
58 78 0.119207364 ubox
59 64 0.104507984 ubox
59 74 0.003885694 ubox
59 76 0.149375162 ubox
59 78 0.074251701 ubox
60 73 0.003718032 ubox
60 75 0.155339743 ubox
60 77 0.102682232 ubox
61 74 0.154785908 ubox
61 76 0.103685258 ubox
62 70 0.053769738 ubox
62 74 0.007452069 ubox
63 69 0.059128132 ubox
63 72 0.151130738 ubox
63 73 0.004272540 ubox
63 75 0.004518875 ubox
64 68 0.051456834 ubox
64 71 0.150006007 ubox
64 73 0.108801051 ubox
65 72 0.110485835 ubox
66 71 0.100295783 ubox
66 75 0.024607167 ubox
66 77 0.015517403 ubox
66 82 0.059479656 ubox
67 74 0.024815717 ubox
67 76 0.015751646 ubox
67 79 0.011076084 ubox
67 80 0.422877216 ubox
67 81 0.054238177 ubox
68 78 0.006096028 ubox
68 79 0.487028789 ubox
68 80 0.040476655 ubox
69 76 0.017537450 ubox
69 78 0.494783880 ubox
70 75 0.014953086 ubox
70 77 0.485293702 ubox
71 76 0.449182260 ubox
71 79 0.056033594 ubox
72 78 0.059804764 ubox
74 82 0.009332263 ubox
75 81 0.010328156 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
