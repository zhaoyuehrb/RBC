%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACAGGGGCGGCUCUUUCCUGGGUGGGGUUUGUGAAGUCGUGGCCCGUUAGCAGGAAGCCUAACAGUCGCCCCGACGCUAGUGAGGGACCCAAUCUGAGUCCCCGGCCAGCCGAAUCCAAGCCGUGUGUACUGCGUGCUCAGCACUGCCCGACAGUCCUAGCUAAACUUCGCCAACUCCGCUGCCUUUGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[8.14825726 629.12890625]
[-3.81906605 639.45159912]
[-19.57414436 638.20538330]
[-29.76977158 626.12963867]
[-28.35705948 610.38861084]
[-16.17414856 600.32122803]
[-14.99135971 585.36791992]
[-13.92664051 570.40576172]
[-12.98005581 555.43566895]
[-12.03347206 540.46551514]
[-11.08688736 525.49542236]
[-10.14030266 510.52532959]
[-9.19371796 495.55523682]
[-20.93670845 490.98916626]
[-30.93544769 483.29348755]
[-38.37642288 473.08160400]
[-42.65065002 461.17218018]
[-43.40351486 448.52343750]
[-40.56417084 436.15618896]
[-34.35206223 425.07125854]
[-25.26001930 416.16864014]
[-14.01514435 410.17443848]
[-1.52069521 407.58154297]
[0.13355725 392.67306519]
[1.78780973 377.76455688]
[3.44206214 362.85604858]
[5.09631491 347.94754028]
[6.75056696 333.03903198]
[8.40481949 318.13055420]
[10.05907249 303.22204590]
[11.71332455 288.31353760]
[5.42682838 274.81060791]
[14.63886356 261.94790649]
[16.29311562 247.03939819]
[17.94736862 232.13090515]
[19.60162163 217.22239685]
[21.25587463 202.31388855]
[12.68998623 190.00025940]
[-1.86317611 186.36633301]
[-16.41633797 182.73239136]
[-30.96949959 179.09846497]
[-46.23303223 183.26200867]
[-56.70671463 172.67185974]
[-71.25987244 169.03791809]
[-85.81303406 165.40399170]
[-101.66172791 175.76951599]
[-119.74656677 171.34483337]
[-128.70661926 155.38946533]
[-143.36724854 152.21675110]
[-158.02787781 149.04405212]
[-172.68850708 145.87135315]
[-187.37371826 142.81448364]
[-202.08261108 139.87361145]
[-216.17463684 147.54133606]
[-230.89913940 141.17198181]
[-234.96072388 125.65157318]
[-225.24369812 112.88603973]
[-209.20213318 112.66799927]
[-199.14173889 125.16471863]
[-184.43284607 128.10559082]
[-177.25042725 126.33250427]
[-169.51580811 131.21072388]
[-154.85517883 134.38343811]
[-140.19454956 137.55613708]
[-125.53392792 140.72883606]
[-117.50067139 132.61129761]
[-106.43060303 129.35021973]
[-95.04534912 131.86805725]
[-86.20264435 139.65145874]
[-82.17910004 150.85083008]
[-67.62593842 154.48475647]
[-53.07277679 158.11869812]
[-38.85018539 153.69522095]
[-27.33556557 164.54530334]
[-12.78240395 168.17922974]
[1.77075803 171.81317139]
[16.32391930 175.44709778]
[30.50712776 170.56481934]
[39.73997498 158.74304199]
[48.97282410 146.92126465]
[58.20567322 135.09947205]
[67.43852234 123.27769470]
[69.07961273 116.06396484]
[76.91162109 111.34368896]
[86.32994080 99.66913605]
[90.30744934 85.20610046]
[88.18338013 70.35724640]
[86.05931091 55.50839996]
[83.93524170 40.65954971]
[81.81118011 25.81069946]
[72.19767761 13.24522400]
[78.05477142 -0.44943604]
[75.93070221 -15.29828548]
[67.70240021 -30.12162399]
[79.66860962 -42.13187027]
[94.52207184 -33.95806885]
[90.77955627 -17.42235374]
[92.90361786 -2.57350373]
[102.36519623 8.92988300]
[96.66002655 23.68663216]
[98.78409576 38.53548050]
[100.90816498 53.38433075]
[103.03222656 68.23317719]
[105.15629578 83.08203125]
[119.93069458 85.67379761]
[126.98205566 72.43452454]
[134.03341675 59.19525528]
[141.08479309 45.95598602]
[131.68411255 33.97486496]
[127.97563171 19.20438576]
[130.60185242 4.20362520]
[139.10777283 -8.42844582]
[152.01968384 -16.50324440]
[167.10052490 -18.62176323]
[181.73745728 -14.41695404]
[193.39451599 -4.61732721]
[200.05207825 9.07927322]
[200.55665588 24.29982758]
[194.82084656 38.40728378]
[183.83839417 48.95743942]
[169.51210022 54.12241745]
[154.32405090 53.00735092]
[147.27268982 66.24662018]
[140.22132874 79.48589325]
[133.16996765 92.72515869]
[137.78639221 98.63604736]
[147.01924133 110.45783234]
[151.63566589 116.36872101]
[166.18882751 112.73478699]
[180.74198914 109.10085297]
[186.62937927 94.86552429]
[199.61828613 86.91934204]
[214.61816406 88.13083649]
[225.89344788 97.82649994]
[240.44660950 94.19256592]
[254.97062683 90.44387817]
[269.46463013 86.58065033]
[283.95858765 82.71743011]
[298.45257568 78.85420990]
[312.20016479 68.93250275]
[325.53982544 79.39622498]
[319.17782593 95.11122131]
[302.31579590 93.34819031]
[287.82180786 97.21141815]
[273.32785034 101.07463837]
[258.83386230 104.93785858]
[253.17477417 109.70293427]
[244.08053589 108.74572754]
[229.52737427 112.37966156]
[224.13345337 126.23764801]
[211.46380615 134.35824585]
[196.26414490 133.45075989]
[184.37591553 123.65401459]
[169.82275391 127.28794861]
[155.26959229 130.92189026]
[114.88436890 133.12757874]
[98.00449371 109.08745575]
[88.58617401 120.76200867]
[79.26029968 132.51054382]
[70.02745056 144.33232117]
[60.79460526 156.15411377]
[51.56175613 167.97589111]
[42.32890701 179.79766846]
[43.83269119 184.36654663]
[44.22418976 189.04040527]
[43.53676987 193.55889893]
[41.86243439 197.68275452]
[39.34395218 201.20639038]
[36.16437531 203.96813965]
[34.51012421 218.87664795]
[32.85587311 233.78515625]
[31.20161819 248.69364929]
[29.54736710 263.60214233]
[35.71553802 278.17144775]
[26.62182808 289.96777344]
[24.96757507 304.87628174]
[23.31332207 319.78479004]
[21.65906906 334.69329834]
[20.00481796 349.60180664]
[18.35056496 364.51031494]
[16.69631195 379.41879272]
[15.04205990 394.32730103]
[13.38780689 409.23580933]
[28.96651077 417.34832764]
[40.21752167 430.79034424]
[45.43928528 447.48681641]
[43.85827255 464.87384033]
[35.74341583 480.29226685]
[22.36084175 491.39450073]
[5.77638435 496.50180054]
[4.82980013 511.47192383]
[3.88321543 526.44201660]
[2.93663096 541.41210938]
[1.99004662 556.38220215]
[1.04346216 571.35235596]
[3.62693048 580.12426758]
[-0.03806582 586.55072021]
[-1.22085404 601.50396729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 77]
[39 76]
[40 75]
[41 74]
[43 72]
[44 71]
[45 70]
[48 65]
[49 64]
[50 63]
[51 62]
[52 60]
[53 59]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[84 158]
[85 157]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[92 98]
[93 97]
[105 125]
[106 124]
[107 123]
[108 122]
[128 155]
[129 154]
[130 153]
[134 149]
[135 148]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
