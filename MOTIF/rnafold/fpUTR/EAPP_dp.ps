%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EAPP)
} def

/sequence { (\
GGGACGUUCAGGCGGAAGUGGCGUCAGGGGCGCUUUAGGGACUGGACUUGCAGUGUAAACAGAGACGCUGCAAAUUGCUUGUGGACGGUGUAGGCCGCUGCAGGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.029183210 ubox
1 36 0.007659605 ubox
1 48 0.014175744 ubox
1 49 0.005836813 ubox
1 76 0.009930778 ubox
1 106 0.156764227 ubox
1 109 0.432186989 ubox
2 33 0.003556141 ubox
2 34 0.044295794 ubox
2 35 0.008799663 ubox
2 36 0.012953933 ubox
2 47 0.022001798 ubox
2 48 0.011414029 ubox
2 49 0.008301745 ubox
2 75 0.008831503 ubox
2 76 0.009608406 ubox
2 105 0.115565479 ubox
2 106 0.117587052 ubox
2 108 0.436232468 ubox
2 109 0.292100599 ubox
3 25 0.007083580 ubox
3 33 0.047719894 ubox
3 34 0.008945396 ubox
3 35 0.014952366 ubox
3 47 0.009884571 ubox
3 48 0.012970232 ubox
3 49 0.049345202 ubox
3 75 0.007404212 ubox
3 76 0.017383092 ubox
3 105 0.083656820 ubox
3 108 0.294444449 ubox
4 19 0.007088906 ubox
4 24 0.007123765 ubox
4 34 0.015181555 ubox
4 48 0.065612818 ubox
4 75 0.016520554 ubox
5 14 0.013369527 ubox
5 18 0.007254317 ubox
5 23 0.007134781 ubox
5 32 0.059067350 ubox
5 44 0.021890011 ubox
5 77 0.003935211 ubox
5 87 0.011449382 ubox
6 13 0.013474484 ubox
6 22 0.007135681 ubox
6 31 0.059384429 ubox
6 42 0.023359514 ubox
6 43 0.007559182 ubox
6 47 0.995277849 ubox
6 86 0.011828882 ubox
6 108 0.005602050 ubox
7 12 0.012829672 ubox
7 16 0.005641710 ubox
7 17 0.005334961 ubox
7 21 0.005945830 ubox
7 29 0.003336562 ubox
7 30 0.059254629 ubox
7 41 0.023828203 ubox
7 46 0.996751097 ubox
7 85 0.011801299 ubox
7 107 0.004542400 ubox
8 15 0.005957122 ubox
8 16 0.005916670 ubox
8 20 0.004211331 ubox
8 21 0.003850646 ubox
8 28 0.004665497 ubox
8 29 0.058994337 ubox
8 40 0.023769852 ubox
8 41 0.005876832 ubox
8 45 0.996640014 ubox
8 46 0.005067213 ubox
8 84 0.011487058 ubox
9 14 0.006001074 ubox
9 15 0.005951327 ubox
9 20 0.005553583 ubox
9 27 0.005762931 ubox
9 28 0.059002492 ubox
9 39 0.023675045 ubox
9 40 0.005979398 ubox
9 44 0.997577714 ubox
9 45 0.005211217 ubox
9 81 0.006558892 ubox
9 83 0.009836351 ubox
10 19 0.005433845 ubox
10 35 0.013648955 ubox
10 43 0.997181407 ubox
10 80 0.007531733 ubox
10 82 0.008667248 ubox
11 25 0.059185993 ubox
11 34 0.014855774 ubox
11 42 0.996169503 ubox
11 43 0.018311362 ubox
11 79 0.011444832 ubox
11 109 0.003363162 ubox
12 19 0.092902390 ubox
12 22 0.004464623 ubox
12 24 0.059361775 ubox
12 33 0.017174134 ubox
12 42 0.035815198 ubox
12 78 0.011823370 ubox
12 108 0.003385804 ubox
13 18 0.095787211 ubox
13 20 0.015143879 ubox
13 21 0.004488499 ubox
13 23 0.059394528 ubox
13 32 0.017182058 ubox
13 44 0.003169810 ubox
13 77 0.011823250 ubox
14 19 0.014200522 ubox
14 22 0.059294885 ubox
14 31 0.017145989 ubox
14 35 0.004182039 ubox
14 36 0.020041217 ubox
14 43 0.003482076 ubox
14 76 0.011022843 ubox
15 35 0.021393164 ubox
15 36 0.288317946 ubox
15 42 0.003750239 ubox
15 75 0.008781169 ubox
16 34 0.013444517 ubox
16 35 0.291046435 ubox
16 36 0.190324970 ubox
17 34 0.273159690 ubox
17 35 0.176703966 ubox
17 36 0.186569927 ubox
17 43 0.005107123 ubox
18 33 0.267304287 ubox
18 34 0.069993208 ubox
18 35 0.170788021 ubox
18 42 0.005502665 ubox
18 71 0.010332911 ubox
18 108 0.008117871 ubox
19 26 0.016625956 ubox
19 32 0.258629012 ubox
19 37 0.033651029 ubox
19 41 0.005677187 ubox
19 70 0.010332014 ubox
19 107 0.008141723 ubox
20 25 0.016717497 ubox
20 31 0.202518962 ubox
20 34 0.939397608 ubox
20 35 0.026145954 ubox
20 36 0.017233060 ubox
20 69 0.010337823 ubox
20 106 0.008087691 ubox
21 31 0.170849608 ubox
21 33 0.961318150 ubox
21 34 0.003757413 ubox
21 68 0.010381217 ubox
22 30 0.233615854 ubox
22 32 0.961858974 ubox
22 67 0.010381206 ubox
23 31 0.962074011 ubox
23 66 0.010380733 ubox
24 30 0.960313362 ubox
24 65 0.010370673 ubox
25 29 0.926728709 ubox
25 64 0.010342658 ubox
26 35 0.003416592 ubox
27 34 0.004146149 ubox
27 109 0.003189933 ubox
28 33 0.004266833 ubox
28 108 0.003212866 ubox
30 56 0.010310024 ubox
31 55 0.010364377 ubox
32 54 0.010361966 ubox
33 39 0.004972322 ubox
33 40 0.005872128 ubox
33 45 0.004470292 ubox
33 53 0.010365666 ubox
34 38 0.004665821 ubox
34 39 0.005762707 ubox
34 41 0.004756684 ubox
34 44 0.004352277 ubox
34 46 0.022047090 ubox
34 52 0.010243899 ubox
35 39 0.003657912 ubox
35 40 0.006401347 ubox
35 41 0.007754653 ubox
35 45 0.026339039 ubox
36 40 0.007658252 ubox
36 44 0.029093730 ubox
36 50 0.010011953 ubox
37 43 0.029551114 ubox
37 48 0.010809232 ubox
37 49 0.011674876 ubox
38 42 0.028965073 ubox
38 47 0.014423563 ubox
38 48 0.014416709 ubox
38 106 0.003519623 ubox
38 109 0.013678801 ubox
39 47 0.015774198 ubox
39 48 0.005047467 ubox
39 108 0.013759461 ubox
39 109 0.009245842 ubox
40 47 0.006291442 ubox
40 108 0.009327450 ubox
43 107 0.009153418 ubox
44 76 0.003209979 ubox
44 106 0.009956236 ubox
44 109 0.006902539 ubox
45 75 0.003292181 ubox
45 76 0.024536786 ubox
45 105 0.006735095 ubox
45 108 0.006960439 ubox
46 75 0.026072408 ubox
48 73 0.883516385 ubox
48 74 0.049025836 ubox
49 72 0.981860901 ubox
49 73 0.039653710 ubox
50 71 0.999896610 ubox
51 70 0.999934910 ubox
52 69 0.999700859 ubox
53 68 0.999930826 ubox
54 67 0.999538405 ubox
55 66 0.999721369 ubox
56 65 0.992511816 ubox
76 107 0.208228956 ubox
77 105 0.972406317 ubox
77 106 0.166159130 ubox
78 103 0.008543568 ubox
78 104 0.999599287 ubox
79 102 0.006183424 ubox
79 103 0.998872628 ubox
80 102 0.998956493 ubox
81 101 0.999877028 ubox
81 108 0.006299905 ubox
82 100 0.997801271 ubox
82 107 0.006339704 ubox
83 99 0.995745100 ubox
83 106 0.006354417 ubox
84 98 0.999396768 ubox
84 105 0.006351767 ubox
86 97 0.999422622 ubox
87 96 0.999873988 ubox
88 95 0.999801109 ubox
88 108 0.003542050 ubox
89 94 0.988045555 ubox
89 102 0.006323157 ubox
89 107 0.003509362 ubox
90 101 0.006380145 ubox
90 108 0.007397521 ubox
91 100 0.006379042 ubox
91 107 0.007398588 ubox
92 99 0.006377437 ubox
93 98 0.006371101 ubox
93 106 0.012456270 ubox
94 105 0.012585599 ubox
95 104 0.012585930 ubox
96 103 0.012582923 ubox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
48 73 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
77 105 0.9500000 lbox
78 104 0.9500000 lbox
79 103 0.9500000 lbox
80 102 0.9500000 lbox
81 101 0.9500000 lbox
82 100 0.9500000 lbox
83 99 0.9500000 lbox
84 98 0.9500000 lbox
86 97 0.9500000 lbox
87 96 0.9500000 lbox
88 95 0.9500000 lbox
89 94 0.9500000 lbox
showpage
end
%%EOF
