%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FZD7)
} def

/sequence { (\
CUCUCCCAACCGCCUCGUCGCACUCCUCAGGCUGAGAGCACCGCUGCACUCGCGGCCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.027073994 ubox
1 38 0.317494980 ubox
1 59 0.005062591 ubox
2 35 0.027235584 ubox
2 37 0.325686270 ubox
2 58 0.004502724 ubox
2 59 0.006576842 ubox
3 34 0.027188592 ubox
3 36 0.326556578 ubox
3 38 0.121459083 ubox
3 58 0.008687834 ubox
3 59 0.005395543 ubox
4 35 0.325681672 ubox
4 37 0.124131298 ubox
4 58 0.004864994 ubox
4 59 0.005350301 ubox
5 31 0.009960233 ubox
5 34 0.319912218 ubox
5 36 0.124192232 ubox
5 58 0.007045646 ubox
5 59 0.030776097 ubox
6 30 0.010374585 ubox
6 31 0.060762393 ubox
6 58 0.030979276 ubox
6 59 0.058076292 ubox
7 30 0.060939781 ubox
7 34 0.136728981 ubox
7 58 0.058545955 ubox
8 33 0.151785193 ubox
9 18 0.019108772 ubox
10 17 0.019956149 ubox
10 31 0.105062076 ubox
10 55 0.040331843 ubox
10 59 0.081824234 ubox
11 17 0.018391177 ubox
11 20 0.011610935 ubox
11 30 0.105149647 ubox
11 34 0.020293150 ubox
11 54 0.040387818 ubox
11 58 0.082120639 ubox
11 61 0.562051674 ubox
12 16 0.018114308 ubox
12 18 0.010255251 ubox
12 19 0.012758056 ubox
12 21 0.078964798 ubox
12 32 0.326196761 ubox
12 33 0.009010903 ubox
12 39 0.701748836 ubox
12 42 0.003612512 ubox
12 53 0.040266466 ubox
12 56 0.023656742 ubox
12 57 0.047464933 ubox
12 60 0.600605240 ubox
13 17 0.011938130 ubox
13 20 0.078919274 ubox
13 31 0.326673579 ubox
13 38 0.697291633 ubox
13 52 0.040141038 ubox
13 55 0.032974970 ubox
13 59 0.600369943 ubox
14 30 0.326600963 ubox
14 36 0.696765774 ubox
14 38 0.108750451 ubox
14 54 0.032906862 ubox
14 55 0.004875068 ubox
14 58 0.598583026 ubox
14 59 0.016118443 ubox
15 29 0.308745468 ubox
15 35 0.697353796 ubox
15 37 0.146530227 ubox
15 55 0.020179909 ubox
15 58 0.021140620 ubox
15 59 0.003916288 ubox
16 30 0.005281485 ubox
16 34 0.697099896 ubox
16 36 0.147316736 ubox
16 43 0.010591392 ubox
16 52 0.028456182 ubox
16 54 0.024580723 ubox
16 58 0.014810478 ubox
16 61 0.047548304 ubox
17 23 0.091279734 ubox
17 32 0.556542425 ubox
17 33 0.342955538 ubox
17 39 0.015558404 ubox
17 41 0.178383512 ubox
17 42 0.051257886 ubox
17 47 0.013375579 ubox
17 49 0.016500724 ubox
17 51 0.026062083 ubox
17 53 0.024532334 ubox
17 56 0.518085735 ubox
17 57 0.025306076 ubox
17 60 0.052030506 ubox
18 22 0.082463691 ubox
18 31 0.556783879 ubox
18 35 0.120146329 ubox
18 37 0.018006393 ubox
18 38 0.010075734 ubox
18 40 0.178310509 ubox
18 46 0.013264693 ubox
18 48 0.016727115 ubox
18 52 0.021583588 ubox
18 55 0.519063840 ubox
18 59 0.051863412 ubox
19 30 0.556633210 ubox
19 34 0.123435776 ubox
19 36 0.019748870 ubox
19 43 0.005604424 ubox
19 46 0.004229918 ubox
19 52 0.007364678 ubox
19 54 0.519368541 ubox
19 58 0.051820816 ubox
19 61 0.010476834 ubox
20 32 0.444094414 ubox
20 33 0.050948804 ubox
20 39 0.253686370 ubox
20 42 0.018437473 ubox
20 44 0.014760043 ubox
20 47 0.030643618 ubox
20 51 0.004073792 ubox
20 53 0.518596066 ubox
20 56 0.003433443 ubox
20 57 0.045773097 ubox
20 60 0.011437632 ubox
21 31 0.445328863 ubox
21 34 0.019221874 ubox
21 38 0.252668356 ubox
21 43 0.014778824 ubox
21 46 0.030709711 ubox
21 52 0.517030044 ubox
21 55 0.003999736 ubox
21 59 0.011064170 ubox
22 33 0.035139335 ubox
22 45 0.028232699 ubox
23 30 0.459215520 ubox
23 31 0.122668555 ubox
23 36 0.258088975 ubox
23 38 0.125923027 ubox
24 29 0.420580768 ubox
24 30 0.115792776 ubox
24 31 0.073391857 ubox
24 35 0.259095453 ubox
24 37 0.144834394 ubox
25 30 0.099336170 ubox
25 31 0.202177110 ubox
25 34 0.258500294 ubox
25 36 0.104393360 ubox
25 55 0.005142963 ubox
25 59 0.008935414 ubox
26 30 0.203483092 ubox
26 36 0.341554741 ubox
26 38 0.018786536 ubox
26 54 0.005166851 ubox
26 58 0.009171075 ubox
26 59 0.004392942 ubox
27 35 0.358202764 ubox
27 37 0.021907489 ubox
27 58 0.003725681 ubox
27 59 0.006980341 ubox
28 34 0.358504797 ubox
28 36 0.022224619 ubox
28 46 0.076886211 ubox
28 58 0.010039327 ubox
29 33 0.290690208 ubox
29 45 0.076115144 ubox
29 50 0.012386421 ubox
30 42 0.049805793 ubox
30 44 0.072438214 ubox
30 45 0.050563982 ubox
30 49 0.012807367 ubox
30 50 0.008189543 ubox
30 51 0.013604791 ubox
30 57 0.092304727 ubox
31 39 0.063117564 ubox
31 41 0.049884155 ubox
31 44 0.054943662 ubox
31 47 0.015305002 ubox
31 49 0.009256882 ubox
31 50 0.012350999 ubox
31 53 0.017950892 ubox
31 56 0.092650357 ubox
31 60 0.004269056 ubox
32 38 0.063382677 ubox
32 43 0.058279123 ubox
32 46 0.015310308 ubox
32 52 0.018521132 ubox
32 55 0.092630934 ubox
32 59 0.004273968 ubox
33 37 0.057118721 ubox
33 40 0.063579674 ubox
33 43 0.008661497 ubox
33 48 0.017169523 ubox
33 52 0.046007450 ubox
33 54 0.088030148 ubox
33 58 0.004270334 ubox
34 39 0.065776992 ubox
34 42 0.024840178 ubox
34 47 0.017545480 ubox
34 51 0.386863604 ubox
34 53 0.077278797 ubox
34 57 0.004326433 ubox
35 45 0.004369734 ubox
35 50 0.387735783 ubox
36 44 0.004509163 ubox
36 49 0.386532228 ubox
36 51 0.076962431 ubox
37 45 0.140862377 ubox
37 50 0.075915633 ubox
38 44 0.144685985 ubox
38 47 0.494262665 ubox
38 49 0.052029609 ubox
38 56 0.003791172 ubox
38 60 0.062841514 ubox
39 43 0.143713565 ubox
39 46 0.496130934 ubox
39 59 0.062148486 ubox
40 45 0.422707390 ubox
41 55 0.068650901 ubox
41 59 0.774451968 ubox
42 54 0.069221308 ubox
42 58 0.778061387 ubox
42 61 0.021990178 ubox
43 51 0.005831209 ubox
43 53 0.069316072 ubox
43 56 0.639415110 ubox
43 57 0.550503735 ubox
43 60 0.023240188 ubox
44 52 0.069196490 ubox
44 55 0.844125488 ubox
44 59 0.023189799 ubox
45 52 0.003314818 ubox
45 54 0.843588319 ubox
45 58 0.022799987 ubox
46 51 0.022754492 ubox
46 53 0.844258508 ubox
46 56 0.014650324 ubox
46 57 0.017114015 ubox
47 52 0.843063499 ubox
47 55 0.020269678 ubox
49 55 0.006453864 ubox
50 54 0.005853594 ubox
51 61 0.003535333 ubox
52 60 0.005057894 ubox
53 59 0.005062515 ubox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
