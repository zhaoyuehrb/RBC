%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAAGCGUUGCUGCGUAAAUGGCGGGGGCGUGUCUUUUGGCUCCUCCGCGUGUAGUUACCUGAGAAACGCGGGAAGUUGGGCCCAGGCAGUGUUGCUGCGGUUGCCUAAGUUGUUUUUCUAUUUCUGGAGAGAGCCGUGAGCUUGUCCAGGGGCCCCAAUCCUGAGGCCGACCCGGUUUCUGGCGCGGUGCG\
) } def
/len { sequence length } bind def

/coor [
[-40.12666702 412.04418945]
[-53.35588837 420.15390015]
[-68.82264709 418.90527344]
[-80.57965851 408.77847290]
[-84.10611725 393.66741943]
[-78.04602814 379.38265991]
[-64.72960663 371.41693115]
[-63.52260971 356.46557617]
[-65.52815247 353.55026245]
[-66.21382904 349.51483154]
[-65.06690216 344.99365234]
[-61.87891006 340.82678223]
[-59.95096970 325.95120239]
[-58.02302933 311.07562256]
[-56.09509277 296.20004272]
[-54.16715240 281.32446289]
[-52.23921204 266.44888306]
[-50.31127167 251.57328796]
[-56.19647217 246.92414856]
[-61.40241623 260.99179077]
[-76.39025116 260.38772583]
[-80.44725037 245.94679260]
[-67.96686554 237.62588501]
[-73.85206604 232.97674561]
[-87.87731171 238.29582214]
[-101.90255737 243.61489868]
[-115.92779541 248.93397522]
[-129.95304871 254.25303650]
[-143.97828674 259.57211304]
[-158.00352478 264.89120483]
[-161.89413452 275.06655884]
[-170.56846619 281.28677368]
[-181.01498413 281.68994141]
[-189.76696777 276.38436890]
[-203.95629883 281.24884033]
[-218.14561462 286.11331177]
[-228.50727844 298.82424927]
[-244.65071106 295.93951416]
[-249.96891785 280.42666626]
[-238.99099731 268.24398804]
[-223.01008606 271.92401123]
[-208.82077026 267.05950928]
[-194.63143921 262.19503784]
[-183.04248047 246.72621155]
[-163.32260132 250.86595154]
[-149.29736328 245.54687500]
[-135.27210999 240.22779846]
[-121.24687195 234.90872192]
[-107.22162628 229.58966064]
[-93.19638062 224.27058411]
[-79.17114258 218.95150757]
[-80.01650238 203.97534180]
[-94.55124664 200.26841736]
[-109.08598328 196.56147766]
[-124.71895599 201.51547241]
[-136.64157104 190.25567627]
[-132.58886719 174.36517334]
[-116.72991180 170.19078064]
[-105.37904358 182.02673340]
[-90.84430695 185.73367310]
[-76.30957031 189.44061279]
[-61.50526810 175.88896179]
[-44.07878876 171.02449036]
[-28.28046989 174.27642822]
[-17.31096840 183.27278137]
[-6.00354576 173.41671753]
[5.30387545 163.56063843]
[16.61129761 153.70455933]
[27.91871834 143.84848022]
[39.22613907 133.99241638]
[42.20662689 127.21839142]
[50.79603195 124.07042694]
[62.26076508 114.39778900]
[73.72550201 104.72515869]
[85.19023895 95.05252075]
[90.95838928 81.20591736]
[89.75138855 66.25456238]
[80.92872620 53.12173080]
[87.61681366 39.81313705]
[86.40981293 24.86177635]
[85.20281982 9.91041660]
[83.99581909 -5.04094315]
[82.78881836 -19.99230194]
[81.58182526 -34.94366074]
[67.80757141 -41.59327698]
[59.26750565 -54.16164780]
[58.17232895 -69.21710968]
[64.71629333 -82.70905304]
[77.05182648 -91.05771637]
[75.84482574 -106.00907898]
[74.63783264 -120.96043396]
[73.43083191 -135.91178894]
[72.22383118 -150.86315918]
[64.92257690 -166.16439819]
[77.60465240 -177.41612244]
[91.92740631 -168.34445190]
[87.17519379 -152.07015991]
[88.38219452 -137.11878967]
[89.58918762 -122.16743469]
[90.79618835 -107.21607208]
[92.00318909 -92.26471710]
[105.51819611 -86.00292206]
[114.14167786 -73.73542786]
[115.47575378 -58.69924927]
[109.06238556 -44.92370987]
[96.53318024 -36.15066147]
[97.74018097 -21.19930077]
[98.94718170 -6.24794149]
[100.15417480 8.70341778]
[101.36117554 23.65477753]
[102.56817627 38.60613632]
[111.30450439 50.66954422]
[104.70274353 65.04756165]
[105.90974426 79.99892426]
[111.94166565 84.45604706]
[118.05049133 70.75632477]
[124.15930939 57.05660629]
[127.83989716 42.51517105]
[140.71177673 34.81357193]
[155.26559448 38.44486237]
[163.01077271 51.29057693]
[159.42881775 65.85662079]
[146.60916138 73.64530945]
[135.30732727 83.50779724]
[124.00550842 93.37029266]
[130.03742981 97.82741547]
[144.68403625 94.59065247]
[159.33065796 91.35388947]
[173.97727966 88.11712646]
[188.62388611 84.88036346]
[203.27050781 81.64360046]
[210.85978699 71.20373535]
[223.13540649 68.81488037]
[233.40486145 75.22325134]
[248.10173035 72.22286224]
[262.79858398 69.22248077]
[277.49545288 66.22209167]
[287.50515747 53.68474960]
[303.54748535 53.83784866]
[313.31610107 66.56394958]
[309.31738281 82.10066986]
[294.61877441 88.52957153]
[280.49581909 80.91895294]
[265.79898071 83.91933441]
[251.10211182 86.91972351]
[236.40524292 89.92010498]
[223.92425537 102.24864197]
[206.50726318 96.29021454]
[191.86065674 99.52697754]
[177.21403503 102.76374054]
[162.56741333 106.00050354]
[147.92080688 109.23726654]
[133.27418518 112.47402954]
[130.98736572 127.29868317]
[143.97773743 134.79869080]
[156.96812439 142.29869080]
[169.95851135 149.79869080]
[185.77845764 149.99807739]
[192.93194580 163.06240845]
[205.92233276 170.56240845]
[222.31254578 170.02131653]
[230.74533081 184.08618164]
[222.54576111 198.28825378]
[206.14883423 198.01766968]
[198.42233276 183.55278015]
[185.43194580 176.05278015]
[170.54115295 176.38984680]
[162.45851135 162.78906250]
[149.46812439 155.28906250]
[136.47773743 147.78906250]
[123.48735809 140.28906250]
[104.36750031 133.57357788]
[94.39662170 120.31900024]
[94.86286926 106.51725769]
[83.39813232 116.18989563]
[71.93339539 125.86252594]
[60.46866226 135.53515625]
[49.08221436 145.29983521]
[37.77479553 155.15589905]
[26.46737289 165.01197815]
[15.15995121 174.86805725]
[3.85252929 184.72413635]
[-7.45489216 194.58020020]
[-1.71888447 227.63079834]
[-35.43568802 253.50122070]
[-37.36362457 268.37680054]
[-39.29156494 283.25238037]
[-41.21950531 298.12799072]
[-43.14744568 313.00357056]
[-45.07538605 327.87915039]
[-47.00332642 342.75473022]
[-48.57125092 357.67257690]
[-49.77825165 372.62393188]
[-37.91207123 382.62258911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[34 43]
[35 42]
[36 41]
[52 61]
[53 60]
[54 59]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[70 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 114]
[77 113]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[134 146]
[135 145]
[136 144]
[137 143]
[154 171]
[155 170]
[156 169]
[157 168]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
