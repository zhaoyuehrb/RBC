%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUACUCGGAGACAGCGGACCCGUGUCAGUGACAGCUUCCGGUUUGGUUUCUCCGCCUUCUGCUUGGCUAGAGCUAUUGGGGCUCGGUGGCGGCCGCAGUGGGGUGGAGGGGGCAGGGCGUGGUGAGGUAAGGUGAGUGCCGUAGUGGGGUUCCCUGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[83.14341736 348.71896362]
[80.57183838 363.86102295]
[70.76139069 375.67843628]
[56.35103989 380.99230957]
[41.21709442 378.37329102]
[29.43051529 368.52584839]
[24.16182709 354.09890747]
[26.82828331 338.97323608]
[36.71261978 327.21759033]
[51.15600204 321.99414062]
[53.71383667 307.21383667]
[43.21807098 296.67929077]
[40.91076660 281.80850220]
[47.88387299 268.27227783]
[61.64955902 261.35766602]
[64.20738983 246.57734680]
[66.76522827 231.79704285]
[61.31153107 217.93678284]
[71.28874207 205.65811157]
[73.84658051 190.87780762]
[76.40441132 176.09750366]
[78.96224213 161.31719971]
[81.52007294 146.53688049]
[84.07791138 131.75657654]
[73.11466217 116.28855896]
[72.65898132 99.54548645]
[58.78716278 105.25274658]
[44.91534805 110.95999908]
[31.04353142 116.66725159]
[18.69622993 128.28535461]
[4.11408663 119.63680267]
[8.38791084 103.23038483]
[25.33627892 102.79543304]
[39.20809555 97.08818054]
[53.07991028 91.38092804]
[66.95172882 85.67367554]
[75.65258026 73.45503235]
[76.50891113 58.47949982]
[77.36524200 43.50396347]
[78.22157288 28.52842522]
[79.07790375 13.55288887]
[79.36348724 -1.44439209]
[79.07790375 -16.44167328]
[71.07926941 -30.09203529]
[78.57285309 -42.96430969]
[78.28727722 -57.96158981]
[78.00169373 -72.95886993]
[77.71611023 -87.95615387]
[69.71747589 -101.60651398]
[77.21105957 -114.47879028]
[76.92547607 -129.47607422]
[76.63989258 -144.47335815]
[76.35431671 -159.47062683]
[76.06873322 -174.46791077]
[75.78314972 -189.46519470]
[75.49756622 -204.46247864]
[75.21198273 -219.45976257]
[74.92639923 -234.45703125]
[74.64082336 -249.45431519]
[74.35523987 -264.45159912]
[74.06965637 -279.44888306]
[73.64131927 -294.44277954]
[73.07025909 -309.43188477]
[72.49919128 -324.42102051]
[71.92813110 -339.41015625]
[68.70019531 -345.26400757]
[68.91531372 -351.00021362]
[71.63167572 -354.97848511]
[71.63167572 -369.97848511]
[71.63167572 -384.97848511]
[71.63167572 -399.97848511]
[68.97061157 -404.57443237]
[68.42485809 -409.25979614]
[69.66715240 -413.20327759]
[72.08448029 -415.82870483]
[72.94081116 -430.80422974]
[73.79714966 -445.77978516]
[74.65348053 -460.75531006]
[75.50981140 -475.73083496]
[76.36614227 -490.70639038]
[77.22247314 -505.68191528]
[67.66053772 -518.56402588]
[71.90952301 -534.03417969]
[86.70996857 -540.22497559]
[100.70825195 -532.38739014]
[103.16607666 -516.53375244]
[92.19801331 -504.82559204]
[91.34168243 -489.85003662]
[90.48534393 -474.87451172]
[89.62901306 -459.89898682]
[88.77268219 -444.92343140]
[87.91635132 -429.94790649]
[87.06002045 -414.97238159]
[86.63167572 -399.97848511]
[86.63167572 -384.97848511]
[86.63167572 -369.97848511]
[86.63167572 -354.97848511]
[86.91725922 -339.98120117]
[87.48831940 -324.99206543]
[88.05937958 -310.00296021]
[88.63043976 -295.01382446]
[92.04294586 -288.41961670]
[89.06694031 -279.73446655]
[89.35251617 -264.73718262]
[89.63809967 -249.73989868]
[89.92368317 -234.74261475]
[90.20926666 -219.74534607]
[90.49485016 -204.74806213]
[90.78043365 -189.75077820]
[91.06600952 -174.75349426]
[91.35159302 -159.75621033]
[91.63717651 -144.75892639]
[91.92276001 -129.76165771]
[92.20834351 -114.76437378]
[100.18655396 -102.18671417]
[92.71339417 -88.24173737]
[92.99897003 -73.24445343]
[93.28455353 -58.24717331]
[93.57013702 -43.24989319]
[101.54834747 -30.67223549]
[94.07518768 -16.72725487]
[94.36077118 -1.72997415]
[96.33300018 0.32240006]
[97.59191132 3.29718971]
[97.77538300 6.91955757]
[96.63006592 10.78648472]
[94.05344391 14.40922165]
[93.19711304 29.38475800]
[92.34078217 44.36029434]
[91.48445129 59.33583069]
[90.62811279 74.31137085]
[111.14888763 72.07169342]
[129.36904907 85.39982605]
[134.25369263 109.41687775]
[146.94912720 117.40599823]
[159.64456177 125.39511108]
[176.04350281 125.47840881]
[183.93470764 139.85411072]
[175.20039368 153.73371887]
[158.82566833 152.83909607]
[151.65544128 138.09054565]
[138.96000671 130.10142517]
[126.26457977 122.11231232]
[119.41298676 125.16283417]
[131.54829407 133.97953796]
[129.98056030 148.89738464]
[116.27748871 154.99868774]
[104.14201355 146.18220520]
[105.70980835 131.26388550]
[98.85821533 134.31440735]
[96.30038452 149.09472656]
[93.74255371 163.87503052]
[91.18471527 178.65533447]
[88.62688446 193.43563843]
[86.06905365 208.21594238]
[91.33979797 223.13337708]
[81.54553223 234.35487366]
[78.98770142 249.13517761]
[76.42987061 263.91549683]
[87.07135010 275.05392456]
[89.09009552 290.14624023]
[81.91965485 303.37686157]
[68.49414062 309.77166748]
[65.93630981 324.55197144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 164]
[11 163]
[15 159]
[16 158]
[17 157]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[26 36]
[27 35]
[28 34]
[29 33]
[37 131]
[38 130]
[39 129]
[40 128]
[41 127]
[42 122]
[43 121]
[45 119]
[46 118]
[47 117]
[48 116]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 103]
[62 101]
[63 100]
[64 99]
[65 98]
[68 97]
[69 96]
[70 95]
[71 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
