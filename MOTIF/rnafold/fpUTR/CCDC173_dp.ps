%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC173)
} def

/sequence { (\
GUUGCCAAGCAACCGCGUGGUACGAGUAACAACUCCACCGGCUGGCGUCCGCGGCGCUUGGCGCCACAGUCACUUUUCCAGAUCUAGGAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009458009 ubox
1 13 0.087040081 ubox
1 23 0.069746274 ubox
1 30 0.004507534 ubox
1 38 0.003616549 ubox
1 52 0.021487826 ubox
1 55 0.004332312 ubox
1 64 0.392897064 ubox
1 67 0.548642110 ubox
1 73 0.063937218 ubox
1 91 0.116664319 ubox
1 93 0.009618030 ubox
2 9 0.009443414 ubox
2 12 0.087952333 ubox
2 22 0.049662699 ubox
2 29 0.004499167 ubox
2 37 0.003396546 ubox
2 51 0.021352151 ubox
2 54 0.004332663 ubox
2 63 0.277386555 ubox
2 66 0.528312754 ubox
2 69 0.010478126 ubox
2 72 0.063425741 ubox
2 90 0.111457616 ubox
2 92 0.010077205 ubox
3 8 0.009179099 ubox
3 11 0.088500356 ubox
3 22 0.076734203 ubox
3 28 0.003625712 ubox
3 47 0.033616009 ubox
3 53 0.004342619 ubox
3 63 0.753930600 ubox
3 66 0.012175776 ubox
3 68 0.009312706 ubox
3 89 0.072762367 ubox
3 92 0.016032284 ubox
4 10 0.088646925 ubox
4 21 0.095942194 ubox
4 42 0.003543708 ubox
4 46 0.044203645 ubox
4 52 0.007906998 ubox
4 62 0.989429817 ubox
4 64 0.012052683 ubox
4 65 0.007131532 ubox
4 67 0.004543725 ubox
4 91 0.017237553 ubox
5 9 0.088002936 ubox
5 20 0.096878772 ubox
5 41 0.003550142 ubox
5 45 0.044226083 ubox
5 51 0.007902989 ubox
5 61 0.989913467 ubox
5 63 0.008921043 ubox
5 88 0.008548114 ubox
5 90 0.016815897 ubox
6 19 0.096905680 ubox
6 40 0.003540498 ubox
6 44 0.044181623 ubox
6 60 0.990018321 ubox
6 87 0.008560818 ubox
7 18 0.092926562 ubox
7 43 0.033357615 ubox
7 59 0.989474936 ubox
8 43 0.028571398 ubox
8 58 0.989454847 ubox
8 85 0.004844865 ubox
9 16 0.097571575 ubox
9 42 0.040367120 ubox
9 46 0.008299284 ubox
9 57 0.989946854 ubox
9 84 0.004805725 ubox
9 91 0.006082726 ubox
10 15 0.097584713 ubox
10 41 0.030648921 ubox
10 44 0.014535283 ubox
10 45 0.007586599 ubox
10 56 0.988670122 ubox
10 90 0.006065664 ubox
11 43 0.017149761 ubox
12 18 0.005305780 ubox
12 21 0.020258649 ubox
13 17 0.005629586 ubox
13 20 0.021005878 ubox
13 41 0.060540766 ubox
13 45 0.023998063 ubox
13 54 0.984550884 ubox
14 19 0.020990145 ubox
14 40 0.079672607 ubox
14 44 0.025637880 ubox
14 47 0.007055557 ubox
14 53 0.985946098 ubox
14 56 0.008141876 ubox
15 39 0.080754877 ubox
15 42 0.069153694 ubox
15 43 0.011866024 ubox
15 46 0.007463993 ubox
15 48 0.006985283 ubox
15 52 0.985630174 ubox
15 55 0.019859278 ubox
15 70 0.007192080 ubox
15 91 0.045083032 ubox
16 40 0.005033279 ubox
16 41 0.069374218 ubox
16 45 0.007365411 ubox
16 47 0.011583588 ubox
16 51 0.985443413 ubox
16 53 0.034254199 ubox
16 54 0.014225286 ubox
16 69 0.007497309 ubox
16 90 0.044988981 ubox
17 23 0.009331477 ubox
17 38 0.110341097 ubox
17 39 0.005895078 ubox
17 42 0.090404018 ubox
17 43 0.005547853 ubox
17 46 0.023592798 ubox
17 48 0.004045586 ubox
17 50 0.951433118 ubox
17 52 0.038727073 ubox
17 67 0.012808496 ubox
17 73 0.005645935 ubox
17 91 0.007192694 ubox
18 22 0.008610874 ubox
18 31 0.009279255 ubox
18 37 0.113506558 ubox
18 40 0.482190745 ubox
18 41 0.068044010 ubox
18 44 0.057074919 ubox
18 45 0.024004905 ubox
18 47 0.032893142 ubox
18 51 0.039306792 ubox
18 66 0.012837244 ubox
18 72 0.005411172 ubox
18 90 0.006382013 ubox
19 23 0.008892401 ubox
19 30 0.010273552 ubox
19 36 0.114359676 ubox
19 39 0.970239786 ubox
19 43 0.062282957 ubox
19 46 0.036553530 ubox
19 49 0.108627974 ubox
19 50 0.063923236 ubox
19 65 0.012822629 ubox
20 30 0.009589154 ubox
20 33 0.003855496 ubox
20 35 0.098377909 ubox
20 38 0.971290211 ubox
20 42 0.064772814 ubox
20 46 0.035980799 ubox
20 48 0.077827902 ubox
20 49 0.068462430 ubox
20 64 0.012817780 ubox
21 28 0.005056902 ubox
21 29 0.009447293 ubox
21 32 0.004340795 ubox
21 37 0.946112019 ubox
21 41 0.064231202 ubox
21 44 0.028042862 ubox
21 45 0.033639507 ubox
21 47 0.026783305 ubox
21 63 0.012382741 ubox
22 27 0.005431897 ubox
22 43 0.025633145 ubox
22 48 0.074998300 ubox
23 40 0.029532422 ubox
23 44 0.026969386 ubox
23 47 0.078826892 ubox
24 35 0.989309236 ubox
24 39 0.023528286 ubox
24 43 0.010422394 ubox
24 46 0.060793677 ubox
24 49 0.004963632 ubox
24 75 0.003718835 ubox
25 34 0.995040846 ubox
25 43 0.048481757 ubox
25 48 0.004854083 ubox
25 74 0.003978457 ubox
26 33 0.994975671 ubox
26 38 0.018655544 ubox
26 42 0.051267860 ubox
26 46 0.004604087 ubox
26 73 0.004011366 ubox
27 32 0.947338801 ubox
27 37 0.018005981 ubox
27 41 0.050239641 ubox
27 44 0.005221138 ubox
27 45 0.004652050 ubox
27 72 0.003944338 ubox
28 43 0.004966421 ubox
30 44 0.010399703 ubox
31 43 0.010347058 ubox
32 48 0.023141332 ubox
33 41 0.009349626 ubox
33 45 0.003167265 ubox
33 47 0.025260002 ubox
33 90 0.015860492 ubox
34 40 0.008696605 ubox
34 89 0.015970180 ubox
35 40 0.005357054 ubox
35 41 0.010516355 ubox
35 45 0.047415584 ubox
35 88 0.015986824 ubox
36 40 0.011767364 ubox
36 44 0.051796444 ubox
36 87 0.015961552 ubox
37 43 0.047954123 ubox
37 48 0.013104855 ubox
38 45 0.101636278 ubox
38 47 0.012544798 ubox
38 54 0.007128548 ubox
38 88 0.003678113 ubox
39 44 0.102191149 ubox
39 47 0.068828032 ubox
39 51 0.008565990 ubox
39 53 0.007158286 ubox
39 87 0.003689909 ubox
40 46 0.104436396 ubox
40 49 0.813416771 ubox
40 50 0.113132177 ubox
40 52 0.005909945 ubox
40 65 0.004241134 ubox
40 71 0.112983658 ubox
40 74 0.006555253 ubox
40 84 0.007000211 ubox
41 48 0.831759807 ubox
41 49 0.118023896 ubox
41 52 0.010851937 ubox
41 55 0.054933118 ubox
41 62 0.013703150 ubox
41 64 0.004233278 ubox
41 70 0.114084944 ubox
41 73 0.007386538 ubox
41 83 0.007016638 ubox
41 91 0.007668528 ubox
42 47 0.839019300 ubox
42 51 0.011479468 ubox
42 54 0.057865601 ubox
42 61 0.013752516 ubox
42 63 0.004200764 ubox
42 69 0.114207407 ubox
42 81 0.014324135 ubox
42 90 0.007661872 ubox
43 51 0.011790239 ubox
43 53 0.056330768 ubox
43 60 0.011921987 ubox
43 66 0.063234937 ubox
43 68 0.103709907 ubox
43 72 0.024997632 ubox
43 80 0.014341267 ubox
43 89 0.005396697 ubox
44 50 0.110078854 ubox
44 52 0.050445667 ubox
44 55 0.034573768 ubox
44 58 0.020471281 ubox
44 59 0.008151003 ubox
44 65 0.082737021 ubox
44 67 0.093552625 ubox
44 71 0.027981398 ubox
44 79 0.014321090 ubox
45 49 0.109689915 ubox
45 52 0.098869404 ubox
45 55 0.027630117 ubox
45 57 0.026043294 ubox
45 64 0.086547518 ubox
45 70 0.027988188 ubox
45 78 0.012998985 ubox
45 91 0.009860419 ubox
46 51 0.101918527 ubox
46 53 0.036633130 ubox
46 54 0.027440730 ubox
46 56 0.027088366 ubox
46 63 0.086578514 ubox
46 69 0.028026773 ubox
46 90 0.009916690 ubox
47 52 0.036331228 ubox
47 55 0.035031892 ubox
47 62 0.086565339 ubox
47 67 0.019802256 ubox
47 73 0.009093221 ubox
47 91 0.004359232 ubox
48 54 0.034979706 ubox
48 61 0.077764843 ubox
48 66 0.019789199 ubox
48 72 0.008868496 ubox
48 89 0.011626275 ubox
49 53 0.033773731 ubox
49 60 0.076969101 ubox
49 61 0.037937924 ubox
49 88 0.012231080 ubox
50 56 0.016338768 ubox
50 60 0.038113097 ubox
50 63 0.003488507 ubox
50 87 0.012217617 ubox
51 55 0.015389654 ubox
51 57 0.074802192 ubox
51 59 0.027308988 ubox
51 62 0.003737879 ubox
51 64 0.003946935 ubox
51 70 0.012656261 ubox
51 91 0.016072398 ubox
52 56 0.074411565 ubox
52 61 0.003756823 ubox
52 63 0.003949541 ubox
52 69 0.012952598 ubox
52 90 0.016040523 ubox
53 59 0.003340085 ubox
53 62 0.003406027 ubox
53 65 0.108103798 ubox
54 64 0.108241018 ubox
55 63 0.108240395 ubox
56 62 0.108222441 ubox
57 61 0.107436604 ubox
59 72 0.015923272 ubox
60 71 0.018080285 ubox
61 70 0.018301237 ubox
61 91 0.012795111 ubox
62 69 0.018791773 ubox
62 90 0.014110106 ubox
63 70 0.089733403 ubox
63 91 0.125229416 ubox
64 69 0.097556889 ubox
64 88 0.216801446 ubox
64 90 0.123842441 ubox
65 87 0.218187793 ubox
68 74 0.070642152 ubox
68 75 0.029182779 ubox
68 76 0.025447408 ubox
68 77 0.013323950 ubox
68 85 0.102397067 ubox
69 73 0.073916365 ubox
69 74 0.026602650 ubox
69 75 0.034073891 ubox
69 76 0.024058190 ubox
69 83 0.207433418 ubox
69 84 0.104789627 ubox
69 91 0.222005839 ubox
69 93 0.032427251 ubox
70 82 0.233918867 ubox
70 88 0.008911828 ubox
70 89 0.063355837 ubox
70 90 0.215110137 ubox
70 92 0.032743488 ubox
71 81 0.234480127 ubox
71 87 0.011652428 ubox
71 88 0.069209343 ubox
73 81 0.040158951 ubox
73 87 0.191122984 ubox
73 88 0.046516543 ubox
73 90 0.170520151 ubox
74 80 0.039776352 ubox
74 81 0.007845112 ubox
74 82 0.013709190 ubox
74 86 0.188146520 ubox
74 87 0.046506369 ubox
74 88 0.008631830 ubox
74 89 0.165720605 ubox
74 90 0.023995997 ubox
75 80 0.010928583 ubox
75 81 0.016451642 ubox
75 82 0.027090942 ubox
75 86 0.045568623 ubox
75 87 0.011117053 ubox
75 88 0.161410145 ubox
75 89 0.016298521 ubox
75 90 0.080196375 ubox
76 80 0.013397915 ubox
76 81 0.025570586 ubox
76 82 0.027799636 ubox
76 86 0.012511132 ubox
76 87 0.158245964 ubox
76 88 0.013117469 ubox
76 89 0.095989907 ubox
76 90 0.692353607 ubox
77 81 0.025948941 ubox
77 86 0.151329073 ubox
77 87 0.011003017 ubox
77 88 0.088984548 ubox
77 89 0.897785415 ubox
78 87 0.090400160 ubox
78 88 0.917912486 ubox
79 87 0.917540138 ubox
81 94 0.057325087 ubox
82 93 0.057849088 ubox
83 89 0.016776034 ubox
83 92 0.057278009 ubox
84 88 0.018117635 ubox
84 90 0.047235959 ubox
85 89 0.042618397 ubox
87 94 0.009802937 ubox
88 93 0.005995990 ubox
88 94 0.011192819 ubox
89 93 0.010238560 ubox
3 63 0.9500000 lbox
4 62 0.9500000 lbox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
76 90 0.9500000 lbox
77 89 0.9500000 lbox
78 88 0.9500000 lbox
79 87 0.9500000 lbox
showpage
end
%%EOF
