%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOWAHB)
} def

/sequence { (\
GCCAGGGUUUCCUCUGGCUGGGGAGAGCCCCGGGAGGGCGAGACUCAGACACCUCUGGGGCGGAGGACAAGGCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.044806714 ubox
1 61 0.004964907 ubox
1 73 0.994712201 ubox
1 76 0.046487934 ubox
2 17 0.046361329 ubox
2 60 0.004964184 ubox
2 72 0.995468213 ubox
2 75 0.046158167 ubox
3 16 0.046524248 ubox
3 59 0.004938269 ubox
3 71 0.994445424 ubox
4 13 0.004575054 ubox
4 15 0.046613171 ubox
5 12 0.004967182 ubox
5 14 0.046617464 ubox
5 29 0.007730243 ubox
5 30 0.005990707 ubox
5 45 0.006910884 ubox
5 46 0.991540443 ubox
6 11 0.004968517 ubox
6 12 0.012518277 ubox
6 13 0.044770938 ubox
6 28 0.008581225 ubox
6 29 0.006105626 ubox
6 44 0.005660666 ubox
6 45 0.996165883 ubox
6 46 0.033083258 ubox
7 11 0.012363532 ubox
7 12 0.044338486 ubox
7 28 0.006136039 ubox
7 44 0.997972340 ubox
7 45 0.004056370 ubox
7 68 0.021350858 ubox
8 26 0.023920124 ubox
8 27 0.004914942 ubox
8 42 0.005619820 ubox
8 43 0.997723342 ubox
8 66 0.007210828 ubox
8 67 0.015472923 ubox
8 70 0.007976776 ubox
9 25 0.025896164 ubox
9 26 0.004177344 ubox
9 41 0.007785815 ubox
9 42 0.996844080 ubox
9 65 0.008348917 ubox
9 66 0.008824490 ubox
9 69 0.007905753 ubox
10 24 0.027489798 ubox
10 38 0.029149395 ubox
10 40 0.007986526 ubox
10 41 0.996872900 ubox
10 64 0.009266737 ubox
10 65 0.003939719 ubox
10 67 0.025649097 ubox
11 23 0.027895552 ubox
11 37 0.036620685 ubox
11 38 0.011619969 ubox
11 40 0.996938519 ubox
11 63 0.009439628 ubox
11 66 0.028867262 ubox
12 22 0.027901476 ubox
12 25 0.003879616 ubox
12 36 0.039606810 ubox
12 37 0.013136211 ubox
12 38 0.939462959 ubox
12 62 0.009147433 ubox
12 65 0.028973943 ubox
13 21 0.027847541 ubox
13 24 0.005222067 ubox
13 26 0.004406429 ubox
13 35 0.039677370 ubox
13 36 0.007243242 ubox
13 37 0.932425818 ubox
13 38 0.321012070 ubox
13 43 0.004112688 ubox
13 64 0.028975552 ubox
14 20 0.027838314 ubox
14 23 0.005341499 ubox
14 25 0.004633704 ubox
14 34 0.039674593 ubox
14 36 0.932431411 ubox
14 37 0.350939145 ubox
14 38 0.012277029 ubox
14 42 0.004467908 ubox
14 63 0.028974453 ubox
15 22 0.005277624 ubox
15 24 0.004630527 ubox
15 33 0.017055236 ubox
15 35 0.917397407 ubox
15 36 0.348992181 ubox
15 37 0.011952902 ubox
15 41 0.004458596 ubox
15 51 0.003753232 ubox
15 62 0.028828808 ubox
16 29 0.006799330 ubox
16 50 0.004536380 ubox
16 61 0.027530240 ubox
17 28 0.016815604 ubox
17 39 0.005550087 ubox
18 25 0.005444222 ubox
18 27 0.016942184 ubox
18 33 0.995266769 ubox
18 34 0.033451988 ubox
18 38 0.005366939 ubox
18 48 0.012661992 ubox
18 59 0.012072036 ubox
19 24 0.005534565 ubox
19 26 0.016899954 ubox
19 32 0.996349078 ubox
19 33 0.029679180 ubox
19 37 0.004636951 ubox
19 47 0.021197993 ubox
19 58 0.010476852 ubox
19 69 0.031409223 ubox
19 74 0.003310334 ubox
20 30 0.009523035 ubox
20 31 0.997916375 ubox
20 46 0.022326920 ubox
20 68 0.033972057 ubox
20 73 0.003396313 ubox
21 29 0.011295121 ubox
21 30 0.997928052 ubox
21 31 0.025811031 ubox
21 45 0.022340326 ubox
22 28 0.012781173 ubox
22 29 0.997887138 ubox
22 30 0.026014077 ubox
22 44 0.022342121 ubox
23 28 0.993409283 ubox
23 29 0.026174574 ubox
27 39 0.023000255 ubox
27 61 0.048762308 ubox
28 38 0.022787521 ubox
28 60 0.048847464 ubox
29 37 0.022563768 ubox
29 38 0.003860218 ubox
29 59 0.048875778 ubox
29 60 0.015668601 ubox
30 36 0.022305922 ubox
30 37 0.005311829 ubox
30 58 0.048849411 ubox
30 59 0.017787358 ubox
31 36 0.006201264 ubox
31 57 0.048772728 ubox
31 58 0.018123034 ubox
32 56 0.040350309 ubox
33 55 0.030120418 ubox
33 56 0.034211886 ubox
34 46 0.011255550 ubox
34 54 0.013041281 ubox
34 55 0.044097543 ubox
35 45 0.011324045 ubox
35 54 0.051644744 ubox
36 44 0.011307660 ubox
36 53 0.053294483 ubox
37 52 0.053266802 ubox
38 61 0.003512582 ubox
39 60 0.003572360 ubox
40 46 0.011980442 ubox
41 45 0.010443783 ubox
44 59 0.020065092 ubox
45 58 0.020289855 ubox
46 57 0.021099464 ubox
47 56 0.021392609 ubox
48 55 0.021423931 ubox
49 54 0.019301222 ubox
52 58 0.003414095 ubox
52 59 0.005089535 ubox
52 60 0.007026508 ubox
52 63 0.004313120 ubox
52 66 0.993732961 ubox
53 57 0.003398928 ubox
53 58 0.005090276 ubox
53 59 0.007055879 ubox
53 62 0.004330861 ubox
53 65 0.998206527 ubox
53 66 0.004955016 ubox
54 58 0.006357157 ubox
54 63 0.003904013 ubox
54 64 0.998098831 ubox
54 67 0.003595341 ubox
55 62 0.008884815 ubox
55 63 0.998197809 ubox
55 66 0.003945618 ubox
56 62 0.994587616 ubox
56 65 0.003927844 ubox
57 61 0.947666673 ubox
60 73 0.003395817 ubox
61 72 0.003402099 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
showpage
end
%%EOF
