%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUAUAAGAGGCGCGGAGGGGGCGUGCAGCAGAGUGCGUUCCUCGUCUGCCAGCCGGCUUGGCUAGCGCGCGGCGGCCGUGGCUAAGGCUGCUACGAAGCGAGCUUGGGAGGAGCAGCGGCCUGCGGGGCAGAGGAGCAUCCCGUCUACCAGGUCCCAAGCGGCGUGGCCCGCGGGUC\
) } def
/len { sequence length } bind def

/coor [
[128.66206360 157.45060730]
[131.13313293 172.24566650]
[127.57456207 186.81742859]
[118.56216431 198.80812073]
[105.55418396 206.27755737]
[90.65539551 208.01715088]
[76.27651215 203.74540710]
[64.74412537 194.15353394]
[57.92423248 180.79356384]
[56.92034149 165.82719421]
[61.89488220 151.67608643]
[72.04295349 140.62995911]
[85.72505951 134.47560120]
[71.61009216 139.55178833]
[57.49512863 144.62799072]
[43.46988297 149.94706726]
[29.53853989 155.50743103]
[15.60719585 161.06779480]
[1.67585242 166.62815857]
[-12.25549126 172.18852234]
[-26.08878326 177.98852539]
[-39.81990433 184.02642822]
[-53.55102539 190.06434631]
[-67.28214264 196.10224915]
[-81.01326752 202.14016724]
[-94.74438477 208.17807007]
[-108.47550201 214.21597290]
[-122.20662689 220.25389099]
[-135.93774414 226.29179382]
[-149.66886902 232.32969666]
[-155.16618347 247.14709473]
[-169.56549072 253.66134644]
[-184.32392883 248.00769043]
[-190.68557739 233.54031372]
[-184.87619019 218.84246826]
[-170.34237671 212.63412476]
[-155.70677185 218.59858704]
[-141.97564697 212.56066895]
[-128.24453735 206.52276611]
[-114.51341248 200.48486328]
[-100.78229523 194.44694519]
[-87.05117035 188.40904236]
[-73.32005310 182.37112427]
[-59.58893204 176.33322144]
[-45.85781097 170.29531860]
[-32.12669373 164.25740051]
[-29.58358574 160.18710327]
[-24.44458580 157.68513489]
[-17.81585693 158.25718689]
[-3.88451314 152.69680786]
[10.04683018 147.13644409]
[23.97817421 141.57608032]
[37.90951920 136.01571655]
[40.59160233 132.03561401]
[45.81389618 129.71252441]
[52.41893005 130.51303101]
[66.53389740 125.43682861]
[80.64885712 120.36063385]
[75.34429169 95.73879242]
[91.09444427 79.93456268]
[90.05957794 64.97030640]
[89.02471161 50.00604248]
[87.98983765 35.04178619]
[76.35315704 24.68681526]
[75.51683044 9.49618626]
[85.46042633 -1.53379703]
[84.42555237 -16.49805641]
[83.13255310 -31.44222260]
[81.58179474 -46.36184692]
[80.03102875 -61.28146744]
[70.90847778 -74.20777893]
[77.28852081 -87.66676331]
[75.73776245 -102.58638763]
[74.18700409 -117.50601196]
[71.99404907 -132.34484863]
[69.16298676 -147.07525635]
[66.33192444 -161.80567932]
[63.50085831 -176.53608704]
[60.66979599 -191.26649475]
[57.83872986 -205.99691772]
[55.00766754 -220.72732544]
[40.90164566 -227.19259644]
[33.31918716 -240.73091125]
[35.17589951 -256.13650513]
[45.75783920 -267.48562622]
[60.99603653 -270.41427612]
[75.03108978 -263.79635620]
[82.46623993 -250.17657471]
[80.44251251 -234.79203796]
[69.73808289 -223.55839539]
[72.56914520 -208.82797241]
[75.40020752 -194.09756470]
[78.23126984 -179.36714172]
[81.06233215 -164.63673401]
[83.89340210 -149.90632629]
[86.72446442 -135.17590332]
[97.27806091 -145.83525085]
[112.20983887 -144.40625000]
[120.55015564 -131.93873596]
[116.17179871 -117.59195709]
[102.29132080 -111.90579224]
[89.10662842 -119.05677032]
[90.65738678 -104.13714600]
[92.20814514 -89.21752930]
[101.21977997 -77.35836792]
[94.95065308 -62.83222961]
[96.50141144 -47.91260529]
[98.05216980 -32.99298096]
[101.15007782 -29.32722282]
[101.96107483 -23.66936302]
[99.38981628 -17.53292274]
[100.42468262 -2.56866407]
[111.79193115 6.98754740]
[113.05461121 22.14869308]
[102.95410156 34.00691605]
[103.98896790 48.97117615]
[105.02383423 63.93543625]
[106.05870056 78.89969635]
[117.61849976 84.46838379]
[124.72558594 96.16500092]
[124.30365753 110.70141602]
[115.56643677 123.38178253]
[128.59976196 130.80691528]
[141.63307190 138.23205566]
[154.66639709 145.65718079]
[167.69972229 153.08230591]
[180.73303223 160.50744629]
[193.76635742 167.93257141]
[206.79968262 175.35771179]
[219.83299255 182.78283691]
[232.86631775 190.20797729]
[236.24676514 177.50843811]
[247.89950562 166.80578613]
[266.30889893 162.37519836]
[281.03930664 165.20625305]
[295.76974487 168.03732300]
[310.52401733 170.74114990]
[325.30111694 173.31753540]
[338.08404541 164.02386475]
[353.68130493 166.57363892]
[362.83929443 179.45410156]
[360.12475586 195.02352905]
[347.14819336 204.04483032]
[331.60833740 201.16584778]
[322.72473145 188.09461975]
[307.94763184 185.51823425]
[300.79962158 187.47186279]
[292.93865967 182.76773071]
[278.20825195 179.93667603]
[263.47784424 177.10560608]
[255.94017029 190.07493591]
[248.40315247 203.04310608]
[258.15472412 214.44078064]
[267.90628052 225.83845520]
[282.75698853 231.29440308]
[285.15188599 245.99520874]
[294.90344238 257.39288330]
[304.65499878 268.79055786]
[320.42910767 269.76693726]
[330.82992554 281.66644287]
[329.68685913 297.42935181]
[317.67803955 307.70376587]
[301.92810059 306.39410400]
[291.78121948 294.27734375]
[293.25732422 278.54211426]
[283.50576782 267.14443970]
[273.75421143 255.74678040]
[259.60101318 251.10606384]
[256.50860596 235.59002686]
[246.75704956 224.19235229]
[237.00547791 212.79466248]
[225.44117737 203.24128723]
[212.40786743 195.81616211]
[199.37454224 188.39102173]
[186.34123230 180.96589661]
[173.30790710 173.54077148]
[160.27458191 166.11563110]
[147.24127197 158.69050598]
[134.20794678 151.26536560]
[121.17462921 143.84024048]
[108.14130402 136.41510010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 58]
[14 57]
[15 56]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[60 118]
[61 117]
[62 116]
[63 115]
[66 112]
[67 111]
[68 108]
[69 107]
[70 106]
[72 104]
[73 103]
[74 102]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[122 181]
[123 180]
[124 179]
[125 178]
[126 177]
[127 176]
[128 175]
[129 174]
[130 173]
[131 172]
[134 150]
[135 149]
[136 148]
[137 146]
[138 145]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
