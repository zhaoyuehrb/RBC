%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IDI2)
} def

/sequence { (\
GAGUUCCACAUCUGAUACCCAGGAGUCUCCAGCUUCCAAGAGAGGUCGGGUCACAGCCAGCAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.092973899 ubox
1 27 0.128899914 ubox
1 29 0.187386727 ubox
1 35 0.042280636 ubox
1 36 0.017418844 ubox
1 47 0.020137982 ubox
1 52 0.052837824 ubox
2 11 0.094027040 ubox
2 13 0.044909893 ubox
2 26 0.128215594 ubox
2 28 0.197887046 ubox
2 34 0.050199357 ubox
2 35 0.012476940 ubox
2 46 0.020011926 ubox
2 51 0.049658413 ubox
2 65 0.738548231 ubox
3 9 0.087384496 ubox
3 11 0.016534588 ubox
3 12 0.047073802 ubox
3 16 0.014393386 ubox
3 18 0.022068712 ubox
3 26 0.017537232 ubox
3 27 0.200737995 ubox
3 33 0.052381836 ubox
3 54 0.037637312 ubox
3 57 0.039229382 ubox
3 61 0.151537283 ubox
3 64 0.808113693 ubox
4 8 0.078871820 ubox
4 10 0.017376515 ubox
4 15 0.014577965 ubox
4 17 0.022034565 ubox
4 24 0.068143288 ubox
4 25 0.197745278 ubox
4 32 0.052169624 ubox
4 44 0.019379006 ubox
4 49 0.009475353 ubox
4 50 0.007433127 ubox
4 53 0.035883528 ubox
4 56 0.037123887 ubox
4 60 0.150910377 ubox
4 63 0.804105752 ubox
5 14 0.014104786 ubox
5 15 0.014105563 ubox
5 23 0.055141837 ubox
5 24 0.216213231 ubox
5 31 0.046932317 ubox
5 43 0.019574906 ubox
5 48 0.007023892 ubox
5 49 0.007152543 ubox
5 50 0.024864443 ubox
5 55 0.031845422 ubox
5 59 0.133377493 ubox
5 62 0.712690728 ubox
6 14 0.014691209 ubox
6 22 0.046973993 ubox
6 23 0.219550125 ubox
6 42 0.019496414 ubox
6 45 0.008722145 ubox
6 48 0.007933698 ubox
6 49 0.030290344 ubox
6 50 0.020756690 ubox
7 14 0.034698307 ubox
7 22 0.215128493 ubox
7 44 0.008800128 ubox
7 48 0.030369343 ubox
7 49 0.019720055 ubox
8 13 0.029952132 ubox
8 26 0.265035283 ubox
8 46 0.020397566 ubox
8 51 0.008260222 ubox
9 25 0.281217348 ubox
9 45 0.020354172 ubox
9 50 0.008430918 ubox
10 16 0.010076133 ubox
10 26 0.006682213 ubox
10 46 0.015591495 ubox
10 51 0.063082879 ubox
11 15 0.009397328 ubox
11 23 0.284549171 ubox
11 24 0.050458529 ubox
11 25 0.005087989 ubox
11 41 0.018614819 ubox
11 43 0.019281029 ubox
11 45 0.016059561 ubox
11 50 0.066107132 ubox
12 22 0.310275733 ubox
12 23 0.049769080 ubox
12 25 0.003333424 ubox
12 40 0.018881518 ubox
12 42 0.020312629 ubox
12 44 0.016281275 ubox
12 49 0.068487864 ubox
12 56 0.895050465 ubox
12 60 0.023394197 ubox
12 63 0.030582103 ubox
13 21 0.320656324 ubox
13 22 0.046923349 ubox
13 24 0.003397579 ubox
13 38 0.004748097 ubox
13 39 0.018132025 ubox
13 41 0.020065239 ubox
13 43 0.016124785 ubox
13 48 0.068576909 ubox
13 53 0.072932910 ubox
13 55 0.903442638 ubox
13 59 0.023672176 ubox
13 62 0.031271553 ubox
14 20 0.320614347 ubox
14 27 0.021282603 ubox
14 36 0.004017897 ubox
14 37 0.006483621 ubox
14 47 0.068681432 ubox
14 52 0.081566447 ubox
14 54 0.905558585 ubox
14 58 0.023456911 ubox
14 61 0.031342884 ubox
15 26 0.021320465 ubox
15 35 0.004056116 ubox
15 46 0.067243162 ubox
15 51 0.062961928 ubox
16 25 0.021204023 ubox
16 45 0.064705060 ubox
16 50 0.023248607 ubox
17 26 0.006189599 ubox
17 46 0.011206095 ubox
17 51 0.904983754 ubox
18 25 0.006664772 ubox
18 45 0.016537054 ubox
18 49 0.019635299 ubox
18 50 0.916883306 ubox
19 44 0.016706275 ubox
19 45 0.008869529 ubox
19 48 0.019677667 ubox
19 49 0.916976847 ubox
19 50 0.014930149 ubox
20 44 0.009099463 ubox
20 48 0.914611619 ubox
20 49 0.016187938 ubox
21 28 0.037983011 ubox
21 34 0.003926465 ubox
21 35 0.003225352 ubox
22 27 0.040452142 ubox
22 28 0.014607140 ubox
22 29 0.027057909 ubox
22 30 0.573883426 ubox
22 33 0.004010420 ubox
22 34 0.003622872 ubox
22 36 0.105346627 ubox
22 37 0.130075119 ubox
22 47 0.546122415 ubox
22 52 0.005145803 ubox
22 58 0.043463737 ubox
23 27 0.015723392 ubox
23 28 0.021476337 ubox
23 29 0.574352171 ubox
23 33 0.003679143 ubox
23 35 0.110061848 ubox
23 36 0.130089824 ubox
23 46 0.498225236 ubox
23 47 0.305205980 ubox
23 51 0.005107381 ubox
23 52 0.038300746 ubox
23 57 0.043767212 ubox
24 28 0.499695581 ubox
24 34 0.132190884 ubox
24 35 0.107884447 ubox
24 46 0.307668397 ubox
24 51 0.037852018 ubox
24 65 0.006140256 ubox
25 33 0.150767616 ubox
25 34 0.076467207 ubox
25 46 0.023811258 ubox
25 51 0.006390967 ubox
25 54 0.105721652 ubox
25 57 0.006907238 ubox
25 61 0.005911365 ubox
25 64 0.006854826 ubox
26 32 0.147445703 ubox
26 41 0.030543838 ubox
26 43 0.646242771 ubox
26 45 0.208185827 ubox
26 49 0.010463396 ubox
26 50 0.009682886 ubox
26 53 0.104292867 ubox
26 56 0.006275829 ubox
26 60 0.005233345 ubox
26 63 0.006064847 ubox
27 40 0.030766546 ubox
27 42 0.653931655 ubox
27 44 0.229136544 ubox
27 45 0.005959602 ubox
27 48 0.010812291 ubox
27 49 0.013435457 ubox
27 50 0.066690003 ubox
27 56 0.008590562 ubox
27 60 0.005562006 ubox
27 63 0.004491763 ubox
28 39 0.029507890 ubox
28 41 0.653781950 ubox
28 43 0.229158386 ubox
28 44 0.004834432 ubox
28 45 0.004860954 ubox
28 48 0.013110482 ubox
28 49 0.030354432 ubox
28 50 0.235427203 ubox
28 55 0.007934993 ubox
28 59 0.005111259 ubox
28 62 0.004164684 ubox
29 40 0.652216139 ubox
29 42 0.227991555 ubox
29 44 0.005522920 ubox
29 45 0.025461060 ubox
29 48 0.031449316 ubox
29 49 0.310421348 ubox
29 50 0.104860375 ubox
30 44 0.025630959 ubox
30 48 0.331203753 ubox
30 49 0.108605140 ubox
31 65 0.043015463 ubox
32 46 0.667476874 ubox
32 51 0.015982745 ubox
32 57 0.017022948 ubox
32 61 0.023546459 ubox
32 64 0.047739735 ubox
33 40 0.173365911 ubox
33 42 0.043190620 ubox
33 44 0.041304513 ubox
33 45 0.686658496 ubox
33 49 0.006983735 ubox
33 50 0.016535766 ubox
33 56 0.017059545 ubox
33 60 0.023529221 ubox
33 63 0.047694901 ubox
34 39 0.162562937 ubox
34 40 0.007755125 ubox
34 41 0.047620490 ubox
34 42 0.016680081 ubox
34 43 0.040947054 ubox
34 44 0.686258517 ubox
34 48 0.007234995 ubox
34 49 0.016225249 ubox
34 55 0.016133091 ubox
34 59 0.022183695 ubox
34 62 0.045227612 ubox
35 39 0.014869578 ubox
35 40 0.044008205 ubox
35 41 0.042073724 ubox
35 42 0.038028804 ubox
35 43 0.686416509 ubox
35 45 0.003648180 ubox
35 48 0.012564972 ubox
35 50 0.016370589 ubox
36 40 0.042962345 ubox
36 42 0.685683930 ubox
36 44 0.005824220 ubox
36 45 0.068153719 ubox
36 49 0.018059403 ubox
36 50 0.017074739 ubox
37 44 0.072090966 ubox
37 48 0.018178592 ubox
37 49 0.017137280 ubox
39 65 0.009694104 ubox
40 47 0.143839036 ubox
40 64 0.010717187 ubox
41 46 0.140323030 ubox
41 65 0.067493131 ubox
42 52 0.004210303 ubox
42 64 0.073955829 ubox
43 51 0.004178003 ubox
43 65 0.009379857 ubox
44 58 0.011175827 ubox
44 64 0.010296414 ubox
44 65 0.013065204 ubox
45 57 0.011187772 ubox
45 61 0.089194768 ubox
45 64 0.015020169 ubox
46 56 0.010896999 ubox
46 60 0.088746508 ubox
46 63 0.014819893 ubox
48 58 0.079744286 ubox
49 57 0.079436646 ubox
49 58 0.174136135 ubox
49 64 0.003345857 ubox
49 65 0.007269338 ubox
50 57 0.176382562 ubox
50 61 0.037041741 ubox
50 64 0.011745769 ubox
51 56 0.168124454 ubox
51 60 0.036872620 ubox
51 63 0.011477107 ubox
55 65 0.285323995 ubox
56 64 0.322844304 ubox
57 63 0.323173066 ubox
59 65 0.027071497 ubox
60 64 0.029385302 ubox
2 65 0.9500000 lbox
3 64 0.9500000 lbox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
showpage
end
%%EOF
