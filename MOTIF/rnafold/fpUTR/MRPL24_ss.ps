%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGUCGACGGGCGUGGCGGGGGAGGGGACGCUGAGGGCCCAUGUGCUGAAAAUCCGAAGUGCCGCGGAAAGUGGAGGUGAGGGCCGCCCGCCCUAGAGGUGCCCGUCCGAGAGGCAGAGCUGACAAGGAAGGUUUCGAGCGUUUUGCUGGCAAAGGGAUUUCUUACAACCUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[61.83545303 164.89505005]
[47.77130508 159.67971802]
[37.55860138 148.69332886]
[33.38235474 134.28642273]
[36.13606262 119.54135132]
[45.23057556 107.61282349]
[58.72012711 101.05294037]
[73.71834564 101.26511383]
[88.71813202 101.18517303]
[75.51625061 94.06404877]
[62.31437683 86.94291687]
[49.11249924 79.82179260]
[35.91062546 72.70066833]
[22.70874786 65.57953644]
[9.50687122 58.45841217]
[-3.69500542 51.33728409]
[-16.06782150 60.20716476]
[-31.00392532 62.81481171]
[-45.53161621 58.69578171]
[-56.78401947 48.71858978]
[-62.56482315 34.90223312]
[-61.77684402 20.00778389]
[-74.97872162 12.88665676]
[-88.18059540 5.76552963]
[-101.38247681 -1.35559750]
[-117.20157623 -1.09732425]
[-124.72994232 -13.94928455]
[-137.93182373 -21.07041168]
[-151.13369751 -28.19153976]
[-146.43811035 -13.94543839]
[-149.81089783 0.67045033]
[-160.27420044 11.41844368]
[-174.79431152 15.18230438]
[-189.16130066 10.87074947]
[-199.20967102 -0.26614177]
[-202.02601624 -14.99937630]
[-196.79377747 -29.05724716]
[-185.02998352 -38.36386108]
[-170.14779663 -40.22125244]
[-182.23698425 -49.10110092]
[-194.32615662 -57.98094940]
[-206.41534424 -66.86079407]
[-218.50451660 -75.74064636]
[-229.17700195 -73.47204590]
[-239.12602234 -77.38546753]
[-245.14002991 -85.95726013]
[-245.42225647 -96.20455933]
[-257.19595337 -105.49863434]
[-268.96966553 -114.79270935]
[-280.74337769 -124.08678436]
[-296.00967407 -116.27456665]
[-313.09957886 -115.90883636]
[-328.58566284 -123.01472473]
[-339.38323975 -136.12373352]
[-343.36465454 -152.57695007]
[-339.77853394 -169.06431580]
[-351.86773682 -177.94415283]
[-363.95690918 -186.82400513]
[-376.04608154 -195.70385742]
[-390.78695679 -190.85760498]
[-405.55081177 -195.63343811]
[-414.66061401 -208.19491577]
[-414.61349487 -223.71192932]
[-405.42755127 -236.21783447]
[-390.63494873 -240.90388489]
[-375.92379761 -235.96818542]
[-366.95077515 -223.30860901]
[-367.16622925 -207.79302979]
[-355.07705688 -198.91319275]
[-342.98788452 -190.03334045]
[-330.89868164 -181.15348816]
[-319.93743896 -188.17771912]
[-307.20846558 -191.05793762]
[-294.22753906 -189.42884827]
[-282.54806519 -183.46345520]
[-273.57513428 -173.85498047]
[-268.39657593 -161.73637390]
[-267.65103149 -148.54675293]
[-271.44931030 -135.86048889]
[-259.67559814 -126.56642151]
[-247.90188599 -117.27234650]
[-236.12818909 -107.97827148]
[-216.85487366 -106.62811279]
[-209.62467957 -87.82982635]
[-197.53549194 -78.94997406]
[-185.44631958 -70.07012939]
[-173.35713196 -61.19028091]
[-161.26794434 -52.31043243]
[-150.67350769 -51.32418060]
[-144.01257324 -41.39341736]
[-130.81069946 -34.27228928]
[-117.60881805 -27.15116119]
[-102.73400879 -27.91878510]
[-94.26134491 -14.55747414]
[-81.05947113 -7.43634701]
[-67.85759735 -0.31521946]
[-54.65571976 6.80590773]
[-42.64174652 -2.03321004]
[-27.92085838 -4.79089975]
[-13.40299797 -0.86754256]
[-1.98167729 9.01039314]
[4.04271412 22.92418671]
[3.42612195 38.13540649]
[16.62799835 45.25653458]
[29.82987595 52.37766266]
[43.03175354 59.49879074]
[56.23362732 66.61991882]
[69.43550110 73.74104309]
[82.63738251 80.86216736]
[95.83925629 87.98329926]
[110.67630768 90.18827820]
[125.37848663 87.21406555]
[140.08065796 84.23984528]
[154.78283691 81.26562500]
[169.48501587 78.29141235]
[181.47703552 67.97142029]
[195.48576355 73.03151703]
[210.18794250 70.05729675]
[224.65148926 56.04097366]
[242.70626831 62.91906357]
[257.29635620 59.43637085]
[271.88644409 55.95368195]
[286.47656250 52.47098923]
[301.06665039 48.98830032]
[306.06890869 34.39443970]
[318.18130493 24.83966827]
[333.53878784 23.37287712]
[347.24084473 30.46211624]
[354.91519165 43.84523392]
[354.11297607 59.25172806]
[345.09020996 71.76544189]
[330.72598267 77.39328766]
[315.60388184 74.33945465]
[304.54934692 63.57839584]
[289.95922852 67.06108856]
[275.36914062 70.54377747]
[260.77905273 74.02646637]
[246.18896484 77.50915527]
[241.62458801 86.68812561]
[232.56407166 91.93703461]
[221.89176941 91.30488586]
[213.16215515 84.75947571]
[198.45997620 87.73369598]
[187.51957703 97.84095001]
[172.45924377 92.99358368]
[157.75706482 95.96780396]
[143.05488586 98.94202423]
[128.35270691 101.91623688]
[113.65052795 104.89045715]
[107.94035339 118.76107025]
[116.28742981 131.22407532]
[124.63451385 143.68705750]
[132.98158264 156.15005493]
[137.71604919 158.47334290]
[140.76446533 162.03318787]
[141.93815613 165.97286987]
[141.41894531 169.48609924]
[149.10604858 182.36665344]
[156.79315186 195.24719238]
[171.99082947 193.83525085]
[186.29307556 199.16520691]
[196.86018372 210.17878723]
[201.59403992 224.68923950]
[199.55473328 239.81550598]
[191.14718628 252.55426025]
[178.04069519 260.37619019]
[162.83758545 261.72830200]
[148.55644226 256.34204102]
[138.03277588 245.28694153]
[133.35609436 230.75796509]
[135.45495605 215.63984680]
[143.91261292 202.93429565]
[136.22550964 190.05375671]
[128.53840637 177.17320251]
[120.51859283 164.49714661]
[112.17151642 152.03414917]
[103.82444000 139.57115173]
[95.47735596 127.10814667]
[96.82752991 142.04725647]
[89.30177307 155.02273560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[15 104]
[16 103]
[22 97]
[23 96]
[24 95]
[25 94]
[27 92]
[28 91]
[29 90]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[47 82]
[48 81]
[49 80]
[50 79]
[56 71]
[57 70]
[58 69]
[59 68]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[117 143]
[118 142]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[150 178]
[151 177]
[152 176]
[153 175]
[157 174]
[158 173]
[159 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
