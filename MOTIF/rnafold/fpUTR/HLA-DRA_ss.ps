%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAAUGGUCAGACUCUAUUACACCCCACAUUCUCUUUUCUUUUAUUCUUGUCUGUUCUGCCUCACUCCCGAGCUCUACUGACUCCCAACAGAGCGCCCAAGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[-43.43126678 236.64346313]
[-64.52330780 237.59403992]
[-85.06266022 232.75270081]
[-103.49017334 222.49324036]
[-113.63278961 233.54435730]
[-123.77541351 244.59548950]
[-133.91804504 255.64660645]
[-144.06066895 266.69772339]
[-154.20329285 277.74884033]
[-151.99520874 293.22973633]
[-160.29850769 306.48074341]
[-175.19261169 311.24514771]
[-189.64500427 305.27331543]
[-196.83168030 291.38497925]
[-193.35932922 276.13778687]
[-180.86747742 266.73101807]
[-165.25440979 267.60620117]
[-155.11178589 256.55508423]
[-144.96916199 245.50398254]
[-134.82653809 234.45286560]
[-124.68391418 223.40174866]
[-114.54129028 212.35063171]
[-120.94819641 204.15293884]
[-126.18454742 195.16001892]
[-130.15303040 185.53793335]
[-132.77975464 175.46443176]
[-134.01559448 165.12568665]
[-133.83714294 154.71289062]
[-132.24719238 144.41864014]
[-129.27459717 134.43339539]
[-124.97381592 124.94201660]
[-119.42391205 116.12028503]
[-112.72707367 108.13163757]
[-105.00674438 101.12419128]
[-96.40536499 95.22795868]
[-87.08171844 90.55243683]
[-77.20800781 87.18458557]
[-66.96668243 85.18721771]
[-56.54706573 84.59780884]
[-46.14184570 85.42778778]
[-35.94351959 87.66235352]
[-26.14083099 91.26070404]
[-16.91527748 96.15679169]
[-8.43774796 102.26052856]
[-0.86535960 109.45947266]
[5.66145658 117.62086487]
[11.02155781 126.59407806]
[24.99951744 121.15196228]
[38.97747803 115.70984650]
[52.95544052 110.26773071]
[66.93340302 104.82561493]
[80.91136169 99.38349915]
[86.83763885 86.16133881]
[100.33989716 80.90443420]
[113.64652252 86.63854218]
[127.62448883 81.19642639]
[141.60244751 75.75431061]
[155.58039856 70.31219482]
[169.55836487 64.87007904]
[183.53633118 59.42796326]
[197.51428223 53.98584747]
[197.07276917 43.46371841]
[199.41207886 33.21313095]
[204.35845947 23.95474243]
[211.55514526 16.33700562]
[220.48818970 10.89074135]
[230.52305603 7.99216557]
[240.94975281 7.83690643]
[251.03303528 10.42682838]
[260.06430054 15.57054043]
[267.41128540 22.89751244]
[272.56250000 31.88475037]
[287.26373291 28.90589333]
[301.96496582 25.92703629]
[309.89318848 21.08927345]
[317.12826538 23.07933998]
[331.90856934 20.52150536]
[344.15109253 9.61037636]
[359.63464355 15.01335144]
[362.43106079 31.17231369]
[349.66363525 41.46430969]
[334.46640015 35.30181503]
[319.68609619 37.85964584]
[304.94381714 40.62827301]
[290.24258423 43.60713196]
[275.54135132 46.58598709]
[270.68725586 65.96574402]
[256.83328247 80.46168518]
[237.55294800 86.22994995]
[217.87156677 81.69156647]
[202.95640564 67.96380615]
[188.97843933 73.40592194]
[175.00048828 78.84803772]
[161.02252197 84.29015350]
[147.04455566 89.73226929]
[133.06660461 95.17438507]
[119.08863831 100.61650085]
[113.16236115 113.83866119]
[99.66010284 119.09556580]
[86.35347748 113.36145782]
[72.37551117 118.80357361]
[58.39755249 124.24568939]
[44.41959381 129.68780518]
[30.44163322 135.12992859]
[16.46367264 140.57203674]
[19.28039742 161.56475830]
[16.26044464 182.51786804]
[7.63933611 201.84024048]
[-5.92230129 218.06626892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[47 105]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[61 91]
[72 86]
[73 85]
[74 84]
[76 83]
[77 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
