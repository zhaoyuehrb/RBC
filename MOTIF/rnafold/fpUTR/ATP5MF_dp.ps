%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP5MF)
} def

/sequence { (\
GUGCAUUCCCUACCCAGCAGCCCUCGCGCGGUCCGGCACAGCGGACACCAGGACUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.089436562 ubox
1 18 0.044763314 ubox
1 21 0.096756091 ubox
1 27 0.026810093 ubox
1 29 0.635832984 ubox
1 39 0.134659103 ubox
1 42 0.023216230 ubox
1 46 0.014238990 ubox
1 48 0.059435925 ubox
1 54 0.057762063 ubox
2 12 0.089474161 ubox
2 16 0.020202354 ubox
2 17 0.043356157 ubox
2 19 0.247057413 ubox
2 20 0.057618016 ubox
2 26 0.026619270 ubox
2 28 0.635972739 ubox
2 30 0.026875264 ubox
2 38 0.134775887 ubox
2 40 0.004631817 ubox
2 41 0.022915747 ubox
2 43 0.024926506 ubox
2 45 0.012310492 ubox
2 47 0.059082896 ubox
2 50 0.017650983 ubox
2 53 0.053459979 ubox
2 58 0.220407245 ubox
3 11 0.084648289 ubox
3 15 0.022939817 ubox
3 18 0.292702019 ubox
3 21 0.047263791 ubox
3 25 0.024578936 ubox
3 27 0.636523141 ubox
3 29 0.036174328 ubox
3 37 0.134832898 ubox
3 39 0.005381416 ubox
3 42 0.055434870 ubox
3 46 0.055572043 ubox
3 49 0.019468156 ubox
3 57 0.243815992 ubox
4 17 0.292593589 ubox
4 20 0.047454709 ubox
4 26 0.635820586 ubox
4 28 0.036161450 ubox
4 36 0.125837582 ubox
4 41 0.055428653 ubox
6 17 0.012160156 ubox
6 20 0.014033058 ubox
6 45 0.005302929 ubox
6 51 0.003313681 ubox
6 53 0.034144840 ubox
6 59 0.013871652 ubox
6 60 0.008607469 ubox
7 16 0.022365252 ubox
7 19 0.014149697 ubox
7 31 0.003715402 ubox
7 35 0.007334270 ubox
7 36 0.004046171 ubox
7 44 0.005248415 ubox
7 45 0.034840576 ubox
7 50 0.003612866 ubox
7 52 0.032405839 ubox
7 53 0.379262069 ubox
7 58 0.013391078 ubox
7 59 0.009847361 ubox
8 30 0.007007707 ubox
8 31 0.045408144 ubox
8 35 0.023179405 ubox
8 36 0.067006519 ubox
8 43 0.005224088 ubox
8 44 0.035529090 ubox
8 51 0.033074487 ubox
8 52 0.398027302 ubox
9 30 0.045770431 ubox
9 31 0.046794962 ubox
9 35 0.082653729 ubox
9 36 0.039221314 ubox
9 43 0.035506771 ubox
9 51 0.392959561 ubox
9 52 0.405799212 ubox
10 17 0.113911589 ubox
10 20 0.393189576 ubox
10 30 0.048749276 ubox
10 31 0.009826756 ubox
10 35 0.043809618 ubox
10 36 0.005422197 ubox
10 41 0.034941008 ubox
10 51 0.410754721 ubox
10 52 0.031653708 ubox
11 16 0.108613720 ubox
11 19 0.384465289 ubox
11 30 0.011229515 ubox
11 35 0.006811931 ubox
11 40 0.034391715 ubox
11 50 0.394964547 ubox
11 51 0.030658126 ubox
12 32 0.133300621 ubox
13 31 0.145301602 ubox
13 36 0.029726473 ubox
13 44 0.003983451 ubox
13 52 0.085205280 ubox
14 30 0.162678266 ubox
14 31 0.133862385 ubox
14 35 0.029662275 ubox
14 36 0.013060505 ubox
14 43 0.003941787 ubox
14 44 0.015913627 ubox
14 51 0.085224354 ubox
14 52 0.171304232 ubox
15 30 0.235539270 ubox
15 35 0.013109735 ubox
15 43 0.015888273 ubox
15 51 0.171602282 ubox
16 24 0.031259785 ubox
16 55 0.011262184 ubox
17 23 0.032328481 ubox
17 27 0.161945990 ubox
17 29 0.639144000 ubox
17 32 0.028462558 ubox
17 37 0.004669228 ubox
17 42 0.018447265 ubox
17 54 0.011812897 ubox
18 26 0.161995974 ubox
18 28 0.637919715 ubox
18 31 0.029109396 ubox
18 36 0.004673128 ubox
18 41 0.018449120 ubox
19 55 0.153313649 ubox
20 27 0.650540538 ubox
20 29 0.171824036 ubox
20 32 0.010309871 ubox
20 37 0.018544371 ubox
20 54 0.178235542 ubox
21 26 0.649067630 ubox
21 28 0.171754350 ubox
21 31 0.011414692 ubox
21 36 0.018518183 ubox
21 44 0.004089876 ubox
21 52 0.042170004 ubox
22 30 0.013407748 ubox
22 31 0.010244078 ubox
22 35 0.018321393 ubox
22 43 0.004073288 ubox
22 51 0.040431228 ubox
22 52 0.281058670 ubox
23 30 0.018951467 ubox
23 31 0.005231991 ubox
23 41 0.003819241 ubox
23 51 0.281784067 ubox
23 52 0.029449748 ubox
24 30 0.005106267 ubox
24 31 0.011242767 ubox
24 40 0.003699012 ubox
24 44 0.006960336 ubox
24 45 0.004688307 ubox
24 50 0.272263938 ubox
24 51 0.022097612 ubox
24 52 0.042460134 ubox
24 53 0.102410681 ubox
25 30 0.024310633 ubox
25 43 0.010311005 ubox
25 44 0.005388681 ubox
25 51 0.054184675 ubox
25 52 0.110392858 ubox
26 32 0.007029330 ubox
26 37 0.004525461 ubox
26 42 0.010533320 ubox
27 31 0.007149159 ubox
27 36 0.004522780 ubox
27 41 0.010527655 ubox
27 43 0.007067009 ubox
28 37 0.010330154 ubox
28 42 0.007251314 ubox
29 35 0.003178379 ubox
29 36 0.010324855 ubox
29 41 0.007232985 ubox
30 49 0.237891159 ubox
30 55 0.120873640 ubox
30 56 0.034535944 ubox
30 57 0.026221735 ubox
31 37 0.005219639 ubox
31 39 0.005932579 ubox
31 46 0.941008741 ubox
31 48 0.216472357 ubox
31 54 0.133666609 ubox
31 55 0.004680734 ubox
31 56 0.022440231 ubox
32 36 0.004887229 ubox
32 38 0.005736898 ubox
32 45 0.964293257 ubox
32 47 0.136635080 ubox
32 53 0.134322024 ubox
33 44 0.978690126 ubox
33 52 0.134408741 ubox
34 43 0.978713208 ubox
34 51 0.134326364 ubox
35 42 0.969014532 ubox
35 49 0.122903608 ubox
36 42 0.119576116 ubox
36 48 0.122905495 ubox
37 41 0.166553160 ubox
40 55 0.003996946 ubox
41 54 0.004252783 ubox
43 49 0.042699211 ubox
43 55 0.004282840 ubox
43 56 0.004022949 ubox
43 57 0.125652317 ubox
44 48 0.042066611 ubox
44 54 0.004753718 ubox
44 55 0.003387627 ubox
44 56 0.125780500 ubox
45 55 0.118783415 ubox
51 57 0.376183668 ubox
52 56 0.370495625 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
showpage
end
%%EOF
