%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STAB1)
} def

/sequence { (\
GCCUGUGCUGUGCCUGCCUCCUAGAGCUCAUUCCCUACGCCCCGACUCUGUCCUGGACAGCGUGCCCACCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026720172 ubox
1 27 0.004129290 ubox
1 40 0.003844067 ubox
1 63 0.004337073 ubox
1 65 0.051290072 ubox
1 73 0.927561180 ubox
2 7 0.026650950 ubox
2 26 0.004128118 ubox
2 39 0.003841554 ubox
2 62 0.004442133 ubox
2 64 0.051413577 ubox
2 72 0.901158731 ubox
3 24 0.004324833 ubox
3 72 0.372082507 ubox
4 23 0.004305505 ubox
4 30 0.011851191 ubox
4 62 0.004913628 ubox
4 64 0.007844094 ubox
4 68 0.053622359 ubox
4 71 0.438754565 ubox
5 22 0.003983862 ubox
5 29 0.013131590 ubox
5 38 0.003784615 ubox
5 63 0.018831421 ubox
5 65 0.008485027 ubox
5 67 0.055286585 ubox
5 69 0.923669814 ubox
5 70 0.339633548 ubox
5 73 0.015557882 ubox
6 37 0.003781425 ubox
6 62 0.062648058 ubox
6 64 0.007983492 ubox
6 68 0.965497710 ubox
6 71 0.027130112 ubox
6 72 0.013842629 ubox
7 17 0.004652693 ubox
7 27 0.014262645 ubox
7 36 0.003535602 ubox
7 61 0.071337778 ubox
7 63 0.004912399 ubox
7 65 0.064639289 ubox
7 67 0.962623946 ubox
7 70 0.029019398 ubox
7 73 0.131807289 ubox
8 16 0.004682511 ubox
8 26 0.014300117 ubox
8 60 0.071500035 ubox
8 62 0.004984254 ubox
8 64 0.066183847 ubox
8 72 0.132239170 ubox
9 25 0.014239397 ubox
9 30 0.025442143 ubox
9 59 0.071489581 ubox
9 62 0.008341484 ubox
9 64 0.022200699 ubox
9 68 0.048957282 ubox
9 71 0.131611060 ubox
10 29 0.028299712 ubox
10 31 0.005835156 ubox
10 58 0.071500295 ubox
10 61 0.008846331 ubox
10 63 0.029866121 ubox
10 65 0.980406254 ubox
10 67 0.049647075 ubox
10 69 0.051483724 ubox
10 70 0.102600719 ubox
11 23 0.012787369 ubox
11 30 0.007196610 ubox
11 57 0.071013250 ubox
11 60 0.005934370 ubox
11 62 0.079795268 ubox
11 64 0.981150812 ubox
11 68 0.070624856 ubox
12 22 0.011884536 ubox
12 27 0.038626258 ubox
12 29 0.007605971 ubox
12 61 0.086771596 ubox
12 63 0.983915494 ubox
12 65 0.095257549 ubox
12 67 0.055288904 ubox
13 26 0.038687666 ubox
13 56 0.066239252 ubox
13 60 0.063484995 ubox
13 62 0.986449704 ubox
13 64 0.097411655 ubox
14 24 0.039096423 ubox
14 55 0.066250527 ubox
14 56 0.004764725 ubox
14 60 0.988995441 ubox
15 23 0.038967784 ubox
15 25 0.003375333 ubox
15 30 0.005921416 ubox
15 55 0.004777628 ubox
15 59 0.990797586 ubox
15 62 0.090719572 ubox
15 64 0.008019615 ubox
16 22 0.036474489 ubox
16 27 0.025462479 ubox
16 29 0.006484130 ubox
16 40 0.003586609 ubox
16 51 0.018054387 ubox
16 54 0.007257882 ubox
16 58 0.990402328 ubox
16 61 0.096116560 ubox
16 63 0.010299694 ubox
16 65 0.015982290 ubox
17 26 0.023164693 ubox
17 39 0.003610625 ubox
17 50 0.018007926 ubox
17 56 0.959745490 ubox
17 60 0.095894573 ubox
17 62 0.010390468 ubox
17 64 0.015876958 ubox
18 24 0.016850143 ubox
18 26 0.020397890 ubox
18 55 0.959302923 ubox
18 56 0.081013112 ubox
18 60 0.010955420 ubox
19 23 0.015194137 ubox
19 25 0.023379557 ubox
19 55 0.077984484 ubox
19 56 0.007480571 ubox
19 57 0.241260987 ubox
19 59 0.008309831 ubox
20 24 0.023239038 ubox
20 55 0.013282243 ubox
20 56 0.252160069 ubox
21 55 0.251962469 ubox
21 56 0.024690752 ubox
22 37 0.007360060 ubox
22 50 0.939081257 ubox
22 55 0.025837515 ubox
23 36 0.007902325 ubox
23 49 0.991808992 ubox
23 54 0.054044899 ubox
24 33 0.010862804 ubox
24 35 0.007869962 ubox
24 48 0.996165344 ubox
24 52 0.034006759 ubox
24 53 0.054629779 ubox
25 32 0.010710166 ubox
25 36 0.006200204 ubox
25 47 0.995995760 ubox
25 49 0.007315899 ubox
25 51 0.032156362 ubox
25 54 0.005422580 ubox
26 31 0.007624703 ubox
26 35 0.006658921 ubox
26 40 0.036142747 ubox
26 46 0.994714118 ubox
26 48 0.007592137 ubox
26 51 0.053463333 ubox
26 53 0.005491619 ubox
26 73 0.003555960 ubox
27 39 0.039676311 ubox
27 50 0.056717251 ubox
27 72 0.003569494 ubox
28 45 0.946710325 ubox
28 71 0.003427981 ubox
29 44 0.948712877 ubox
29 50 0.008776707 ubox
30 49 0.008461172 ubox
31 45 0.023824463 ubox
32 44 0.022213184 ubox
32 45 0.098462023 ubox
33 44 0.099247823 ubox
36 64 0.032643575 ubox
37 63 0.038470958 ubox
38 44 0.040989479 ubox
38 50 0.003310299 ubox
38 62 0.039020168 ubox
39 43 0.043405538 ubox
39 61 0.039055673 ubox
39 65 0.015079104 ubox
40 56 0.013254728 ubox
40 60 0.038688850 ubox
40 64 0.015090989 ubox
41 55 0.013422571 ubox
41 56 0.021461226 ubox
42 55 0.021444551 ubox
42 56 0.032369161 ubox
43 50 0.003266727 ubox
43 55 0.032271794 ubox
43 62 0.006041369 ubox
43 64 0.005905775 ubox
44 52 0.042208580 ubox
44 54 0.014322233 ubox
44 61 0.006125824 ubox
44 63 0.003815368 ubox
45 51 0.042686685 ubox
45 63 0.030347486 ubox
46 50 0.042309020 ubox
46 62 0.031246372 ubox
48 60 0.032683856 ubox
49 59 0.034166828 ubox
50 58 0.034410187 ubox
51 57 0.034413022 ubox
52 56 0.034129774 ubox
62 69 0.007000968 ubox
62 73 0.008899288 ubox
63 68 0.006586749 ubox
63 71 0.003828693 ubox
63 72 0.008818027 ubox
64 70 0.004393614 ubox
64 73 0.026405624 ubox
65 72 0.026458739 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
showpage
end
%%EOF
