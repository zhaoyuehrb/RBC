%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CUL9)
} def

/sequence { (\
GAGGCGGGGCCAGGACGGCGGGACCGGCCGCUGGGUCCCAGCGAGGGCUGAGCCGGGCGGUGGGAGGAGGUCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.055612404 ubox
2 71 0.051037114 ubox
3 11 0.838662386 ubox
3 25 0.017271081 ubox
3 29 0.039762686 ubox
3 54 0.030795983 ubox
3 72 0.411454317 ubox
4 10 0.839566704 ubox
4 19 0.021807828 ubox
4 24 0.018396225 ubox
4 28 0.039924713 ubox
4 42 0.080323538 ubox
4 53 0.030851189 ubox
4 58 0.006454991 ubox
4 71 0.413337198 ubox
5 9 0.833470671 ubox
5 17 0.014364295 ubox
5 18 0.020207628 ubox
5 20 0.020926594 ubox
5 26 0.054988143 ubox
5 27 0.038823961 ubox
5 41 0.080357671 ubox
5 52 0.030826397 ubox
5 57 0.006451293 ubox
5 70 0.413423333 ubox
6 16 0.019374122 ubox
6 19 0.010413771 ubox
6 25 0.057441851 ubox
6 38 0.009935158 ubox
6 39 0.084398869 ubox
6 72 0.023953841 ubox
7 24 0.057595801 ubox
7 25 0.038061525 ubox
7 37 0.009981757 ubox
7 38 0.085699285 ubox
7 39 0.004940110 ubox
7 71 0.018910979 ubox
7 72 0.022261501 ubox
8 24 0.038087622 ubox
8 36 0.010072254 ubox
8 37 0.085718249 ubox
8 38 0.004947581 ubox
8 49 0.022664262 ubox
8 54 0.006604161 ubox
8 71 0.017603777 ubox
8 72 0.051106496 ubox
9 19 0.506886327 ubox
9 24 0.003228286 ubox
9 36 0.085718116 ubox
9 37 0.004918220 ubox
9 48 0.023042271 ubox
9 53 0.006620025 ubox
9 71 0.049619341 ubox
10 18 0.507415440 ubox
10 21 0.065977419 ubox
10 22 0.019214874 ubox
10 34 0.013280545 ubox
10 35 0.085661967 ubox
10 47 0.023046504 ubox
10 52 0.006623788 ubox
10 63 0.007880597 ubox
10 64 0.008346152 ubox
10 67 0.019495847 ubox
10 70 0.049699103 ubox
10 75 0.114403941 ubox
11 17 0.507097357 ubox
11 20 0.066060812 ubox
11 21 0.019300311 ubox
11 33 0.014814899 ubox
11 34 0.085105896 ubox
11 46 0.023034364 ubox
11 50 0.006557754 ubox
11 62 0.007895903 ubox
11 63 0.008320013 ubox
11 66 0.019467210 ubox
11 69 0.049597311 ubox
11 74 0.116992092 ubox
12 32 0.015942696 ubox
12 49 0.006556332 ubox
12 61 0.005104338 ubox
13 31 0.015142315 ubox
13 32 0.062695250 ubox
13 38 0.003756622 ubox
13 48 0.006551007 ubox
13 72 0.033188429 ubox
14 31 0.067829291 ubox
14 37 0.003806852 ubox
14 71 0.019811857 ubox
14 72 0.509224967 ubox
15 36 0.003814590 ubox
15 61 0.005880843 ubox
15 71 0.510399260 ubox
16 26 0.026143999 ubox
16 30 0.070030521 ubox
16 33 0.060062228 ubox
16 35 0.003454533 ubox
16 43 0.020445554 ubox
16 55 0.004139437 ubox
16 60 0.006066160 ubox
16 70 0.510388370 ubox
17 25 0.026561452 ubox
17 29 0.070149328 ubox
17 32 0.060516942 ubox
17 42 0.020244092 ubox
17 54 0.004148429 ubox
17 72 0.669843575 ubox
18 24 0.026538650 ubox
18 28 0.070149056 ubox
18 31 0.060655844 ubox
18 42 0.012861359 ubox
18 53 0.004148502 ubox
18 58 0.006160014 ubox
18 71 0.673269953 ubox
19 26 0.014912034 ubox
19 27 0.068611297 ubox
19 30 0.060659293 ubox
19 41 0.013363958 ubox
19 52 0.004143433 ubox
19 57 0.006168727 ubox
19 62 0.003308667 ubox
19 70 0.673570976 ubox
20 25 0.020611043 ubox
20 29 0.060650758 ubox
20 39 0.024216257 ubox
20 72 0.038690011 ubox
21 28 0.060603905 ubox
21 38 0.024340369 ubox
21 54 0.006278679 ubox
21 71 0.038145448 ubox
21 72 0.012786755 ubox
22 37 0.024341224 ubox
22 53 0.006285590 ubox
22 71 0.011542671 ubox
22 72 0.070829645 ubox
23 36 0.024330078 ubox
23 61 0.051769451 ubox
23 71 0.070827666 ubox
24 35 0.024151010 ubox
24 60 0.052544105 ubox
24 63 0.133327167 ubox
24 64 0.977944883 ubox
24 67 0.008715737 ubox
24 70 0.051635749 ubox
25 33 0.004264398 ubox
25 34 0.023965036 ubox
25 50 0.006355666 ubox
25 59 0.052549796 ubox
25 62 0.133101052 ubox
25 63 0.980855280 ubox
25 66 0.007649436 ubox
25 69 0.041853272 ubox
26 32 0.005157052 ubox
26 49 0.006367070 ubox
26 58 0.052525684 ubox
26 61 0.093785155 ubox
26 72 0.006097853 ubox
27 31 0.005265068 ubox
27 48 0.006372986 ubox
27 61 0.986653642 ubox
27 71 0.006327924 ubox
28 47 0.006359267 ubox
28 56 0.052512111 ubox
28 60 0.993124722 ubox
28 63 0.003482913 ubox
28 70 0.006343334 ubox
29 43 0.003386761 ubox
29 46 0.005716656 ubox
29 55 0.052505121 ubox
29 59 0.993125142 ubox
29 62 0.003408711 ubox
29 69 0.006326738 ubox
30 42 0.006890387 ubox
30 53 0.037234527 ubox
30 54 0.037125283 ubox
30 58 0.993166193 ubox
30 71 0.035460649 ubox
31 41 0.006894979 ubox
31 52 0.052583279 ubox
31 56 0.027397828 ubox
31 57 0.992797994 ubox
31 67 0.005843670 ubox
31 69 0.005372462 ubox
31 70 0.037045051 ubox
31 74 0.010133794 ubox
32 40 0.006893649 ubox
32 51 0.052488331 ubox
32 55 0.038627472 ubox
32 56 0.989191744 ubox
32 66 0.005793764 ubox
32 68 0.005326692 ubox
32 69 0.036832775 ubox
32 73 0.010169943 ubox
33 39 0.006895233 ubox
33 54 0.047459377 ubox
33 72 0.010145866 ubox
34 38 0.006783955 ubox
34 49 0.052455028 ubox
34 53 0.047392033 ubox
34 54 0.991955017 ubox
34 71 0.007768512 ubox
35 48 0.052654287 ubox
35 53 0.991979622 ubox
36 47 0.047482331 ubox
36 51 0.063704664 ubox
36 52 0.974891668 ubox
36 65 0.049975779 ubox
37 46 0.047545060 ubox
37 47 0.082133346 ubox
37 50 0.056591607 ubox
37 64 0.051701475 ubox
38 45 0.047383631 ubox
38 46 0.082315291 ubox
38 47 0.008324059 ubox
38 63 0.051745598 ubox
39 45 0.082303492 ubox
39 46 0.008350296 ubox
39 50 0.985009640 ubox
39 62 0.051779682 ubox
40 49 0.989586552 ubox
40 61 0.051682980 ubox
41 48 0.990342505 ubox
41 58 0.011164095 ubox
42 47 0.990019946 ubox
42 57 0.011177180 ubox
42 59 0.051344417 ubox
43 58 0.050650619 ubox
43 72 0.016524135 ubox
44 71 0.016415512 ubox
45 54 0.016093526 ubox
45 72 0.045833707 ubox
46 53 0.015991845 ubox
46 54 0.051173509 ubox
46 71 0.045533510 ubox
46 72 0.057087655 ubox
47 53 0.051321861 ubox
47 58 0.004720463 ubox
47 71 0.057480205 ubox
48 52 0.050985560 ubox
48 57 0.004770822 ubox
48 64 0.003447711 ubox
48 66 0.010525308 ubox
48 67 0.013203835 ubox
48 69 0.046391768 ubox
48 70 0.057404666 ubox
48 74 0.027496694 ubox
49 56 0.004706332 ubox
49 63 0.003394615 ubox
49 65 0.010467644 ubox
49 66 0.013123831 ubox
49 68 0.046344497 ubox
49 69 0.056811957 ubox
49 73 0.027622604 ubox
50 72 0.027678531 ubox
51 71 0.024305443 ubox
52 61 0.024939732 ubox
52 71 0.013260520 ubox
53 60 0.025215805 ubox
53 63 0.039584459 ubox
53 64 0.061681656 ubox
53 67 0.011144307 ubox
53 70 0.024878075 ubox
53 75 0.007417517 ubox
54 59 0.025182240 ubox
54 62 0.039695677 ubox
54 63 0.061646018 ubox
54 66 0.011171336 ubox
54 69 0.024897141 ubox
54 74 0.007669410 ubox
55 61 0.037584493 ubox
56 72 0.030364318 ubox
57 71 0.030601606 ubox
58 70 0.030657938 ubox
61 73 0.009216877 ubox
62 72 0.015164925 ubox
63 71 0.014576961 ubox
63 72 0.011264470 ubox
64 71 0.009177230 ubox
64 72 0.035498970 ubox
65 71 0.036144144 ubox
66 72 0.043448769 ubox
67 71 0.028303537 ubox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
19 70 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
