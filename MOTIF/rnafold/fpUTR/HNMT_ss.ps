%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAUACUUCUAUUUCUUACAAAACAACCGUAUAGGGGUUAAAGUAUCAGUGCAAAGUCCCGUUCAAAUAUUGACUCAGUAAUGAGCUCUACAAGCCAGCCUUUGUGGCAUGUUAAAUUCAAAACAAGCUUAGCAUUUUUUUUUUUUUUUUUGGAUAGAAACUGGUGGGGGUGGGGAAAGAAAGAGGGAACUGGGAAGAGAAGGAGGGGAACUUAAACCUUGCUUCCUGCUCUGUCUUUCUCAGAAAACCAAAU\
) } def
/len { sequence length } bind def

/coor [
[101.55243683 231.06111145]
[109.76099396 218.50521851]
[111.68049622 203.62854004]
[113.59999847 188.75186157]
[104.78321838 200.88711548]
[95.96643829 213.02236938]
[87.14965820 225.15762329]
[78.33287811 237.29287720]
[69.51610565 249.42813110]
[71.78609467 264.83868408]
[62.67175674 277.01995850]
[47.96616745 279.08908081]
[39.14938736 291.22433472]
[30.33260918 303.35958862]
[21.51583099 315.49484253]
[12.69905281 327.63009644]
[3.88227367 339.76535034]
[-4.85958529 351.95468140]
[-13.52619267 364.19763184]
[-22.19280052 376.44058228]
[-16.32372284 390.70794678]
[-19.12232971 405.87933350]
[-29.69559669 417.11364746]
[-44.66963196 420.82601929]
[-59.26627731 415.83187866]
[-68.82779694 403.72482300]
[-70.30313873 388.36816406]
[-63.22153091 374.66217041]
[-49.84268951 366.98034668]
[-34.43575287 367.77398682]
[-25.76914597 355.53103638]
[-17.10253906 343.28808594]
[-15.80672455 336.03335571]
[-8.25298119 330.94857788]
[0.56379747 318.81332397]
[9.38057613 306.67807007]
[18.19735527 294.54281616]
[27.01413345 282.40756226]
[35.83091354 270.27230835]
[33.25448608 255.64706421]
[42.02308273 243.21458435]
[57.38084793 240.61135864]
[66.19762421 228.47610474]
[75.01440430 216.34085083]
[83.83118439 204.20559692]
[92.64796448 192.07032776]
[101.46474457 179.93507385]
[90.46191406 190.13006592]
[75.91163635 193.77554321]
[61.40172195 189.97261047]
[50.51000595 179.65901184]
[45.92217636 165.37783813]
[48.76948929 150.65055847]
[58.34986115 139.10861206]
[72.30096436 133.59800720]
[87.18273926 135.47755432]
[99.32565308 144.28378296]
[105.73526764 157.84407043]
[102.07656097 143.29711914]
[98.41785431 128.75016785]
[94.75914764 114.20320892]
[84.25100708 103.49906158]
[69.77413940 99.57216644]
[55.29727936 95.64527130]
[40.82041931 91.71837616]
[26.34355736 87.79148865]
[14.80409622 93.51252747]
[2.83999586 89.96358490]
[-3.30500460 79.56454468]
[-17.73238945 75.45959473]
[-32.15977478 71.35465240]
[-46.58715820 67.24971008]
[-61.01454163 63.14476395]
[-77.90368652 64.62570190]
[-84.00212860 48.80656052]
[-70.48942566 38.56726837]
[-56.90959930 48.71738052]
[-42.48221207 52.82232285]
[-28.05482864 56.92726898]
[-13.62744427 61.03221512]
[0.79994023 65.13716125]
[17.57879639 59.95499039]
[30.27045059 73.31462860]
[44.74731064 77.24151611]
[59.22417450 81.16841125]
[73.70103455 85.09530640]
[88.17789459 89.02219391]
[92.43545532 82.84780121]
[85.99861908 69.29910278]
[100.95057678 70.49900818]
[105.20813751 64.32460785]
[96.39135742 52.18935394]
[87.57457733 40.05410004]
[73.20343781 33.43739700]
[71.98213959 18.59294510]
[63.16535950 6.45769024]
[54.34858322 -5.67756462]
[45.53180313 -17.81282043]
[29.92073441 -18.72307777]
[18.58260727 -29.49251938]
[16.87093544 -45.03614044]
[25.59392166 -58.01472092]
[40.63283539 -62.30017090]
[54.88676453 -55.86903381]
[61.62543488 -41.75789261]
[57.66705704 -26.62959862]
[66.48383331 -14.49434376]
[75.30061340 -2.35908842]
[84.11739349 9.77616692]
[97.85790253 15.52487469]
[99.70983124 31.23731995]
[108.52661133 43.37257385]
[117.34339142 55.50782776]
[124.83428955 55.13837814]
[122.91478729 40.26170349]
[120.99528503 25.38502502]
[112.33249664 13.13937283]
[115.88632965 -1.43355584]
[129.21392822 -8.31650639]
[143.15406799 -2.77822423]
[148.12446594 11.37434483]
[140.70870972 24.41276360]
[140.26239014 39.40612411]
[139.81607056 54.39948273]
[147.30697632 54.03003311]
[154.88685608 41.08609772]
[151.11146545 25.97370720]
[158.98294067 12.95469570]
[173.41355896 9.44858265]
[180.99343872 -3.49535251]
[188.57331848 -16.43928719]
[196.15318298 -29.38322258]
[196.45002747 -45.20164490]
[209.55818176 -52.27452469]
[217.13804626 -65.21846008]
[217.43489075 -81.03688049]
[230.54304504 -88.10975647]
[238.12290955 -101.05369568]
[245.70278931 -113.99762726]
[253.28266907 -126.94156647]
[260.86254883 -139.88549805]
[261.15939331 -155.70391846]
[274.26754761 -162.77679443]
[281.84741211 -175.72073364]
[289.42727661 -188.66467285]
[283.99948120 -203.33003235]
[289.31692505 -218.03578186]
[302.86886597 -225.83830261]
[318.25646973 -223.05348206]
[328.21420288 -210.99623108]
[328.04034424 -195.35961914]
[317.81695557 -183.52676392]
[302.37121582 -181.08479309]
[294.79135132 -168.14085388]
[287.21145630 -155.19692993]
[287.45678711 -140.30433655]
[273.80648804 -132.30561829]
[266.22659302 -119.36168671]
[258.64672852 -106.41775513]
[251.06684875 -93.47381592]
[243.48696899 -80.52988434]
[243.73229980 -65.63729858]
[230.08198547 -57.63858032]
[222.50210571 -44.69464493]
[222.74743652 -29.80206108]
[209.09712219 -21.80334473]
[201.51724243 -8.85940933]
[193.93736267 4.08452559]
[186.35749817 17.02845955]
[190.36053467 31.32920074]
[182.85786438 44.56417084]
[167.83078003 48.66597366]
[160.25090027 61.60990906]
[109.30610657 110.54450226]
[112.96480560 125.09146118]
[116.62351227 139.63841248]
[120.28221893 154.18536377]
[133.24537659 157.97962952]
[142.13989258 169.97087097]
[155.56733704 176.65693665]
[168.99479675 183.34301758]
[182.42224121 190.02909851]
[195.84968567 196.71516418]
[209.27714539 203.40124512]
[222.70458984 210.08732605]
[238.50680542 209.31243896]
[246.45098877 221.91162109]
[259.87844849 228.59768677]
[273.30587769 235.28376770]
[285.74230957 231.93347168]
[296.77969360 237.75680542]
[300.76907349 249.15792847]
[314.11315918 256.00891113]
[327.45721436 262.85992432]
[340.80126953 269.71090698]
[354.14532471 276.56188965]
[367.48937988 283.41287231]
[380.83343506 290.26388550]
[393.31021118 287.06704712]
[404.27499390 293.02590942]
[408.12362671 304.47531128]
[421.38229370 311.49017334]
[434.64093018 318.50503540]
[447.89956665 325.51989746]
[461.28558350 332.28857422]
[474.79437256 338.80871582]
[488.30319214 345.32885742]
[504.60867310 343.57879639]
[514.05718994 356.98245239]
[506.92883301 371.75131226]
[490.55673218 372.69241333]
[481.78305054 358.83767700]
[468.27423096 352.31750488]
[454.76544189 345.79736328]
[451.35681152 346.58999634]
[447.39682007 345.78833008]
[443.63119507 343.15179443]
[440.88470459 338.77856445]
[427.62606812 331.76370239]
[414.36743164 324.74884033]
[401.10876465 317.73397827]
[383.61914062 319.31436157]
[373.98245239 303.60794067]
[360.63839722 296.75692749]
[347.29434204 289.90594482]
[333.95028687 283.05496216]
[320.60623169 276.20397949]
[307.26214600 269.35299683]
[293.91809082 262.50198364]
[276.44924927 264.29772949]
[266.61981201 248.71121216]
[253.19235229 242.02514648]
[239.76490784 235.33906555]
[224.92311096 236.59217834]
[216.01850891 223.51477051]
[202.59106445 216.82868958]
[189.16362000 210.14262390]
[175.73617554 203.45654297]
[162.30871582 196.77046204]
[148.88127136 190.08439636]
[135.45382690 183.39831543]
[144.03204346 195.70336914]
[152.61026001 208.00840759]
[165.69197083 215.34794617]
[175.26091003 226.89938354]
[180.03782654 241.11840820]
[179.38412476 256.10415649]
[173.38719177 269.85324097]
[162.84873962 280.52752686]
[149.17761230 286.70007324]
[134.20146179 287.54565430]
[119.92240143 282.95126343]
[108.24936676 273.53103638]
[100.74287415 260.54443359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 47]
[5 46]
[6 45]
[7 44]
[8 43]
[9 42]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[58 177]
[59 176]
[60 175]
[61 174]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[91 113]
[92 112]
[93 111]
[95 109]
[96 108]
[97 107]
[98 106]
[125 173]
[126 172]
[129 169]
[130 168]
[131 167]
[132 166]
[134 164]
[135 163]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
[143 155]
[144 154]
[145 153]
[179 241]
[180 240]
[181 239]
[182 238]
[183 237]
[184 236]
[185 235]
[187 233]
[188 232]
[189 231]
[192 229]
[193 228]
[194 227]
[195 226]
[196 225]
[197 224]
[198 223]
[201 221]
[202 220]
[203 219]
[204 218]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
