%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUAGGACCCAGCAGGCGGCGGCAGGCGGCAGUUGUGUAGAUCGCUGAGAGACUACGAGGGUCCGGUUCAGUUUUAAUUCUGUCUCUAAUCUCUGCAACAGCCGCGCUUCCCGGGUCCCGCGGCUCCCGCGCGCGAUCUGCCGCGGCCGGCUGCUGGGCAAAAAUCAGAGCCGCCUCCGCCCCAUUACCCAUCAUGGAAACCCUCCAGGAAAAAGUGGCCCCGGACGCGCGAGCCUGAGGAUUCUGCACAAA\
AGAGGUGCCCAAA\
) } def
/len { sequence length } bind def

/coor [
[448.52374268 397.52883911]
[444.54284668 383.06674194]
[440.56195068 368.60461426]
[436.58102417 354.14251709]
[432.60012817 339.68041992]
[428.61923218 325.21832275]
[424.63833618 310.75622559]
[420.65744019 296.29412842]
[416.67651367 281.83200073]
[389.76046753 270.32879639]
[382.30114746 241.64102173]
[368.71682739 235.27969360]
[355.13250732 228.91838074]
[341.54818726 222.55706787]
[327.96386719 216.19573975]
[314.37954712 209.83442688]
[300.79522705 203.47311401]
[287.21093750 197.11180115]
[272.40353394 198.72137451]
[263.18710327 185.86183167]
[249.60279846 179.50051880]
[236.01847839 173.13920593]
[222.43415833 166.77787781]
[207.62678528 168.38746643]
[198.41035461 155.52792358]
[184.82603455 149.16659546]
[177.46177673 149.17594910]
[171.12088013 142.65084839]
[157.61178589 136.13131714]
[144.10269165 129.61180115]
[130.59358215 123.09226990]
[117.08448792 116.57273865]
[100.46437073 126.18799591]
[80.20285034 120.61592102]
[69.03571320 100.70561981]
[54.06665039 99.74278259]
[39.09758377 98.77994537]
[24.12851715 97.81710815]
[9.15945053 96.85427094]
[-5.81498241 95.97885895]
[-20.79427147 95.19090271]
[-35.77356339 94.40294647]
[-50.75285339 93.61499023]
[-65.73213959 92.82703400]
[-71.68569183 104.24345398]
[-81.47124481 112.53945160]
[-93.61942291 116.51542664]
[-106.32333374 115.61703491]
[-117.70738220 110.01219177]
[-126.10414886 100.56105042]
[-130.29859924 88.68420410]
[-145.25540161 87.54661560]
[-160.21220398 86.40903473]
[-175.16900635 85.27144623]
[-190.12580872 84.13385773]
[-205.08261108 82.99626923]
[-208.86050415 84.97203827]
[-212.68745422 85.60112762]
[-216.13993835 85.03018188]
[-218.88391113 83.52672577]
[-220.70596313 81.44022369]
[-235.59332275 79.60542297]
[-250.48069763 77.77062225]
[-265.36804199 75.93582153]
[-280.25540161 74.10102081]
[-292.63754272 83.55195618]
[-307.70932007 81.47913361]
[-316.64303589 69.61640167]
[-331.53039551 67.78160095]
[-343.83297729 77.70238495]
[-359.53814697 75.93515015]
[-369.32830811 63.52836227]
[-367.39514160 47.84275055]
[-354.88552856 38.18431473]
[-339.22122192 40.28322601]
[-329.69558716 52.89424133]
[-314.80822754 54.72904205]
[-303.26153564 45.39043808]
[-288.13751221 47.03911209]
[-278.42062378 59.21365738]
[-263.53326416 61.04846191]
[-248.64588928 62.88326263]
[-233.75852966 64.71806335]
[-218.87117004 66.55286407]
[-203.94502258 68.03946686]
[-188.98822021 69.17705536]
[-174.03141785 70.31464386]
[-159.07461548 71.45223236]
[-144.11781311 72.58982086]
[-129.16101074 73.72740936]
[-119.94228363 59.15205383]
[-104.52219391 51.23148346]
[-87.12662506 52.23824692]
[-72.57480621 61.98425293]
[-64.94419098 77.84774780]
[-49.96489716 78.63570404]
[-34.98560715 79.42365265]
[-20.00631714 80.21160889]
[-5.02702761 80.99956512]
[1.79353452 78.22245789]
[10.12228775 81.88520050]
[25.09135437 82.84803772]
[40.06042099 83.81087494]
[55.02948761 84.77371216]
[69.99855042 85.73654938]
[79.33132172 73.99349213]
[75.01373291 59.62830734]
[70.69615173 45.26312637]
[66.37856293 30.89794350]
[62.06098175 16.53276253]
[53.29419708 13.23448658]
[47.10429382 6.38841963]
[44.77347565 -2.40003848]
[46.69827271 -11.14582062]
[52.32829666 -17.93241692]
[48.51656342 -32.44002533]
[44.70482635 -46.94763184]
[40.89309311 -61.45524216]
[27.63450050 -74.25704956]
[32.95830917 -90.99461365]
[28.97740746 -105.45671844]
[18.94428635 -119.12320709]
[29.29923439 -132.54748535]
[45.06542587 -126.31342316]
[43.43951035 -109.43762207]
[47.42041016 -94.97551727]
[57.76317215 -88.74476624]
[61.21202087 -76.75609589]
[55.40069962 -65.26697540]
[59.21243668 -50.75936890]
[63.02416992 -36.25175858]
[66.83590698 -21.74415207]
[82.55516815 -8.34201336]
[76.42616272 12.21517658]
[80.74375153 26.58035851]
[85.06133270 40.94554138]
[89.37892151 55.31072235]
[93.69650269 69.67590332]
[111.91477966 74.01959991]
[122.91165161 87.30815887]
[123.60401917 103.06364441]
[137.11311340 109.58316803]
[150.62220764 116.10269928]
[164.13131714 122.62222290]
[177.64041138 129.14175415]
[191.18734741 135.58229065]
[204.77166748 141.94360352]
[220.55068970 140.78901672]
[228.79548645 153.19357300]
[242.37979126 159.55488586]
[255.96411133 165.91619873]
[269.54843140 172.27751160]
[285.32745361 171.12294006]
[293.57223511 183.52748108]
[307.15655518 189.88879395]
[320.74087524 196.25010681]
[334.32519531 202.61143494]
[347.90951538 208.97274780]
[361.49383545 215.33406067]
[375.07812500 221.69538879]
[388.66244507 228.05670166]
[393.11645508 223.43807983]
[398.35180664 219.75160217]
[404.17718506 217.12593079]
[410.38070679 215.65101624]
[416.73788452 215.37507629]
[423.01959229 216.30300903]
[429.00033569 218.39645386]
[434.46646118 221.57528687]
[439.22369385 225.72068787]
[443.10400391 230.67962646]
[445.97161865 236.27044678]
[447.72781372 242.28953552]
[462.72140503 242.72741699]
[471.35556030 239.85768127]
[477.88726807 243.25898743]
[492.87475586 243.87196350]
[506.97958374 236.70506287]
[519.38000488 244.95599365]
[534.36749268 245.56895447]
[549.35498047 246.18191528]
[564.34246826 246.79487610]
[577.00695801 234.70298767]
[594.15966797 235.51341248]
[605.18438721 248.23445129]
[620.17803955 248.67233276]
[635.17163086 249.11022949]
[650.16522217 249.54812622]
[665.15881348 249.98602295]
[671.40393066 239.20335388]
[681.57366943 232.12858582]
[693.71307373 230.04731750]
[705.51977539 233.29229736]
[714.78063965 241.19192505]
[719.78686523 252.20816040]
[734.76611328 252.99610901]
[748.95367432 245.99441528]
[761.25695801 254.38960266]
[776.23626709 255.17756653]
[791.21551514 255.96551514]
[806.19482422 256.75347900]
[819.03314209 247.13282776]
[834.52252197 251.31114197]
[840.78088379 266.08316040]
[833.00726318 280.11709595]
[817.16497803 282.64724731]
[805.40686035 271.73275757]
[790.42755127 270.94479370]
[775.44830322 270.15686035]
[760.46899414 269.36889648]
[747.35284424 276.42694092]
[733.97821045 267.97540283]
[718.99890137 267.18743896]
[708.50244141 281.42352295]
[691.40307617 286.52832031]
[674.52429199 280.26681519]
[664.72094727 264.97961426]
[649.72735596 264.54171753]
[634.73370361 264.10385132]
[619.74011230 263.66595459]
[604.74652100 263.22805786]
[596.71887207 273.28100586]
[584.18267822 276.93984985]
[571.63983154 272.65780640]
[563.72949219 261.78234863]
[548.74200439 261.16940308]
[533.75451660 260.55642700]
[518.76708984 259.94345093]
[505.73425293 267.15420532]
[492.26177979 258.85943604]
[477.27432251 258.24645996]
[462.28350830 257.72103882]
[447.28991699 257.28314209]
[444.92453003 263.56301880]
[441.33798218 269.23480225]
[436.67849731 274.06399536]
[431.13864136 277.85110474]
[435.11953735 292.31320190]
[439.10043335 306.77532959]
[443.08132935 321.23742676]
[447.06222534 335.69952393]
[451.04315186 350.16162109]
[455.02404785 364.62371826]
[459.00494385 379.08581543]
[462.98583984 393.54794312]
[481.19705200 399.55599976]
[491.98706055 415.22628784]
[491.11703491 434.08111572]
[479.12310791 448.45941162]
[483.60818481 462.77319336]
[488.09323120 477.08697510]
[492.57827759 491.40075684]
[507.08340454 497.24334717]
[514.39373779 511.06695557]
[511.05764771 526.34454346]
[498.65026855 535.86248779]
[483.03002930 535.12664795]
[471.57226562 524.48455811]
[469.68707275 508.96102905]
[478.26449585 495.88580322]
[473.77944946 481.57202148]
[469.29440308 467.25827026]
[464.80932617 452.94448853]
[453.81231689 451.45965576]
[444.11108398 445.96743774]
[437.11526489 437.22213745]
[433.85748291 426.45373535]
[434.84127808 415.19509888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 245]
[2 244]
[3 243]
[4 242]
[5 241]
[6 240]
[7 239]
[8 238]
[9 237]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[22 150]
[23 149]
[25 147]
[26 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[68 77]
[69 76]
[106 138]
[107 137]
[108 136]
[109 135]
[110 134]
[115 132]
[116 131]
[117 130]
[118 129]
[120 126]
[121 125]
[173 233]
[174 232]
[176 231]
[177 230]
[179 228]
[180 227]
[181 226]
[182 225]
[185 221]
[186 220]
[187 219]
[188 218]
[189 217]
[195 213]
[196 212]
[198 210]
[199 209]
[200 208]
[201 207]
[249 263]
[250 262]
[251 261]
[252 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
