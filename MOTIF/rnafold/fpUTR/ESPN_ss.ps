%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCGCCAGGCAGCGCGGAGCGGAGGCCAGGCCCACAGCCGCUCCGCCUCCCGGCCCGCAGAUCCCCGACGGCCGCACCGCGGGCUCCUCUGGCCCGCAAGAACACGUGCAUGGCGUCCUGGGGAAGGCGCUGAGUGCGGAGUCGCGGCGCCGCACGCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[87.26931763 124.86116791]
[77.50260162 116.55339050]
[63.47735596 121.87245941]
[49.45211411 127.19153595]
[35.42686844 132.51060486]
[32.07905960 136.62048340]
[27.90012932 138.79078674]
[23.77903366 139.03230286]
[20.46875763 137.71125793]
[6.16883802 142.24031067]
[-8.13108158 146.76936340]
[-18.95099640 158.31233215]
[-33.42043686 154.77897644]
[-47.72035599 159.30802917]
[-54.99198914 164.90437317]
[-62.32834625 163.78569031]
[-76.70998383 168.04814148]
[-84.08438873 173.50836182]
[-91.39868164 172.25349426]
[-105.85706329 176.24787903]
[-120.31544495 180.24227905]
[-134.77383423 184.23666382]
[-149.23220825 188.23106384]
[-163.69059753 192.22544861]
[-178.14897156 196.21984863]
[-192.60736084 200.21423340]
[-207.06573486 204.20863342]
[-221.49032593 221.33085632]
[-242.26132202 215.29722595]
[-256.38302612 220.35467529]
[-270.50469971 225.41212463]
[-283.37780762 236.44479370]
[-297.54293823 227.12895203]
[-292.51245117 210.93849182]
[-275.56216431 211.29042053]
[-261.44046021 206.23297119]
[-247.31877136 201.17552185]
[-245.52603149 193.41345215]
[-240.73641968 186.93008423]
[-233.68080139 182.84092712]
[-225.48706055 181.88627625]
[-217.49987793 184.29824829]
[-211.06013489 189.75024414]
[-196.60174561 185.75585938]
[-182.14337158 181.76145935]
[-167.68498230 177.76707458]
[-153.22660828 173.77267456]
[-138.76821899 169.77828979]
[-124.30983734 165.78388977]
[-109.85145569 161.78950500]
[-95.39307404 157.79510498]
[-80.97244263 153.66650391]
[-66.59080505 149.40405273]
[-52.24940491 145.00810242]
[-37.94948578 140.47904968]
[-28.15239716 129.26004028]
[-12.66013241 132.46945190]
[1.63978708 127.94039154]
[15.93970680 123.41134644]
[30.10779572 118.48536682]
[44.13303757 113.16629028]
[58.15828323 107.84722137]
[72.18352509 102.52814484]
[74.08457184 89.58182526]
[81.67335510 78.92200470]
[93.28433990 72.88823700]
[106.36923218 72.80477142]
[113.58576202 59.65480042]
[120.80229187 46.50482941]
[128.01881409 33.35485840]
[135.23535156 20.20488930]
[142.20619202 6.92304850]
[148.92895508 -6.48607254]
[155.65170288 -19.89519310]
[162.37446594 -33.30431366]
[163.43209839 -42.41898346]
[169.34884644 -46.89846420]
[176.31968689 -60.18030167]
[183.04244995 -73.58942413]
[189.51480103 -87.12119293]
[195.98713684 -100.65296173]
[202.45948792 -114.18473053]
[197.93365479 -138.18980408]
[217.53251648 -151.56695557]
[222.19429016 -165.82417297]
[226.85604858 -180.08137512]
[231.51782227 -194.33857727]
[236.17958069 -208.59579468]
[240.84135437 -222.85299683]
[245.50311279 -237.11019897]
[239.55787659 -252.01100159]
[247.62585449 -265.87777710]
[263.51800537 -268.07312012]
[275.04321289 -256.91293335]
[273.36032104 -240.95840454]
[259.76031494 -232.44844055]
[255.09855652 -218.19122314]
[250.43679810 -203.93402100]
[245.77502441 -189.67681885]
[241.11326599 -175.41961670]
[236.45149231 -161.16239929]
[231.78973389 -146.90519714]
[236.07261658 -142.54104614]
[238.96769714 -137.10926819]
[240.21911621 -131.04133606]
[239.70260620 -124.82662964]
[237.43742371 -118.97301483]
[233.58666992 -113.96526337]
[228.44570923 -110.22499847]
[222.41960144 -108.07519531]
[215.99125671 -107.71238708]
[209.51890564 -94.18061829]
[203.04656982 -80.64884949]
[196.57421875 -67.11708069]
[197.30619812 -62.36038589]
[195.02938843 -57.09778595]
[189.60153198 -53.20945740]
[182.63069153 -39.92761612]
[175.78358459 -26.58155823]
[169.06083679 -13.17243671]
[162.33807373 0.23668459]
[155.61531067 13.64580631]
[156.25875854 18.41528511]
[153.88450623 23.63465309]
[148.38531494 27.42141914]
[141.16879272 40.57138824]
[133.95225525 53.72135925]
[126.73572540 66.87133026]
[119.51920319 80.02130127]
[127.75756836 96.89113617]
[123.45537567 115.16551971]
[133.40222168 126.39318085]
[148.34487915 131.59197998]
[150.99316406 146.24926758]
[160.94000244 157.47692871]
[170.88684082 168.70458984]
[180.83367920 179.93225098]
[195.77633667 185.13104248]
[198.42463684 199.78831482]
[208.37147522 211.01597595]
[218.31831360 222.24363708]
[228.26515198 233.47129822]
[238.21199036 244.69895935]
[248.15882874 255.92662048]
[263.10150146 261.12542725]
[265.74978638 275.78271484]
[275.69662476 287.01037598]
[291.41467285 291.68737793]
[294.95959473 307.69879150]
[282.68466187 318.57345581]
[267.21728516 313.12442017]
[264.46896362 296.95721436]
[254.52212524 285.72955322]
[240.29092407 281.33383179]
[236.93116760 265.87347412]
[226.98432922 254.64581299]
[217.03749084 243.41815186]
[207.09065247 232.19047546]
[197.14381409 220.96281433]
[187.19697571 209.73515320]
[172.96577454 205.33944702]
[169.60601807 189.87908936]
[159.65917969 178.65142822]
[149.71234131 167.42376709]
[139.76550293 156.19610596]
[125.53430939 151.80038452]
[122.17455292 136.34002686]
[112.22771454 125.11235809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[9 59]
[10 58]
[11 57]
[13 55]
[14 54]
[16 53]
[17 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[29 37]
[30 36]
[31 35]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 122]
[73 121]
[74 120]
[75 119]
[77 118]
[78 117]
[79 114]
[80 113]
[81 112]
[82 111]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[131 168]
[132 167]
[134 165]
[135 164]
[136 163]
[137 162]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
