%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MANBA)
} def

/sequence { (\
AAAGCCUCGGCUACUUCCGAGGGGGUGAGUGGCUUCACCGCCGGUCCCUUGCAGCGCUGCCUUUCGAUCUCUCCACAUCUCGGUGGCGCGGGAUCUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.006729958 ubox
1 64 0.019980181 ubox
2 15 0.007661693 ubox
2 16 0.004074583 ubox
2 35 0.003332032 ubox
2 63 0.025365327 ubox
2 64 0.003481576 ubox
3 12 0.126611205 ubox
3 34 0.003696880 ubox
3 58 0.005872050 ubox
3 62 0.026465696 ubox
3 63 0.003656708 ubox
3 96 0.020618753 ubox
4 11 0.131279676 ubox
4 33 0.003742803 ubox
4 41 0.014359407 ubox
4 45 0.004632082 ubox
4 52 0.003197688 ubox
4 57 0.006046177 ubox
4 60 0.006981243 ubox
4 61 0.026388784 ubox
4 95 0.012143151 ubox
5 10 0.131292679 ubox
5 22 0.942695400 ubox
5 23 0.063586335 ubox
5 32 0.003740956 ubox
5 40 0.011703796 ubox
5 44 0.005461809 ubox
5 56 0.005693370 ubox
5 59 0.007122104 ubox
6 21 0.978032951 ubox
6 22 0.047453205 ubox
6 31 0.003689272 ubox
6 43 0.005507290 ubox
6 100 0.005774469 ubox
7 20 0.989270164 ubox
7 21 0.020596585 ubox
7 99 0.003993617 ubox
8 19 0.990686377 ubox
8 59 0.023412837 ubox
9 17 0.007784946 ubox
9 18 0.990648202 ubox
9 34 0.008209578 ubox
9 58 0.024199688 ubox
9 61 0.019977053 ubox
10 14 0.003858932 ubox
10 15 0.003233617 ubox
10 16 0.009125479 ubox
10 17 0.980703956 ubox
10 30 0.003321713 ubox
10 33 0.008697574 ubox
10 55 0.005703927 ubox
10 57 0.024255622 ubox
10 60 0.020023875 ubox
11 29 0.003357723 ubox
11 32 0.008710262 ubox
11 54 0.006008811 ubox
11 56 0.024229695 ubox
11 59 0.020009720 ubox
12 31 0.008708819 ubox
12 53 0.005762801 ubox
13 26 0.004483859 ubox
13 30 0.009309901 ubox
14 21 0.005258295 ubox
14 25 0.004619485 ubox
14 29 0.009373087 ubox
14 54 0.020217192 ubox
14 100 0.015850760 ubox
15 20 0.005403307 ubox
15 24 0.004584439 ubox
15 28 0.009304290 ubox
15 53 0.019361536 ubox
15 54 0.016099740 ubox
15 93 0.010555203 ubox
15 99 0.015946506 ubox
16 23 0.004800197 ubox
16 27 0.008261376 ubox
16 53 0.017594990 ubox
16 92 0.011394063 ubox
16 93 0.008299879 ubox
16 98 0.013986591 ubox
17 22 0.004915906 ubox
17 23 0.003371533 ubox
17 24 0.005158205 ubox
17 25 0.007958845 ubox
17 44 0.004426205 ubox
17 91 0.011767143 ubox
17 92 0.008876386 ubox
18 22 0.003355245 ubox
18 23 0.005345952 ubox
18 24 0.007954060 ubox
18 43 0.004784258 ubox
18 51 0.037718287 ubox
18 90 0.011567231 ubox
18 91 0.008737177 ubox
19 50 0.040940395 ubox
19 97 0.024470524 ubox
20 49 0.041325128 ubox
20 96 0.023384307 ubox
21 42 0.196021329 ubox
21 48 0.041403377 ubox
21 95 0.004888918 ubox
22 41 0.214714219 ubox
22 42 0.232449474 ubox
22 47 0.041415522 ubox
22 50 0.009338077 ubox
22 97 0.006427756 ubox
23 39 0.021927736 ubox
23 41 0.266702752 ubox
23 42 0.075565893 ubox
23 46 0.041432157 ubox
23 48 0.010284891 ubox
23 49 0.067022970 ubox
23 50 0.007608778 ubox
23 95 0.004123469 ubox
23 96 0.009666238 ubox
23 97 0.046444591 ubox
24 38 0.016273254 ubox
24 39 0.470595431 ubox
24 41 0.054984864 ubox
24 42 0.873531710 ubox
24 45 0.040480690 ubox
24 47 0.010246365 ubox
24 48 0.071163089 ubox
24 49 0.008065412 ubox
24 96 0.005204582 ubox
24 97 0.003511069 ubox
25 38 0.472335644 ubox
25 41 0.875220578 ubox
25 46 0.009513908 ubox
25 47 0.071188817 ubox
25 48 0.008204083 ubox
25 95 0.003350085 ubox
26 37 0.472501635 ubox
26 40 0.875760327 ubox
26 43 0.040646490 ubox
26 44 0.003180176 ubox
26 98 0.015779529 ubox
27 35 0.010352150 ubox
27 36 0.472539477 ubox
27 39 0.875432078 ubox
27 42 0.043942368 ubox
27 46 0.071948173 ubox
27 97 0.017522828 ubox
28 34 0.052126435 ubox
28 35 0.461314758 ubox
28 45 0.072103564 ubox
28 96 0.017082088 ubox
29 33 0.071437896 ubox
29 34 0.349588457 ubox
29 38 0.875878336 ubox
29 41 0.047657730 ubox
29 95 0.011973792 ubox
30 37 0.875666705 ubox
30 40 0.047713340 ubox
30 43 0.072750123 ubox
31 36 0.873012226 ubox
31 39 0.047958529 ubox
31 42 0.079212444 ubox
32 38 0.047849227 ubox
32 41 0.079227527 ubox
33 40 0.079144878 ubox
43 95 0.987402273 ubox
43 96 0.050701783 ubox
43 97 0.034354024 ubox
44 94 0.993324319 ubox
44 95 0.056905041 ubox
44 96 0.016438503 ubox
45 93 0.996088245 ubox
46 92 0.996285394 ubox
47 90 0.003481712 ubox
47 91 0.996148919 ubox
47 92 0.019691553 ubox
48 90 0.995588376 ubox
48 91 0.025450355 ubox
49 53 0.014707190 ubox
49 90 0.029726272 ubox
49 93 0.004279849 ubox
50 88 0.014227802 ubox
50 90 0.008232803 ubox
50 92 0.006383345 ubox
50 98 0.004144211 ubox
51 57 0.010919755 ubox
51 60 0.058044732 ubox
51 87 0.014185641 ubox
51 89 0.033923336 ubox
51 97 0.004275582 ubox
52 56 0.010863896 ubox
52 59 0.058258620 ubox
52 86 0.014017863 ubox
52 88 0.031579720 ubox
53 58 0.052486373 ubox
54 60 0.009871494 ubox
54 87 0.004601259 ubox
54 89 0.996325776 ubox
55 59 0.009869912 ubox
55 85 0.017912808 ubox
55 86 0.003927576 ubox
55 88 0.996727775 ubox
55 90 0.005713344 ubox
56 84 0.018385616 ubox
56 87 0.997143241 ubox
56 89 0.010002228 ubox
57 83 0.018425881 ubox
57 86 0.997145901 ubox
57 88 0.009781086 ubox
58 82 0.018367021 ubox
58 85 0.993261252 ubox
58 88 0.003172378 ubox
59 81 0.018065327 ubox
59 84 0.995042253 ubox
59 87 0.011312251 ubox
60 83 0.996918520 ubox
60 86 0.011393089 ubox
61 82 0.993814351 ubox
61 83 0.016077622 ubox
61 85 0.011474985 ubox
61 100 0.041311829 ubox
62 82 0.020555946 ubox
62 99 0.042271452 ubox
62 100 0.003797256 ubox
63 82 0.010489768 ubox
63 98 0.040787333 ubox
63 99 0.006140724 ubox
64 82 0.003835831 ubox
64 83 0.016641210 ubox
64 98 0.006247475 ubox
65 82 0.059335935 ubox
66 73 0.088935674 ubox
66 79 0.859206929 ubox
66 81 0.131246052 ubox
66 95 0.071709361 ubox
67 72 0.081476553 ubox
67 78 0.858794797 ubox
67 80 0.124896752 ubox
67 94 0.071798056 ubox
68 77 0.845427611 ubox
68 93 0.071823102 ubox
69 92 0.071839847 ubox
70 91 0.071631927 ubox
71 90 0.071442801 ubox
71 91 0.004615588 ubox
72 90 0.004576624 ubox
73 86 0.071835254 ubox
74 85 0.071931097 ubox
75 84 0.071916267 ubox
76 83 0.071827073 ubox
90 97 0.008740877 ubox
91 95 0.003182999 ubox
91 96 0.006864138 ubox
91 97 0.005105648 ubox
92 96 0.003332240 ubox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
43 95 0.9500000 lbox
44 94 0.9500000 lbox
45 93 0.9500000 lbox
46 92 0.9500000 lbox
47 91 0.9500000 lbox
48 90 0.9500000 lbox
54 89 0.9500000 lbox
55 88 0.9500000 lbox
56 87 0.9500000 lbox
57 86 0.9500000 lbox
58 85 0.9500000 lbox
59 84 0.9500000 lbox
60 83 0.9500000 lbox
61 82 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
showpage
end
%%EOF
