%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGAUGUGGGUUACAAAGCUGCCAUCUAGAGGCUAGAGGCUCCUUUCUGCAGUGUAUAUAAUGCAAGUCUGCAGCCAGCAGAGCUCACAGUUGUUGCAAAGUGCUCAGCACUAAGGGAGCCAGCGCACAGCACAGCCAGGAAGGCGAGCGAGCCCAGCCAGCCCAGCCAGCCCAGCCAGCCCGGAGGUCAUUUGAUUGCCCGCCUCAGAACG\
) } def
/len { sequence length } bind def

/coor [
[84.41647339 555.39764404]
[90.06903076 541.04315186]
[102.59825134 532.04193115]
[101.72202301 517.06750488]
[100.84580231 502.09313965]
[97.93820190 498.30783081]
[97.37564850 492.65649414]
[100.16925812 486.66961670]
[99.73095703 471.67602539]
[99.29265594 456.68243408]
[98.85436249 441.68884277]
[98.41606140 426.69525146]
[97.97776031 411.70166016]
[85.26103973 400.69393921]
[84.42525482 383.55731201]
[96.47563171 370.87432861]
[95.81829834 355.88873291]
[95.16096497 340.90313721]
[94.50363159 325.91754150]
[83.87885284 318.63070679]
[79.32209015 306.37216187]
[82.70655060 293.53829956]
[93.01354980 284.87045288]
[92.57524872 269.87686157]
[92.13694763 254.88325500]
[88.80043793 248.29115295]
[91.80339813 239.66772461]
[91.58422852 224.66932678]
[91.36505890 209.67092896]
[83.42676544 203.24279785]
[80.26925659 193.29791260]
[83.16458130 183.04525757]
[91.38957214 175.93362427]
[91.60874939 160.93522644]
[91.82791901 145.93682861]
[92.04709625 130.93843079]
[78.81905365 123.91240692]
[70.24771881 111.62915039]
[68.21751404 96.78919983]
[73.17479706 82.65514374]
[62.84285736 71.78081512]
[52.51091385 60.90649033]
[42.17897415 50.03216553]
[31.84703255 39.15783691]
[21.51509285 28.28351021]
[11.18315029 17.40918159]
[0.85120952 6.53485537]
[-9.48073196 -4.33947182]
[-83.01731110 24.64878273]
[-97.52957153 20.85478210]
[-112.04182434 17.06078148]
[-126.55407715 13.26678085]
[-141.06632996 9.47278023]
[-155.57859802 5.67877913]
[-170.17051697 2.20374537]
[-184.83508301 -0.95065272]
[-199.49966431 -4.10505056]
[-214.16423035 -7.25944853]
[-228.82881165 -10.41384697]
[-245.58526611 -7.83357477]
[-252.70333862 -23.22088432]
[-239.88784790 -34.32041550]
[-225.67440796 -25.07842255]
[-211.00984192 -21.92402458]
[-196.34526062 -18.76962662]
[-181.68069458 -15.61522770]
[-167.01611328 -12.46082973]
[-163.87388611 -14.05414391]
[-159.80445862 -14.20642853]
[-155.49269104 -12.49874115]
[-151.78459167 -8.83347607]
[-137.27233887 -5.03947544]
[-122.76007843 -1.24547470]
[-108.24782562 2.54852605]
[-93.73556519 6.34252691]
[-79.22331238 10.13652706]
[-74.68299866 4.16697311]
[-80.48229218 -9.66661835]
[-65.60237885 -7.77213526]
[-61.06206894 -13.74168968]
[-68.59368134 -26.71376801]
[-76.12529755 -39.68584442]
[-83.65691376 -52.65792084]
[-91.28309631 -65.57463074]
[-99.00344849 -78.43527222]
[-106.72380066 -91.29591370]
[-114.44415283 -104.15656281]
[-127.78038788 -114.62466431]
[-121.41321564 -130.33757019]
[-104.55176544 -128.56900024]
[-101.58351135 -111.87691498]
[-93.86315918 -99.01626587]
[-86.14280701 -86.15562439]
[-78.42245483 -73.29498291]
[-72.28656006 -69.17929077]
[-70.68483734 -60.18953705]
[-63.15322113 -47.21745682]
[-55.62160492 -34.24538040]
[-48.08999252 -21.27330399]
[-40.83386612 -23.17030334]
[-26.32160950 -26.96430397]
[-19.06548119 -28.86130524]
[-18.84630966 -43.85970306]
[-18.62713623 -58.85810089]
[-18.40796280 -73.85649872]
[-18.18878937 -88.85489655]
[-24.00304985 -104.78068542]
[-10.30919552 -114.77642059]
[3.08673739 -104.38481903]
[-3.19039083 -88.63572693]
[-3.40956402 -73.63732910]
[-3.62873697 -58.63892746]
[-3.84791017 -43.64052963]
[-4.06708336 -28.64213181]
[1.39359546 -14.67141342]
[11.72553635 -3.79708600]
[22.05747795 7.07724142]
[32.38941956 17.95156860]
[42.72135925 28.82589531]
[53.05330276 39.70022202]
[63.38524246 50.57455063]
[73.71718597 61.44887543]
[84.04912567 72.32320404]
[96.06879425 62.75712204]
[113.20603180 59.12507248]
[122.02281189 46.98981857]
[120.94338989 30.98311996]
[132.88166809 20.26597214]
[148.67959595 23.05965424]
[156.21838379 37.22109222]
[149.71490479 51.88684082]
[134.15806580 55.80659866]
[125.34128571 67.94184875]
[129.10708618 74.42788696]
[144.10705566 74.39105225]
[136.63870239 87.39997101]
[140.40451050 93.88600922]
[155.31452942 92.24543762]
[165.18931580 80.19860077]
[180.33355713 78.74723053]
[191.75752258 88.23556519]
[206.66754150 86.59500122]
[216.54232788 74.54816437]
[231.68656921 73.09678650]
[243.11053467 82.58512878]
[258.02053833 80.94456482]
[272.93057251 79.30399323]
[283.62298584 65.45688629]
[300.68603516 63.66394043]
[313.50787354 74.54902649]
[328.39233398 72.69077301]
[338.09002686 60.50093460]
[353.21145630 58.82843781]
[364.77285767 68.14884186]
[379.65728760 66.29059601]
[394.62536621 58.32862473]
[406.41976929 70.50765228]
[397.98171997 85.21260071]
[381.51556396 81.17504883]
[366.63110352 83.03329468]
[357.71606445 94.91007996]
[342.64761353 97.00664520]
[330.25057983 87.57522583]
[315.36611938 89.43347931]
[308.95574951 100.60895538]
[297.10260010 106.13512421]
[284.03845215 103.79188538]
[274.57113647 94.21401215]
[259.66113281 95.85457611]
[244.75111389 97.49514771]
[235.66349792 109.24040222]
[220.56599426 111.11656952]
[208.30810547 101.50501251]
[193.39810181 103.14558411]
[184.31048584 114.89083862]
[169.21298218 116.76700592]
[156.95509338 107.15545654]
[142.04508972 108.79602051]
[126.69401550 126.26624298]
[107.04549408 131.15760803]
[106.82631683 146.15600586]
[106.60714722 161.15440369]
[106.38796997 176.15280151]
[116.99396515 193.29791260]
[106.36345673 209.45175171]
[106.58262634 224.45016479]
[106.80180359 239.44856262]
[107.13054657 254.44494629]
[107.56884766 269.43853760]
[108.00714111 284.43212891]
[120.95117188 296.20169067]
[121.36851501 313.35360718]
[109.48922729 325.26022339]
[110.14655304 340.24581909]
[110.80388641 355.23138428]
[111.46121979 370.21697998]
[122.37343597 378.10934448]
[126.68567657 390.66192627]
[123.03588867 403.22036743]
[112.97135925 411.26336670]
[113.40965271 426.25695801]
[113.84795380 441.25054932]
[114.28625488 456.24414062]
[114.72455597 471.23773193]
[115.16285706 486.23132324]
[115.82018280 501.21691895]
[116.69641113 516.19128418]
[117.57263184 531.16571045]
[131.06616211 538.64422607]
[138.35430908 552.24151611]
[137.11146545 567.61871338]
[127.73421478 579.86907959]
[113.21479797 585.08343506]
[98.18630981 581.59802246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[16 196]
[17 195]
[18 194]
[19 193]
[23 190]
[24 189]
[25 188]
[27 187]
[28 186]
[29 185]
[33 183]
[34 182]
[35 181]
[36 180]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[45 118]
[46 117]
[47 116]
[48 115]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
[125 133]
[126 132]
[137 178]
[138 177]
[141 174]
[142 173]
[145 170]
[146 169]
[147 168]
[150 164]
[151 163]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
