%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGAGGGGAGGGCAGGCGGCGGUGGCAGCCAUGUUGUUGUGAGUCUCUGUGUCUCACCCUCGGUACUUCGGUGGUUCGGAGGAGGAGGGGGAGGAGAAGGAGGAGGUGGGGUGGGGGGGGAGGGUGGUAGGUGGAGAAAGAAGACAUUGCCGCCACCGAAGGCGGAGGAGGGGGAGGACCGCCAAGAGCGACGCCGCCGUGUGCCCAACGGUCGGUGUCCCCGGCUGAGGCAGCGCGGCCGCAGCAGCCCUG\
UUUGAUCUGUGGAUGAA\
) } def
/len { sequence length } bind def

/coor [
[2.89879870 703.81359863]
[11.45969296 691.17742920]
[24.65975189 683.51440430]
[23.45275307 668.56304932]
[22.24575424 653.61169434]
[10.76928902 644.18695068]
[9.33223343 629.04132080]
[19.29561424 617.06762695]
[18.08861542 602.11627197]
[16.88161659 587.16491699]
[8.14528656 575.10150146]
[14.74704456 560.72351074]
[13.54004574 545.77215576]
[12.33304787 530.82080078]
[11.12604904 515.86944580]
[9.91905022 500.91806030]
[0.92415023 492.86459351]
[-0.22359103 480.44384766]
[7.63088942 470.24349976]
[6.59602213 455.27923584]
[-2.00091147 443.11608887]
[4.76586342 428.81500244]
[3.73099613 413.85073853]
[2.69612908 398.88647461]
[1.66126180 383.92221069]
[0.62639463 368.95794678]
[-7.97053862 356.79483032]
[-1.20376408 342.49371338]
[-2.23863125 327.52944946]
[-14.16523838 312.28277588]
[-4.93789721 294.33331299]
[-6.31686687 279.39685059]
[-7.69583702 264.46035767]
[-13.64660740 278.22946167]
[-13.77385807 293.22894287]
[-20.22039986 306.77301025]
[-31.78140259 316.33038330]
[-46.29615784 320.11480713]
[-61.05192184 317.41897583]
[-73.29090118 308.74676514]
[-80.72567749 295.71893311]
[-81.96672058 280.77035522]
[-76.78208923 266.69485474]
[-66.14076996 256.12310791]
[-52.03157425 251.03086853]
[-37.09334946 252.36932373]
[-22.80891037 247.79167175]
[-37.53932571 244.96061707]
[-52.26973724 242.12954712]
[-67.00015259 239.29849243]
[-81.73056793 236.46742249]
[-93.93608856 248.20268250]
[-110.56790161 250.31579590]
[-125.03020477 242.16896057]
[-131.70675659 227.15379333]
[-146.46878052 224.49243164]
[-161.23078918 221.83105469]
[-175.99281311 219.16969299]
[-190.94682312 224.33575439]
[-202.09938049 214.46307373]
[-216.86140442 211.80171204]
[-231.62341309 209.14033508]
[-246.38543701 206.47897339]
[-261.14746094 203.81761169]
[-270.34536743 214.05541992]
[-283.29504395 218.38626099]
[-296.58911133 215.78309631]
[-306.78485107 207.02877808]
[-311.29565430 194.48486328]
[-326.02609253 191.65380859]
[-340.75650024 188.82273865]
[-355.48690796 185.99168396]
[-370.21731567 183.16061401]
[-384.94772339 180.32954407]
[-400.25646973 186.20959473]
[-412.83111572 175.68296814]
[-409.73599243 159.57855225]
[-394.15505981 154.46319580]
[-382.11666870 165.59913635]
[-367.38626099 168.43020630]
[-352.65585327 171.26126099]
[-337.92541504 174.09233093]
[-323.19500732 176.92338562]
[-308.46459961 179.75445557]
[-296.83050537 168.14932251]
[-280.40505981 165.75477600]
[-265.64889526 173.71333313]
[-258.48608398 189.05558777]
[-243.72406006 191.71694946]
[-228.96205139 194.37832642]
[-214.20002747 197.03968811]
[-199.43801880 199.70106506]
[-185.53988647 194.34465027]
[-173.33143616 204.40768433]
[-158.56942749 207.06904602]
[-143.80740356 209.73040771]
[-129.04539490 212.39178467]
[-120.32144928 202.31260681]
[-107.65785217 197.81542969]
[-94.31791687 200.17236328]
[-83.79540253 208.87448120]
[-78.89949799 221.73701477]
[-64.16909027 224.56806946]
[-49.43867493 227.39913940]
[-34.70825958 230.23020935]
[-19.97784805 233.06126404]
[-18.61375427 222.50776672]
[-14.14036179 213.13041687]
[-7.14293766 205.79431152]
[1.56982887 201.12164307]
[11.05718899 199.44026184]
[20.34708977 200.76429749]
[28.53560066 204.80772400]
[39.23334885 194.29306030]
[49.93109894 183.77839661]
[53.58430099 169.33874512]
[68.85002899 165.18325806]
[79.54777527 154.66859436]
[90.24552155 144.15391541]
[100.94326782 133.63925171]
[63.51785278 116.26826477]
[66.48255157 68.14894104]
[68.03330994 53.22931671]
[60.53558731 42.76394272]
[62.11136246 30.39019203]
[71.37887573 22.65198898]
[73.10121918 7.75119925]
[74.82356262 -7.14959097]
[76.54590607 -22.05038071]
[78.26824951 -36.95117188]
[79.99059296 -51.85195923]
[81.71293640 -66.75274658]
[83.43527985 -81.65354156]
[81.31694794 -90.50010681]
[85.26412964 -96.71553040]
[87.15782928 -111.59551239]
[74.57545471 -120.31000519]
[67.49442291 -133.87899780]
[67.54190063 -149.18443298]
[74.70697784 -162.70922852]
[87.34317017 -171.34550476]
[102.54678345 -173.10868835]
[116.82412720 -167.59361267]
[126.89437866 -156.06761169]
[130.44346619 -141.17927551]
[126.65583801 -126.34983063]
[116.40185547 -114.98697662]
[102.03781128 -109.70181274]
[100.14411926 -94.82183075]
[98.33606720 -79.93119812]
[96.61372375 -65.03041077]
[94.89138031 -50.12961578]
[93.16903687 -35.22882843]
[91.44669342 -20.32803726]
[89.72434998 -5.42724800]
[88.00201416 9.47354126]
[86.27967072 24.37433052]
[94.10013580 40.10192108]
[82.95293427 54.78007507]
[81.40217590 69.69969940]
[88.00254822 73.26131439]
[100.77165222 65.39048004]
[101.20329285 80.38453674]
[107.80366516 83.94615173]
[119.42273712 74.45946503]
[131.04180908 64.97278595]
[142.66088867 55.48610687]
[154.27996826 45.99942780]
[150.23851013 31.31656075]
[152.52494812 16.26026154]
[160.74311829 3.43912578]
[173.46917725 -4.92550850]
[188.49827576 -7.38441753]
[203.22651672 -3.51158071]
[215.10214233 6.02200985]
[222.06762695 19.56460190]
[222.91618347 34.76985931]
[217.50076294 49.00337982]
[206.75962830 59.79912186]
[192.55375671 65.28665161]
[177.34439087 64.51522827]
[163.76664734 57.61849976]
[152.14756775 67.10517883]
[140.52848816 76.59186554]
[128.90942383 86.07854462]
[117.29034424 95.56522369]
[119.58333588 102.70610809]
[133.86509705 98.12013245]
[146.03082275 89.34545135]
[158.13536072 98.20436859]
[153.45034790 112.45395660]
[138.45108032 112.40189362]
[124.16931152 116.98786926]
[126.46230316 124.12875366]
[141.43226624 125.07749939]
[156.40223694 126.02625275]
[171.37219238 126.97499847]
[186.34216309 127.92375183]
[201.31213379 128.87249756]
[216.28730774 129.73509216]
[231.26719666 130.51152039]
[246.24708557 131.28793335]
[261.22698975 132.06436157]
[271.75210571 120.49906158]
[287.25567627 118.45619202]
[300.41738892 126.90032196]
[305.02267456 141.84439087]
[298.89709473 156.23226929]
[284.93292236 163.27044678]
[269.72360229 159.63569641]
[260.45056152 147.04425049]
[245.47067261 146.26782227]
[230.49078369 145.49140930]
[215.51087952 144.71498108]
[208.69375610 147.49678040]
[200.36338806 143.84246826]
[185.39341736 142.89370728]
[170.42344666 141.94496155]
[155.45349121 140.99621582]
[140.48352051 140.04747009]
[125.51354980 139.09872437]
[111.45793915 144.33700562]
[100.76018524 154.85166931]
[90.06243896 165.36633301]
[79.36469269 175.88099670]
[74.94631195 191.07272339]
[60.44576263 194.47615051]
[49.74801254 204.99081421]
[39.05026627 215.50547791]
[43.64781570 237.05386353]
[31.28857040 256.95281982]
[7.24064302 263.08139038]
[8.61961269 278.01788330]
[9.99858284 292.95434570]
[18.71678734 299.38018799]
[22.40291595 309.33071899]
[20.07305336 319.45840454]
[12.72562790 326.49459839]
[13.76049519 341.45886230]
[22.43144989 354.69235229]
[15.59065342 367.92309570]
[16.62552071 382.88735962]
[17.66038895 397.85162354]
[18.69525528 412.81585693]
[19.73012161 427.78012085]
[28.40107727 441.01361084]
[21.56028175 454.24435425]
[22.59514809 469.20861816]
[33.22907257 484.26278687]
[24.87041092 499.71109009]
[26.07740784 514.66241455]
[27.28440666 529.61376953]
[28.49140549 544.56512451]
[29.69840431 559.51654053]
[38.52106857 572.64935303]
[31.83297729 585.95794678]
[33.03997421 600.90930176]
[34.24697495 615.86065674]
[46.00204468 626.08105469]
[47.01312256 641.26104736]
[37.19711304 652.40472412]
[38.40411377 667.35607910]
[39.61111069 682.30743408]
[53.86946106 687.75372314]
[64.34648895 698.85302734]
[68.96195984 713.40161133]
[66.79948425 728.51074219]
[58.28842163 741.18054199]
[45.11864090 748.89544678]
[29.90501595 750.12365723]
[15.66822529 744.62121582]
[5.23499107 733.48071289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 263]
[4 262]
[5 261]
[8 258]
[9 257]
[10 256]
[12 254]
[13 253]
[14 252]
[15 251]
[16 250]
[19 248]
[20 247]
[22 245]
[23 244]
[24 243]
[25 242]
[26 241]
[28 239]
[29 238]
[31 234]
[32 233]
[33 232]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[55 97]
[56 96]
[57 95]
[58 94]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[113 229]
[114 228]
[115 227]
[117 225]
[118 224]
[119 223]
[120 222]
[122 160]
[123 159]
[126 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[135 149]
[136 148]
[164 186]
[165 185]
[166 184]
[167 183]
[168 182]
[194 221]
[195 220]
[196 219]
[197 218]
[198 217]
[199 216]
[200 214]
[201 213]
[202 212]
[203 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
