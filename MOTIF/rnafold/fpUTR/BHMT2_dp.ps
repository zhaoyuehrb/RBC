%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BHMT2)
} def

/sequence { (\
GGGCGGGCUCCUAGACGGCCGCGCGCCCGGGAACCCGGCGCCCACAGAGCCGCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.004505594 ubox
1 11 0.009207224 ubox
1 12 0.008528329 ubox
1 27 0.022996735 ubox
1 28 0.997717308 ubox
1 43 0.013015568 ubox
1 59 0.035059968 ubox
2 9 0.004557486 ubox
2 10 0.009213981 ubox
2 11 0.009030364 ubox
2 26 0.023107539 ubox
2 27 0.998468239 ubox
2 28 0.004126718 ubox
2 42 0.013012314 ubox
2 51 0.003684636 ubox
2 58 0.035441526 ubox
2 59 0.003594348 ubox
3 8 0.005545156 ubox
3 9 0.007191990 ubox
3 10 0.008943183 ubox
3 22 0.012032661 ubox
3 24 0.025633216 ubox
3 26 0.998450778 ubox
3 41 0.010001042 ubox
3 50 0.003688378 ubox
3 53 0.021458321 ubox
3 56 0.035724860 ubox
3 58 0.003595789 ubox
4 17 0.005323047 ubox
4 21 0.012048370 ubox
4 23 0.026582375 ubox
4 25 0.998417048 ubox
4 40 0.009420217 ubox
4 49 0.003687491 ubox
4 52 0.021456915 ubox
4 54 0.025567343 ubox
4 55 0.027740643 ubox
5 16 0.005371249 ubox
5 20 0.010636771 ubox
5 22 0.030655674 ubox
5 24 0.998028361 ubox
5 36 0.007406237 ubox
5 39 0.006080250 ubox
5 51 0.017627870 ubox
5 53 0.033995601 ubox
6 19 0.008933229 ubox
6 20 0.119993126 ubox
6 35 0.008065187 ubox
6 50 0.012560082 ubox
6 51 0.039763864 ubox
7 19 0.120241245 ubox
7 22 0.991409087 ubox
7 34 0.008060756 ubox
7 50 0.041649184 ubox
8 18 0.120094022 ubox
8 21 0.990527168 ubox
8 49 0.043410346 ubox
9 13 0.003189602 ubox
9 15 0.031082826 ubox
9 17 0.105725664 ubox
9 18 0.086759937 ubox
9 32 0.008013855 ubox
9 48 0.043383464 ubox
10 14 0.033068679 ubox
10 17 0.113192157 ubox
10 18 0.900431866 ubox
10 31 0.008145265 ubox
10 47 0.041445781 ubox
11 17 0.900880461 ubox
11 18 0.363134683 ubox
11 30 0.008143521 ubox
11 47 0.012461552 ubox
12 17 0.340274319 ubox
12 29 0.007641799 ubox
12 46 0.017048875 ubox
16 23 0.004070984 ubox
17 22 0.008816233 ubox
17 27 0.007263444 ubox
17 42 0.008210689 ubox
17 43 0.039841473 ubox
18 26 0.007342625 ubox
18 41 0.007671102 ubox
18 42 0.039876995 ubox
18 56 0.015745261 ubox
19 25 0.007394836 ubox
19 40 0.006767725 ubox
19 55 0.015776928 ubox
20 54 0.015778062 ubox
21 39 0.003583149 ubox
21 41 0.006443816 ubox
21 53 0.015788348 ubox
22 40 0.006465316 ubox
22 52 0.015783160 ubox
23 39 0.006426278 ubox
23 41 0.045398162 ubox
23 50 0.005153887 ubox
23 51 0.009749493 ubox
24 38 0.004751759 ubox
24 40 0.045889843 ubox
24 49 0.007275550 ubox
25 39 0.046472037 ubox
25 41 0.010618503 ubox
25 50 0.005586574 ubox
26 38 0.039410024 ubox
26 40 0.010638626 ubox
26 49 0.005579571 ubox
27 37 0.030741535 ubox
27 38 0.028383036 ubox
28 37 0.038020908 ubox
29 35 0.021640898 ubox
29 36 0.053073936 ubox
29 43 0.007235417 ubox
29 59 0.694520220 ubox
30 34 0.021345646 ubox
30 35 0.052937736 ubox
30 36 0.010966477 ubox
30 42 0.007242824 ubox
30 58 0.698409758 ubox
30 59 0.645077399 ubox
31 35 0.010853232 ubox
31 41 0.007225908 ubox
31 58 0.653184931 ubox
34 55 0.993721684 ubox
35 54 0.994932148 ubox
35 55 0.030690235 ubox
36 52 0.997080475 ubox
36 54 0.030501995 ubox
37 51 0.997772717 ubox
37 53 0.027450661 ubox
37 59 0.030938655 ubox
38 50 0.997797657 ubox
38 53 0.011311609 ubox
38 58 0.031178947 ubox
39 49 0.997590291 ubox
39 52 0.014282676 ubox
40 50 0.027246930 ubox
40 51 0.011041122 ubox
40 56 0.031561626 ubox
41 49 0.028830471 ubox
41 55 0.031494747 ubox
42 54 0.031375755 ubox
43 54 0.003434752 ubox
49 56 0.017278932 ubox
50 55 0.017285926 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
showpage
end
%%EOF
