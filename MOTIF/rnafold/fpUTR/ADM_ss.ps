%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAAGAAAGGGAAGGCAACCGGGCAGCCCAGGCCCCGCCCCGCCGCUCCCCCACCCGUGCGCUUAUAAAGCACAGGAACCAGAGCUGGCCACUCAGUGGUUUCUUGGUGACACUGGAUAGAACAGCUCAAGCCUUGCCACUUCGGGCUUCUCACUGCAGCUGGGCUUGGACUUCGGAGUUUUGCCAUUGCCAGUGGGACGUCUGAGACUUUCUCCUUCAAGUACUUGGCAGAUCACUCUCUUAGCAGGGUCU\
GCGCUUCGCAGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[313.75341797 267.21426392]
[305.56448364 254.64678955]
[297.37551880 242.07933044]
[289.18658447 229.51185608]
[277.43997192 226.72061157]
[270.50961304 216.34899902]
[272.55163574 203.63768005]
[264.50839233 190.97647095]
[256.46514893 178.31526184]
[248.42189026 165.65406799]
[240.37863159 152.99285889]
[232.33538818 140.33164978]
[220.00958252 131.78327942]
[205.33258057 128.68721008]
[190.63793945 125.67594147]
[175.92616272 122.74958801]
[161.21438599 119.82323456]
[146.50260925 116.89688110]
[131.79083252 113.97052002]
[124.63674164 124.47167969]
[114.18391418 131.69619751]
[101.83192444 134.67674255]
[89.23464966 133.01423645]
[78.07880402 126.93127441]
[66.32052612 136.24487305]
[54.56225967 145.55845642]
[48.54865265 160.19223022]
[33.76779938 162.02952576]
[22.00952911 171.34312439]
[10.25125790 180.65670776]
[8.35306454 185.44148254]
[5.14358950 188.71337891]
[1.40910292 190.22708130]
[-2.07953024 190.08079529]
[-14.15339375 198.98146057]
[-26.22725868 207.88212585]
[-25.98506737 223.39730835]
[-34.93624878 236.07232666]
[-49.63889313 241.03337097]
[-64.43952942 236.37281799]
[-73.64701080 223.88273621]
[-73.72087860 208.36584473]
[-64.63272858 195.78868103]
[-49.87712860 190.98742676]
[-35.12792206 195.80825806]
[-23.05405807 186.90760803]
[-10.98019409 178.00694275]
[0.93766224 168.89843750]
[12.69593334 159.58483887]
[24.45420456 150.27125549]
[29.62677956 136.30364990]
[45.24866104 133.80018616]
[57.00693512 124.48659515]
[68.76520538 115.17300415]
[64.55508423 113.99858856]
[60.36101532 112.26487732]
[56.24416351 109.96890259]
[41.24416351 109.96890259]
[27.44399071 117.70619965]
[14.71671867 109.96890259]
[-0.28328106 109.96890259]
[-15.28328133 109.96890259]
[-30.28328133 109.96890259]
[-38.53725433 123.00253296]
[-52.53706360 129.48394775]
[-67.81542206 127.34497070]
[-79.49706268 117.26812744]
[-83.85441589 102.46890259]
[-79.49706268 87.66967773]
[-67.81542206 77.59283447]
[-52.53706360 75.45384979]
[-38.53725433 81.93527222]
[-30.28328133 94.96890259]
[-15.28328133 94.96890259]
[-0.28328106 94.96890259]
[14.71671867 94.96890259]
[27.44399071 87.23159790]
[41.24416351 94.96890259]
[56.24416351 94.96890259]
[59.58720016 88.25518036]
[44.75083160 86.04562378]
[42.26757050 71.25260925]
[55.56921005 64.31961823]
[66.27327728 74.82772827]
[69.61631012 68.11400604]
[60.57679367 56.14374542]
[51.53727341 44.17348480]
[42.49775696 32.20322800]
[33.45823669 20.23296928]
[24.41871643 8.26271057]
[8.47445965 11.59017467]
[-7.26618338 7.63685274]
[-19.65678978 -2.75456381]
[-26.24351692 -17.45975304]
[-25.75097275 -33.50688934]
[-18.32885361 -47.67720413]
[-27.50602341 -59.54225922]
[-36.68319321 -71.40731812]
[-45.86036301 -83.27236938]
[-55.03753281 -95.13742828]
[-64.21470642 -107.00248718]
[-79.13313293 -103.77708435]
[-93.97161102 -107.35231781]
[-105.78395081 -117.01831055]
[-112.22480011 -130.85588074]
[-112.01531982 -146.11755371]
[-105.19711304 -159.77313232]
[-93.12393188 -169.11128235]
[-78.19290924 -172.27790833]
[-63.36862564 -168.64427185]
[-51.59444427 -158.93183899]
[-45.20813751 -145.06901550]
[-45.47771454 -129.80827332]
[-52.34964752 -116.17965698]
[-43.17247772 -104.31459808]
[-33.99530792 -92.44953918]
[-24.81813812 -80.58448792]
[-15.64096737 -68.71942902]
[-6.46379805 -56.85437393]
[6.92848539 -60.40238190]
[20.70591545 -58.57897949]
[32.78915787 -51.62613297]
[41.34193802 -40.56245041]
[45.05006027 -27.03407669]
[43.32328033 -13.06980038]
[36.38897324 -0.77680892]
[45.42849350 11.19344997]
[54.46801376 23.16370773]
[63.50753403 35.13396454]
[72.54705048 47.10422516]
[81.58657074 59.07448196]
[109.64610291 59.64372635]
[129.66224670 76.07398987]
[134.71717834 99.25874329]
[149.42897034 102.18509674]
[164.14074707 105.11145020]
[178.85252380 108.03781128]
[193.56430054 110.96416473]
[202.55410767 109.57099915]
[208.42864990 114.01020813]
[223.10565186 117.10628510]
[225.74337769 100.55506897]
[238.55397034 91.62358856]
[252.75082397 94.44261932]
[264.82470703 85.54195404]
[276.89855957 76.64128876]
[288.97241211 67.74063110]
[301.04629517 58.83996582]
[313.12014771 49.93930054]
[325.19400024 41.03863907]
[331.71096802 26.62198448]
[346.54660034 25.29784775]
[358.62045288 16.39718437]
[370.69433594 7.49652052]
[382.76818848 -1.40414321]
[394.84204102 -10.30480671]
[406.91592407 -19.20547104]
[418.98977661 -28.10613441]
[431.06362915 -37.00679779]
[443.08590698 -45.97703934]
[455.05615234 -55.01655960]
[467.02642822 -64.05607605]
[467.89666748 -74.85208130]
[474.41403198 -83.22683716]
[484.25088501 -86.58049011]
[494.10229492 -84.04010010]
[506.27816772 -92.80072021]
[518.45404053 -101.56134033]
[521.28698730 -114.12007904]
[531.57812500 -121.16939545]
[543.52008057 -119.39074707]
[555.79626465 -128.01016235]
[568.07250977 -136.62956238]
[580.34875488 -145.24897766]
[592.62500000 -153.86837769]
[599.04205322 -168.95988464]
[615.35076904 -170.67944336]
[624.77416992 -157.25813293]
[617.61822510 -142.50263977]
[601.24438477 -141.59214783]
[588.96813965 -132.97274780]
[576.69195557 -124.35333252]
[564.41571045 -115.73392487]
[552.13946533 -107.11451721]
[545.58996582 -90.81686401]
[527.21466064 -89.38547516]
[515.03875732 -80.62485504]
[502.86291504 -71.86423492]
[496.18365479 -53.69607544]
[476.06594849 -52.08581924]
[464.09567261 -43.04629898]
[452.12542725 -34.00677872]
[448.69409180 -27.49197388]
[439.96429443 -24.93293381]
[427.89044189 -16.03227043]
[415.81658936 -7.13160658]
[403.74270630 1.76905715]
[391.66885376 10.66972065]
[379.59500122 19.57038498]
[367.52111816 28.47104836]
[355.44726562 37.37171173]
[349.79391479 51.15172958]
[334.09466553 53.11250305]
[322.02081299 62.01316452]
[309.94696045 70.91382599]
[297.87307739 79.81449127]
[285.79922485 88.71515656]
[273.72537231 97.61582184]
[261.65148926 106.51647949]
[259.92947388 122.45446777]
[244.99658203 132.28840637]
[253.03984070 144.94960022]
[261.08309937 157.61080933]
[269.12634277 170.27201843]
[277.16958618 182.93321228]
[285.21286011 195.59442139]
[301.73703003 203.75846863]
[301.75402832 221.32290649]
[309.94299316 233.89038086]
[318.13192749 246.45783997]
[326.32089233 259.02529907]
[334.58575439 259.20501709]
[342.03063965 262.57763672]
[347.48944092 268.53414917]
[350.13909912 276.06768799]
[349.62304688 283.94305420]
[346.09756470 290.89935303]
[353.69738770 303.83160400]
[361.29718018 316.76385498]
[368.89697266 329.69610596]
[376.49679565 342.62832642]
[384.09658813 355.56057739]
[392.43014526 368.03262329]
[401.46966553 380.00289917]
[410.50918579 391.97314453]
[419.54870605 403.94342041]
[428.58822632 415.91366577]
[436.22790527 420.85260010]
[437.66207886 428.07476807]
[446.56274414 440.14865112]
[455.53295898 452.17089844]
[464.57247925 464.14117432]
[478.94277954 473.13732910]
[474.27627563 489.43643188]
[457.32235718 489.46432495]
[452.60223389 473.18069458]
[443.56271362 461.21041870]
[437.04791260 457.77908325]
[434.48886108 449.04931641]
[425.58819580 436.97543335]
[416.61795044 424.95318604]
[407.57843018 412.98294067]
[398.53890991 401.01266479]
[389.49938965 389.04241943]
[380.45986938 377.07214355]
[367.03244019 383.75823975]
[371.13739014 398.18560791]
[375.24230957 412.61300659]
[385.39242554 426.19281006]
[375.15313721 439.70553589]
[359.33398438 433.60708618]
[360.81494141 416.71792603]
[356.70999146 402.29055786]
[352.60504150 387.86315918]
[358.65805054 370.32510376]
[371.16433716 363.16040039]
[363.56454468 350.22814941]
[355.96475220 337.29589844]
[348.36492920 324.36364746]
[340.76513672 311.43139648]
[333.16534424 298.49914551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 221]
[2 220]
[3 219]
[4 218]
[7 216]
[8 215]
[9 214]
[10 213]
[11 212]
[12 211]
[13 141]
[14 140]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[24 54]
[25 53]
[26 52]
[28 50]
[29 49]
[30 48]
[34 47]
[35 46]
[36 45]
[57 79]
[58 78]
[60 76]
[61 75]
[62 74]
[63 73]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[144 209]
[145 208]
[146 207]
[147 206]
[148 205]
[149 204]
[150 203]
[152 201]
[153 200]
[154 199]
[155 198]
[156 197]
[157 196]
[158 195]
[159 194]
[160 192]
[161 191]
[162 190]
[166 188]
[167 187]
[168 186]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
[227 271]
[228 270]
[229 269]
[230 268]
[231 267]
[232 266]
[233 255]
[234 254]
[235 253]
[236 252]
[237 251]
[239 250]
[240 249]
[241 247]
[242 246]
[256 264]
[257 263]
[258 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
