%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FANCM)
} def

/sequence { (\
UGUGCGAAGGAAACCGAUGGGGAUCGGAACCGUAGCGGUUGAGCUGCUGCUGCUACGGAUAUCUGACAGAAGCCUUCGGUGGUUGUCGGCCUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.013123641 ubox
1 61 0.032775822 ubox
1 88 0.033172158 ubox
1 93 0.094511378 ubox
2 14 0.004452629 ubox
2 56 0.024624282 ubox
2 60 0.036951698 ubox
2 62 0.008406966 ubox
2 80 0.012255987 ubox
2 87 0.043293779 ubox
2 90 0.337420594 ubox
2 92 0.119760219 ubox
3 13 0.006130207 ubox
3 55 0.024227298 ubox
3 59 0.037107163 ubox
3 61 0.008827196 ubox
3 79 0.007983829 ubox
3 81 0.004960338 ubox
3 88 0.025201784 ubox
3 89 0.320068313 ubox
3 93 0.018850980 ubox
4 53 0.024774715 ubox
4 54 0.009064854 ubox
4 60 0.007941055 ubox
4 80 0.027385674 ubox
4 86 0.075582902 ubox
4 87 0.033340681 ubox
4 90 0.317789504 ubox
4 92 0.017342008 ubox
5 16 0.004455998 ubox
5 26 0.007239696 ubox
5 52 0.025159659 ubox
5 57 0.034307849 ubox
5 78 0.136968364 ubox
5 79 0.020007652 ubox
5 85 0.083954107 ubox
5 88 0.578927874 ubox
5 89 0.243494307 ubox
6 15 0.004532022 ubox
6 25 0.007185280 ubox
6 51 0.020362375 ubox
6 56 0.033660223 ubox
6 63 0.007736815 ubox
6 77 0.145834696 ubox
6 84 0.082998020 ubox
6 87 0.620787539 ubox
7 24 0.006935901 ubox
7 62 0.007384251 ubox
7 76 0.145818021 ubox
7 83 0.081677320 ubox
7 84 0.021702307 ubox
7 86 0.606521724 ubox
8 54 0.013340079 ubox
8 64 0.005732320 ubox
8 75 0.145791532 ubox
8 83 0.028170673 ubox
8 84 0.085649593 ubox
8 92 0.685628489 ubox
9 15 0.004351789 ubox
9 25 0.004552215 ubox
9 31 0.047156504 ubox
9 53 0.011407970 ubox
9 63 0.006194525 ubox
9 64 0.007457632 ubox
9 74 0.145868622 ubox
9 83 0.085729032 ubox
9 84 0.291978396 ubox
9 87 0.017742180 ubox
9 91 0.710734831 ubox
9 92 0.055527534 ubox
10 14 0.004353423 ubox
10 24 0.003978869 ubox
10 25 0.044843393 ubox
10 30 0.047195639 ubox
10 62 0.004080670 ubox
10 63 0.009120687 ubox
10 73 0.145379445 ubox
10 83 0.304932154 ubox
10 84 0.140742432 ubox
10 86 0.016934665 ubox
10 87 0.005611717 ubox
10 90 0.708488312 ubox
10 91 0.057369650 ubox
11 24 0.045944655 ubox
11 62 0.009015616 ubox
11 83 0.137174854 ubox
11 84 0.020940825 ubox
11 86 0.005411330 ubox
12 83 0.020056020 ubox
12 84 0.012178660 ubox
13 80 0.644259124 ubox
13 83 0.012697701 ubox
14 20 0.012370373 ubox
14 21 0.085327151 ubox
14 22 0.044275114 ubox
14 27 0.749980926 ubox
14 79 0.649054498 ubox
14 82 0.012641423 ubox
14 89 0.030560209 ubox
15 19 0.012322655 ubox
15 20 0.085446453 ubox
15 21 0.044412073 ubox
15 26 0.753425405 ubox
15 78 0.649068250 ubox
15 81 0.012569059 ubox
15 88 0.030575924 ubox
16 25 0.753503049 ubox
16 77 0.648980683 ubox
16 80 0.011650533 ubox
16 87 0.030348747 ubox
17 24 0.751873101 ubox
17 75 0.012360646 ubox
17 76 0.629109699 ubox
17 86 0.030058785 ubox
18 23 0.743211181 ubox
18 68 0.015346383 ubox
18 78 0.008368997 ubox
18 85 0.028894288 ubox
18 93 0.004534121 ubox
19 67 0.015697943 ubox
19 74 0.552729900 ubox
19 75 0.308245474 ubox
19 76 0.019430822 ubox
19 77 0.008579569 ubox
19 84 0.011670612 ubox
19 92 0.005499681 ubox
20 73 0.553504327 ubox
20 74 0.331046743 ubox
20 75 0.063830168 ubox
20 76 0.007672381 ubox
20 83 0.005093573 ubox
20 91 0.005601377 ubox
20 92 0.004212913 ubox
21 64 0.007341729 ubox
21 73 0.331406263 ubox
21 74 0.067319882 ubox
21 75 0.007165154 ubox
21 90 0.005580341 ubox
21 91 0.004377186 ubox
22 63 0.007828061 ubox
22 73 0.067427244 ubox
22 74 0.007148101 ubox
22 90 0.004376117 ubox
23 62 0.007845629 ubox
23 80 0.003995253 ubox
24 61 0.007469270 ubox
24 66 0.632101649 ubox
24 70 0.097098628 ubox
24 79 0.004142992 ubox
25 65 0.648623911 ubox
25 69 0.089593336 ubox
25 78 0.004165267 ubox
26 63 0.010058725 ubox
26 64 0.654510759 ubox
26 77 0.004136369 ubox
26 91 0.021261436 ubox
26 92 0.003872199 ubox
27 62 0.009492807 ubox
27 63 0.655228160 ubox
27 76 0.004004821 ubox
27 90 0.021228080 ubox
27 91 0.004118704 ubox
28 62 0.651223963 ubox
28 75 0.003761236 ubox
30 58 0.995490965 ubox
31 57 0.998268387 ubox
32 50 0.032058719 ubox
32 53 0.050973572 ubox
32 56 0.998126988 ubox
33 49 0.032142827 ubox
33 52 0.052896795 ubox
33 55 0.997810381 ubox
34 48 0.032305139 ubox
34 51 0.058407854 ubox
34 54 0.997455160 ubox
35 47 0.032418390 ubox
35 50 0.061623388 ubox
35 53 0.997553605 ubox
36 46 0.032444153 ubox
36 49 0.062439727 ubox
36 52 0.997478465 ubox
37 45 0.032709691 ubox
37 48 0.071020820 ubox
37 51 0.992686649 ubox
38 44 0.032816707 ubox
38 47 0.073832486 ubox
38 50 0.992050282 ubox
39 43 0.030746036 ubox
39 46 0.074358927 ubox
39 49 0.978041086 ubox
40 46 0.054087597 ubox
40 49 0.082479368 ubox
41 45 0.042087447 ubox
41 48 0.080378692 ubox
41 51 0.005210065 ubox
42 48 0.270621555 ubox
42 51 0.082007351 ubox
43 47 0.279684118 ubox
43 50 0.094836574 ubox
44 49 0.097851158 ubox
53 82 0.003270833 ubox
54 81 0.003287475 ubox
54 93 0.004025759 ubox
55 80 0.003296491 ubox
55 92 0.004691467 ubox
56 65 0.007334755 ubox
56 79 0.003288630 ubox
57 64 0.007725180 ubox
57 91 0.031875311 ubox
57 92 0.004205691 ubox
58 63 0.008316322 ubox
58 77 0.003275534 ubox
58 90 0.031955886 ubox
58 91 0.004678689 ubox
59 76 0.003254694 ubox
60 93 0.029819559 ubox
61 92 0.032478177 ubox
62 70 0.070589988 ubox
62 89 0.033906830 ubox
63 69 0.075442086 ubox
63 72 0.054434483 ubox
63 88 0.046180730 ubox
63 89 0.724069111 ubox
64 68 0.067993996 ubox
64 71 0.054989062 ubox
64 88 0.736765360 ubox
65 87 0.745716499 ubox
66 86 0.745681289 ubox
67 85 0.745746472 ubox
68 75 0.003394547 ubox
68 84 0.736856408 ubox
69 74 0.003632164 ubox
69 77 0.003369518 ubox
69 83 0.683409399 ubox
69 84 0.014689600 ubox
69 87 0.006730333 ubox
70 76 0.003357776 ubox
70 83 0.019239958 ubox
70 84 0.009073247 ubox
70 86 0.006441922 ubox
71 83 0.013417874 ubox
71 84 0.099646645 ubox
72 80 0.700274262 ubox
72 83 0.240466866 ubox
73 79 0.702546242 ubox
73 82 0.251879851 ubox
74 78 0.697442852 ubox
74 81 0.251811572 ubox
74 82 0.006100025 ubox
75 81 0.006170785 ubox
78 91 0.040970168 ubox
79 90 0.043069409 ubox
80 88 0.010348168 ubox
80 89 0.042032174 ubox
80 93 0.012326232 ubox
81 87 0.015699310 ubox
81 91 0.172584721 ubox
81 92 0.009671147 ubox
82 86 0.010289983 ubox
82 90 0.172895555 ubox
82 91 0.009651478 ubox
83 89 0.171070595 ubox
84 88 0.125837619 ubox
8 92 0.9500000 lbox
9 91 0.9500000 lbox
10 90 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
63 89 0.9500000 lbox
64 88 0.9500000 lbox
65 87 0.9500000 lbox
66 86 0.9500000 lbox
67 85 0.9500000 lbox
68 84 0.9500000 lbox
69 83 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
74 78 0.9500000 lbox
showpage
end
%%EOF
