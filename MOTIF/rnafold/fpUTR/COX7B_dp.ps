%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX7B)
} def

/sequence { (\
UUUUGUUUUUCAGCUCACUUCAAGGGUACCUGAAGCGAAUUGGCACCAAAGCAGCAGCUGUAUUGCCGCAGUUCUAGCUUCACCUUCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.009913543 ubox
1 23 0.005807968 ubox
1 24 0.005014543 ubox
1 25 0.038280721 ubox
1 26 0.004355013 ubox
1 39 0.005626011 ubox
1 49 0.009074839 ubox
1 50 0.020050422 ubox
1 51 0.026981083 ubox
2 12 0.010141922 ubox
2 13 0.022672097 ubox
2 22 0.007398039 ubox
2 23 0.009080856 ubox
2 24 0.062765374 ubox
2 25 0.005635607 ubox
2 38 0.005556756 ubox
2 39 0.079958294 ubox
2 48 0.013082153 ubox
2 49 0.037590373 ubox
2 50 0.075104463 ubox
2 51 0.004408809 ubox
2 56 0.003583675 ubox
3 12 0.026051393 ubox
3 13 0.244018921 ubox
3 22 0.009527908 ubox
3 23 0.096883842 ubox
3 24 0.006543711 ubox
3 37 0.004085924 ubox
3 38 0.091920759 ubox
3 39 0.003440385 ubox
3 48 0.047119449 ubox
3 49 0.122009170 ubox
3 50 0.010491663 ubox
3 54 0.039300121 ubox
3 71 0.005372777 ubox
4 12 0.333555269 ubox
4 17 0.078815594 ubox
4 22 0.116474242 ubox
4 23 0.008285120 ubox
4 25 0.004007861 ubox
4 28 0.007723734 ubox
4 37 0.093333416 ubox
4 38 0.003287159 ubox
4 45 0.105288143 ubox
4 48 0.158392369 ubox
4 49 0.016200613 ubox
4 53 0.066068731 ubox
4 70 0.007158529 ubox
4 82 0.016259022 ubox
4 88 0.042557085 ubox
4 90 0.046814803 ubox
5 11 0.346697912 ubox
5 14 0.310405627 ubox
5 16 0.088205869 ubox
5 18 0.058805035 ubox
5 21 0.119934028 ubox
5 27 0.007476879 ubox
5 29 0.041019212 ubox
5 36 0.096317634 ubox
5 40 0.005611678 ubox
5 44 0.118649648 ubox
5 46 0.116484940 ubox
5 47 0.160185270 ubox
5 52 0.081974007 ubox
5 69 0.007497375 ubox
5 78 0.011033699 ubox
5 81 0.018062495 ubox
5 83 0.025052560 ubox
5 87 0.047682136 ubox
5 89 0.079710202 ubox
6 13 0.307038395 ubox
6 17 0.056187801 ubox
6 23 0.006152188 ubox
6 24 0.004751178 ubox
6 25 0.008719078 ubox
6 26 0.009806098 ubox
6 28 0.040932850 ubox
6 35 0.094350758 ubox
6 39 0.005932432 ubox
6 43 0.109010699 ubox
6 45 0.120009184 ubox
6 49 0.005835796 ubox
6 50 0.003239753 ubox
6 51 0.081922996 ubox
6 68 0.006905072 ubox
6 77 0.010955054 ubox
6 82 0.022306481 ubox
6 88 0.075033503 ubox
7 12 0.242109717 ubox
7 13 0.022914176 ubox
7 22 0.007309135 ubox
7 23 0.009316775 ubox
7 24 0.014341625 ubox
7 25 0.012422275 ubox
7 26 0.005194573 ubox
7 33 0.003769243 ubox
7 34 0.080118701 ubox
7 35 0.006165658 ubox
7 38 0.005750275 ubox
7 42 0.038071088 ubox
7 43 0.009480773 ubox
7 48 0.008725032 ubox
7 49 0.005876185 ubox
7 50 0.081812823 ubox
7 76 0.009732171 ubox
8 12 0.021929192 ubox
8 22 0.010621524 ubox
8 23 0.021795020 ubox
8 24 0.014557903 ubox
8 25 0.006125302 ubox
8 26 0.004016711 ubox
8 32 0.004366296 ubox
8 33 0.071661317 ubox
8 34 0.007266388 ubox
8 35 0.023804863 ubox
8 37 0.004927427 ubox
8 42 0.003874010 ubox
8 43 0.012676809 ubox
8 48 0.007203956 ubox
8 49 0.081795276 ubox
8 50 0.003934843 ubox
9 22 0.024976579 ubox
9 23 0.018066619 ubox
9 24 0.006756841 ubox
9 25 0.004104265 ubox
9 26 0.008880291 ubox
9 32 0.069061620 ubox
9 33 0.006628333 ubox
9 34 0.057809650 ubox
9 39 0.023343628 ubox
9 42 0.005550828 ubox
9 43 0.016853507 ubox
9 48 0.079918199 ubox
9 49 0.005570504 ubox
10 22 0.019099314 ubox
10 23 0.007642085 ubox
10 24 0.003527621 ubox
10 25 0.011133375 ubox
10 26 0.004510788 ubox
10 33 0.074535338 ubox
10 38 0.024190978 ubox
10 42 0.005554456 ubox
10 43 0.288919014 ubox
10 48 0.005288508 ubox
11 24 0.013227327 ubox
11 25 0.005929686 ubox
11 32 0.078190246 ubox
11 37 0.024142042 ubox
11 42 0.360134194 ubox
12 19 0.105420406 ubox
12 20 0.019271146 ubox
12 31 0.080000567 ubox
12 41 0.360335848 ubox
12 73 0.005929077 ubox
12 79 0.058325870 ubox
12 80 0.003213351 ubox
12 85 0.008683864 ubox
12 86 0.004641111 ubox
13 18 0.112028080 ubox
13 19 0.018360908 ubox
13 27 0.441245278 ubox
13 30 0.076123375 ubox
13 36 0.028559740 ubox
13 40 0.337603342 ubox
13 44 0.076427163 ubox
13 69 0.013464021 ubox
13 72 0.006768109 ubox
13 78 0.062438426 ubox
13 84 0.008450010 ubox
14 24 0.023806523 ubox
14 25 0.022353402 ubox
14 26 0.454413358 ubox
14 35 0.027780654 ubox
14 43 0.076479642 ubox
14 68 0.013445275 ubox
14 71 0.006817308 ubox
14 77 0.062425549 ubox
15 23 0.023697116 ubox
15 24 0.021979999 ubox
15 25 0.453056116 ubox
15 26 0.026497976 ubox
15 33 0.005910721 ubox
15 34 0.023771555 ubox
15 38 0.373529870 ubox
15 42 0.046835396 ubox
15 70 0.004570623 ubox
15 76 0.054605030 ubox
16 24 0.451975021 ubox
16 25 0.043927731 ubox
16 32 0.008338903 ubox
16 37 0.380055190 ubox
16 42 0.016288035 ubox
17 27 0.081175152 ubox
17 31 0.006622486 ubox
17 41 0.016376703 ubox
18 24 0.048424795 ubox
18 25 0.041380419 ubox
18 26 0.084887190 ubox
18 35 0.386242255 ubox
19 23 0.045120324 ubox
19 24 0.038569212 ubox
19 25 0.083369885 ubox
19 34 0.386426526 ubox
20 24 0.061412014 ubox
20 25 0.004145109 ubox
20 26 0.004957871 ubox
20 33 0.387167776 ubox
21 25 0.006471237 ubox
21 32 0.386894417 ubox
22 31 0.281131640 ubox
22 86 0.330260187 ubox
23 31 0.273393927 ubox
23 85 0.371683455 ubox
23 86 0.566707531 ubox
24 30 0.382615272 ubox
24 31 0.016641027 ubox
24 84 0.375326055 ubox
24 85 0.668423570 ubox
24 86 0.024893484 ubox
24 87 0.040520089 ubox
25 29 0.376498685 ubox
25 30 0.024069857 ubox
25 31 0.005668668 ubox
25 47 0.005093863 ubox
25 83 0.373623009 ubox
25 84 0.683300871 ubox
25 85 0.023830139 ubox
25 86 0.034583900 ubox
25 87 0.049926627 ubox
26 30 0.011838591 ubox
26 46 0.005166570 ubox
26 83 0.684129407 ubox
26 84 0.024913668 ubox
26 85 0.030304154 ubox
26 86 0.048816937 ubox
26 89 0.037784510 ubox
27 45 0.005074896 ubox
27 82 0.501458722 ubox
27 88 0.036722052 ubox
29 43 0.005210564 ubox
30 42 0.005212488 ubox
30 77 0.007665481 ubox
31 48 0.005019096 ubox
31 76 0.007669411 ubox
31 82 0.726540473 ubox
31 88 0.005942890 ubox
32 47 0.005435183 ubox
32 75 0.007023899 ubox
32 81 0.915378341 ubox
32 87 0.006607074 ubox
33 80 0.915423757 ubox
33 86 0.006473080 ubox
34 73 0.006837669 ubox
34 79 0.915484081 ubox
34 85 0.005733890 ubox
35 44 0.022913258 ubox
35 72 0.007257094 ubox
35 78 0.916111077 ubox
35 84 0.005146337 ubox
36 43 0.023025961 ubox
36 71 0.007547854 ubox
36 77 0.912097024 ubox
36 90 0.006797183 ubox
37 73 0.022239379 ubox
37 74 0.907573260 ubox
37 81 0.003975788 ubox
37 87 0.014665385 ubox
37 89 0.007515469 ubox
38 72 0.022189496 ubox
38 73 0.913783267 ubox
38 80 0.003886411 ubox
38 86 0.014637569 ubox
39 72 0.913956008 ubox
39 85 0.012617911 ubox
40 49 0.018058899 ubox
40 71 0.890211377 ubox
41 48 0.028504813 ubox
41 68 0.615518559 ubox
41 70 0.575163136 ubox
41 82 0.010781510 ubox
41 88 0.059914678 ubox
41 90 0.006823228 ubox
42 47 0.029875961 ubox
42 67 0.845663867 ubox
42 69 0.328447966 ubox
42 79 0.003932781 ubox
42 81 0.012054417 ubox
42 84 0.057306889 ubox
42 85 0.011269309 ubox
42 87 0.067751185 ubox
42 89 0.011652350 ubox
43 52 0.029353466 ubox
43 55 0.004368830 ubox
43 66 0.884696638 ubox
43 69 0.148984441 ubox
43 78 0.005583598 ubox
43 80 0.008844818 ubox
43 83 0.057826617 ubox
43 84 0.016194826 ubox
43 85 0.006050416 ubox
43 86 0.062331569 ubox
44 51 0.029433616 ubox
44 54 0.004379411 ubox
44 65 0.884794963 ubox
44 68 0.198006946 ubox
44 77 0.005590457 ubox
45 61 0.020606230 ubox
45 64 0.853043240 ubox
46 60 0.027988298 ubox
47 60 0.068007843 ubox
47 65 0.249327724 ubox
48 59 0.046781534 ubox
48 64 0.251430220 ubox
48 80 0.018918702 ubox
48 86 0.006665129 ubox
49 63 0.243488563 ubox
49 64 0.012509107 ubox
49 79 0.015061176 ubox
49 80 0.318485177 ubox
49 85 0.005389591 ubox
49 86 0.006515135 ubox
50 59 0.870357836 ubox
50 63 0.018590992 ubox
50 73 0.008289268 ubox
50 79 0.366258420 ubox
50 80 0.008389979 ubox
50 85 0.007209386 ubox
51 58 0.878109448 ubox
51 61 0.272100299 ubox
51 66 0.005727846 ubox
51 69 0.010993252 ubox
51 72 0.010586173 ubox
51 78 0.378357283 ubox
51 84 0.007323376 ubox
52 57 0.876871118 ubox
52 60 0.274726730 ubox
52 65 0.005736777 ubox
52 68 0.011174657 ubox
52 71 0.010821145 ubox
52 77 0.378327015 ubox
53 59 0.274059746 ubox
53 64 0.005623996 ubox
53 73 0.004551614 ubox
53 75 0.363607301 ubox
53 79 0.056599798 ubox
54 58 0.268054093 ubox
54 61 0.004535504 ubox
54 63 0.004568015 ubox
54 66 0.015664847 ubox
54 69 0.026271769 ubox
54 72 0.004941502 ubox
54 74 0.366060455 ubox
54 78 0.070598995 ubox
55 60 0.004727232 ubox
55 65 0.015687505 ubox
55 68 0.026659352 ubox
55 71 0.005072200 ubox
55 77 0.070689179 ubox
56 64 0.015471542 ubox
56 73 0.379398636 ubox
56 75 0.018559476 ubox
56 79 0.028087505 ubox
57 63 0.012887104 ubox
57 66 0.027663442 ubox
57 69 0.005733413 ubox
57 72 0.387941086 ubox
57 74 0.015844554 ubox
57 78 0.030080243 ubox
58 65 0.027668741 ubox
58 68 0.005742050 ubox
58 71 0.388768668 ubox
58 77 0.030086217 ubox
59 70 0.388689395 ubox
59 76 0.029929004 ubox
60 66 0.005775434 ubox
60 69 0.388757112 ubox
60 75 0.028919234 ubox
61 65 0.005562920 ubox
61 68 0.378687845 ubox
62 72 0.028527247 ubox
63 71 0.028814985 ubox
64 70 0.028822341 ubox
65 69 0.028388975 ubox
65 72 0.006701542 ubox
66 71 0.006727034 ubox
68 78 0.029371350 ubox
69 77 0.029432889 ubox
70 79 0.024018964 ubox
71 78 0.025714574 ubox
71 83 0.003460313 ubox
71 89 0.005822661 ubox
72 77 0.024489882 ubox
72 82 0.003333021 ubox
72 88 0.005530986 ubox
76 85 0.010493583 ubox
77 84 0.011120484 ubox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
31 82 0.9500000 lbox
32 81 0.9500000 lbox
33 80 0.9500000 lbox
34 79 0.9500000 lbox
35 78 0.9500000 lbox
36 77 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
