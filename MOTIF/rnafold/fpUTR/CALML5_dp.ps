%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CALML5)
} def

/sequence { (\
AGAACUGUCUGGGACAGACGCUGCCCGGAUCCCUGCGGCUGCCUGCACUCUGGACCACGAGCUCUGAGAGCAGCAGGUUGAGGGCCGGUGGGCAGCAGCUCGGAGGCUCCGCGAGGUGCAGGAGACGCAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005648947 ubox
2 9 0.006564967 ubox
2 31 0.135653824 ubox
3 8 0.006425131 ubox
3 30 0.112995832 ubox
5 28 0.003899252 ubox
5 130 0.005211024 ubox
5 131 0.003468181 ubox
6 27 0.003403559 ubox
6 129 0.005203479 ubox
7 19 0.003568033 ubox
7 30 0.928627885 ubox
7 128 0.005138549 ubox
7 132 0.004211247 ubox
8 18 0.003576337 ubox
8 28 0.003577831 ubox
8 29 0.989334360 ubox
8 127 0.004156939 ubox
9 17 0.003577484 ubox
9 27 0.004523584 ubox
9 28 0.999832527 ubox
10 16 0.003573076 ubox
10 27 0.999160176 ubox
11 15 0.003516179 ubox
11 26 0.999948947 ubox
12 25 0.999975979 ubox
12 26 0.003372209 ubox
13 24 0.999865702 ubox
13 25 0.004451287 ubox
15 23 0.998348929 ubox
16 22 0.996112479 ubox
17 21 0.974294669 ubox
31 103 0.003403201 ubox
31 131 0.054213266 ubox
32 102 0.003401527 ubox
32 106 0.004472793 ubox
32 130 0.038910066 ubox
32 131 0.989880741 ubox
33 105 0.004518971 ubox
33 130 0.999138729 ubox
33 131 0.003605622 ubox
34 104 0.004508025 ubox
34 129 0.999716957 ubox
35 99 0.003542028 ubox
35 128 0.999972403 ubox
36 98 0.003531044 ubox
36 102 0.004516921 ubox
36 127 0.999953746 ubox
37 101 0.004484091 ubox
37 126 0.988640038 ubox
38 96 0.023527847 ubox
38 99 0.006176345 ubox
39 95 0.023567012 ubox
39 98 0.006219829 ubox
39 124 0.899879426 ubox
40 94 0.023622854 ubox
40 97 0.006217606 ubox
40 123 0.928380416 ubox
41 93 0.023668537 ubox
41 96 0.006217380 ubox
42 92 0.023668763 ubox
42 95 0.004409458 ubox
42 122 0.998730688 ubox
43 91 0.023668257 ubox
43 95 0.004383006 ubox
43 121 0.999684552 ubox
44 90 0.023562158 ubox
44 94 0.006204179 ubox
44 120 0.999455304 ubox
45 89 0.023576103 ubox
45 93 0.006236835 ubox
45 119 0.999689292 ubox
46 88 0.023588744 ubox
46 92 0.006233266 ubox
46 118 0.999654710 ubox
47 117 0.985878659 ubox
48 84 0.023531199 ubox
48 91 0.004354689 ubox
48 115 0.624777087 ubox
48 116 0.780011760 ubox
49 83 0.024898800 ubox
49 90 0.004120973 ubox
49 114 0.868239890 ubox
49 115 0.479279885 ubox
49 116 0.011317430 ubox
50 80 0.003247226 ubox
50 82 0.043643098 ubox
50 88 0.009314037 ubox
50 113 0.916689302 ubox
50 115 0.093192694 ubox
51 81 0.054609432 ubox
51 87 0.009786550 ubox
51 94 0.003210062 ubox
51 111 0.972139520 ubox
51 113 0.045042803 ubox
51 114 0.080929519 ubox
52 58 0.003606641 ubox
52 86 0.010094430 ubox
52 93 0.003259645 ubox
52 108 0.006863984 ubox
52 109 0.010494534 ubox
52 110 0.997314274 ubox
52 112 0.029700514 ubox
53 79 0.065802944 ubox
53 85 0.009992904 ubox
53 107 0.008666244 ubox
53 108 0.009564311 ubox
53 109 0.997416616 ubox
54 78 0.068002303 ubox
54 108 0.993827936 ubox
55 77 0.068347238 ubox
55 83 0.060116935 ubox
55 84 0.007204881 ubox
55 91 0.007660993 ubox
55 103 0.004214976 ubox
55 106 0.994729368 ubox
56 76 0.068234660 ubox
56 82 0.060312290 ubox
56 83 0.007894785 ubox
56 90 0.007698063 ubox
56 102 0.003806230 ubox
56 105 0.994091100 ubox
57 78 0.003241127 ubox
57 89 0.008018509 ubox
58 77 0.003628543 ubox
58 80 0.061375157 ubox
58 87 0.005648903 ubox
58 88 0.008002958 ubox
58 102 0.995067921 ubox
59 79 0.061811347 ubox
59 86 0.005829184 ubox
59 101 0.995590981 ubox
59 109 0.004432766 ubox
60 78 0.061772691 ubox
60 79 0.004195667 ubox
60 100 0.995398455 ubox
60 108 0.004810021 ubox
61 71 0.070661539 ubox
61 74 0.007372814 ubox
61 78 0.004603851 ubox
61 85 0.009859243 ubox
61 99 0.995452016 ubox
61 107 0.005185531 ubox
62 70 0.070767793 ubox
62 73 0.007371411 ubox
62 76 0.061917256 ubox
62 77 0.005054109 ubox
62 84 0.009864415 ubox
62 98 0.995355669 ubox
62 105 0.003497621 ubox
62 106 0.004131755 ubox
63 69 0.070759587 ubox
63 72 0.007273013 ubox
63 75 0.061815686 ubox
63 77 0.021300277 ubox
63 83 0.012616107 ubox
63 97 0.990524550 ubox
63 104 0.004832934 ubox
64 68 0.070209988 ubox
64 70 0.006188528 ubox
64 73 0.069576233 ubox
64 76 0.052828555 ubox
64 82 0.019520782 ubox
64 83 0.035765910 ubox
64 95 0.990055617 ubox
64 98 0.012349045 ubox
64 103 0.005070912 ubox
65 69 0.005630613 ubox
65 72 0.069883255 ubox
65 75 0.053009754 ubox
65 81 0.019259573 ubox
65 82 0.035722385 ubox
65 83 0.004270039 ubox
65 94 0.989895042 ubox
65 97 0.026469433 ubox
65 102 0.005046504 ubox
66 71 0.069765436 ubox
66 74 0.053033484 ubox
66 93 0.978465614 ubox
66 96 0.036441189 ubox
66 101 0.004917566 ubox
67 79 0.014413301 ubox
67 100 0.004797940 ubox
68 78 0.009738065 ubox
68 79 0.028108345 ubox
68 99 0.004598308 ubox
69 78 0.027689493 ubox
69 79 0.040535056 ubox
70 78 0.044633859 ubox
70 85 0.006152863 ubox
70 89 0.323233025 ubox
70 93 0.152121431 ubox
70 96 0.012512385 ubox
71 77 0.045626706 ubox
71 80 0.021168239 ubox
71 84 0.006224401 ubox
71 88 0.322257360 ubox
71 90 0.775113342 ubox
71 92 0.169031210 ubox
71 95 0.012487017 ubox
72 79 0.020543587 ubox
72 89 0.718648406 ubox
73 78 0.014561270 ubox
73 85 0.254109551 ubox
73 89 0.576109362 ubox
73 93 0.011197782 ubox
73 96 0.004155203 ubox
73 99 0.004501417 ubox
74 80 0.014408385 ubox
74 84 0.253971634 ubox
74 88 0.690297310 ubox
74 90 0.035676891 ubox
74 92 0.011175409 ubox
74 95 0.004143994 ubox
74 98 0.004516403 ubox
75 79 0.012513416 ubox
75 89 0.033128799 ubox
76 86 0.955593009 ubox
76 100 0.011729121 ubox
77 85 0.957966904 ubox
77 89 0.004166264 ubox
77 96 0.026735641 ubox
77 99 0.017619964 ubox
78 84 0.947770383 ubox
78 88 0.007401453 ubox
78 95 0.026666824 ubox
78 98 0.017748592 ubox
78 114 0.004065343 ubox
79 83 0.697171288 ubox
79 87 0.009197240 ubox
79 94 0.025961546 ubox
79 97 0.021866608 ubox
79 111 0.008192329 ubox
79 113 0.006413943 ubox
80 86 0.009414200 ubox
80 93 0.012344300 ubox
80 96 0.024322869 ubox
80 110 0.023620667 ubox
80 112 0.015439847 ubox
82 109 0.043686273 ubox
82 110 0.029542723 ubox
83 108 0.055720545 ubox
83 109 0.030409685 ubox
84 93 0.086024917 ubox
84 107 0.088341731 ubox
84 108 0.003397880 ubox
85 91 0.004827524 ubox
85 92 0.089384918 ubox
85 106 0.088586726 ubox
86 90 0.004868221 ubox
86 91 0.089395795 ubox
86 105 0.088491863 ubox
88 96 0.003311099 ubox
89 95 0.003291289 ubox
89 102 0.082025502 ubox
90 101 0.088946559 ubox
91 100 0.089046052 ubox
92 99 0.089180384 ubox
93 98 0.089052976 ubox
95 112 0.005577950 ubox
96 111 0.005569297 ubox
97 108 0.009051087 ubox
98 107 0.011918513 ubox
99 105 0.003567432 ubox
99 106 0.012545998 ubox
99 115 0.005342918 ubox
99 124 0.018130904 ubox
100 104 0.003248132 ubox
100 105 0.011541403 ubox
100 114 0.005398485 ubox
100 123 0.018219865 ubox
101 111 0.004923653 ubox
101 113 0.005232091 ubox
101 122 0.018224398 ubox
101 124 0.003219385 ubox
102 110 0.008348380 ubox
102 112 0.004802178 ubox
103 109 0.008419034 ubox
104 108 0.007325574 ubox
106 119 0.018553410 ubox
107 118 0.018537146 ubox
107 124 0.013577906 ubox
108 114 0.004242418 ubox
108 123 0.014675271 ubox
109 113 0.005173716 ubox
109 116 0.019130344 ubox
109 122 0.015486199 ubox
110 115 0.020336496 ubox
110 121 0.015481393 ubox
111 119 0.015324673 ubox
112 118 0.015368167 ubox
113 117 0.009482602 ubox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
32 131 0.9500000 lbox
33 130 0.9500000 lbox
34 129 0.9500000 lbox
35 128 0.9500000 lbox
36 127 0.9500000 lbox
37 126 0.9500000 lbox
39 124 0.9500000 lbox
40 123 0.9500000 lbox
42 122 0.9500000 lbox
43 121 0.9500000 lbox
44 120 0.9500000 lbox
45 119 0.9500000 lbox
46 118 0.9500000 lbox
47 117 0.9500000 lbox
48 116 0.9500000 lbox
49 114 0.9500000 lbox
50 113 0.9500000 lbox
51 111 0.9500000 lbox
52 110 0.9500000 lbox
53 109 0.9500000 lbox
54 108 0.9500000 lbox
55 106 0.9500000 lbox
56 105 0.9500000 lbox
58 102 0.9500000 lbox
59 101 0.9500000 lbox
60 100 0.9500000 lbox
61 99 0.9500000 lbox
62 98 0.9500000 lbox
63 97 0.9500000 lbox
64 95 0.9500000 lbox
65 94 0.9500000 lbox
66 93 0.9500000 lbox
71 90 0.9500000 lbox
72 89 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
79 83 0.9500000 lbox
showpage
end
%%EOF
