%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGGUCGUUAGCUGUCAGAGCCAAGCGGCGGGCUGGCGGCGGGCUCCGACGUCUGCGCCAGGACCUGGCUGGCUGAGCCCGGCGCAGCAGCAGCAGCCAGGGCAGCGCGGCCCCUACUCCCUGUCAGGUCGUAGAGGCGAGCAGGGACCAGCUGGUCGCCGGCCCCUCGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[183.30827332 119.49961853]
[169.30456543 114.12409973]
[155.30087280 108.74858093]
[141.29716492 103.37306213]
[127.29344940 97.99754333]
[125.05115509 116.95357513]
[110.03249359 131.57507324]
[87.29532623 133.69703674]
[77.45443726 145.01766968]
[67.61355591 156.33831787]
[57.77266693 167.65896606]
[47.93178177 178.97959900]
[38.09089661 190.30024719]
[35.01174164 208.44201660]
[18.22919273 213.53068542]
[8.58737946 225.02136230]
[-1.05443478 236.51202393]
[-1.09421694 252.55502319]
[-13.75099659 262.41329956]
[-29.31557655 258.52441406]
[-35.84814072 243.87159729]
[-28.33746719 229.69522095]
[-12.54510117 226.87020874]
[-2.90328717 215.37954712]
[6.73852682 203.88887024]
[6.00080824 191.79725647]
[13.96385193 182.14208984]
[26.77025414 180.45936584]
[36.61113739 169.13871765]
[46.45202255 157.81806946]
[56.29291153 146.49743652]
[66.13379669 135.17678833]
[75.97467804 123.85614777]
[73.59489441 116.74371338]
[58.89596176 113.75350189]
[68.83532715 102.51885986]
[66.45554352 95.40643311]
[51.78332520 92.28775787]
[37.11111450 89.16908264]
[22.43889809 86.05040741]
[7.76668501 82.93173218]
[-6.90552902 79.81305695]
[-15.97909641 81.09094238]
[-21.80555916 76.50980377]
[-36.42111206 73.13553619]
[-51.03666306 69.76126862]
[-65.65221405 66.38700104]
[-80.26776123 63.01273727]
[-93.53605652 71.59922791]
[-108.97201538 68.20704651]
[-117.41774750 54.84870911]
[-113.86255646 39.44948578]
[-100.41567230 31.14545631]
[-85.05489349 34.86325836]
[-76.89350128 48.39718628]
[-62.27794647 51.77145004]
[-47.66239548 55.14571762]
[-33.04684448 58.51998520]
[-18.43129349 61.89424896]
[-3.78685379 65.14084625]
[10.88536072 68.25952148]
[25.55757523 71.37819672]
[40.22978973 74.49687195]
[54.90200043 77.61554718]
[69.57421875 80.73422241]
[82.26085663 72.01860046]
[96.26724243 69.98249817]
[108.54586029 74.00171661]
[106.71781921 59.11352539]
[104.88977814 44.22533417]
[103.06173706 29.33714104]
[101.23369598 14.44894791]
[99.40565491 -0.43924415]
[97.57761383 -15.32743645]
[95.74957275 -30.21562958]
[93.27386475 -45.00991440]
[90.15518951 -59.68212509]
[87.03651428 -74.35433960]
[83.91783905 -89.02655792]
[73.48040009 -100.91648865]
[78.40247345 -114.97431183]
[75.28379822 -129.64653015]
[66.07643890 -143.88243103]
[77.20715332 -156.67085266]
[92.57707977 -149.51531982]
[89.95600891 -132.76519775]
[93.07468414 -118.09298706]
[103.28905487 -107.25251007]
[98.59004974 -92.14523315]
[101.70872498 -77.47301483]
[104.82740021 -62.80080032]
[107.94607544 -48.12858963]
[118.29773712 -58.98414612]
[133.25387573 -57.83783722]
[141.83029175 -45.53153610]
[137.72824097 -31.10332680]
[123.96037292 -25.14968109]
[110.63777161 -32.04367065]
[112.46581268 -17.15547752]
[114.29384613 -2.26728439]
[116.12188721 12.62090778]
[117.94992828 27.50909996]
[119.77796936 42.39729309]
[121.60601044 57.28548431]
[123.43405151 72.17367554]
[132.66897583 83.99383545]
[146.67268372 89.36935425]
[160.67639160 94.74487305]
[174.68008423 100.12039948]
[188.68379211 105.49591827]
[232.57829285 92.58150482]
[247.54176331 93.62785339]
[262.50521851 94.67420197]
[277.46868896 95.72055054]
[292.43212891 96.76689148]
[307.39559937 97.81324005]
[323.73733521 89.35437775]
[337.90133667 99.69507599]
[352.88076782 100.48011017]
[364.56881714 90.18315125]
[379.74893188 91.19268036]
[389.49346924 102.39890289]
[404.47290039 103.18394470]
[419.45236206 103.96897888]
[434.43179321 104.75402069]
[449.41122437 105.53906250]
[464.39068604 106.32409668]
[479.37011719 107.10913849]
[488.28906250 96.99385071]
[501.21881104 93.91602325]
[513.37701416 98.78330994]
[520.39880371 109.60655975]
[535.36230469 110.65290833]
[550.32574463 111.69925690]
[563.32818604 102.30159760]
[578.74316406 106.74660492]
[584.74560547 121.62444305]
[576.73095703 135.52210999]
[560.84741211 137.77850342]
[549.27941895 126.66271210]
[534.31591797 125.61637115]
[519.35247803 124.57002258]
[507.15786743 136.13313293]
[490.03570557 135.29592896]
[478.58508301 122.08858490]
[463.60565186 121.30354309]
[448.62619019 120.51850128]
[433.64675903 119.73346710]
[418.66729736 118.94842529]
[403.68786621 118.16338348]
[388.70843506 117.37834930]
[377.84588623 127.50459290]
[362.64343262 126.92184448]
[352.09573364 115.45955658]
[337.11630249 114.67451477]
[327.90347290 122.54060364]
[315.40023804 121.99165344]
[306.34924316 112.77670288]
[291.38580322 111.73035431]
[276.42233276 110.68400574]
[261.45886230 109.63766479]
[246.49540710 108.59131622]
[231.53195190 107.54496765]
[226.91448975 113.45504761]
[217.67956543 125.27520752]
[213.06210327 131.18528748]
[217.69735718 145.45114136]
[222.33261108 159.71697998]
[226.96786499 173.98283386]
[237.61283875 187.17831421]
[227.87985229 201.06016541]
[211.84617615 195.55041504]
[212.70202637 178.61808777]
[208.06677246 164.35223389]
[203.43151855 150.08639526]
[198.79624939 135.82054138]
[191.92060852 149.15191650]
[177.07058716 151.26774597]
[166.74523926 140.38714600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[4 107]
[5 106]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[15 25]
[16 24]
[17 23]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 92]
[77 91]
[78 90]
[79 89]
[81 87]
[82 86]
[111 163]
[112 162]
[113 161]
[114 160]
[115 159]
[116 158]
[118 155]
[119 154]
[122 151]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[132 142]
[133 141]
[134 140]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
