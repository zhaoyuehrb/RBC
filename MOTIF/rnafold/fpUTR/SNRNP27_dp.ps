%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNRNP27)
} def

/sequence { (\
CGGAAGUUGUUGCACAGUUGUUUCCGGGAAGCGGGACUCCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.013616512 ubox
1 12 0.014903277 ubox
1 20 0.016481142 ubox
1 26 0.804241687 ubox
2 8 0.012889912 ubox
2 11 0.015284070 ubox
2 19 0.016986184 ubox
2 22 0.005893663 ubox
2 23 0.004012293 ubox
2 24 0.010853584 ubox
2 25 0.816962751 ubox
2 38 0.006953003 ubox
2 39 0.009953058 ubox
2 40 0.545819981 ubox
3 7 0.008487484 ubox
3 10 0.012612909 ubox
3 11 0.005970926 ubox
3 18 0.016277073 ubox
3 19 0.011067804 ubox
3 21 0.009415785 ubox
3 22 0.006497963 ubox
3 23 0.012239812 ubox
3 24 0.816987885 ubox
3 37 0.007605568 ubox
3 38 0.007683046 ubox
3 39 0.546314497 ubox
4 10 0.006228487 ubox
4 11 0.016526558 ubox
4 18 0.011512817 ubox
4 19 0.036615899 ubox
4 21 0.008892155 ubox
4 22 0.039564039 ubox
4 23 0.814963202 ubox
4 38 0.433582495 ubox
5 10 0.019359405 ubox
5 11 0.012064374 ubox
5 18 0.048662553 ubox
5 19 0.177662521 ubox
5 21 0.052151106 ubox
5 22 0.795316294 ubox
5 23 0.017653719 ubox
5 38 0.317514386 ubox
6 10 0.009146621 ubox
6 13 0.172911240 ubox
6 15 0.090165190 ubox
6 18 0.229054427 ubox
6 21 0.712948104 ubox
6 22 0.024027811 ubox
6 37 0.448936374 ubox
7 12 0.170509222 ubox
7 14 0.083799061 ubox
7 17 0.710840156 ubox
7 20 0.206445288 ubox
7 34 0.017619345 ubox
7 35 0.011852068 ubox
7 36 0.434910073 ubox
7 42 0.006965837 ubox
8 14 0.040699251 ubox
8 16 0.770349755 ubox
8 20 0.030458848 ubox
8 26 0.003251446 ubox
8 33 0.024254949 ubox
8 34 0.010147874 ubox
8 35 0.395450842 ubox
8 41 0.009435249 ubox
9 13 0.048744108 ubox
9 15 0.777146473 ubox
9 18 0.080885815 ubox
9 19 0.038781468 ubox
9 21 0.011426989 ubox
9 25 0.003696405 ubox
9 32 0.033407335 ubox
9 37 0.037260288 ubox
9 40 0.009733435 ubox
10 14 0.700157558 ubox
10 17 0.093106425 ubox
10 20 0.033336388 ubox
10 31 0.033344164 ubox
10 34 0.222415350 ubox
10 35 0.006842198 ubox
10 36 0.036090072 ubox
10 42 0.027653033 ubox
11 16 0.087206795 ubox
11 20 0.019674878 ubox
11 26 0.004103500 ubox
11 30 0.032366908 ubox
11 33 0.313451344 ubox
11 34 0.009285287 ubox
11 35 0.033488137 ubox
11 41 0.037596198 ubox
12 18 0.107076771 ubox
12 19 0.016445012 ubox
12 21 0.270544153 ubox
12 25 0.004505354 ubox
12 32 0.321998208 ubox
12 40 0.038968197 ubox
13 17 0.108229596 ubox
13 20 0.284347157 ubox
13 31 0.321644653 ubox
14 19 0.242413807 ubox
14 21 0.115863316 ubox
15 20 0.123054516 ubox
16 22 0.007473119 ubox
16 23 0.013658245 ubox
16 38 0.055644521 ubox
17 21 0.007270784 ubox
17 22 0.016190050 ubox
17 32 0.016497010 ubox
17 37 0.066142857 ubox
18 27 0.253043734 ubox
18 28 0.037120791 ubox
18 29 0.032866902 ubox
18 30 0.041237210 ubox
18 31 0.016401883 ubox
18 34 0.182728952 ubox
18 35 0.005656031 ubox
18 36 0.061476525 ubox
18 42 0.055084611 ubox
19 26 0.257276107 ubox
19 27 0.036840846 ubox
19 28 0.034381970 ubox
19 29 0.041818920 ubox
19 30 0.017373009 ubox
19 33 0.194194119 ubox
19 34 0.007017940 ubox
19 35 0.047621925 ubox
19 41 0.075448779 ubox
20 25 0.253955631 ubox
20 32 0.206463413 ubox
20 37 0.215801678 ubox
20 40 0.078700429 ubox
21 27 0.035986278 ubox
21 28 0.007893962 ubox
21 29 0.007752285 ubox
21 30 0.020648622 ubox
21 31 0.206452244 ubox
21 36 0.177439287 ubox
22 26 0.026714667 ubox
22 27 0.007114707 ubox
22 28 0.008289238 ubox
22 29 0.021220930 ubox
22 30 0.210928714 ubox
22 35 0.125935259 ubox
22 36 0.286774784 ubox
23 27 0.006325523 ubox
23 28 0.019720273 ubox
23 29 0.211404522 ubox
23 30 0.003722115 ubox
23 34 0.026323967 ubox
23 35 0.350179942 ubox
23 36 0.039374811 ubox
24 28 0.209719319 ubox
24 33 0.023062370 ubox
24 34 0.425710637 ubox
24 35 0.043822327 ubox
25 33 0.426250584 ubox
25 34 0.042842081 ubox
26 32 0.425803438 ubox
26 38 0.005235835 ubox
26 39 0.026569110 ubox
26 40 0.040835683 ubox
27 37 0.013040564 ubox
27 38 0.034940919 ubox
27 39 0.041775632 ubox
27 40 0.769982724 ubox
28 37 0.040942057 ubox
28 38 0.030373511 ubox
28 39 0.770918317 ubox
29 38 0.725890680 ubox
30 38 0.240689529 ubox
31 37 0.339168228 ubox
33 39 0.013295875 ubox
33 40 0.221481352 ubox
34 38 0.008807155 ubox
34 39 0.220966882 ubox
34 40 0.072475746 ubox
35 39 0.071486067 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
showpage
end
%%EOF
