%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGACUCGCCUCUUUUCUCUUAGCGACAGAUGCGUCCUGGCAACAGUCGGCAGAGUUGCUGCGGUUUGUGCCCUUGCGAUUUCUUUUUCUGAGAGAGGAGAGUCAAACUCCCACCUCCAGCUCUCGAAGGAGCUUUUCCUGAGGGCACUGCAAAGAGGCUCCUUUUCUUUCAGAUCAGCAGUAUCAGCCCAAGUCAGAACC\
) } def
/len { sequence length } bind def

/coor [
[192.71150208 301.77474976]
[199.85699463 288.25109863]
[191.96051025 275.49783325]
[184.06404114 262.74459839]
[176.16755676 249.99133301]
[168.27107239 237.23806763]
[164.93522644 236.07978821]
[161.99623108 233.24505615]
[160.23728943 228.93875122]
[160.32019043 223.70840454]
[153.02111816 210.60408020]
[145.72204590 197.49974060]
[138.42298889 184.39540100]
[131.12391663 171.29106140]
[123.82485199 158.18673706]
[116.52578735 145.08239746]
[109.22671509 131.97805786]
[94.09280396 132.75413513]
[80.18347931 126.74012756]
[70.38222504 115.18274689]
[55.83526611 118.84145355]
[44.33913803 129.71112061]
[30.10903358 125.31185913]
[15.56207943 128.97056580]
[1.01512563 132.62927246]
[-13.53182793 136.28797913]
[-28.07878304 139.94668579]
[-42.62573624 143.60539246]
[-57.17269135 147.26409912]
[-62.71138382 159.54528809]
[-74.14607239 166.29408264]
[-87.18653870 165.23866272]
[-97.08795929 156.98789978]
[-111.68952942 160.42216492]
[-126.29109955 163.85641479]
[-132.37292480 178.00978088]
[-145.46945190 185.77731323]
[-160.45132446 184.36047363]
[-171.59275818 174.51127625]
[-186.19432068 177.94552612]
[-200.79589844 181.37979126]
[-212.36630249 193.00123596]
[-228.14434814 188.53074646]
[-231.89894104 172.56719971]
[-219.76766968 161.53250122]
[-204.23014832 166.77821350]
[-189.62858582 163.34396362]
[-175.02700806 159.90969849]
[-169.44378662 146.12690735]
[-156.66409302 138.18060303]
[-141.47828674 139.29618835]
[-129.72535706 149.25485229]
[-115.12378693 145.82058716]
[-100.52221680 142.38633728]
[-92.29051971 127.72368622]
[-75.67461395 123.46484375]
[-60.83139801 132.71714783]
[-46.28444290 129.05844116]
[-31.73748779 125.39972687]
[-17.19053459 121.74102783]
[-2.64358020 118.08232117]
[11.90337372 114.42361450]
[26.45032883 110.76490784]
[36.90596390 100.15694427]
[52.17656326 104.29450226]
[66.72351837 100.63579559]
[69.13066864 87.55760956]
[76.46567535 76.46567535]
[87.55760956 69.13066864]
[100.63579559 66.72351837]
[104.29450226 52.17656326]
[107.95320892 37.62960815]
[111.61190796 23.08265495]
[115.27061462 8.53569984]
[118.92932129 -6.01125383]
[122.58802795 -20.55820847]
[126.24673462 -35.10516357]
[129.90544128 -49.65211487]
[125.76788330 -64.92271423]
[136.37585449 -75.37834930]
[140.03456116 -89.92530060]
[129.01411438 -102.75324249]
[127.82102966 -119.45623779]
[136.72779846 -133.43998718]
[152.05854797 -139.30189514]
[155.49279785 -153.90347290]
[158.92706299 -168.50503540]
[162.36131287 -183.10661316]
[165.79557800 -197.70819092]
[169.22982788 -212.30975342]
[172.66409302 -226.91133118]
[171.58248901 -235.98724365]
[176.26528931 -241.71046448]
[179.92399597 -256.25741577]
[183.58270264 -270.80438232]
[187.24140930 -285.35131836]
[190.90011597 -299.89828491]
[185.44966125 -317.48461914]
[198.14222717 -329.60000610]
[201.57647705 -344.20156860]
[205.01074219 -358.80313110]
[208.44499207 -373.40472412]
[207.36338806 -382.48062134]
[212.04620361 -388.20385742]
[215.70491028 -402.75079346]
[205.07818604 -413.93457031]
[202.20727539 -429.09243774]
[208.00825500 -443.38763428]
[220.63005066 -452.25857544]
[236.04512024 -452.87457275]
[249.33453369 -445.03909302]
[256.25772095 -431.25241089]
[254.60549927 -415.91375732]
[244.90509033 -403.91769409]
[230.25186157 -399.09210205]
[226.59315491 -384.54513550]
[223.04656982 -369.97045898]
[219.61230469 -355.36886597]
[216.17805481 -340.76730347]
[212.74378967 -326.16574097]
[218.84397888 -315.71591187]
[216.09831238 -303.52023315]
[205.44706726 -296.23956299]
[201.78836060 -281.69262695]
[198.12965393 -267.14566040]
[194.47094727 -252.59870911]
[190.81225586 -238.05175781]
[187.26565552 -223.47706604]
[183.83140564 -208.87550354]
[180.39714050 -194.27392578]
[176.96289062 -179.67234802]
[173.52862549 -165.07078552]
[170.09437561 -150.46920776]
[166.66011047 -135.86764526]
[176.27998352 -126.60575104]
[180.09640503 -113.69596100]
[177.00950623 -100.48137665]
[167.72174072 -90.43936920]
[154.58151245 -86.26660156]
[150.92280579 -71.71964264]
[155.32205200 -57.48954010]
[144.45239258 -45.99341202]
[140.79368591 -31.44645691]
[137.13497925 -16.89950180]
[133.47627258 -2.35254812]
[129.81756592 12.19440556]
[126.15886688 26.74135971]
[122.50016022 41.28831482]
[118.84145355 55.83526611]
[115.18274689 70.38222504]
[127.20348358 80.82452393]
[132.99781799 95.65575409]
[131.23953247 111.48130798]
[122.33105469 124.67899323]
[129.63012695 137.78332520]
[136.92918396 150.88766479]
[144.22825623 163.99200439]
[151.52732849 177.09632874]
[158.82638550 190.20066833]
[166.12545776 203.30500793]
[173.42453003 216.40934753]
[181.02432251 229.34158325]
[188.92080688 242.09484863]
[196.81729126 254.84809875]
[204.71377563 267.60134888]
[212.61026001 280.35461426]
[227.90115356 279.98623657]
[241.23536682 287.27291870]
[249.07984924 300.16983032]
[249.41342163 315.16131592]
[242.24659729 328.21896362]
[250.14308167 340.97222900]
[258.03955078 353.72546387]
[271.88281250 361.38543701]
[272.00445557 376.27957153]
[279.90093994 389.03280640]
[287.79742432 401.78607178]
[306.38775635 405.41235352]
[316.25970459 421.20166016]
[311.54333496 438.88568115]
[319.82882690 451.38970947]
[335.38613892 452.97204590]
[346.24948120 464.22024536]
[347.28955078 479.82318115]
[338.01519775 492.41369629]
[322.80554199 496.04687500]
[308.84207153 489.00729370]
[302.71795654 474.61877441]
[307.32476807 459.67517090]
[299.03930664 447.17114258]
[287.62564087 447.37890625]
[277.42462158 441.99316406]
[271.02679443 432.25073242]
[270.11962891 420.51046753]
[275.04415894 409.68255615]
[267.14770508 396.92929077]
[259.25122070 384.17605591]
[245.97277832 377.42825317]
[245.28631592 361.62194824]
[237.38983154 348.86868286]
[229.49334717 336.11544800]
[214.61009216 336.71063232]
[201.33894348 329.72973633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[20 66]
[21 65]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[33 54]
[34 53]
[35 52]
[39 48]
[40 47]
[41 46]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[80 140]
[81 139]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[99 120]
[100 119]
[101 118]
[102 117]
[104 116]
[105 115]
[171 201]
[172 200]
[173 199]
[175 197]
[176 196]
[177 195]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
