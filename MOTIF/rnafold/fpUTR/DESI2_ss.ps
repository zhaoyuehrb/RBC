%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUUCCCCACGUGUCUGCCGCCUAGGGGAGGUGCCUCAUCCGGAGCGGGCCGCCAACGGUCCGGCCCCGUCCGCACAGACGCUCCUGUCGGCGGCGCCCGGGAGCGGCUCGGCUGCCCGAUGCUUCCGCCCCGGCUGCCGCGGGCCGGGCUGUACGCUUAGUGCCCGGCUCAGGCCCCCUGAAGCGCCCGCGGGGGUGAGAGCGGCCUCCGGCCCCGCGGAGACGGAGCGGCUUGAGGACGAGGCGGCGGCCG\
CGGGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-38.41091156 758.09320068]
[-35.99363708 738.86285400]
[-35.81714630 723.86389160]
[-35.64065552 708.86492920]
[-35.46416473 693.86596680]
[-35.28767395 678.86700439]
[-42.87469101 666.04962158]
[-34.97555542 652.34143066]
[-34.79906464 637.34246826]
[-34.62257385 622.34350586]
[-37.67581177 615.64117432]
[-34.35473251 607.16937256]
[-34.00177765 592.17352295]
[-33.64882278 577.17767334]
[-33.29586792 562.18182373]
[-40.73154831 549.27600098]
[-32.67166519 535.66174316]
[-32.31871033 520.66589355]
[-31.96575546 505.67001343]
[-31.61280060 490.67416382]
[-31.25984383 475.67834473]
[-30.90688896 460.68249512]
[-30.55393410 445.68664551]
[-30.20097923 430.69079590]
[-29.84802246 415.69494629]
[-36.68518066 412.61221313]
[-57.19665527 403.36398315]
[-68.20100403 413.55734253]
[-79.20535278 423.75067139]
[-90.14954376 434.00860596]
[-101.03319550 444.33071899]
[-111.91684723 454.65283203]
[-116.05778503 470.52053833]
[-131.93968201 474.60678101]
[-143.22462463 462.70791626]
[-138.30360413 447.06454468]
[-122.23896790 443.76916504]
[-111.35530853 433.44705200]
[-100.47165680 423.12493896]
[-97.79021454 416.26544189]
[-89.39869690 412.74633789]
[-78.39434814 402.55297852]
[-67.38999939 392.35964966]
[-74.50469208 379.15429688]
[-89.07044220 382.73742676]
[-97.27880859 395.97604370]
[-112.10160065 399.40234375]
[-124.67198944 391.49533081]
[-139.23773193 395.07849121]
[-153.80348206 398.66162109]
[-168.36923218 402.24478149]
[-182.93498230 405.82791138]
[-197.50073242 409.41107178]
[-212.06649780 412.99420166]
[-223.51765442 424.73315430]
[-239.34051514 420.42398071]
[-243.25787354 404.49960327]
[-231.23989868 393.34164429]
[-215.64962769 398.42846680]
[-201.08387756 394.84530640]
[-186.51812744 391.26217651]
[-171.95237732 387.67901611]
[-157.38662720 384.09588623]
[-142.82087708 380.51272583]
[-128.25512695 376.92959595]
[-120.78755188 364.09329224]
[-106.06685638 360.25198364]
[-92.65358734 368.17169189]
[-78.08783722 364.58853149]
[-66.01512146 355.68630981]
[-58.28703308 342.83032227]
[-50.55894089 329.97433472]
[-42.83084869 317.11834717]
[-35.10275650 304.26232910]
[-35.17696762 289.36791992]
[-21.43565369 281.52655029]
[-13.70756054 268.67056274]
[-12.95747948 261.34387207]
[-5.81215000 255.70953369]
[2.06667089 242.94535828]
[2.16771340 228.05108643]
[16.00033569 220.37196350]
[23.87915802 207.60778809]
[31.75797844 194.84361267]
[39.63679886 182.07943726]
[47.51562119 169.31526184]
[55.39443970 156.55108643]
[56.23067474 149.23371887]
[63.44180298 143.68383789]
[71.47026062 131.01324463]
[79.49872589 118.34265900]
[72.62828064 97.25330353]
[83.55209351 77.94956207]
[78.20129395 63.93638992]
[72.85050201 49.92321777]
[67.49970245 35.91004562]
[62.14891052 21.89687347]
[56.79811478 7.88370132]
[44.64704895 -2.24853063]
[47.33525467 -16.89854050]
[41.98445892 -30.91171265]
[36.63366318 -44.92488480]
[31.28286743 -58.93805695]
[25.93207359 -72.95123291]
[19.96746063 -79.82327271]
[20.60182381 -87.16088867]
[15.41627789 -101.23604584]
[10.23073196 -115.31120300]
[5.04518604 -129.38636780]
[-5.03883934 -133.34716797]
[-11.16771698 -142.01388550]
[-11.52619076 -152.40342712]
[-6.23675060 -161.09738159]
[-11.08966732 -175.29066467]
[-15.94258404 -189.48393250]
[-30.81090736 -193.92382812]
[-40.20315933 -206.27555847]
[-40.50782394 -221.78964233]
[-31.60775375 -234.50059509]
[-16.92520714 -239.52079773]
[-2.10592246 -234.91987610]
[7.15178251 -222.46699524]
[7.28813171 -206.95051575]
[-1.74930358 -194.33685303]
[3.10361290 -180.14356995]
[7.95652962 -165.95030212]
[23.40721893 -154.29187012]
[19.12034607 -134.57191467]
[24.30589104 -120.49674988]
[29.49143791 -106.42159271]
[34.67698288 -92.34643555]
[39.94524384 -78.30202484]
[45.29603958 -64.28884888]
[50.64683533 -50.27568054]
[55.99763107 -36.26250839]
[61.34842682 -22.24933624]
[73.11676788 -13.11942005]
[70.81128693 2.53290629]
[76.16207886 16.54607773]
[81.51287842 30.55924988]
[86.86367035 44.57242203]
[92.21446991 58.58559418]
[97.56526184 72.59877014]
[99.83580017 64.95745850]
[103.37070465 57.55696869]
[108.14114380 50.55533981]
[116.46552277 38.07716751]
[124.78990173 25.59899902]
[133.11427307 13.12083054]
[141.43865967 0.64266104]
[149.76303101 -11.83550835]
[158.08741760 -24.31367683]
[150.27862549 -37.42800522]
[148.94180298 -52.63246536]
[154.34236145 -66.90820312]
[165.40802002 -77.42076111]
[179.94168091 -82.08286285]
[195.05769348 -79.96884918]
[207.75474548 -71.49845123]
[215.51182556 -58.35347366]
[216.78877258 -43.14386368]
[211.33204651 -28.88950348]
[200.22506714 -18.42060280]
[185.67315674 -13.81577015]
[170.56558228 -15.98929787]
[162.24121094 -3.51112890]
[153.91682434 8.96704006]
[145.59245300 21.44520950]
[137.26806641 33.92337799]
[128.94369507 46.40154648]
[120.61930847 58.87971878]
[130.87721252 69.82390594]
[143.86759949 62.32390594]
[156.85798645 54.82390594]
[169.84835815 47.32390594]
[182.83874512 39.82390594]
[193.53266907 26.66805840]
[209.13475037 33.30215454]
[207.07901001 50.13100433]
[190.33874512 52.81428909]
[177.34835815 60.31428909]
[164.35798645 67.81428528]
[151.36759949 75.31428528]
[138.37721252 82.81428528]
[139.82415771 90.17338562]
[152.92774963 82.87297821]
[163.92007446 93.07930756]
[157.61006165 106.68753052]
[142.71804810 104.89158630]
[144.16500854 112.25068665]
[159.02789307 114.27417755]
[173.89077759 116.29767609]
[188.75366211 118.32116699]
[203.61656189 120.34465790]
[218.47944641 122.36814880]
[233.34233093 124.39163971]
[248.20523071 126.41513824]
[262.92300415 120.61019897]
[274.49020386 129.99366760]
[289.35308838 132.01716614]
[298.24359131 130.07795715]
[304.37854004 134.15290833]
[319.21658325 136.35113525]
[334.05465698 138.54936218]
[349.09777832 132.01971436]
[362.11129761 141.99868774]
[359.70803833 158.22077942]
[344.36022949 163.99809265]
[331.85641479 153.38740540]
[317.01837158 151.18917847]
[302.18032837 148.99095154]
[287.32958984 146.88005066]
[272.46670532 144.85656738]
[258.81201172 150.80624390]
[246.18173218 141.27803040]
[231.31884766 139.25453186]
[216.45594788 137.23103333]
[201.59306335 135.20755005]
[186.73017883 133.18405151]
[171.86729431 131.16056824]
[157.00439453 129.13706970]
[142.14151001 127.11357880]
[113.49774933 136.38696289]
[92.16931152 126.37111664]
[84.14085388 139.04170227]
[76.11239624 151.71229553]
[68.15861511 164.42990112]
[60.27979660 177.19407654]
[52.40097427 189.95825195]
[44.52215576 202.72242737]
[36.64333344 215.48660278]
[28.76451302 228.25077820]
[28.09992409 244.05801392]
[14.83084679 250.82417297]
[6.95202541 263.58834839]
[-0.85156620 276.39865112]
[-8.57965851 289.25463867]
[-9.05821323 305.06863403]
[-22.24676132 311.99041748]
[-29.97485352 324.84643555]
[-37.70294571 337.70242310]
[-45.43103790 350.55841064]
[-53.15913010 363.41439819]
[-14.85217571 416.04791260]
[-15.20513153 431.04373169]
[-15.55808735 446.03958130]
[-15.91104221 461.03543091]
[-16.26399803 476.03128052]
[-16.61695290 491.02713013]
[-16.96990776 506.02297974]
[-17.32286453 521.01879883]
[-17.67581940 536.01464844]
[-10.26538372 549.99310303]
[-18.30002022 562.53479004]
[-18.65297508 577.53063965]
[-19.00592995 592.52648926]
[-19.35888481 607.52233887]
[-19.62361336 622.51995850]
[-19.80010223 637.51892090]
[-19.97659302 652.51788330]
[-12.40220070 666.40814209]
[-20.28871346 679.04351807]
[-20.46520424 694.04248047]
[-20.64169312 709.04144287]
[-20.81818390 724.04040527]
[-20.99467278 739.03936768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 266]
[3 265]
[4 264]
[5 263]
[6 262]
[8 260]
[9 259]
[10 258]
[12 257]
[13 256]
[14 255]
[15 254]
[17 252]
[18 251]
[19 250]
[20 249]
[21 248]
[22 247]
[23 246]
[24 245]
[25 244]
[27 43]
[28 42]
[29 41]
[30 39]
[31 38]
[32 37]
[44 69]
[45 68]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[70 243]
[71 242]
[72 241]
[73 240]
[74 239]
[76 237]
[77 236]
[79 235]
[80 234]
[82 232]
[83 231]
[84 230]
[85 229]
[86 228]
[87 227]
[89 226]
[90 225]
[91 224]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
[100 136]
[101 135]
[102 134]
[103 133]
[104 132]
[106 131]
[107 130]
[108 129]
[109 128]
[113 126]
[114 125]
[115 124]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
[190 222]
[191 221]
[192 220]
[193 219]
[194 218]
[195 217]
[196 216]
[197 215]
[199 213]
[200 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
