%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHROOM2)
} def

/sequence { (\
UCUGCGGCGCUCGGAGCCUCCCUUGCGAUCCCACGGCCGGGACUGCCCGGAGUGCAUGGGCGCGGGCCAGGGACGCUGAGCGGUCGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 88 0.734665996 ubox
4 87 0.999285115 ubox
4 89 0.015381974 ubox
5 86 0.999767157 ubox
5 88 0.015213461 ubox
6 85 0.999540551 ubox
6 87 0.013509804 ubox
6 90 0.010745570 ubox
7 55 0.004025531 ubox
7 84 0.970595386 ubox
7 89 0.010824368 ubox
8 54 0.004030272 ubox
8 82 0.725624504 ubox
8 83 0.687452726 ubox
8 86 0.003380780 ubox
8 88 0.010810078 ubox
9 53 0.004031183 ubox
9 81 0.998357825 ubox
9 87 0.010721843 ubox
10 52 0.004032990 ubox
10 80 0.999895180 ubox
10 86 0.010676287 ubox
11 51 0.003814764 ubox
11 79 0.999612733 ubox
11 83 0.008834588 ubox
12 75 0.003786015 ubox
12 78 0.998499012 ubox
12 82 0.010663059 ubox
13 21 0.017922053 ubox
13 22 0.014453675 ubox
13 48 0.004004543 ubox
13 74 0.006751540 ubox
13 77 0.856847932 ubox
13 81 0.010559818 ubox
14 20 0.018050453 ubox
14 21 0.014438857 ubox
14 24 0.004490910 ubox
14 47 0.004010677 ubox
14 76 0.813198706 ubox
15 19 0.015733220 ubox
15 23 0.004775304 ubox
15 77 0.475622172 ubox
16 22 0.004777290 ubox
16 46 0.004000787 ubox
16 55 0.004930232 ubox
16 67 0.003308527 ubox
16 76 0.579260021 ubox
17 45 0.003996273 ubox
17 54 0.004935273 ubox
17 66 0.003322725 ubox
17 71 0.719910928 ubox
17 72 0.124597326 ubox
17 75 0.595842089 ubox
18 52 0.004950013 ubox
18 65 0.003314418 ubox
18 70 0.720195188 ubox
18 71 0.124805153 ubox
18 72 0.141080424 ubox
19 42 0.003926549 ubox
19 51 0.004955056 ubox
19 66 0.004196396 ubox
19 69 0.705923256 ubox
19 70 0.118737485 ubox
19 71 0.137524749 ubox
19 72 0.055817111 ubox
19 73 0.657186068 ubox
20 41 0.004029306 ubox
20 50 0.004922525 ubox
20 65 0.008059025 ubox
20 66 0.219732090 ubox
20 70 0.138910853 ubox
20 71 0.069163397 ubox
20 72 0.664140966 ubox
21 40 0.004027822 ubox
21 49 0.004877132 ubox
21 64 0.007972294 ubox
21 65 0.220310554 ubox
21 66 0.192119059 ubox
21 70 0.069594342 ubox
21 71 0.664076300 ubox
21 72 0.006740278 ubox
22 39 0.004019890 ubox
22 64 0.217420703 ubox
22 65 0.192012450 ubox
22 66 0.696785000 ubox
22 70 0.652692964 ubox
22 71 0.007806093 ubox
23 64 0.134767961 ubox
23 65 0.729643657 ubox
23 66 0.020507153 ubox
23 69 0.608369291 ubox
23 70 0.008665415 ubox
24 56 0.012597053 ubox
24 62 0.082994578 ubox
24 64 0.909523609 ubox
24 65 0.037077173 ubox
24 69 0.034135328 ubox
25 37 0.003163464 ubox
25 46 0.007350558 ubox
25 55 0.013943001 ubox
25 61 0.084394970 ubox
25 63 0.951177671 ubox
25 67 0.261842641 ubox
25 68 0.044580427 ubox
25 76 0.024645858 ubox
26 35 0.006528912 ubox
26 36 0.003189567 ubox
26 45 0.007823516 ubox
26 54 0.013652477 ubox
26 58 0.006313207 ubox
26 60 0.084131677 ubox
26 62 0.951477628 ubox
26 64 0.134561079 ubox
26 66 0.255476060 ubox
26 75 0.024925513 ubox
27 34 0.010472052 ubox
27 44 0.010554288 ubox
27 53 0.011357293 ubox
27 57 0.005534866 ubox
27 61 0.947111326 ubox
27 63 0.174011289 ubox
27 74 0.024920283 ubox
28 57 0.015780597 ubox
29 36 0.007647903 ubox
29 42 0.043136620 ubox
29 51 0.008453668 ubox
29 56 0.015496001 ubox
29 59 0.102096438 ubox
29 60 0.833778410 ubox
29 65 0.007517331 ubox
29 66 0.008357887 ubox
29 73 0.024893542 ubox
30 35 0.010255565 ubox
30 36 0.021791673 ubox
30 41 0.046982761 ubox
30 50 0.008407067 ubox
30 58 0.156218853 ubox
30 59 0.841400761 ubox
30 60 0.495098151 ubox
30 64 0.007464484 ubox
30 65 0.029446153 ubox
30 66 0.042051188 ubox
30 72 0.024979992 ubox
31 35 0.021901005 ubox
31 40 0.047000466 ubox
31 49 0.008313261 ubox
31 58 0.840575498 ubox
31 59 0.497288759 ubox
31 60 0.009981460 ubox
31 64 0.029334436 ubox
31 65 0.052875566 ubox
31 71 0.024978088 ubox
32 39 0.046959037 ubox
32 54 0.856871270 ubox
32 58 0.493311522 ubox
32 59 0.009517001 ubox
32 64 0.052883938 ubox
32 70 0.024931208 ubox
33 53 0.865782037 ubox
33 57 0.454622425 ubox
34 52 0.872136676 ubox
34 54 0.363441985 ubox
34 58 0.004332590 ubox
34 62 0.027762009 ubox
35 47 0.007991660 ubox
35 53 0.365720293 ubox
35 57 0.004330011 ubox
35 61 0.027558162 ubox
35 68 0.025965453 ubox
36 46 0.008002513 ubox
36 53 0.048700337 ubox
36 55 0.122710009 ubox
36 67 0.026004712 ubox
37 45 0.007839666 ubox
37 50 0.992420199 ubox
37 52 0.030922255 ubox
37 54 0.090332207 ubox
37 59 0.027383409 ubox
37 65 0.004978927 ubox
37 66 0.025486367 ubox
38 49 0.998053594 ubox
38 58 0.027293174 ubox
38 64 0.006760991 ubox
38 65 0.024903736 ubox
39 47 0.006200546 ubox
39 48 0.998149919 ubox
39 57 0.025957236 ubox
39 63 0.008114592 ubox
40 46 0.008623231 ubox
40 47 0.998125107 ubox
40 48 0.004104281 ubox
41 46 0.993645565 ubox
41 47 0.005321096 ubox
42 53 0.026462590 ubox
43 52 0.026722187 ubox
43 65 0.018504443 ubox
44 51 0.026559295 ubox
44 56 0.003460610 ubox
44 62 0.035107332 ubox
44 64 0.017173687 ubox
45 55 0.003496278 ubox
45 61 0.046297354 ubox
45 63 0.013944325 ubox
45 67 0.018998500 ubox
46 54 0.003489914 ubox
46 60 0.046470644 ubox
46 62 0.013617844 ubox
46 66 0.019383174 ubox
47 59 0.046587744 ubox
47 60 0.013207529 ubox
47 65 0.019660280 ubox
48 58 0.046599632 ubox
48 59 0.013172441 ubox
48 64 0.019652695 ubox
49 57 0.044017718 ubox
49 63 0.013470187 ubox
49 68 0.003732462 ubox
50 67 0.003728247 ubox
52 61 0.009785661 ubox
52 63 0.072591684 ubox
53 60 0.009728539 ubox
53 62 0.073174630 ubox
53 64 0.003702574 ubox
54 61 0.073463538 ubox
54 63 0.007094765 ubox
55 60 0.073362912 ubox
55 62 0.007174627 ubox
59 68 0.029559998 ubox
59 90 0.003969523 ubox
60 67 0.029801573 ubox
60 89 0.004056973 ubox
61 66 0.029852357 ubox
61 88 0.004060075 ubox
62 87 0.004062962 ubox
63 86 0.004062931 ubox
64 85 0.004038336 ubox
65 84 0.003361015 ubox
66 81 0.004216368 ubox
67 80 0.004225572 ubox
68 78 0.004237147 ubox
69 77 0.004280391 ubox
70 76 0.004279902 ubox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
11 79 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
19 69 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
