%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FARSA)
} def

/sequence { (\
CCCCCCGCCCACCCGGGCCCGGACACGCUGAGCACACUGGAAGGAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.005654153 ubox
1 22 0.086655022 ubox
1 40 0.042552539 ubox
1 44 0.265824285 ubox
2 16 0.005945118 ubox
2 17 0.007903888 ubox
2 21 0.086881621 ubox
2 22 0.171475928 ubox
2 39 0.042531289 ubox
2 40 0.041294309 ubox
2 43 0.266439927 ubox
2 44 0.269652782 ubox
3 15 0.005916699 ubox
3 16 0.008154811 ubox
3 17 0.012323402 ubox
3 21 0.171045796 ubox
3 22 0.352928770 ubox
3 39 0.041097038 ubox
3 40 0.046953828 ubox
3 43 0.269507006 ubox
3 44 0.250479283 ubox
4 15 0.008104929 ubox
4 16 0.011735266 ubox
4 17 0.126661222 ubox
4 21 0.353816247 ubox
4 22 0.221384819 ubox
4 39 0.046849492 ubox
4 40 0.059356466 ubox
4 43 0.250392278 ubox
4 44 0.241844642 ubox
5 15 0.010590354 ubox
5 16 0.130498824 ubox
5 21 0.221907167 ubox
5 22 0.166981223 ubox
5 39 0.058956361 ubox
5 40 0.221749694 ubox
5 43 0.241551549 ubox
5 44 0.346864248 ubox
6 15 0.130620782 ubox
6 21 0.166988981 ubox
6 30 0.003608872 ubox
6 39 0.221750744 ubox
6 43 0.347658372 ubox
7 14 0.126778365 ubox
7 18 0.907807656 ubox
7 20 0.068185118 ubox
7 28 0.006698836 ubox
7 33 0.003595865 ubox
7 38 0.022909921 ubox
7 47 0.303170290 ubox
8 16 0.011249594 ubox
8 17 0.912183183 ubox
8 27 0.006718868 ubox
8 32 0.003578150 ubox
8 40 0.019461498 ubox
8 44 0.046034216 ubox
8 46 0.316135137 ubox
9 15 0.011403200 ubox
9 16 0.912364948 ubox
9 17 0.006922385 ubox
9 39 0.018666706 ubox
9 40 0.105018658 ubox
9 43 0.045526018 ubox
9 44 0.366853582 ubox
10 15 0.911048485 ubox
10 16 0.007430094 ubox
10 30 0.003321550 ubox
10 39 0.105295122 ubox
10 43 0.367012692 ubox
11 38 0.101586266 ubox
11 47 0.005494886 ubox
12 40 0.018730582 ubox
12 46 0.005871483 ubox
13 22 0.014253845 ubox
13 39 0.016990716 ubox
13 40 0.371253933 ubox
13 44 0.006709596 ubox
14 21 0.014297324 ubox
14 30 0.003405923 ubox
14 39 0.371515596 ubox
14 43 0.006712918 ubox
15 20 0.014113073 ubox
15 29 0.003245357 ubox
15 38 0.370616606 ubox
16 29 0.013429384 ubox
16 37 0.370153179 ubox
17 28 0.016407895 ubox
17 33 0.386005341 ubox
17 47 0.004347751 ubox
18 27 0.016351014 ubox
18 32 0.386205641 ubox
18 40 0.008178424 ubox
18 44 0.010002969 ubox
18 46 0.009497299 ubox
19 39 0.007416525 ubox
19 40 0.724341454 ubox
19 43 0.008352671 ubox
19 44 0.078514469 ubox
20 27 0.135408650 ubox
20 30 0.434290884 ubox
20 39 0.726106808 ubox
20 43 0.078650845 ubox
21 26 0.145580287 ubox
21 29 0.435646986 ubox
21 38 0.725085860 ubox
21 48 0.005164747 ubox
22 28 0.434892257 ubox
22 37 0.723107893 ubox
22 47 0.004130349 ubox
22 48 0.048117500 ubox
23 47 0.069111053 ubox
24 30 0.056874350 ubox
24 39 0.076152600 ubox
24 46 0.070823242 ubox
25 29 0.046292181 ubox
25 38 0.073112713 ubox
25 47 0.212757147 ubox
26 39 0.074560324 ubox
26 46 0.226347698 ubox
27 33 0.708017326 ubox
27 38 0.071902011 ubox
27 47 0.113130922 ubox
28 32 0.703750840 ubox
28 40 0.064333635 ubox
28 43 0.094978970 ubox
28 44 0.236211851 ubox
28 46 0.118061100 ubox
29 36 0.132154003 ubox
29 39 0.061623868 ubox
29 42 0.094353319 ubox
29 43 0.234742901 ubox
29 45 0.117276508 ubox
30 35 0.137061853 ubox
30 38 0.033320692 ubox
30 48 0.021775665 ubox
31 38 0.134026387 ubox
31 47 0.020141977 ubox
32 37 0.137642573 ubox
32 47 0.043306821 ubox
33 39 0.253373203 ubox
33 46 0.045707572 ubox
34 38 0.205556711 ubox
34 47 0.086016719 ubox
35 46 0.091726977 ubox
36 47 0.294982740 ubox
37 43 0.058589715 ubox
37 44 0.106816184 ubox
37 46 0.315771479 ubox
38 42 0.052944816 ubox
38 43 0.104381088 ubox
38 45 0.314100779 ubox
39 48 0.013640071 ubox
40 47 0.011764672 ubox
40 48 0.020156883 ubox
41 47 0.020809009 ubox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
27 33 0.9500000 lbox
28 32 0.9500000 lbox
showpage
end
%%EOF
