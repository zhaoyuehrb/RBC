%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCUGAGGUGGGCGUGGCCAGACCAGCUUUAGGUCCGGGGAGUGUCUCGCCAGCGGCAGCACACCCCUGUAAGUGGUGGCCAGGGCUGCCGUGGCAAAAUGAGCUGUCAACUUUAGGUUGACAGGGGUGUGGCCGCGACCGCAAGGGCUUUUGUUGCCGGGUGGACCCAACAGGG\
) } def
/len { sequence length } bind def

/coor [
[201.58680725 500.26184082]
[213.68066406 490.68362427]
[212.10401917 475.76669312]
[210.52735901 460.84979248]
[208.95069885 445.93289185]
[207.37405396 431.01599121]
[205.79739380 416.09906006]
[189.30072021 402.14859009]
[183.06631470 382.99954224]
[187.51860046 364.86404419]
[199.84176636 352.84753418]
[193.94985962 339.05316162]
[188.05793762 325.25875854]
[182.16601562 311.46435547]
[170.05139160 302.79919434]
[171.74618530 287.06903076]
[165.85427856 273.27462769]
[159.96235657 259.48025513]
[154.07043457 245.68585205]
[148.17851257 231.89144897]
[142.28660583 218.09706116]
[136.39468384 204.30265808]
[130.50276184 190.50827026]
[118.38814545 181.84310913]
[120.08293915 166.11293030]
[114.19101715 152.31854248]
[108.29910278 138.52413940]
[100.12373352 140.81985474]
[91.35658264 141.33818054]
[82.39218140 139.93476868]
[73.65866852 136.55419922]
[65.59751129 131.23757935]
[58.64160156 124.12533569]
[53.19285583 115.45506287]
[49.60035706 105.55435181]
[48.14030838 94.82868958]
[48.99876785 83.74491882]
[52.25820541 72.81092834]
[57.88867569 62.55243301]
[43.94396591 57.02566910]
[29.99925995 51.49890518]
[16.05455017 45.97214127]
[2.10984278 40.44537735]
[-7.05076742 40.18881989]
[-12.02970600 34.69731522]
[-25.87527275 28.92667580]
[-39.72084045 23.15603638]
[-53.56640625 17.38539505]
[-67.46207428 11.73647594]
[-81.40678406 6.20971251]
[-90.56739807 5.95315552]
[-95.54633331 0.46165106]
[-109.39189911 -5.30898952]
[-123.23746490 -11.07962990]
[-140.18367004 -11.59209251]
[-144.38241577 -28.01789284]
[-129.76086426 -36.59965897]
[-117.46682739 -24.92519569]
[-103.62126160 -19.15455627]
[-89.77569580 -13.38391495]
[-75.88002014 -7.73499584]
[-61.93531418 -2.20823240]
[-54.53700638 -2.66809273]
[-47.79576492 3.53982878]
[-33.95019913 9.31046963]
[-20.10463333 15.08111000]
[-6.25906610 20.85174942]
[7.63660622 26.50066948]
[21.58131409 32.02743149]
[35.52602386 37.55419540]
[49.47072983 43.08095932]
[63.41543961 48.60772324]
[69.65602875 44.44778824]
[60.06806564 32.91214752]
[46.14502716 27.33102417]
[41.41811371 13.09528351]
[49.23757935 0.29465958]
[64.06129456 -1.99826968]
[75.38278961 7.84163332]
[75.17795563 22.84000206]
[82.13720703 36.12792206]
[88.37779236 31.96798897]
[88.64104462 16.97029877]
[88.90428925 1.97260845]
[89.16754150 -13.02508163]
[81.67362213 -26.95891762]
[89.63309479 -39.54843903]
[89.89633942 -54.54613113]
[84.12890625 -70.48893738]
[97.85208130 -80.44438171]
[111.21741486 -70.01345825]
[104.89403534 -54.28288269]
[104.63078308 -39.28519058]
[112.14353180 -26.42409134]
[104.16522980 -12.76183319]
[103.90198517 2.23585701]
[103.63873291 17.23354721]
[103.37548828 32.23123550]
[109.98795319 35.77033997]
[117.06616211 22.54540062]
[124.14436340 9.32046127]
[131.22279358 -3.90435982]
[144.44749451 3.17428470]
[137.36930847 16.39866638]
[130.29109192 29.62360573]
[123.21289062 42.84854507]
[129.82536316 46.38764572]
[142.15859985 37.85001755]
[154.49185181 29.31238747]
[166.82508850 20.77475929]
[179.15834045 12.23712921]
[191.49157715 3.69949961]
[203.82481384 -4.83813000]
[216.15806580 -13.37576008]
[228.49130249 -21.91338921]
[238.07307434 -35.90003204]
[254.16560364 -30.56461334]
[253.49356079 -13.62399101]
[237.02893066 -9.58014679]
[224.69569397 -1.04251683]
[212.36244202 7.49511290]
[200.02920532 16.03274155]
[187.69596863 24.57037163]
[175.36271667 33.10800171]
[163.02947998 41.64562988]
[150.69622803 50.18326187]
[138.36299133 58.72089005]
[147.73934937 103.67470551]
[122.09349823 132.63223267]
[127.98541260 146.42662048]
[133.87733459 160.22102356]
[146.41339111 169.87284851]
[144.29716492 184.61634827]
[150.18908691 198.41075134]
[156.08099365 212.20513916]
[161.97291565 225.99954224]
[167.86483765 239.79393005]
[173.75674438 253.58831787]
[179.64866638 267.38272095]
[185.54058838 281.17712402]
[198.07664490 290.82894897]
[195.96041870 305.57244873]
[201.85232544 319.36685181]
[207.74424744 333.16122437]
[213.63616943 346.95562744]
[229.76124573 345.93783569]
[245.46479797 353.71725464]
[255.97309875 369.42080688]
[257.39321899 389.63836670]
[268.58724976 399.62304688]
[279.78128052 409.60772705]
[295.22927856 407.18002319]
[308.59686279 415.29434204]
[313.57226562 430.11929321]
[307.80624390 444.65499878]
[294.02136230 452.03817749]
[278.72640991 448.78268433]
[269.14318848 436.42565918]
[269.79660034 420.80172729]
[258.60256958 410.81704712]
[247.40855408 400.83236694]
[240.73498535 404.25488281]
[247.57978821 417.60214233]
[234.23243713 424.44671631]
[227.38786316 411.09991455]
[220.71430969 414.52243042]
[222.29095459 429.43933105]
[223.86761475 444.35623169]
[225.44425964 459.27313232]
[227.02091980 474.19006348]
[228.59757996 489.10696411]
[242.42657471 495.94525146]
[250.34362793 509.18624878]
[249.82240295 524.60479736]
[241.02923584 537.28088379]
[226.77000427 543.16967773]
[211.59475708 540.39202881]
[200.34587097 529.83422852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[11 145]
[12 144]
[13 143]
[14 142]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[25 131]
[26 130]
[27 129]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[52 60]
[53 59]
[54 58]
[82 98]
[83 97]
[84 96]
[85 95]
[87 93]
[88 92]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
