%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL20)
} def

/sequence { (\
CGGAAGCGCUCGUGACCACCAUUUCCGACCCGGGCAAGAUGGCAGCGGCGCUGCGCGUGCGUUGUUGAGUGUUCGGGACGCCGGCCUGCAGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.039455626 ubox
1 53 0.004046545 ubox
1 55 0.003507808 ubox
1 75 0.005791952 ubox
2 17 0.006984286 ubox
2 26 0.040235197 ubox
2 52 0.008089557 ubox
2 54 0.008195221 ubox
2 74 0.005762012 ubox
2 96 0.029081683 ubox
3 16 0.006987885 ubox
3 25 0.040236763 ubox
3 51 0.003997664 ubox
3 73 0.004516971 ubox
3 74 0.004207321 ubox
3 95 0.020938018 ubox
4 24 0.040103909 ubox
4 73 0.003535305 ubox
5 23 0.039183155 ubox
5 52 0.968625953 ubox
5 73 0.004431153 ubox
6 13 0.010657728 ubox
6 22 0.026683611 ubox
6 51 0.998873822 ubox
6 72 0.006859737 ubox
6 95 0.011967476 ubox
7 12 0.010993983 ubox
7 14 0.004891172 ubox
7 50 0.999012967 ubox
7 71 0.007694496 ubox
7 94 0.012002805 ubox
8 13 0.003181086 ubox
8 49 0.999011028 ubox
8 51 0.003721607 ubox
8 70 0.007716950 ubox
8 93 0.011968676 ubox
9 48 0.993692773 ubox
9 50 0.003728084 ubox
9 69 0.007720721 ubox
9 92 0.011952010 ubox
10 28 0.004902839 ubox
10 47 0.388229348 ubox
10 48 0.102330022 ubox
10 68 0.007685227 ubox
10 91 0.011037775 ubox
11 27 0.005532370 ubox
11 47 0.919242495 ubox
11 67 0.007394867 ubox
11 91 0.003641862 ubox
12 19 0.012095589 ubox
12 22 0.022977298 ubox
12 26 0.005538585 ubox
12 43 0.003494885 ubox
12 46 0.932144700 ubox
12 66 0.005091684 ubox
12 89 0.009614378 ubox
13 18 0.011360403 ubox
13 21 0.025981768 ubox
13 44 0.405410394 ubox
13 45 0.911306481 ubox
13 47 0.007144548 ubox
13 88 0.009460843 ubox
13 90 0.005771952 ubox
14 20 0.026021270 ubox
14 25 0.005409398 ubox
14 43 0.428573882 ubox
14 46 0.014937786 ubox
14 63 0.003615989 ubox
14 87 0.006422564 ubox
14 89 0.006056016 ubox
15 24 0.005322367 ubox
15 62 0.003686072 ubox
16 42 0.887259331 ubox
16 61 0.003693190 ubox
16 84 0.004472921 ubox
17 41 0.886928214 ubox
17 59 0.003602553 ubox
17 83 0.004468865 ubox
18 40 0.855805353 ubox
18 58 0.003594733 ubox
19 33 0.013315529 ubox
19 34 0.016709141 ubox
19 42 0.457803205 ubox
19 57 0.003577058 ubox
19 84 0.009543218 ubox
20 32 0.013336568 ubox
20 33 0.016149869 ubox
20 41 0.459358307 ubox
20 83 0.009544055 ubox
21 40 0.461976206 ubox
22 34 0.005710223 ubox
22 37 0.498598803 ubox
22 38 0.233449364 ubox
22 39 0.464450141 ubox
23 34 0.023742407 ubox
23 36 0.488682803 ubox
23 37 0.245153045 ubox
23 38 0.457602397 ubox
23 39 0.020111187 ubox
24 33 0.017239348 ubox
24 34 0.765426649 ubox
24 36 0.242869892 ubox
24 37 0.311728873 ubox
24 38 0.019108515 ubox
24 39 0.005294509 ubox
25 32 0.017844837 ubox
25 33 0.841797831 ubox
25 34 0.535890952 ubox
25 38 0.004345284 ubox
26 32 0.842367842 ubox
26 33 0.535892370 ubox
26 80 0.010679238 ubox
27 31 0.788424394 ubox
27 79 0.010873785 ubox
29 77 0.042393607 ubox
30 76 0.042649665 ubox
31 75 0.042666604 ubox
32 74 0.042663049 ubox
33 73 0.042545659 ubox
34 72 0.042638311 ubox
35 71 0.042662234 ubox
36 70 0.042017854 ubox
40 67 0.013886858 ubox
40 69 0.004529953 ubox
41 66 0.032730279 ubox
42 54 0.003659290 ubox
42 65 0.036347352 ubox
43 53 0.003705950 ubox
43 64 0.036722722 ubox
43 67 0.022453929 ubox
44 52 0.003720573 ubox
44 63 0.036693086 ubox
44 66 0.022724493 ubox
45 51 0.003722866 ubox
45 62 0.036702393 ubox
45 65 0.022927629 ubox
46 50 0.003695809 ubox
46 61 0.036707489 ubox
46 64 0.022951583 ubox
47 60 0.034764773 ubox
47 63 0.022877015 ubox
47 96 0.003214940 ubox
48 58 0.031995232 ubox
48 60 0.010068085 ubox
48 62 0.022938239 ubox
48 95 0.003330578 ubox
49 57 0.033846104 ubox
49 59 0.014200832 ubox
49 61 0.022951079 ubox
49 94 0.003331498 ubox
50 56 0.033852950 ubox
50 58 0.014217033 ubox
50 60 0.022950394 ubox
50 93 0.003328014 ubox
51 55 0.033607255 ubox
51 57 0.014214370 ubox
51 59 0.022944611 ubox
53 89 0.003435984 ubox
53 95 0.995387616 ubox
54 88 0.003425778 ubox
54 94 0.998835422 ubox
55 93 0.998993904 ubox
55 95 0.005632309 ubox
56 83 0.003195793 ubox
56 92 0.998837063 ubox
56 94 0.005658388 ubox
57 82 0.003301587 ubox
57 93 0.005642920 ubox
58 90 0.997560386 ubox
58 92 0.005226546 ubox
59 81 0.004762221 ubox
59 89 0.998994739 ubox
59 95 0.003340685 ubox
60 80 0.004787463 ubox
60 88 0.998692253 ubox
60 94 0.003351753 ubox
61 79 0.004878987 ubox
61 85 0.030250217 ubox
61 87 0.911899747 ubox
61 89 0.006193850 ubox
61 93 0.003350135 ubox
62 78 0.004872624 ubox
62 84 0.030792337 ubox
62 88 0.006644518 ubox
63 68 0.003346737 ubox
63 77 0.004534278 ubox
63 83 0.029779710 ubox
63 90 0.003415002 ubox
64 82 0.029196998 ubox
64 85 0.995393305 ubox
64 89 0.003497204 ubox
65 76 0.003962347 ubox
65 84 0.996607749 ubox
65 88 0.003390019 ubox
66 75 0.005307494 ubox
66 83 0.994306779 ubox
67 74 0.005907471 ubox
67 82 0.996825992 ubox
68 73 0.005545751 ubox
68 87 0.025104500 ubox
69 79 0.025876568 ubox
69 81 0.997935787 ubox
69 86 0.028989090 ubox
70 78 0.025792353 ubox
70 80 0.997686840 ubox
71 79 0.997944657 ubox
71 85 0.029538769 ubox
72 78 0.990881684 ubox
72 84 0.021039733 ubox
73 77 0.892879010 ubox
73 83 0.004096315 ubox
73 84 0.023854816 ubox
74 83 0.033209679 ubox
75 82 0.033604371 ubox
76 81 0.033574614 ubox
76 96 0.007494836 ubox
77 95 0.007994149 ubox
79 94 0.040727616 ubox
80 93 0.041524478 ubox
81 92 0.041527549 ubox
82 91 0.041526612 ubox
84 93 0.005728025 ubox
85 92 0.005800518 ubox
86 91 0.005785422 ubox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
53 95 0.9500000 lbox
54 94 0.9500000 lbox
55 93 0.9500000 lbox
56 92 0.9500000 lbox
58 90 0.9500000 lbox
59 89 0.9500000 lbox
60 88 0.9500000 lbox
61 87 0.9500000 lbox
64 85 0.9500000 lbox
65 84 0.9500000 lbox
66 83 0.9500000 lbox
67 82 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
73 77 0.9500000 lbox
showpage
end
%%EOF
