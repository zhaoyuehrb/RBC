%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACACAGAUGUUAGGGUUCGGGCGAGCUAUUUGGAGCCUGCGCAGUCAGAUCCGAGGACAUGUUGACGUCGUCCGAGAGUCUUAAAAUCCUGCUCUGGCCGGAUUCCAGACUCGUGGGGGAAAGGCUGUUUCCAAGGCAGGAAAGGUAAAGAGACAAAGAAAGUGCCUUGUACAGAUGCAAACGGAGGUGUAGACUGUGCAGCUGCCAAAGUGGUGACAAGCAAUCCAGAGGACCAUGAAAGGAUCUUA\
) } def
/len { sequence length } bind def

/coor [
[180.25598145 870.81243896]
[165.25723267 874.42370605]
[150.69461060 869.33123779]
[141.21499634 857.15991211]
[139.84329224 841.79364014]
[147.01719666 828.13574219]
[160.44757080 820.54437256]
[161.19822693 805.56317139]
[161.94889832 790.58197021]
[162.69955444 775.60076904]
[155.60888672 762.50225830]
[164.02709961 749.10656738]
[164.77777100 734.12536621]
[150.68861389 720.64019775]
[151.10690308 700.83544922]
[166.21301270 687.55236816]
[166.40075684 672.55352783]
[166.58850098 657.55468750]
[166.77622986 642.55584717]
[166.96397400 627.55706787]
[166.87010193 612.55737305]
[166.49465942 597.56207275]
[165.83775330 582.57641602]
[164.89964294 567.60577393]
[149.38394165 555.78979492]
[147.57334900 536.06359863]
[161.09059143 521.16662598]
[159.59114075 506.24176025]
[158.09169006 491.31689453]
[156.59223938 476.39202881]
[155.09278870 461.46716309]
[153.59335327 446.54229736]
[152.09390259 431.61743164]
[150.50108337 416.70223999]
[148.81494141 401.79730225]
[147.03556824 386.90322876]
[145.16302490 372.02056885]
[143.29048157 357.13790894]
[139.34748840 350.91000366]
[141.48883057 342.05740356]
[139.80270386 327.15246582]
[138.11657715 312.24752808]
[136.43045044 297.34262085]
[134.74430847 282.43768311]
[133.05818176 267.53274536]
[131.37205505 252.62782288]
[129.68592834 237.72288513]
[127.99979401 222.81796265]
[111.22080231 214.52830505]
[102.78832245 197.65200806]
[106.28936005 178.96061707]
[120.48116302 166.07762146]
[118.23669434 151.24649048]
[115.99221802 136.41535950]
[113.74774170 121.58423615]
[85.75947571 117.07921600]
[82.50822449 92.88429260]
[72.00165558 82.17858887]
[61.49508667 71.47289276]
[50.98851776 60.76719284]
[40.48194885 50.06149292]
[32.26029968 46.14248657]
[29.91192055 39.15543747]
[19.54016685 28.31907463]
[9.16841221 17.48271370]
[-2.50961781 19.53842735]
[-13.62003613 15.75206375]
[-21.45098686 7.16961432]
[-24.14999962 -4.00761700]
[-21.16131592 -14.98689461]
[-31.25858498 -26.07946587]
[-46.26996231 -31.07638359]
[-49.11557007 -45.69663620]
[-59.21284103 -56.78920746]
[-69.31011200 -67.88177490]
[-79.40737915 -78.97434998]
[-94.41875458 -83.97126770]
[-97.26436615 -98.59152222]
[-107.36164093 -109.68408966]
[-117.45890808 -120.77666473]
[-127.55617523 -131.86923218]
[-137.65344238 -142.96180725]
[-147.75071716 -154.05436707]
[-161.17251587 -153.13145447]
[-172.51399231 -159.99972534]
[-177.75869751 -171.96540833]
[-175.20050049 -184.57878113]
[-185.15814209 -195.79685974]
[-195.11578369 -207.01493835]
[-205.07342529 -218.23301697]
[-215.03108215 -229.45109558]
[-229.97872925 -234.63551331]
[-232.64112854 -249.29023743]
[-242.59878540 -260.50830078]
[-258.32135010 -265.17019653]
[-261.88165283 -281.17819214]
[-249.61720276 -292.06466675]
[-234.14457703 -286.63052368]
[-231.38069153 -270.46597290]
[-221.42304993 -259.24786377]
[-207.18763733 -254.86585999]
[-203.81298828 -239.40875244]
[-193.85534668 -228.19067383]
[-183.89770508 -216.97259521]
[-173.94006348 -205.75451660]
[-163.98242188 -194.53642273]
[-147.15542603 -194.24746704]
[-135.52400208 -181.62063599]
[-136.65814209 -164.15164185]
[-126.56087494 -153.05906677]
[-116.46360779 -141.96650696]
[-106.36634064 -130.87393188]
[-96.26906586 -119.78136444]
[-86.17179871 -108.68878937]
[-71.88264465 -104.48528290]
[-68.31481171 -89.07161713]
[-58.21754074 -77.97904968]
[-48.12026978 -66.88647461]
[-38.02299881 -55.79390717]
[-23.73384857 -51.59040451]
[-20.16601372 -36.17673492]
[-10.06874371 -25.08416557]
[8.25464058 -25.31009483]
[21.12619591 -11.82095814]
[20.00477219 7.11096001]
[30.37652779 17.94732094]
[40.74827957 28.78368187]
[51.18764877 39.55492401]
[61.69421768 50.26062393]
[72.20078278 60.96632385]
[82.70735168 71.67201996]
[93.21392059 82.37772369]
[107.88805389 79.20887756]
[122.72261810 88.22875214]
[132.10638428 76.52640533]
[141.49015808 64.82405853]
[150.87391663 53.12171173]
[160.25769043 41.41936493]
[169.64144897 29.71701813]
[179.02522278 18.01467133]
[170.67247009 3.32987213]
[168.61627197 -13.40154171]
[173.14494324 -29.60087585]
[183.53417969 -42.78241730]
[198.16262817 -50.93486023]
[214.76493835 -52.82816696]
[230.78251648 -48.19909286]
[239.87043762 -60.13264847]
[237.50227356 -75.75850677]
[246.94401550 -88.43246460]
[262.59402466 -90.63528442]
[275.16744995 -81.06008148]
[277.20471191 -65.38764191]
[267.49710083 -52.91615677]
[251.80400085 -51.04473114]
[242.71607971 -39.11117554]
[250.09368896 -28.12718773]
[253.74087524 -15.38444138]
[253.29046631 -2.11491895]
[248.77218628 10.39398479]
[240.61102295 20.92436218]
[229.58744812 28.44637299]
[216.76266479 32.21894836]
[203.37651062 31.86278534]
[190.72756958 27.39843750]
[181.34379578 39.10078430]
[171.96003723 50.80313110]
[162.57626343 62.50547791]
[153.19250488 74.20782471]
[143.80873108 85.91017151]
[134.42497253 97.61251831]
[145.26080322 87.24021149]
[159.44815063 82.37000275]
[174.36988831 83.90029907]
[187.27339172 91.54879761]
[195.77836609 103.90458679]
[198.31587219 118.68840027]
[194.41784668 133.17306519]
[184.80334473 144.68658447]
[171.24594116 151.10507202]
[156.24659729 151.24452209]
[142.57221985 145.07919312]
[132.74531555 133.74639893]
[128.57887268 119.33975983]
[130.82334900 134.17088318]
[133.06782532 149.00201416]
[135.31228638 163.83314514]
[146.21145630 167.24098206]
[155.01988220 174.42776489]
[160.49629211 184.33155823]
[161.88734436 195.51121521]
[159.03105164 206.35600281]
[152.37455750 215.31776428]
[142.90472412 221.13182068]
[144.59085083 236.03675842]
[146.27699280 250.94168091]
[147.96311951 265.84661865]
[149.64924622 280.75155640]
[151.33537292 295.65649414]
[153.02149963 310.56140137]
[154.70764160 325.46633911]
[156.39376831 340.37127686]
[158.17314148 355.26535034]
[160.04568481 370.14801025]
[161.91822815 385.03067017]
[166.08476257 393.12969971]
[163.71987915 400.11117554]
[165.40600586 415.01611328]
[169.47084045 423.16665649]
[167.01876831 430.11798096]
[168.51821899 445.04284668]
[170.01766968 459.96771240]
[171.51710510 474.89257812]
[173.01655579 489.81744385]
[174.51600647 504.74230957]
[176.01545715 519.66717529]
[185.65832520 524.12542725]
[192.53868103 532.11389160]
[195.47309875 542.15637207]
[193.99937439 552.43298340]
[188.44779968 561.11022949]
[179.87028503 566.66766357]
[180.80839539 581.63830566]
[183.66673279 585.94439697]
[184.51988220 590.46496582]
[183.61846924 594.40618896]
[181.48995972 597.18658447]
[181.86540222 612.18188477]
[184.56008911 616.59222412]
[185.24293518 621.14160156]
[184.19419861 625.04626465]
[181.96279907 627.74481201]
[181.77505493 642.74359131]
[181.58732605 657.74243164]
[181.39958191 672.74127197]
[181.21183777 687.74011230]
[190.29244995 693.25402832]
[196.23121643 701.96527100]
[198.01818848 712.27392578]
[195.39860535 722.31976318]
[188.90684509 730.31793213]
[179.75897217 734.87603760]
[179.00831604 749.85723877]
[186.04528809 764.02728271]
[177.68075562 776.35144043]
[176.93009949 791.33264160]
[176.17942810 806.31384277]
[175.42877197 821.29504395]
[188.03300476 830.19091797]
[193.80569458 844.49755859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 248]
[8 247]
[9 246]
[10 245]
[12 243]
[13 242]
[16 236]
[17 235]
[18 234]
[19 233]
[20 232]
[21 228]
[22 227]
[23 223]
[24 222]
[27 216]
[28 215]
[29 214]
[30 213]
[31 212]
[32 211]
[33 210]
[34 208]
[35 207]
[36 205]
[37 204]
[38 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[52 187]
[53 186]
[54 185]
[55 184]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[63 127]
[64 126]
[65 125]
[70 122]
[71 121]
[73 119]
[74 118]
[75 117]
[76 116]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[93 100]
[94 99]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
