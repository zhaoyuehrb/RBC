%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAGGGCGCCAGGAGGCCGGAGCAGGAGGAGAAGGAGUAGGAGGAAGUGGUCACUAGCGCGGCGGCCGCCGGCCCGCAAUGGUGCUACCCUGGUUGCUGCUCGAGACUGCGCGCAGGGCGGUCCUCGGGUCCGCGGAGGCUGCGCUCUGCGCCAUGAAAAUGACAG\
) } def
/len { sequence length } bind def

/coor [
[154.15957642 425.27127075]
[150.59054565 410.70205688]
[140.04719543 400.18127441]
[144.27873230 384.93646240]
[140.70971680 370.36724854]
[137.14068604 355.79803467]
[133.57165527 341.22882080]
[130.00262451 326.65960693]
[126.43360138 312.09036255]
[122.86457062 297.52114868]
[119.29553986 282.95193481]
[115.72651672 268.38272095]
[105.66608429 279.50872803]
[90.68430328 278.76965332]
[81.76780701 266.70745850]
[85.45536041 252.16780090]
[99.04275513 245.81304932]
[112.56699371 252.30473328]
[110.35746765 237.46835327]
[108.14794159 222.63197327]
[105.93841553 207.79560852]
[92.66701508 201.08682251]
[85.80970764 187.69123840]
[88.18283081 172.65057373]
[99.08332062 161.76547241]
[96.87379456 146.92909241]
[92.76217651 140.75213623]
[94.76315308 131.79840088]
[92.82816315 116.92373657]
[87.02444458 130.75546265]
[75.03895569 139.77478027]
[60.14099884 141.52146912]
[46.39431000 135.51908875]
[37.54858780 123.40492249]
[36.01669312 108.48335266]
[42.21648026 94.82455444]
[54.45682907 86.15426636]
[69.39891815 84.83748627]
[82.96800995 91.23427582]
[75.07153320 78.48101807]
[67.17504883 65.72776031]
[59.27856445 52.97450256]
[51.38208389 40.22124481]
[34.96976471 31.91164780]
[35.06944656 14.37965393]
[26.93864632 1.77449262]
[18.80784607 -10.83066845]
[13.05566025 -14.21698952]
[10.31731987 -19.25316238]
[10.61952686 -24.05525780]
[2.96005893 -36.95225525]
[-4.69940901 -49.84925461]
[-12.35887718 -62.74625015]
[-19.46008110 -68.55540466]
[-20.03818893 -75.95310211]
[-27.45802498 -88.98943329]
[-34.87786484 -102.02577209]
[-42.29770279 -115.06210327]
[-49.71753693 -128.09843445]
[-64.69293976 -132.38505554]
[-72.03200531 -145.71145630]
[-67.85307312 -159.96179199]
[-75.27291107 -172.99812317]
[-82.69274902 -186.03445435]
[-90.11258698 -199.07080078]
[-95.66829681 -202.77064514]
[-98.12336731 -207.95082092]
[-97.55553436 -212.72879028]
[-104.48859406 -226.03039551]
[-111.42164612 -239.33200073]
[-124.10429382 -250.58308411]
[-116.80381012 -265.88470459]
[-100.07921600 -263.10543823]
[-98.12004089 -246.26506042]
[-91.18698883 -232.96345520]
[-84.25392914 -219.66184998]
[-77.07625580 -206.49063110]
[-69.65641785 -193.45429993]
[-62.23657990 -180.41796875]
[-54.81674194 -167.38163757]
[-40.43041229 -163.69799805]
[-32.71993256 -150.58300781]
[-36.68120575 -135.51828003]
[-29.26136589 -122.48194122]
[-21.84152985 -109.44561005]
[-14.42169189 -96.40927124]
[-7.00185394 -83.37294006]
[0.53812087 -70.40571594]
[8.19758892 -57.50872040]
[15.85705662 -44.61172485]
[23.51652527 -31.71472549]
[31.41300774 -18.96146965]
[39.54380798 -6.35630751]
[47.67460632 6.24885321]
[59.45115280 9.11846161]
[66.32241058 19.58735657]
[64.13533783 32.32476425]
[72.03182220 45.07802200]
[79.92830658 57.83127975]
[87.82478333 70.58453369]
[95.72126770 83.33779144]
[109.94367981 88.10466003]
[123.93076324 82.68603516]
[137.91784668 77.26741028]
[151.90492249 71.84878540]
[165.89201355 66.43016052]
[179.87908936 61.01153946]
[193.86618042 55.59291458]
[207.80259705 50.04528046]
[221.68716431 44.36911392]
[235.57173157 38.69295120]
[249.45629883 33.01678467]
[263.34085083 27.34061813]
[267.93939209 12.39446640]
[281.09729004 3.94438696]
[296.60177612 5.98024797]
[307.13214111 17.54077911]
[307.71621704 33.16744995]
[298.07824707 45.48182678]
[282.76901245 48.66943359]
[269.01702881 41.22518158]
[255.13246155 46.90134811]
[241.24789429 52.57751465]
[227.36332703 58.25368118]
[213.47875977 63.92984772]
[208.45750427 69.39309692]
[199.28480530 69.57999420]
[185.29771423 74.99861908]
[171.31063843 80.41724396]
[157.32354736 85.83586884]
[143.33647156 91.25449371]
[129.34938049 96.67311859]
[115.36230469 102.09174347]
[107.70283508 114.98874664]
[109.63782501 129.86341858]
[111.71016693 144.71957397]
[113.91969299 159.55593872]
[127.51895905 166.79238892]
[134.17179871 180.48886108]
[131.51539612 195.30126953]
[120.77478790 205.58607483]
[122.98431396 220.42245483]
[125.19384003 235.25883484]
[127.40336609 250.09519958]
[130.29573059 264.81369019]
[133.86476135 279.38290405]
[137.43379211 293.95214844]
[141.00280762 308.52136230]
[144.57183838 323.09057617]
[148.14086914 337.65979004]
[151.70989990 352.22900391]
[155.27893066 366.79821777]
[158.84794617 381.36743164]
[169.64659119 392.93029785]
[165.15975952 407.13302612]
[168.72879028 421.70223999]
[183.75868225 423.97622681]
[196.77169800 431.83306885]
[205.78344727 444.07464600]
[209.41969299 458.83425903]
[207.12596130 473.86114502]
[199.25201416 486.86383057]
[186.99856567 495.85946655]
[172.23417664 499.47628784]
[157.21032715 497.16278076]
[144.21803284 489.27172852]
[135.23852539 477.00646973]
[131.64111328 462.23733521]
[133.97436523 447.21655273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[18 144]
[19 143]
[20 142]
[21 141]
[25 137]
[26 136]
[28 135]
[29 134]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[45 94]
[46 93]
[47 92]
[50 91]
[51 90]
[52 89]
[53 88]
[55 87]
[56 86]
[57 85]
[58 84]
[59 83]
[62 80]
[63 79]
[64 78]
[65 77]
[68 76]
[69 75]
[70 74]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
