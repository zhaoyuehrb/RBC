%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACGGAAUCCUCCCGGGAGCCGAGGAGGCUCGCGCGCGUGCAUCCCGCACCAUCCCCCGGCCCCGGGCCCUGGCCGGCGUCAGACCGAGCUGCCGCCGCCACCACCGCAGCAGCAGCAGUCGGGGAGCCAGGCCCAGCCAGGGCCGCGGGAGGCGGGGGCGCCCGGGCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[103.69573975 198.33633423]
[100.24615479 212.93429565]
[96.79656982 227.53224182]
[105.31452179 240.84465027]
[101.84278870 256.26290894]
[88.44107819 264.63964844]
[73.06039429 261.00509644]
[64.82581329 247.51556396]
[68.62277985 232.17416382]
[82.19860840 224.08265686]
[85.64820099 209.48471069]
[89.09778595 194.88674927]
[83.00419617 184.41366577]
[85.78208160 172.20771790]
[96.47118378 164.95156860]
[100.18078613 150.41751099]
[103.89038086 135.88345337]
[107.59997559 121.34939575]
[95.12793732 113.01584625]
[83.11981964 122.00501251]
[71.11169434 130.99417114]
[59.10358047 139.98333740]
[47.09545898 148.97250366]
[43.39825058 164.58372498]
[28.82686043 171.29595947]
[14.55921555 163.96017456]
[11.54023170 148.20373535]
[22.08581543 136.11364746]
[38.10629654 136.96438599]
[50.11441422 127.97521973]
[62.12253189 118.98605347]
[74.13065338 109.99688721]
[86.13877106 101.00772858]
[95.96167755 89.67147827]
[103.15041351 76.50629425]
[102.97326660 60.68608093]
[115.86366272 53.22371674]
[123.05239868 40.05853271]
[122.87525177 24.23831749]
[135.76565552 16.77595139]
[142.95439148 3.61076641]
[150.14312744 -9.55441856]
[157.33186340 -22.71960258]
[158.70631409 -31.78353500]
[164.76820374 -36.05394745]
[172.19078064 -49.08872223]
[179.61335754 -62.12349701]
[187.03593445 -75.15827179]
[194.45851135 -88.19304657]
[201.88108826 -101.22782135]
[198.17678833 -109.96131897]
[198.91516113 -119.28083038]
[203.80229187 -127.08821106]
[211.62466431 -131.68476868]
[220.54806519 -132.14035034]
[228.65768433 -144.75915527]
[236.76728821 -157.37796021]
[244.87690735 -169.99676514]
[245.82881165 -185.78930664]
[259.21871948 -192.31306458]
[267.32833862 -204.93186951]
[275.43795776 -217.55067444]
[283.54757690 -230.16947937]
[291.65716553 -242.78828430]
[299.76678467 -255.40707397]
[297.79376221 -268.17483521]
[304.83435059 -278.52529907]
[316.65179443 -281.20199585]
[324.98535156 -293.67404175]
[333.31890869 -306.14608765]
[329.18563843 -318.98556519]
[333.15399170 -331.67303467]
[343.55734253 -339.63226318]
[356.45181274 -340.12857056]
[365.00665283 -352.44989014]
[373.56149292 -364.77117920]
[382.11633301 -377.09249878]
[390.56085205 -389.48968506]
[398.89440918 -401.96173096]
[407.22796631 -414.43377686]
[408.46160889 -430.20678711]
[421.96582031 -436.49053955]
[430.29937744 -448.96258545]
[430.63986206 -454.23617554]
[432.77322388 -458.41915894]
[435.97555542 -461.00775146]
[439.42776489 -461.86264038]
[448.41693115 -473.87075806]
[457.40609741 -485.87890625]
[466.39526367 -497.88702393]
[475.16867065 -510.05364990]
[483.72351074 -522.37500000]
[492.27835083 -534.69628906]
[500.83319092 -547.01757812]
[509.38803101 -559.33892822]
[510.90298462 -575.08740234]
[524.51721191 -581.12908936]
[533.07208252 -593.45043945]
[534.58703613 -609.19891357]
[548.20129395 -615.24060059]
[556.75610352 -627.56195068]
[552.47460938 -642.60198975]
[558.90948486 -656.85418701]
[573.02239990 -663.58917236]
[588.14965820 -659.62677002]
[597.14862061 -646.83801270]
[595.77026367 -631.26129150]
[584.66540527 -620.25146484]
[569.07739258 -619.00708008]
[560.52258301 -606.68579102]
[559.61950684 -591.81854248]
[545.39337158 -584.89556885]
[536.83856201 -572.57427979]
[535.93548584 -557.70703125]
[521.70935059 -550.78405762]
[513.15447998 -538.46276855]
[504.59963989 -526.14141846]
[496.04479980 -513.82012939]
[487.48995972 -501.49880981]
[487.44915771 -496.69369507]
[484.36749268 -491.87026978]
[478.40338135 -488.89785767]
[469.41421509 -476.88973999]
[460.42504883 -464.88162231]
[451.43588257 -452.87347412]
[442.77142334 -440.62902832]
[434.43786621 -428.15698242]
[433.80029297 -413.27603149]
[419.70001221 -406.10021973]
[411.36645508 -393.62817383]
[403.03289795 -381.15612793]
[401.92761230 -373.82391357]
[394.43765259 -368.53765869]
[385.88281250 -356.21633911]
[377.32797241 -343.89505005]
[368.77313232 -331.57373047]
[372.46984863 -315.18218994]
[362.99423218 -300.89889526]
[345.79095459 -297.81253052]
[337.45739746 -285.34048462]
[329.12384033 -272.86843872]
[328.93676758 -255.33422852]
[312.38558960 -247.29747009]
[304.27597046 -234.67866516]
[296.16635132 -222.05986023]
[288.05676270 -209.44105530]
[279.94714355 -196.82225037]
[271.83752441 -184.20346069]
[271.46566772 -169.31349182]
[257.49569702 -161.88714600]
[249.38609314 -149.26834106]
[241.27648926 -136.64953613]
[233.16687012 -124.03073883]
[234.03984070 -103.42754364]
[214.91586304 -93.80525208]
[207.49328613 -80.77046967]
[200.07070923 -67.73569489]
[192.64813232 -54.70092010]
[185.22555542 -41.66614532]
[177.80299377 -28.63137054]
[170.49703979 -15.53086853]
[163.30830383 -2.36568356]
[156.11956787 10.79950142]
[148.93083191 23.96468544]
[149.62217712 38.84323883]
[136.21759033 47.24726486]
[129.02885437 60.41245270]
[129.72018433 75.29100037]
[116.31559753 83.69503021]
[109.12686157 96.86021423]
[120.83025360 105.49631500]
[122.13404083 125.05899811]
[118.42443848 139.59304810]
[114.71484375 154.12712097]
[111.00524902 168.66117859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[15 175]
[16 174]
[17 173]
[18 172]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[34 170]
[35 169]
[37 167]
[38 166]
[40 164]
[41 163]
[42 162]
[43 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[68 141]
[69 140]
[70 139]
[74 136]
[75 135]
[76 134]
[77 133]
[78 131]
[79 130]
[80 129]
[82 127]
[83 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
[100 110]
[101 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
