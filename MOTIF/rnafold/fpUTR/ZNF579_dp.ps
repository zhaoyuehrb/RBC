%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF579)
} def

/sequence { (\
GUCCGCGUUUGGCCGGCCGUGGGGAAGGAAGAAAGGAGCCAAGGAGGCGAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.006116254 ubox
1 39 0.009478058 ubox
1 48 0.031535903 ubox
1 53 0.722451258 ubox
2 16 0.006087904 ubox
2 23 0.027616675 ubox
2 25 0.026262696 ubox
2 29 0.005933923 ubox
2 36 0.004721978 ubox
2 37 0.458778010 ubox
2 38 0.005091035 ubox
2 45 0.017157486 ubox
2 47 0.019615975 ubox
2 50 0.025204547 ubox
2 52 0.728916579 ubox
3 12 0.013253163 ubox
3 15 0.006534407 ubox
3 16 0.009580921 ubox
3 22 0.035134478 ubox
3 23 0.003292845 ubox
3 24 0.028070330 ubox
3 28 0.006338727 ubox
3 35 0.005761431 ubox
3 36 0.490484835 ubox
3 44 0.018722560 ubox
3 46 0.018871322 ubox
3 47 0.027614599 ubox
3 49 0.019566593 ubox
3 51 0.734689199 ubox
3 52 0.065457456 ubox
4 11 0.014383591 ubox
4 15 0.009845503 ubox
4 21 0.035208618 ubox
4 23 0.028071614 ubox
4 27 0.006328730 ubox
4 35 0.489890841 ubox
4 43 0.018753065 ubox
4 46 0.027827927 ubox
4 49 0.748450467 ubox
4 51 0.065599506 ubox
5 10 0.009771897 ubox
5 13 0.011762604 ubox
5 14 0.008047005 ubox
5 20 0.035254459 ubox
5 39 0.015049850 ubox
5 48 0.749346528 ubox
5 53 0.104561039 ubox
6 12 0.013782372 ubox
6 19 0.035254954 ubox
6 21 0.027891712 ubox
6 38 0.015048821 ubox
6 47 0.748910510 ubox
6 49 0.060299313 ubox
6 52 0.105180559 ubox
7 13 0.005388578 ubox
7 17 0.012652906 ubox
7 18 0.032159421 ubox
7 20 0.024511098 ubox
7 39 0.012967980 ubox
7 48 0.056017421 ubox
7 53 0.412083792 ubox
8 12 0.005070886 ubox
8 16 0.017710977 ubox
8 19 0.003763429 ubox
8 29 0.024876706 ubox
8 30 0.020952050 ubox
8 31 0.067462504 ubox
8 32 0.085845638 ubox
8 33 0.417141658 ubox
8 34 0.021603534 ubox
8 35 0.005676295 ubox
8 36 0.010068493 ubox
8 38 0.012718204 ubox
8 42 0.004563374 ubox
8 43 0.324550849 ubox
8 44 0.053304555 ubox
8 45 0.631641199 ubox
8 46 0.028332650 ubox
8 47 0.053821165 ubox
8 50 0.077898624 ubox
8 51 0.030434691 ubox
8 52 0.414392214 ubox
9 15 0.015502241 ubox
9 16 0.018540666 ubox
9 28 0.025189945 ubox
9 29 0.020655971 ubox
9 30 0.066572385 ubox
9 31 0.087013349 ubox
9 32 0.471648711 ubox
9 33 0.019180199 ubox
9 34 0.009831129 ubox
9 35 0.009021013 ubox
9 37 0.011249721 ubox
9 41 0.006715375 ubox
9 42 0.507323161 ubox
9 43 0.062243950 ubox
9 44 0.514144390 ubox
9 45 0.023105223 ubox
9 46 0.034710767 ubox
9 49 0.070492600 ubox
9 50 0.033658099 ubox
9 51 0.416865327 ubox
10 15 0.015702135 ubox
10 19 0.024666552 ubox
10 27 0.025542393 ubox
10 28 0.011958776 ubox
10 29 0.057391245 ubox
10 30 0.086427411 ubox
10 31 0.476677083 ubox
10 32 0.014395633 ubox
10 33 0.010601150 ubox
10 34 0.008957524 ubox
10 35 0.003180250 ubox
10 36 0.010623099 ubox
10 41 0.702461268 ubox
10 42 0.056157454 ubox
10 43 0.199723940 ubox
10 44 0.016192533 ubox
10 45 0.018341137 ubox
10 49 0.033109067 ubox
10 50 0.417099628 ubox
10 51 0.003199760 ubox
11 18 0.029018602 ubox
11 40 0.745557942 ubox
11 48 0.024474351 ubox
12 17 0.028975127 ubox
12 20 0.003254433 ubox
12 39 0.745594876 ubox
12 48 0.430233158 ubox
12 53 0.015678370 ubox
13 19 0.003278439 ubox
13 22 0.015369726 ubox
13 23 0.011336505 ubox
13 24 0.029525656 ubox
13 28 0.581643327 ubox
13 36 0.114618840 ubox
13 38 0.675416881 ubox
13 44 0.007773725 ubox
13 47 0.431023688 ubox
13 52 0.016135723 ubox
14 21 0.019420567 ubox
14 22 0.013329687 ubox
14 23 0.031628073 ubox
14 27 0.662388138 ubox
14 35 0.168097668 ubox
14 43 0.007788100 ubox
14 46 0.430939394 ubox
14 51 0.016141602 ubox
15 20 0.017290092 ubox
15 40 0.030719819 ubox
16 39 0.030757398 ubox
16 48 0.016180082 ubox
17 23 0.050939351 ubox
17 24 0.684898222 ubox
17 28 0.259644688 ubox
17 36 0.515327079 ubox
17 38 0.028793238 ubox
17 44 0.428728924 ubox
17 47 0.016208116 ubox
18 22 0.050873359 ubox
18 23 0.684821742 ubox
18 27 0.259828560 ubox
18 35 0.515556186 ubox
18 43 0.428603365 ubox
18 46 0.016180334 ubox
20 41 0.402433571 ubox
21 40 0.419030952 ubox
22 39 0.418287494 ubox
22 40 0.095732276 ubox
23 39 0.097957941 ubox
23 40 0.033628299 ubox
24 39 0.033651404 ubox
27 40 0.008032519 ubox
28 39 0.008053861 ubox
38 48 0.487101541 ubox
38 53 0.095767632 ubox
39 47 0.487748458 ubox
39 52 0.096591779 ubox
40 46 0.487517041 ubox
40 51 0.096526796 ubox
47 53 0.005893485 ubox
48 52 0.005977012 ubox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
