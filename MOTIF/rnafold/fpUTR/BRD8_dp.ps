%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BRD8)
} def

/sequence { (\
GGGUUUCGGCCCUUCCAGACCGUCUCUCCUCAGGGUUGGAGACUUCGGGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.153262364 ubox
1 12 0.100716229 ubox
1 45 0.006407730 ubox
1 46 0.005401049 ubox
1 52 0.020341877 ubox
2 6 0.099656519 ubox
2 11 0.100910127 ubox
2 21 0.010883065 ubox
2 44 0.010121730 ubox
2 45 0.003883572 ubox
2 51 0.015524646 ubox
2 52 0.222604946 ubox
3 10 0.100877307 ubox
3 20 0.010914800 ubox
3 43 0.011157847 ubox
3 51 0.223252185 ubox
4 9 0.096047323 ubox
4 19 0.010917394 ubox
4 41 0.004246455 ubox
4 42 0.010620041 ubox
4 49 0.005568675 ubox
4 50 0.223491466 ubox
4 54 0.056822569 ubox
4 55 0.178502540 ubox
5 18 0.010885103 ubox
5 40 0.006563890 ubox
5 41 0.010024930 ubox
5 48 0.003884245 ubox
5 49 0.222535285 ubox
5 53 0.055146034 ubox
5 54 0.274016856 ubox
5 55 0.130107943 ubox
6 17 0.010623710 ubox
6 39 0.007147903 ubox
6 40 0.009677093 ubox
6 48 0.222948142 ubox
6 53 0.288212415 ubox
6 54 0.195657511 ubox
7 38 0.009178089 ubox
7 39 0.007904621 ubox
7 47 0.223663753 ubox
8 15 0.004319209 ubox
8 16 0.011159696 ubox
8 21 0.003625035 ubox
8 37 0.010752220 ubox
8 44 0.004604803 ubox
8 46 0.223291219 ubox
8 52 0.968271999 ubox
9 15 0.011141470 ubox
9 20 0.003791115 ubox
9 36 0.012559031 ubox
9 43 0.009843449 ubox
9 44 0.008211214 ubox
9 45 0.205502543 ubox
9 51 0.969247044 ubox
10 35 0.012673048 ubox
10 49 0.013209404 ubox
10 50 0.969109684 ubox
11 34 0.012673331 ubox
11 48 0.018396880 ubox
11 49 0.968747631 ubox
11 50 0.010427326 ubox
12 18 0.017518220 ubox
12 33 0.012671824 ubox
12 41 0.049530763 ubox
12 47 0.022393135 ubox
12 48 0.960976856 ubox
12 49 0.014581841 ubox
13 17 0.016196728 ubox
13 19 0.008040394 ubox
13 32 0.012280479 ubox
13 40 0.036433357 ubox
13 41 0.247217790 ubox
13 42 0.017323811 ubox
13 47 0.926435698 ubox
13 48 0.012017852 ubox
13 50 0.039642164 ubox
13 54 0.006584506 ubox
14 18 0.010714259 ubox
14 39 0.012748054 ubox
14 40 0.435096902 ubox
14 41 0.014383404 ubox
14 42 0.021733359 ubox
14 47 0.059561367 ubox
14 48 0.009281474 ubox
14 49 0.054462695 ubox
14 50 0.053541180 ubox
14 53 0.006050506 ubox
14 54 0.003640982 ubox
15 38 0.012123820 ubox
15 39 0.438384813 ubox
15 41 0.020772909 ubox
15 47 0.056258330 ubox
15 48 0.123825354 ubox
15 49 0.071160118 ubox
15 50 0.023120365 ubox
16 38 0.438212938 ubox
16 47 0.164095847 ubox
16 48 0.071771015 ubox
16 49 0.023355962 ubox
17 25 0.019322402 ubox
17 27 0.011207647 ubox
17 30 0.003171541 ubox
17 37 0.415704925 ubox
17 44 0.117058775 ubox
17 45 0.154066076 ubox
18 24 0.027135741 ubox
18 26 0.011708420 ubox
18 36 0.247761735 ubox
18 37 0.135305264 ubox
18 43 0.109371947 ubox
18 44 0.152529151 ubox
18 45 0.132182929 ubox
18 46 0.824848603 ubox
19 23 0.023651106 ubox
19 25 0.011175708 ubox
19 36 0.218948445 ubox
19 44 0.130146970 ubox
19 45 0.809298480 ubox
20 34 0.336884528 ubox
20 35 0.278131468 ubox
20 39 0.078430404 ubox
20 48 0.064692882 ubox
20 49 0.007551906 ubox
20 50 0.003457892 ubox
21 33 0.337103119 ubox
21 34 0.277441867 ubox
21 38 0.078518627 ubox
21 47 0.080748102 ubox
21 48 0.007405919 ubox
21 49 0.003460168 ubox
22 36 0.008029209 ubox
22 37 0.066924990 ubox
22 43 0.878578328 ubox
22 46 0.082205052 ubox
22 51 0.003183323 ubox
23 34 0.013198813 ubox
23 35 0.006409081 ubox
23 40 0.031233632 ubox
23 42 0.881942523 ubox
23 50 0.003177610 ubox
24 33 0.072747265 ubox
24 34 0.007512046 ubox
24 35 0.086221070 ubox
24 39 0.031382092 ubox
24 41 0.881794131 ubox
24 49 0.003170391 ubox
25 32 0.069873432 ubox
25 33 0.006698577 ubox
25 34 0.086316247 ubox
25 35 0.004796879 ubox
25 38 0.030926446 ubox
25 39 0.015553874 ubox
25 40 0.880824391 ubox
25 42 0.142387589 ubox
26 33 0.092363002 ubox
26 34 0.006069876 ubox
26 35 0.014027841 ubox
26 38 0.035871657 ubox
26 39 0.879678650 ubox
26 41 0.149495738 ubox
27 32 0.084500733 ubox
27 33 0.006326657 ubox
27 34 0.016041379 ubox
27 35 0.089418801 ubox
27 38 0.811580027 ubox
27 40 0.153214491 ubox
28 33 0.021830350 ubox
28 34 0.171687468 ubox
28 35 0.853308367 ubox
28 38 0.024131880 ubox
28 39 0.155809527 ubox
29 33 0.170833259 ubox
29 34 0.855493066 ubox
29 35 0.073854654 ubox
29 38 0.156942484 ubox
30 34 0.066819563 ubox
30 39 0.003342310 ubox
31 38 0.015678213 ubox
32 37 0.015705278 ubox
40 45 0.003266280 ubox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
