%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAACUGGAAAGACGCCUGGUCUGGCUUCAGUUACAGGGAGCACCACCAGGGAACAUCUCGGGGAGCCUGGUUGGAAGCUGCAGGCUUAGUCUGUCGGCUGCGGGUCUCUGACUGCCCUGUGGGGAGGGUCUUGCCUUAACAUCCCUUGCAUUUGGCUGCAAAGAAAUCUGCUUGGAAGAAGGGGUUACGCUGUUUGGCCGGGCAGAAACUCCGCUGAGCAGAACUUGCCGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[92.21575165 480.43362427]
[79.10824585 488.73861694]
[63.62467575 487.71951294]
[51.71878052 477.76818848]
[47.96862030 462.71109009]
[53.81621170 448.33801270]
[67.01303864 440.17568970]
[67.99818420 425.20806885]
[68.98332977 410.24047852]
[69.96847534 395.27285767]
[62.76599503 393.18136597]
[48.36103821 388.99838257]
[41.15856171 386.90689087]
[33.97375870 400.07424927]
[26.78895950 413.24157715]
[19.60415840 426.40890503]
[22.73089218 442.14431763]
[12.26828861 454.30627441]
[-3.75763822 453.56518555]
[-13.05316925 440.48953247]
[-8.48756886 425.10983276]
[6.43682575 419.22409058]
[13.62162685 406.05676270]
[20.80642891 392.88943481]
[27.99123001 379.72210693]
[33.48008347 365.76242065]
[37.18751144 351.22781372]
[40.89493561 336.69320679]
[44.31508255 322.08831787]
[47.44661331 307.41885376]
[50.57814407 292.74935913]
[45.66839218 278.68722534]
[56.11624527 266.80645752]
[59.24777985 252.13697815]
[62.37931061 237.46749878]
[60.70516586 230.28369141]
[65.64961243 222.62637329]
[68.97370148 207.99932861]
[72.29778290 193.37228394]
[75.52565765 178.72370911]
[78.65718842 164.05422974]
[81.78871918 149.38475037]
[84.92024994 134.71528625]
[69.08249664 121.83248901]
[62.24020004 102.59753418]
[66.38412476 82.60681915]
[54.69186020 73.21049500]
[42.99959564 63.81417084]
[31.30733109 54.41784668]
[22.67556000 51.48960495]
[19.52419853 44.82035828]
[7.95645094 35.27116013]
[-3.61129570 25.72195816]
[-15.17904282 16.17275620]
[-25.58195305 20.91107750]
[-36.94997406 21.43198967]
[-47.64586258 17.69867325]
[-56.14338303 10.28426838]
[-61.24509430 0.28423592]
[-62.25100327 -10.84537983]
[-59.05440521 -21.49992371]
[-70.23669434 -31.49774742]
[-81.41897583 -41.49557114]
[-92.60126495 -51.49339676]
[-103.78354645 -61.49121857]
[-114.96583557 -71.48904419]
[-126.14812469 -81.48686981]
[-141.59303284 -84.91693115]
[-145.92395020 -99.16798401]
[-157.10623169 -109.16580200]
[-163.45945740 -110.88129425]
[-167.41160583 -114.93174744]
[-168.44662476 -119.57642365]
[-179.36224365 -129.86473083]
[-183.57794189 -130.70787048]
[-186.97279358 -132.64520264]
[-189.30499268 -135.28778076]
[-190.48257446 -138.20817566]
[-190.56309509 -140.99220276]
[-200.92292786 -151.83996582]
[-211.28276062 -162.68772888]
[-221.64259338 -173.53549194]
[-232.00241089 -184.38325500]
[-242.43331909 -195.16268921]
[-252.93484497 -205.87333679]
[-263.43637085 -216.58398438]
[-273.93789673 -227.29463196]
[-284.43939209 -238.00529480]
[-299.84576416 -245.08206177]
[-297.31045532 -261.84536743]
[-280.50039673 -264.04968262]
[-273.72875977 -248.50680542]
[-263.22723389 -237.79615784]
[-252.72570801 -227.08551025]
[-242.22419739 -216.37486267]
[-231.72267151 -205.66421509]
[-224.80882263 -203.09347534]
[-221.15466309 -194.74307251]
[-210.79483032 -183.89532471]
[-200.43499756 -173.04756165]
[-190.07516479 -162.19979858]
[-179.71533203 -151.35203552]
[-169.07392883 -140.78034973]
[-158.15832520 -130.49203491]
[-147.10841370 -120.34809113]
[-135.92613220 -110.35026550]
[-121.28105164 -107.63531494]
[-116.15029907 -92.66915131]
[-104.96800995 -82.67132568]
[-93.78572845 -72.67350769]
[-82.60343933 -62.67568207]
[-71.42115021 -52.67785645]
[-60.23886871 -42.68003464]
[-49.05658340 -32.68220901]
[-31.02626991 -37.67295074]
[-13.49927521 -30.71162796]
[-3.65063620 -14.45243931]
[-5.62984180 4.60501051]
[5.93790483 14.15421104]
[17.50565147 23.70341110]
[29.07339859 33.25261307]
[40.70365524 42.72557831]
[52.39591980 52.12190628]
[64.08818817 61.51823044]
[75.78044891 70.91455841]
[86.96922302 52.83800507]
[109.27730560 40.71234131]
[114.67429352 26.71689606]
[120.07128143 12.72144985]
[125.46826935 -1.27399611]
[118.83392334 -15.61836624]
[124.36407471 -30.42353439]
[138.77778625 -36.90585327]
[153.52365112 -31.21948433]
[159.85322571 -16.73804474]
[154.01127625 -2.05311608]
[139.46371460 4.12299204]
[134.06672668 18.11843872]
[128.66973877 32.11388397]
[123.27275085 46.10932922]
[129.14964294 50.76897049]
[138.46891785 39.01520157]
[147.78819275 27.26143265]
[157.10765076 15.50780773]
[168.86112976 24.82744789]
[159.54196167 36.58070755]
[150.22268677 48.33447647]
[140.90341187 60.08824539]
[146.78028870 64.74788666]
[159.17651367 56.30196381]
[171.57273865 47.85604095]
[183.96896362 39.41011810]
[196.36518860 30.96419907]
[199.06163025 15.39163399]
[212.02772522 6.35525799]
[227.57090759 9.21619129]
[236.46969604 22.27709389]
[233.44459534 37.78916168]
[220.29032898 46.54936218]
[204.81111145 43.36042404]
[192.41488647 51.80634689]
[180.01866150 60.25226593]
[167.62243652 68.69818878]
[155.22621155 77.14411163]
[156.45298767 84.54309845]
[169.76860046 77.63696289]
[180.45133972 88.16687012]
[173.73777771 101.58059692]
[158.90655518 99.34107208]
[160.13334656 106.74005890]
[174.59202576 110.73332214]
[189.05072021 114.72659302]
[203.50941467 118.71986389]
[217.96810913 122.71312714]
[232.42680359 126.70639801]
[246.88549805 130.69966125]
[261.34420776 134.69293213]
[275.80288696 138.68620300]
[289.43457031 131.14863586]
[304.04086304 135.40434265]
[311.14276123 148.44653320]
[325.60147095 152.43980408]
[340.06015015 156.43305969]
[355.42211914 152.64883423]
[365.63031006 163.49514771]
[380.08898926 167.48841858]
[393.71072388 159.47442627]
[408.98831177 163.52050781]
[416.85784912 177.22619629]
[412.65045166 192.46015930]
[398.86233521 200.18434143]
[383.67370605 195.81613159]
[376.09573364 181.94711304]
[361.63702393 177.95384216]
[347.30923462 182.02369690]
[336.06689453 170.89175415]
[321.60818481 166.89848328]
[307.14950562 162.90522766]
[294.36071777 170.45390320]
[279.64065552 166.61013794]
[271.80963135 153.14489746]
[257.35092163 149.15162659]
[242.89222717 145.15835571]
[228.43353271 141.16508484]
[213.97483826 137.17182922]
[199.51615906 133.17855835]
[185.05746460 129.18528748]
[170.59877014 125.19201660]
[156.14007568 121.19875336]
[137.85455322 136.55342102]
[117.44971466 141.73461914]
[99.58972931 137.84681702]
[96.45819855 152.51628113]
[93.32666016 167.18576050]
[90.19512939 181.85523987]
[91.46327972 190.88153076]
[86.92482758 196.69636536]
[83.60074615 211.32341003]
[80.27666473 225.95045471]
[77.04878235 240.59902954]
[73.91725159 255.26850891]
[70.78572083 269.93798828]
[75.47148895 285.04937744]
[65.24761963 295.88088989]
[62.11608887 310.55038452]
[58.98455811 325.21984863]
[60.58139038 330.14968872]
[60.18008804 334.74368286]
[58.23952484 338.30053711]
[55.42955017 340.40063477]
[51.72212601 354.93524170]
[48.01469803 369.46984863]
[69.18033600 372.60900879]
[84.93608856 396.25799561]
[83.95094299 411.22561646]
[82.96579742 426.19323730]
[81.98065186 441.16082764]
[93.99379730 450.98245239]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 237]
[8 236]
[9 235]
[10 234]
[13 25]
[14 24]
[15 23]
[16 22]
[26 232]
[27 231]
[28 230]
[29 226]
[30 225]
[31 224]
[33 222]
[34 221]
[35 220]
[37 219]
[38 218]
[39 217]
[40 215]
[41 214]
[42 213]
[43 212]
[46 125]
[47 124]
[48 123]
[49 122]
[51 121]
[52 120]
[53 119]
[54 118]
[61 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[69 106]
[70 105]
[73 104]
[74 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[127 140]
[128 139]
[129 138]
[130 137]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[170 209]
[171 208]
[172 207]
[173 206]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[181 198]
[182 197]
[183 196]
[185 194]
[186 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
