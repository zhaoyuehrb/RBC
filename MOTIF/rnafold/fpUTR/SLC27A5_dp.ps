%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC27A5)
} def

/sequence { (\
AGCAGUGCCAGGGCCACCACCCCUGGGGAGGAGCCAUUGGGCUACUCUUGAGGGGCCAGAGGUGAGCCUGAACACUCCACAGCUGCUGCUCCUAGGGAGGAGCUGGUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.013163649 ubox
1 84 0.333198705 ubox
1 87 0.249648092 ubox
1 104 0.003466108 ubox
2 8 0.019536676 ubox
2 75 0.014167423 ubox
2 83 0.397131181 ubox
2 86 0.264458071 ubox
2 103 0.003437100 ubox
2 107 0.112892573 ubox
3 7 0.019440691 ubox
3 82 0.397305620 ubox
3 85 0.264563557 ubox
3 102 0.003389947 ubox
3 105 0.007051818 ubox
3 106 0.115315732 ubox
4 76 0.850944540 ubox
4 84 0.260082367 ubox
4 104 0.004990169 ubox
5 73 0.064391710 ubox
5 75 0.900049538 ubox
5 80 0.086798945 ubox
5 83 0.255315479 ubox
5 109 0.329848983 ubox
6 72 0.064435071 ubox
6 74 0.901116532 ubox
6 79 0.087422720 ubox
6 81 0.045852801 ubox
6 82 0.245451566 ubox
6 108 0.330788756 ubox
7 73 0.900550944 ubox
7 78 0.087899986 ubox
7 80 0.056380736 ubox
7 83 0.008931810 ubox
7 107 0.331111836 ubox
8 82 0.009693297 ubox
8 106 0.331160211 ubox
9 70 0.481095084 ubox
9 105 0.318757224 ubox
10 69 0.476923571 ubox
10 76 0.023889464 ubox
10 104 0.295170572 ubox
11 18 0.074296462 ubox
11 68 0.458332475 ubox
11 69 0.852929130 ubox
11 75 0.022712993 ubox
11 76 0.003665835 ubox
11 77 0.011917656 ubox
11 78 0.012306801 ubox
11 103 0.127365514 ubox
12 17 0.074491742 ubox
12 18 0.019104800 ubox
12 57 0.004081896 ubox
12 67 0.438303108 ubox
12 68 0.884923656 ubox
12 69 0.003254480 ubox
12 77 0.008515664 ubox
13 17 0.018826900 ubox
13 56 0.004154800 ubox
13 63 0.010658840 ubox
13 67 0.895217732 ubox
14 55 0.003494122 ubox
14 62 0.010778433 ubox
14 66 0.905101147 ubox
14 100 0.008176760 ubox
15 61 0.010773394 ubox
15 64 0.996459206 ubox
15 99 0.008070856 ubox
16 63 0.996568783 ubox
17 62 0.996770861 ubox
17 96 0.004591282 ubox
17 97 0.004938537 ubox
18 61 0.995331267 ubox
18 95 0.004588334 ubox
18 96 0.004916369 ubox
20 54 0.003312226 ubox
20 55 0.998402541 ubox
21 54 0.999909576 ubox
21 55 0.011479073 ubox
22 53 0.999933419 ubox
22 54 0.010489430 ubox
23 52 0.999938754 ubox
23 53 0.009371638 ubox
24 51 0.997966338 ubox
24 52 0.007990239 ubox
25 49 0.005228195 ubox
26 48 0.005392874 ubox
26 49 0.989823928 ubox
27 47 0.004411076 ubox
27 48 0.998799647 ubox
28 47 0.999968051 ubox
29 46 0.999675877 ubox
30 45 0.995118865 ubox
30 46 0.014370493 ubox
31 45 0.033049294 ubox
32 43 0.764440321 ubox
33 42 0.999927339 ubox
34 40 0.018122717 ubox
34 41 0.999823406 ubox
35 39 0.024945006 ubox
35 40 0.997974699 ubox
55 86 0.008962774 ubox
56 62 0.005811068 ubox
56 85 0.007846600 ubox
56 97 0.003241772 ubox
57 61 0.006407865 ubox
57 64 0.005119711 ubox
57 70 0.004043969 ubox
57 85 0.072043144 ubox
57 96 0.003252398 ubox
58 63 0.004922968 ubox
58 69 0.004020360 ubox
58 84 0.076075447 ubox
58 87 0.003792660 ubox
59 68 0.003990377 ubox
59 77 0.013146075 ubox
59 83 0.076441931 ubox
59 86 0.003856683 ubox
60 69 0.004203945 ubox
60 76 0.013087918 ubox
60 84 0.003887816 ubox
60 93 0.003607480 ubox
61 68 0.004356608 ubox
61 75 0.012661278 ubox
61 76 0.005666421 ubox
61 83 0.003937548 ubox
61 87 0.004253292 ubox
61 92 0.003627922 ubox
62 67 0.004339935 ubox
62 73 0.012010437 ubox
62 75 0.006963737 ubox
62 80 0.076674691 ubox
62 83 0.003174561 ubox
62 86 0.004629463 ubox
62 91 0.003579572 ubox
63 72 0.012010242 ubox
63 74 0.007710759 ubox
63 79 0.076489346 ubox
63 85 0.004501335 ubox
64 73 0.007762333 ubox
64 77 0.053485432 ubox
64 78 0.055239965 ubox
65 76 0.075243442 ubox
65 84 0.013526198 ubox
65 87 0.007577578 ubox
66 75 0.075301247 ubox
66 83 0.013940206 ubox
66 86 0.007785484 ubox
67 82 0.011308344 ubox
67 85 0.007753474 ubox
68 82 0.015551930 ubox
69 79 0.041738561 ubox
69 81 0.029947816 ubox
70 77 0.119103281 ubox
70 78 0.061375313 ubox
70 80 0.037548857 ubox
70 84 0.003906698 ubox
71 76 0.112666410 ubox
73 85 0.058412436 ubox
73 88 0.005658965 ubox
74 84 0.058823885 ubox
74 87 0.005863302 ubox
74 107 0.008138880 ubox
75 82 0.099553761 ubox
75 99 0.083292202 ubox
75 102 0.025117418 ubox
75 106 0.008539563 ubox
76 81 0.091537286 ubox
76 97 0.003272168 ubox
76 98 0.083542841 ubox
76 101 0.025264055 ubox
76 105 0.003611191 ubox
76 106 0.005052510 ubox
77 96 0.005273440 ubox
77 97 0.083517604 ubox
77 100 0.025275715 ubox
77 105 0.006664182 ubox
77 106 0.149104233 ubox
78 85 0.034724592 ubox
78 88 0.004700329 ubox
78 95 0.006330568 ubox
78 96 0.083412117 ubox
78 99 0.024883899 ubox
78 105 0.146617232 ubox
79 84 0.030912033 ubox
79 87 0.005035506 ubox
79 104 0.131475670 ubox
79 107 0.106472161 ubox
80 88 0.050562873 ubox
80 105 0.683563690 ubox
80 106 0.089939201 ubox
81 87 0.054134220 ubox
81 90 0.082449680 ubox
81 93 0.011490004 ubox
81 104 0.692061916 ubox
82 86 0.053312078 ubox
82 89 0.087632802 ubox
82 92 0.009136577 ubox
82 103 0.695851406 ubox
82 107 0.310044308 ubox
83 88 0.088048541 ubox
83 95 0.007253908 ubox
83 102 0.695759726 ubox
83 106 0.317064895 ubox
84 94 0.007229500 ubox
84 101 0.692453938 ubox
84 105 0.298056348 ubox
84 108 0.288720973 ubox
85 93 0.006830596 ubox
85 103 0.467252405 ubox
85 104 0.057475014 ubox
85 107 0.407607159 ubox
86 95 0.004129281 ubox
86 99 0.691506438 ubox
86 100 0.055280674 ubox
86 102 0.474886762 ubox
86 106 0.414049580 ubox
87 94 0.004172858 ubox
87 98 0.688587521 ubox
87 99 0.036987166 ubox
87 101 0.474524204 ubox
87 105 0.387833962 ubox
88 93 0.003737883 ubox
88 103 0.525228284 ubox
88 104 0.046977854 ubox
89 95 0.031005718 ubox
89 96 0.651512462 ubox
89 97 0.222022065 ubox
89 99 0.478930126 ubox
89 100 0.003409139 ubox
89 102 0.531143627 ubox
90 94 0.033434982 ubox
90 95 0.598978562 ubox
90 96 0.219771003 ubox
90 97 0.023861126 ubox
90 98 0.480760501 ubox
90 101 0.531291371 ubox
91 95 0.224291768 ubox
91 96 0.041023049 ubox
91 97 0.481691603 ubox
91 100 0.531503673 ubox
92 96 0.478192201 ubox
92 99 0.531400799 ubox
93 98 0.505952245 ubox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
80 105 0.9500000 lbox
81 104 0.9500000 lbox
82 103 0.9500000 lbox
83 102 0.9500000 lbox
84 101 0.9500000 lbox
86 99 0.9500000 lbox
87 98 0.9500000 lbox
89 96 0.9500000 lbox
90 95 0.9500000 lbox
showpage
end
%%EOF
