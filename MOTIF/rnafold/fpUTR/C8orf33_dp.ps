%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C8orf33)
} def

/sequence { (\
GGAAUUCGGCGUCGGACUCUGCGCCCCGCGUAGUUCCGGUGGCGACUGCGGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.047727787 ubox
1 19 0.004219398 ubox
1 20 0.075560658 ubox
1 26 0.004080171 ubox
1 27 0.041986411 ubox
1 37 0.110422512 ubox
1 47 0.233465512 ubox
2 6 0.031224390 ubox
2 13 0.006316825 ubox
2 18 0.003590386 ubox
2 19 0.080016377 ubox
2 26 0.042225437 ubox
2 36 0.110510353 ubox
2 46 0.246873687 ubox
3 12 0.006504366 ubox
3 18 0.078764710 ubox
3 35 0.110459937 ubox
4 12 0.004559334 ubox
4 34 0.110267295 ubox
5 11 0.004661655 ubox
5 16 0.079809474 ubox
5 33 0.109686026 ubox
5 45 0.039705266 ubox
5 51 0.015384766 ubox
6 15 0.080868749 ubox
6 16 0.003574942 ubox
6 32 0.104650747 ubox
6 44 0.008130951 ubox
6 45 0.880135655 ubox
6 50 0.010121925 ubox
6 51 0.019748273 ubox
7 14 0.081113070 ubox
7 15 0.003675457 ubox
7 28 0.021047517 ubox
7 30 0.054785725 ubox
7 41 0.004321866 ubox
7 44 0.947173690 ubox
7 48 0.037164061 ubox
7 50 0.025620845 ubox
7 53 0.037042223 ubox
8 13 0.080036059 ubox
8 25 0.150402731 ubox
8 26 0.010555301 ubox
8 27 0.015295684 ubox
8 29 0.025231731 ubox
8 40 0.004088833 ubox
8 43 0.948166189 ubox
8 47 0.038602316 ubox
8 49 0.025132138 ubox
8 52 0.038830238 ubox
9 24 0.152747219 ubox
9 25 0.008036692 ubox
9 26 0.013460396 ubox
9 29 0.081057224 ubox
9 31 0.038158517 ubox
9 40 0.004577336 ubox
9 43 0.035098104 ubox
9 46 0.039105246 ubox
9 49 0.009403151 ubox
9 52 0.007999281 ubox
9 54 0.204172971 ubox
10 23 0.153080784 ubox
10 28 0.081677292 ubox
10 30 0.039037683 ubox
10 39 0.004793256 ubox
10 41 0.947729096 ubox
10 42 0.039686446 ubox
10 44 0.039510309 ubox
10 48 0.010104543 ubox
10 50 0.038642285 ubox
10 51 0.007901827 ubox
10 53 0.206530641 ubox
11 22 0.153025970 ubox
11 24 0.012161511 ubox
11 27 0.081036313 ubox
11 29 0.039028837 ubox
11 40 0.897289571 ubox
11 43 0.039551760 ubox
11 46 0.023629160 ubox
11 47 0.005059513 ubox
11 49 0.037834444 ubox
11 52 0.205167478 ubox
11 54 0.004870322 ubox
12 21 0.075094496 ubox
12 23 0.009276286 ubox
12 28 0.018274407 ubox
12 39 0.906233524 ubox
12 42 0.037141789 ubox
12 45 0.023658302 ubox
12 48 0.033826175 ubox
12 51 0.204775232 ubox
12 53 0.004683071 ubox
13 21 0.133313601 ubox
13 23 0.043507255 ubox
13 28 0.034433272 ubox
13 38 0.958275309 ubox
13 41 0.022479492 ubox
13 44 0.023381839 ubox
13 48 0.009264809 ubox
13 50 0.203213260 ubox
14 20 0.133365727 ubox
14 22 0.043566266 ubox
14 25 0.064763546 ubox
14 26 0.028625130 ubox
14 27 0.035242541 ubox
14 36 0.014658235 ubox
14 37 0.959665496 ubox
14 40 0.006247311 ubox
14 43 0.022383678 ubox
14 47 0.009048407 ubox
14 49 0.198927376 ubox
15 19 0.130720321 ubox
15 24 0.064858893 ubox
15 25 0.028657337 ubox
15 26 0.035155566 ubox
15 35 0.019477071 ubox
15 36 0.959949761 ubox
15 46 0.009437070 ubox
16 34 0.081639433 ubox
16 35 0.948508511 ubox
16 40 0.021811807 ubox
17 33 0.110992578 ubox
17 39 0.022132892 ubox
18 32 0.105446111 ubox
18 38 0.021912084 ubox
18 45 0.037361616 ubox
19 33 0.953179561 ubox
19 44 0.032166941 ubox
20 30 0.092583608 ubox
20 32 0.954011848 ubox
20 48 0.004269698 ubox
21 29 0.096182566 ubox
21 31 0.955549065 ubox
21 43 0.004876293 ubox
21 54 0.079246347 ubox
22 28 0.096184009 ubox
22 30 0.955841134 ubox
22 41 0.009612721 ubox
22 42 0.004459160 ubox
22 44 0.193833540 ubox
22 53 0.080165478 ubox
23 27 0.089984447 ubox
23 29 0.955682856 ubox
23 40 0.009722461 ubox
23 43 0.196620083 ubox
23 52 0.080192171 ubox
23 54 0.006449288 ubox
24 28 0.948743254 ubox
24 39 0.009678344 ubox
24 42 0.196625076 ubox
24 51 0.079811746 ubox
24 53 0.006487077 ubox
25 38 0.009600686 ubox
25 41 0.196597516 ubox
25 50 0.071886246 ubox
25 51 0.005592241 ubox
26 39 0.196533791 ubox
26 42 0.008152318 ubox
26 50 0.006807662 ubox
26 51 0.024064479 ubox
27 38 0.196547040 ubox
27 41 0.008449273 ubox
27 48 0.005549741 ubox
27 50 0.024933468 ubox
27 53 0.123381361 ubox
28 34 0.008227216 ubox
28 37 0.194983749 ubox
28 40 0.008958099 ubox
28 47 0.004976403 ubox
28 49 0.027485187 ubox
28 52 0.131266005 ubox
28 54 0.011968703 ubox
29 33 0.012179052 ubox
29 38 0.007086881 ubox
29 39 0.008774664 ubox
29 48 0.027313796 ubox
29 50 0.107003298 ubox
29 51 0.093002038 ubox
29 53 0.011990242 ubox
30 37 0.008356744 ubox
30 46 0.011111167 ubox
30 47 0.013503407 ubox
30 49 0.158266020 ubox
30 52 0.011616234 ubox
31 45 0.010607511 ubox
31 48 0.158495891 ubox
31 51 0.011067255 ubox
32 47 0.159743702 ubox
33 43 0.012801008 ubox
33 46 0.160400542 ubox
33 49 0.007611039 ubox
34 42 0.012420134 ubox
34 45 0.158084383 ubox
34 48 0.006405878 ubox
35 41 0.010419849 ubox
35 42 0.006107581 ubox
35 44 0.146319487 ubox
35 45 0.018120985 ubox
36 41 0.009617936 ubox
36 42 0.135128038 ubox
36 44 0.020558817 ubox
36 50 0.003715705 ubox
37 41 0.134255813 ubox
37 44 0.055159275 ubox
37 48 0.033641163 ubox
38 43 0.061292858 ubox
38 47 0.040454046 ubox
38 52 0.005526243 ubox
39 46 0.044757147 ubox
39 49 0.025222698 ubox
39 52 0.131770429 ubox
39 54 0.089163903 ubox
40 45 0.044339269 ubox
40 48 0.025218645 ubox
40 50 0.004447232 ubox
40 51 0.131948720 ubox
40 53 0.090521403 ubox
41 47 0.025076744 ubox
41 49 0.005029123 ubox
41 52 0.092047689 ubox
42 46 0.024644434 ubox
42 49 0.137620757 ubox
42 52 0.025540724 ubox
42 54 0.019581259 ubox
43 48 0.137473347 ubox
43 50 0.092487512 ubox
43 51 0.025282784 ubox
43 53 0.019816279 ubox
44 49 0.091074363 ubox
44 52 0.020105981 ubox
47 53 0.043294352 ubox
48 52 0.056897047 ubox
48 54 0.187101149 ubox
49 53 0.187893633 ubox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
showpage
end
%%EOF
