%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PI4K2A)
} def

/sequence { (\
CGGCCGCGAGCGCAGUGGUGUGGAGCGCGCCGGGUCCCGGAGCCGGCUGUCUGAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.014836213 ubox
1 20 0.035259474 ubox
1 22 0.055293030 ubox
1 27 0.013754853 ubox
1 29 0.003205896 ubox
1 32 0.945131962 ubox
1 45 0.030145828 ubox
1 49 0.099316756 ubox
1 53 0.047118231 ubox
2 7 0.015062408 ubox
2 19 0.025621759 ubox
2 21 0.041463077 ubox
2 26 0.015055575 ubox
2 28 0.016583344 ubox
2 31 0.958602954 ubox
2 36 0.032690498 ubox
2 37 0.009389713 ubox
2 44 0.030560996 ubox
2 48 0.102230015 ubox
2 51 0.064261795 ubox
2 52 0.044071331 ubox
3 16 0.004532576 ubox
3 19 0.150378945 ubox
3 26 0.011996380 ubox
3 28 0.156398542 ubox
3 30 0.958667648 ubox
3 35 0.045319690 ubox
3 36 0.009395749 ubox
3 43 0.030556467 ubox
3 47 0.102393656 ubox
3 50 0.063917383 ubox
3 51 0.042673870 ubox
4 15 0.004879629 ubox
4 18 0.157426003 ubox
4 23 0.037295563 ubox
4 25 0.011907349 ubox
4 27 0.110941307 ubox
4 29 0.951231592 ubox
4 33 0.005110507 ubox
4 34 0.047564333 ubox
4 42 0.030429422 ubox
4 46 0.102356594 ubox
4 49 0.067920766 ubox
4 56 0.040199596 ubox
4 57 0.015772018 ubox
5 17 0.157584937 ubox
5 22 0.037481152 ubox
5 27 0.955095131 ubox
5 29 0.120975756 ubox
5 32 0.005181756 ubox
5 33 0.047526665 ubox
5 45 0.102172911 ubox
5 49 0.020528591 ubox
5 55 0.040174075 ubox
5 56 0.016016243 ubox
6 13 0.018400282 ubox
6 16 0.157454876 ubox
6 21 0.037184116 ubox
6 26 0.966322318 ubox
6 28 0.179202399 ubox
6 30 0.006413437 ubox
6 31 0.004470675 ubox
6 43 0.028336050 ubox
6 44 0.047636632 ubox
6 47 0.003665085 ubox
6 48 0.005905978 ubox
6 50 0.008592104 ubox
7 12 0.018414696 ubox
7 15 0.157499852 ubox
7 20 0.037087431 ubox
7 22 0.011476872 ubox
7 25 0.966142128 ubox
7 27 0.179268473 ubox
7 29 0.008066290 ubox
7 32 0.047630190 ubox
7 39 0.015993988 ubox
7 42 0.040039414 ubox
7 46 0.003609047 ubox
7 49 0.008886914 ubox
7 53 0.022412860 ubox
8 19 0.026125106 ubox
8 21 0.008161518 ubox
8 26 0.176718138 ubox
8 28 0.008067869 ubox
8 31 0.047844305 ubox
8 38 0.015886994 ubox
8 48 0.007187077 ubox
8 51 0.011559670 ubox
8 52 0.016396059 ubox
9 50 0.010842410 ubox
9 52 0.011107231 ubox
10 16 0.019342440 ubox
10 19 0.035163680 ubox
10 21 0.770376990 ubox
10 26 0.012599048 ubox
10 28 0.041254033 ubox
10 30 0.047694139 ubox
10 35 0.003397268 ubox
10 43 0.005993204 ubox
10 50 0.006615563 ubox
10 51 0.011645135 ubox
11 15 0.019284008 ubox
11 17 0.014458574 ubox
11 18 0.037003243 ubox
11 20 0.773008208 ubox
11 22 0.603895025 ubox
11 25 0.012583411 ubox
11 27 0.041321147 ubox
11 29 0.047898729 ubox
11 34 0.003503285 ubox
11 39 0.033496643 ubox
11 42 0.005976331 ubox
11 49 0.007060051 ubox
12 16 0.008962875 ubox
12 19 0.771856252 ubox
12 21 0.606610360 ubox
12 26 0.041362291 ubox
12 28 0.047956070 ubox
12 35 0.018495565 ubox
12 38 0.032960505 ubox
12 48 0.004896961 ubox
12 50 0.011997506 ubox
13 18 0.771049164 ubox
13 20 0.606902854 ubox
13 22 0.023848620 ubox
13 25 0.041277148 ubox
13 27 0.047805387 ubox
13 34 0.020084804 ubox
13 49 0.012121045 ubox
14 19 0.581934799 ubox
14 21 0.023545981 ubox
14 48 0.011862714 ubox
15 26 0.046080684 ubox
15 28 0.007691310 ubox
15 35 0.004902716 ubox
15 47 0.010173557 ubox
16 22 0.015034207 ubox
16 25 0.046001028 ubox
16 27 0.007709569 ubox
16 32 0.041114915 ubox
16 45 0.003957346 ubox
16 46 0.008782642 ubox
17 21 0.007335450 ubox
17 26 0.008706846 ubox
17 31 0.045592583 ubox
17 44 0.005612877 ubox
18 26 0.007046291 ubox
18 28 0.011369546 ubox
18 30 0.045667425 ubox
18 43 0.005602258 ubox
19 25 0.007065193 ubox
19 27 0.011481338 ubox
19 29 0.045658807 ubox
19 42 0.005509584 ubox
20 26 0.013411994 ubox
20 28 0.051069929 ubox
21 25 0.012551887 ubox
21 27 0.050970881 ubox
21 39 0.004648760 ubox
21 53 0.073335610 ubox
22 26 0.048579266 ubox
22 28 0.004660687 ubox
22 38 0.005080794 ubox
22 51 0.010485469 ubox
22 52 0.118719580 ubox
23 37 0.005069493 ubox
23 50 0.006133730 ubox
23 51 0.124284413 ubox
24 48 0.009091462 ubox
24 50 0.108097591 ubox
24 52 0.062348841 ubox
25 35 0.004784517 ubox
25 43 0.003277366 ubox
25 47 0.009672826 ubox
25 50 0.088575676 ubox
25 51 0.063554701 ubox
26 34 0.004920620 ubox
26 42 0.003281010 ubox
26 46 0.009454181 ubox
26 49 0.142818347 ubox
26 53 0.005388861 ubox
27 43 0.088101827 ubox
27 44 0.005722279 ubox
27 47 0.003607250 ubox
27 48 0.140870853 ubox
27 50 0.048994860 ubox
28 42 0.088311278 ubox
28 49 0.054615233 ubox
29 47 0.257974978 ubox
29 48 0.011579788 ubox
30 40 0.096613939 ubox
30 46 0.258837699 ubox
31 39 0.096972235 ubox
31 45 0.258971096 ubox
32 38 0.097001004 ubox
32 44 0.260080777 ubox
32 51 0.010746142 ubox
32 52 0.008444325 ubox
33 37 0.095460970 ubox
33 43 0.260074976 ubox
33 44 0.052971758 ubox
33 47 0.004683979 ubox
33 48 0.039905926 ubox
33 50 0.012693567 ubox
33 51 0.017393750 ubox
33 52 0.021403480 ubox
34 43 0.053293378 ubox
34 47 0.041850877 ubox
34 50 0.015947570 ubox
34 51 0.022452113 ubox
35 41 0.257868154 ubox
35 42 0.050850782 ubox
35 46 0.035464484 ubox
35 49 0.008914062 ubox
35 54 0.009819963 ubox
35 56 0.076018111 ubox
35 57 0.573272626 ubox
36 40 0.256355227 ubox
36 45 0.034800270 ubox
36 46 0.013459442 ubox
36 53 0.010269903 ubox
36 55 0.096207264 ubox
36 56 0.929618929 ubox
36 57 0.167066156 ubox
37 45 0.011961600 ubox
37 46 0.066093550 ubox
37 55 0.931044222 ubox
37 56 0.170766616 ubox
37 57 0.009333831 ubox
38 45 0.067177577 ubox
38 49 0.015620675 ubox
38 53 0.939198450 ubox
38 55 0.166328142 ubox
38 56 0.009195141 ubox
39 44 0.066732412 ubox
39 48 0.016822050 ubox
39 51 0.012310236 ubox
39 52 0.946554550 ubox
40 47 0.016839302 ubox
40 50 0.010918925 ubox
40 51 0.948437216 ubox
41 48 0.050106302 ubox
41 50 0.937944212 ubox
41 52 0.096190525 ubox
42 47 0.078964586 ubox
42 50 0.108367022 ubox
42 51 0.096750965 ubox
43 49 0.208775648 ubox
43 56 0.010695688 ubox
43 57 0.004590420 ubox
44 53 0.014959899 ubox
44 55 0.010715558 ubox
44 56 0.004702522 ubox
45 51 0.008110166 ubox
45 52 0.016228895 ubox
46 50 0.005695159 ubox
46 51 0.016045345 ubox
47 55 0.038916826 ubox
47 56 0.030839816 ubox
47 57 0.008365074 ubox
48 54 0.040104835 ubox
48 55 0.031240012 ubox
48 56 0.009918699 ubox
50 56 0.012532508 ubox
50 57 0.014454108 ubox
51 55 0.015713146 ubox
51 56 0.023742127 ubox
51 57 0.012972146 ubox
52 56 0.012090156 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
