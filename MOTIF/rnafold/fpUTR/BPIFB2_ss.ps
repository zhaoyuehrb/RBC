%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAAAGGCCAUGUUUGCAGGGAAAACACUUGCAACCACAAGCAAACUCGCCGCUCCCUGGGUCCCUUCCCAGUGGACUCUGCACAUUGGGAGCCUUAUAAAGUAGCCUCUGCAUCUGCCUGCCUCGGGCAGAGGAGGGCUACCCUGGGGCUGAGAGUUCACCUGUCUCAGGAACCACCUGAGCCCACAGAUCCUGUGGGCAGCGGCCAGGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-44.98780060 302.55435181]
[-55.36266708 313.38772583]
[-65.73753357 324.22109985]
[-60.42982101 340.97869873]
[-64.32379150 358.02868652]
[-76.25796509 370.69085693]
[-92.87669373 375.53656006]
[-109.57332611 371.31655884]
[-119.63168335 382.44442749]
[-118.43122864 399.89910889]
[-130.00012207 412.57028198]
[-146.81613159 412.94366455]
[-156.71308899 424.21533203]
[-160.00425720 439.69042969]
[-174.21582031 444.14920044]
[-184.11277771 455.42086792]
[-194.00973511 466.69253540]
[-203.90669250 477.96417236]
[-213.80364990 489.23583984]
[-223.70060730 500.50750732]
[-233.59756470 511.77914429]
[-231.04931641 527.20770264]
[-239.05897522 540.63824463]
[-253.84463501 545.72924805]
[-268.42492676 540.07696533]
[-275.91552734 526.35015869]
[-272.77957153 511.03024292]
[-260.49777222 501.35079956]
[-244.86921692 501.88220215]
[-234.97225952 490.61053467]
[-225.07530212 479.33886719]
[-215.17834473 468.06723022]
[-205.28138733 456.79556274]
[-195.38442993 445.52389526]
[-185.48747253 434.25225830]
[-182.90420532 419.58337402]
[-167.98474121 414.31835938]
[-158.08778381 403.04672241]
[-160.71369934 390.43496704]
[-155.52018738 378.43374634]
[-144.19702148 371.51174927]
[-130.75955200 372.38607788]
[-120.70118713 361.25820923]
[-125.85189056 349.72805786]
[-126.26252747 337.05969238]
[-121.83684540 325.13259888]
[-113.19873047 315.72961426]
[-101.60449982 310.27053833]
[-88.76026917 309.59768677]
[-76.57091522 313.84625244]
[-66.19605255 303.01284790]
[-55.82118607 292.17947388]
[-45.60351181 281.19772339]
[-35.54515457 270.06985474]
[-25.48679352 258.94198608]
[-15.50887585 247.74192810]
[-5.61191893 236.47027588]
[4.28503799 225.19860840]
[14.18199539 213.92695618]
[24.07895279 202.65530396]
[33.97591019 191.38365173]
[34.56654358 186.64920044]
[38.13424683 182.23400879]
[44.32416153 179.93505859]
[54.54183197 168.95329285]
[64.68011475 157.89819336]
[74.73847198 146.77032471]
[61.91840744 110.82357788]
[77.43896484 87.03039551]
[66.31110382 76.97203827]
[55.18323517 66.91367340]
[44.05536652 56.85531616]
[32.92750168 46.79695892]
[21.79963493 36.73859787]
[10.67176914 26.68023872]
[-4.19129896 30.81457520]
[-18.92333221 26.23519325]
[-28.82339287 14.40335751]
[-30.73240662 -0.90543813]
[-24.04121399 -14.80621147]
[-10.88495064 -22.86327553]
[4.53826714 -22.50565147]
[17.30694771 -13.84745693]
[23.34665108 0.34851235]
[20.73012924 15.55237198]
[31.85799408 25.61073112]
[42.98586273 35.66909027]
[54.11372757 45.72745132]
[65.24159241 55.78580856]
[76.36946106 65.84416962]
[87.49732208 75.90252686]
[102.10034943 72.47445679]
[107.59004974 58.51511765]
[113.07974243 44.55577469]
[118.56944275 30.59643364]
[124.05913544 16.63709068]
[129.54882812 2.67774868]
[135.03852844 -11.28159332]
[128.26412964 -21.04356956]
[127.05314636 -32.74351120]
[131.59117126 -43.46530151]
[140.64527893 -50.59253693]
[151.89645386 -52.44684219]
[157.78614807 -66.24218750]
[163.67584229 -80.03752899]
[169.56553650 -93.83287048]
[175.45523071 -107.62821198]
[181.34492493 -121.42355347]
[181.83555603 -130.53944397]
[187.42018127 -135.37428284]
[193.50805664 -149.08332825]
[187.25524902 -161.00946045]
[188.98591614 -174.16746521]
[197.84643555 -183.78480530]
[210.43850708 -186.50346375]
[216.72331238 -200.12335205]
[223.00811768 -213.74324036]
[229.29292297 -227.36312866]
[235.57771301 -240.98300171]
[241.86251831 -254.60289001]
[248.14732361 -268.22277832]
[254.43212891 -281.84265137]
[255.57849121 -298.75781250]
[272.14993286 -302.33883667]
[280.17843628 -287.40634155]
[268.05200195 -275.55786133]
[261.76721191 -261.93795776]
[255.48240662 -248.31808472]
[249.19760132 -234.69821167]
[242.91279602 -221.07832336]
[236.62799072 -207.45843506]
[230.34320068 -193.83854675]
[224.05839539 -180.21867371]
[230.54206848 -164.69836426]
[223.65675354 -148.98243713]
[207.21710205 -142.99543762]
[201.12921143 -129.28640747]
[195.14027405 -115.53385925]
[189.25057983 -101.73851776]
[183.36088562 -87.94317627]
[177.47117615 -74.14783478]
[171.58148193 -60.35248947]
[165.69178772 -46.55714798]
[173.52258301 -30.00625420]
[166.64582825 -12.69242382]
[148.99786377 -5.79189777]
[143.50817871 8.16744423]
[138.01847839 22.12678719]
[132.52877808 36.08612823]
[127.03908539 50.04547119]
[121.54939270 64.00481415]
[116.05969238 77.96415710]
[125.11949158 89.91907501]
[140.04324341 88.40848541]
[152.99406433 79.32076263]
[166.43582153 85.73701477]
[181.35957336 84.22642517]
[192.57675171 72.75671387]
[208.52275085 74.51869965]
[216.96516418 88.16073608]
[211.42768860 103.21782684]
[196.15820312 108.13945770]
[182.87014771 99.15016937]
[167.94641113 100.66075897]
[156.06303406 109.64043427]
[141.55381775 103.33222961]
[126.63008118 104.84281158]
[124.90459442 119.74324036]
[139.08815002 124.62448883]
[153.27171326 129.50573730]
[167.45527649 134.38699341]
[181.63883972 139.26824951]
[196.62960815 133.55368042]
[210.37020874 141.83471680]
[212.32002258 157.75885010]
[200.98330688 169.11044312]
[185.05664062 167.18153381]
[176.75758362 153.45181274]
[162.57402039 148.57055664]
[148.39045715 143.68930054]
[134.20690918 138.80805969]
[120.02333832 133.92680359]
[111.84771729 146.50292969]
[122.06538391 157.48469543]
[132.28306580 168.46646118]
[142.50073242 179.44822693]
[152.71839905 190.42999268]
[162.93608093 201.41175842]
[173.15374756 212.39352417]
[183.37142944 223.37528992]
[198.58732605 230.85276794]
[195.61425781 247.54399109]
[178.75230408 249.30770874]
[172.38966370 233.59295654]
[162.17198181 222.61119080]
[151.95431519 211.62942505]
[141.73663330 200.64765930]
[131.51896667 189.66590881]
[121.30129242 178.68414307]
[111.08361816 167.70237732]
[100.86595154 156.72061157]
[85.86634064 156.82868958]
[75.80797577 167.95655823]
[72.37758636 176.41661072]
[65.52359772 179.17097473]
[55.30592728 190.15274048]
[45.24756622 201.28060913]
[35.35060883 212.55226135]
[25.45365143 223.82391357]
[15.55669498 235.09556580]
[5.65973759 246.36723328]
[-4.23721981 257.63888550]
[-7.54534054 266.14749146]
[-14.35892773 269.00033569]
[-24.41728592 280.12820435]
[-34.47564697 291.25607300]
[-36.23145294 297.62139893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[8 43]
[9 42]
[12 38]
[13 37]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[53 216]
[54 215]
[55 214]
[56 212]
[57 211]
[58 210]
[59 209]
[60 208]
[61 207]
[64 206]
[65 205]
[66 203]
[67 202]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[110 137]
[111 136]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[153 167]
[154 166]
[156 164]
[157 163]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
