%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALX3)
} def

/sequence { (\
CCAGGUCCCUCCCCCUUGGCGGGCGCUCACAGGCGGCGCGGGCAGCGCGAGCCCCGGAGCCCCGGAGGCCUGUGCGCCCUGAGCCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.055963212 ubox
1 22 0.005672691 ubox
1 23 0.004063028 ubox
1 33 0.454863141 ubox
1 87 0.128663572 ubox
2 18 0.057562028 ubox
2 21 0.005675055 ubox
2 22 0.004134023 ubox
2 32 0.461515727 ubox
2 72 0.007527964 ubox
2 81 0.004964471 ubox
2 86 0.129615257 ubox
3 10 0.015473293 ubox
3 16 0.079750624 ubox
3 17 0.048731960 ubox
3 27 0.652699585 ubox
3 71 0.007572521 ubox
3 80 0.004839616 ubox
4 9 0.016492964 ubox
4 10 0.005957972 ubox
4 11 0.009837521 ubox
4 12 0.077906317 ubox
4 13 0.056740906 ubox
4 14 0.027251309 ubox
4 15 0.093417841 ubox
4 16 0.036450302 ubox
4 26 0.686144924 ubox
4 27 0.554169319 ubox
4 28 0.252540244 ubox
4 70 0.007579893 ubox
4 79 0.004098898 ubox
4 85 0.087475695 ubox
5 9 0.006326455 ubox
5 10 0.007270354 ubox
5 11 0.078088460 ubox
5 12 0.056591245 ubox
5 13 0.027361535 ubox
5 14 0.093377606 ubox
5 15 0.036131938 ubox
5 20 0.004366278 ubox
5 24 0.368331911 ubox
5 26 0.632072251 ubox
5 27 0.083435215 ubox
5 30 0.087779388 ubox
5 34 0.006007471 ubox
5 69 0.007558345 ubox
5 78 0.003726668 ubox
5 84 0.087344014 ubox
5 88 0.018182890 ubox
6 19 0.003769770 ubox
6 22 0.007643075 ubox
6 23 0.210551651 ubox
6 25 0.627069623 ubox
6 29 0.086989094 ubox
6 33 0.006032367 ubox
6 68 0.004379291 ubox
6 82 0.027290932 ubox
6 83 0.079706767 ubox
6 87 0.017689956 ubox
7 18 0.003738560 ubox
7 21 0.013333943 ubox
7 22 0.208539632 ubox
7 23 0.926952892 ubox
7 32 0.004898535 ubox
7 33 0.003972174 ubox
7 67 0.003892777 ubox
7 81 0.031783948 ubox
7 86 0.016082181 ubox
7 87 0.009838496 ubox
8 19 0.025954064 ubox
8 21 0.204861963 ubox
8 22 0.930499772 ubox
8 23 0.244599369 ubox
8 32 0.003959206 ubox
8 33 0.014253464 ubox
8 68 0.005555789 ubox
8 86 0.009826926 ubox
8 87 0.011626440 ubox
9 18 0.031436496 ubox
9 19 0.081678629 ubox
9 21 0.930716322 ubox
9 22 0.245076545 ubox
9 23 0.030480432 ubox
9 32 0.014398750 ubox
9 67 0.006167313 ubox
9 83 0.010495294 ubox
9 86 0.011678943 ubox
10 18 0.073568567 ubox
10 19 0.105566708 ubox
10 21 0.233831339 ubox
10 22 0.030436143 ubox
10 23 0.024167880 ubox
10 31 0.013893390 ubox
10 66 0.006530946 ubox
10 82 0.011875258 ubox
11 18 0.110590044 ubox
11 19 0.908858032 ubox
11 21 0.062858866 ubox
11 22 0.041546825 ubox
11 23 0.019819131 ubox
11 33 0.005248433 ubox
11 65 0.006534308 ubox
11 81 0.011706828 ubox
11 87 0.007986712 ubox
12 18 0.906305114 ubox
12 19 0.331662669 ubox
12 21 0.041943963 ubox
12 22 0.020578150 ubox
12 23 0.034354526 ubox
12 32 0.005292412 ubox
12 33 0.008454062 ubox
12 36 0.003414439 ubox
12 64 0.005677544 ubox
12 86 0.008002349 ubox
12 87 0.008598639 ubox
13 18 0.333372146 ubox
13 19 0.113751840 ubox
13 21 0.020463906 ubox
13 22 0.035806395 ubox
13 23 0.033712648 ubox
13 32 0.008590826 ubox
13 33 0.022960894 ubox
13 35 0.003503562 ubox
13 86 0.008629604 ubox
13 87 0.016993715 ubox
14 18 0.113481304 ubox
14 21 0.035754213 ubox
14 22 0.035343881 ubox
14 23 0.005738040 ubox
14 32 0.023102360 ubox
14 33 0.065788633 ubox
14 86 0.016947422 ubox
14 87 0.027085147 ubox
15 21 0.035366570 ubox
15 22 0.005981003 ubox
15 32 0.066521415 ubox
15 33 0.012641483 ubox
15 83 0.006090295 ubox
15 86 0.026947490 ubox
15 87 0.020626849 ubox
16 21 0.005471216 ubox
16 31 0.065506850 ubox
16 32 0.012821431 ubox
16 82 0.006162943 ubox
16 86 0.014674972 ubox
16 87 0.062945965 ubox
17 29 0.056895112 ubox
17 31 0.013797018 ubox
17 81 0.006064010 ubox
17 86 0.101557044 ubox
18 27 0.043609882 ubox
18 28 0.057164361 ubox
18 30 0.014214191 ubox
18 80 0.003692026 ubox
18 85 0.123288765 ubox
19 26 0.072470410 ubox
19 27 0.007812037 ubox
19 39 0.014723956 ubox
19 84 0.123385037 ubox
19 88 0.008017133 ubox
20 25 0.072671943 ubox
20 38 0.014899412 ubox
20 64 0.004542660 ubox
20 81 0.012921814 ubox
20 83 0.123144750 ubox
20 86 0.041501934 ubox
20 87 0.009356679 ubox
21 27 0.007829087 ubox
21 28 0.007321830 ubox
21 37 0.014900881 ubox
21 39 0.017044087 ubox
21 63 0.007642322 ubox
21 79 0.118382890 ubox
21 80 0.019870596 ubox
21 85 0.042056587 ubox
22 26 0.007821442 ubox
22 27 0.005761258 ubox
22 28 0.003190097 ubox
22 62 0.007648549 ubox
22 78 0.118523131 ubox
22 79 0.020836842 ubox
22 80 0.004871398 ubox
22 84 0.041887698 ubox
22 85 0.009089033 ubox
23 34 0.024137926 ubox
23 37 0.019082572 ubox
23 39 0.092705913 ubox
23 61 0.007648277 ubox
23 77 0.118552354 ubox
23 78 0.020692699 ubox
23 79 0.003601608 ubox
23 84 0.008757619 ubox
23 88 0.005816417 ubox
24 33 0.031759240 ubox
24 35 0.048552810 ubox
24 36 0.013625386 ubox
24 38 0.094469597 ubox
24 76 0.118574022 ubox
24 83 0.008393838 ubox
24 86 0.007040589 ubox
24 87 0.006649946 ubox
25 34 0.163787902 ubox
25 37 0.094608292 ubox
25 39 0.003616717 ubox
25 60 0.007690600 ubox
25 75 0.118053463 ubox
25 77 0.021293439 ubox
25 84 0.026226376 ubox
25 85 0.004822875 ubox
25 88 0.046268624 ubox
26 32 0.037659495 ubox
26 33 0.168139831 ubox
26 36 0.094442532 ubox
26 38 0.003619193 ubox
26 59 0.007691734 ubox
26 74 0.105867471 ubox
26 76 0.021294191 ubox
26 83 0.026794728 ubox
26 87 0.046575716 ubox
27 31 0.034580754 ubox
27 32 0.154705954 ubox
27 33 0.018270054 ubox
27 35 0.078327884 ubox
27 36 0.006330678 ubox
27 58 0.007691167 ubox
27 82 0.026878642 ubox
27 86 0.032219451 ubox
27 87 0.004452830 ubox
28 32 0.044319368 ubox
28 35 0.048322265 ubox
28 57 0.007687251 ubox
28 72 0.007055451 ubox
28 74 0.056917523 ubox
28 81 0.026752311 ubox
28 86 0.011296576 ubox
29 71 0.005592589 ubox
29 73 0.114256011 ubox
29 80 0.025401560 ubox
30 72 0.120199730 ubox
30 81 0.003803991 ubox
31 71 0.120249296 ubox
31 80 0.005135296 ubox
32 53 0.008216607 ubox
32 70 0.120301013 ubox
32 78 0.021832432 ubox
32 79 0.006156606 ubox
32 85 0.090872242 ubox
33 39 0.010959313 ubox
33 48 0.003569063 ubox
33 52 0.008332602 ubox
33 69 0.116868861 ubox
33 77 0.021909748 ubox
33 78 0.005982002 ubox
33 84 0.090976350 ubox
33 88 0.265963675 ubox
34 38 0.010889359 ubox
34 47 0.003570706 ubox
34 49 0.011342787 ubox
34 51 0.009980562 ubox
34 68 0.114852795 ubox
34 76 0.021920336 ubox
34 83 0.090956294 ubox
34 86 0.938639235 ubox
34 87 0.191277295 ubox
35 46 0.003372304 ubox
35 48 0.008757939 ubox
35 53 0.070310973 ubox
35 61 0.021949474 ubox
35 75 0.015610316 ubox
35 85 0.982021303 ubox
36 43 0.006422073 ubox
36 48 0.081756988 ubox
36 52 0.070430957 ubox
36 60 0.022008246 ubox
36 75 0.016252225 ubox
36 84 0.982474384 ubox
37 42 0.006436452 ubox
37 47 0.082313721 ubox
37 49 0.036703094 ubox
37 51 0.065397475 ubox
37 59 0.022031802 ubox
37 64 0.037776495 ubox
37 74 0.022210036 ubox
37 81 0.087193276 ubox
37 83 0.981076694 ubox
38 46 0.082449613 ubox
38 48 0.068342367 ubox
38 63 0.037925242 ubox
38 73 0.022246583 ubox
38 80 0.092980921 ubox
38 84 0.005400387 ubox
39 45 0.082436864 ubox
39 47 0.068558227 ubox
39 49 0.030032641 ubox
39 56 0.021405485 ubox
39 64 0.010306357 ubox
39 72 0.022255297 ubox
39 81 0.782061880 ubox
39 83 0.005718609 ubox
40 46 0.068429693 ubox
40 48 0.030012405 ubox
40 54 0.006954216 ubox
40 55 0.021292837 ubox
40 62 0.038655512 ubox
40 63 0.009552929 ubox
40 71 0.022238913 ubox
40 79 0.924367187 ubox
40 80 0.358366713 ubox
41 53 0.008011329 ubox
41 54 0.021021439 ubox
41 61 0.038857947 ubox
41 62 0.008722343 ubox
41 70 0.022254474 ubox
41 78 0.932793086 ubox
41 79 0.338765912 ubox
42 48 0.007418073 ubox
42 52 0.008701528 ubox
42 53 0.020640089 ubox
42 60 0.039052731 ubox
42 61 0.007776059 ubox
42 69 0.022013558 ubox
42 77 0.940224060 ubox
42 78 0.317112206 ubox
43 47 0.007417889 ubox
43 51 0.009335488 ubox
43 59 0.039232842 ubox
43 68 0.021904541 ubox
43 76 0.944520161 ubox
45 52 0.030306082 ubox
45 60 0.006244403 ubox
45 75 0.989727455 ubox
45 77 0.066346222 ubox
46 51 0.030396621 ubox
46 56 0.036913721 ubox
46 59 0.006269805 ubox
46 74 0.990139327 ubox
46 76 0.066649835 ubox
47 55 0.036201341 ubox
47 73 0.989768978 ubox
47 75 0.066687179 ubox
48 56 0.013262070 ubox
48 72 0.990042764 ubox
48 74 0.066659354 ubox
49 55 0.013274449 ubox
49 71 0.957504840 ubox
49 73 0.062831962 ubox
50 71 0.080359169 ubox
51 69 0.990359387 ubox
51 70 0.064223154 ubox
52 68 0.993084299 ubox
53 65 0.005008390 ubox
53 67 0.993986556 ubox
54 64 0.003968122 ubox
54 65 0.998758410 ubox
55 64 0.998895094 ubox
56 62 0.016340436 ubox
56 63 0.998716096 ubox
57 61 0.022609632 ubox
57 62 0.995361687 ubox
76 88 0.006757614 ubox
77 87 0.006776656 ubox
78 86 0.006739185 ubox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
34 86 0.9500000 lbox
35 85 0.9500000 lbox
36 84 0.9500000 lbox
37 83 0.9500000 lbox
40 79 0.9500000 lbox
41 78 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
48 72 0.9500000 lbox
49 71 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
