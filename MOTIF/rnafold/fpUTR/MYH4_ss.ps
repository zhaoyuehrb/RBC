%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUUCCUCAAAAUUCUUGAAGUAGUUGUCUGCUUUGAGCCUGCCACCUUCUUCAUCUGAUAAUACAAGAGGUAUACCUAGUCCAGUACUGCCAUCAAUAACCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[65.85184479 181.80032349]
[69.71441650 196.29447937]
[69.23891449 211.28694153]
[64.46561432 225.50720215]
[55.79903793 237.75016785]
[43.97361374 246.97836304]
[29.99147415 252.40971375]
[15.03750801 253.58398438]
[0.37896928 250.40165710]
[-12.74192619 243.13240051]
[-23.21326828 232.39224243]
[-30.14768028 219.09133911]
[-32.95751572 204.35685730]
[-31.40465736 189.43745422]
[-25.62070274 175.59744263]
[-16.09580231 164.00968933]
[-3.63360023 155.65446472]
[-18.62769890 155.23377991]
[-33.62179947 154.81307983]
[-48.61589813 154.39239502]
[-63.60999680 153.97169495]
[-78.60409546 153.55099487]
[-93.59819794 153.13031006]
[-108.59229279 152.70960999]
[-123.58639526 152.28892517]
[-138.58049011 151.86822510]
[-152.74180603 160.13801575]
[-166.84823608 151.77496338]
[-166.38830566 135.38226318]
[-151.83514404 127.82331848]
[-138.15980530 136.87413025]
[-123.16570282 137.29481506]
[-108.17160034 137.71551514]
[-93.17750549 138.13621521]
[-78.18340302 138.55690002]
[-63.18930435 138.97760010]
[-48.19520569 139.39828491]
[-33.20110321 139.81898499]
[-18.20700645 140.23968506]
[-3.21290636 140.66036987]
[3.12905931 136.71029663]
[11.41755009 137.32106018]
[24.74423409 130.43634033]
[38.07091904 123.55161285]
[51.39760208 116.66688538]
[48.67559052 106.27397156]
[48.16495514 95.47473907]
[49.91598511 84.73744965]
[53.88028717 74.53350830]
[59.91168594 65.31677246]
[67.77146149 57.50339890]
[77.13768768 51.45303726]
[87.61838531 47.45236588]
[98.76791382 45.70158768]
[110.10587311 46.30459213]
[121.13784790 49.26324081]
[131.37693787 54.47605133]
[137.88519287 40.96152115]
[144.39344788 27.44698715]
[136.23181152 14.35533524]
[136.46653748 -1.07024288]
[145.02273560 -13.90750027]
[159.17013550 -20.06011581]
[174.39434814 -17.56481171]
[185.83741760 -7.21783066]
[189.84785461 7.67914343]
[185.14598083 22.37253952]
[173.23213196 32.17375183]
[157.90797424 33.95524216]
[151.39971924 47.46977615]
[144.89146423 60.98431015]
[153.22502136 73.45635223]
[168.20141602 72.61529541]
[183.17782593 71.77423859]
[198.15422058 70.93318176]
[213.11735535 69.88217163]
[228.06428528 68.62141418]
[243.01119995 67.36065674]
[250.92898560 54.01568222]
[265.19189453 47.90425873]
[280.31552124 51.37635422]
[290.48452759 63.09687424]
[291.78875732 78.55904388]
[283.72665405 91.81733704]
[269.39831543 97.77367401]
[254.31324768 94.13772583]
[244.27195740 82.30757904]
[229.32504272 83.56833649]
[214.37811279 84.82909393]
[207.88449097 88.58090973]
[198.99528503 85.90958405]
[184.01887512 86.75064087]
[169.04248047 87.59169769]
[154.06607056 88.43275452]
[154.95625305 100.91507721]
[153.01882935 113.20340729]
[148.38659668 124.66927338]
[141.32934570 134.73390198]
[132.23828125 142.89739990]
[121.60446930 148.76358032]
[109.99239349 152.05911255]
[98.01000214 152.64608765]
[86.27687073 150.52751160]
[75.39218140 145.84544373]
[65.90413666 138.87196350]
[58.28233337 129.99356079]
[44.95564651 136.87829590]
[31.62896156 143.76301575]
[18.30227852 150.64775085]
[33.15177536 152.76727295]
[46.76163483 159.07376099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[42 109]
[43 108]
[44 107]
[45 106]
[57 71]
[58 70]
[59 69]
[72 94]
[73 93]
[74 92]
[75 91]
[76 89]
[77 88]
[78 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
