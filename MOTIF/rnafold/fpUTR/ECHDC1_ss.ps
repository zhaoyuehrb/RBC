%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACACGAGGGAGCGCGAAGCGGAGGGCGCCUCGCGGCAGGAGCGGGAUUUCCGGGGUCACGGGAACCGGCAGGGGAACGGGAUAAAGUUCCCGGAGAAAGGAAAGGAGAGCGUGGGAUAGUAAAAGAGAAGACGCGGAGAAGAGGAGAGGACCUACAAGAACGGAGGACAGGGGCGCACGAUGGUCCCGGGGGGAGCGGAAACAAAGGCACGCAAAACGGAAAAGCGUGUGUAGGGGAGCGGAAAAGGAAGUC\
ACCACCGUGGCCUGCGACGAA\
) } def
/len { sequence length } bind def

/coor [
[169.98887634 210.39840698]
[173.04557800 225.08364868]
[172.06901550 240.05183411]
[167.13015747 254.21543884]
[158.58781433 266.54541016]
[147.06262207 276.14593506]
[133.39195251 282.31948853]
[118.56903076 284.61752319]
[103.67080688 282.87310791]
[89.77970886 277.21295166]
[77.90498352 268.04827881]
[68.90938568 256.04498291]
[63.44647217 242.07514954]
[61.91316223 227.15371704]
[64.41987610 212.36793518]
[56.07748413 224.83407593]
[47.73509216 237.30021667]
[39.39270020 249.76634216]
[31.05030823 262.23248291]
[29.80549240 278.00463867]
[16.29681969 284.27877808]
[7.95442677 296.74493408]
[-0.38796520 309.21105957]
[1.30773282 325.16424561]
[-10.20850086 336.33364868]
[-26.10239601 334.15109253]
[-34.18151855 320.29080200]
[-28.24825668 305.38525391]
[-12.85409927 300.86865234]
[-4.51170683 288.40252686]
[3.83068514 275.93640137]
[4.47879648 261.05590820]
[18.58417511 253.89009094]
[26.92656708 241.42395020]
[35.26895905 228.95782471]
[43.61135101 216.49168396]
[51.95374298 204.02554321]
[58.75601959 190.65658569]
[63.92183304 176.57417297]
[69.08763885 162.49176025]
[74.25345612 148.40934753]
[79.41926575 134.32693481]
[70.36814117 126.90460968]
[63.85148239 117.18109131]
[49.33722687 120.96743774]
[37.93701935 131.93766785]
[23.66882324 127.66357422]
[9.15456772 131.44992065]
[1.67567110 136.62500000]
[-5.54577780 135.19590759]
[-20.10204124 138.81739807]
[-34.65830612 142.43888855]
[-49.21456909 146.06037903]
[-63.77083206 149.68186951]
[-78.32709503 153.30335999]
[-86.25793457 166.97366333]
[-101.55349731 170.95127869]
[-115.13919067 162.87634277]
[-118.95486450 147.53958130]
[-110.73674774 134.04002380]
[-95.36050415 130.38671875]
[-81.94858551 138.74710083]
[-67.39231873 135.12561035]
[-52.83605957 131.50411987]
[-38.27979660 127.88262177]
[-23.72353363 124.26113129]
[-9.16726971 120.63964081]
[5.36822319 116.93566132]
[19.88247871 113.14932251]
[30.24452972 102.44992065]
[45.55088425 106.45317841]
[60.06513977 102.66683960]
[56.63542557 92.39581299]
[56.02613831 80.68540955]
[58.70931244 68.34062958]
[44.59783173 63.25475693]
[30.48635101 58.16888809]
[16.37486839 53.08301544]
[2.26338649 47.99714661]
[-11.84809589 42.91127396]
[-24.60879517 51.73987579]
[-40.12092590 51.34815216]
[-52.41975403 41.88673782]
[-56.77613449 26.99373245]
[-51.51494598 12.39580441]
[-38.65922165 3.70615315]
[-23.15225410 4.26612806]
[-10.95678711 13.86040688]
[-6.76222515 28.79979324]
[7.34925699 33.88566208]
[21.46073914 38.97153473]
[35.57221985 44.05740356]
[49.68370438 49.14327621]
[63.79518509 54.22914505]
[69.17313385 49.00156021]
[58.71796036 38.24565887]
[48.26279068 27.48976135]
[37.80761719 16.73386192]
[27.35244370 5.97796297]
[16.89727211 -4.77793646]
[6.44209862 -15.53383541]
[-6.82502937 -22.53264236]
[-4.26835203 -37.31315231]
[10.57882977 -39.44884872]
[17.19799805 -25.98900795]
[27.65316963 -15.23310852]
[38.10834122 -4.47720957]
[48.56351471 6.27868938]
[59.01868820 17.03458786]
[69.47386169 27.79048729]
[79.92903137 38.54638672]
[85.30698395 33.31880188]
[80.62321472 19.06880569]
[75.93944550 4.81881237]
[71.25568390 -9.43118095]
[56.12788391 -9.36146355]
[41.71956253 -13.97183609]
[29.44230652 -22.81062126]
[20.49891090 -35.01188660]
[15.76555824 -49.38027191]
[15.70597744 -64.50811768]
[20.32600403 -78.91334534]
[29.17301369 -91.18467712]
[41.38026810 -100.11989594]
[55.75182343 -104.84361267]
[70.87970734 -104.89305878]
[85.28182983 -100.26338196]
[97.54723358 -91.40814972]
[106.47426605 -79.19491577]
[111.18836212 -64.82019806]
[111.22766876 -49.69228745]
[106.58834076 -35.29326248]
[97.72489166 -23.03379822]
[85.50567627 -14.11494827]
[90.18944550 0.13504578]
[94.87320709 14.38503933]
[99.55697632 28.63503456]
[102.27839661 13.88397026]
[104.99981689 -0.86709350]
[107.72123718 -15.61815739]
[106.40270996 -30.56009483]
[111.42321014 -44.69496536]
[121.87158203 -55.45746613]
[135.85157776 -60.89434433]
[150.82601929 -60.01887512]
[164.07720947 -52.98994064]
[173.20024109 -41.08320999]
[176.53939819 -26.45959663]
[173.48866272 -11.77310467]
[164.60169983 0.31085294]
[151.49249268 7.59886169]
[140.80630493 18.12527847]
[130.12011719 28.65169525]
[119.43393707 39.17811203]
[133.85858154 35.06354141]
[148.28321838 30.94897270]
[162.70787048 26.83440399]
[177.13250732 22.71983337]
[173.98402405 17.36168671]
[172.41865540 10.63957787]
[172.85136414 3.01596904]
[175.56619263 -4.93771362]
[180.69010925 -12.57685280]
[188.17639160 -19.22528458]
[200.68963623 -27.49685097]
[196.89729309 -42.98979187]
[198.64334106 -58.81723404]
[205.69779968 -73.06278992]
[217.18913269 -84.00798035]
[231.71179199 -90.33949280]
[247.49815369 -91.30680847]
[262.63366699 -86.81105804]
[275.28903198 -77.41483307]
[287.70767212 -85.82778168]
[300.12628174 -94.24073029]
[312.54492188 -102.65367889]
[324.96353149 -111.06662750]
[325.33920288 -126.57915497]
[334.78787231 -138.88777161]
[349.67636108 -143.25958252]
[364.27972412 -138.01350403]
[372.98269653 -125.16678619]
[372.43878174 -109.65924835]
[362.85711670 -97.45385742]
[347.92208862 -93.24382782]
[333.37649536 -98.64800262]
[320.95785522 -90.23505402]
[308.53924561 -81.82210541]
[296.12060547 -73.40915680]
[283.70199585 -64.99620819]
[287.56643677 -51.39735031]
[287.04699707 -37.24817276]
[282.18112183 -23.92903137]
[273.43093872 -12.74338722]
[261.63940430 -4.79024553]
[247.94900513 -0.85618085]
[233.69129944 -1.33756018]
[220.25714111 -6.20064831]
[208.96119690 -14.98360920]
[196.44796753 -6.71204329]
[197.50767517 0.71271420]
[212.35717773 -1.40669894]
[227.20669556 -3.52611208]
[240.67449951 -10.13052464]
[251.11743164 0.63725948]
[244.10368347 13.89649487]
[229.32611084 11.32340240]
[214.47659302 13.44281578]
[199.62707520 15.56222916]
[200.68678284 22.98698616]
[215.01440430 27.42766190]
[229.34201050 31.86833954]
[243.66961670 36.30901718]
[257.99722290 40.74969101]
[272.32482910 45.19036865]
[283.08566284 34.30629349]
[297.67550659 29.68078041]
[312.74169922 32.37674332]
[324.82217407 41.77466965]
[331.14089966 55.71498108]
[330.24588013 70.99430084]
[322.34280396 84.10154724]
[309.24771118 92.02477264]
[293.96978760 92.94328308]
[280.01977539 86.64600372]
[270.60330200 74.58000946]
[267.88415527 59.51797867]
[253.55654907 55.07730103]
[239.22894287 50.63662338]
[224.90133667 46.19594955]
[210.57371521 41.75527191]
[196.24610901 37.31459427]
[181.24707031 37.14447784]
[166.82243347 41.25904465]
[152.39779663 45.37361526]
[137.97314453 49.48818588]
[123.54850769 53.60275269]
[139.84552002 71.43068695]
[145.55793762 93.44241333]
[140.61782837 114.19143677]
[127.44468689 129.13235474]
[135.50218201 141.78450012]
[143.55969238 154.43664551]
[151.61718750 167.08879089]
[160.94375610 167.88092041]
[168.75633240 172.78266907]
[173.38737488 180.59967041]
[173.91683960 189.53263855]
[170.35246277 197.59101868]
[177.97489929 210.50993347]
[193.33929443 214.21273804]
[201.51390076 227.73867798]
[197.64888000 243.06307983]
[184.03724670 251.09422302]
[168.75457764 247.06739807]
[160.86779785 233.37162781]
[165.05598450 218.13237000]
[157.43354797 205.21345520]
[138.65696716 196.59777832]
[138.96504211 175.14628601]
[130.90754700 162.49414062]
[122.85004425 149.84199524]
[114.79254150 137.18986511]
[107.87381744 139.24166870]
[100.69911194 140.01770020]
[93.50167847 139.49275208]
[88.33586884 153.57516479]
[83.17005920 167.65757751]
[78.00424957 181.73999023]
[72.83843231 195.82240295]
[83.31738281 185.08967590]
[96.28222656 177.54560852]
[110.79100037 173.73831177]
[125.78958130 173.94441223]
[140.18826294 178.14894104]
[152.94091797 186.04640198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[21 31]
[22 30]
[23 29]
[38 270]
[39 269]
[40 268]
[41 267]
[42 266]
[44 72]
[45 71]
[47 69]
[48 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[112 137]
[113 136]
[114 135]
[115 134]
[154 237]
[155 236]
[156 235]
[157 234]
[158 233]
[164 200]
[165 199]
[173 190]
[174 189]
[175 188]
[176 187]
[177 186]
[210 232]
[211 231]
[212 230]
[213 229]
[214 228]
[215 227]
[241 263]
[242 262]
[243 261]
[244 260]
[249 258]
[250 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
