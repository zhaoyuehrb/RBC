%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CNFN)
} def

/sequence { (\
AGUGCCCGUGUCUCCACACGUCUGCCUCCAUCACUGCCAUCGCGAUCCUGCAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.032426799 ubox
1 27 0.556725077 ubox
1 35 0.089352759 ubox
1 49 0.006871968 ubox
1 55 0.060801344 ubox
2 12 0.003512249 ubox
2 17 0.023837025 ubox
2 19 0.030682644 ubox
2 21 0.010382529 ubox
2 22 0.034584943 ubox
2 25 0.259741000 ubox
2 26 0.639319252 ubox
2 31 0.037151852 ubox
2 34 0.095759759 ubox
2 37 0.015447842 ubox
2 40 0.009065522 ubox
2 43 0.006010820 ubox
2 48 0.007184198 ubox
2 51 0.016447107 ubox
2 54 0.071122193 ubox
3 16 0.023855830 ubox
3 18 0.030674058 ubox
3 20 0.008162701 ubox
3 24 0.259221116 ubox
3 30 0.038551137 ubox
3 33 0.095657231 ubox
3 36 0.015377621 ubox
3 39 0.009430888 ubox
3 42 0.005991544 ubox
3 44 0.005601926 ubox
3 45 0.003254332 ubox
3 50 0.015985339 ubox
3 52 0.064184398 ubox
3 53 0.044971074 ubox
4 11 0.004883623 ubox
4 15 0.023661867 ubox
4 17 0.027991140 ubox
4 19 0.012700765 ubox
4 21 0.041815338 ubox
4 23 0.198667137 ubox
4 25 0.759033596 ubox
4 29 0.026062371 ubox
4 32 0.078246329 ubox
4 37 0.009353187 ubox
4 38 0.008116504 ubox
4 41 0.004717175 ubox
4 43 0.007405016 ubox
4 49 0.005389974 ubox
4 51 0.075084130 ubox
4 54 0.061857080 ubox
5 10 0.005958492 ubox
5 20 0.039187731 ubox
5 24 0.760144490 ubox
5 36 0.010252196 ubox
5 42 0.007392776 ubox
5 50 0.074884578 ubox
5 53 0.059636976 ubox
7 20 0.974398542 ubox
7 44 0.005772306 ubox
8 17 0.069919694 ubox
8 19 0.996269929 ubox
8 21 0.005441839 ubox
8 31 0.006409702 ubox
8 34 0.006777631 ubox
8 43 0.005780585 ubox
9 16 0.070996966 ubox
9 18 0.996159959 ubox
9 20 0.010724843 ubox
9 30 0.006513463 ubox
9 33 0.006804747 ubox
9 42 0.005774177 ubox
10 15 0.070668571 ubox
10 17 0.995729507 ubox
10 19 0.013424206 ubox
10 29 0.006502270 ubox
10 32 0.006795428 ubox
10 41 0.005743630 ubox
11 16 0.909980036 ubox
11 18 0.012691976 ubox
15 24 0.006134014 ubox
15 36 0.003474240 ubox
16 23 0.005549141 ubox
16 35 0.003273033 ubox
17 24 0.004758667 ubox
18 23 0.004088859 ubox
20 31 0.003420929 ubox
20 34 0.006357935 ubox
20 41 0.004404870 ubox
20 46 0.009008789 ubox
20 54 0.170067358 ubox
21 30 0.005136023 ubox
21 33 0.006423686 ubox
21 45 0.015793695 ubox
21 53 0.025082673 ubox
22 44 0.016555555 ubox
22 53 0.527697494 ubox
23 30 0.037964395 ubox
23 33 0.018960635 ubox
23 39 0.008647910 ubox
23 42 0.004006566 ubox
23 44 0.023256416 ubox
23 52 0.537650651 ubox
24 29 0.041740612 ubox
24 32 0.021317111 ubox
24 37 0.029030188 ubox
24 38 0.007975189 ubox
24 41 0.006023487 ubox
24 43 0.032662743 ubox
24 51 0.539407896 ubox
24 54 0.062718828 ubox
25 36 0.029513561 ubox
25 42 0.032622604 ubox
25 50 0.538420558 ubox
25 53 0.055555078 ubox
26 53 0.074364362 ubox
27 45 0.032759476 ubox
27 52 0.078872750 ubox
28 44 0.033386900 ubox
29 36 0.048073219 ubox
29 50 0.099294229 ubox
30 35 0.042403464 ubox
30 40 0.008353454 ubox
30 46 0.491520339 ubox
30 49 0.101235643 ubox
31 39 0.008508189 ubox
31 45 0.516093504 ubox
32 44 0.509205741 ubox
32 50 0.013343635 ubox
33 49 0.013691542 ubox
34 53 0.737980251 ubox
35 42 0.068252712 ubox
35 44 0.232966770 ubox
35 52 0.742564818 ubox
36 41 0.072983278 ubox
36 43 0.522629812 ubox
36 51 0.743332391 ubox
36 54 0.145160497 ubox
37 42 0.521532149 ubox
37 50 0.725266973 ubox
37 53 0.145162730 ubox
38 50 0.155601676 ubox
39 46 0.234983330 ubox
39 49 0.203065937 ubox
40 45 0.219216692 ubox
41 50 0.028110968 ubox
42 49 0.047679936 ubox
42 51 0.291902292 ubox
42 54 0.127851564 ubox
43 50 0.292292858 ubox
43 53 0.127979647 ubox
44 49 0.224059892 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
showpage
end
%%EOF
