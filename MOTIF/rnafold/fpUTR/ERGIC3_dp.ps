%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERGIC3)
} def

/sequence { (\
GUGGCUCCAGGCCGGAAGAGGGAGUCUGUAGGGGCGGGCCGGCUGGCGUCCCCUUUCCGGCCGGUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.006728296 ubox
2 14 0.005817219 ubox
3 8 0.007444436 ubox
3 13 0.007849272 ubox
3 26 0.034372750 ubox
3 27 0.003201785 ubox
3 66 0.119223492 ubox
3 67 0.328369606 ubox
3 68 0.924098937 ubox
3 69 0.099161051 ubox
4 12 0.007865633 ubox
4 25 0.034661427 ubox
4 26 0.003283558 ubox
4 35 0.016638735 ubox
4 65 0.120715454 ubox
4 66 0.329530420 ubox
4 67 0.926944854 ubox
4 68 0.097401898 ubox
5 11 0.007863779 ubox
5 24 0.034849379 ubox
5 34 0.016666000 ubox
5 64 0.129142235 ubox
6 10 0.007084383 ubox
6 23 0.034833528 ubox
6 33 0.016617304 ubox
6 63 0.122756472 ubox
6 64 0.033303289 ubox
7 22 0.034790449 ubox
7 32 0.016620691 ubox
7 63 0.046055123 ubox
7 64 0.987388207 ubox
8 21 0.033201169 ubox
8 28 0.005352616 ubox
8 31 0.016097770 ubox
8 63 0.983943330 ubox
9 27 0.008989223 ubox
10 26 0.009065013 ubox
10 62 0.998657368 ubox
11 25 0.008670466 ubox
11 29 0.011643272 ubox
11 61 0.999210225 ubox
12 21 0.011207162 ubox
12 22 0.004776538 ubox
12 24 0.006836045 ubox
12 28 0.008735254 ubox
12 60 0.999211567 ubox
13 20 0.015438173 ubox
13 21 0.005563566 ubox
13 28 0.010942085 ubox
13 59 0.999194148 ubox
14 27 0.013545203 ubox
14 57 0.021918730 ubox
14 58 0.998952197 ubox
15 26 0.013665619 ubox
15 56 0.031011831 ubox
15 57 0.998712396 ubox
16 25 0.013480347 ubox
16 55 0.232080513 ubox
16 56 0.964518689 ubox
17 27 0.012543589 ubox
17 54 0.327919794 ubox
17 55 0.924988645 ubox
17 56 0.109797195 ubox
18 26 0.013880129 ubox
18 53 0.402351861 ubox
18 54 0.834670452 ubox
18 55 0.156140975 ubox
19 25 0.013728478 ubox
19 27 0.008064947 ubox
19 54 0.187701227 ubox
19 55 0.004113666 ubox
20 26 0.008263903 ubox
20 27 0.003801544 ubox
20 51 0.077393481 ubox
20 52 0.976514739 ubox
20 53 0.193873349 ubox
20 54 0.004671044 ubox
21 25 0.005357741 ubox
21 26 0.004176119 ubox
21 50 0.077747913 ubox
21 51 0.979088134 ubox
21 52 0.182422861 ubox
21 53 0.005004144 ubox
22 49 0.076102347 ubox
22 50 0.981179850 ubox
22 51 0.169634587 ubox
22 52 0.004511841 ubox
23 44 0.004999442 ubox
23 49 0.957844540 ubox
24 35 0.141454061 ubox
24 39 0.082298822 ubox
24 43 0.006627761 ubox
24 47 0.963857541 ubox
24 49 0.007246373 ubox
25 33 0.004201019 ubox
25 34 0.141491736 ubox
25 38 0.082545874 ubox
25 42 0.006566770 ubox
25 46 0.964527279 ubox
25 48 0.011546862 ubox
26 32 0.005938022 ubox
26 33 0.141686039 ubox
26 34 0.004411987 ubox
26 37 0.123383063 ubox
26 41 0.006426853 ubox
26 45 0.954154506 ubox
26 46 0.167518489 ubox
27 31 0.005775685 ubox
27 32 0.139013367 ubox
27 33 0.004468237 ubox
27 36 0.123540324 ubox
27 45 0.159243536 ubox
27 48 0.026956038 ubox
28 35 0.123722342 ubox
28 39 0.005509000 ubox
28 43 0.941580570 ubox
28 44 0.059889060 ubox
28 47 0.028085312 ubox
29 34 0.120522192 ubox
29 38 0.005546475 ubox
29 42 0.903645819 ubox
29 45 0.016851313 ubox
29 46 0.027185482 ubox
30 44 0.027949856 ubox
30 54 0.016450017 ubox
30 55 0.003989754 ubox
31 40 0.893763917 ubox
31 43 0.028355537 ubox
31 44 0.007493053 ubox
31 50 0.018559534 ubox
31 52 0.008937462 ubox
31 53 0.018310727 ubox
31 54 0.005609900 ubox
31 68 0.033514745 ubox
31 69 0.008088308 ubox
32 39 0.892991252 ubox
32 40 0.386895438 ubox
32 43 0.006705067 ubox
32 44 0.042172597 ubox
32 49 0.018591373 ubox
32 51 0.010604109 ubox
32 52 0.018306574 ubox
32 53 0.005895189 ubox
32 67 0.033605185 ubox
32 68 0.008118317 ubox
33 39 0.388169909 ubox
33 40 0.079019033 ubox
33 43 0.042624766 ubox
33 44 0.064085159 ubox
33 50 0.012011107 ubox
33 51 0.018295213 ubox
33 52 0.005899633 ubox
33 66 0.033614472 ubox
33 67 0.008007607 ubox
33 69 0.008239545 ubox
34 39 0.079076778 ubox
34 43 0.065373795 ubox
34 47 0.020066463 ubox
34 49 0.012086762 ubox
34 50 0.018226180 ubox
34 51 0.005898942 ubox
34 65 0.033612184 ubox
34 66 0.007893297 ubox
34 68 0.008345699 ubox
35 41 0.043018464 ubox
35 42 0.065455158 ubox
35 45 0.003580354 ubox
35 46 0.019972653 ubox
35 48 0.013790875 ubox
35 64 0.034383879 ubox
36 40 0.040368030 ubox
36 44 0.004923390 ubox
36 47 0.006422782 ubox
36 50 0.039422330 ubox
36 51 0.007179513 ubox
36 67 0.018051401 ubox
36 68 0.006585091 ubox
37 43 0.005118575 ubox
37 44 0.019786116 ubox
37 49 0.036070012 ubox
37 50 0.009425037 ubox
37 62 0.034383212 ubox
37 66 0.018183760 ubox
37 67 0.006560382 ubox
38 43 0.019691192 ubox
38 47 0.169965262 ubox
38 49 0.007253057 ubox
38 61 0.034400213 ubox
38 65 0.018459316 ubox
38 66 0.006521174 ubox
39 46 0.170280112 ubox
39 48 0.006332286 ubox
39 60 0.034401335 ubox
39 64 0.019599157 ubox
40 45 0.170153449 ubox
40 48 0.048034430 ubox
40 59 0.034400734 ubox
40 63 0.019600076 ubox
41 47 0.049140972 ubox
41 50 0.049342399 ubox
41 58 0.034394224 ubox
41 62 0.019600096 ubox
42 49 0.050006989 ubox
42 57 0.034299660 ubox
42 61 0.019600434 ubox
43 48 0.050166824 ubox
43 60 0.019600315 ubox
44 59 0.019585188 ubox
45 51 0.005140018 ubox
45 52 0.013432622 ubox
45 53 0.025606655 ubox
45 54 0.017105410 ubox
45 58 0.019589301 ubox
46 50 0.005133375 ubox
46 51 0.013350055 ubox
46 52 0.025479249 ubox
46 53 0.017170695 ubox
46 57 0.019419303 ubox
63 69 0.006347397 ubox
64 68 0.006296283 ubox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
showpage
end
%%EOF
