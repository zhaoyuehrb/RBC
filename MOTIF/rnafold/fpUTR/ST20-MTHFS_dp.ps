%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ST20-MTHFS)
} def

/sequence { (\
GCCCCGGUGGCGGAGGACGUCCCGGAGGAUCCCUCUGGUCGGGCGCCUGGCUUUGUGUAGCCAGCCAGGCUGGAGUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006071156 ubox
1 44 0.275990462 ubox
1 46 0.026541779 ubox
1 51 0.024282268 ubox
1 70 0.008063218 ubox
1 76 0.053987963 ubox
1 78 0.123116496 ubox
2 10 0.006075326 ubox
2 16 0.038737400 ubox
2 28 0.937672377 ubox
2 43 0.253147341 ubox
2 45 0.026812057 ubox
2 50 0.024321546 ubox
2 69 0.008043905 ubox
2 73 0.006164476 ubox
2 75 0.055675911 ubox
2 77 0.115144068 ubox
3 9 0.006056496 ubox
3 15 0.039012484 ubox
3 25 0.008570848 ubox
3 27 0.941605638 ubox
3 28 0.019344237 ubox
3 42 0.227738919 ubox
3 43 0.139783461 ubox
3 49 0.024238618 ubox
3 68 0.008000464 ubox
3 72 0.005810841 ubox
3 73 0.006751640 ubox
4 13 0.052751955 ubox
4 24 0.006109830 ubox
4 25 0.951072766 ubox
4 27 0.013836852 ubox
4 41 0.196170743 ubox
4 42 0.178691112 ubox
4 72 0.005938826 ubox
4 73 0.095100843 ubox
5 12 0.053884806 ubox
5 24 0.953287142 ubox
5 37 0.004096749 ubox
5 41 0.210094392 ubox
5 72 0.095212887 ubox
6 11 0.053694677 ubox
6 21 0.004784457 ubox
6 22 0.005696858 ubox
6 23 0.953717001 ubox
6 40 0.236445311 ubox
6 71 0.094938621 ubox
7 18 0.005964731 ubox
7 20 0.004094215 ubox
7 21 0.007120907 ubox
7 22 0.953697970 ubox
7 39 0.190089318 ubox
7 70 0.094491904 ubox
8 17 0.006024304 ubox
8 19 0.005486118 ubox
8 38 0.040930329 ubox
8 41 0.009727530 ubox
8 67 0.054211834 ubox
8 69 0.074970504 ubox
9 18 0.006375086 ubox
9 21 0.975215379 ubox
9 22 0.010062910 ubox
9 40 0.067101038 ubox
9 47 0.006312511 ubox
9 66 0.093804324 ubox
10 20 0.976347602 ubox
10 21 0.012829292 ubox
10 39 0.066707841 ubox
10 46 0.006739445 ubox
10 65 0.094025267 ubox
11 19 0.976814970 ubox
11 37 0.175699310 ubox
11 38 0.050262919 ubox
11 45 0.006752207 ubox
11 64 0.093890691 ubox
12 18 0.975640189 ubox
12 22 0.008371698 ubox
12 36 0.181796335 ubox
12 44 0.006761640 ubox
12 47 0.008759598 ubox
12 66 0.008201903 ubox
13 21 0.010587395 ubox
13 35 0.183449851 ubox
13 46 0.008760300 ubox
13 65 0.008201285 ubox
14 20 0.010484066 ubox
14 34 0.183425227 ubox
14 48 0.083447629 ubox
15 32 0.012640476 ubox
15 33 0.183047293 ubox
15 47 0.096882194 ubox
16 21 0.003507177 ubox
16 31 0.017444015 ubox
16 32 0.182383372 ubox
16 40 0.006047762 ubox
16 46 0.096960037 ubox
16 47 0.004346055 ubox
17 30 0.017412584 ubox
17 39 0.006031308 ubox
17 76 0.004956613 ubox
18 38 0.003173262 ubox
18 41 0.036771646 ubox
18 45 0.097602109 ubox
18 75 0.005075868 ubox
19 30 0.176763998 ubox
19 40 0.037232060 ubox
19 44 0.100476228 ubox
20 28 0.004283732 ubox
20 29 0.183053347 ubox
20 42 0.005015593 ubox
20 43 0.099662215 ubox
21 27 0.004380098 ubox
21 28 0.183369814 ubox
21 38 0.012835721 ubox
21 41 0.006820918 ubox
21 42 0.099329387 ubox
21 43 0.011739189 ubox
22 27 0.182723397 ubox
22 28 0.005301419 ubox
22 37 0.009229386 ubox
22 38 0.224739186 ubox
22 41 0.070445214 ubox
22 42 0.011734305 ubox
23 27 0.006847410 ubox
23 37 0.237430186 ubox
23 41 0.011712964 ubox
24 32 0.004599769 ubox
24 36 0.239043065 ubox
24 40 0.010857042 ubox
25 31 0.005030305 ubox
25 35 0.246291013 ubox
25 39 0.005920038 ubox
25 40 0.003166387 ubox
26 30 0.004709053 ubox
26 34 0.246492925 ubox
26 36 0.003560057 ubox
26 48 0.006624163 ubox
27 33 0.246691440 ubox
27 35 0.003660546 ubox
27 36 0.007120400 ubox
27 47 0.006833262 ubox
28 32 0.242779899 ubox
28 33 0.004193786 ubox
28 35 0.007329504 ubox
28 40 0.027544404 ubox
28 46 0.006839282 ubox
29 34 0.006735555 ubox
29 39 0.027560238 ubox
29 76 0.039638894 ubox
30 38 0.025470453 ubox
30 43 0.004558798 ubox
30 74 0.014376626 ubox
30 75 0.014914229 ubox
31 37 0.025205788 ubox
31 38 0.011553933 ubox
31 42 0.006976619 ubox
31 43 0.024008123 ubox
31 73 0.015373300 ubox
32 37 0.011585205 ubox
32 38 0.004064270 ubox
32 41 0.006981877 ubox
32 42 0.024426610 ubox
32 43 0.006376797 ubox
32 72 0.015302811 ubox
32 73 0.007960204 ubox
33 37 0.004095085 ubox
33 41 0.024415431 ubox
33 42 0.006535320 ubox
33 43 0.004647017 ubox
33 72 0.008002351 ubox
33 75 0.942718351 ubox
34 41 0.005982451 ubox
34 42 0.004704823 ubox
34 69 0.006824595 ubox
34 74 0.949630491 ubox
35 41 0.005099617 ubox
35 68 0.007833561 ubox
35 73 0.950494513 ubox
36 67 0.007852046 ubox
36 72 0.946766862 ubox
36 77 0.007411518 ubox
37 66 0.007855960 ubox
37 71 0.946894150 ubox
37 76 0.012479323 ubox
38 44 0.003359370 ubox
38 65 0.007838975 ubox
38 70 0.950614406 ubox
39 64 0.005696859 ubox
39 69 0.950101654 ubox
39 74 0.018579000 ubox
40 68 0.933155196 ubox
40 73 0.019295830 ubox
41 66 0.149389919 ubox
42 62 0.003278978 ubox
42 65 0.147807711 ubox
42 66 0.929067293 ubox
42 71 0.018848329 ubox
43 61 0.003289718 ubox
43 65 0.931611930 ubox
43 70 0.017953409 ubox
43 76 0.004009370 ubox
43 78 0.018998064 ubox
44 60 0.003282268 ubox
44 64 0.827636539 ubox
44 69 0.017676151 ubox
44 72 0.027069092 ubox
44 75 0.005295393 ubox
44 77 0.019232220 ubox
45 61 0.008100802 ubox
45 65 0.109263772 ubox
45 70 0.290956017 ubox
45 71 0.006218830 ubox
45 76 0.016369805 ubox
46 60 0.007387729 ubox
46 64 0.082766789 ubox
46 69 0.291519062 ubox
46 75 0.016320473 ubox
47 60 0.013774165 ubox
47 64 0.460574298 ubox
47 68 0.291836956 ubox
47 73 0.015612388 ubox
48 59 0.014007319 ubox
48 63 0.941974642 ubox
48 67 0.291727386 ubox
48 72 0.015554181 ubox
49 58 0.012174026 ubox
49 62 0.955562570 ubox
49 66 0.291749898 ubox
49 71 0.015570063 ubox
50 56 0.005055785 ubox
50 58 0.014992793 ubox
50 61 0.955782297 ubox
50 65 0.291734895 ubox
50 70 0.015633913 ubox
51 55 0.005138469 ubox
51 57 0.016557765 ubox
51 60 0.955753673 ubox
51 64 0.291507357 ubox
51 69 0.015619673 ubox
52 59 0.939722288 ubox
52 60 0.010987775 ubox
52 63 0.269273967 ubox
52 64 0.006090011 ubox
52 68 0.014808471 ubox
53 59 0.041380410 ubox
53 60 0.040525823 ubox
53 63 0.039750516 ubox
53 64 0.006547079 ubox
53 67 0.013339318 ubox
53 68 0.004785035 ubox
54 59 0.040457850 ubox
54 63 0.062468303 ubox
54 67 0.006804223 ubox
54 79 0.006042267 ubox
55 61 0.196529251 ubox
55 62 0.091166319 ubox
55 65 0.012449713 ubox
55 66 0.008330639 ubox
55 78 0.007671239 ubox
56 60 0.184398490 ubox
56 63 0.027660295 ubox
56 64 0.011903156 ubox
56 77 0.007572607 ubox
56 79 0.019289856 ubox
57 62 0.038881690 ubox
57 65 0.008529841 ubox
57 76 0.003960593 ubox
57 78 0.024524326 ubox
58 64 0.008416318 ubox
58 72 0.004113595 ubox
58 75 0.003197488 ubox
58 77 0.024486003 ubox
59 71 0.004601193 ubox
59 76 0.024249799 ubox
60 70 0.004648756 ubox
61 69 0.004649246 ubox
61 73 0.025942630 ubox
62 68 0.004646460 ubox
62 72 0.025979422 ubox
63 71 0.026012899 ubox
64 70 0.026027242 ubox
65 69 0.025839003 ubox
65 73 0.014694913 ubox
66 72 0.014751051 ubox
67 71 0.011954993 ubox
69 78 0.025101215 ubox
70 77 0.025250523 ubox
71 77 0.004564743 ubox
71 79 0.063782016 ubox
72 76 0.003735076 ubox
72 78 0.083685348 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
33 75 0.9500000 lbox
34 74 0.9500000 lbox
35 73 0.9500000 lbox
36 72 0.9500000 lbox
37 71 0.9500000 lbox
38 70 0.9500000 lbox
39 69 0.9500000 lbox
40 68 0.9500000 lbox
42 66 0.9500000 lbox
43 65 0.9500000 lbox
44 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
