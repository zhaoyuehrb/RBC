%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CETN1)
} def

/sequence { (\
GGCGGGGGGCGCCCGAAUGAGAGCGCGGGGCGGUGCCGUUGGGACCACGGCGGCCAGAGCGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.441551758 ubox
1 14 0.059157335 ubox
1 37 0.064768162 ubox
1 40 0.063531005 ubox
1 46 0.014356826 ubox
1 55 0.042457694 ubox
2 10 0.295017707 ubox
2 12 0.446302485 ubox
2 13 0.041878519 ubox
2 24 0.010762131 ubox
2 26 0.036199674 ubox
2 31 0.063578242 ubox
2 34 0.021283505 ubox
2 36 0.066882567 ubox
2 39 0.077754166 ubox
2 45 0.014228040 ubox
2 51 0.017001371 ubox
2 54 0.042335173 ubox
2 60 0.114402936 ubox
2 63 0.095332117 ubox
3 9 0.304729019 ubox
3 11 0.448964802 ubox
3 15 0.608983844 ubox
3 19 0.017430260 ubox
3 23 0.010288893 ubox
3 25 0.036178245 ubox
3 30 0.063605841 ubox
3 32 0.063582643 ubox
3 33 0.024026478 ubox
3 35 0.066922415 ubox
3 38 0.078936711 ubox
3 41 0.015687519 ubox
3 49 0.011049918 ubox
3 50 0.016665028 ubox
3 52 0.005388833 ubox
3 53 0.042029101 ubox
3 59 0.114454605 ubox
3 61 0.029845956 ubox
3 62 0.092823683 ubox
4 10 0.448353157 ubox
4 13 0.007852951 ubox
4 14 0.619129409 ubox
4 18 0.016121654 ubox
4 24 0.035696253 ubox
4 31 0.063916406 ubox
4 34 0.065164845 ubox
4 37 0.079123735 ubox
4 40 0.015629599 ubox
4 48 0.011602529 ubox
4 51 0.005380568 ubox
4 55 0.004987471 ubox
4 60 0.034602219 ubox
5 12 0.008328169 ubox
5 13 0.618397095 ubox
5 14 0.144047010 ubox
5 36 0.078905442 ubox
5 37 0.016552061 ubox
5 39 0.014819417 ubox
5 40 0.006593265 ubox
5 46 0.003619200 ubox
5 54 0.004152469 ubox
5 55 0.008384241 ubox
6 12 0.617350496 ubox
6 13 0.147402461 ubox
6 14 0.028565046 ubox
6 36 0.018076181 ubox
6 37 0.026265872 ubox
6 39 0.007007195 ubox
6 45 0.003537849 ubox
6 46 0.004848807 ubox
6 54 0.007004912 ubox
6 55 0.022910526 ubox
7 12 0.150409604 ubox
7 13 0.028637355 ubox
7 14 0.007378702 ubox
7 36 0.027195794 ubox
7 37 0.012379450 ubox
7 45 0.004841295 ubox
7 46 0.014420276 ubox
7 54 0.019015226 ubox
7 55 0.102463222 ubox
8 12 0.028222537 ubox
8 13 0.007363540 ubox
8 14 0.003254985 ubox
8 36 0.012326325 ubox
8 37 0.009134301 ubox
8 45 0.014382307 ubox
8 46 0.009535118 ubox
8 54 0.099555852 ubox
8 55 0.050135010 ubox
9 13 0.003206360 ubox
9 24 0.003299613 ubox
9 26 0.093305977 ubox
9 31 0.242501378 ubox
9 34 0.050099213 ubox
9 36 0.009317017 ubox
9 45 0.009551162 ubox
9 51 0.004551044 ubox
9 54 0.047638519 ubox
9 60 0.005789841 ubox
9 63 0.009378918 ubox
10 23 0.003306005 ubox
10 25 0.093336136 ubox
10 30 0.242614854 ubox
10 32 0.468666800 ubox
10 33 0.039349635 ubox
10 35 0.009134441 ubox
10 50 0.004532465 ubox
10 52 0.093252771 ubox
10 53 0.044349483 ubox
10 59 0.005664193 ubox
10 62 0.009276321 ubox
11 24 0.093340521 ubox
11 31 0.552688597 ubox
11 34 0.007940486 ubox
11 51 0.092011100 ubox
11 63 0.008981553 ubox
12 23 0.093183380 ubox
12 28 0.152183302 ubox
12 29 0.234577211 ubox
12 30 0.545652003 ubox
12 33 0.007644734 ubox
12 43 0.017857059 ubox
12 50 0.089188336 ubox
12 62 0.008751277 ubox
13 27 0.152121982 ubox
13 28 0.252701380 ubox
13 29 0.538388204 ubox
13 30 0.003808623 ubox
13 32 0.007286721 ubox
13 33 0.015326208 ubox
13 42 0.018377142 ubox
13 43 0.036952812 ubox
13 49 0.078678326 ubox
13 50 0.023367494 ubox
13 61 0.008284165 ubox
13 62 0.004350589 ubox
13 66 0.008515871 ubox
14 25 0.155007164 ubox
14 27 0.269043066 ubox
14 28 0.530502130 ubox
14 29 0.008991126 ubox
14 32 0.024242660 ubox
14 41 0.018820425 ubox
14 42 0.051639908 ubox
14 49 0.031754924 ubox
14 61 0.007868017 ubox
14 65 0.020330477 ubox
15 24 0.160458872 ubox
15 26 0.280396092 ubox
15 31 0.024081017 ubox
15 40 0.014613158 ubox
15 48 0.037597100 ubox
15 60 0.007812031 ubox
16 39 0.011284292 ubox
16 40 0.052882171 ubox
17 34 0.006559858 ubox
17 39 0.054237638 ubox
18 25 0.221808157 ubox
18 27 0.094550869 ubox
18 32 0.003708366 ubox
18 33 0.006734069 ubox
18 38 0.054944183 ubox
18 41 0.019471972 ubox
18 47 0.007077004 ubox
18 56 0.006524145 ubox
18 64 0.068588252 ubox
19 24 0.264797816 ubox
19 26 0.098756986 ubox
19 31 0.004026514 ubox
19 34 0.006047262 ubox
19 37 0.054670191 ubox
19 40 0.022121649 ubox
19 46 0.007348124 ubox
19 55 0.006706936 ubox
19 63 0.074747583 ubox
20 39 0.022567258 ubox
21 40 0.004979182 ubox
22 39 0.004612503 ubox
22 40 0.009358935 ubox
23 31 0.207783448 ubox
23 34 0.026747910 ubox
23 36 0.076309685 ubox
23 39 0.009376066 ubox
23 51 0.005264977 ubox
23 60 0.089765758 ubox
23 63 0.507425660 ubox
24 30 0.208020617 ubox
24 32 0.250893457 ubox
24 33 0.029101983 ubox
24 35 0.076715753 ubox
24 38 0.009380524 ubox
24 41 0.006921999 ubox
24 50 0.005254607 ubox
24 52 0.020488989 ubox
24 59 0.089848192 ubox
24 61 0.572224300 ubox
24 62 0.369440391 ubox
25 31 0.254821872 ubox
25 34 0.079840097 ubox
25 36 0.007311071 ubox
25 37 0.006509074 ubox
25 39 0.008862176 ubox
25 40 0.005038275 ubox
25 51 0.020743925 ubox
25 60 0.673874585 ubox
25 63 0.080911193 ubox
26 30 0.252982911 ubox
26 32 0.023560976 ubox
26 33 0.080800321 ubox
26 35 0.009681986 ubox
26 38 0.010221765 ubox
26 49 0.005763378 ubox
26 50 0.020594598 ubox
26 52 0.003890021 ubox
26 59 0.674165857 ubox
26 61 0.113957079 ubox
26 62 0.080446174 ubox
27 31 0.022652834 ubox
27 34 0.009092023 ubox
27 37 0.010218071 ubox
27 48 0.006248719 ubox
27 51 0.003915886 ubox
27 55 0.016724977 ubox
27 60 0.111504691 ubox
28 36 0.010189536 ubox
28 54 0.016587843 ubox
28 55 0.045714922 ubox
29 37 0.003701063 ubox
29 54 0.043667391 ubox
29 55 0.674957126 ubox
30 36 0.003966959 ubox
30 51 0.022891079 ubox
30 54 0.675405144 ubox
30 60 0.099283658 ubox
30 63 0.117133545 ubox
31 35 0.003981354 ubox
31 50 0.022945331 ubox
31 52 0.040956410 ubox
31 53 0.673751738 ubox
31 59 0.100050059 ubox
31 61 0.008912311 ubox
31 62 0.117153433 ubox
32 46 0.087668427 ubox
32 51 0.023083096 ubox
32 55 0.127868521 ubox
32 60 0.011077575 ubox
33 45 0.087975273 ubox
33 48 0.024717283 ubox
33 51 0.056017159 ubox
33 54 0.126309546 ubox
33 60 0.119392344 ubox
33 63 0.008045159 ubox
34 44 0.087738732 ubox
34 47 0.024811380 ubox
34 49 0.014771312 ubox
34 50 0.020431527 ubox
34 52 0.556539051 ubox
34 53 0.088144384 ubox
34 56 0.069707887 ubox
34 59 0.118554110 ubox
34 62 0.007781744 ubox
34 64 0.606708856 ubox
35 46 0.024652040 ubox
35 48 0.015254014 ubox
35 51 0.690552826 ubox
35 54 0.174319473 ubox
35 55 0.050475934 ubox
35 63 0.675851454 ubox
36 42 0.075129474 ubox
36 43 0.054206377 ubox
36 50 0.693250427 ubox
36 53 0.186245817 ubox
36 62 0.676022878 ubox
37 41 0.074595939 ubox
37 42 0.054334632 ubox
37 49 0.693502707 ubox
37 52 0.193944076 ubox
37 61 0.676075800 ubox
38 45 0.010986481 ubox
38 48 0.692978639 ubox
38 51 0.204886529 ubox
38 60 0.676071568 ubox
38 63 0.007947765 ubox
39 44 0.011211776 ubox
39 47 0.550613405 ubox
39 50 0.204794815 ubox
39 57 0.026807001 ubox
39 58 0.082323796 ubox
39 59 0.668024273 ubox
39 62 0.007946496 ubox
40 47 0.406640818 ubox
40 49 0.204721022 ubox
40 56 0.087749357 ubox
40 57 0.086230378 ubox
40 58 0.634105797 ubox
40 61 0.007895623 ubox
41 46 0.574420919 ubox
41 48 0.206067433 ubox
41 51 0.003164916 ubox
41 55 0.095794260 ubox
41 60 0.007924868 ubox
42 54 0.091980502 ubox
42 55 0.666561183 ubox
43 54 0.667547327 ubox
45 53 0.674151865 ubox
45 66 0.055904682 ubox
46 52 0.673851367 ubox
46 65 0.056459499 ubox
50 60 0.005767051 ubox
50 63 0.085964058 ubox
51 59 0.005923405 ubox
51 62 0.086000660 ubox
53 60 0.086503261 ubox
53 63 0.113078931 ubox
54 59 0.086263431 ubox
54 62 0.113306470 ubox
55 61 0.113502681 ubox
55 65 0.003205443 ubox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
34 64 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
37 61 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
showpage
end
%%EOF
