%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INS-IGF2)
} def

/sequence { (\
AGCCCUCCAGGACAGGCUGCAUCAGAAGAGGCCAUCAAGCAGAUCACUGUCCUUCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.378884403 ubox
1 54 0.004387774 ubox
1 56 0.031494606 ubox
2 17 0.401302917 ubox
2 20 0.090031909 ubox
2 32 0.169401628 ubox
2 55 0.033240637 ubox
2 58 0.632420619 ubox
3 11 0.072621189 ubox
3 16 0.397076789 ubox
3 19 0.089733351 ubox
3 31 0.157023619 ubox
3 57 0.632981619 ubox
4 10 0.072764348 ubox
4 11 0.099218236 ubox
4 15 0.390576875 ubox
4 16 0.087380316 ubox
4 30 0.143075233 ubox
4 31 0.095114357 ubox
5 10 0.105002596 ubox
5 11 0.101769727 ubox
5 15 0.105458118 ubox
5 16 0.010435161 ubox
5 25 0.013244478 ubox
5 28 0.118708236 ubox
5 30 0.115363154 ubox
6 10 0.091874567 ubox
6 12 0.206969981 ubox
6 14 0.115428853 ubox
6 15 0.010348160 ubox
6 16 0.007284599 ubox
6 24 0.012807820 ubox
6 26 0.082768077 ubox
6 27 0.091942064 ubox
6 29 0.132187903 ubox
7 11 0.209549621 ubox
7 15 0.008415218 ubox
7 16 0.070582184 ubox
7 25 0.110794050 ubox
7 28 0.132131922 ubox
8 15 0.071022446 ubox
8 19 0.185322827 ubox
8 49 0.004745955 ubox
8 57 0.072494011 ubox
9 18 0.185932632 ubox
9 48 0.004768902 ubox
9 53 0.831598089 ubox
9 54 0.033438977 ubox
9 56 0.056606416 ubox
10 17 0.185827194 ubox
10 18 0.009369439 ubox
10 23 0.011192799 ubox
10 33 0.007657070 ubox
10 36 0.023210478 ubox
10 47 0.004764091 ubox
10 52 0.876172336 ubox
10 53 0.006324841 ubox
10 55 0.032893157 ubox
10 59 0.007578843 ubox
11 17 0.010019947 ubox
11 22 0.009089600 ubox
11 23 0.036165501 ubox
11 32 0.007657213 ubox
11 35 0.022531783 ubox
11 36 0.044088833 ubox
11 45 0.004278462 ubox
11 51 0.876754466 ubox
11 52 0.004957691 ubox
11 54 0.019000279 ubox
11 58 0.007458304 ubox
12 22 0.034043391 ubox
12 35 0.043510893 ubox
12 44 0.004169436 ubox
12 50 0.876605060 ubox
12 53 0.016511435 ubox
13 19 0.023943179 ubox
13 49 0.876657823 ubox
13 57 0.006909519 ubox
14 18 0.019532029 ubox
14 48 0.869830152 ubox
14 53 0.003390093 ubox
14 56 0.006798616 ubox
15 23 0.003701823 ubox
15 33 0.199289749 ubox
15 36 0.008817807 ubox
15 45 0.231474549 ubox
15 47 0.822767272 ubox
15 48 0.023081280 ubox
15 52 0.004011172 ubox
15 55 0.006151581 ubox
15 59 0.019983604 ubox
16 22 0.003286058 ubox
16 32 0.213059638 ubox
16 35 0.010495737 ubox
16 40 0.242311238 ubox
16 44 0.417177253 ubox
16 47 0.046531582 ubox
16 51 0.003974382 ubox
16 54 0.004196997 ubox
16 58 0.020151870 ubox
17 25 0.088372594 ubox
17 28 0.037953323 ubox
17 30 0.022219652 ubox
17 31 0.212655349 ubox
17 39 0.242423074 ubox
17 42 0.792745737 ubox
17 57 0.017978512 ubox
18 24 0.088944087 ubox
18 27 0.038629804 ubox
18 29 0.025552453 ubox
18 30 0.209477360 ubox
18 34 0.029756148 ubox
18 37 0.023575969 ubox
18 38 0.238757681 ubox
18 41 0.805160643 ubox
18 46 0.101031506 ubox
19 23 0.087791636 ubox
19 32 0.271462021 ubox
19 33 0.031011638 ubox
19 36 0.025971957 ubox
19 40 0.805955758 ubox
19 45 0.108633212 ubox
19 58 0.102442973 ubox
20 31 0.272120342 ubox
20 39 0.805016238 ubox
20 57 0.096582904 ubox
21 35 0.049396726 ubox
21 44 0.114663679 ubox
21 56 0.068291511 ubox
22 29 0.312088075 ubox
22 31 0.071069582 ubox
22 34 0.043937388 ubox
22 43 0.116026500 ubox
23 28 0.325584808 ubox
23 30 0.080484910 ubox
23 42 0.115813819 ubox
23 49 0.003246338 ubox
23 57 0.384745757 ubox
24 48 0.003289180 ubox
24 53 0.007628458 ubox
24 56 0.395350032 ubox
25 36 0.462803442 ubox
25 45 0.011717842 ubox
25 47 0.003301082 ubox
25 52 0.007636898 ubox
25 55 0.401699625 ubox
26 35 0.457302958 ubox
26 44 0.011946693 ubox
26 54 0.400601773 ubox
27 53 0.398098558 ubox
27 54 0.005259876 ubox
27 56 0.015330423 ubox
28 36 0.169403282 ubox
28 45 0.042711891 ubox
28 51 0.030195578 ubox
28 52 0.396242566 ubox
28 53 0.004807466 ubox
28 54 0.027804903 ubox
28 55 0.016446055 ubox
29 35 0.168290855 ubox
29 44 0.041683881 ubox
29 48 0.038543488 ubox
29 50 0.039903436 ubox
29 53 0.051621329 ubox
29 54 0.013808126 ubox
30 36 0.062505919 ubox
30 45 0.008811885 ubox
30 47 0.039268186 ubox
30 48 0.080336787 ubox
30 51 0.381464180 ubox
30 52 0.059180788 ubox
30 53 0.010544241 ubox
30 59 0.037230681 ubox
31 35 0.040806446 ubox
31 40 0.097422487 ubox
31 44 0.005456532 ubox
31 47 0.082794260 ubox
31 50 0.374169583 ubox
31 51 0.060608653 ubox
31 52 0.010473801 ubox
31 58 0.037576036 ubox
32 39 0.097469724 ubox
32 49 0.369169385 ubox
32 57 0.037253658 ubox
33 49 0.051181732 ubox
33 57 0.005912893 ubox
34 44 0.357051470 ubox
34 48 0.059856546 ubox
34 56 0.007215541 ubox
35 43 0.383886796 ubox
36 42 0.385374913 ubox
36 49 0.006657668 ubox
37 48 0.008960561 ubox
37 54 0.006452417 ubox
38 48 0.057971674 ubox
38 53 0.006873639 ubox
39 47 0.059017126 ubox
39 50 0.115113716 ubox
39 52 0.005980363 ubox
39 58 0.258321520 ubox
40 49 0.121419522 ubox
40 57 0.258933391 ubox
41 48 0.129970786 ubox
41 56 0.258876958 ubox
42 47 0.129526999 ubox
42 51 0.017345297 ubox
42 55 0.258882297 ubox
43 50 0.017569341 ubox
43 53 0.006181653 ubox
43 54 0.255747050 ubox
44 49 0.016969648 ubox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
showpage
end
%%EOF
