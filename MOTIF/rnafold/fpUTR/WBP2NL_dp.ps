%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WBP2NL)
} def

/sequence { (\
AUAAUCUCCGCCCUCCCCUUCAGAACCGCGCCCCACAGCUCGGCGCAGGUCCCGCCCCUUUCCAUCUACGGGGCGGCAGGAGGCCCGAAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
5 83 0.078863280 ubox
5 88 0.193385373 ubox
6 82 0.133134368 ubox
6 87 0.205902124 ubox
6 90 0.489337176 ubox
6 94 0.042118821 ubox
7 81 0.133410859 ubox
7 88 0.408339719 ubox
7 89 0.476419052 ubox
7 93 0.041401690 ubox
8 80 0.133454880 ubox
8 83 0.012565848 ubox
8 87 0.431951558 ubox
9 79 0.133344566 ubox
9 82 0.012676306 ubox
9 87 0.679948055 ubox
10 77 0.102565762 ubox
10 84 0.546452823 ubox
10 86 0.679990043 ubox
10 91 0.235492965 ubox
11 76 0.100472428 ubox
11 80 0.008834560 ubox
11 83 0.449144158 ubox
11 90 0.235555734 ubox
12 49 0.003549921 ubox
12 75 0.091824411 ubox
12 76 0.019483455 ubox
12 79 0.008765741 ubox
12 80 0.010446173 ubox
12 82 0.320051447 ubox
12 83 0.870282193 ubox
13 23 0.031313571 ubox
13 48 0.003630694 ubox
13 73 0.004070193 ubox
13 75 0.020212580 ubox
13 79 0.011192462 ubox
13 80 0.025968917 ubox
13 82 0.927544215 ubox
13 83 0.012731746 ubox
13 90 0.014003145 ubox
13 94 0.004119529 ubox
14 22 0.030375424 ubox
14 24 0.035941139 ubox
14 47 0.003598818 ubox
14 72 0.003242452 ubox
14 73 0.006456280 ubox
14 78 0.010638913 ubox
14 79 0.023803278 ubox
14 80 0.015914338 ubox
14 81 0.979429173 ubox
14 82 0.009399651 ubox
14 83 0.005000482 ubox
14 88 0.101742864 ubox
14 89 0.011236161 ubox
14 93 0.003990720 ubox
15 23 0.037775532 ubox
15 71 0.003226269 ubox
15 72 0.007034027 ubox
15 73 0.022175523 ubox
15 76 0.003162557 ubox
15 79 0.017746241 ubox
15 80 0.978502559 ubox
15 82 0.008406678 ubox
15 83 0.022496757 ubox
15 87 0.104375056 ubox
16 70 0.003212359 ubox
16 71 0.007018313 ubox
16 72 0.022200686 ubox
16 73 0.009156543 ubox
16 76 0.003511818 ubox
16 79 0.974912149 ubox
16 80 0.053982184 ubox
16 82 0.022687953 ubox
16 83 0.006662858 ubox
17 49 0.058862151 ubox
17 70 0.006990372 ubox
17 71 0.022196652 ubox
17 72 0.009177926 ubox
17 75 0.003530858 ubox
17 76 0.040228671 ubox
17 79 0.069777670 ubox
17 80 0.044421572 ubox
17 82 0.005488194 ubox
17 83 0.133685782 ubox
18 48 0.059187454 ubox
18 49 0.007582875 ubox
18 70 0.022149817 ubox
18 71 0.009188303 ubox
18 75 0.038149757 ubox
18 76 0.021242914 ubox
18 79 0.049096889 ubox
18 80 0.005920347 ubox
18 82 0.134030389 ubox
18 83 0.010827780 ubox
18 90 0.014106529 ubox
19 25 0.013287333 ubox
19 47 0.058477628 ubox
19 48 0.007607295 ubox
19 70 0.009013599 ubox
19 75 0.007471780 ubox
19 76 0.011476599 ubox
19 78 0.056754905 ubox
19 79 0.006608890 ubox
19 81 0.134017457 ubox
19 82 0.010876645 ubox
19 89 0.014308283 ubox
20 24 0.022687344 ubox
20 47 0.007900998 ubox
20 76 0.008138305 ubox
20 78 0.024118884 ubox
20 80 0.133805712 ubox
20 81 0.011831782 ubox
20 88 0.014346533 ubox
21 75 0.007312500 ubox
21 79 0.133248700 ubox
21 80 0.012513595 ubox
21 87 0.014337964 ubox
22 67 0.022572518 ubox
23 51 0.632444628 ubox
23 62 0.003407412 ubox
23 66 0.023433059 ubox
24 50 0.450828917 ubox
24 61 0.003396889 ubox
24 65 0.023125953 ubox
25 50 0.849321795 ubox
26 43 0.013090195 ubox
26 49 0.991977159 ubox
27 42 0.013160444 ubox
27 48 0.991797694 ubox
28 41 0.013179658 ubox
28 46 0.996422119 ubox
29 45 0.999620067 ubox
30 39 0.013259458 ubox
30 44 0.999646333 ubox
30 46 0.021348766 ubox
31 38 0.013242879 ubox
31 43 0.995128149 ubox
31 45 0.021361303 ubox
32 42 0.989148027 ubox
32 43 0.095552608 ubox
33 42 0.134015984 ubox
33 43 0.019246994 ubox
34 42 0.023842183 ubox
38 91 0.003448619 ubox
39 90 0.003451832 ubox
41 87 0.003502425 ubox
42 86 0.003496942 ubox
43 85 0.003488343 ubox
44 49 0.003968692 ubox
45 84 0.003476495 ubox
46 83 0.003473970 ubox
47 59 0.005501650 ubox
48 56 0.008066395 ubox
48 57 0.003428719 ubox
48 58 0.005863290 ubox
48 85 0.005941152 ubox
49 55 0.008094889 ubox
49 56 0.003430029 ubox
49 57 0.005830657 ubox
49 74 0.004397475 ubox
49 77 0.016763793 ubox
49 84 0.005969041 ubox
50 54 0.007584294 ubox
50 73 0.004434019 ubox
50 76 0.006244367 ubox
50 83 0.005967541 ubox
51 72 0.004781060 ubox
51 75 0.003951096 ubox
51 76 0.042444089 ubox
51 79 0.011055200 ubox
51 80 0.003735563 ubox
51 82 0.005949197 ubox
52 71 0.004807516 ubox
52 75 0.030677133 ubox
52 76 0.983959322 ubox
53 70 0.004826673 ubox
53 75 0.994052036 ubox
54 69 0.004836001 ubox
54 74 0.999626120 ubox
54 77 0.005205697 ubox
55 73 0.999624510 ubox
55 76 0.005209195 ubox
56 71 0.003269192 ubox
56 72 0.999596604 ubox
56 73 0.006945127 ubox
56 75 0.005196351 ubox
57 70 0.003974206 ubox
57 71 0.999536466 ubox
57 72 0.009803568 ubox
57 73 0.004648702 ubox
58 70 0.998581327 ubox
58 71 0.011961742 ubox
58 72 0.004629320 ubox
59 70 0.013080607 ubox
59 71 0.003639111 ubox
60 70 0.003628473 ubox
62 70 0.004845661 ubox
62 71 0.008603405 ubox
63 70 0.011587682 ubox
79 85 0.003359495 ubox
79 86 0.013107789 ubox
80 84 0.003319785 ubox
80 85 0.013080257 ubox
83 91 0.086134209 ubox
84 90 0.087148970 ubox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
55 73 0.9500000 lbox
56 72 0.9500000 lbox
57 71 0.9500000 lbox
58 70 0.9500000 lbox
showpage
end
%%EOF
