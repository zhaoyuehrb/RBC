%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGUUCGGAGACCAGCCCCAGCGUGCCAGGACCGUUUCCGGGGCCUGGCCGGGGCGUUGCCGCGGGGUCGGGGACCAGCACGAGUGCUGAGUCACGCCCCGCCCGGGAGCGCCUCGGGUCAGUAACUCGGGAAGACGACCAAGCGGGAGCGGGAGCGGGAGCGGGAGCCGGAGCGAGAGCGCGCGGGCGCGGCCGACAGCAGUGCCUGAUUUGAG\
) } def
/len { sequence length } bind def

/coor [
[304.88973999 588.62030029]
[317.97702026 595.95562744]
[311.69219971 582.33575439]
[305.30941772 568.76153564]
[298.82901001 555.23364258]
[292.34860229 541.70568848]
[285.86816406 528.17779541]
[279.38775635 514.64990234]
[264.47265625 514.72332764]
[250.94914246 508.28723145]
[241.52252197 496.56970215]
[238.10427856 481.86135864]
[241.42456055 467.06735229]
[250.87705994 455.13369751]
[244.39663696 441.60580444]
[231.92013550 433.47030640]
[232.93603516 417.68176270]
[226.45561218 404.15383911]
[219.87788391 390.67300415]
[213.20320129 377.23986816]
[206.52850342 363.80676270]
[200.74014282 359.21780396]
[199.85598755 350.13165283]
[193.37557983 336.60372925]
[180.74563599 334.06680298]
[171.74745178 324.57815552]
[169.82734680 311.44647217]
[175.90763855 299.43145752]
[169.62283325 285.81158447]
[154.77786255 284.59002686]
[142.45550537 276.04513550]
[136.02218628 262.38940430]
[137.29624939 247.24761963]
[146.03529358 234.69468689]
[139.75048828 221.07479858]
[133.46569824 207.45492554]
[127.18088531 193.83503723]
[120.89608765 180.21514893]
[114.61128235 166.59526062]
[108.32647705 152.97538757]
[102.04167175 139.35549927]
[95.75687408 125.73561096]
[75.96206665 94.61203766]
[66.90225983 82.65712738]
[57.84246063 70.70220947]
[38.92949677 63.71655655]
[37.36876297 44.44047165]
[27.96821022 32.75160599]
[18.56765556 21.06274223]
[9.16710091 9.37387562]
[-0.23345351 -2.31498933]
[-9.63400841 -14.00385475]
[-19.11854172 -25.62468147]
[-28.68656158 -37.17686844]
[-38.25458145 -48.72905350]
[-47.82260513 -60.28123856]
[-57.39062500 -71.83341980]
[-66.95864105 -83.38560486]
[-76.52666473 -94.93778992]
[-86.09468842 -106.48997498]
[-100.85622406 -112.18274689]
[-103.01569366 -126.91997528]
[-112.58371735 -138.47215271]
[-122.31721497 -149.88526917]
[-132.21417236 -161.15692139]
[-142.11112976 -172.42857361]
[-152.00808716 -183.70024109]
[-161.90504456 -194.97189331]
[-171.80200195 -206.24354553]
[-179.81129456 -210.62434387]
[-181.75892639 -217.74967957]
[-191.49243164 -229.16278076]
[-204.26147461 -230.95896912]
[-212.13368225 -240.66096497]
[-211.31410217 -252.72644043]
[-220.88212585 -264.27862549]
[-230.45014954 -275.83081055]
[-240.10116577 -287.31375122]
[-249.83465576 -298.72686768]
[-259.56814575 -310.13995361]
[-269.30166626 -321.55307007]
[-279.03515625 -332.96618652]
[-294.66229248 -337.93856812]
[-297.90487671 -354.01394653]
[-285.42718506 -364.65533447]
[-270.06521606 -358.91580200]
[-267.62203979 -342.69967651]
[-257.88854980 -331.28656006]
[-248.15504456 -319.87347412]
[-238.42155457 -308.46035767]
[-228.68804932 -297.04724121]
[-221.95950317 -293.99923706]
[-218.89796448 -285.39883423]
[-209.32994080 -273.84664917]
[-199.76191711 -262.29446411]
[-183.00344849 -257.07922363]
[-180.07933044 -238.89628601]
[-170.34582520 -227.48318481]
[-160.53034973 -216.14050293]
[-150.63339233 -204.86885071]
[-140.73643494 -193.59719849]
[-130.83947754 -182.32553101]
[-120.94251251 -171.05387878]
[-111.04555511 -159.78222656]
[-106.42726898 -158.58421326]
[-102.51058960 -154.47543335]
[-101.03153229 -148.04017639]
[-91.46350861 -136.48799133]
[-77.38633728 -131.62152100]
[-74.54250336 -116.05799866]
[-64.97447968 -104.50581360]
[-55.40645981 -92.95362854]
[-45.83843994 -81.40144348]
[-36.27042007 -69.84925842]
[-26.70239830 -58.29707336]
[-17.13437653 -46.74488831]
[-7.56635666 -35.19270325]
[-0.88243467 -32.04804993]
[2.05485725 -23.40440941]
[11.45541191 -11.71554375]
[20.85596657 -0.02667850]
[30.25652122 11.66218662]
[39.65707397 23.35105133]
[49.05762863 35.03991699]
[59.26787567 35.22296906]
[67.87428284 41.11733246]
[71.90135193 50.97756577]
[69.79737854 61.64241028]
[78.85717773 73.59732819]
[87.91697693 85.55223846]
[102.87805939 86.63212585]
[113.56080627 76.10222626]
[111.11082458 60.77978516]
[118.16506195 46.95888138]
[132.01101685 39.95392990]
[147.32463074 42.45848465]
[158.21751404 53.50948715]
[160.50112915 68.85760498]
[153.29737854 82.60117340]
[139.37625122 89.45550537]
[124.09070587 86.78498077]
[113.40795898 97.31488037]
[128.35885620 98.52749634]
[133.87469482 112.47653198]
[123.79643250 123.58638000]
[109.37675476 119.45081329]
[115.66156006 133.07069397]
[121.94636536 146.69058228]
[128.23117065 160.31045532]
[134.51597595 173.93034363]
[140.80076599 187.55023193]
[147.08557129 201.17012024]
[153.37037659 214.78999329]
[159.65518188 228.40988159]
[174.87715149 229.90615845]
[187.22486877 238.76226807]
[193.44056702 252.51841736]
[191.94619751 267.43896484]
[183.24272156 279.52676392]
[189.52752686 293.14666748]
[206.05175781 298.89611816]
[213.16282654 314.51119995]
[206.90347290 330.12332153]
[213.38389587 343.65121460]
[219.96162415 357.13208008]
[226.63630676 370.56518555]
[233.31100464 383.99829102]
[239.92868042 390.28692627]
[239.98352051 397.67343140]
[246.46394348 411.20132446]
[259.40396118 420.30444336]
[257.92453003 435.12539673]
[264.40496826 448.65328979]
[279.62823486 448.76620483]
[293.23742676 455.45031738]
[302.55679321 467.33178711]
[305.78005981 482.02096558]
[302.32022095 496.59280396]
[292.91564941 508.16949463]
[299.39608765 521.69738770]
[305.87649536 535.22528076]
[312.35690308 548.75317383]
[318.83734131 562.28106689]
[325.36370850 568.66442871]
[325.31210327 576.05096436]
[331.59689331 589.67083740]
[338.84591675 602.80291748]
[347.02154541 615.37902832]
[355.19717407 627.95520020]
[363.37280273 640.53131104]
[371.54843140 653.10748291]
[379.72406006 665.68359375]
[393.73275757 673.03662109]
[394.18261719 687.92443848]
[402.35824585 700.50054932]
[417.69088745 705.22174072]
[423.42510986 720.20501709]
[415.16210938 733.95648193]
[399.24057007 735.92718506]
[387.87411499 724.60540771]
[389.78213501 708.67620850]
[381.60650635 696.10003662]
[368.18258667 689.64654541]
[367.14791870 673.85919189]
[358.97229004 661.28308105]
[350.79666138 648.70697021]
[342.62103271 636.13079834]
[334.44540405 623.55468750]
[326.26977539 610.97857666]
[325.50338745 625.95898438]
[317.43008423 638.60101318]
[304.16180420 645.59765625]
[289.16943359 645.11853027]
[276.37493896 637.28906250]
[269.12527466 624.15734863]
[269.31689453 609.15856934]
[276.89968872 596.21630859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[14 173]
[15 172]
[17 170]
[18 169]
[19 167]
[20 166]
[21 165]
[23 164]
[24 163]
[28 160]
[29 159]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 130]
[44 129]
[45 128]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[62 108]
[63 107]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[71 98]
[72 97]
[75 95]
[76 94]
[77 93]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[131 142]
[132 141]
[187 209]
[188 208]
[189 207]
[190 206]
[191 205]
[192 204]
[194 202]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
