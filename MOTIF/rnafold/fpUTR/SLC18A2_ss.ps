%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGACGGGGUAAACUGAGCGGCGGCGGCGGGGCGCUGGGGCGGAGACUGCGACCCGGAGCCGCCCGGACUGACGGAGCCCACUGCGGUGCGGGCGUUGGCGCGGGCACGGAGGACCCGGGCAGGCAUCGCAAGCGACCCCGAGCGGAGCCCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-32.65121841 378.38049316]
[-34.77531052 381.32296753]
[-37.45063019 383.13607788]
[-40.22307968 383.78598022]
[-48.61626434 396.21795654]
[-57.00945282 408.64996338]
[-65.40264130 421.08193970]
[-62.60272980 436.40509033]
[-71.29171753 448.89331055]
[-85.91722870 451.46817017]
[-94.31041718 463.90017700]
[-102.70360565 476.33215332]
[-99.44893646 491.79769897]
[-108.15318298 504.98904419]
[-123.65225983 508.08001709]
[-136.75083923 499.23678589]
[-139.67778015 483.70590210]
[-130.69656372 470.70153809]
[-115.13559723 467.93896484]
[-106.74240875 455.50698853]
[-98.34922028 443.07498169]
[-101.42830658 428.54727173]
[-93.09352112 415.81988525]
[-77.83463287 412.68875122]
[-69.44144440 400.25677490]
[-61.04825592 387.82476807]
[-52.65507126 375.39279175]
[-44.74422073 362.64843750]
[-37.32732391 349.61044312]
[-29.91042328 336.57241821]
[-34.09255981 322.32302856]
[-26.75650215 308.99496460]
[-11.78206730 304.70498657]
[-4.36516762 291.66696167]
[3.05173206 278.62896729]
[10.46863174 265.59097290]
[17.88553047 252.55296326]
[25.30243111 239.51495361]
[32.34168625 226.26924133]
[38.99748230 212.82675171]
[45.65327835 199.38427734]
[52.18002319 185.87866211]
[58.57711029 172.31114197]
[64.97419739 158.74363708]
[71.37128448 145.17613220]
[77.63813019 131.54797363]
[83.77416229 117.86042023]
[77.82640076 109.51862335]
[75.87569427 99.46098328]
[78.27367401 89.50050354]
[84.58807373 81.43268585]
[93.68065643 76.71183777]
[103.91236877 76.18894958]
[110.82443237 62.87642670]
[117.73650360 49.56389999]
[124.64856720 36.25137329]
[131.56063843 22.93884850]
[137.69665527 9.25129414]
[143.03639221 -4.76609612]
[148.37612915 -18.78348732]
[153.71586609 -32.80087662]
[159.05560303 -46.81826782]
[152.83792114 -61.10036087]
[158.45285034 -75.23992157]
[172.10694885 -81.07951355]
[177.44668579 -95.09690857]
[182.10926819 -109.35385132]
[186.08398438 -123.81764984]
[190.05871582 -138.28144836]
[194.03343201 -152.74525452]
[198.00814819 -167.20906067]
[190.45310974 -180.83106995]
[194.69009399 -195.44279480]
[207.72315979 -202.56143188]
[211.69787598 -217.02522278]
[215.67260742 -231.48902893]
[219.64732361 -245.95283508]
[223.62203979 -260.41662598]
[227.59677124 -274.88043213]
[221.65319824 -284.05993652]
[221.76713562 -294.77484131]
[227.65765381 -303.46124268]
[237.16282654 -307.36398315]
[241.68862915 -321.66494751]
[246.07725525 -336.00857544]
[250.32830811 -350.39358521]
[254.57934570 -364.77859497]
[250.21690369 -380.58685303]
[261.91720581 -392.07748413]
[277.64401245 -387.42993164]
[281.21890259 -371.42517090]
[268.96435547 -360.52755737]
[264.71331787 -346.14254761]
[260.46228027 -331.75753784]
[261.58761597 -324.41744995]
[255.98957825 -317.13912964]
[251.46376038 -302.83819580]
[257.03863525 -284.35144043]
[242.06057739 -270.90573120]
[238.08584595 -256.44192505]
[234.11112976 -241.97811890]
[230.13639832 -227.51431274]
[226.16168213 -213.05050659]
[222.18695068 -198.58670044]
[229.75202942 -185.80761719]
[225.92713928 -171.08264160]
[212.47195435 -163.23434448]
[208.49723816 -148.77053833]
[204.52250671 -134.30673218]
[200.54779053 -119.84293365]
[196.57305908 -105.37912750]
[210.79083252 -110.15981293]
[223.49864197 -102.19039154]
[225.38615417 -87.30961609]
[215.07049561 -76.41984558]
[200.10939026 -77.49941254]
[191.46408081 -89.75717163]
[186.12434387 -75.73978424]
[192.43263245 -62.29578400]
[187.21707153 -48.00408936]
[173.07298279 -41.47853470]
[167.73326111 -27.46114349]
[162.39352417 -13.44375229]
[157.05378723 0.57363814]
[151.71405029 14.59102821]
[165.91184998 9.75134277]
[179.45065308 16.20896339]
[184.62457275 30.28840065]
[178.48876953 43.97605515]
[164.53555298 49.48131561]
[150.70669556 43.67074966]
[144.87315369 29.85091400]
[137.96109009 43.16344070]
[131.04902649 56.47596741]
[124.13696289 69.78849030]
[117.22489929 83.10102081]
[124.10955048 101.00101471]
[115.76475525 118.26869202]
[97.46171570 123.99645233]
[91.32568359 137.68400574]
[90.66246796 146.84219360]
[84.93878937 151.57322693]
[78.54170227 165.14073181]
[72.14461517 178.70823669]
[65.74752808 192.27574158]
[64.90901184 201.41955566]
[59.09576416 206.04006958]
[52.43996429 219.48255920]
[45.78416824 232.92503357]
[46.12990952 238.22708130]
[44.53867340 242.66983032]
[41.67348862 245.65289307]
[38.34043503 246.93185425]
[30.92353630 259.96984863]
[23.50663757 273.00787354]
[16.08973885 286.04586792]
[8.67283821 299.08386230]
[1.25593901 312.12188721]
[5.22060442 327.18572998]
[-2.48691773 340.30245972]
[-16.87241745 343.98931885]
[-24.28931618 357.02734375]
[-31.70621681 370.06533813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[10 21]
[11 20]
[12 19]
[28 163]
[29 162]
[30 161]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 149]
[40 148]
[41 147]
[42 145]
[43 144]
[44 143]
[45 142]
[46 140]
[47 139]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[65 118]
[66 117]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[83 97]
[84 96]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
