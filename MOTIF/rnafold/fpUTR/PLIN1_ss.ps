%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCCCAAGCCUCCCAGGAGUGACAGGAAUUGUUUCUGCCUGAGGAGACACUCUGCAGCCUGGGCUCUGUGAGACUGAGGUGGCGGUCAGCCGGAGUGAGUGUUGGGGUCCUGGGGCACCUGCCUUACAUGGCUUGUUUAUGAACAUUAAAGGGAAGAAGUUGAAGCUUGAGGAGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[107.18101501 305.61569214]
[103.04376221 290.92398071]
[105.69916534 275.89364624]
[114.62000275 263.50891113]
[128.03503418 256.22882080]
[127.25860596 241.24891663]
[126.35292816 226.27627563]
[125.31806183 211.31202698]
[124.28319550 196.34776306]
[123.24832916 181.38349915]
[122.21346283 166.41925049]
[108.93161774 159.44839478]
[96.02840424 167.09738159]
[83.12519073 174.74638367]
[70.22197723 182.39537048]
[57.38525391 190.15542603]
[44.61598969 198.02600098]
[31.84672165 205.89656067]
[19.07745552 213.76713562]
[6.37659264 221.74761963]
[-6.25492048 229.83741760]
[-13.70317650 243.79571533]
[-28.59370422 244.14419556]
[-41.22521973 252.23399353]
[-53.85673141 260.32379150]
[-66.48824310 268.41360474]
[-71.31374359 283.71374512]
[-86.33570862 289.34579468]
[-100.03057098 280.98934937]
[-101.89281464 265.05474854]
[-90.49387360 253.76564026]
[-74.57804871 255.78208923]
[-61.94653320 247.69229126]
[-49.31501770 239.60247803]
[-36.68350601 231.51268005]
[-30.13873863 218.13302612]
[-14.34472084 217.20590210]
[-1.71320784 209.11610413]
[2.23401213 202.84469604]
[11.20688820 200.99786377]
[23.97615433 193.12730408]
[36.74542236 185.25672913]
[49.51468658 177.38616943]
[53.56956863 171.18382263]
[62.57298660 169.49215698]
[75.47620392 161.84315491]
[88.37941742 154.19416809]
[101.28263092 146.54518127]
[84.78712463 142.04499817]
[71.67648315 132.17070007]
[63.51314545 118.72680664]
[61.03186798 103.88903809]
[64.09304810 89.85930634]
[71.76923370 78.54034424]
[62.01767349 67.14266968]
[52.26611328 55.74499130]
[42.51455307 44.34731293]
[27.66385460 38.89136887]
[25.26895142 24.19056320]
[15.51739120 12.79288673]
[5.76582956 1.39520895]
[-3.98573184 -10.00246811]
[-18.83643150 -15.45841217]
[-21.23133278 -30.15921783]
[-30.98289299 -41.55689621]
[-40.83246231 -52.86998749]
[-50.77930069 -64.09764862]
[-60.72613907 -75.32530975]
[-75.75518036 -83.17160797]
[-72.37596893 -99.78536987]
[-55.47601700 -101.13737488]
[-49.49847794 -85.27214813]
[-39.55163956 -74.04448700]
[-29.60479927 -62.81682587]
[-22.79817009 -59.88751221]
[-19.58521652 -51.30845642]
[-9.83365440 -39.91078186]
[4.31954718 -35.27007294]
[7.41194534 -19.75403023]
[17.16350746 -8.35635281]
[26.91506767 3.04132485]
[36.66662979 14.43900204]
[50.81983185 19.07970810]
[53.91223145 34.59575272]
[63.66379166 45.99343109]
[73.41535187 57.39110565]
[83.16691589 68.78878784]
[109.24171448 61.94437408]
[135.38273621 75.80831909]
[146.15078735 106.18091583]
[156.28994751 95.12661743]
[166.42909241 84.07231903]
[176.56825256 73.01801300]
[186.70741272 61.96371841]
[186.93548584 49.05061722]
[195.62969971 40.05010223]
[207.72599792 39.41818619]
[218.05444336 28.54054070]
[228.38288879 17.66289711]
[238.71134949 6.78525162]
[249.03979492 -4.09239292]
[252.69250488 -12.49364185]
[259.64163208 -15.06670761]
[270.15631104 -25.76445580]
[274.31179810 -41.03018188]
[288.75143433 -44.68338394]
[299.26611328 -55.38113403]
[303.42160034 -70.64685822]
[317.86126709 -74.30006409]
[328.37591553 -84.99781036]
[338.89059448 -95.69555664]
[342.47204590 -111.69884491]
[358.20074463 -116.33995819]
[369.89636230 -104.84452057]
[365.52740479 -89.03805542]
[349.58831787 -85.18089294]
[339.07366943 -74.48314667]
[328.55899048 -63.78539658]
[325.15557861 -49.28484344]
[309.96386719 -44.86646652]
[299.44918823 -34.16872025]
[296.04577637 -19.66816711]
[280.85403442 -15.24979115]
[270.33938599 -4.55204248]
[259.91744995 6.23605585]
[249.58898926 17.11370087]
[239.26054382 27.99134445]
[228.93209839 38.86898804]
[218.60363770 49.74663544]
[215.44142151 66.99714661]
[197.76170349 72.10287476]
[187.62255859 83.15717316]
[177.48339844 94.21147156]
[167.34423828 105.26576996]
[157.20509338 116.32006836]
[162.03689575 130.52055359]
[176.81398010 133.09693909]
[191.59106445 135.67332458]
[206.36814880 138.24971008]
[221.57310486 132.10629272]
[234.32759094 142.41430664]
[231.51087952 158.56974792]
[216.02058411 163.95327759]
[203.79176331 153.02679443]
[189.01467896 150.45040894]
[174.23759460 147.87402344]
[159.46051025 145.29763794]
[153.88981628 150.31932068]
[165.62274170 159.66482544]
[177.35566711 169.01033020]
[189.08859253 178.35583496]
[200.82151794 187.70133972]
[212.55444336 197.04684448]
[226.38439941 202.85481262]
[234.83943176 215.24481201]
[235.20594788 230.24034119]
[227.36630249 243.02861023]
[213.83660889 249.50529480]
[198.95916748 247.59170532]
[187.50885010 237.90200806]
[183.16056824 223.54385376]
[175.07814026 210.90762329]
[166.99571228 198.27139282]
[158.91326904 185.63516235]
[150.83084106 172.99891663]
[142.74841309 160.36268616]
[137.17771912 165.38438416]
[138.21258545 180.34863281]
[139.24745178 195.31289673]
[140.28231812 210.27716064]
[141.31718445 225.24140930]
[145.03948975 233.61206055]
[142.23849487 240.47248840]
[143.01492310 255.45239258]
[157.11070251 261.30657959]
[167.26411438 272.70266724]
[171.45919800 287.37796021]
[168.86299133 302.41867065]
[159.99099731 314.83840942]
[146.60475159 322.17129517]
[131.36209106 322.96133423]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 48]
[13 47]
[14 46]
[15 45]
[16 43]
[17 42]
[18 41]
[19 40]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[26 32]
[54 87]
[55 86]
[56 85]
[57 84]
[59 82]
[60 81]
[61 80]
[62 79]
[64 77]
[65 76]
[66 74]
[67 73]
[68 72]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[103 124]
[104 123]
[106 121]
[107 120]
[109 118]
[110 117]
[111 116]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
