%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RHO)
} def

/sequence { (\
AGAGUCAUCCAGCUGGAGCCCUGAGUGGCUGAGCUCAGGCCUUCGCAGCAUUCUUGGGUGGGAGCAGCCACGGGUCAGCCACAAGGGCCACAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.413466492 ubox
3 8 0.405428037 ubox
3 14 0.003437232 ubox
4 13 0.003968484 ubox
5 12 0.003977350 ubox
8 17 0.005121037 ubox
9 16 0.005474613 ubox
10 15 0.005468725 ubox
12 94 0.997584764 ubox
13 93 0.999931631 ubox
14 92 0.999723992 ubox
15 91 0.999911036 ubox
18 88 0.999869726 ubox
19 87 0.999953299 ubox
20 86 0.999912377 ubox
20 87 0.009167300 ubox
21 85 0.999844777 ubox
21 86 0.012841005 ubox
22 83 0.020686004 ubox
22 84 0.994354135 ubox
22 85 0.015648836 ubox
23 82 0.020636316 ubox
25 82 0.996801387 ubox
26 81 0.999555072 ubox
27 80 0.999986738 ubox
28 79 0.999994755 ubox
29 78 0.999989301 ubox
30 77 0.999751775 ubox
31 76 0.999943761 ubox
32 75 0.988130882 ubox
33 40 0.003802784 ubox
33 49 0.012430467 ubox
33 65 0.018589805 ubox
33 75 0.136637561 ubox
34 39 0.003838732 ubox
34 48 0.012442788 ubox
34 64 0.018607736 ubox
34 73 0.963444858 ubox
34 74 0.261184688 ubox
35 47 0.012168253 ubox
35 57 0.005149496 ubox
35 63 0.018608622 ubox
35 72 0.943842036 ubox
35 73 0.261237314 ubox
35 74 0.006990649 ubox
36 56 0.010729004 ubox
36 62 0.018588893 ubox
36 72 0.274448664 ubox
36 73 0.012226555 ubox
37 54 0.003746159 ubox
37 55 0.010649289 ubox
38 44 0.006961327 ubox
38 53 0.004250097 ubox
38 54 0.010487250 ubox
38 69 0.998015282 ubox
39 43 0.004524235 ubox
39 46 0.026622665 ubox
39 49 0.013792891 ubox
39 53 0.009907625 ubox
39 59 0.018533562 ubox
39 65 0.025918212 ubox
39 68 0.998792217 ubox
39 75 0.003208108 ubox
40 45 0.026604819 ubox
40 48 0.013651319 ubox
40 57 0.010171026 ubox
40 58 0.018691749 ubox
40 62 0.007510724 ubox
40 64 0.026900423 ubox
40 67 0.993658642 ubox
40 74 0.004085454 ubox
41 48 0.006630308 ubox
41 56 0.010204614 ubox
41 57 0.018786524 ubox
41 60 0.004183372 ubox
41 61 0.010982002 ubox
41 62 0.053565083 ubox
41 64 0.673525734 ubox
41 67 0.068074888 ubox
41 73 0.004106147 ubox
42 47 0.006732190 ubox
42 56 0.018126252 ubox
42 60 0.009782022 ubox
42 61 0.038156336 ubox
42 62 0.150415709 ubox
42 63 0.662033459 ubox
42 64 0.635702293 ubox
42 66 0.085848841 ubox
42 72 0.003916408 ubox
43 57 0.003753693 ubox
43 58 0.006732528 ubox
43 60 0.006673460 ubox
43 61 0.265507265 ubox
43 62 0.617677205 ubox
43 63 0.718472386 ubox
43 66 0.016410927 ubox
44 56 0.004771915 ubox
44 57 0.009506611 ubox
44 60 0.340322519 ubox
44 61 0.581627802 ubox
44 62 0.731797138 ubox
45 55 0.004737579 ubox
45 59 0.397310964 ubox
45 65 0.044759059 ubox
45 68 0.006086044 ubox
46 56 0.022917613 ubox
46 58 0.404465792 ubox
46 60 0.829832907 ubox
46 64 0.044717799 ubox
46 67 0.006562087 ubox
47 54 0.030549035 ubox
47 55 0.024609210 ubox
47 59 0.802839212 ubox
48 53 0.031920240 ubox
48 54 0.022367924 ubox
48 59 0.174712215 ubox
48 65 0.047722787 ubox
49 56 0.912538579 ubox
49 58 0.275560462 ubox
49 60 0.076837220 ubox
49 64 0.047724023 ubox
50 55 0.881698243 ubox
50 59 0.078264217 ubox
50 75 0.006070889 ubox
51 57 0.038320767 ubox
51 58 0.078749769 ubox
51 62 0.028674146 ubox
51 63 0.040935840 ubox
51 64 0.005043515 ubox
51 74 0.008186677 ubox
52 56 0.032801709 ubox
52 57 0.062337317 ubox
52 58 0.023846386 ubox
52 61 0.029213326 ubox
52 62 0.041203205 ubox
52 63 0.015395023 ubox
52 73 0.009610600 ubox
52 74 0.004268504 ubox
53 57 0.025472862 ubox
53 60 0.029648318 ubox
53 61 0.041339043 ubox
53 62 0.015792730 ubox
53 72 0.010844405 ubox
53 73 0.005810788 ubox
54 60 0.040849300 ubox
54 61 0.015490371 ubox
54 72 0.005699403 ubox
55 60 0.012638926 ubox
55 70 0.018813712 ubox
56 69 0.020327786 ubox
57 68 0.020331028 ubox
58 71 0.029213483 ubox
59 66 0.020549002 ubox
59 70 0.029269763 ubox
60 65 0.020644328 ubox
60 69 0.029376090 ubox
61 68 0.029353540 ubox
67 75 0.011194253 ubox
68 74 0.014135025 ubox
69 73 0.014056354 ubox
12 94 0.9500000 lbox
13 93 0.9500000 lbox
14 92 0.9500000 lbox
15 91 0.9500000 lbox
18 88 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
25 82 0.9500000 lbox
26 81 0.9500000 lbox
27 80 0.9500000 lbox
28 79 0.9500000 lbox
29 78 0.9500000 lbox
30 77 0.9500000 lbox
31 76 0.9500000 lbox
32 75 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
