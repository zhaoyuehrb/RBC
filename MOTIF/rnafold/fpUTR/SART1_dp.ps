%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SART1)
} def

/sequence { (\
AACACGACAGCGGCUGCCGAGCGACCCGGAAGUAUUCCCAUUUUGCGUUGUCUGGGCUCGGCGGCAGCCGGGCUCGGAGUGGACGUGCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 51 0.004534486 ubox
2 80 0.030367961 ubox
3 50 0.005069593 ubox
3 54 0.005510510 ubox
3 79 0.033083757 ubox
3 81 0.010019390 ubox
3 87 0.009672594 ubox
4 48 0.004259414 ubox
4 49 0.003674821 ubox
4 51 0.031082919 ubox
4 53 0.006249790 ubox
4 80 0.010058149 ubox
4 86 0.009711641 ubox
5 12 0.004005258 ubox
5 19 0.005843179 ubox
5 47 0.005505280 ubox
5 50 0.035538545 ubox
5 70 0.008563288 ubox
5 76 0.947269778 ubox
5 79 0.009419849 ubox
5 85 0.009695533 ubox
6 11 0.006020803 ubox
6 18 0.005950851 ubox
6 46 0.005461097 ubox
6 49 0.035630364 ubox
6 52 0.050069870 ubox
6 69 0.008496829 ubox
6 75 0.955102401 ubox
6 84 0.009469812 ubox
7 48 0.035666124 ubox
7 51 0.056883061 ubox
7 74 0.935572391 ubox
8 16 0.006155520 ubox
8 45 0.005203640 ubox
8 47 0.035478151 ubox
8 50 0.058575160 ubox
8 81 0.004699736 ubox
9 15 0.006160903 ubox
9 44 0.005078417 ubox
9 49 0.058533815 ubox
9 74 0.061138904 ubox
9 80 0.003665224 ubox
9 92 0.017984409 ubox
10 14 0.006027171 ubox
10 17 0.004835386 ubox
10 43 0.004232475 ubox
10 46 0.033294659 ubox
10 48 0.058532528 ubox
10 68 0.013871892 ubox
10 73 0.092517550 ubox
10 91 0.019874795 ubox
11 16 0.004840266 ubox
11 19 0.012793703 ubox
11 45 0.033293552 ubox
11 47 0.058541549 ubox
11 67 0.013939947 ubox
11 70 0.991666792 ubox
11 72 0.084449015 ubox
12 18 0.013948037 ubox
12 26 0.012906201 ubox
12 27 0.004827022 ubox
12 39 0.003358623 ubox
12 44 0.026854862 ubox
12 46 0.057154053 ubox
12 69 0.997321535 ubox
12 89 0.012218396 ubox
13 17 0.013726255 ubox
13 22 0.057765598 ubox
13 25 0.013170714 ubox
13 26 0.004708037 ubox
13 33 0.029532329 ubox
13 43 0.005950352 ubox
13 46 0.004017435 ubox
13 65 0.014862921 ubox
13 68 0.997380701 ubox
13 88 0.012220375 ubox
14 21 0.057867639 ubox
14 32 0.030332284 ubox
14 45 0.005644984 ubox
14 64 0.015076670 ubox
14 67 0.997373111 ubox
14 87 0.012205843 ubox
15 20 0.057291866 ubox
15 23 0.015061374 ubox
15 31 0.026923413 ubox
15 63 0.015644686 ubox
15 66 0.997129403 ubox
15 85 0.009520031 ubox
16 22 0.016312388 ubox
16 62 0.017377116 ubox
16 65 0.997335430 ubox
16 84 0.010168161 ubox
17 21 0.016196926 ubox
17 29 0.030816055 ubox
17 61 0.017808825 ubox
17 64 0.997333428 ubox
17 82 0.010874298 ubox
18 28 0.030929574 ubox
18 60 0.018301440 ubox
18 63 0.997282120 ubox
18 81 0.010863872 ubox
19 27 0.030775043 ubox
19 49 0.003517835 ubox
19 59 0.020288316 ubox
19 62 0.993800497 ubox
19 80 0.008161828 ubox
20 48 0.003490630 ubox
20 58 0.021110673 ubox
21 46 0.017185733 ubox
21 51 0.008333094 ubox
21 57 0.021118542 ubox
21 62 0.037384511 ubox
22 45 0.017318064 ubox
22 50 0.009749376 ubox
22 56 0.016405006 ubox
22 60 0.994878499 ubox
22 61 0.029575666 ubox
23 27 0.005025883 ubox
23 42 0.005101625 ubox
23 43 0.007904879 ubox
23 44 0.017894968 ubox
23 49 0.009924718 ubox
23 52 0.007036723 ubox
23 59 0.996112060 ubox
24 33 0.003337769 ubox
24 41 0.005233632 ubox
24 42 0.008253769 ubox
24 43 0.017319046 ubox
24 48 0.009944906 ubox
24 51 0.007046682 ubox
24 58 0.992912538 ubox
25 32 0.003408501 ubox
25 47 0.009914126 ubox
25 50 0.007030232 ubox
25 55 0.003591782 ubox
25 56 0.997063707 ubox
26 54 0.003401310 ubox
26 55 0.997416766 ubox
26 56 0.008570154 ubox
27 45 0.011671944 ubox
27 47 0.007095168 ubox
27 54 0.997391129 ubox
27 55 0.007358438 ubox
28 37 0.004471152 ubox
28 38 0.070704477 ubox
28 39 0.021604053 ubox
28 44 0.011577328 ubox
28 46 0.008038218 ubox
28 52 0.047775537 ubox
28 53 0.994484892 ubox
29 36 0.004422380 ubox
29 37 0.071086236 ubox
29 38 0.021288681 ubox
29 43 0.011692831 ubox
29 44 0.014998322 ubox
29 48 0.004436990 ubox
29 49 0.026104762 ubox
29 51 0.046638226 ubox
29 52 0.994138107 ubox
30 35 0.004967143 ubox
30 36 0.070327165 ubox
30 42 0.013121121 ubox
30 43 0.039535408 ubox
30 44 0.013347386 ubox
30 48 0.072319668 ubox
30 49 0.143900584 ubox
30 51 0.902904287 ubox
31 35 0.053852458 ubox
31 41 0.018354972 ubox
31 42 0.090348211 ubox
31 43 0.027880392 ubox
31 44 0.031602954 ubox
31 48 0.332444943 ubox
31 49 0.196567916 ubox
31 53 0.004698451 ubox
32 41 0.092327507 ubox
32 42 0.026637456 ubox
32 43 0.029844118 ubox
32 46 0.833029064 ubox
32 48 0.080493602 ubox
32 51 0.010805179 ubox
32 52 0.005431736 ubox
33 40 0.090334433 ubox
33 45 0.837507432 ubox
33 47 0.038924831 ubox
33 50 0.123906617 ubox
34 41 0.045981294 ubox
34 44 0.824438527 ubox
34 48 0.116980123 ubox
34 49 0.133517156 ubox
34 51 0.015943814 ubox
35 40 0.047374975 ubox
35 47 0.124760618 ubox
35 50 0.027661844 ubox
39 45 0.185251875 ubox
39 50 0.247890927 ubox
40 44 0.150700207 ubox
40 48 0.026773297 ubox
40 49 0.246561491 ubox
40 51 0.014684498 ubox
41 47 0.029423781 ubox
41 50 0.024654591 ubox
44 50 0.009319273 ubox
45 49 0.005089848 ubox
45 51 0.014836678 ubox
45 86 0.005681330 ubox
46 50 0.018557505 ubox
46 85 0.005875642 ubox
47 84 0.006096221 ubox
48 83 0.006051234 ubox
49 82 0.005630772 ubox
51 78 0.020717923 ubox
52 77 0.049703448 ubox
53 76 0.063956551 ubox
54 75 0.070385041 ubox
55 74 0.070596426 ubox
56 73 0.070706321 ubox
57 72 0.070707378 ubox
58 71 0.070664304 ubox
59 70 0.070702517 ubox
60 69 0.070710447 ubox
61 68 0.070711461 ubox
62 67 0.070683725 ubox
68 77 0.004428584 ubox
69 76 0.004876662 ubox
70 75 0.004977371 ubox
70 89 0.003448081 ubox
71 89 0.276572781 ubox
72 80 0.003315568 ubox
72 88 0.276925349 ubox
73 79 0.003527351 ubox
73 87 0.276597901 ubox
74 78 0.003198692 ubox
74 82 0.003408195 ubox
74 83 0.019487069 ubox
75 81 0.003657857 ubox
75 82 0.019732205 ubox
75 85 0.275276647 ubox
76 84 0.275636766 ubox
77 91 0.005185310 ubox
78 92 0.876546753 ubox
79 88 0.005846819 ubox
79 91 0.959302115 ubox
80 87 0.005797122 ubox
80 90 0.959710183 ubox
81 86 0.004658905 ubox
81 89 0.960392216 ubox
82 88 0.958480267 ubox
85 91 0.004186762 ubox
86 90 0.003778495 ubox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
78 92 0.9500000 lbox
79 91 0.9500000 lbox
80 90 0.9500000 lbox
81 89 0.9500000 lbox
82 88 0.9500000 lbox
showpage
end
%%EOF
