%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGACCAUUGUUGAAGGUUUUGUAUAUAAGAAGUCAAUACAACAUUGACCAAAAUACUAACCAGCCAGAGAAACAGAAUCCUAACUAUUUCUGAGGAAACUGACUUGGCAACAAGCAUUUUGAGAAAUUUAUUCUGCCCUUGAACAUCUUUGAGCCCAUUGAG\
) } def
/len { sequence length } bind def

/coor [
[89.89071655 287.57681274]
[74.89071655 287.57247925]
[61.33081055 281.15930176]
[51.81130600 269.56710815]
[48.15771866 255.01885986]
[51.07067108 240.30441284]
[59.99156570 228.24549866]
[73.20968628 221.15457153]
[88.19026184 220.39141846]
[102.06053925 226.10240173]
[112.16135406 237.19349670]
[110.18000793 222.32493591]
[108.19866180 207.45635986]
[106.21731567 192.58779907]
[96.86666870 180.99406433]
[102.71331787 166.29280090]
[100.73197174 151.42422485]
[98.75062561 136.55566406]
[96.76927948 121.68709564]
[91.37970734 135.68539429]
[85.99012756 149.68370056]
[85.34323883 164.66973877]
[78.72689819 178.13168335]
[67.25726318 187.79852295]
[52.86926270 192.03944397]
[37.99013519 190.13902283]
[25.12997818 182.41786194]
[16.45828247 170.17851257]
[13.43795967 155.48574829]
[16.57853317 140.81820679]
[25.35019302 128.65028381]
[38.27316666 121.03472900]
[53.16751099 119.25627136]
[66.71811676 112.82345581]
[80.26872253 106.39064026]
[65.29289246 105.53945923]
[50.31705856 104.68828583]
[35.34122849 103.83710480]
[20.36540031 102.98592377]
[5.38956928 102.13474274]
[-7.48925447 111.70111847]
[-22.96087074 107.45745850]
[-29.15677834 92.65913391]
[-21.32400894 78.65815735]
[-5.47119188 76.19488525]
[6.24074841 87.15891266]
[21.21657944 88.01009369]
[36.19240952 88.86127472]
[51.16823959 89.71245575]
[66.14406586 90.56362915]
[81.11990356 91.41481018]
[92.94782257 82.18983459]
[95.76969910 67.45765686]
[98.59156799 52.72547913]
[101.41344452 37.99330139]
[104.23531342 23.26112556]
[107.05718994 8.52894974]
[102.05419159 -6.48040104]
[112.04766083 -17.52485085]
[114.86953735 -32.25702667]
[103.81065369 -40.86136627]
[97.57626343 -53.33588791]
[97.33558655 -67.21320343]
[103.07858276 -79.77589417]
[113.62907410 -88.58861542]
[126.88520813 -91.97019196]
[129.98536682 -106.64633179]
[133.08552551 -121.32246399]
[136.18568420 -135.99859619]
[134.89572144 -145.08709717]
[139.48588562 -150.92192078]
[142.86322021 -165.53677368]
[136.54928589 -174.46166992]
[136.22148132 -185.16902161]
[141.74607849 -194.08897400]
[151.07833862 -198.38143921]
[155.00631714 -212.85800171]
[158.93428040 -227.33457947]
[151.33526611 -240.93211365]
[155.52500916 -255.55744934]
[168.53500366 -262.71813965]
[172.46296692 -277.19473267]
[176.39093018 -291.67129517]
[180.31890869 -306.14785767]
[169.05876160 -316.51452637]
[163.91694641 -330.93051147]
[166.07502747 -346.08309937]
[175.03706360 -358.49038696]
[188.74368286 -365.30120850]
[204.04516602 -364.95053101]
[217.42536926 -357.51892090]
[225.80961609 -344.71411133]
[227.27125549 -329.47857666]
[221.47442627 -315.31326294]
[209.75119019 -305.47332764]
[194.79547119 -302.21990967]
[190.86750793 -287.74331665]
[186.93952942 -273.26675415]
[183.01156616 -258.79019165]
[190.61788940 -246.03559875]
[186.84060669 -231.29833984]
[173.41084290 -223.40661621]
[169.48287964 -208.93003845]
[165.55491638 -194.45347595]
[171.89070129 -176.21191406]
[157.47805786 -162.15942383]
[154.10072327 -147.54458618]
[150.86183167 -132.89843750]
[147.76167297 -118.22230530]
[144.66149902 -103.54616547]
[141.56134033 -88.87003326]
[153.83316040 -78.38862610]
[159.18743896 -63.06467438]
[156.07794189 -47.03735352]
[145.25820923 -34.68637085]
[129.60171509 -29.43515396]
[126.77983856 -14.70297718]
[131.98468018 -0.74737090]
[121.78936768 11.35082245]
[118.96749115 26.08300018]
[116.14562225 40.81517792]
[113.32374573 55.54735184]
[110.50187683 70.27953339]
[107.68000031 85.01170349]
[115.74614716 97.65834045]
[130.29444885 101.31164551]
[144.84277344 104.96495056]
[159.39108276 108.61826324]
[173.83963013 101.64552307]
[188.23666382 108.72401428]
[191.53800964 124.42371368]
[181.21115112 136.70115662]
[165.17799377 136.13815308]
[155.73776245 123.16657257]
[141.18945312 119.51326752]
[126.64115143 115.85995483]
[112.09283447 112.20664978]
[112.26912689 114.61683655]
[112.12238312 117.12902832]
[111.63784790 119.70574951]
[113.61919403 134.57431030]
[115.60054016 149.44288635]
[117.58188629 164.31144714]
[127.07424927 176.96868896]
[121.08588409 190.60646057]
[123.06723022 205.47502136]
[125.04857635 220.34358215]
[127.02991486 235.21215820]
[130.68322754 249.76046753]
[135.96144104 263.80114746]
[150.07676697 270.38864136]
[155.22961426 284.70306396]
[148.86242676 298.11929321]
[154.14064026 312.15994263]
[167.14978027 322.14465332]
[164.73936462 338.36569214]
[149.38903809 344.13626099]
[136.88989258 333.52008057]
[140.09997559 317.43817139]
[134.82176208 303.39749146]
[121.19338989 297.49807739]
[115.64051819 283.33404541]
[121.92076874 269.07934570]
[116.64255524 255.03868103]
[112.98054504 269.58480835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 148]
[12 147]
[13 146]
[14 145]
[16 143]
[17 142]
[18 141]
[19 140]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[59 117]
[60 116]
[66 111]
[67 110]
[68 109]
[69 108]
[71 107]
[72 106]
[76 104]
[77 103]
[78 102]
[81 99]
[82 98]
[83 97]
[84 96]
[125 137]
[126 136]
[127 135]
[128 134]
[149 164]
[150 163]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
