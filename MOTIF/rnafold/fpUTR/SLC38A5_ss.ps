%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:48:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAUGCCCUCCCUGCCUCCCUCUGGGGGCCCCCAAGAUCUAGGGUCCUCUCGUGCCUAGGCUGUCUGCCUGAGGAAAAAAAAAAAAGUACCGCUCCAGAGCAGGAGCCUAGGCAGCCGAGAGGGUGCCCGAACCUGAGUCUGAGUUGCGGCCACUUCAGGAGCUGAGAGGAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[77.68972778 317.77636719]
[79.29291534 332.92065430]
[74.59158325 347.40573120]
[64.40027618 358.72198486]
[50.48468018 364.90875244]
[35.25577164 364.89416504]
[21.35204506 358.68078613]
[11.18240738 347.34506226]
[6.50880814 332.85101318]
[8.14097691 317.70980835]
[15.79613209 304.54476929]
[28.14797020 295.63681030]
[43.05646133 292.52926636]
[46.19229889 277.86071777]
[49.32814026 263.19213867]
[52.46398163 248.52359009]
[55.59982300 233.85504150]
[53.91850662 226.63565063]
[58.92155457 218.95762634]
[62.31434631 204.34635925]
[65.70713043 189.73509216]
[68.97157288 175.09461975]
[72.10741425 160.42607117]
[75.24325562 145.75750732]
[63.21723175 136.79231262]
[50.05491638 143.98629761]
[36.89260101 151.18028259]
[23.73028374 158.37426758]
[15.66742039 172.65440369]
[-0.73133683 172.54124451]
[-8.59635258 158.15119934]
[0.16322765 144.28750610]
[16.53629875 145.21195984]
[29.69861412 138.01797485]
[42.86093140 130.82398987]
[56.02324677 123.62999725]
[52.38160706 112.90645599]
[51.28241348 101.76908875]
[52.72288895 90.80537415]
[56.56785583 80.57997131]
[62.55990982 71.60565186]
[70.33576202 64.31761932]
[79.44784546 59.05252075]
[89.38978577 56.03311539]
[88.33760071 41.07006073]
[87.28541565 26.10701180]
[86.23323822 11.14395905]
[84.91861725 -3.79832196]
[83.34195709 -18.71523094]
[81.76530457 -33.63213730]
[80.18865204 -48.54904938]
[78.61199951 -63.46595764]
[77.03534698 -78.38286591]
[75.45868683 -93.29977417]
[73.62049103 -108.18671417]
[71.52130890 -123.03910065]
[69.42212677 -137.89149475]
[67.32293701 -152.74388123]
[65.22375488 -167.59626770]
[63.12457657 -182.44865417]
[61.02539444 -197.30104065]
[58.92621231 -212.15342712]
[56.82702637 -227.00581360]
[54.72784424 -241.85820007]
[50.41696167 -249.94515991]
[52.72452545 -256.98944092]
[50.88632202 -271.87637329]
[49.04812241 -286.76330566]
[47.20991898 -301.65023804]
[45.37171936 -316.53720093]
[43.40295029 -331.40744019]
[41.30376816 -346.25982666]
[39.20458603 -361.11221313]
[36.97515106 -375.94558716]
[34.61563492 -390.75885010]
[19.64800835 -392.87112427]
[5.96866131 -399.30282593]
[-5.20605230 -409.48208618]
[-12.88248253 -422.50375366]
[-16.37804794 -437.20996094]
[-15.38192368 -452.29302979]
[-9.98268509 -466.41180420]
[-0.66042960 -478.31082153]
[11.75591564 -486.93206787]
[26.16229630 -491.50891113]
[41.27770615 -491.63442993]
[55.75809860 -487.29739380]
[68.31587982 -478.88351440]
[77.83441925 -467.14089966]
[83.46734619 -453.11373901]
[84.71377563 -438.04928589]
[81.46287537 -423.28704834]
[74.00371552 -410.13973999]
[62.99956131 -399.77633667]
[49.42889404 -393.11837769]
[51.78841019 -378.30511475]
[55.95780945 -372.17630005]
[54.05697250 -363.21139526]
[56.15615845 -348.35900879]
[58.25534058 -333.50662231]
[62.31653595 -327.30554199]
[60.25865936 -318.37539673]
[62.09686279 -303.48846436]
[63.93506241 -288.60150146]
[65.77326202 -273.71456909]
[67.61146545 -258.82763672]
[69.58023071 -243.95739746]
[71.67941284 -229.10499573]
[73.77859497 -214.25260925]
[75.87778473 -199.40022278]
[77.97696686 -184.54783630]
[80.07614899 -169.69544983]
[82.17533112 -154.84306335]
[84.27451324 -139.99067688]
[86.37369537 -125.13828278]
[88.47287750 -110.28589630]
[91.70620728 -106.73512268]
[92.72454071 -101.10682678]
[90.37559509 -94.87642670]
[91.95225525 -79.95951843]
[93.52890778 -65.04261017]
[95.10556030 -50.12570190]
[96.68221283 -35.20879364]
[98.25886536 -20.29188538]
[99.83552551 -5.37497568]
[102.94225311 -1.71291852]
[103.76243591 3.94764853]
[101.19628906 10.09177685]
[102.24846649 25.05482864]
[103.30065155 40.01787949]
[104.35283661 54.98093033]
[123.57860565 61.40319824]
[138.06855774 75.57771301]
[144.91236877 94.65749359]
[142.73544312 114.81032562]
[155.89776611 122.00431061]
[169.06007385 129.19828796]
[182.22239685 136.39227295]
[195.38470459 143.58627319]
[208.60964966 150.66447449]
[221.89619446 157.62635803]
[235.30287170 164.35398865]
[248.82554626 170.84529114]
[262.34823608 177.33659363]
[277.90002441 173.39692688]
[290.58892822 183.21382141]
[290.68109131 199.25660706]
[278.10580444 209.21862793]
[262.50976562 205.45788574]
[255.85691833 190.85928345]
[242.33424377 184.36796570]
[228.81155396 177.87666321]
[224.06364441 178.59759521]
[218.81562805 176.32313538]
[214.93431091 170.91288757]
[201.64776611 163.95101929]
[194.24211121 163.63069153]
[188.19071960 156.74858093]
[175.02841187 149.55459595]
[161.86608887 142.36061096]
[148.70378113 135.16662598]
[135.54145813 127.97264099]
[129.12004089 135.82589722]
[120.95571899 142.18885803]
[111.39803314 146.67398071]
[100.88271332 148.97645569]
[89.91181183 148.89335632]
[86.77597046 163.56190491]
[83.64012909 178.23046875]
[84.90743256 187.30661011]
[80.31839752 193.12788391]
[76.92560577 207.73915100]
[73.53281403 222.35040283]
[70.26837921 236.99087524]
[67.13253784 251.65943909]
[63.99669647 266.32800293]
[60.86085510 280.99655151]
[57.72501373 295.66510010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[19 173]
[20 172]
[21 171]
[22 169]
[23 168]
[24 167]
[25 36]
[26 35]
[27 34]
[28 33]
[44 131]
[45 130]
[46 129]
[47 128]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 100]
[72 99]
[73 98]
[74 96]
[75 95]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 156]
[141 155]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
