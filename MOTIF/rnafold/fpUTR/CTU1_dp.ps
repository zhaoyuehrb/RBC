%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CTU1)
} def

/sequence { (\
GCGUGGUGGGCAGUGUGGGCAUCCCAGCACUGAGUUCUGCCCGGGAGAAGCCGACCCCUCCCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.025639845 ubox
1 64 0.965211250 ubox
2 32 0.003202562 ubox
2 39 0.025711706 ubox
2 43 0.019800142 ubox
2 63 0.965866782 ubox
3 30 0.011513361 ubox
3 38 0.022876107 ubox
3 40 0.052590027 ubox
3 42 0.094787804 ubox
3 62 0.961098045 ubox
3 64 0.086115769 ubox
4 29 0.011560968 ubox
4 39 0.052565044 ubox
4 63 0.085743118 ubox
4 65 0.007355935 ubox
5 28 0.011565710 ubox
5 36 0.003905022 ubox
5 37 0.022955423 ubox
5 38 0.053033293 ubox
5 41 0.239335690 ubox
5 42 0.010984852 ubox
5 56 0.011220567 ubox
5 58 0.010129530 ubox
5 59 0.020114571 ubox
5 60 0.073205770 ubox
5 61 0.958010208 ubox
5 62 0.084743355 ubox
5 64 0.006947890 ubox
6 35 0.003631305 ubox
6 36 0.022278655 ubox
6 37 0.053416078 ubox
6 40 0.240099318 ubox
6 41 0.008823901 ubox
6 55 0.011334353 ubox
6 57 0.010066393 ubox
6 58 0.026968608 ubox
6 59 0.067893025 ubox
6 60 0.956843735 ubox
6 61 0.083866017 ubox
6 64 0.076055309 ubox
7 26 0.011554885 ubox
7 39 0.239525027 ubox
7 43 0.007591072 ubox
7 54 0.011402440 ubox
7 63 0.076347723 ubox
8 25 0.011572133 ubox
8 36 0.007505939 ubox
8 37 0.033246203 ubox
8 38 0.236634749 ubox
8 42 0.042539049 ubox
8 56 0.013915036 ubox
8 57 0.188795650 ubox
8 58 0.942876277 ubox
8 59 0.054920583 ubox
8 60 0.019953433 ubox
8 62 0.076473327 ubox
9 24 0.011572184 ubox
9 35 0.009539497 ubox
9 36 0.032845351 ubox
9 37 0.237217247 ubox
9 38 0.006262008 ubox
9 41 0.043069219 ubox
9 52 0.011308028 ubox
9 55 0.013892841 ubox
9 56 0.191267138 ubox
9 57 0.943526986 ubox
9 58 0.057840104 ubox
9 59 0.018878128 ubox
9 61 0.076485642 ubox
10 23 0.011557994 ubox
10 35 0.039639027 ubox
10 36 0.227503794 ubox
10 37 0.007706273 ubox
10 40 0.043299015 ubox
10 51 0.011316663 ubox
10 55 0.192367282 ubox
10 56 0.940531439 ubox
10 57 0.057588352 ubox
10 58 0.018814611 ubox
10 60 0.076436729 ubox
11 17 0.004766086 ubox
11 32 0.565603437 ubox
11 34 0.039735422 ubox
11 39 0.041872599 ubox
11 50 0.010175894 ubox
12 16 0.003874631 ubox
12 31 0.568911045 ubox
12 38 0.035761561 ubox
12 59 0.066083115 ubox
13 20 0.010686082 ubox
13 22 0.004028842 ubox
13 30 0.569854239 ubox
13 37 0.028487427 ubox
13 55 0.074938891 ubox
13 58 0.066122208 ubox
14 19 0.010567222 ubox
14 21 0.004350904 ubox
14 29 0.570063707 ubox
14 53 0.003889609 ubox
14 54 0.071786397 ubox
15 20 0.004333085 ubox
15 28 0.569002345 ubox
15 35 0.005508956 ubox
15 51 0.004736746 ubox
15 55 0.815076484 ubox
16 26 0.453388516 ubox
16 27 0.341648157 ubox
16 32 0.011618808 ubox
16 43 0.004593132 ubox
16 50 0.004742845 ubox
16 53 0.058515313 ubox
16 54 0.814193684 ubox
17 24 0.032258607 ubox
17 25 0.560633477 ubox
17 31 0.013691352 ubox
17 42 0.006077070 ubox
17 52 0.065133599 ubox
18 23 0.032646053 ubox
18 24 0.561596675 ubox
18 25 0.093284449 ubox
18 30 0.013827812 ubox
18 41 0.006193207 ubox
18 51 0.063886081 ubox
18 52 0.818391130 ubox
19 23 0.552531849 ubox
19 24 0.092703552 ubox
19 28 0.014064030 ubox
19 40 0.006193939 ubox
19 51 0.818592703 ubox
20 27 0.014066321 ubox
20 39 0.006188211 ubox
20 50 0.816836413 ubox
21 38 0.005894469 ubox
22 45 0.016421256 ubox
22 46 0.798326479 ubox
22 48 0.162492678 ubox
23 44 0.019291286 ubox
23 45 0.804823818 ubox
23 47 0.161113825 ubox
24 43 0.020159580 ubox
24 44 0.805197138 ubox
24 45 0.159416613 ubox
25 39 0.015221625 ubox
25 43 0.803940658 ubox
25 44 0.159174685 ubox
26 36 0.033663176 ubox
26 38 0.030138508 ubox
27 35 0.034901639 ubox
27 37 0.030220857 ubox
27 40 0.817426236 ubox
28 34 0.035130420 ubox
28 39 0.818409920 ubox
29 35 0.049139390 ubox
29 38 0.796256630 ubox
30 34 0.061357304 ubox
30 44 0.004889882 ubox
31 43 0.006329974 ubox
31 53 0.004619212 ubox
32 38 0.008474528 ubox
32 42 0.009685063 ubox
32 52 0.011740360 ubox
34 40 0.151892023 ubox
34 51 0.043021180 ubox
34 55 0.041352069 ubox
35 39 0.142376666 ubox
35 45 0.003716803 ubox
35 46 0.018464992 ubox
35 47 0.036096293 ubox
35 49 0.055968637 ubox
35 50 0.035596500 ubox
35 54 0.039857597 ubox
36 44 0.004760192 ubox
36 45 0.020020228 ubox
36 46 0.045652020 ubox
36 48 0.067129852 ubox
36 49 0.024223945 ubox
36 53 0.019128128 ubox
36 54 0.024047123 ubox
37 43 0.007972802 ubox
37 44 0.020752850 ubox
37 45 0.046607259 ubox
37 47 0.071956735 ubox
37 50 0.005462101 ubox
37 53 0.027125823 ubox
38 43 0.019496478 ubox
38 44 0.046207652 ubox
38 46 0.071684960 ubox
38 49 0.005493141 ubox
38 65 0.005826210 ubox
39 51 0.029139954 ubox
39 64 0.007954219 ubox
40 50 0.029143052 ubox
40 63 0.007252606 ubox
42 53 0.497737429 ubox
42 63 0.212240346 ubox
43 52 0.502993741 ubox
43 56 0.004640080 ubox
43 57 0.014023459 ubox
43 58 0.022299573 ubox
43 62 0.248105125 ubox
44 51 0.502616503 ubox
44 52 0.031787931 ubox
44 55 0.004913023 ubox
44 56 0.014167001 ubox
44 57 0.022353353 ubox
44 61 0.249362774 ubox
45 51 0.032932760 ubox
45 55 0.014159029 ubox
45 56 0.022302144 ubox
45 60 0.249377758 ubox
46 59 0.249300395 ubox
47 58 0.248744629 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
showpage
end
%%EOF
