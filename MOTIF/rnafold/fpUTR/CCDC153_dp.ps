%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC153)
} def

/sequence { (\
GGCCUUCUCUCUGCCACUCCCCACGAGUGGGUCACUCCACGGGGAGCCCCAACGCUGGCAGGAGAGGAUCCUACAGGACAGCAAGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.114438859 ubox
1 71 0.256099617 ubox
1 72 0.056052953 ubox
2 69 0.118592706 ubox
2 70 0.256006737 ubox
2 71 0.059243119 ubox
2 82 0.203290359 ubox
3 67 0.413250992 ubox
3 77 0.028807176 ubox
3 81 0.202910062 ubox
3 86 0.102631505 ubox
4 66 0.413333665 ubox
4 67 0.865410470 ubox
4 76 0.028865507 ubox
4 77 0.003589601 ubox
4 81 0.005277836 ubox
4 85 0.102279657 ubox
4 86 0.007770275 ubox
4 88 0.010356058 ubox
5 65 0.293128008 ubox
5 66 0.868093859 ubox
5 67 0.006254074 ubox
5 68 0.227848489 ubox
5 75 0.023278465 ubox
5 80 0.005214912 ubox
5 84 0.089978972 ubox
5 85 0.006730323 ubox
5 87 0.010087671 ubox
6 64 0.039781559 ubox
6 65 0.917010322 ubox
6 67 0.249859316 ubox
6 68 0.013227634 ubox
6 83 0.063641857 ubox
6 84 0.004610055 ubox
6 86 0.009825093 ubox
7 64 0.962859271 ubox
7 66 0.266075440 ubox
7 67 0.010975117 ubox
7 81 0.005723300 ubox
7 85 0.009386900 ubox
8 63 0.963340113 ubox
8 65 0.266441409 ubox
8 66 0.005031931 ubox
8 80 0.004299732 ubox
8 84 0.009172342 ubox
9 62 0.959066197 ubox
9 64 0.266589671 ubox
10 61 0.108961674 ubox
10 62 0.122620066 ubox
10 63 0.253867689 ubox
11 61 0.974976251 ubox
11 62 0.191986072 ubox
11 81 0.009183241 ubox
12 60 0.994781917 ubox
12 61 0.094546752 ubox
12 80 0.009188828 ubox
13 59 0.999899531 ubox
13 79 0.009185834 ubox
14 58 0.999936489 ubox
14 77 0.008971327 ubox
15 57 0.999850351 ubox
15 76 0.008918435 ubox
16 28 0.011362998 ubox
16 56 0.983230016 ubox
17 27 0.020012824 ubox
17 44 0.006710441 ubox
17 46 0.984794376 ubox
18 26 0.020259628 ubox
18 43 0.005038434 ubox
18 44 0.013454393 ubox
18 45 0.994742371 ubox
19 25 0.020259860 ubox
19 42 0.005050145 ubox
19 43 0.017200831 ubox
19 44 0.999492129 ubox
20 41 0.005028949 ubox
20 42 0.017716974 ubox
20 43 0.999495379 ubox
20 44 0.011421365 ubox
21 30 0.003181791 ubox
21 41 0.018178335 ubox
21 42 0.999466873 ubox
21 43 0.012450018 ubox
22 29 0.003186694 ubox
22 41 0.997948211 ubox
22 42 0.013355540 ubox
24 41 0.015663456 ubox
24 54 0.004549540 ubox
25 37 0.767668624 ubox
25 40 0.019033116 ubox
25 53 0.004542499 ubox
26 36 0.769699504 ubox
27 35 0.769926444 ubox
27 40 0.636546668 ubox
27 53 0.004451903 ubox
28 34 0.769008866 ubox
28 39 0.637403483 ubox
28 51 0.016055628 ubox
28 52 0.003240930 ubox
29 33 0.756735518 ubox
29 36 0.006210061 ubox
29 37 0.008599105 ubox
29 38 0.637342393 ubox
29 40 0.003959500 ubox
29 49 0.006296446 ubox
29 50 0.020493191 ubox
30 35 0.008979220 ubox
30 36 0.011279709 ubox
30 37 0.636472104 ubox
30 38 0.018453243 ubox
30 48 0.006380074 ubox
30 49 0.020492076 ubox
31 35 0.085144841 ubox
31 36 0.463795000 ubox
31 37 0.024850944 ubox
31 47 0.006430312 ubox
31 48 0.020465293 ubox
32 46 0.005296707 ubox
35 43 0.004659874 ubox
35 46 0.020890485 ubox
36 42 0.004602689 ubox
36 45 0.021042653 ubox
37 41 0.004443931 ubox
37 44 0.021050514 ubox
38 43 0.021011722 ubox
41 50 0.004897828 ubox
42 49 0.004902468 ubox
43 48 0.004885448 ubox
45 56 0.087476174 ubox
46 55 0.165280042 ubox
46 59 0.005368967 ubox
47 54 0.184391207 ubox
47 58 0.005901929 ubox
48 57 0.006150844 ubox
49 58 0.007863583 ubox
50 57 0.011066350 ubox
51 56 0.014439768 ubox
57 74 0.003199162 ubox
60 72 0.009310363 ubox
61 71 0.009780994 ubox
62 70 0.009787358 ubox
63 69 0.009689672 ubox
69 77 0.010567293 ubox
69 78 0.438941743 ubox
69 86 0.004169302 ubox
69 87 0.759357019 ubox
70 76 0.016290379 ubox
70 77 0.480814786 ubox
70 85 0.006252024 ubox
70 86 0.812575153 ubox
71 76 0.479518214 ubox
71 77 0.034527037 ubox
71 81 0.018991692 ubox
71 85 0.812854469 ubox
71 86 0.023100178 ubox
71 88 0.007410761 ubox
72 76 0.031602146 ubox
72 80 0.020410468 ubox
72 84 0.791777482 ubox
72 85 0.022804325 ubox
72 87 0.007653751 ubox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
69 87 0.9500000 lbox
70 86 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
showpage
end
%%EOF
