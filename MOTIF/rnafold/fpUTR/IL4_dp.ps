%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL4)
} def

/sequence { (\
UGCAUCGUUAGCUUCUCCUGAUAAACUAAUUGCCUCACAUUGUCACUGCAAAUCGACACCUAUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003929407 ubox
1 23 0.003348262 ubox
1 28 0.014411519 ubox
1 37 0.048270224 ubox
1 39 0.021179067 ubox
1 45 0.009084905 ubox
1 50 0.076946519 ubox
1 55 0.004792329 ubox
1 58 0.039218882 ubox
1 62 0.009379049 ubox
1 65 0.004432519 ubox
2 6 0.009228621 ubox
2 8 0.006748086 ubox
2 12 0.057487248 ubox
2 27 0.014759513 ubox
2 31 0.004243609 ubox
2 33 0.960644933 ubox
2 36 0.048664620 ubox
2 38 0.018375742 ubox
2 43 0.016833965 ubox
2 44 0.010393193 ubox
2 49 0.085406849 ubox
2 54 0.005541100 ubox
2 57 0.045525499 ubox
2 61 0.007406249 ubox
3 7 0.007286059 ubox
3 11 0.057554710 ubox
3 20 0.003333912 ubox
3 32 0.963875536 ubox
3 42 0.020448475 ubox
3 48 0.085403615 ubox
4 22 0.029422607 ubox
4 30 0.023295700 ubox
4 31 0.916481274 ubox
4 40 0.005027397 ubox
4 41 0.020259661 ubox
4 47 0.079211800 ubox
4 53 0.003228492 ubox
4 63 0.003313919 ubox
5 21 0.033576112 ubox
5 29 0.029126438 ubox
5 39 0.005951142 ubox
5 56 0.111738340 ubox
6 20 0.033890995 ubox
6 32 0.048011675 ubox
6 42 0.007025436 ubox
6 55 0.121530986 ubox
7 19 0.029485516 ubox
7 22 0.151200664 ubox
7 26 0.097396214 ubox
7 30 0.897896247 ubox
7 31 0.036054150 ubox
7 33 0.013861174 ubox
7 38 0.027390953 ubox
7 41 0.004257989 ubox
7 46 0.022969290 ubox
7 49 0.007408743 ubox
7 53 0.027799620 ubox
7 54 0.119209649 ubox
7 57 0.031980156 ubox
7 59 0.004086440 ubox
8 21 0.157436876 ubox
8 24 0.025379080 ubox
8 25 0.095721039 ubox
8 29 0.946518405 ubox
8 32 0.012879459 ubox
8 37 0.026553444 ubox
8 45 0.019717353 ubox
8 48 0.005800665 ubox
8 51 0.015220319 ubox
8 52 0.092524375 ubox
8 56 0.031892725 ubox
8 58 0.003415761 ubox
9 20 0.159355797 ubox
9 23 0.028731215 ubox
9 24 0.087855356 ubox
9 28 0.953611750 ubox
9 42 0.009489625 ubox
9 48 0.007967308 ubox
9 50 0.017611594 ubox
9 51 0.089930534 ubox
9 55 0.030501739 ubox
9 62 0.006522817 ubox
10 16 0.025574903 ubox
10 19 0.160575574 ubox
10 22 0.031014047 ubox
10 27 0.954249984 ubox
10 35 0.020545454 ubox
10 41 0.009574483 ubox
10 47 0.010727980 ubox
10 61 0.006942845 ubox
11 15 0.025726856 ubox
11 18 0.159235921 ubox
11 26 0.951605226 ubox
11 33 0.030611795 ubox
11 34 0.015588006 ubox
11 40 0.007797279 ubox
11 43 0.014111585 ubox
11 46 0.011507611 ubox
11 49 0.121671621 ubox
11 60 0.006902511 ubox
12 32 0.033661451 ubox
12 42 0.014350354 ubox
12 48 0.121704419 ubox
13 21 0.028258366 ubox
13 24 0.356279998 ubox
13 25 0.165711877 ubox
13 51 0.010614984 ubox
13 52 0.003862626 ubox
14 20 0.024196802 ubox
14 21 0.869616603 ubox
14 23 0.291761416 ubox
14 24 0.118783878 ubox
14 50 0.010619070 ubox
14 51 0.003986222 ubox
14 56 0.003223223 ubox
15 20 0.883659766 ubox
15 55 0.003386372 ubox
16 56 0.004076587 ubox
17 55 0.004235096 ubox
19 28 0.005142999 ubox
19 32 0.011345079 ubox
19 37 0.019656034 ubox
19 39 0.003934896 ubox
19 42 0.003311879 ubox
19 45 0.131285997 ubox
19 50 0.003190687 ubox
19 55 0.013992786 ubox
19 65 0.005665627 ubox
20 27 0.005211219 ubox
20 31 0.018544710 ubox
20 36 0.021577821 ubox
20 38 0.004202804 ubox
20 41 0.004919022 ubox
20 44 0.137660076 ubox
20 49 0.003394422 ubox
20 54 0.017736207 ubox
20 64 0.007209087 ubox
21 30 0.019070537 ubox
21 35 0.020640919 ubox
21 40 0.005060219 ubox
21 43 0.137642329 ubox
21 53 0.017727357 ubox
21 63 0.007360842 ubox
22 28 0.003985048 ubox
22 29 0.018533509 ubox
22 32 0.011545978 ubox
22 39 0.004817583 ubox
22 42 0.137344075 ubox
22 52 0.017436310 ubox
22 62 0.007350439 ubox
23 27 0.004412047 ubox
23 31 0.013917933 ubox
23 41 0.135481900 ubox
23 61 0.007053993 ubox
24 30 0.013215358 ubox
24 31 0.013135632 ubox
24 40 0.122994711 ubox
24 41 0.006745332 ubox
25 30 0.011155142 ubox
25 40 0.008096387 ubox
25 43 0.023458976 ubox
26 42 0.024684803 ubox
27 42 0.024422736 ubox
27 62 0.005049941 ubox
27 65 0.013207887 ubox
28 41 0.032110466 ubox
28 61 0.005239885 ubox
28 64 0.015497322 ubox
29 40 0.034016478 ubox
29 43 0.004351170 ubox
29 53 0.009645786 ubox
29 63 0.015851089 ubox
30 39 0.032076998 ubox
30 42 0.004448845 ubox
30 51 0.056777858 ubox
30 52 0.008506200 ubox
30 62 0.015454086 ubox
31 37 0.027874528 ubox
31 39 0.058672794 ubox
31 45 0.018249241 ubox
31 50 0.070022219 ubox
31 51 0.006414516 ubox
31 55 0.003565152 ubox
31 58 0.015024259 ubox
32 36 0.029477795 ubox
32 38 0.062866092 ubox
32 41 0.003362603 ubox
32 43 0.024175024 ubox
32 44 0.020312428 ubox
32 49 0.072261201 ubox
32 54 0.003754599 ubox
32 57 0.016564947 ubox
33 42 0.030263247 ubox
33 48 0.072093517 ubox
35 56 0.172014234 ubox
36 42 0.038493439 ubox
36 48 0.010403568 ubox
36 55 0.185431806 ubox
37 41 0.031645996 ubox
37 43 0.040999705 ubox
37 47 0.009929297 ubox
38 42 0.042043671 ubox
38 48 0.024325378 ubox
39 47 0.023171673 ubox
39 53 0.050010208 ubox
39 63 0.061952095 ubox
40 51 0.277320310 ubox
40 52 0.045603351 ubox
40 56 0.029806535 ubox
40 62 0.065782560 ubox
41 48 0.004040624 ubox
41 50 0.311488398 ubox
41 51 0.036978865 ubox
41 55 0.032997376 ubox
41 58 0.809208475 ubox
41 62 0.006691714 ubox
41 65 0.003450399 ubox
42 47 0.004347641 ubox
42 49 0.317324331 ubox
42 53 0.007507094 ubox
42 54 0.034436132 ubox
42 57 0.912469993 ubox
42 59 0.010751323 ubox
42 61 0.003514481 ubox
42 63 0.005908586 ubox
42 64 0.003649056 ubox
43 48 0.296868625 ubox
43 52 0.010702462 ubox
43 56 0.912590178 ubox
43 58 0.009724069 ubox
43 62 0.006078953 ubox
44 55 0.911878667 ubox
47 55 0.017709249 ubox
47 58 0.033336093 ubox
48 54 0.061008236 ubox
48 57 0.037498495 ubox
50 64 0.003553740 ubox
51 63 0.003619440 ubox
51 64 0.021998864 ubox
52 63 0.024550641 ubox
53 62 0.024468900 ubox
55 64 0.018207807 ubox
56 63 0.017533077 ubox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
showpage
end
%%EOF
