%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM104A)
} def

/sequence { (\
CUCUUCCCGUGGGCGGGGUUACCAGUCGGUGCGGUUGGGAUGGUGCCACUGCGCAGCCGCGAGAGGGCGGUACCACGGCGGCAGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005320168 ubox
1 13 0.028668537 ubox
1 16 0.005411614 ubox
1 17 0.077874013 ubox
1 18 0.122981947 ubox
1 25 0.023698495 ubox
1 39 0.029303957 ubox
1 84 0.038955083 ubox
2 11 0.004818243 ubox
2 12 0.028985130 ubox
2 13 0.015106374 ubox
2 15 0.004720513 ubox
2 16 0.077815477 ubox
2 17 0.123299313 ubox
2 18 0.021969269 ubox
2 24 0.032540206 ubox
2 38 0.029412584 ubox
2 39 0.005484698 ubox
2 40 0.006948386 ubox
2 81 0.007279987 ubox
2 83 0.039374763 ubox
2 87 0.009531481 ubox
3 11 0.029311490 ubox
3 12 0.020198418 ubox
3 13 0.004247657 ubox
3 15 0.079996896 ubox
3 16 0.124289546 ubox
3 17 0.023469121 ubox
3 18 0.048139596 ubox
3 25 0.018901356 ubox
3 37 0.029513078 ubox
3 38 0.006832270 ubox
3 39 0.007411269 ubox
3 80 0.009686538 ubox
3 81 0.040781956 ubox
3 84 0.030293347 ubox
3 86 0.010098592 ubox
4 11 0.019905846 ubox
4 12 0.004132349 ubox
4 13 0.008647714 ubox
4 15 0.121965955 ubox
4 16 0.022463420 ubox
4 17 0.032470868 ubox
4 18 0.040167063 ubox
4 24 0.025602750 ubox
4 37 0.006761606 ubox
4 38 0.007263402 ubox
4 80 0.040557725 ubox
4 81 0.014928205 ubox
4 83 0.030581008 ubox
4 84 0.005095507 ubox
5 11 0.003524179 ubox
5 12 0.009386040 ubox
5 13 0.085904527 ubox
5 15 0.020747758 ubox
5 16 0.031286706 ubox
5 17 0.014381317 ubox
5 18 0.716362512 ubox
5 24 0.006144710 ubox
5 37 0.006284830 ubox
5 40 0.005695222 ubox
5 80 0.016007945 ubox
5 81 0.044502156 ubox
5 83 0.003863206 ubox
6 11 0.009584584 ubox
6 12 0.091000977 ubox
6 13 0.115603522 ubox
6 15 0.032485227 ubox
6 16 0.014833840 ubox
6 17 0.975593422 ubox
6 18 0.103326823 ubox
6 34 0.029121317 ubox
6 39 0.006073038 ubox
6 78 0.005167490 ubox
6 80 0.052489871 ubox
6 81 0.006877468 ubox
7 11 0.090397739 ubox
7 12 0.115285498 ubox
7 13 0.050285913 ubox
7 15 0.013734621 ubox
7 16 0.976952803 ubox
7 17 0.102985374 ubox
7 18 0.013114812 ubox
7 33 0.028972090 ubox
7 34 0.011433713 ubox
7 38 0.006057173 ubox
7 77 0.003699534 ubox
7 78 0.077843762 ubox
7 80 0.004917504 ubox
8 12 0.050031219 ubox
8 15 0.977115719 ubox
8 16 0.101735211 ubox
8 17 0.013184151 ubox
8 31 0.028640995 ubox
8 33 0.011871971 ubox
8 37 0.006034885 ubox
8 77 0.078983873 ubox
9 14 0.951967130 ubox
9 22 0.008199369 ubox
9 30 0.027179229 ubox
9 32 0.012249639 ubox
9 36 0.005432970 ubox
9 76 0.079094572 ubox
10 21 0.008208612 ubox
10 24 0.021591610 ubox
10 29 0.026356182 ubox
10 31 0.011579860 ubox
10 33 0.003735169 ubox
10 75 0.079075947 ubox
11 20 0.008112248 ubox
11 23 0.023954305 ubox
11 30 0.006189645 ubox
11 32 0.004256684 ubox
11 74 0.079046740 ubox
12 19 0.007547989 ubox
12 22 0.023934583 ubox
12 23 0.006460716 ubox
12 27 0.045670180 ubox
12 73 0.071810611 ubox
13 19 0.004354195 ubox
13 22 0.006521238 ubox
13 26 0.067180939 ubox
13 30 0.004354019 ubox
13 52 0.032539658 ubox
13 54 0.014132598 ubox
14 18 0.004611781 ubox
14 25 0.068477076 ubox
14 28 0.014439866 ubox
14 29 0.004349905 ubox
14 51 0.032571141 ubox
14 53 0.014148575 ubox
15 23 0.052075267 ubox
15 27 0.014513823 ubox
15 50 0.032545389 ubox
15 52 0.014099937 ubox
16 22 0.052111604 ubox
16 23 0.080808884 ubox
16 26 0.007061007 ubox
16 27 0.004861805 ubox
16 49 0.032535667 ubox
17 22 0.081530422 ubox
17 23 0.010459285 ubox
17 26 0.004825114 ubox
17 47 0.032529212 ubox
17 50 0.013324312 ubox
18 22 0.010506925 ubox
18 46 0.032556771 ubox
18 49 0.013362839 ubox
18 85 0.019697308 ubox
19 25 0.003320829 ubox
19 45 0.023715186 ubox
19 48 0.012867675 ubox
19 84 0.019705922 ubox
20 24 0.012683632 ubox
20 45 0.024862553 ubox
20 83 0.018632391 ubox
21 30 0.005551241 ubox
21 44 0.033777460 ubox
22 29 0.006007917 ubox
22 38 0.008422129 ubox
22 43 0.034330197 ubox
22 81 0.020045496 ubox
23 28 0.006080504 ubox
23 37 0.008447883 ubox
23 42 0.034307702 ubox
23 51 0.024401388 ubox
23 80 0.019989262 ubox
24 36 0.008461887 ubox
24 41 0.032047884 ubox
24 50 0.024706195 ubox
25 35 0.008002580 ubox
25 41 0.011417435 ubox
25 49 0.024744568 ubox
25 79 0.020153020 ubox
25 88 0.981302462 ubox
26 34 0.008190380 ubox
26 38 0.016414474 ubox
26 39 0.015830224 ubox
26 40 0.019534912 ubox
26 48 0.024615468 ubox
26 78 0.020159093 ubox
26 87 0.993254561 ubox
27 33 0.008660080 ubox
27 37 0.017757159 ubox
27 38 0.020645352 ubox
27 39 0.019971981 ubox
27 77 0.020164304 ubox
27 86 0.995721605 ubox
28 32 0.008113670 ubox
28 36 0.017113618 ubox
28 47 0.025276597 ubox
28 76 0.019987285 ubox
28 85 0.995399532 ubox
29 35 0.014110799 ubox
29 46 0.025284223 ubox
29 54 0.074249587 ubox
29 85 0.005138709 ubox
30 34 0.004097840 ubox
30 45 0.025232662 ubox
30 53 0.074300213 ubox
30 83 0.994296169 ubox
30 84 0.004185919 ubox
31 44 0.025229958 ubox
31 52 0.074528287 ubox
31 82 0.995741808 ubox
32 43 0.025275712 ubox
32 51 0.074554078 ubox
32 80 0.007605818 ubox
32 81 0.995329141 ubox
33 50 0.074496518 ubox
33 79 0.008420966 ubox
34 41 0.024262318 ubox
34 49 0.074531192 ubox
34 79 0.995432436 ubox
35 40 0.023000442 ubox
35 48 0.053073743 ubox
35 78 0.995052856 ubox
36 48 0.051928908 ubox
36 75 0.030552281 ubox
36 77 0.991327769 ubox
37 47 0.073556284 ubox
37 74 0.034218950 ubox
37 76 0.989344330 ubox
38 46 0.073491239 ubox
38 47 0.012133012 ubox
38 73 0.034124461 ubox
38 74 0.960145453 ubox
39 46 0.012423853 ubox
39 73 0.960668604 ubox
40 71 0.073090867 ubox
41 55 0.016756736 ubox
41 70 0.071866250 ubox
41 72 0.938682954 ubox
41 75 0.235121048 ubox
41 86 0.019740930 ubox
42 54 0.013823657 ubox
42 71 0.946929809 ubox
42 74 0.238483109 ubox
42 85 0.032030499 ubox
43 52 0.004252964 ubox
43 54 0.110829113 ubox
43 68 0.054655323 ubox
43 73 0.238519807 ubox
44 51 0.004175785 ubox
44 53 0.111619380 ubox
44 55 0.016898635 ubox
44 67 0.051419126 ubox
44 69 0.956381503 ubox
44 72 0.237613469 ubox
44 83 0.032264218 ubox
45 52 0.112057310 ubox
45 54 0.020985507 ubox
45 68 0.959252501 ubox
45 71 0.234881529 ubox
45 82 0.032400814 ubox
46 51 0.111558095 ubox
46 53 0.020958374 ubox
46 66 0.063818342 ubox
46 67 0.958710890 ubox
46 70 0.234859538 ubox
46 81 0.032401504 ubox
47 65 0.072387747 ubox
47 66 0.957616012 ubox
47 69 0.234468394 ubox
47 80 0.032393414 ubox
49 63 0.611154477 ubox
49 65 0.606388403 ubox
49 66 0.124411037 ubox
49 67 0.155306878 ubox
49 78 0.032367595 ubox
50 55 0.003339958 ubox
50 61 0.177655423 ubox
50 62 0.595009297 ubox
50 64 0.602710644 ubox
50 65 0.119578024 ubox
50 66 0.134372885 ubox
50 77 0.032310119 ubox
51 57 0.006949369 ubox
51 60 0.315630621 ubox
51 68 0.012465516 ubox
51 76 0.031952026 ubox
52 56 0.006940412 ubox
52 59 0.315880751 ubox
52 61 0.932249818 ubox
52 67 0.012399829 ubox
52 69 0.005313960 ubox
52 86 0.024108042 ubox
53 58 0.300759216 ubox
53 60 0.936094980 ubox
53 68 0.012197012 ubox
53 85 0.024787029 ubox
54 59 0.934766950 ubox
54 67 0.012141984 ubox
54 84 0.024754337 ubox
56 68 0.040013432 ubox
56 71 0.140636291 ubox
56 82 0.027326269 ubox
57 66 0.018145824 ubox
57 67 0.039954760 ubox
57 70 0.144038928 ubox
57 81 0.027363857 ubox
58 65 0.018471345 ubox
58 66 0.039860947 ubox
58 69 0.144096319 ubox
58 80 0.027363475 ubox
59 68 0.144219707 ubox
59 79 0.027360354 ubox
60 67 0.144192783 ubox
60 77 0.005082494 ubox
60 78 0.026880901 ubox
61 76 0.007159444 ubox
65 74 0.026479903 ubox
66 73 0.026504343 ubox
66 74 0.006458669 ubox
67 73 0.006451115 ubox
78 85 0.011166048 ubox
79 84 0.011716811 ubox
79 86 0.026730410 ubox
80 85 0.026994139 ubox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
27 86 0.9500000 lbox
28 85 0.9500000 lbox
30 83 0.9500000 lbox
31 82 0.9500000 lbox
32 81 0.9500000 lbox
34 79 0.9500000 lbox
35 78 0.9500000 lbox
36 77 0.9500000 lbox
37 76 0.9500000 lbox
38 74 0.9500000 lbox
39 73 0.9500000 lbox
41 72 0.9500000 lbox
42 71 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
