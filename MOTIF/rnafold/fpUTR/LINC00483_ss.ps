%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCACUGAACCUCCUGCUCCAGCCUCUGCCUCCUCCAUUUUGAUGUCUAGAAUCAGGGGAUCCAGGAUCAUCACCAAGGUCAUUUUCCCAGACAGAUGUGCUGAGGCUGUAGAAAGUGCUUUUUAUUUGGUUGGGAGCUUGUGCAUAAAUGCGAGAGGGGCUGCACAUCUGACGGACUAGAGGUGACUC\
) } def
/len { sequence length } bind def

/coor [
[88.51348114 341.11322021]
[73.86312103 336.27890015]
[64.16983032 324.27709961]
[62.52671432 308.93746948]
[69.45807648 295.15487671]
[82.75215149 287.32730103]
[83.23787689 272.33517456]
[83.72360992 257.34304810]
[84.20933533 242.35090637]
[84.69506073 227.35876465]
[71.42558289 220.54800415]
[62.39194489 208.60218811]
[59.42863083 193.85838318]
[63.17591858 179.23039246]
[72.94243622 167.63288879]
[86.83203125 161.40066528]
[87.31776428 146.40853882]
[87.80348969 131.41639709]
[74.24206543 107.09722900]
[84.44306946 87.85731506]
[77.01329803 74.82663727]
[69.58352661 61.79596329]
[62.15375519 48.76528549]
[54.72398758 35.73461151]
[47.18895340 22.76451874]
[39.54915237 9.85586166]
[31.90934944 -3.05279469]
[24.26954651 -15.96145153]
[15.12207413 -27.84941864]
[4.60169935 -38.54155350]
[-5.91867542 -49.23368454]
[-16.43904877 -59.92581940]
[-26.95942497 -70.61795044]
[-42.53346634 -70.91275787]
[-53.05031204 -81.90596771]
[-52.67328262 -96.75162506]
[-63.19365692 -107.44375610]
[-73.71402740 -118.13588715]
[-84.23440552 -128.82801819]
[-94.92653656 -139.34840393]
[-105.78762817 -149.69425964]
[-116.64871216 -160.04011536]
[-128.55584717 -156.18064880]
[-140.90168762 -157.74655151]
[-151.34626770 -164.37905884]
[-157.93632507 -174.76502991]
[-159.47059631 -186.89645386]
[-155.71829224 -198.45864868]
[-166.23866272 -209.15077209]
[-176.75903320 -219.84291077]
[-187.27941895 -230.53504944]
[-197.79978943 -241.22717285]
[-197.94049072 -226.22784424]
[-207.58558655 -214.73992920]
[-222.33418274 -212.00517273]
[-235.45675659 -219.27140808]
[-240.96569824 -233.22315979]
[-236.34738159 -247.49449158]
[-223.70906067 -255.57365417]
[-208.81895447 -253.77505493]
[-218.06239319 -265.58856201]
[-227.30581665 -277.40206909]
[-236.54924011 -289.21557617]
[-245.79266357 -301.02908325]
[-258.13406372 -298.93978882]
[-270.12161255 -302.28207397]
[-279.49221802 -310.36111450]
[-284.50408936 -321.59405518]
[-284.26025391 -333.81967163]
[-278.86856079 -344.71435547]
[-287.72460938 -356.82098389]
[-296.58062744 -368.92761230]
[-305.43667603 -381.03424072]
[-320.95263672 -380.84933472]
[-333.59451294 -389.84722900]
[-338.50125122 -404.56808472]
[-333.78610229 -419.35144043]
[-321.26214600 -428.51275635]
[-305.74505615 -428.52932739]
[-293.20153809 -419.39480591]
[-288.45477295 -404.62161255]
[-293.33001709 -389.89028931]
[-284.47399902 -377.78366089]
[-275.61795044 -365.67700195]
[-266.76193237 -353.57037354]
[-249.13543701 -354.45495605]
[-234.37051392 -344.50299072]
[-228.47349548 -327.53573608]
[-233.97915649 -310.27252197]
[-224.73573303 -298.45901489]
[-215.49229431 -286.64550781]
[-206.24887085 -274.83200073]
[-197.00544739 -263.01846313]
[-187.10765076 -251.74755859]
[-176.58728027 -241.05541992]
[-166.06690979 -230.36328125]
[-155.54652405 -219.67115784]
[-145.02615356 -208.97901917]
[-127.71500397 -212.41409302]
[-111.66130829 -204.71192932]
[-103.36267090 -188.78096008]
[-106.30285645 -170.90119934]
[-95.44177246 -160.55534363]
[-84.58068085 -150.20948792]
[-79.85582733 -149.42927551]
[-75.57548523 -145.66366577]
[-73.54227448 -139.34840393]
[-63.02189636 -128.65626526]
[-52.50152206 -117.96412659]
[-41.98114777 -107.27199554]
[-27.13133430 -107.40857697]
[-16.30986595 -96.71510315]
[-16.26729012 -81.13832855]
[-5.74691629 -70.44618988]
[4.77345848 -59.75405884]
[15.29383278 -49.06192780]
[25.81420708 -38.36979294]
[22.15122223 -52.91566849]
[23.91155434 -67.81201935]
[30.86413193 -81.10343170]
[42.09630203 -91.04518127]
[56.13365173 -96.33222961]
[71.13352203 -96.27056122]
[85.12692261 -90.86827087]
[96.27697754 -80.83451080]
[103.12003326 -67.48638153]
[104.75782776 -52.57606125]
[100.97536469 -38.06079483]
[92.26916504 -25.84596252]
[79.78207397 -17.53498077]
[65.15322876 -14.21880817]
[50.30293655 -16.33275414]
[37.17820358 -23.60125351]
[44.81800461 -10.69259739]
[52.45780945 2.21605945]
[60.09761047 15.12471581]
[66.21865082 19.28568077]
[67.75466156 28.30484009]
[75.18443298 41.33551788]
[82.61420441 54.36619186]
[90.04397583 67.39686584]
[97.47373962 80.42754364]
[118.14494324 80.38871002]
[133.65747070 101.70880890]
[147.53878784 107.39291382]
[161.42010498 113.07701111]
[175.30142212 118.76110840]
[189.18273926 124.44521332]
[203.06405640 130.12931824]
[199.84394836 115.47902679]
[209.16049194 103.72308350]
[224.15899658 103.51097107]
[233.80424500 114.99875641]
[230.99972534 129.73423767]
[217.80804443 136.87579346]
[231.18415833 143.66400146]
[245.49679565 137.36457825]
[260.49554443 141.78854370]
[269.09848022 154.84701538]
[267.24353027 170.37419128]
[255.80656433 181.03860474]
[240.18775940 181.80485535]
[227.76185608 172.31114197]
[224.39595032 157.04010010]
[211.01985168 150.25189209]
[197.37995911 144.01063538]
[183.49864197 138.32652283]
[169.61732483 132.64242554]
[155.73600769 126.95832825]
[141.85469055 121.27423096]
[127.97336578 115.59012604]
[121.67893219 119.66812897]
[135.03671265 126.49232483]
[135.80575562 141.47259521]
[123.21704102 149.62882996]
[109.85913086 142.80488586]
[109.09005737 127.82412720]
[102.79562378 131.90213013]
[102.30989075 146.89425659]
[101.82416534 161.88639832]
[115.28121948 169.00460815]
[124.27655029 181.20997620]
[127.06911469 196.04985046]
[123.15765381 210.57092285]
[113.36970520 221.90695190]
[99.68719482 227.84449768]
[99.20146942 242.83662415]
[98.71574402 257.82876587]
[98.23001099 272.82089233]
[97.74428558 287.81301880]
[110.50379944 296.48474121]
[116.52848053 310.68707275]
[113.89588165 325.88815308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[16 180]
[17 179]
[18 178]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 136]
[26 135]
[27 134]
[28 133]
[29 117]
[30 116]
[31 115]
[32 114]
[33 113]
[36 110]
[37 109]
[38 108]
[39 107]
[40 104]
[41 103]
[42 102]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[70 85]
[71 84]
[72 83]
[73 82]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[149 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
