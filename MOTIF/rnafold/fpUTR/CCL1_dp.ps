%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL1)
} def

/sequence { (\
ACAGUGGUGAGCUCUUAGCUUCACCAGGCUCAUCAAAGCUGCUCCAGGAAGGCCCAAGCCAGACCAGAAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 41 0.501274898 ubox
3 30 0.078631976 ubox
3 40 0.502692394 ubox
3 43 0.077201550 ubox
4 24 0.011221323 ubox
4 29 0.087172486 ubox
4 39 0.502154507 ubox
4 42 0.083588599 ubox
4 59 0.005297161 ubox
4 64 0.044132112 ubox
4 72 0.046523140 ubox
5 23 0.011258201 ubox
5 26 0.757003431 ubox
5 28 0.068827944 ubox
5 35 0.324719479 ubox
5 38 0.405792694 ubox
5 41 0.072468165 ubox
5 46 0.011836668 ubox
5 58 0.004250001 ubox
5 61 0.004778724 ubox
5 63 0.039089277 ubox
5 66 0.031962385 ubox
5 71 0.041479965 ubox
6 22 0.011220321 ubox
6 25 0.851248517 ubox
6 34 0.520259891 ubox
6 40 0.010778917 ubox
6 45 0.012947824 ubox
6 60 0.004425388 ubox
6 65 0.035134968 ubox
7 21 0.006776903 ubox
7 24 0.851502548 ubox
7 33 0.521205442 ubox
7 39 0.010634142 ubox
7 42 0.003446585 ubox
7 44 0.012390152 ubox
7 59 0.004339046 ubox
7 64 0.035051679 ubox
8 23 0.851214907 ubox
8 32 0.521963292 ubox
8 35 0.023980681 ubox
8 38 0.009669273 ubox
8 41 0.003381276 ubox
8 58 0.004071930 ubox
8 61 0.006845721 ubox
8 63 0.033427337 ubox
9 21 0.101291943 ubox
9 22 0.845418940 ubox
9 31 0.522209920 ubox
9 34 0.023880325 ubox
9 44 0.023598371 ubox
9 60 0.010264187 ubox
10 20 0.600528175 ubox
10 21 0.601657711 ubox
10 30 0.522124451 ubox
10 33 0.023614955 ubox
10 40 0.012252534 ubox
10 43 0.024224343 ubox
11 19 0.844609882 ubox
11 20 0.106386488 ubox
11 29 0.522169998 ubox
11 39 0.012579106 ubox
11 42 0.024307361 ubox
11 53 0.003570419 ubox
11 59 0.021687825 ubox
12 18 0.848693494 ubox
12 27 0.018669104 ubox
12 28 0.520479728 ubox
12 38 0.012578236 ubox
12 41 0.024284219 ubox
12 52 0.003548240 ubox
12 58 0.021730633 ubox
13 17 0.764578630 ubox
13 26 0.025116224 ubox
13 27 0.389862633 ubox
13 28 0.035778846 ubox
13 37 0.012169150 ubox
13 57 0.020986579 ubox
14 27 0.321351379 ubox
14 28 0.007129028 ubox
14 38 0.023010273 ubox
15 26 0.307435518 ubox
15 27 0.014948624 ubox
15 36 0.005313896 ubox
15 37 0.022970015 ubox
16 26 0.035986671 ubox
16 27 0.005745091 ubox
16 35 0.005588863 ubox
16 36 0.022721202 ubox
17 30 0.035737719 ubox
17 40 0.006020675 ubox
18 29 0.037004954 ubox
18 39 0.006080253 ubox
18 53 0.012038601 ubox
19 27 0.025673281 ubox
19 28 0.037124689 ubox
19 38 0.006080377 ubox
19 51 0.018905070 ubox
19 52 0.010944296 ubox
20 26 0.027081490 ubox
20 27 0.036809064 ubox
20 37 0.006019958 ubox
20 50 0.019621093 ubox
20 51 0.009575706 ubox
21 26 0.030815054 ubox
21 36 0.005471043 ubox
21 49 0.020124634 ubox
21 50 0.007964165 ubox
22 27 0.011181011 ubox
22 48 0.020531260 ubox
24 48 0.011333138 ubox
25 41 0.012554669 ubox
25 47 0.011413072 ubox
26 40 0.028294690 ubox
26 43 0.028717294 ubox
27 34 0.035615315 ubox
27 39 0.025093334 ubox
27 40 0.660923935 ubox
27 42 0.035685335 ubox
27 43 0.183894702 ubox
27 44 0.044001162 ubox
27 45 0.084963560 ubox
27 54 0.077115447 ubox
27 55 0.011968082 ubox
27 60 0.293581132 ubox
27 65 0.111760429 ubox
28 33 0.024274165 ubox
28 39 0.716734590 ubox
28 42 0.201746970 ubox
28 43 0.006192078 ubox
28 44 0.083530255 ubox
28 53 0.077478025 ubox
28 54 0.010715621 ubox
28 59 0.293871544 ubox
28 64 0.111590553 ubox
29 38 0.717938753 ubox
29 41 0.202034499 ubox
29 47 0.005279649 ubox
29 48 0.003727843 ubox
29 51 0.003458766 ubox
29 52 0.077418810 ubox
29 58 0.293835325 ubox
29 62 0.066685370 ubox
29 67 0.036052997 ubox
29 70 0.036703505 ubox
30 37 0.683596889 ubox
30 46 0.005188898 ubox
30 47 0.003361808 ubox
30 48 0.003663356 ubox
30 49 0.010581981 ubox
30 50 0.004359061 ubox
30 51 0.060945880 ubox
30 52 0.012671315 ubox
30 57 0.282958563 ubox
30 61 0.063254728 ubox
30 63 0.078640649 ubox
30 66 0.035656256 ubox
30 68 0.026119884 ubox
30 69 0.033514118 ubox
30 71 0.124053824 ubox
31 41 0.080077305 ubox
31 47 0.005910905 ubox
31 48 0.012899641 ubox
31 51 0.047591410 ubox
31 62 0.078747590 ubox
31 67 0.029626143 ubox
31 70 0.136228630 ubox
32 40 0.075921954 ubox
33 48 0.019181830 ubox
33 49 0.066882804 ubox
33 52 0.064172027 ubox
33 63 0.052128633 ubox
33 68 0.144781373 ubox
33 71 0.021281906 ubox
34 41 0.027801466 ubox
34 47 0.021486708 ubox
34 48 0.068138006 ubox
34 51 0.069000882 ubox
34 62 0.053050406 ubox
34 67 0.147720324 ubox
34 70 0.023238245 ubox
35 40 0.025619931 ubox
37 43 0.024190493 ubox
38 42 0.024718963 ubox
38 53 0.144396681 ubox
38 59 0.099574616 ubox
39 47 0.241378718 ubox
39 48 0.118714218 ubox
39 51 0.040680225 ubox
39 52 0.144225119 ubox
39 58 0.099769622 ubox
39 62 0.174093617 ubox
39 67 0.076300988 ubox
39 70 0.069276919 ubox
40 46 0.243310118 ubox
40 47 0.116223595 ubox
40 50 0.039654126 ubox
40 51 0.142120548 ubox
40 56 0.096142732 ubox
40 57 0.087083980 ubox
40 61 0.174585029 ubox
40 66 0.077585224 ubox
40 69 0.064200437 ubox
41 45 0.240836946 ubox
41 53 0.059234293 ubox
41 55 0.108157393 ubox
41 59 0.185225228 ubox
41 60 0.126993921 ubox
41 65 0.077863279 ubox
42 48 0.102844677 ubox
42 51 0.017723646 ubox
42 52 0.059111176 ubox
42 58 0.221519959 ubox
42 62 0.030337474 ubox
42 67 0.156250310 ubox
42 70 0.385797038 ubox
43 47 0.092988633 ubox
43 49 0.094890134 ubox
43 50 0.019603657 ubox
43 51 0.053279896 ubox
43 52 0.007488285 ubox
43 57 0.216833893 ubox
43 61 0.030141990 ubox
43 63 0.074286975 ubox
43 66 0.154590057 ubox
43 68 0.345224998 ubox
43 69 0.348420172 ubox
43 71 0.109959336 ubox
44 48 0.097040894 ubox
44 51 0.021978820 ubox
44 52 0.142950493 ubox
44 62 0.075564346 ubox
44 67 0.389687386 ubox
44 70 0.119305442 ubox
45 51 0.143048621 ubox
47 54 0.132757961 ubox
47 55 0.174122679 ubox
47 60 0.030868949 ubox
47 65 0.812620888 ubox
48 53 0.132674875 ubox
48 54 0.173872706 ubox
48 59 0.030701759 ubox
48 64 0.811999240 ubox
51 60 0.915190498 ubox
51 65 0.011459408 ubox
52 59 0.916867086 ubox
52 64 0.011392418 ubox
53 58 0.913896986 ubox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
