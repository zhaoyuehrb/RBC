%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGUCCCACGUGGUGGGGACGCGGGACCCGUACAGCGGCCUCCGCCGCACCGGGACAGCAGCCGCCGCCGCUGCCGCCGUCCUCCCCUGUCUACCCGGAGCUGUCUCGAGCUGAGCCCCCUACCGGGCCGGAUCCCGAGUAUUUUUUUUCCCAUUGUUUUUAAAUUUUAGAUAAAGCCUAGCC\
) } def
/len { sequence length } bind def

/coor [
[430.53442383 166.31344604]
[424.59719849 157.16697693]
[409.77017212 154.89556885]
[394.94314575 152.62414551]
[380.11611938 150.35273743]
[370.90802002 162.06069946]
[356.98330688 167.62467957]
[342.04443359 165.45735168]
[330.11788940 156.04173279]
[324.46871948 141.82786560]
[309.64169312 139.55644226]
[294.81466675 137.28503418]
[281.06250000 143.00584412]
[268.59310913 133.26803589]
[253.76609802 130.99662781]
[246.66273499 133.09614563]
[238.70867920 128.55958557]
[223.92213440 126.03807831]
[209.13558960 123.51656342]
[194.34904480 120.99504852]
[179.56250000 118.47354126]
[164.77593994 115.95202637]
[149.98939514 113.43051147]
[135.18208313 111.03395844]
[120.35506439 108.76254272]
[105.52803802 106.49112701]
[106.46112061 120.10592651]
[97.18576813 133.59341431]
[78.69657135 141.11187744]
[63.83330154 143.13255310]
[48.97002792 145.15322876]
[34.10675430 147.17388916]
[28.87503815 157.87838745]
[19.21844864 164.65052795]
[7.61065435 165.89721680]
[-3.04247713 161.42304993]
[-10.13030624 152.45024109]
[-25.05334663 153.96775818]
[-39.97638702 155.48529053]
[-54.89942551 157.00280762]
[-69.82246399 158.52033997]
[-82.79833984 168.54823303]
[-97.86593628 162.07525635]
[-99.52501678 145.76025391]
[-86.06884766 136.38668823]
[-71.33998871 143.59729004]
[-56.41695023 142.07977295]
[-41.49391174 140.56224060]
[-26.57087135 139.04472351]
[-11.64783096 137.52719116]
[-0.97562265 122.67319489]
[17.47825241 120.27398682]
[32.08608246 132.31062317]
[46.94935608 130.28994751]
[61.81262970 128.26928711]
[76.67590332 126.24861145]
[80.68058014 111.79238129]
[84.68491364 97.33744049]
[72.98004150 87.95682526]
[61.27517319 78.57620239]
[49.57030106 69.19558716]
[33.96297455 66.60292053]
[28.87027740 52.60600281]
[17.16540527 43.22538376]
[0.88225865 41.27829742]
[-5.32347345 26.09867287]
[4.93213463 13.30201244]
[21.09899330 16.05241966]
[26.54602242 31.52051353]
[38.25089645 40.90113068]
[53.02101135 42.82283401]
[58.95091629 57.49071503]
[70.65579224 66.87133026]
[82.36066437 76.25195312]
[94.06552887 85.63256836]
[107.79945374 91.66410065]
[122.62648010 93.93551636]
[137.45350647 96.20693970]
[146.43246460 94.41098022]
[152.51091003 98.64396667]
[167.29745483 101.16548157]
[182.08399963 103.68698883]
[196.87055969 106.20850372]
[211.65710449 108.73001862]
[226.44364929 111.25153351]
[241.23019409 113.77304840]
[256.03750610 116.16959381]
[270.86453247 118.44100952]
[285.67721558 112.88266754]
[297.08605957 122.45800781]
[311.91308594 124.72942352]
[326.74011230 127.00083923]
[336.38534546 115.12998962]
[350.58361816 109.71653748]
[365.48617554 112.12075806]
[377.10665894 121.59810638]
[382.38754272 135.52571106]
[397.21456909 137.79711914]
[412.04159546 140.06854248]
[426.86862183 142.33995056]
[445.27981567 134.16598511]
[459.85501099 146.85305786]
[474.75027466 148.62240601]
[489.64556885 150.39175415]
[504.54083252 152.16110229]
[525.00469971 131.58583069]
[557.73699951 141.21971130]
[570.72735596 133.71971130]
[583.71771240 126.21970367]
[596.70812988 118.71970367]
[600.89196777 100.25988770]
[616.95336914 90.86139679]
[634.48492432 96.07505798]
[647.21459961 88.14059448]
[659.94427490 80.20613098]
[665.58728027 72.99478912]
[672.95660400 72.24726868]
[685.81848145 64.52893829]
[698.68029785 56.81060410]
[711.54217529 49.09227371]
[715.13055420 33.70075226]
[728.59533691 25.42574883]
[743.94805908 29.17667770]
[752.08026123 42.72817993]
[748.16723633 58.04038620]
[734.53045654 66.02883911]
[719.26049805 61.95412827]
[706.39862061 69.67246246]
[693.53680420 77.39079285]
[680.67492676 85.10912323]
[667.87872314 92.93579865]
[655.14904785 100.87025452]
[642.41937256 108.80471802]
[642.30682373 120.23870087]
[636.62127686 130.29762268]
[626.67895508 136.41696167]
[614.89752197 136.97256470]
[604.20812988 131.71008301]
[591.21771240 139.21008301]
[578.22735596 146.71008301]
[565.23699951 154.21008301]
[563.85150146 161.58100891]
[578.84735107 161.22706604]
[593.84320068 160.87312317]
[608.83898926 160.51916504]
[623.43414307 157.05776978]
[637.06683350 163.31480408]
[643.95831299 176.63800049]
[641.18737793 191.37983704]
[629.92858887 201.29147339]
[614.95446777 202.17147827]
[602.61230469 193.64691162]
[588.76837158 187.87223816]
[574.92449951 182.09754944]
[561.08062744 176.32286072]
[559.69519043 183.69378662]
[569.07580566 195.39866638]
[578.45642090 207.10353088]
[587.83703613 218.80841064]
[597.21765137 230.51327515]
[606.59826660 242.21815491]
[621.93054199 240.50802612]
[635.74328613 247.37911987]
[643.62890625 260.63885498]
[643.07110596 276.05615234]
[634.24786377 288.71133423]
[619.97467041 294.56625366]
[604.80609131 291.75256348]
[593.58227539 281.16815186]
[589.88476562 266.19042969]
[594.89343262 251.59877014]
[585.51281738 239.89389038]
[576.13214111 228.18902588]
[566.75152588 216.48414612]
[557.37091064 204.77928162]
[547.99029541 193.07440186]
[534.42565918 196.23548889]
[521.48852539 193.96997070]
[511.14404297 187.23968506]
[504.72622681 177.63725281]
[502.77148438 167.05639648]
[487.87622070 165.28703308]
[472.98092651 163.51768494]
[458.08566284 161.74833679]
[450.63769531 168.78306580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 100]
[3 99]
[4 98]
[5 97]
[10 92]
[11 91]
[12 90]
[14 88]
[15 87]
[17 86]
[18 85]
[19 84]
[20 83]
[21 82]
[22 81]
[23 80]
[24 78]
[25 77]
[26 76]
[29 56]
[30 55]
[31 54]
[32 53]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[58 75]
[59 74]
[60 73]
[61 72]
[63 70]
[64 69]
[102 184]
[103 183]
[104 182]
[105 181]
[107 141]
[108 140]
[109 139]
[110 138]
[113 133]
[114 132]
[115 131]
[117 130]
[118 129]
[119 128]
[120 127]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
