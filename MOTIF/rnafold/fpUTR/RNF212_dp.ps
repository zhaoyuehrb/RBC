%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNF212)
} def

/sequence { (\
GCAGAGCUGCCCGCCUUCGGGCCCUGCGCGGGGAGGCUGGUCCCAACCUUGCGUGGGCUUCGCGUGGGCCCGGCCUCGCCGCUGCGGUCGCCCGCCUGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.166983632 ubox
1 10 0.911348111 ubox
1 14 0.006599184 ubox
1 27 0.167259749 ubox
1 85 0.004278913 ubox
1 95 0.005261841 ubox
1 100 0.026947129 ubox
2 6 0.166052046 ubox
2 9 0.914165165 ubox
2 13 0.006798804 ubox
2 26 0.167384674 ubox
2 84 0.004283993 ubox
2 94 0.005240877 ubox
2 98 0.075023362 ubox
2 99 0.021169227 ubox
3 8 0.823581467 ubox
3 16 0.021097360 ubox
3 17 0.003903672 ubox
3 25 0.167131104 ubox
3 83 0.004030890 ubox
3 97 0.077106473 ubox
4 15 0.022601508 ubox
4 16 0.004257978 ubox
4 17 0.007671615 ubox
4 18 0.003235549 ubox
4 24 0.166285957 ubox
4 89 0.003383641 ubox
4 96 0.077162087 ubox
5 16 0.009083244 ubox
5 25 0.012602043 ubox
6 14 0.033109243 ubox
6 15 0.007467370 ubox
6 22 0.021715299 ubox
6 24 0.014838782 ubox
6 27 0.050237567 ubox
6 91 0.005098870 ubox
6 95 0.055516789 ubox
6 100 0.011146383 ubox
7 13 0.033698112 ubox
7 21 0.017072049 ubox
7 26 0.050275735 ubox
7 90 0.005105493 ubox
7 94 0.054920575 ubox
7 99 0.011190415 ubox
8 20 0.008143524 ubox
8 98 0.010830252 ubox
9 18 0.003998741 ubox
9 22 0.182988590 ubox
9 91 0.003751086 ubox
9 95 0.003619239 ubox
9 97 0.007248515 ubox
9 100 0.071647273 ubox
10 20 0.003425702 ubox
10 21 0.183810340 ubox
10 90 0.003713870 ubox
10 94 0.003321885 ubox
10 99 0.071533415 ubox
11 19 0.003416778 ubox
11 20 0.184385934 ubox
11 98 0.070482472 ubox
11 99 0.079555580 ubox
12 19 0.184404985 ubox
12 98 0.081072383 ubox
13 18 0.172536606 ubox
13 22 0.005268772 ubox
13 95 0.038776055 ubox
13 97 0.074542741 ubox
13 100 0.968075394 ubox
14 21 0.005281016 ubox
14 94 0.035485699 ubox
14 99 0.975125621 ubox
15 20 0.005279368 ubox
15 98 0.973972854 ubox
15 99 0.021724066 ubox
16 98 0.023665586 ubox
17 98 0.003256928 ubox
18 94 0.968400061 ubox
19 93 0.982723304 ubox
19 97 0.003376788 ubox
20 92 0.982779557 ubox
20 96 0.003389427 ubox
21 91 0.982777222 ubox
21 95 0.003387711 ubox
22 90 0.981458157 ubox
22 94 0.003382610 ubox
23 86 0.004249368 ubox
23 87 0.180118190 ubox
24 86 0.178510804 ubox
24 87 0.963541704 ubox
25 84 0.005837834 ubox
25 86 0.966420172 ubox
26 83 0.006160953 ubox
26 85 0.984132676 ubox
27 84 0.983738588 ubox
28 82 0.978007903 ubox
28 83 0.206032241 ubox
29 81 0.999899472 ubox
30 80 0.999945907 ubox
31 79 0.999804597 ubox
31 80 0.007341843 ubox
32 77 0.005710941 ubox
32 79 0.008956736 ubox
33 77 0.999694778 ubox
34 76 0.999844509 ubox
35 75 0.999988139 ubox
36 74 0.999995381 ubox
37 73 0.999989301 ubox
38 72 0.999140280 ubox
39 70 0.073718180 ubox
39 71 0.997229015 ubox
40 69 0.103349697 ubox
40 70 0.993595926 ubox
41 68 0.092392365 ubox
42 57 0.003379782 ubox
42 67 0.092044724 ubox
42 68 0.994041633 ubox
43 56 0.003497931 ubox
43 66 0.091360521 ubox
43 67 0.995240388 ubox
43 68 0.012950206 ubox
44 55 0.003512842 ubox
44 66 0.994692726 ubox
44 67 0.012715774 ubox
45 50 0.011622185 ubox
45 54 0.003206204 ubox
45 60 0.011980315 ubox
45 65 0.838837238 ubox
46 54 0.004813886 ubox
46 59 0.023836075 ubox
46 65 0.191620357 ubox
47 53 0.005073417 ubox
47 56 0.052179138 ubox
47 57 0.041781175 ubox
47 64 0.263286917 ubox
47 67 0.018271749 ubox
47 68 0.014153775 ubox
48 55 0.052360810 ubox
48 56 0.042430524 ubox
48 57 0.006979814 ubox
48 66 0.021216044 ubox
48 67 0.014254347 ubox
48 68 0.016493050 ubox
49 55 0.041918518 ubox
49 56 0.006887863 ubox
49 66 0.010891082 ubox
49 67 0.016863937 ubox
50 55 0.005745923 ubox
50 62 0.009899132 ubox
50 64 0.609466790 ubox
50 66 0.033693859 ubox
51 58 0.420298013 ubox
51 61 0.005077014 ubox
51 63 0.666430123 ubox
51 65 0.495508585 ubox
52 57 0.420397609 ubox
52 62 0.666603634 ubox
52 64 0.609696499 ubox
53 61 0.663450655 ubox
53 63 0.611412920 ubox
54 62 0.611143066 ubox
54 64 0.003700289 ubox
55 61 0.609923996 ubox
55 63 0.003999482 ubox
55 65 0.004287004 ubox
56 60 0.395398933 ubox
57 63 0.047393467 ubox
57 65 0.008392161 ubox
58 62 0.047141297 ubox
58 64 0.011009746 ubox
62 69 0.003286489 ubox
63 68 0.003292045 ubox
81 100 0.007525218 ubox
82 99 0.008729209 ubox
83 98 0.012135023 ubox
84 91 0.003874443 ubox
84 95 0.174115650 ubox
84 100 0.004824579 ubox
85 90 0.003884255 ubox
85 94 0.174684174 ubox
85 98 0.004284357 ubox
85 99 0.004753896 ubox
86 92 0.006190413 ubox
86 93 0.174963831 ubox
86 96 0.010543813 ubox
86 97 0.003368651 ubox
87 91 0.007389530 ubox
87 92 0.173646891 ubox
87 95 0.010580376 ubox
87 96 0.003357320 ubox
87 100 0.003743648 ubox
88 94 0.010318503 ubox
88 99 0.003863880 ubox
89 98 0.003990017 ubox
90 100 0.024438411 ubox
91 99 0.024525217 ubox
92 98 0.024386081 ubox
92 99 0.005724504 ubox
93 98 0.006150757 ubox
94 100 0.003762444 ubox
95 99 0.003981675 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
13 100 0.9500000 lbox
14 99 0.9500000 lbox
15 98 0.9500000 lbox
18 94 0.9500000 lbox
19 93 0.9500000 lbox
20 92 0.9500000 lbox
21 91 0.9500000 lbox
22 90 0.9500000 lbox
24 87 0.9500000 lbox
25 86 0.9500000 lbox
26 85 0.9500000 lbox
27 84 0.9500000 lbox
28 82 0.9500000 lbox
29 81 0.9500000 lbox
30 80 0.9500000 lbox
31 79 0.9500000 lbox
33 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 74 0.9500000 lbox
37 73 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
42 68 0.9500000 lbox
43 67 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
