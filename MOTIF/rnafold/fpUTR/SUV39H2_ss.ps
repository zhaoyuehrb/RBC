%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAGCCCCGGCCCCCAAGUCCCGCGCGGGCCGGCCAGGGGCGGGGCGUCGGGCCAGCUGAGCUAUCCCGUCAGACCGCGCCAGUUUGAAUGAAAGCUCUACAAG\
) } def
/len { sequence length } bind def

/coor [
[111.06085968 166.28157043]
[107.84044647 151.63134766]
[111.62317657 137.11614990]
[121.58421326 125.90108490]
[135.55346680 120.43137360]
[121.40042114 115.46234894]
[107.24736786 110.49331665]
[92.88927460 106.15221405]
[78.35398102 102.44747162]
[63.81868362 98.74272156]
[49.28338623 95.03797150]
[34.74808884 91.33322906]
[20.21279335 87.62847900]
[5.62467909 84.13750458]
[-9.01311111 80.86106110]
[-23.65090179 77.58460999]
[-38.28869247 74.30816650]
[-44.95153427 75.97937775]
[-50.55717850 74.19120789]
[-53.67739868 70.38590240]
[-68.09767151 66.25604248]
[-82.51794434 62.12618637]
[-96.93821716 57.99633026]
[-111.35848999 53.86647415]
[-125.06086731 61.27475739]
[-139.62625122 56.88107300]
[-146.60446167 43.77229691]
[-161.02473450 39.64244080]
[-174.72166443 47.52722549]
[-189.96029663 43.33680725]
[-197.69982910 29.55728722]
[-193.34852600 14.36380863]
[-179.48796082 6.77039480]
[-164.34132385 11.28208160]
[-156.89488220 25.22216797]
[-142.47460938 29.35202408]
[-129.61499023 21.92465210]
[-114.93195343 25.90749168]
[-107.22863770 39.44620132]
[-92.80836487 43.57605743]
[-78.38808441 47.70591354]
[-63.96781540 51.83576965]
[-49.54754257 55.96562576]
[-35.01224518 59.67037582]
[-20.37445450 62.94681931]
[-5.73666477 66.22326660]
[8.90112591 69.49971008]
[16.23121643 67.86363983]
[23.91754150 73.09317780]
[38.45283890 76.79792786]
[52.98813629 80.50267792]
[67.52342987 84.20742798]
[82.05873108 87.91217041]
[96.59402466 91.61692047]
[100.30411530 90.03000641]
[104.71102905 90.16987610]
[108.98835754 92.31356049]
[112.21640015 96.34027100]
[126.36944580 101.30929565]
[140.52249146 106.27832794]
[155.29034424 108.90714264]
[170.28872681 109.12734222]
[185.28710938 109.34753418]
[200.28549194 109.56773376]
[215.28387451 109.78793335]
[229.19615173 102.25405121]
[241.80845642 110.17734528]
[256.80685425 110.39754486]
[265.39929199 99.90293884]
[278.29309082 96.37440491]
[290.66458130 100.89727783]
[298.02047729 111.58781433]
[313.00592041 112.24821472]
[327.99136353 112.90861511]
[342.97683716 113.56901550]
[357.96228027 114.22941589]
[372.94775391 114.88982391]
[383.38299561 103.24337769]
[398.87026978 101.08051300]
[412.09698486 109.42247009]
[416.81787109 124.33043671]
[410.80386353 138.76531982]
[396.89459229 145.91140747]
[381.65762329 142.39454651]
[372.28735352 129.87527466]
[357.30187988 129.21487427]
[342.31643677 128.55447388]
[327.33096313 127.89407349]
[312.34552002 127.23367310]
[297.36007690 126.57326508]
[285.53659058 138.43231201]
[268.45733643 138.14157104]
[256.58663940 125.39592743]
[241.58827209 125.17573547]
[228.74877930 132.72537231]
[215.06367493 124.78631592]
[200.06529236 124.56611633]
[185.06690979 124.34591675]
[170.06852722 124.12572479]
[155.07014465 123.90552521]
[166.29264832 133.85818481]
[171.77252197 147.82138062]
[170.31484985 162.75039673]
[162.23747253 175.38986206]
[149.30172729 182.98368835]
[134.32829285 183.87600708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 60]
[6 59]
[7 58]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 47]
[15 46]
[16 45]
[17 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[27 36]
[28 35]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[67 94]
[68 93]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
