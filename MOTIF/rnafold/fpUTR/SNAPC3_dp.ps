%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNAPC3)
} def

/sequence { (\
CGCUCGCCGGCCGGGCGCCCCAAGCAACUACAACUUCCAUCACGCUCUGCGAGGCCUUGAUCUGCAGGCUUUUGCAGGGGAAGGAGUGGGGCGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.014595151 ubox
1 13 0.060361752 ubox
1 17 0.124997523 ubox
1 93 0.088686765 ubox
2 8 0.014472842 ubox
2 11 0.116260442 ubox
2 12 0.044809470 ubox
2 16 0.831621096 ubox
2 18 0.012381525 ubox
2 25 0.028155707 ubox
2 92 0.083036813 ubox
3 10 0.123633873 ubox
3 14 0.013840046 ubox
3 15 0.862075965 ubox
3 17 0.011379284 ubox
3 24 0.028187784 ubox
3 91 0.082270908 ubox
4 9 0.112182704 ubox
4 10 0.013910648 ubox
4 13 0.009011858 ubox
4 14 0.861527643 ubox
4 15 0.013354275 ubox
4 23 0.028014565 ubox
4 90 0.076507708 ubox
4 94 0.277277898 ubox
5 9 0.020669011 ubox
5 13 0.862096465 ubox
5 14 0.026576413 ubox
5 17 0.082719904 ubox
5 88 0.003487678 ubox
5 89 0.048760169 ubox
5 90 0.014871060 ubox
5 93 0.291200464 ubox
6 12 0.843112245 ubox
6 16 0.377392172 ubox
6 25 0.007056247 ubox
6 92 0.284578954 ubox
7 14 0.068187013 ubox
7 15 0.389981751 ubox
7 24 0.007052653 ubox
7 89 0.003283535 ubox
7 91 0.284570039 ubox
8 13 0.069013288 ubox
8 14 0.389929362 ubox
8 88 0.003364972 ubox
8 89 0.003470465 ubox
8 90 0.284294381 ubox
9 16 0.006857121 ubox
9 19 0.131475656 ubox
9 20 0.011199713 ubox
9 21 0.010789681 ubox
10 16 0.019514023 ubox
10 18 0.131884453 ubox
10 19 0.009421222 ubox
10 20 0.010559829 ubox
10 25 0.232679545 ubox
10 87 0.003710815 ubox
10 92 0.004956710 ubox
11 15 0.019462139 ubox
11 17 0.131869326 ubox
11 24 0.232730108 ubox
11 86 0.003717473 ubox
11 89 0.010887342 ubox
11 91 0.005145958 ubox
12 88 0.010919278 ubox
12 90 0.005153503 ubox
13 19 0.011067825 ubox
13 20 0.040921191 ubox
13 21 0.218939274 ubox
13 29 0.004162392 ubox
14 18 0.010960382 ubox
14 19 0.040872882 ubox
14 20 0.219220821 ubox
14 21 0.112978065 ubox
14 28 0.004435664 ubox
15 19 0.215707706 ubox
15 20 0.111617799 ubox
15 25 0.024411291 ubox
16 24 0.024439648 ubox
16 93 0.286831741 ubox
17 25 0.062918687 ubox
17 92 0.943239666 ubox
18 24 0.063114779 ubox
18 90 0.007357379 ubox
18 91 0.951704937 ubox
19 89 0.007525760 ubox
19 90 0.951894216 ubox
19 91 0.006095001 ubox
20 88 0.007545536 ubox
20 89 0.951702839 ubox
20 90 0.006718157 ubox
21 88 0.950720898 ubox
21 89 0.006602037 ubox
22 36 0.017515866 ubox
22 87 0.850147296 ubox
23 29 0.148235353 ubox
23 35 0.059760312 ubox
23 36 0.003284949 ubox
23 46 0.003749579 ubox
24 28 0.150265896 ubox
24 34 0.067777236 ubox
24 35 0.005296395 ubox
24 45 0.004407726 ubox
24 87 0.083056867 ubox
24 92 0.072131697 ubox
25 44 0.004654565 ubox
25 86 0.104097969 ubox
25 88 0.006837950 ubox
25 91 0.072133349 ubox
26 36 0.005383608 ubox
26 87 0.011089805 ubox
27 35 0.008725577 ubox
27 87 0.067538003 ubox
28 83 0.038815638 ubox
28 84 0.025101544 ubox
28 86 0.091706556 ubox
28 89 0.298862617 ubox
28 90 0.004030351 ubox
28 91 0.003727736 ubox
29 82 0.036852653 ubox
29 83 0.012111285 ubox
29 85 0.072240355 ubox
29 88 0.303273957 ubox
29 89 0.003764769 ubox
29 90 0.003185102 ubox
30 87 0.386602924 ubox
31 86 0.445487841 ubox
31 88 0.031139755 ubox
32 87 0.031429720 ubox
33 87 0.308118515 ubox
34 54 0.004050396 ubox
34 83 0.508592330 ubox
34 84 0.013483093 ubox
34 86 0.414883986 ubox
34 89 0.005016302 ubox
35 53 0.004071917 ubox
35 81 0.012172177 ubox
35 82 0.508768737 ubox
35 83 0.011400011 ubox
35 85 0.316464407 ubox
35 86 0.710744727 ubox
35 88 0.004491611 ubox
35 91 0.005251844 ubox
36 52 0.004085530 ubox
36 80 0.013402441 ubox
36 81 0.508995937 ubox
36 82 0.009500853 ubox
36 84 0.168128741 ubox
36 85 0.791676827 ubox
36 90 0.007989918 ubox
37 51 0.004082786 ubox
37 79 0.015294555 ubox
37 80 0.509033203 ubox
37 83 0.164327816 ubox
37 84 0.840772142 ubox
37 89 0.030654915 ubox
38 49 0.004025723 ubox
38 78 0.016978915 ubox
38 79 0.451618436 ubox
38 83 0.840420937 ubox
38 88 0.030877533 ubox
39 48 0.003945070 ubox
39 61 0.006881357 ubox
39 87 0.029918041 ubox
40 60 0.008026569 ubox
40 78 0.042837583 ubox
40 79 0.006930516 ubox
40 80 0.020460545 ubox
40 81 0.787064127 ubox
40 84 0.021952348 ubox
40 85 0.039221408 ubox
40 86 0.018937222 ubox
41 59 0.008234921 ubox
41 74 0.004649787 ubox
41 77 0.025183078 ubox
41 78 0.031659658 ubox
41 79 0.014065574 ubox
41 80 0.797153088 ubox
41 83 0.028933253 ubox
41 84 0.043110781 ubox
42 58 0.007991578 ubox
42 73 0.004611006 ubox
43 51 0.004714124 ubox
44 50 0.004891907 ubox
44 55 0.008022989 ubox
44 69 0.005115756 ubox
44 75 0.003569550 ubox
45 49 0.004856971 ubox
45 53 0.003433165 ubox
45 54 0.007814608 ubox
45 68 0.005090129 ubox
45 74 0.003568377 ubox
45 77 0.004527501 ubox
45 78 0.157664554 ubox
45 79 0.886657578 ubox
45 80 0.016894554 ubox
46 52 0.003894876 ubox
46 53 0.006727958 ubox
46 76 0.003168390 ubox
46 77 0.017961145 ubox
46 78 0.979125178 ubox
46 79 0.015014929 ubox
47 51 0.003964339 ubox
47 67 0.005579698 ubox
47 77 0.999103741 ubox
47 78 0.014601792 ubox
48 66 0.005609602 ubox
48 76 0.999617384 ubox
48 77 0.007217023 ubox
49 65 0.005612525 ubox
49 75 0.999906804 ubox
50 64 0.005607761 ubox
50 74 0.999694509 ubox
51 62 0.003174327 ubox
51 71 0.010087493 ubox
51 72 0.488145535 ubox
51 73 0.864161047 ubox
52 61 0.003220418 ubox
52 63 0.003834973 ubox
52 70 0.012391781 ubox
52 71 0.697212687 ubox
52 72 0.704327403 ubox
52 73 0.009743677 ubox
53 62 0.004425898 ubox
53 69 0.009795886 ubox
53 70 0.859384641 ubox
53 71 0.498122684 ubox
53 72 0.004386794 ubox
54 61 0.003374446 ubox
54 69 0.994662554 ubox
54 70 0.098325695 ubox
55 68 0.995686945 ubox
55 84 0.005231722 ubox
56 67 0.994413417 ubox
56 68 0.091855036 ubox
56 83 0.005255758 ubox
57 66 0.884461913 ubox
57 67 0.103848924 ubox
57 82 0.005232300 ubox
58 64 0.114082263 ubox
58 66 0.445563998 ubox
58 81 0.004966588 ubox
59 63 0.058925660 ubox
59 65 0.622086936 ubox
61 78 0.006728787 ubox
62 77 0.010646108 ubox
63 76 0.010675225 ubox
64 75 0.010684930 ubox
65 74 0.010684854 ubox
66 73 0.010421454 ubox
67 72 0.008450169 ubox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
17 92 0.9500000 lbox
18 91 0.9500000 lbox
19 90 0.9500000 lbox
20 89 0.9500000 lbox
21 88 0.9500000 lbox
22 87 0.9500000 lbox
35 86 0.9500000 lbox
36 85 0.9500000 lbox
37 84 0.9500000 lbox
38 83 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
47 77 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
50 74 0.9500000 lbox
51 73 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
