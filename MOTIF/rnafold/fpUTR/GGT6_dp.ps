%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GGT6)
} def

/sequence { (\
AGGCUUGGGCAGGGCCUCUGAGACACAGCCGGAAAGGCUGGCAGGCAGGAGGGCUGGGGCGAGCACUGGGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.012986781 ubox
1 67 0.756549018 ubox
2 16 0.015924372 ubox
2 66 0.799802862 ubox
2 67 0.013740163 ubox
2 75 0.114952166 ubox
3 10 0.087914517 ubox
3 15 0.015958578 ubox
3 60 0.085815221 ubox
3 64 0.981546699 ubox
3 66 0.007064157 ubox
3 74 0.115856556 ubox
4 9 0.087736883 ubox
4 12 0.014095771 ubox
4 13 0.005228325 ubox
4 14 0.015953166 ubox
4 59 0.085890790 ubox
4 63 0.982468287 ubox
4 70 0.006184842 ubox
4 72 0.003955816 ubox
4 73 0.115718375 ubox
5 11 0.013547324 ubox
5 12 0.005960039 ubox
5 13 0.015880141 ubox
5 58 0.085760349 ubox
5 62 0.982102450 ubox
5 69 0.007675788 ubox
5 70 0.003331035 ubox
5 71 0.005402407 ubox
5 72 0.114468364 ubox
6 11 0.005279812 ubox
6 12 0.015406413 ubox
6 57 0.085204316 ubox
6 61 0.980654969 ubox
6 62 0.005175679 ubox
6 65 0.010037013 ubox
6 68 0.013311458 ubox
6 69 0.006561140 ubox
6 70 0.005605207 ubox
6 71 0.104448621 ubox
6 72 0.007639128 ubox
7 16 0.003623421 ubox
7 17 0.011459457 ubox
7 60 0.975356769 ubox
7 64 0.010846019 ubox
7 67 0.025472284 ubox
8 15 0.003608922 ubox
8 16 0.014148255 ubox
8 55 0.085642207 ubox
8 66 0.025725676 ubox
8 67 0.008355157 ubox
9 15 0.014184902 ubox
9 54 0.085711437 ubox
9 60 0.098526170 ubox
9 64 0.023296260 ubox
9 66 0.008105872 ubox
10 14 0.014102944 ubox
10 53 0.085664600 ubox
10 56 0.346428686 ubox
10 59 0.101374126 ubox
10 63 0.023172404 ubox
10 68 0.101642724 ubox
11 55 0.328363877 ubox
11 67 0.101705190 ubox
12 54 0.265650117 ubox
12 55 0.897937304 ubox
12 66 0.101066778 ubox
12 67 0.007792735 ubox
12 75 0.010727891 ubox
13 54 0.925027629 ubox
13 55 0.200806647 ubox
13 66 0.009002148 ubox
13 74 0.008949818 ubox
13 75 0.114320167 ubox
14 46 0.005436162 ubox
14 54 0.204276124 ubox
14 60 0.013847869 ubox
14 64 0.014230169 ubox
14 74 0.115918846 ubox
15 45 0.005438462 ubox
15 49 0.012200918 ubox
15 52 0.972933442 ubox
15 53 0.195804292 ubox
15 59 0.013861297 ubox
15 63 0.010859301 ubox
15 72 0.006610294 ubox
15 73 0.116083973 ubox
16 44 0.005427149 ubox
16 48 0.012130496 ubox
16 49 0.003955696 ubox
16 51 0.975038209 ubox
16 52 0.185813471 ubox
16 58 0.013858009 ubox
16 63 0.009029263 ubox
16 71 0.006638503 ubox
16 72 0.116082489 ubox
17 43 0.005236356 ubox
17 47 0.011488510 ubox
17 49 0.244552760 ubox
17 50 0.948737160 ubox
17 51 0.142664132 ubox
17 57 0.013363489 ubox
17 62 0.011760208 ubox
17 70 0.006284588 ubox
17 71 0.115989052 ubox
18 44 0.006122868 ubox
18 45 0.010571061 ubox
18 48 0.556934935 ubox
18 49 0.821549056 ubox
18 51 0.006212395 ubox
18 56 0.011677396 ubox
18 61 0.011732443 ubox
18 69 0.006122648 ubox
18 70 0.116029486 ubox
19 25 0.003658733 ubox
19 27 0.003630079 ubox
19 43 0.006763014 ubox
19 44 0.010675099 ubox
19 47 0.732418335 ubox
19 48 0.663224690 ubox
19 50 0.005776843 ubox
19 68 0.005796141 ubox
19 69 0.115658102 ubox
20 24 0.004846489 ubox
20 26 0.003975863 ubox
20 42 0.007165086 ubox
20 46 0.781488954 ubox
20 60 0.004489320 ubox
21 67 0.115451168 ubox
22 66 0.114948196 ubox
24 40 0.008460634 ubox
25 39 0.005761260 ubox
26 40 0.998404959 ubox
26 56 0.014126202 ubox
27 39 0.999003450 ubox
27 55 0.014244684 ubox
28 38 0.999321827 ubox
28 42 0.030029914 ubox
28 54 0.014255452 ubox
28 60 0.008334066 ubox
28 74 0.010913794 ubox
29 37 0.999328298 ubox
29 41 0.030078929 ubox
29 53 0.014248941 ubox
29 59 0.008261503 ubox
29 73 0.010960078 ubox
30 36 0.999160056 ubox
30 40 0.030078498 ubox
30 52 0.014237574 ubox
30 58 0.008174716 ubox
30 72 0.010950125 ubox
31 39 0.030035519 ubox
31 55 0.004493148 ubox
32 38 0.029975255 ubox
32 54 0.004695754 ubox
35 55 0.003859286 ubox
35 67 0.010911362 ubox
36 54 0.003855960 ubox
36 55 0.005462394 ubox
36 66 0.010986535 ubox
37 46 0.013814412 ubox
37 54 0.005513982 ubox
37 64 0.012163983 ubox
38 45 0.013818268 ubox
38 48 0.006457396 ubox
38 52 0.003748368 ubox
38 53 0.005511366 ubox
38 63 0.012254993 ubox
39 44 0.013458821 ubox
39 47 0.006609367 ubox
39 51 0.003616881 ubox
39 52 0.005397471 ubox
39 62 0.012425535 ubox
40 46 0.006793206 ubox
41 60 0.089107644 ubox
41 64 0.065383429 ubox
42 56 0.012335913 ubox
42 59 0.089051428 ubox
42 63 0.065442287 ubox
42 68 0.003228790 ubox
43 55 0.012023540 ubox
43 67 0.003236193 ubox
44 54 0.010099125 ubox
44 55 0.043226002 ubox
44 66 0.003231136 ubox
44 75 0.007212524 ubox
45 54 0.045754191 ubox
45 60 0.063690387 ubox
45 64 0.004103430 ubox
45 74 0.007310431 ubox
46 53 0.046179961 ubox
46 56 0.082981526 ubox
46 59 0.060610841 ubox
46 63 0.004073554 ubox
46 68 0.003446784 ubox
46 73 0.007307975 ubox
47 55 0.091017417 ubox
47 67 0.003429267 ubox
48 54 0.091176764 ubox
48 55 0.034587168 ubox
48 66 0.003364561 ubox
49 54 0.035899777 ubox
50 67 0.013086444 ubox
51 66 0.013383040 ubox
51 67 0.009110680 ubox
51 75 0.003355652 ubox
52 66 0.009702706 ubox
52 74 0.003369407 ubox
52 75 0.005718444 ubox
53 60 0.015435644 ubox
53 64 0.099491480 ubox
53 74 0.005800500 ubox
54 59 0.015399830 ubox
54 63 0.099663299 ubox
54 69 0.004457082 ubox
54 70 0.006670130 ubox
54 73 0.005774537 ubox
55 61 0.005165461 ubox
55 62 0.098991342 ubox
55 65 0.012432876 ubox
55 68 0.004706889 ubox
55 69 0.007087154 ubox
55 72 0.005603333 ubox
56 60 0.009432255 ubox
56 64 0.015902634 ubox
56 67 0.007100720 ubox
57 66 0.007702195 ubox
57 67 0.008615749 ubox
58 66 0.008877532 ubox
58 67 0.004816941 ubox
58 75 0.005783819 ubox
59 66 0.004937942 ubox
59 74 0.005865347 ubox
60 68 0.003703066 ubox
60 73 0.005871629 ubox
61 67 0.003457615 ubox
63 74 0.066408753 ubox
64 73 0.066564137 ubox
66 72 0.086604830 ubox
66 73 0.140208276 ubox
67 71 0.078276089 ubox
67 72 0.138615469 ubox
68 75 0.653779694 ubox
69 74 0.660632238 ubox
69 75 0.131032580 ubox
70 74 0.130541551 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 64 0.9500000 lbox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
