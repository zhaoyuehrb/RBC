%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLHL6)
} def

/sequence { (\
AAAUCCGCUCAGCUCCUGCAAUGGGGCCUGCCUGACACUUGGGCGCUCCUUCAGUCUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.003461603 ubox
1 51 0.013649215 ubox
2 39 0.003764505 ubox
2 40 0.003202059 ubox
2 50 0.016100840 ubox
2 51 0.020374823 ubox
3 22 0.020089310 ubox
3 39 0.003297598 ubox
3 50 0.020919001 ubox
3 55 0.012056272 ubox
4 21 0.019825876 ubox
4 25 0.005558730 ubox
4 26 0.005124779 ubox
4 35 0.032145353 ubox
4 43 0.004825253 ubox
4 54 0.011363788 ubox
5 23 0.003169606 ubox
5 24 0.017639342 ubox
5 25 0.007853199 ubox
5 26 0.004618462 ubox
5 34 0.034925613 ubox
5 42 0.006735114 ubox
6 18 0.005716988 ubox
6 23 0.018347532 ubox
6 24 0.007954351 ubox
6 25 0.004668012 ubox
6 30 0.005770817 ubox
6 34 0.035694768 ubox
6 41 0.006774133 ubox
6 45 0.198729278 ubox
6 59 0.111754725 ubox
7 13 0.375441768 ubox
7 17 0.004292053 ubox
7 19 0.185063707 ubox
7 22 0.017429297 ubox
7 27 0.020339807 ubox
7 29 0.006173426 ubox
7 31 0.213257002 ubox
7 33 0.035156142 ubox
7 40 0.005045736 ubox
7 44 0.207600638 ubox
7 46 0.149426466 ubox
7 55 0.120592642 ubox
7 58 0.117879912 ubox
8 12 0.373172220 ubox
8 18 0.184581998 ubox
8 24 0.004394076 ubox
8 25 0.015235765 ubox
8 26 0.019386267 ubox
8 30 0.212752175 ubox
8 43 0.207598969 ubox
8 45 0.149224410 ubox
8 54 0.126078564 ubox
9 23 0.003601040 ubox
9 24 0.016960757 ubox
9 25 0.018186136 ubox
9 35 0.013949030 ubox
9 42 0.206377364 ubox
9 53 0.118379711 ubox
10 18 0.070372007 ubox
10 23 0.021916713 ubox
10 24 0.016698481 ubox
10 30 0.116856286 ubox
10 34 0.015167979 ubox
10 41 0.205185771 ubox
11 17 0.076869315 ubox
11 22 0.023071743 ubox
11 29 0.135034707 ubox
11 33 0.015185896 ubox
11 39 0.012499388 ubox
11 40 0.201323572 ubox
11 47 0.007512305 ubox
11 50 0.008915026 ubox
11 51 0.034222902 ubox
11 57 0.264656419 ubox
12 16 0.076184669 ubox
12 19 0.360736693 ubox
12 27 0.477319476 ubox
12 28 0.098322314 ubox
12 31 0.007611487 ubox
12 32 0.007542155 ubox
12 38 0.010859794 ubox
12 39 0.027992834 ubox
12 46 0.007554042 ubox
12 50 0.009255849 ubox
12 55 0.043325693 ubox
12 56 0.280213459 ubox
13 18 0.360939951 ubox
13 26 0.488674631 ubox
13 30 0.008173576 ubox
13 45 0.007371728 ubox
13 54 0.046622695 ubox
14 25 0.487981430 ubox
14 26 0.012242467 ubox
14 35 0.019398851 ubox
14 53 0.037752961 ubox
15 24 0.488381765 ubox
15 25 0.024381703 ubox
15 26 0.008221087 ubox
15 34 0.019560065 ubox
15 43 0.005076786 ubox
16 23 0.488238478 ubox
16 24 0.024440302 ubox
16 25 0.008263544 ubox
16 42 0.005075922 ubox
16 54 0.746304427 ubox
17 23 0.023900536 ubox
17 24 0.008170145 ubox
17 37 0.006459949 ubox
17 41 0.004850825 ubox
17 53 0.751358907 ubox
17 59 0.005906626 ubox
18 22 0.014040390 ubox
18 31 0.019915936 ubox
18 36 0.006690126 ubox
18 40 0.003244545 ubox
18 52 0.751810749 ubox
18 55 0.070311288 ubox
18 58 0.010170764 ubox
19 30 0.019931419 ubox
19 34 0.005784275 ubox
19 54 0.074570943 ubox
20 29 0.019596900 ubox
20 33 0.004916141 ubox
20 51 0.623017218 ubox
21 50 0.599915690 ubox
21 55 0.022630208 ubox
22 34 0.006575993 ubox
22 53 0.032111832 ubox
22 54 0.022989170 ubox
22 59 0.011083542 ubox
23 32 0.006985950 ubox
23 33 0.012465189 ubox
23 47 0.009177116 ubox
23 48 0.013880875 ubox
23 49 0.867324337 ubox
23 50 0.046391381 ubox
23 51 0.030808970 ubox
23 52 0.033760563 ubox
23 58 0.017746152 ubox
24 31 0.006993005 ubox
24 32 0.013131065 ubox
24 33 0.006508078 ubox
24 46 0.010128993 ubox
24 47 0.013161440 ubox
24 48 0.867966929 ubox
24 49 0.050242366 ubox
24 50 0.041775512 ubox
24 51 0.026608130 ubox
24 57 0.017735945 ubox
25 31 0.013132460 ubox
25 32 0.007190286 ubox
25 46 0.013844887 ubox
25 47 0.867487160 ubox
25 48 0.050194677 ubox
25 49 0.049203188 ubox
25 50 0.018645098 ubox
25 56 0.017791310 ubox
26 31 0.007163015 ubox
26 44 0.015673606 ubox
26 46 0.869058532 ubox
26 47 0.023067051 ubox
26 48 0.049301726 ubox
26 49 0.018508141 ubox
26 55 0.017734608 ubox
27 43 0.015723525 ubox
27 45 0.857992100 ubox
27 54 0.017382345 ubox
28 42 0.015701480 ubox
28 43 0.020754651 ubox
28 54 0.014708451 ubox
29 37 0.048840209 ubox
29 41 0.015188270 ubox
29 42 0.011387650 ubox
29 45 0.261340523 ubox
29 53 0.013591537 ubox
29 59 0.007124435 ubox
30 36 0.055015223 ubox
30 40 0.009842540 ubox
30 44 0.938664381 ubox
30 46 0.009209192 ubox
30 52 0.007036456 ubox
30 55 0.005297372 ubox
30 58 0.012853393 ubox
31 42 0.064449198 ubox
31 43 0.942190421 ubox
31 45 0.009184093 ubox
31 54 0.004252143 ubox
32 41 0.068096517 ubox
32 42 0.941954773 ubox
32 43 0.010077990 ubox
32 54 0.074800869 ubox
33 41 0.934704969 ubox
33 42 0.010627032 ubox
33 53 0.075446659 ubox
33 59 0.097792387 ubox
34 40 0.854874496 ubox
34 52 0.075548242 ubox
34 56 0.144607633 ubox
34 58 0.176479157 ubox
35 39 0.731787893 ubox
35 51 0.074567112 ubox
35 55 0.144869602 ubox
35 57 0.174602978 ubox
36 54 0.144362828 ubox
37 55 0.177232758 ubox
38 54 0.181045274 ubox
39 53 0.174724960 ubox
39 54 0.012806279 ubox
40 53 0.041342051 ubox
40 59 0.029851112 ubox
41 47 0.004340327 ubox
41 48 0.006999792 ubox
41 49 0.136305689 ubox
41 50 0.188221279 ubox
41 51 0.044288671 ubox
41 52 0.053076153 ubox
41 57 0.039903440 ubox
41 58 0.051008256 ubox
42 46 0.004501352 ubox
42 47 0.005557181 ubox
42 48 0.136281711 ubox
42 49 0.191332852 ubox
42 50 0.043774638 ubox
42 51 0.050036606 ubox
42 52 0.003726965 ubox
42 56 0.047745248 ubox
42 57 0.047003359 ubox
42 58 0.010466564 ubox
43 47 0.088288095 ubox
43 48 0.188284633 ubox
43 49 0.044242206 ubox
43 50 0.039001877 ubox
43 51 0.003304590 ubox
43 55 0.047947789 ubox
43 56 0.046991551 ubox
43 57 0.009976276 ubox
44 54 0.050538178 ubox
45 55 0.116952832 ubox
45 58 0.005888370 ubox
46 54 0.129090842 ubox
47 53 0.123948326 ubox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
