%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCCAGGUAGUGGCGCCGGUGGAUCCGGAUCGAGGGCAGGAGGCUGAGACCCGCGGGAGCUGGCCCUAAAGCAAGGACCUGAGUGCAAGUAAUUUUUUUGGGAAGUAAUAACAGAAAAUACCAGCAAGGAAGAAGACAGUGAACCCAAAAGAAUUGAAAACAGG\
) } def
/len { sequence length } bind def

/coor [
[-241.09577942 125.24403381]
[-248.06716919 127.96568298]
[-255.48182678 128.07649231]
[-262.40267944 125.61023712]
[-267.97174072 120.92337036]
[-271.51644897 114.64434052]
[-286.51382446 114.36386108]
[-297.84872437 125.04833221]
[-313.05419922 124.55023956]
[-323.17034912 113.67830658]
[-338.16772461 113.39781952]
[-349.50262451 124.08229065]
[-364.70809937 123.58419800]
[-374.82424927 112.71226501]
[-389.82162476 112.43178558]
[-404.81900024 112.15129852]
[-418.76144409 119.62919617]
[-431.34182739 111.65526581]
[-446.33920288 111.37478638]
[-461.33657837 111.09429932]
[-476.33395386 110.81381989]
[-491.33132935 110.53333282]
[-506.32870483 110.25285339]
[-514.90856934 120.66784668]
[-527.73675537 124.17549133]
[-540.05590820 119.70789337]
[-547.43084717 109.11247253]
[-562.42034912 108.55160522]
[-577.41448975 108.13091278]
[-592.41186523 107.85043335]
[-607.40924072 107.56994629]
[-621.35168457 115.04784393]
[-633.93200684 107.07391357]
[-648.92938232 106.79343414]
[-657.50927734 117.20842743]
[-670.33746338 120.71607208]
[-682.65661621 116.24846649]
[-690.03155518 105.65305328]
[-705.02105713 105.09218597]
[-720.01055908 104.53131866]
[-732.70166016 114.34542084]
[-748.25256348 110.40231323]
[-754.73400879 95.72681427]
[-747.17401123 81.57670593]
[-731.37188721 78.80674744]
[-719.44970703 89.54180908]
[-704.46020508 90.10267639]
[-689.47070312 90.66354370]
[-677.66442871 78.71282959]
[-660.53033447 78.98373413]
[-648.64892578 91.79605103]
[-633.65155029 92.07653809]
[-620.78179932 84.57857513]
[-607.12872314 92.57257080]
[-592.13134766 92.85305023]
[-577.13397217 93.13353729]
[-570.35925293 90.10197449]
[-561.85949707 93.56209564]
[-546.86999512 94.12296295]
[-535.06372070 82.17224884]
[-517.92962646 82.44315338]
[-506.04821777 95.25547028]
[-491.05084229 95.53595734]
[-476.05346680 95.81643677]
[-461.05609131 96.09692383]
[-446.05871582 96.37740326]
[-431.06134033 96.65789032]
[-418.19161987 89.15992737]
[-404.53851318 97.15392303]
[-389.54113770 97.43440247]
[-374.54376221 97.71488953]
[-364.02816772 87.22881317]
[-348.81469727 87.29962158]
[-337.88723755 98.40044403]
[-322.88986206 98.68092346]
[-312.37426758 88.19484711]
[-297.16079712 88.26565552]
[-286.23333740 99.36648560]
[-271.23596191 99.64696503]
[-252.94892883 86.62496185]
[-233.03981018 98.50778198]
[-218.08175659 97.38682556]
[-203.12370300 96.26587677]
[-188.16564941 95.14492798]
[-185.04924011 84.45068359]
[-178.79359436 75.20185089]
[-169.98591614 68.29569244]
[-159.46183777 64.40823364]
[-148.22630310 63.92808151]
[-137.35749817 66.91767120]
[-127.90343475 73.10566711]
[-120.78087616 81.91155243]
[-116.68646240 92.50000000]
[-101.68646240 92.50000000]
[-86.68646240 92.50000000]
[-71.68646240 92.50000000]
[-56.68645859 92.50000000]
[-41.68645859 92.50000000]
[-26.68645859 92.50000000]
[-11.68645954 92.50000000]
[3.31354046 92.50000000]
[18.31354141 92.50000000]
[33.31354141 92.50000000]
[48.31354141 92.50000000]
[63.31354141 92.50000000]
[74.07448578 68.48232269]
[99.66579437 55.82552338]
[129.64219666 62.83164978]
[142.49006653 55.09005737]
[149.94474792 40.48321915]
[166.33374023 39.90608597]
[174.79743958 53.95235825]
[166.62911987 68.17243958]
[150.23165894 67.93792725]
[137.38378906 75.67951965]
[139.12098694 82.97555542]
[153.71305847 79.50115204]
[168.30513000 76.02675629]
[182.89724731 72.55258179]
[186.37120056 87.14476013]
[171.77952576 90.61882782]
[157.18745422 94.09322357]
[142.59538269 97.56762695]
[144.33258057 104.86366272]
[159.29063416 105.98461151]
[172.33978271 96.65190887]
[187.73240662 101.17372894]
[193.66059875 116.08131409]
[185.57676697 129.93884277]
[169.68212891 132.11601257]
[158.16969299 120.94267273]
[143.21163940 119.82171631]
[138.75045776 126.36295319]
[133.33302307 131.98246765]
[127.13972473 136.54685974]
[120.36833954 139.95678711]
[113.22776794 142.14881897]
[105.93161011 143.09640503]
[98.69186401 142.80966187]
[91.71273041 141.33399963]
[85.18489838 138.74786377]
[79.28028107 135.15948486]
[74.14754486 130.70285034]
[69.90841675 125.53302002]
[66.65485382 119.82093811]
[64.44723511 113.74792480]
[63.31354141 107.50000000]
[48.31354141 107.50000000]
[33.31354141 107.50000000]
[18.31354141 107.50000000]
[3.31354046 107.50000000]
[-11.68645954 107.50000000]
[-26.68645859 107.50000000]
[-41.68645859 107.50000000]
[-56.68645859 107.50000000]
[-71.68646240 107.50000000]
[-86.68646240 107.50000000]
[-101.68646240 107.50000000]
[-116.68646240 107.50000000]
[-125.52078247 124.52024078]
[-141.67990112 134.69418335]
[-160.68429565 135.29850769]
[-177.31451416 126.24938202]
[-187.04469299 110.10298157]
[-202.00274658 111.22393036]
[-216.96080017 112.34488678]
[-231.91886902 113.46583557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 79]
[7 78]
[10 75]
[11 74]
[14 71]
[15 70]
[16 69]
[18 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[27 59]
[28 58]
[29 56]
[30 55]
[31 54]
[33 52]
[34 51]
[38 48]
[39 47]
[40 46]
[81 167]
[82 166]
[83 165]
[84 164]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[103 149]
[104 148]
[105 147]
[108 115]
[109 114]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
