%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGCCCCGCCUCGGUCCGCCCCUCCGCUCGCUCCCCAAGCCGCCGCGGCGCCGAGCCGGUUUCCCCGCCGGUGUCCGAGAGGCGCCCCCGGCCCGGCCCGGCCCGGCCCGCGCCCUCCGCCCCCGCCUCCCCGGGCCGGCGGCGGUGGGCGAGCUCGCGGGCCCGGCCGCCCCCAGCCCCAGCCCCGCCGGGCCCCGCCCCCCGUCGAGUGC\
) } def
/len { sequence length } bind def

/coor [
[91.08083344 210.91262817]
[83.26919556 222.27407837]
[71.38234711 229.12878418]
[57.76803207 230.18869019]
[52.20542908 244.11914062]
[46.64282608 258.04959106]
[50.42422867 277.85220337]
[34.72451019 289.14260864]
[29.57132912 303.22964478]
[24.41814995 317.31668091]
[24.65502548 334.26898193]
[8.43080807 339.18945312]
[-0.78868777 324.96139526]
[10.33110809 312.16351318]
[15.48428822 298.07644653]
[20.63746834 283.98941040]
[15.51930714 275.14962769]
[16.12276268 264.73300171]
[22.48960686 256.19116211]
[32.71237564 252.48699951]
[38.27497864 238.55654907]
[43.83758163 224.62609863]
[33.52973175 212.17999268]
[30.89071846 196.14137268]
[36.73442841 180.87330627]
[49.55403900 170.57768250]
[65.90921783 168.13896179]
[71.26767731 154.12870789]
[76.62614441 140.11846924]
[81.98460388 126.10823059]
[87.34307098 112.09799194]
[87.12390137 97.09959412]
[81.35834503 83.25190735]
[75.59278870 69.40422058]
[69.82723236 55.55653381]
[63.96066666 41.75134277]
[57.99338913 27.98937988]
[52.02611542 14.22741604]
[46.95547104 9.99237537]
[45.06610107 4.63662338]
[46.09207535 -0.02494106]
[40.52947235 -13.95539188]
[34.96686935 -27.88584137]
[29.40426636 -41.81629181]
[23.84166527 -55.74674225]
[18.27906227 -69.67719269]
[12.71645927 -83.60764313]
[7.15385723 -97.53809357]
[-3.17808390 -108.41242218]
[-16.80596161 -114.67987823]
[-30.43383789 -120.94732666]
[-44.06171417 -127.21478271]
[-57.68959045 -133.48223877]
[-71.31746674 -139.74967957]
[-91.68600464 -130.22236633]
[-112.17743683 -138.78901672]
[-119.51931763 -159.45724487]
[-133.64363098 -164.50735474]
[-147.76794434 -169.55747986]
[-161.89225769 -174.60760498]
[-176.01657104 -179.65773010]
[-190.14088440 -184.70785522]
[-204.31724548 -177.72169495]
[-219.25431824 -182.88496399]
[-226.09020996 -197.13439941]
[-220.76930237 -212.01603699]
[-206.44839478 -218.70089722]
[-191.62384033 -213.22294617]
[-185.09075928 -198.83216858]
[-170.96644592 -193.78204346]
[-156.84213257 -188.73191833]
[-142.71781921 -183.68179321]
[-128.59350586 -178.63168335]
[-114.46919250 -173.58155823]
[-108.96237183 -179.37303162]
[-101.97113800 -183.31375122]
[-94.09923553 -185.04067993]
[-86.03317261 -184.38301086]
[-78.48232269 -181.37875366]
[-72.11653900 -176.27316284]
[-67.50675201 -169.49880981]
[-65.07379913 -161.63900757]
[-65.05001831 -153.37756348]
[-51.42213821 -147.11010742]
[-37.79426193 -140.84265137]
[-24.16638565 -134.57521057]
[-10.53850842 -128.30775452]
[3.08936906 -122.04029846]
[9.83299065 -125.32260895]
[23.32023430 -131.88723755]
[30.06385803 -135.16954041]
[33.53889084 -149.76145935]
[37.01392365 -164.35337830]
[40.48896027 -178.94529724]
[43.96399307 -193.53721619]
[47.43902588 -208.12913513]
[50.91406250 -222.72106934]
[54.38909531 -237.31298828]
[44.46330643 -249.09368896]
[43.39014816 -264.28256226]
[51.37211227 -277.03997803]
[65.17045593 -282.58468628]
[68.64549255 -297.17660522]
[72.12052155 -311.76852417]
[66.03881073 -323.14062500]
[69.23149109 -335.22128296]
[79.46024323 -341.67523193]
[83.14811707 -356.21481323]
[77.05496979 -365.22033691]
[76.92485809 -375.87316895]
[82.55939484 -384.65509033]
[91.89597321 -388.79824829]
[96.00711823 -403.22387695]
[100.11826324 -417.64950562]
[93.60551453 -432.31112671]
[101.13534546 -446.47732544]
[116.93151855 -449.28100586]
[128.87655640 -438.57138062]
[127.80725098 -422.56402588]
[114.54387665 -413.53836060]
[110.43273163 -399.11273193]
[106.32158661 -384.68710327]
[112.38659668 -366.32492065]
[97.68769836 -352.52694702]
[93.99982452 -337.98733521]
[99.67066956 -321.37850952]
[86.71244049 -308.29348755]
[83.23741150 -293.70156860]
[79.76237488 -279.10964966]
[89.58041382 -267.94076538]
[90.95539093 -252.95498657]
[83.15130615 -239.88021851]
[68.98101807 -233.83795166]
[65.50598145 -219.24603271]
[62.03094864 -204.65411377]
[58.55591202 -190.06219482]
[55.08087921 -175.47026062]
[51.60584641 -160.87834167]
[48.13080978 -146.28642273]
[44.65577698 -131.69450378]
[21.08430862 -103.10070038]
[26.64690971 -89.17024994]
[32.20951462 -75.23979950]
[37.77211380 -61.30934525]
[43.33471680 -47.37889481]
[48.89731979 -33.44844437]
[54.45992279 -19.51799393]
[60.02252579 -5.58754349]
[65.78807831 8.26014137]
[71.75535583 22.02210426]
[77.72262573 35.78406906]
[83.26585388 40.66881561]
[83.67491913 49.79098129]
[89.44047546 63.63866806]
[95.20603180 77.48635101]
[100.97158051 91.33403778]
[109.61221313 84.34008789]
[123.42340088 84.60613251]
[137.30116272 94.64615631]
[150.21786499 102.27233887]
[163.13458252 109.89852905]
[176.05128479 117.52471161]
[188.96798706 125.15090179]
[201.94006348 132.68251038]
[214.96682739 140.11915588]
[227.99357605 147.55578613]
[241.02033997 154.99243164]
[254.04708862 162.42907715]
[267.07385254 169.86570740]
[287.20919800 168.86074829]
[296.21862793 185.97169495]
[309.45712280 193.02452087]
[322.07080078 184.35539246]
[337.26977539 182.55264282]
[351.56143188 188.03054810]
[361.66165161 199.53028870]
[365.24945068 214.40934753]
[361.50042725 229.24859619]
[351.27606201 240.63809204]
[336.92581177 245.96063232]
[321.74731445 243.99310303]
[309.22842407 235.18765259]
[302.24591064 221.56770325]
[302.40429688 206.26301575]
[289.16580200 199.21018982]
[279.70285034 203.05595398]
[269.46990967 201.01696777]
[261.89120483 193.52943420]
[259.63720703 182.89247131]
[246.61045837 175.45582581]
[233.58369446 168.01919556]
[220.55694580 160.58255005]
[207.53018188 153.14590454]
[194.50343323 145.70927429]
[187.13833618 145.12319946]
[181.34179688 138.06761169]
[168.42509460 130.44142151]
[155.50839233 122.81523132]
[142.59169006 115.18904877]
[129.67497253 107.56285858]
[122.59456635 110.03625488]
[130.27384949 122.92146301]
[140.03511047 134.31083679]
[136.13464355 148.79484558]
[121.97399902 153.74217224]
[109.90248108 144.83831787]
[110.44810486 129.84718323]
[108.43373108 114.98305511]
[101.35330963 117.45645142]
[95.99485016 131.46669006]
[90.63638306 145.47694397]
[85.27792358 159.48718262]
[79.91945648 173.49742126]
[89.28637695 183.88383484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[6 20]
[8 16]
[9 15]
[10 14]
[27 213]
[28 212]
[29 211]
[30 210]
[31 209]
[32 156]
[33 155]
[34 154]
[35 153]
[36 151]
[37 150]
[38 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
[102 129]
[103 128]
[104 127]
[107 125]
[108 124]
[112 122]
[113 121]
[114 120]
[159 200]
[160 199]
[161 198]
[162 197]
[163 196]
[164 194]
[165 193]
[166 192]
[167 191]
[168 190]
[169 189]
[171 185]
[172 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
