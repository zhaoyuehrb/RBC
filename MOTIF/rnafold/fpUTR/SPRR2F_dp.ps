%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR2F)
} def

/sequence { (\
AAACUCCUGGUACCUAAGCACCGAUCUGCCUUGGAGAACCUGAUUCUGAGACUCCAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 11 0.057700150 ubox
4 10 0.059790556 ubox
4 18 0.016898899 ubox
4 36 0.331172225 ubox
4 60 0.035742810 ubox
4 61 0.012244992 ubox
5 9 0.053893658 ubox
5 17 0.016218117 ubox
5 24 0.163526329 ubox
5 35 0.333186216 ubox
5 37 0.003173051 ubox
5 43 0.009016788 ubox
5 59 0.034972948 ubox
5 60 0.004491481 ubox
5 61 0.003506039 ubox
6 23 0.170998190 ubox
6 33 0.004152272 ubox
6 34 0.333426830 ubox
6 36 0.003205121 ubox
6 42 0.009608027 ubox
6 60 0.003595433 ubox
6 61 0.049902299 ubox
7 18 0.050051424 ubox
7 33 0.333203490 ubox
7 36 0.005507237 ubox
7 57 0.036682319 ubox
7 60 0.050367044 ubox
7 61 0.009563414 ubox
8 16 0.034301911 ubox
8 17 0.049744939 ubox
8 20 0.033540195 ubox
8 23 0.738925874 ubox
8 33 0.003209133 ubox
8 35 0.005538304 ubox
8 56 0.036747759 ubox
8 59 0.049148429 ubox
9 15 0.037743020 ubox
9 19 0.036057077 ubox
9 22 0.924281680 ubox
9 30 0.319568153 ubox
9 31 0.070851758 ubox
9 40 0.013895970 ubox
9 55 0.036743777 ubox
9 58 0.047771323 ubox
10 14 0.037370798 ubox
10 19 0.086257288 ubox
10 21 0.924636809 ubox
10 29 0.319755011 ubox
10 30 0.074474193 ubox
10 39 0.014249905 ubox
10 54 0.036390860 ubox
10 58 0.005674061 ubox
11 18 0.086047985 ubox
11 20 0.915278905 ubox
11 24 0.003348900 ubox
11 28 0.318277477 ubox
11 38 0.013906325 ubox
11 57 0.007401176 ubox
12 27 0.289425545 ubox
13 34 0.020282356 ubox
13 61 0.005841671 ubox
14 33 0.020304803 ubox
14 34 0.043575633 ubox
14 50 0.009438037 ubox
14 60 0.005862858 ubox
15 33 0.043792907 ubox
15 49 0.008999066 ubox
15 59 0.005445939 ubox
16 27 0.006487888 ubox
16 32 0.047347137 ubox
17 27 0.032988847 ubox
17 31 0.047622451 ubox
17 47 0.006380266 ubox
18 26 0.038463632 ubox
18 29 0.099464161 ubox
18 30 0.033995313 ubox
18 46 0.006629696 ubox
19 28 0.105351975 ubox
19 42 0.003488232 ubox
20 27 0.095008176 ubox
20 41 0.003411223 ubox
21 34 0.008362318 ubox
21 61 0.006090199 ubox
22 28 0.004851598 ubox
22 33 0.008401749 ubox
22 42 0.003470175 ubox
22 60 0.005401679 ubox
23 27 0.003643456 ubox
23 32 0.008913639 ubox
23 41 0.003360348 ubox
23 45 0.004494585 ubox
24 31 0.008499395 ubox
24 44 0.004579855 ubox
25 35 0.004219205 ubox
25 37 0.007875752 ubox
25 43 0.004596396 ubox
25 61 0.606829142 ubox
26 34 0.004447552 ubox
26 36 0.008277755 ubox
26 42 0.004593536 ubox
26 60 0.936926666 ubox
26 61 0.014459834 ubox
27 33 0.004340704 ubox
27 35 0.008249088 ubox
27 59 0.938633266 ubox
27 60 0.010140167 ubox
28 58 0.939129494 ubox
29 57 0.911376528 ubox
29 61 0.029676647 ubox
30 50 0.038685671 ubox
30 57 0.198788299 ubox
30 60 0.030357680 ubox
31 49 0.038747179 ubox
31 56 0.197993240 ubox
31 57 0.094974101 ubox
31 59 0.026761914 ubox
32 48 0.038540448 ubox
32 50 0.003223444 ubox
32 56 0.853414988 ubox
33 40 0.003197647 ubox
33 46 0.004607113 ubox
33 47 0.038168684 ubox
33 53 0.003682037 ubox
33 55 0.940475700 ubox
34 39 0.003189693 ubox
34 45 0.004649082 ubox
34 46 0.038313941 ubox
34 52 0.003869954 ubox
34 54 0.940556218 ubox
35 44 0.006092379 ubox
35 45 0.037449884 ubox
35 47 0.033085483 ubox
35 53 0.940149442 ubox
36 40 0.003444445 ubox
36 44 0.029273785 ubox
36 45 0.004928920 ubox
36 46 0.041097892 ubox
36 52 0.938389674 ubox
36 54 0.003269086 ubox
37 44 0.011837535 ubox
37 45 0.044729091 ubox
37 53 0.004191020 ubox
38 44 0.039813894 ubox
39 61 0.331059988 ubox
40 50 0.865876762 ubox
40 57 0.006535612 ubox
40 60 0.335000205 ubox
40 61 0.004631489 ubox
41 48 0.058894767 ubox
41 49 0.863059279 ubox
41 56 0.006662044 ubox
41 59 0.334892889 ubox
41 60 0.004645221 ubox
42 47 0.073035757 ubox
42 54 0.004750944 ubox
42 55 0.006252358 ubox
42 58 0.334292732 ubox
43 53 0.005856959 ubox
44 50 0.005387889 ubox
44 51 0.024377170 ubox
44 57 0.023225774 ubox
44 60 0.004812134 ubox
45 49 0.005012772 ubox
45 50 0.022712527 ubox
45 51 0.051633413 ubox
45 56 0.017017107 ubox
45 59 0.006483973 ubox
45 61 0.008345664 ubox
46 50 0.051612590 ubox
46 57 0.330639041 ubox
46 60 0.013567056 ubox
47 56 0.331464216 ubox
47 59 0.013588034 ubox
48 54 0.037753783 ubox
48 55 0.330313029 ubox
48 58 0.013557132 ubox
49 53 0.038979751 ubox
54 61 0.004391257 ubox
55 60 0.004490929 ubox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
showpage
end
%%EOF
