%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUGUAUGGGUCAUUUUGACCAGUCAUUCCCUCGCUCUGGCAUCCCACAAUUUUUCCGCCUCCCUCCGAAAGCGAUAAUAAUAUUUAGAGGCGUUCGCUGGGGCUGAAUGAGAAUUAGCCCUAGGCGCAGCCUAUCAUUAGGACGGGACAGCAGGGCCACUGUGACAUUUUUAAGAAAGCUGAG\
) } def
/len { sequence length } bind def

/coor [
[149.08106995 548.15869141]
[134.22338867 550.21997070]
[119.25182343 549.29675293]
[104.75997162 545.42559814]
[91.32237244 538.75994873]
[79.47179413 529.56408691]
[69.67807770 518.20257568]
[62.32950592 505.12594604]
[57.71743011 490.85260010]
[56.02470398 475.94839478]
[57.31875992 461.00259399]
[49.20914459 473.62139893]
[41.09953308 486.24020386]
[32.98992157 498.85900879]
[24.88031006 511.47781372]
[21.40353203 528.07141113]
[4.49592590 529.32409668]
[-1.38827968 513.42401123]
[12.26150608 503.36819458]
[20.37111855 490.74938965]
[28.48073006 478.13058472]
[36.59034348 465.51177979]
[44.69995499 452.89297485]
[44.62642670 445.15399170]
[49.81343460 438.25134277]
[51.32287216 423.32748413]
[52.83230972 408.40362549]
[54.34174728 393.47973633]
[55.85118103 378.55587769]
[44.84731293 372.30224609]
[37.00275040 362.31015015]
[33.51410294 350.04641724]
[34.93521500 337.32849121]
[41.08955383 326.05517578]
[51.09130096 317.92297363]
[63.47266006 314.17098999]
[65.48258972 299.30627441]
[67.49252319 284.44152832]
[69.50244904 269.57681274]
[71.51238251 254.71208191]
[73.52231598 239.84735107]
[62.64445114 229.70782471]
[59.78922653 214.93244934]
[66.25738525 201.14781189]
[79.75816345 193.72924805]
[81.76809692 178.86451721]
[83.77803040 163.99978638]
[85.78796387 149.13505554]
[76.48093414 145.42124939]
[68.07658386 139.96412659]
[60.89748001 132.97315979]
[55.21916199 124.71664429]
[51.25956726 115.51149750]
[49.17066956 105.71099854]
[49.03264618 95.69130707]
[50.85078430 85.83699036]
[54.55531311 76.52626038]
[60.00404358 68.11647034]
[66.98784637 60.93039703]
[59.09136581 48.17713928]
[51.19488525 35.42388153]
[43.29840088 22.67062378]
[35.40192032 9.91736698]
[27.50543594 -2.83588982]
[13.21112728 1.93584406]
[-1.79836822 3.28185940]
[-16.71360779 1.12956703]
[-30.73023033 -4.40496254]
[-43.09233475 -13.02325821]
[-53.13325500 -24.26054764]
[-60.31149292 -37.51081848]
[-64.23992920 -52.05949783]
[-64.70671844 -67.12199402]
[-61.68668365 -81.88600922]
[-55.34268951 -95.55533600]
[-46.01686096 -107.39279938]
[-34.21212769 -116.76003265]
[-20.56510735 -123.15186310]
[-5.81176043 -126.22358704]
[9.25227928 -125.80955505]
[23.81462860 -121.93209076]
[37.08995819 -114.80030823]
[48.36234283 -104.79880524]
[57.02388382 -92.46696472]
[62.60747147 -78.46981049]
[64.81198883 -63.56219864]
[63.51855087 -48.54808044]
[58.79690933 -34.23714828]
[50.90169525 -21.40116882]
[40.25869370 -10.73237228]
[48.15517807 2.02088475]
[56.05165863 14.77414131]
[63.94813919 27.52739906]
[71.84461975 40.28065491]
[79.74110413 53.03391266]
[95.06941223 49.08904266]
[110.86985779 50.01918030]
[125.62944794 55.73525620]
[134.96771240 43.99656677]
[144.30598450 32.25788116]
[153.54531860 20.44116974]
[162.68505859 8.54726410]
[171.82481384 -3.34664154]
[180.96456909 -15.24054718]
[190.10430908 -27.13445282]
[199.24406433 -39.02835846]
[208.38380432 -50.92226410]
[217.52355957 -62.81616592]
[226.66331482 -74.71007538]
[223.11296082 -89.93929291]
[230.22845459 -103.86421967]
[244.65008545 -109.90993500]
[259.56838989 -105.22183990]
[267.93939209 -92.01350403]
[265.81057739 -76.52149963]
[254.18710327 -66.06067657]
[238.55722046 -65.57032013]
[229.41746521 -53.67641830]
[220.27770996 -41.78251266]
[211.13796997 -29.88860703]
[201.99821472 -17.99470329]
[192.85847473 -6.10079718]
[183.71871948 5.79310799]
[174.57896423 17.68701363]
[165.43922424 29.58091736]
[163.85327148 36.81552124]
[156.04466248 41.59614944]
[146.70640564 53.33483505]
[137.36813354 65.07352448]
[141.77082825 70.47994995]
[145.39738464 76.43489838]
[148.18037415 82.82771301]
[150.06811523 89.53961945]
[165.04219055 88.65812683]
[180.01626587 87.77664185]
[194.99035645 86.89514923]
[208.38095093 77.42817688]
[223.15963745 84.53610229]
[224.12335205 100.90691376]
[210.28071594 109.69971466]
[195.87184143 101.86922455]
[180.89776611 102.75071716]
[165.92369080 103.63220978]
[150.94961548 104.51369476]
[142.83328247 127.95614624]
[124.64118958 144.82240295]
[100.65268707 151.14498901]
[98.64276123 166.00971985]
[96.63282776 180.87445068]
[94.62289429 195.73918152]
[105.66869354 206.47680664]
[108.24373627 221.48422241]
[101.56708527 234.97074890]
[88.38704681 241.85728455]
[86.37711334 256.72201538]
[84.36717987 271.58673096]
[82.35725403 286.45147705]
[80.34732056 301.31619263]
[78.33738708 316.18093872]
[92.48017883 326.58242798]
[99.38348389 342.62734985]
[97.23326111 359.87185669]
[86.70953369 373.58923340]
[70.77503967 380.06533813]
[69.26560211 394.98919678]
[67.75616455 409.91305542]
[66.24673462 424.83691406]
[64.73729706 439.76077271]
[73.02802277 427.26022339]
[83.63108826 416.65008545]
[96.12610626 408.35101318]
[110.01769257 402.69204712]
[124.75508881 399.89755249]
[139.75399780 400.07830811]
[154.41976929 403.22717285]
[168.17094421 409.21926880]
[180.46232605 417.81701660]
[190.80661011 428.67962646]
[198.79368591 441.37634277]
[204.10687256 455.40380859]
[206.53553772 470.20590210]
[205.98336792 485.19573975]
[202.47227478 499.77902222]
[196.14144897 513.37756348]
[187.24189758 525.45227051]
[176.12646484 535.52435303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[45 150]
[46 149]
[47 148]
[48 147]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[98 129]
[99 128]
[100 127]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
