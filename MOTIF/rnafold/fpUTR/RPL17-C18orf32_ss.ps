%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCCUCCUCAGAUCUCGUUUCUUCGGCUACGAAUCUCGCGAGAAGUCAAGUUCUCAUGAGUUCUCCCAAAAUCCACCGCUCUUCCUCUUUCCCUAAGCAGCCUGAGGUGAUCUGUGAAAAUGGUUCGCUAUUCACUUGACCCGGAGAACCCCACGAAAUAACACUCGUGAAACUGCUCAGGCCAUCAAGGGU\
) } def
/len { sequence length } bind def

/coor [
[-141.63372803 190.57064819]
[-164.49055481 200.30256653]
[-189.25437927 201.99400330]
[-213.18188477 195.47131348]
[-220.78627014 208.40084839]
[-228.39067078 221.33039856]
[-223.21160889 230.68444824]
[-222.39596558 241.26431274]
[-226.02442932 251.14987183]
[-233.37715149 258.57495117]
[-243.07548523 262.24285889]
[-253.34024048 261.55249023]
[-261.56042480 274.09951782]
[-269.78060913 286.64657593]
[-265.09597778 301.56597900]
[-271.14501953 315.98620605]
[-285.07159424 323.09848022]
[-300.29998779 319.54461670]
[-309.63983154 307.00262451]
[-308.68112183 291.39447021]
[-297.87652588 280.08981323]
[-282.32766724 278.42639160]
[-274.10748291 265.87933350]
[-265.88729858 253.33229065]
[-271.26101685 234.61865234]
[-260.99942017 217.71488953]
[-241.32022095 213.72599792]
[-233.71582031 200.79646301]
[-226.11141968 187.86691284]
[-237.73715210 177.29008484]
[-246.88507080 164.50953674]
[-253.14797974 150.09417725]
[-256.24707031 134.68565369]
[-271.24658203 134.56481934]
[-286.24609375 134.44400024]
[-294.86602783 137.50743103]
[-301.48577881 134.19845581]
[-316.48141479 133.83599854]
[-331.47702026 133.47354126]
[-346.47265625 133.11108398]
[-360.45574951 140.51266479]
[-372.99234009 132.47007751]
[-387.98797607 132.10762024]
[-402.98358154 131.74516296]
[-417.97921753 131.38270569]
[-432.97482300 131.02026367]
[-444.24258423 142.10235596]
[-460.04541016 141.88752747]
[-471.00778198 130.50323486]
[-470.62588501 114.70355988]
[-459.12631226 103.86217499]
[-443.33157349 104.41108704]
[-432.61236572 116.02463531]
[-417.61676025 116.38709259]
[-402.62112427 116.74954987]
[-387.62551880 117.11200714]
[-372.62988281 117.47445679]
[-359.71936035 110.04695892]
[-346.11019897 118.11546326]
[-331.11456299 118.47792053]
[-316.11895752 118.84037781]
[-301.12332153 119.20283508]
[-286.12527466 119.44448090]
[-271.12576294 119.56530762]
[-256.12625122 119.68614197]
[-254.94583130 112.25885010]
[-253.02229309 104.98709869]
[-250.37498474 97.94504547]
[-247.03059387 91.20454407]
[-243.02297974 84.83439636]
[-238.39274597 78.89966583]
[-233.18684387 73.46099091]
[-227.45812988 68.57398224]
[-221.26480103 64.28864288]
[-214.66981506 60.64886093]
[-207.74023438 57.69197083]
[-200.54655457 55.44834900]
[-193.16200256 53.94112015]
[-185.66177368 53.18591309]
[-178.12226868 53.19069672]
[-170.62030029 53.95568848]
[-163.23234558 55.47337341]
[-156.03375244 57.72854996]
[-149.09793091 60.69850159]
[-142.49568176 64.35321808]
[-136.29441833 68.65569305]
[-130.55744934 73.56231689]
[-125.34346008 79.02330017]
[-120.70574188 84.98318481]
[-116.69178009 91.38140869]
[-113.34270477 98.15291595]
[-110.69289398 105.22883606]
[-108.76959991 112.53716278]
[-93.85176849 110.96923828]
[-78.93393707 109.40130615]
[-64.01611328 107.83338165]
[-59.08291626 93.75755310]
[-48.48389816 83.17594910]
[-34.28347397 78.22528839]
[-19.28059196 79.93808746]
[-6.45705605 88.02782440]
[1.61508226 100.93526459]
[16.53291130 99.36734009]
[31.45073891 97.79940796]
[46.36856842 96.23148346]
[61.28639603 94.66355896]
[76.20422363 93.09562683]
[91.12205505 91.52770233]
[104.77564240 85.31646729]
[115.75967407 75.10123444]
[126.74370575 64.88599396]
[137.72773743 54.67075348]
[136.00146484 39.36303711]
[143.53184509 26.12874031]
[157.24888611 19.93947220]
[171.80589294 22.97778320]
[182.78993225 12.76254559]
[193.77395630 2.54730821]
[204.75799561 -7.66792965]
[215.74201965 -17.88316727]
[217.75802612 -33.79904938]
[231.53294373 -42.02287674]
[246.49981689 -36.24603271]
[251.17736816 -20.90002060]
[241.97735596 -7.75698423]
[225.95726013 -6.89913750]
[214.97322083 3.31610012]
[203.98919678 13.53133774]
[193.00517273 23.74657631]
[182.02113342 33.96181488]
[183.99702454 48.70066833]
[176.83042908 61.93334961]
[163.08543396 68.48532867]
[147.94297791 65.65478516]
[136.95893860 75.87002563]
[125.97491455 86.08525848]
[114.99088287 96.30049896]
[117.42311859 103.39515686]
[131.61244202 98.53068542]
[143.60420227 89.51969910]
[155.87969971 98.14014435]
[151.47433472 112.47864532]
[136.47691345 112.72000885]
[122.28759766 117.58448029]
[124.71983337 124.67914581]
[139.66098022 126.00653839]
[152.83776855 116.85491943]
[168.16647339 121.58885956]
[173.88824463 136.57688904]
[165.61381531 150.32147217]
[149.69062805 152.27893066]
[138.33358765 140.94769287]
[123.39244080 139.62030029]
[118.87225342 153.92301941]
[131.86262512 161.42301941]
[144.85301208 168.92301941]
[157.84339905 176.42301941]
[170.83377075 183.92301941]
[184.95402527 177.48887634]
[200.15269470 180.61619568]
[210.58557129 192.10246277]
[212.24102783 207.53097534]
[204.48249817 220.96916199]
[190.29328918 227.24975586]
[175.12944031 223.95773315]
[164.82176208 212.35896301]
[163.33377075 196.91340637]
[150.34339905 189.41340637]
[137.35301208 181.91340637]
[124.36263275 174.41340637]
[111.37225342 166.91340637]
[96.55855560 169.27017212]
[82.31317139 164.57240295]
[71.80742645 153.86589050]
[67.38011932 139.53414917]
[70.01686096 124.76771545]
[79.13065338 112.85390472]
[92.68997955 106.44553375]
[77.77214813 108.01345825]
[62.85432434 109.58138275]
[47.93649292 111.14931488]
[33.01866531 112.71723938]
[18.10083771 114.28516388]
[3.18300939 115.85309601]
[-2.02912617 130.15676880]
[-12.89048481 140.73588562]
[-27.20940971 145.53053284]
[-42.12881851 143.64048767]
[-54.69625854 135.49378967]
[-62.44818497 122.75121307]
[-77.36601257 124.31913757]
[-92.28384399 125.88706207]
[-107.20166779 127.45499420]
[-111.29901886 152.02069092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 29]
[5 28]
[6 27]
[12 24]
[13 23]
[14 22]
[33 65]
[34 64]
[35 63]
[37 62]
[38 61]
[39 60]
[40 59]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[93 193]
[94 192]
[95 191]
[96 190]
[102 184]
[103 183]
[104 182]
[105 181]
[106 180]
[107 179]
[108 178]
[109 137]
[110 136]
[111 135]
[112 134]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[145 153]
[146 152]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
