%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUCACUCUGUUGCUGUCUUCACGGAGAGCAGGAGCAGAGGCUUUGAGAAGCCAGUGGGCCUUGGCCUCAGCCCUGCCGGCAGAGGGUCCCCACCAUGCAGCUGAAGUGCCAGGGUGCUUGUGAAGUCUAAGCCCUUGUCUGGCAUUUGUCAGGAAUAUAGGCGCACACUUAAGCGGCCCGGGCGGGUACCGCCGUCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-31.96743393 234.38793945]
[-43.31735229 244.19503784]
[-54.66727066 254.00215149]
[-65.86557007 263.98202515]
[-76.90961456 274.13235474]
[-87.95366669 284.28268433]
[-98.99771118 294.43298340]
[-109.72552490 304.91699219]
[-120.12700653 315.72482300]
[-130.52850342 326.53262329]
[-140.92997742 337.34045410]
[-151.33146667 348.14828491]
[-161.73295593 358.95611572]
[-172.13444519 369.76394653]
[-176.12904358 385.07254028]
[-190.52943420 388.87753296]
[-200.93092346 399.68536377]
[-211.33241272 410.49316406]
[-221.65078735 421.38037109]
[-231.88542175 432.34634399]
[-242.12007141 443.31228638]
[-252.35472107 454.27822876]
[-255.52134705 470.36874390]
[-271.12484741 475.41485596]
[-283.11364746 464.22555542]
[-279.15472412 448.31143188]
[-263.32067871 444.04357910]
[-253.08601379 433.07763672]
[-242.85137939 422.11169434]
[-232.61672974 411.14575195]
[-230.34999084 404.10751343]
[-222.14024353 400.09170532]
[-211.73875427 389.28387451]
[-201.33726501 378.47604370]
[-198.08665466 363.94046021]
[-182.94227600 359.36245728]
[-172.54078674 348.55462646]
[-162.13929749 337.74679565]
[-151.73780823 326.93896484]
[-141.33631897 316.13116455]
[-130.93482971 305.32333374]
[-120.53334808 294.51550293]
[-120.45468140 291.70886230]
[-119.25685883 288.76437378]
[-116.88182831 286.10949707]
[-113.42756653 284.18469238]
[-109.14803314 283.38894653]
[-98.10398102 273.23861694]
[-87.05993652 263.08831787]
[-76.01588440 252.93798828]
[-74.92340088 248.28430176]
[-70.89299011 244.26921082]
[-64.47438049 242.65223694]
[-53.12445831 232.84512329]
[-41.77454376 223.03802490]
[-36.91601944 206.17709351]
[-18.80486488 202.86248779]
[-7.60656691 192.88259888]
[3.59173155 182.90272522]
[14.79002953 172.92283630]
[25.98832893 162.94294739]
[25.65587044 152.72427368]
[31.11983490 143.82392883]
[40.78044891 139.30958557]
[51.54779434 140.89178467]
[63.04666519 131.25976562]
[74.54553986 121.62773132]
[86.04441071 111.99570465]
[86.96332550 97.02388000]
[76.72867584 86.05792999]
[66.49403381 75.09197998]
[51.42158890 70.28241730]
[48.39410400 55.69873810]
[38.15945816 44.73278809]
[27.92481422 33.76683807]
[12.00539303 31.77897835]
[3.75722098 18.01862907]
[9.50758934 3.04155302]
[24.84530830 -1.66311944]
[38.00459290 7.51363420]
[38.89076233 23.53219414]
[49.12540817 34.49814224]
[59.36005402 45.46409225]
[73.70044708 49.48929977]
[77.45998383 64.85733795]
[87.69462585 75.82328796]
[97.92927551 86.78923035]
[112.60940552 89.87042236]
[126.38938141 83.94487000]
[140.16935730 78.01931000]
[149.79057312 65.45973969]
[164.53919983 67.53998566]
[178.31916809 61.61442566]
[192.09915161 55.68886566]
[201.72036743 43.12929916]
[216.46899414 45.20954132]
[230.24896240 39.28398132]
[236.42538452 22.91964149]
[252.21426392 16.21513367]
[267.65768433 22.86849403]
[281.34524536 16.73246574]
[290.77285767 4.02693272]
[305.55163574 5.88091946]
[319.23919678 -0.25511000]
[332.92672729 -6.39113951]
[342.35437012 -19.09667206]
[357.13311768 -17.24268532]
[370.82067871 -23.37871552]
[384.50823975 -29.51474380]
[398.19580078 -35.65077209]
[411.88333130 -41.78680420]
[409.07009888 -56.34127426]
[418.88174438 -72.60774994]
[428.94714355 -83.72924805]
[439.01254272 -94.85074615]
[449.07794189 -105.97224426]
[459.14334106 -117.09375000]
[462.58389282 -125.56070709]
[469.44921875 -128.30703735]
[479.68383789 -139.27299500]
[489.91848755 -150.23893738]
[500.15313721 -161.20489502]
[510.38778687 -172.17083740]
[508.30917358 -187.66966248]
[516.72296143 -200.85079956]
[531.65637207 -205.49053955]
[546.05834961 -199.39811707]
[553.12866211 -185.45019531]
[549.52899170 -170.23255920]
[536.95892334 -160.93051147]
[521.35375977 -161.93620300]
[511.11907959 -150.97024536]
[500.88446045 -140.00430298]
[490.64981079 -129.03834534]
[480.41516113 -118.07239532]
[470.26483154 -107.02835083]
[460.19943237 -95.90685272]
[450.13403320 -84.78534698]
[440.06863403 -73.66384888]
[430.00323486 -62.54234695]
[437.16903687 -49.36466599]
[451.97528076 -51.76792526]
[466.78149414 -54.17118454]
[481.58773804 -56.57444382]
[496.39395142 -58.97770691]
[511.20016479 -61.38096619]
[523.55603027 -72.16358185]
[538.98229980 -66.59912109]
[541.60968018 -50.41182327]
[528.73547363 -40.25379181]
[513.60345459 -46.57474136]
[498.79721069 -44.17147827]
[483.99099731 -41.76821899]
[469.18475342 -39.36495972]
[454.37854004 -36.96170044]
[439.57229614 -34.55843735]
[454.09390259 -30.80035782]
[465.69967651 -21.29739952]
[472.24868774 -7.80257082]
[472.53286743 7.19473696]
[466.49975586 20.92797279]
[455.26232910 30.86376572]
[440.89352417 35.16926193]
[426.04394531 33.05022812]
[413.45291138 24.89756203]
[405.44308472 12.21518421]
[403.49203491 -2.65738893]
[407.95968628 -16.97661400]
[418.01937866 -28.09924889]
[404.33181763 -21.96321869]
[390.64425659 -15.82718945]
[376.95669556 -9.69116020]
[363.26916504 -3.55513072]
[354.82055664 8.71151161]
[339.06277466 7.29641485]
[325.37521362 13.43244457]
[311.68765259 19.56847382]
[303.23907471 31.83511543]
[287.48126221 30.42001915]
[273.79370117 36.55604935]
[270.93536377 49.12309265]
[261.21469116 57.87884140]
[248.03178406 59.45900345]
[236.17453003 53.06396103]
[222.39454651 58.98951721]
[213.75897217 71.12525177]
[198.02470398 69.46884155]
[184.24473572 75.39440155]
[170.46475220 81.31996155]
[161.82917786 93.45569611]
[146.09490967 91.79928589]
[132.31494141 97.72484589]
[118.53496552 103.65039825]
[95.67643738 123.49457550]
[84.17756653 133.12660217]
[72.67869568 142.75863647]
[61.17982101 152.39065552]
[55.13634109 171.61860657]
[35.96821213 174.14125061]
[24.76991463 184.12112427]
[13.57161713 194.10101318]
[2.37331891 204.08090210]
[-8.82497978 214.06079102]
[-10.34459400 226.87226868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 50]
[5 49]
[6 48]
[7 47]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[16 34]
[17 33]
[18 32]
[19 30]
[20 29]
[21 28]
[22 27]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[65 197]
[66 196]
[67 195]
[68 194]
[69 87]
[70 86]
[71 85]
[73 83]
[74 82]
[75 81]
[88 193]
[89 192]
[90 191]
[92 189]
[93 188]
[94 187]
[96 185]
[97 184]
[100 180]
[101 179]
[103 177]
[104 176]
[105 175]
[107 173]
[108 172]
[109 171]
[110 170]
[111 169]
[113 140]
[114 139]
[115 138]
[116 137]
[117 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
