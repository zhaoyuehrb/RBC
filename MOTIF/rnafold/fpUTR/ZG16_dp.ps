%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZG16)
} def

/sequence { (\
AGGGCUUGGACCUGGUAUAAAACAUCUGGAAGUUUCCAGGGGGCUGCUUUGCAUCUGAAACUGUCAGCCCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004339136 ubox
1 13 0.813840933 ubox
2 6 0.003474505 ubox
2 12 0.876610806 ubox
2 13 0.362684724 ubox
2 35 0.018572761 ubox
2 36 0.006453804 ubox
2 37 0.028282753 ubox
2 70 0.070990797 ubox
2 71 0.012162002 ubox
3 11 0.876473514 ubox
3 12 0.401490520 ubox
3 13 0.014240698 ubox
3 34 0.022888012 ubox
3 35 0.005241291 ubox
3 36 0.028129682 ubox
3 37 0.006866181 ubox
3 69 0.071325061 ubox
3 70 0.010595085 ubox
4 11 0.400700891 ubox
4 12 0.015020578 ubox
4 16 0.150405326 ubox
4 33 0.034082110 ubox
4 34 0.004456737 ubox
4 35 0.013380451 ubox
4 36 0.006789103 ubox
4 68 0.071492242 ubox
4 69 0.008950368 ubox
5 15 0.153304026 ubox
5 32 0.036769146 ubox
5 39 0.017776990 ubox
5 40 0.022022715 ubox
5 67 0.071505740 ubox
5 73 0.024129539 ubox
6 14 0.151539176 ubox
6 15 0.005876462 ubox
6 20 0.021713731 ubox
6 21 0.008135375 ubox
6 22 0.005429021 ubox
6 29 0.003937579 ubox
6 31 0.036510569 ubox
6 38 0.012790831 ubox
6 39 0.044200532 ubox
6 66 0.062466667 ubox
6 67 0.006783648 ubox
6 72 0.022351553 ubox
6 73 0.013024927 ubox
7 14 0.011227809 ubox
7 17 0.007698204 ubox
7 19 0.024058727 ubox
7 20 0.008845282 ubox
7 21 0.006290457 ubox
7 24 0.027899980 ubox
7 28 0.010259405 ubox
7 30 0.034391813 ubox
7 38 0.051635381 ubox
7 63 0.004692865 ubox
7 66 0.025578489 ubox
7 72 0.015519260 ubox
7 73 0.003197722 ubox
8 13 0.009673536 ubox
8 16 0.008296815 ubox
8 18 0.022717458 ubox
8 23 0.030948419 ubox
8 27 0.024011603 ubox
8 35 0.003682497 ubox
8 36 0.003273395 ubox
8 37 0.054025852 ubox
8 62 0.007583947 ubox
8 65 0.033167992 ubox
8 71 0.015561422 ubox
9 25 0.003837238 ubox
9 26 0.025572179 ubox
9 34 0.005204382 ubox
9 35 0.003204132 ubox
9 36 0.054015120 ubox
9 61 0.007626932 ubox
9 64 0.024677696 ubox
9 65 0.057618515 ubox
9 70 0.011193175 ubox
10 16 0.026856875 ubox
10 25 0.025016243 ubox
10 33 0.007352188 ubox
10 34 0.004994113 ubox
10 35 0.053224653 ubox
10 64 0.059134460 ubox
11 15 0.027323073 ubox
11 29 0.061375434 ubox
11 32 0.009475596 ubox
11 40 0.042238295 ubox
11 63 0.058887277 ubox
12 28 0.061614061 ubox
12 29 0.041840334 ubox
12 32 0.009991086 ubox
12 39 0.062044955 ubox
12 41 0.003202476 ubox
12 73 0.031662625 ubox
13 19 0.011745626 ubox
13 24 0.206525004 ubox
13 28 0.041750494 ubox
13 31 0.009875947 ubox
13 38 0.062634372 ubox
13 63 0.004976699 ubox
13 72 0.030861653 ubox
14 18 0.013636721 ubox
14 23 0.334693568 ubox
14 26 0.059080520 ubox
14 27 0.043289993 ubox
14 37 0.063380425 ubox
14 55 0.005053290 ubox
14 62 0.029280068 ubox
14 71 0.023355993 ubox
15 23 0.249045764 ubox
15 25 0.067115318 ubox
15 26 0.043748626 ubox
15 36 0.063343058 ubox
15 54 0.005039568 ubox
15 61 0.031543488 ubox
15 70 0.012228373 ubox
16 22 0.244434028 ubox
16 24 0.066760622 ubox
16 53 0.005041275 ubox
16 60 0.030432751 ubox
17 25 0.035286346 ubox
17 33 0.005252601 ubox
18 24 0.036471423 ubox
18 28 0.003390105 ubox
18 32 0.005194127 ubox
18 51 0.004913802 ubox
19 27 0.003375479 ubox
19 35 0.006972929 ubox
19 50 0.005054227 ubox
20 34 0.006009117 ubox
20 35 0.058755130 ubox
20 49 0.005058039 ubox
21 33 0.004534984 ubox
21 34 0.060489300 ubox
21 48 0.004809530 ubox
22 33 0.061191690 ubox
23 32 0.061377765 ubox
23 46 0.005124507 ubox
24 45 0.005090494 ubox
25 40 0.062122897 ubox
25 74 0.009899906 ubox
26 39 0.990148808 ubox
26 40 0.003254582 ubox
26 67 0.006277118 ubox
26 73 0.010030365 ubox
27 38 0.993410843 ubox
27 66 0.008823447 ubox
27 72 0.007799651 ubox
28 37 0.994283040 ubox
28 65 0.013888069 ubox
29 35 0.003750096 ubox
29 36 0.994037465 ubox
29 64 0.011386446 ubox
29 65 0.009663115 ubox
30 34 0.022499660 ubox
30 35 0.929675639 ubox
30 64 0.009350853 ubox
31 62 0.051645226 ubox
32 61 0.053130580 ubox
33 60 0.053103815 ubox
34 59 0.053031807 ubox
35 58 0.052894825 ubox
35 74 0.004555332 ubox
36 57 0.040921771 ubox
36 73 0.006242929 ubox
37 51 0.005002686 ubox
37 57 0.033901384 ubox
38 50 0.004998525 ubox
38 56 0.047564375 ubox
39 49 0.004976941 ubox
39 55 0.047471405 ubox
39 56 0.019466168 ubox
39 71 0.010340558 ubox
40 48 0.005197514 ubox
40 54 0.045890853 ubox
40 55 0.025216953 ubox
40 56 0.026362635 ubox
40 70 0.009919864 ubox
40 71 0.993359602 ubox
41 47 0.005285998 ubox
41 48 0.003950594 ubox
41 54 0.020989999 ubox
41 55 0.029615474 ubox
41 56 0.021972595 ubox
41 69 0.008266956 ubox
41 70 0.997130479 ubox
41 71 0.009489279 ubox
42 47 0.004097539 ubox
42 54 0.026756705 ubox
42 55 0.023079707 ubox
42 56 0.016684628 ubox
42 65 0.003677666 ubox
42 68 0.006024891 ubox
42 69 0.997307371 ubox
42 70 0.007890880 ubox
43 52 0.064244409 ubox
43 54 0.022247618 ubox
43 55 0.017548759 ubox
43 64 0.003732499 ubox
43 68 0.997338717 ubox
43 69 0.005842179 ubox
44 51 0.064305472 ubox
44 63 0.003745583 ubox
44 67 0.997343349 ubox
45 53 0.035425869 ubox
45 66 0.996609782 ubox
46 52 0.038986239 ubox
46 62 0.005291947 ubox
46 64 0.125591303 ubox
46 65 0.987906434 ubox
47 51 0.039182676 ubox
47 63 0.640958350 ubox
48 58 0.041588835 ubox
48 59 0.147989752 ubox
48 60 0.207102862 ubox
48 66 0.003185749 ubox
49 57 0.041816491 ubox
49 58 0.153443827 ubox
49 59 0.238723516 ubox
49 60 0.339807980 ubox
49 66 0.005266201 ubox
50 57 0.150288653 ubox
50 58 0.241433392 ubox
50 59 0.350687421 ubox
50 63 0.020661519 ubox
50 66 0.009511477 ubox
51 56 0.080843783 ubox
51 62 0.017159499 ubox
51 64 0.723790737 ubox
51 65 0.013225743 ubox
52 63 0.727737379 ubox
53 62 0.711690315 ubox
53 64 0.022104074 ubox
54 63 0.022033818 ubox
55 67 0.006994747 ubox
56 63 0.004469684 ubox
56 66 0.016588227 ubox
57 62 0.008513338 ubox
57 65 0.020866598 ubox
58 64 0.020546141 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
42 69 0.9500000 lbox
43 68 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
showpage
end
%%EOF
