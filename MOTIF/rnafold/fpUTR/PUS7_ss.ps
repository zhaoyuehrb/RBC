%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUCGCUGCGCCGCACGUGUGCGAGCCCGGCCGCCGGUGAGUCGGCUGGAGCGCAUCUGGUCCUCCGCGCGGAAAGCGCUGCUUUUGCCUGGCCGCCCUAGCCGCUGGCUCAUCCAAGUGGCCUUCGCCGCUCUCUUGCGUCCCAACCAGAGCGCUGGCCACCUCGCCGCCCAGCUCACGCCGCGCCCGCGCUCCCAGGCUCCGGGUUUUCUUAAAUGUUUUCUUGGAGCCUUAAAG\
) } def
/len { sequence length } bind def

/coor [
[428.98190308 856.17559814]
[424.24642944 849.79943848]
[420.75143433 842.65924072]
[418.61685181 834.99377441]
[417.91708374 827.05999756]
[418.67831421 819.12438965]
[420.87771606 811.45404053]
[424.44390869 804.30749512]
[429.25942993 797.92626953]
[435.16461182 792.52655029]
[428.35476685 779.16143799]
[421.54489136 765.79638672]
[414.73504639 752.43127441]
[399.52096558 743.66815186]
[400.66287231 725.28039551]
[393.67864990 712.00555420]
[380.90524292 704.34466553]
[381.32708740 688.52911377]
[374.34286499 675.25427246]
[368.45858765 670.80700684]
[367.35540771 661.75970459]
[360.54553223 648.39459229]
[353.73568726 635.02947998]
[341.06362915 627.20208740]
[341.69247437 611.39337158]
[334.88262939 598.02825928]
[328.07275391 584.66314697]
[321.26290894 571.29809570]
[307.06204224 566.95397949]
[299.96548462 553.49688721]
[304.61828613 538.63116455]
[297.80841064 525.26605225]
[290.99856567 511.90093994]
[288.39855957 510.90386963]
[286.03274536 508.82693481]
[284.31069946 505.75280762]
[283.60510254 501.90945435]
[284.20281982 497.65335083]
[278.10177612 483.95019531]
[272.00070190 470.24700928]
[265.89965820 456.54382324]
[259.79861450 442.84063721]
[253.69757080 429.13745117]
[239.74353027 424.05609131]
[233.36099243 410.24603271]
[238.78540039 395.64419556]
[232.68435669 381.94100952]
[226.58331299 368.23782349]
[220.48225403 354.53463745]
[216.44148254 352.02243042]
[213.92550659 346.95419312]
[214.40608215 340.39196777]
[208.66583252 326.53378296]
[202.92558289 312.67559814]
[197.18533325 298.81741333]
[191.44508362 284.95919800]
[185.99240112 279.99215698]
[185.72171021 270.88186646]
[180.16334534 256.94970703]
[174.60498047 243.01756287]
[169.04661560 229.08541870]
[163.48825073 215.15327454]
[157.92990112 201.22113037]
[141.87768555 199.28970337]
[128.91865540 189.46551514]
[122.65169525 174.35784912]
[124.87709045 158.05917358]
[135.08061218 145.03660583]
[129.34036255 131.17840576]
[123.60011292 117.32021332]
[66.92059326 107.54855347]
[56.03997803 97.22323608]
[45.15936279 86.89791870]
[34.27874756 76.57260132]
[18.70374870 76.81169128]
[7.81634521 66.18534851]
[7.68439102 51.33549500]
[-3.19622469 41.01017761]
[-18.53252220 37.12320328]
[-22.43855286 22.74988937]
[-33.31916809 12.42457104]
[-48.65546417 8.53759861]
[-52.56149673 -5.83571720]
[-63.44211197 -16.16103554]
[-74.32273102 -26.48635483]
[-89.83827209 -24.53647995]
[-102.94911194 -33.05937576]
[-107.46472168 -48.03079224]
[-101.25296021 -62.38168335]
[-87.24684143 -69.33599854]
[-72.05960846 -65.61011505]
[-62.86222839 -52.96329498]
[-63.99740982 -37.36697006]
[-53.11679459 -27.04165077]
[-42.23617935 -16.71633339]
[-27.67813492 -13.56789589]
[-22.99385071 1.54395509]
[-12.11323452 11.86927414]
[2.44480872 15.01771069]
[7.12909412 30.12956047]
[18.00971031 40.45487976]
[32.84611893 39.80947113]
[44.02769852 50.12581635]
[44.60406494 65.69197845]
[55.48468018 76.01730347]
[66.36529541 86.34262085]
[77.24591064 96.66793823]
[90.42816925 89.51055908]
[87.69463348 74.76173401]
[84.96110535 60.01290894]
[72.60723114 49.77760696]
[73.05104828 33.74069595]
[85.95210266 24.20431709]
[101.41380310 28.48396873]
[107.57525635 43.29666519]
[99.70993042 57.27937698]
[102.44345856 72.02819824]
[105.17699432 86.77702332]
[120.17667389 86.67884827]
[122.71691132 71.89550781]
[125.25715637 57.11216736]
[127.79740143 42.32882690]
[130.33764648 27.54548645]
[132.87788391 12.76214504]
[126.69731140 -2.42773700]
[136.97410583 -15.20738983]
[153.13638306 -12.43020248]
[158.55778503 3.04689312]
[147.66122437 15.30238819]
[145.12098694 30.08572960]
[142.58073425 44.86906815]
[140.04049683 59.65240860]
[137.50025940 74.43575287]
[134.96000671 89.21909332]
[147.19583130 80.54241180]
[161.85453796 83.72393036]
[169.39253235 96.69229889]
[164.90216064 111.00440979]
[151.30690002 117.34229279]
[137.45831299 111.57996368]
[143.19856262 125.43815613]
[148.93881226 139.29635620]
[162.87263489 140.39744568]
[174.91734314 147.35765076]
[182.75407410 158.77124023]
[184.90246582 172.38160706]
[181.00009155 185.52735901]
[171.86204529 195.66278076]
[177.42039490 209.59492493]
[182.97875977 223.52706909]
[188.53712463 237.45921326]
[194.09548950 251.39134216]
[199.65385437 265.32348633]
[205.30326843 279.21896362]
[211.04353333 293.07714844]
[216.78378296 306.93533325]
[222.52403259 320.79354858]
[228.26428223 334.65173340]
[234.18544006 348.43359375]
[240.28648376 362.13677979]
[246.38754272 375.83996582]
[252.48858643 389.54315186]
[266.96951294 395.28253174]
[272.96163940 409.26641846]
[267.40075684 423.03640747]
[273.50180054 436.73959351]
[279.60284424 450.44277954]
[285.70388794 464.14596558]
[291.80496216 477.84912109]
[297.90600586 491.55230713]
[304.36367798 505.09109497]
[311.17352295 518.45617676]
[317.98336792 531.82128906]
[332.74484253 536.79498291]
[339.46060181 550.44604492]
[334.62799072 564.48822021]
[341.43786621 577.85333252]
[348.24771118 591.21838379]
[355.05758667 604.58349609]
[368.21670532 613.36688232]
[367.10079956 628.21960449]
[373.91064453 641.58471680]
[380.72048950 654.94982910]
[387.61767578 668.27008057]
[394.60189819 681.54486084]
[407.87487793 690.15527344]
[406.95346069 705.02136230]
[413.93768311 718.29614258]
[425.99060059 722.85229492]
[431.53851318 734.03668213]
[428.10012817 745.62139893]
[434.91000366 758.98651123]
[441.71984863 772.35162354]
[448.52972412 785.71667480]
[471.35568237 785.07391357]
[491.31588745 796.02508545]
[502.96740723 815.50555420]
[503.17269897 838.13574219]
[491.94418335 857.70642090]
[500.60134888 869.95605469]
[509.25854492 882.20568848]
[517.91571045 894.45532227]
[526.57287598 906.70495605]
[535.23010254 918.95458984]
[543.88726807 931.20416260]
[552.54443359 943.45379639]
[561.20159912 955.70343018]
[569.85876465 967.95306396]
[584.47680664 963.94195557]
[599.58489990 965.17553711]
[613.35864258 971.50482178]
[624.13482666 982.16552734]
[630.61212158 995.87030029]
[632.00842285 1010.96417236]
[628.15509033 1025.62463379]
[619.51739502 1038.08117676]
[607.13848877 1046.82971191]
[592.51306152 1050.81384277]
[577.40728760 1049.55249023]
[563.64520264 1043.19775391]
[552.88873291 1032.51733398]
[546.43664551 1018.80059814]
[545.06817627 1003.70416260]
[548.94854736 989.05090332]
[557.60919189 976.61022949]
[548.95196533 964.36059570]
[540.29479980 952.11096191]
[531.63763428 939.86138916]
[522.98046875 927.61175537]
[514.32330322 915.36212158]
[505.66610718 903.11248779]
[497.00891113 890.86285400]
[488.35174561 878.61322021]
[479.69454956 866.36364746]
[472.29162598 869.09350586]
[464.50738525 870.42706299]
[456.60308838 870.31689453]
[448.84445190 868.76397705]
[441.49285889 865.81774902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 191]
[15 188]
[16 187]
[18 185]
[19 184]
[21 183]
[22 182]
[23 181]
[25 179]
[26 178]
[27 177]
[28 176]
[31 173]
[32 172]
[33 171]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[46 162]
[47 161]
[48 160]
[49 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 148]
[68 142]
[69 141]
[70 140]
[71 107]
[72 106]
[73 105]
[74 104]
[77 101]
[78 100]
[80 98]
[81 97]
[83 95]
[84 94]
[85 93]
[108 118]
[109 117]
[110 116]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[199 234]
[200 233]
[201 232]
[202 231]
[203 230]
[204 229]
[205 228]
[206 227]
[207 226]
[208 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
