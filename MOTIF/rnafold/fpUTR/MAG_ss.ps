%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCCCCUGGCACCCAGGGGGAGGGGAGGGGCUGGCAAGUGGGGGCCUAGACCCUGGAAGGCAGGGGACUGCGAGCUGGGCUGGCGGAGCAGAGGUGCAGAAGCAACUGAGUCCAAGUUGUCUGGCGGCUUCAGGUGGACCCAGAAGACGUCCCCAACUCAGGGAGAUUCAGCGAUCACUCACUCGCUGUACAGA\
) } def
/len { sequence length } bind def

/coor [
[182.19247437 592.84680176]
[186.48872375 578.47589111]
[186.13356018 563.48010254]
[185.77838135 548.48431396]
[185.42321777 533.48852539]
[185.06803894 518.49273682]
[177.57014465 518.67034912]
[170.72865295 532.01928711]
[163.88716125 545.36816406]
[157.04568481 558.71710205]
[150.20419312 572.06604004]
[143.36270142 585.41497803]
[136.52120972 598.76391602]
[134.67781067 615.61737061]
[117.97271729 618.51147461]
[110.56725311 603.26043701]
[123.17227936 591.92242432]
[130.01376343 578.57348633]
[136.85525513 565.22454834]
[143.69674683 551.87561035]
[150.53823853 538.52673340]
[157.37971497 525.17779541]
[164.22120667 511.82882690]
[150.46553040 484.83001709]
[157.25482178 457.45083618]
[178.62702942 442.43936157]
[176.26881409 427.62591553]
[173.91059875 412.81243896]
[161.74046326 404.30224609]
[159.13787842 389.31286621]
[168.14666748 376.60540771]
[165.78846741 361.79196167]
[163.43025208 346.97848511]
[161.07203674 332.16500854]
[151.43005371 320.81243896]
[156.90155029 305.96743774]
[154.54333496 291.15399170]
[140.22531128 286.97552490]
[129.09559631 276.95361328]
[123.39753723 263.03622437]
[124.31089783 247.96354675]
[131.70797729 234.72836304]
[144.16836548 225.98191833]
[141.81015015 211.16845703]
[139.45193481 196.35498047]
[137.09373474 181.54151917]
[123.84362030 167.46662903]
[131.31457520 148.75061035]
[128.48989868 134.01896667]
[125.66522217 119.28733063]
[122.84055328 104.55568695]
[120.88088226 120.98431396]
[106.85118103 135.25656128]
[83.59170532 138.91073608]
[59.41629791 126.63187408]
[45.52436447 120.97376251]
[31.63243294 115.31565857]
[17.74049950 109.65754700]
[3.84856749 103.99943542]
[-11.43527699 108.87628937]
[-24.69692230 99.84809113]
[-25.76317024 83.84050751]
[-13.81608582 73.13318634]
[1.97955000 75.93986511]
[9.50667667 90.10750580]
[23.39860916 95.76560974]
[37.29054260 101.42372131]
[51.18247604 107.08183289]
[65.07440948 112.73994446]
[69.82949829 106.94001770]
[79.33967590 95.34016418]
[84.09476471 89.54024506]
[75.82283783 77.02723694]
[67.55091858 64.51422882]
[59.27899551 52.00122833]
[45.21427155 44.75594330]
[44.65013123 29.87202454]
[36.37820816 17.35902023]
[28.10628510 4.84601450]
[14.32775497 -5.03267145]
[20.00610161 -21.00742340]
[36.92847824 -19.97324181]
[40.61928940 -3.42590809]
[48.89121246 9.08709717]
[57.16313553 21.60010147]
[70.63619232 27.95037270]
[71.79199982 43.72930527]
[80.06392670 56.24230957]
[88.33584595 68.75531769]
[96.60776520 81.26831818]
[104.09935760 80.91324615]
[103.38944244 65.93005371]
[118.37265015 65.22037506]
[119.08254242 80.20310211]
[126.57412720 79.84803009]
[133.62548828 66.60875702]
[140.67686462 53.36949158]
[147.72822571 40.13022232]
[154.77958679 26.89095116]
[161.72622681 13.59643555]
[168.56771851 0.24750106]
[161.43946838 -11.55639267]
[161.07995605 -25.23265648]
[167.47619629 -37.20373535]
[178.86189270 -44.39099884]
[192.20385742 -45.00629044]
[199.25523376 -58.24555969]
[206.30659485 -71.48483276]
[213.35795593 -84.72409821]
[220.40931702 -97.96337128]
[227.46069336 -111.20263672]
[221.44551086 -125.63703156]
[226.16517639 -140.54537964]
[239.39118958 -148.88841248]
[254.87866211 -146.72682190]
[265.31484985 -135.08122253]
[265.77212524 -119.45032501]
[256.03457642 -107.21455383]
[240.69995117 -104.15127563]
[233.64859009 -90.91200256]
[226.59722900 -77.67273712]
[219.54586792 -64.43346405]
[212.49449158 -51.19419479]
[205.44313049 -37.95492554]
[213.09780884 -23.43817520]
[210.56959534 -7.05467749]
[198.65856934 4.71282530]
[181.91665649 7.08898830]
[175.07516479 20.43792343]
[174.82186890 27.83163452]
[168.01885986 33.94231796]
[160.96749878 47.18158722]
[153.91612244 60.42085648]
[146.86476135 73.66012573]
[139.81340027 86.89939117]
[137.57218933 101.73101807]
[140.39686584 116.46265411]
[143.22154236 131.19429016]
[146.04621887 145.92593384]
[155.39604187 151.50788879]
[160.02993774 161.11872864]
[158.63313293 171.47488403]
[151.90719604 179.18330383]
[154.26541138 193.99678040]
[156.62362671 208.81024170]
[158.98182678 223.62371826]
[173.54219055 228.06861877]
[184.68338013 238.35263062]
[190.23193359 252.39662170]
[189.13714600 267.39538574]
[181.66957092 280.37786865]
[169.35681152 288.79577637]
[171.71502686 303.60925293]
[181.52568054 316.02139282]
[175.88551331 329.80679321]
[178.24371338 344.62026978]
[180.60192871 359.43374634]
[182.96014404 374.24722290]
[195.46949768 383.52911377]
[197.65003967 398.58566284]
[188.72407532 410.45422363]
[191.08227539 425.26770020]
[193.44049072 440.08117676]
[202.15176392 440.67419434]
[210.67410278 443.39947510]
[218.48184204 448.19635010]
[225.06884766 454.87390137]
[229.98074341 463.11730957]
[232.84536743 472.50192261]
[233.39910889 482.51498413]
[231.50775146 492.58355713]
[227.17980957 502.10726929]
[220.57179260 510.49417114]
[228.03759766 523.50427246]
[235.50338745 536.51434326]
[242.96917725 549.52441406]
[250.43498230 562.53448486]
[257.90078735 575.54455566]
[273.34237671 577.07318115]
[284.91397095 587.41131592]
[288.16607666 602.58374023]
[281.84817505 616.75640869]
[268.38961792 624.47955322]
[252.96553040 622.78350830]
[241.50674438 612.32043457]
[238.41941833 597.11358643]
[244.89070129 583.01031494]
[237.42491150 570.00024414]
[229.95910645 556.99017334]
[222.49331665 543.98010254]
[215.02752686 530.97003174]
[207.56173706 517.95996094]
[200.06382751 518.13757324]
[200.41900635 533.13336182]
[200.77416992 548.12915039]
[201.12934875 563.12493896]
[201.48452759 578.12072754]
[206.45608521 592.27288818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[26 163]
[27 162]
[28 161]
[31 158]
[32 157]
[33 156]
[34 155]
[36 153]
[37 152]
[43 146]
[44 145]
[45 144]
[46 143]
[48 139]
[49 138]
[50 137]
[51 136]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[72 90]
[73 89]
[74 88]
[75 87]
[77 85]
[78 84]
[79 83]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 129]
[101 128]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
