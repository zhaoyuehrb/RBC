%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCCGGGAAGGGGCGGAAGAGGUGGGCUGGUGGAGGCGGGGUCGAGAUGGCGGCGCCUUUGAGGAUUCAGAGCGACUGGGCGCAAGCCCUCAGGAAGGAUGAAGGGGAGGCCUGGCUGAGCUGUCAUCCCCCAGUGGAAGCAGCCUGAGGCUCUCAUCAGAAGCAG\
) } def
/len { sequence length } bind def

/coor [
[-2.80482054 510.80557251]
[9.91263580 502.85156250]
[24.12145996 507.66046143]
[20.10853577 493.20718384]
[16.09560966 478.75393677]
[8.69441128 477.54058838]
[-13.50918579 473.90048218]
[-21.92699242 486.31582642]
[-30.34479713 498.73117065]
[-38.76260376 511.14648438]
[-47.18040848 523.56182861]
[-55.59821701 535.97717285]
[-50.19972610 550.52490234]
[-54.41559601 565.45825195]
[-66.62474060 575.03515625]
[-82.13249207 575.57299805]
[-94.97579956 566.86499023]
[-100.21615601 552.25958252]
[-95.83853912 537.37280273]
[-83.52622223 527.92895508]
[-68.01354980 527.55932617]
[-59.59574509 515.14404297]
[-51.17794037 502.72869873]
[-42.76013184 490.31335449]
[-34.34232712 477.89801025]
[-25.92452049 465.48266602]
[-17.58397675 457.87979126]
[-8.40504456 453.42630005]
[0.65980691 452.05746460]
[8.74085903 453.45089722]
[15.11584949 457.06271362]
[17.80942917 442.30654907]
[20.50300789 427.55038452]
[23.19658661 412.79418945]
[25.89016533 398.03802490]
[28.58374596 383.28186035]
[16.96693611 375.66494751]
[9.11114502 364.15582275]
[6.23252201 350.47744751]
[8.79906750 336.69299316]
[16.45491600 324.89453125]
[28.06926346 316.88549805]
[41.90329361 313.90518188]
[44.86284637 299.20004272]
[47.68952560 284.46878052]
[50.38310242 269.71261597]
[53.07668304 254.95643616]
[55.77026367 240.20027161]
[54.25487518 237.80294800]
[53.61471558 234.65077209]
[54.14595795 231.08033752]
[56.01524734 227.53041077]
[59.22764587 224.49320984]
[62.97897720 209.96986389]
[66.73030853 195.44651794]
[70.48163605 180.92317200]
[74.23296356 166.39984131]
[77.98429871 151.87649536]
[81.73562622 137.35314941]
[85.48695374 122.82980347]
[89.23828888 108.30645752]
[86.81155396 93.50405884]
[78.61927032 80.93877411]
[71.28477478 75.43502045]
[70.39489746 68.07185364]
[62.43080139 55.36070633]
[54.46670532 42.64956284]
[46.50260925 29.93841743]
[38.53851318 17.22727394]
[23.80411148 10.02801132]
[22.94174004 -6.34844589]
[36.83853531 -15.05540371]
[51.19866562 -7.13589001]
[51.24966049 9.26317787]
[59.21375275 21.97432327]
[67.17784882 34.68546677]
[75.14194489 47.39661026]
[83.10604095 60.10775757]
[91.18455505 72.74649048]
[99.37684631 85.31177521]
[106.68664551 83.63343811]
[103.33020020 69.01378632]
[117.94990540 65.65756989]
[121.30624390 80.27677155]
[128.61604309 78.59843445]
[130.50679016 63.71807480]
[132.39753723 48.83771515]
[134.28828430 33.95735550]
[127.44877625 19.05255318]
[137.15635681 5.83533525]
[153.42471313 7.90244293]
[159.51834106 23.12741280]
[149.16864014 35.84810257]
[147.27789307 50.72846222]
[145.38714600 65.60881805]
[143.49641418 80.48918152]
[156.62007141 87.75342560]
[168.22596741 78.25061798]
[179.83184814 68.74781036]
[191.43774414 59.24499893]
[193.14979553 43.76253891]
[205.05519104 34.29066849]
[219.80480957 36.01827240]
[231.41069031 26.51546478]
[243.01657104 17.01265526]
[239.37854004 2.18944931]
[242.54072571 -12.74250603]
[251.87528992 -24.81846046]
[265.52883911 -31.64072418]
[280.79046631 -31.85473061]
[294.62994385 -25.41799164]
[304.29943848 -13.60852242]
[307.87908936 1.22889531]
[304.65811157 16.14828300]
[295.27606201 28.18738365]
[281.59576416 34.95582581]
[266.33340454 35.10973358]
[252.51939392 28.61854362]
[240.91349792 38.12135315]
[229.30761719 47.62416077]
[228.09111023 62.42469025]
[216.45645142 72.22721863]
[200.94055176 70.85089111]
[189.33465576 80.35369873]
[177.72877502 89.85650635]
[166.12287903 99.35931396]
[103.76162720 112.05778503]
[100.01029968 126.58113098]
[96.25897217 141.10447693]
[92.50763702 155.62782288]
[88.75630951 170.15116882]
[85.00498199 184.67451477]
[81.25365448 199.19784546]
[77.50231934 213.72119141]
[73.75099182 228.24453735]
[70.52643585 242.89384460]
[67.83285522 257.65002441]
[65.13927460 272.40618896]
[62.44569778 287.16235352]
[63.98558044 296.20199585]
[59.56798172 302.15960693]
[56.60843277 316.86474609]
[69.65481567 326.55990601]
[77.14777374 340.91867065]
[77.63548279 357.04943848]
[71.07112122 371.72854614]
[58.81215668 382.04449463]
[43.33991623 385.97543335]
[40.64633942 400.73159790]
[37.95275879 415.48779297]
[35.25918198 430.24395752]
[32.56560135 445.00012207]
[29.87202263 459.75628662]
[30.54886055 474.74102783]
[34.56178665 489.19427490]
[38.57471085 503.64752197]
[43.23571396 517.90496826]
[48.53530502 531.93762207]
[53.83489227 545.97021484]
[59.81476593 552.92199707]
[59.10097885 560.30432129]
[64.14635468 574.43029785]
[76.98865509 584.62872314]
[74.31040955 600.80767822]
[58.86677170 606.32366943]
[46.54483414 595.50231934]
[50.02034760 579.47570801]
[44.97496796 565.34967041]
[39.80227661 551.26977539]
[34.50268555 537.23718262]
[29.20309639 523.20458984]
[20.57928085 535.47772217]
[5.61928177 536.57244873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 156]
[4 155]
[5 154]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[43 142]
[44 141]
[45 139]
[46 138]
[47 137]
[48 136]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 80]
[63 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[85 96]
[86 95]
[87 94]
[88 93]
[97 126]
[98 125]
[99 124]
[100 123]
[103 120]
[104 119]
[105 118]
[157 171]
[158 170]
[159 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
