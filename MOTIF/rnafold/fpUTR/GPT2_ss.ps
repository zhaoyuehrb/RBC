%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUGCGGCUGUGGGCGCCGGGGCCGGGUAGCUGCUCCAGGCGCGCGAGCUAACCGAGUGCGGCGAGGGCCUACCAGGGGCGACAGGGUUUCUCUCCGCAAGCGCGCG\
) } def
/len { sequence length } bind def

/coor [
[107.73346710 189.59169006]
[94.03476715 196.88040161]
[78.67280579 194.69184875]
[67.55457306 183.86759949]
[64.95525360 168.56977844]
[71.87434387 154.68072510]
[85.65131378 147.54106140]
[87.76692963 132.69099426]
[89.88255310 117.84094238]
[81.13460541 105.65597534]
[66.38771820 102.91201019]
[51.64083481 100.16803741]
[42.48070145 101.68418884]
[36.51803589 97.13211060]
[21.85470581 93.97192383]
[6.73418617 98.62815094]
[-4.07733679 88.38314056]
[-18.74066544 85.22294617]
[-33.40399551 82.06275940]
[-48.06732178 78.90257263]
[-62.73065186 75.74237823]
[-77.43723297 72.79000854]
[-92.18412018 70.04604340]
[-106.93099976 67.30207062]
[-121.67788696 64.55810547]
[-136.42477417 61.81413651]
[-145.58491516 63.33028030]
[-151.54757690 58.77820587]
[-166.21090698 55.61801529]
[-181.64744568 61.15380859]
[-193.98326111 50.34825134]
[-190.52828979 34.31718063]
[-174.83673096 29.55198288]
[-163.05072021 40.95468521]
[-148.38739014 44.11487579]
[-133.68080139 47.06724930]
[-118.93392181 49.81121826]
[-104.18703461 52.55518723]
[-89.44014740 55.29915237]
[-74.69326019 58.04312134]
[-67.43571472 56.14503098]
[-59.57046127 61.07905197]
[-44.90713501 64.23924255]
[-30.24380493 67.39942932]
[-15.58047581 70.55962372]
[-0.91714752 73.71981049]
[13.15455246 68.83754730]
[25.01489449 79.30859375]
[39.67822266 82.46878052]
[54.38480377 85.42115784]
[69.13169098 88.16512299]
[83.87857819 90.90908813]
[89.87530518 85.33753204]
[97.41784668 83.06680298]
[104.88462067 84.30302429]
[110.78971100 88.52647400]
[114.07849121 94.65101624]
[129.00495911 93.16755676]
[139.00605774 81.22537994]
[154.16474915 79.93357086]
[165.48815918 89.54169464]
[180.41462708 88.05823517]
[195.34109497 86.57477570]
[210.26754761 85.09131622]
[225.19401550 83.60785675]
[238.16134644 74.54368591]
[251.59141541 80.98435974]
[266.51788330 79.50090027]
[281.44433594 78.01744080]
[296.37081909 76.53398132]
[310.98794556 73.16661072]
[325.05899048 67.96987915]
[339.13000488 62.77314377]
[353.20104980 57.57640839]
[361.19146729 43.66480637]
[377.07110596 41.38075256]
[388.65844727 52.47637939]
[387.06469727 68.44007111]
[373.51242065 77.02584839]
[358.39779663 71.64743805]
[344.32675171 76.84417725]
[330.25570679 82.04090881]
[316.18469238 87.23764038]
[329.97131348 93.14768982]
[338.53970337 105.45957947]
[339.29217529 120.44069672]
[332.00057983 133.54919434]
[318.87551880 140.81092834]
[303.89614868 140.02438354]
[291.60379028 131.42799377]
[285.72515869 117.62793732]
[288.04244995 102.80801392]
[297.85427856 91.46044922]
[282.92779541 92.94390869]
[268.00134277 94.42736816]
[253.07487488 95.91082764]
[241.17520142 104.86888885]
[226.67747498 98.53431702]
[211.75100708 100.01777649]
[196.82455444 101.50123596]
[181.89808655 102.98469543]
[166.97161865 104.46815491]
[157.76083374 116.11705780]
[142.64440918 117.83412933]
[130.48841858 108.09402466]
[115.56195068 109.57748413]
[104.73260498 119.95656586]
[102.61698914 134.80662537]
[100.50136566 149.65667725]
[111.73636627 160.35968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 109]
[8 108]
[9 107]
[10 52]
[11 51]
[12 50]
[14 49]
[15 48]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[28 35]
[29 34]
[57 106]
[58 105]
[61 102]
[62 101]
[63 100]
[64 99]
[65 98]
[67 96]
[68 95]
[69 94]
[70 93]
[71 83]
[72 82]
[73 81]
[74 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
