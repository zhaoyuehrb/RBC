%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HDAC1)
} def

/sequence { (\
GAGCGGAGCCGCGGGCGGGAGGGCGGACGGACCGACUGACGGUAGGGACGGGAGGCGAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 37 0.041138263 ubox
3 9 0.019809900 ubox
3 12 0.205949567 ubox
3 16 0.015708907 ubox
3 24 0.109093918 ubox
3 36 0.042399164 ubox
3 56 0.158890532 ubox
3 60 0.843000326 ubox
4 8 0.020522628 ubox
4 11 0.206220840 ubox
4 13 0.026817641 ubox
4 15 0.015650469 ubox
4 17 0.008594680 ubox
4 23 0.109395268 ubox
4 25 0.019744257 ubox
4 29 0.043130396 ubox
4 34 0.086949253 ubox
4 50 0.066996796 ubox
4 55 0.158916402 ubox
4 57 0.064855451 ubox
4 59 0.843595632 ubox
5 10 0.203416203 ubox
5 12 0.027506827 ubox
5 16 0.006439768 ubox
5 24 0.020189899 ubox
5 28 0.044529978 ubox
5 33 0.089641005 ubox
5 49 0.068073520 ubox
5 56 0.067197486 ubox
6 32 0.089583175 ubox
8 16 0.102500536 ubox
8 24 0.044279957 ubox
8 43 0.148067893 ubox
8 56 0.827301119 ubox
8 60 0.357047902 ubox
9 15 0.102678898 ubox
9 18 0.141643682 ubox
9 19 0.032925561 ubox
9 22 0.016836835 ubox
9 23 0.044320342 ubox
9 26 0.268122349 ubox
9 30 0.095283161 ubox
9 42 0.151299782 ubox
9 46 0.026207632 ubox
9 47 0.010817311 ubox
9 51 0.074145017 ubox
9 52 0.045136138 ubox
9 55 0.824304983 ubox
9 59 0.357310189 ubox
10 14 0.101980432 ubox
10 17 0.142047528 ubox
10 18 0.032637701 ubox
10 21 0.017027955 ubox
10 22 0.044289631 ubox
10 25 0.281790307 ubox
10 29 0.096045417 ubox
10 41 0.151440664 ubox
10 45 0.026256877 ubox
10 46 0.010856955 ubox
10 50 0.074260907 ubox
10 51 0.045167853 ubox
10 54 0.818896352 ubox
10 57 0.359230054 ubox
11 16 0.139088729 ubox
11 24 0.370002024 ubox
11 28 0.105401375 ubox
11 40 0.152097528 ubox
11 43 0.077992389 ubox
11 49 0.073453259 ubox
11 56 0.359455183 ubox
11 60 0.017825297 ubox
12 23 0.370103780 ubox
12 25 0.103749964 ubox
12 29 0.339316650 ubox
12 34 0.025198346 ubox
12 38 0.155289997 ubox
12 41 0.057125717 ubox
12 42 0.078240792 ubox
12 50 0.112729740 ubox
12 55 0.359004120 ubox
12 57 0.004966508 ubox
12 59 0.017838999 ubox
13 24 0.088491837 ubox
13 28 0.351312209 ubox
13 33 0.027188210 ubox
13 37 0.155259414 ubox
13 40 0.059571522 ubox
13 49 0.111812225 ubox
13 56 0.005926196 ubox
14 32 0.027176791 ubox
14 33 0.003244483 ubox
14 36 0.154185007 ubox
14 37 0.043535110 ubox
15 24 0.735120841 ubox
15 32 0.003253729 ubox
15 36 0.044374894 ubox
15 43 0.038770013 ubox
15 56 0.020000439 ubox
15 60 0.162278128 ubox
16 23 0.736148074 ubox
16 25 0.415769979 ubox
16 29 0.030312352 ubox
16 34 0.156715593 ubox
16 38 0.128535692 ubox
16 41 0.102272555 ubox
16 42 0.036505319 ubox
16 50 0.046416466 ubox
16 55 0.019952070 ubox
16 57 0.009055213 ubox
16 59 0.162426489 ubox
17 24 0.416430128 ubox
17 28 0.030639986 ubox
17 33 0.161860982 ubox
17 37 0.129357351 ubox
17 40 0.103605834 ubox
17 49 0.046210232 ubox
17 56 0.009161662 ubox
18 32 0.161779844 ubox
18 33 0.008082469 ubox
18 36 0.129567222 ubox
18 37 0.005276985 ubox
19 32 0.008461314 ubox
19 36 0.005600175 ubox
20 37 0.082813245 ubox
21 33 0.129160190 ubox
21 36 0.082764294 ubox
21 37 0.063964174 ubox
22 32 0.129063734 ubox
22 33 0.014341506 ubox
22 36 0.064190862 ubox
22 37 0.037702853 ubox
23 32 0.014878473 ubox
23 36 0.038201200 ubox
23 43 0.029065631 ubox
23 56 0.237410282 ubox
23 60 0.019192111 ubox
24 34 0.112161798 ubox
24 38 0.007188102 ubox
24 41 0.024681739 ubox
24 42 0.028077769 ubox
24 50 0.039298177 ubox
24 55 0.237521030 ubox
24 57 0.024439809 ubox
24 59 0.019067003 ubox
25 33 0.116317160 ubox
25 37 0.007755246 ubox
25 40 0.026023553 ubox
25 49 0.050266500 ubox
25 56 0.035179124 ubox
26 32 0.116010746 ubox
26 36 0.007827014 ubox
28 34 0.009474485 ubox
28 38 0.037469808 ubox
28 41 0.004946571 ubox
28 50 0.877954094 ubox
28 57 0.041378592 ubox
29 33 0.008959245 ubox
29 37 0.037799459 ubox
29 40 0.004996152 ubox
29 49 0.888573878 ubox
29 56 0.042053938 ubox
30 36 0.037743055 ubox
31 43 0.218059096 ubox
32 42 0.224677018 ubox
32 46 0.890100860 ubox
32 47 0.035254924 ubox
32 51 0.289492043 ubox
32 52 0.023159124 ubox
32 55 0.036906505 ubox
33 41 0.224800775 ubox
33 45 0.887719854 ubox
33 46 0.035219363 ubox
33 50 0.290189364 ubox
33 51 0.021501239 ubox
33 54 0.037274021 ubox
33 57 0.045939083 ubox
34 40 0.222347221 ubox
34 49 0.289187585 ubox
34 56 0.046335945 ubox
35 43 0.800990491 ubox
36 42 0.864731412 ubox
36 45 0.094326675 ubox
36 46 0.112853802 ubox
36 47 0.248891631 ubox
36 51 0.039556788 ubox
36 52 0.008169464 ubox
36 54 0.090219226 ubox
36 55 0.027938687 ubox
37 41 0.779166725 ubox
37 44 0.095019301 ubox
37 45 0.111422039 ubox
37 46 0.248396169 ubox
37 50 0.039130066 ubox
37 51 0.007654600 ubox
37 53 0.091120736 ubox
37 54 0.027774363 ubox
37 61 0.004382000 ubox
38 43 0.084587232 ubox
38 49 0.038528365 ubox
38 60 0.006043646 ubox
40 50 0.133788902 ubox
40 57 0.008797720 ubox
41 49 0.134110517 ubox
41 56 0.008867273 ubox
42 49 0.058060464 ubox
42 56 0.007317296 ubox
42 60 0.004573315 ubox
43 48 0.056337259 ubox
43 55 0.007300614 ubox
43 59 0.004507132 ubox
49 57 0.110799101 ubox
50 56 0.113108050 ubox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
showpage
end
%%EOF
