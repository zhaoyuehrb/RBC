%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHKBP1)
} def

/sequence { (\
GGGUGCACACCCGGAAGUGGGUGCGGGCCAGCCGGCUCGCCCGGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.016751445 ubox
1 12 0.737621800 ubox
1 29 0.030642357 ubox
1 33 0.257069007 ubox
1 38 0.007211172 ubox
1 41 0.008997058 ubox
1 42 0.287650694 ubox
1 49 0.056728108 ubox
2 10 0.016936373 ubox
2 11 0.738186543 ubox
2 12 0.009834720 ubox
2 28 0.029542439 ubox
2 29 0.138810733 ubox
2 32 0.256819576 ubox
2 33 0.114037840 ubox
2 37 0.007207040 ubox
2 40 0.008997112 ubox
2 41 0.287849782 ubox
2 42 0.043345032 ubox
2 48 0.056091724 ubox
2 49 0.120175189 ubox
3 10 0.737841723 ubox
3 11 0.009593639 ubox
3 24 0.034625523 ubox
3 28 0.139807817 ubox
3 32 0.114267895 ubox
3 36 0.007198954 ubox
3 40 0.286062460 ubox
3 41 0.043380297 ubox
3 48 0.120732650 ubox
4 9 0.690254308 ubox
4 23 0.025093565 ubox
4 25 0.161197898 ubox
4 27 0.139436281 ubox
4 30 0.252715738 ubox
4 31 0.108067725 ubox
4 35 0.006973259 ubox
4 39 0.193136173 ubox
4 47 0.111755796 ubox
5 22 0.020405503 ubox
5 24 0.227546373 ubox
5 28 0.210420354 ubox
5 29 0.185049132 ubox
5 36 0.016385738 ubox
5 38 0.068785213 ubox
5 40 0.039519115 ubox
5 48 0.266736398 ubox
6 19 0.015597016 ubox
6 21 0.020044982 ubox
6 23 0.216905137 ubox
6 27 0.272565992 ubox
6 35 0.017050767 ubox
6 39 0.038921682 ubox
6 47 0.267496096 ubox
7 18 0.015652057 ubox
7 22 0.165481246 ubox
8 17 0.015657620 ubox
8 19 0.025191977 ubox
8 21 0.112198410 ubox
8 23 0.520060191 ubox
9 18 0.026092269 ubox
9 22 0.540498672 ubox
10 17 0.026137042 ubox
10 20 0.083123455 ubox
10 21 0.556537418 ubox
10 27 0.006205785 ubox
10 44 0.008426747 ubox
10 45 0.358314463 ubox
10 46 0.034072510 ubox
10 47 0.029576271 ubox
11 19 0.080086568 ubox
11 20 0.561591740 ubox
11 21 0.003849932 ubox
11 26 0.006244454 ubox
11 35 0.003820805 ubox
11 43 0.007587006 ubox
11 44 0.359434475 ubox
11 45 0.031322321 ubox
11 46 0.029765216 ubox
11 47 0.003209564 ubox
12 19 0.561978072 ubox
12 20 0.004546893 ubox
12 25 0.006261807 ubox
12 34 0.003845585 ubox
12 43 0.359713975 ubox
12 44 0.028185633 ubox
12 45 0.029728146 ubox
12 46 0.003498163 ubox
13 18 0.498548188 ubox
13 24 0.006406769 ubox
13 33 0.006360829 ubox
13 42 0.358991771 ubox
13 49 0.690510487 ubox
14 32 0.006337403 ubox
14 41 0.357736418 ubox
14 48 0.695254891 ubox
16 37 0.021984571 ubox
17 24 0.005053085 ubox
17 32 0.003605872 ubox
17 36 0.022367027 ubox
17 40 0.242516402 ubox
17 48 0.032914122 ubox
18 23 0.004870743 ubox
18 25 0.003415446 ubox
18 30 0.003880226 ubox
18 31 0.003472189 ubox
18 35 0.022268478 ubox
18 39 0.243908169 ubox
18 43 0.268083902 ubox
18 47 0.030032787 ubox
19 24 0.004706617 ubox
19 29 0.003997963 ubox
19 33 0.003607117 ubox
19 38 0.244061923 ubox
19 41 0.003753625 ubox
19 42 0.275040492 ubox
19 49 0.005593167 ubox
20 28 0.003922530 ubox
20 29 0.006395102 ubox
20 32 0.003605757 ubox
20 33 0.022308605 ubox
20 37 0.243872854 ubox
20 40 0.003389345 ubox
20 41 0.270445889 ubox
20 42 0.686328323 ubox
20 48 0.005335408 ubox
20 49 0.014248296 ubox
21 28 0.006457542 ubox
21 32 0.022283009 ubox
21 36 0.243862154 ubox
21 40 0.216951951 ubox
21 41 0.688303478 ubox
21 48 0.014427687 ubox
22 27 0.006427779 ubox
22 30 0.004763208 ubox
22 31 0.021984688 ubox
22 35 0.230729618 ubox
22 39 0.155068694 ubox
22 47 0.014314041 ubox
23 29 0.005262582 ubox
23 32 0.022490188 ubox
23 36 0.018452047 ubox
23 38 0.108768977 ubox
23 40 0.755742303 ubox
24 31 0.022799821 ubox
24 34 0.240865545 ubox
24 35 0.019240763 ubox
24 39 0.799058279 ubox
24 43 0.043424321 ubox
25 33 0.245282463 ubox
25 37 0.015031370 ubox
25 38 0.830713509 ubox
25 42 0.044058100 ubox
25 49 0.048718083 ubox
26 32 0.245129969 ubox
26 33 0.022313385 ubox
26 36 0.010952596 ubox
26 37 0.838926764 ubox
26 38 0.008500638 ubox
26 41 0.044058467 ubox
26 48 0.045603418 ubox
26 49 0.352733252 ubox
27 32 0.022747765 ubox
27 36 0.840844379 ubox
27 40 0.044032417 ubox
27 48 0.357282622 ubox
28 35 0.840920082 ubox
28 39 0.043979895 ubox
28 46 0.041956165 ubox
28 47 0.357749518 ubox
29 34 0.839706126 ubox
29 45 0.041948092 ubox
29 46 0.357497661 ubox
30 37 0.042393885 ubox
31 36 0.042532649 ubox
31 48 0.013243602 ubox
32 44 0.360692140 ubox
32 45 0.006680776 ubox
32 47 0.013208394 ubox
33 43 0.360906861 ubox
33 44 0.005149683 ubox
33 46 0.013048321 ubox
34 41 0.025339317 ubox
34 42 0.360081041 ubox
34 49 0.312045399 ubox
35 40 0.035193859 ubox
35 41 0.357353558 ubox
35 48 0.314447332 ubox
36 44 0.004028458 ubox
36 45 0.010634615 ubox
36 46 0.011698570 ubox
36 47 0.314251711 ubox
37 43 0.003602283 ubox
37 44 0.010843853 ubox
37 45 0.016320423 ubox
37 46 0.313743276 ubox
38 43 0.011277283 ubox
38 44 0.019941385 ubox
38 45 0.313405097 ubox
38 46 0.006967899 ubox
39 48 0.062962941 ubox
40 46 0.024976693 ubox
40 47 0.066302664 ubox
41 45 0.025028947 ubox
41 46 0.066290312 ubox
41 47 0.013193593 ubox
42 46 0.013538713 ubox
43 49 0.086527449 ubox
44 48 0.085777567 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
