%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUGGAUCUAAUGCGCAGAGGAGGUUGGCCCAGAGCUCCCGGGCUCCCCCAAGGCUGAACUCCGUCCAAGGUGCCCGCAGGCUCCCUGCCCGCCUUCCCCAUGCCAGCCCGCAGCUAGGGGCAGGGGCAGCGGCGGCUGGGGUUGGGGGUGGGUGGGGAGCUUUUGGGGAGGACAGGUCGCAGCUUGGCU\
) } def
/len { sequence length } bind def

/coor [
[124.08528137 139.19140625]
[118.37324524 153.06124878]
[112.66120148 166.93109131]
[106.94915771 180.80093384]
[101.23711395 194.67079163]
[95.52507019 208.54063416]
[105.39658356 220.23728943]
[108.69034576 235.18418884]
[104.64947510 249.94662476]
[94.20252228 261.13232422]
[79.75013733 266.17089844]
[64.61335754 263.90447998]
[52.27051544 254.85391235]
[45.55790329 241.09893799]
[46.01802444 225.80033875]
[53.54515457 212.47363281]
[66.40960693 204.18121338]
[81.65522766 202.82858276]
[87.36727142 188.95874023]
[93.07931519 175.08889771]
[98.79135895 161.21905518]
[104.50339508 147.34921265]
[110.21543884 133.47937012]
[105.02113342 128.06925964]
[89.43822479 111.83895874]
[75.34748077 116.98200226]
[69.20289612 128.33378601]
[57.34895325 132.32258606]
[46.32266617 127.32482910]
[32.15007401 132.23783875]
[17.97748566 137.15084839]
[3.80489421 142.06385803]
[-10.36769581 146.97686768]
[-13.89741707 161.99501038]
[-25.00210381 172.70433044]
[-40.13829041 175.68751526]
[-54.47607422 169.99266052]
[-63.44032288 157.43695068]
[-64.17057037 142.02687073]
[-56.43380737 128.67973328]
[-42.69880295 121.65456390]
[-27.34834290 123.19305420]
[-15.28070736 132.80427551]
[-1.10811651 127.89126587]
[13.06447411 122.97825623]
[27.23706436 118.06524658]
[41.40965652 113.15223694]
[52.15399170 99.28501892]
[70.20443726 102.89125824]
[84.29518127 97.74821472]
[96.92596436 89.65727997]
[107.48931885 79.00760651]
[118.05267334 68.35792542]
[128.61602783 57.70825195]
[139.17936707 47.05857468]
[143.00889587 38.74855423]
[150.00239563 36.32328033]
[160.73770142 25.84695244]
[171.47299194 15.37062645]
[168.47338867 1.90846336]
[172.48928833 -11.17299080]
[182.36827087 -20.48456955]
[195.45370483 -23.66933632]
[208.29858398 -19.99852562]
[219.20298767 -30.29872704]
[230.02319336 -40.68733597]
[240.75848389 -51.16366196]
[251.49378967 -61.63998795]
[262.22909546 -72.11631012]
[259.52606201 -81.46975708]
[260.41870117 -91.10671997]
[264.74163818 -99.70098114]
[271.86044312 -106.08534241]
[280.76425171 -109.41009521]
[290.20935059 -109.25598145]
[298.89273071 -105.68657684]
[310.28692627 -115.44221497]
[321.68112183 -125.19785309]
[333.07531738 -134.95349121]
[338.52593994 -149.80613708]
[353.22589111 -152.20629883]
[364.62008667 -161.96194458]
[376.01425171 -171.71757507]
[387.40844727 -181.47322083]
[398.80264282 -191.22885132]
[410.19683838 -200.98449707]
[421.59100342 -210.74012756]
[432.98519897 -220.49577332]
[444.37939453 -230.25140381]
[455.77359009 -240.00704956]
[467.16775513 -249.76268005]
[478.56195068 -259.51831055]
[489.95614624 -269.27395630]
[501.35034180 -279.02960205]
[512.74450684 -288.78524780]
[524.13873291 -298.54089355]
[535.53289795 -308.29650879]
[546.92706299 -318.05215454]
[558.07971191 -328.08306885]
[568.98406982 -338.38327026]
[579.88848877 -348.68347168]
[590.79290771 -358.98367310]
[601.69726562 -369.28387451]
[605.79528809 -377.46484375]
[612.86401367 -379.66119385]
[623.93463135 -389.78253174]
[635.00524902 -399.90386963]
[639.23583984 -408.01705933]
[646.33935547 -410.09805298]
[657.57324219 -420.03787231]
[668.80712891 -429.97769165]
[673.16925049 -438.02093506]
[680.30572510 -439.98602295]
[691.69995117 -449.74166870]
[697.15057373 -464.59432983]
[711.85052490 -466.99447632]
[723.24468994 -476.75012207]
[734.63885498 -486.50576782]
[732.43194580 -501.77444458]
[738.85101318 -515.80297852]
[751.84777832 -524.11486816]
[767.27502441 -524.05780029]
[780.21002197 -515.65002441]
[786.52514648 -501.57446289]
[784.20538330 -486.32250977]
[773.99090576 -474.76101685]
[759.14111328 -470.57925415]
[744.39453125 -475.11157227]
[733.00030518 -465.35592651]
[721.60614014 -455.60031128]
[716.97052002 -441.44543457]
[701.45556641 -438.34747314]
[690.06140137 -428.59185791]
[678.74694824 -418.74380493]
[667.51306152 -408.80398560]
[656.27917480 -398.86416626]
[645.12658691 -388.83328247]
[634.05596924 -378.71191406]
[622.98535156 -368.59057617]
[611.99749756 -358.37945557]
[601.09307861 -348.07928467]
[590.18872070 -337.77908325]
[579.28430176 -327.47888184]
[568.37988281 -317.17868042]
[567.91912842 -313.66851807]
[565.72601318 -310.20956421]
[561.84442139 -307.61773682]
[556.68273926 -306.65795898]
[545.28851318 -296.90234375]
[533.89434814 -287.14669800]
[522.50018311 -277.39105225]
[511.10595703 -267.63540649]
[499.71179199 -257.87979126]
[488.31759644 -248.12413025]
[476.92340088 -238.36849976]
[465.52920532 -228.61285400]
[454.13504028 -218.85722351]
[442.74084473 -209.10157776]
[431.34664917 -199.34594727]
[419.95245361 -189.59030151]
[408.55828857 -179.83467102]
[397.16409302 -170.07902527]
[385.76989746 -160.32339478]
[374.37570190 -150.56774902]
[362.98153687 -140.81211853]
[358.34588623 -126.65725708]
[342.83093262 -123.55930328]
[331.43676758 -113.80366516]
[320.04257202 -104.04802704]
[308.64837646 -94.29238892]
[308.81173706 -73.86574554]
[293.65451050 -59.73800659]
[272.70541382 -61.38101578]
[261.97012329 -50.90468979]
[251.23481750 -40.42836380]
[240.49951172 -29.95203781]
[237.90422058 -23.01983643]
[229.50318909 -19.39433098]
[218.59878540 -9.09412956]
[221.22642517 7.10294247]
[213.61059570 21.82460785]
[198.57391357 29.18397331]
[181.94932556 26.10592270]
[171.21401978 36.58224869]
[160.47872925 47.05857468]
[149.82905579 57.62192535]
[139.26570129 68.27160645]
[128.70234680 78.92127991]
[118.13899231 89.57095337]
[107.57564545 100.22063446]
[116.53032684 104.69566345]
[123.18950653 113.41416168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[25 50]
[26 49]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[51 190]
[52 189]
[53 188]
[54 187]
[55 186]
[57 185]
[58 184]
[59 183]
[64 179]
[65 178]
[66 176]
[67 175]
[68 174]
[69 173]
[76 170]
[77 169]
[78 168]
[79 167]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[105 139]
[106 138]
[107 137]
[109 136]
[110 135]
[111 134]
[113 133]
[114 132]
[116 130]
[117 129]
[118 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
