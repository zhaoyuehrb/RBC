%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCUCAGCCUCUCCACAUCGCGGCUCCGGCACCUGAAGGGACGCGGGCGGGCGCGGGCAGCUCCGACCGGCGGCGGCGGGGCGGGACAGGCAGCCCGGCGGCCUCCGAUGGCCCCGCCGUGAGAGGCCGGACCCGCGGCGGGGACCAGCAGCGGUCUAGAGGAGUCCCAGGAGCAGCCAGGACAGGCGGAAGCAGUGGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[395.89904785 465.09582520]
[400.71447754 459.92196655]
[390.68884277 448.76458740]
[380.66320801 437.60720825]
[370.63760376 426.44982910]
[360.61196899 415.29248047]
[355.97161865 414.14776611]
[352.00256348 410.07345581]
[350.45712280 403.63858032]
[340.77642822 392.18066406]
[322.15460205 386.98190308]
[318.88220215 367.09344482]
[308.85659790 355.93606567]
[298.83096313 344.77871704]
[288.80535889 333.62133789]
[278.77972412 322.46395874]
[268.56350708 322.83831787]
[259.64141846 317.41183472]
[255.08706665 307.77114868]
[256.62353516 296.99822998]
[246.94284058 285.54028320]
[237.26214600 274.08236694]
[227.58143616 262.62445068]
[217.90074158 251.16651917]
[208.22004700 239.70860291]
[194.09588623 234.98022461]
[191.09976196 219.44529724]
[181.41905212 207.98738098]
[171.73835754 196.52944946]
[162.05766296 185.07151794]
[152.37695312 173.61360168]
[142.69625854 162.15567017]
[127.87872314 161.16761780]
[117.89788818 149.68556213]
[119.03472900 134.15026855]
[109.35402679 122.69233704]
[103.21772003 125.21873474]
[96.40336609 126.05464935]
[89.38406372 125.02134705]
[82.67860413 122.07407379]
[76.81330872 117.31317139]
[72.28125763 110.98436737]
[69.50211334 103.46759796]
[68.78572083 95.25469971]
[54.17648697 91.85319519]
[39.56724930 88.45169067]
[24.37202263 92.85800934]
[13.73087120 82.43614960]
[-0.87836540 79.03464508]
[-15.51311398 75.74464417]
[-30.17252350 72.56632233]
[-44.83193207 69.38800049]
[-59.49134445 66.20968628]
[-68.54527283 67.44982910]
[-74.34927368 62.86950684]
[-88.95851135 59.46800232]
[-103.28447723 66.68923950]
[-117.80161285 59.86045456]
[-121.37361908 44.22011185]
[-111.26035309 31.76613998]
[-95.21984863 32.05216217]
[-85.55700684 44.85876846]
[-70.94777679 48.26026917]
[-56.31302643 51.55027771]
[-41.65361404 54.72859573]
[-26.99420547 57.90691376]
[-12.33479595 61.08523178]
[-5.12891150 59.42963028]
[2.52313709 64.42540741]
[17.13237381 67.82691193]
[31.28265190 63.17729950]
[42.96875381 73.84246063]
[57.57798767 77.24395752]
[72.18722534 80.64546204]
[83.26782227 70.53505707]
[81.21546936 55.67612457]
[79.16311646 40.81719208]
[77.11077118 25.95826149]
[75.05841827 11.09932995]
[73.00606537 -3.75960135]
[70.95371246 -18.61853218]
[68.90135956 -33.47746277]
[66.84900665 -48.33639526]
[64.79665375 -63.19532776]
[49.27129364 -68.05709839]
[37.46197891 -79.16222382]
[31.69758224 -94.25105286]
[33.08446121 -110.28542328]
[41.29447937 -124.06043243]
[54.64081192 -132.84497070]
[52.36209869 -147.67088318]
[50.08338928 -162.49678040]
[47.80467987 -177.32269287]
[38.06074142 -189.78729248]
[43.77478790 -203.54225159]
[41.49607849 -218.36814880]
[33.11372757 -233.10493469]
[44.95411682 -245.23924255]
[59.89196014 -237.22068787]
[56.32198334 -220.64686584]
[58.60069275 -205.82095337]
[68.18164062 -194.41680908]
[62.63058472 -179.60139465]
[64.90929413 -164.77549744]
[67.18800354 -149.94958496]
[69.46671295 -135.12368774]
[82.92056274 -131.72969055]
[94.09950256 -123.43750000]
[101.29562378 -111.47284698]
[103.39386749 -97.62561798]
[100.04470825 -83.98204803]
[91.72186279 -72.61045837]
[79.65558624 -65.24768066]
[81.70793915 -50.38874817]
[83.76029205 -35.52981567]
[85.81264496 -20.67088509]
[87.86499023 -5.81195402]
[89.91734314 9.04697800]
[91.96969604 23.90590858]
[94.02204895 38.76483917]
[96.07440186 53.62377167]
[98.12675476 68.48270416]
[124.12793732 85.67736053]
[120.81195068 113.01163483]
[130.49264526 124.46955872]
[145.99967957 125.94260406]
[155.65406799 137.70046997]
[154.15417480 152.47497559]
[163.83488464 163.93290710]
[173.51557922 175.39082336]
[183.19627380 186.84875488]
[192.87698364 198.30667114]
[202.55767822 209.76460266]
[217.37426758 215.31251526]
[219.67796326 230.02789307]
[229.35865784 241.48582458]
[239.03936768 252.94374084]
[248.72006226 264.40167236]
[258.40075684 275.85958862]
[268.08148193 287.31750488]
[287.33511353 293.28036499]
[289.93710327 312.43835449]
[299.96270752 323.59570312]
[309.98834229 334.75308228]
[320.01397705 345.91046143]
[330.03958130 357.06784058]
[340.92141724 357.01980591]
[349.84832764 362.85040283]
[354.00302124 372.43103027]
[352.23434448 382.49996948]
[361.91503906 393.95788574]
[371.76934814 405.26684570]
[381.79498291 416.42422485]
[391.82058716 427.58160400]
[401.84622192 438.73895264]
[411.87182617 449.89633179]
[424.35974121 458.20608521]
[438.52337646 463.14486694]
[452.68701172 468.08361816]
[462.19647217 462.79333496]
[472.82858276 463.59570312]
[481.08877563 469.98468018]
[484.39553833 479.65820312]
[498.40197754 485.02661133]
[514.50415039 481.92001343]
[525.03973389 494.48718262]
[519.17059326 509.80007935]
[502.93441772 512.10614014]
[493.03356934 499.03305054]
[479.02713013 493.66464233]
[460.20687866 498.09155273]
[447.74826050 482.24725342]
[433.58462524 477.30850220]
[419.42098999 472.36972046]
[409.74029541 483.82766724]
[416.97460938 496.96783447]
[424.20892334 510.10803223]
[431.44323730 523.24822998]
[438.67758179 536.38842773]
[445.91189575 549.52862549]
[453.14620972 562.66882324]
[462.85653687 562.55786133]
[471.88534546 565.97277832]
[479.00573730 572.40447998]
[483.26666260 580.93695068]
[484.11984253 590.37774658]
[481.48992920 599.42462158]
[475.77920532 606.84503174]
[482.19900513 620.40179443]
[495.98831177 629.27795410]
[494.92581177 645.64263916]
[480.10449219 652.66125488]
[466.77127075 643.11364746]
[468.64221191 626.82159424]
[462.22241211 613.26477051]
[442.46578979 608.03668213]
[432.84930420 589.67169189]
[440.00601196 569.90313721]
[432.77169800 556.76293945]
[425.53738403 543.62274170]
[418.30307007 530.48254395]
[411.06872559 517.34234619]
[403.83441162 504.20217896]
[396.60009766 491.06198120]
[393.04287720 481.64801025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[9 151]
[10 150]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 128]
[35 125]
[36 124]
[44 74]
[45 73]
[46 72]
[48 70]
[49 69]
[50 67]
[51 66]
[52 65]
[53 64]
[55 63]
[56 62]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[90 106]
[91 105]
[92 104]
[93 103]
[95 101]
[96 100]
[157 174]
[158 173]
[159 172]
[163 170]
[164 169]
[175 204]
[176 203]
[177 202]
[178 201]
[179 200]
[180 199]
[181 198]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
