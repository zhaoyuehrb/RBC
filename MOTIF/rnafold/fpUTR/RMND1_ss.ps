%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCAGAGUUCAGUGCGGCUGCGCAGUAGCGGGGGUGGGCGGGAGCGCCCUUCCAGGAGAUGGGUUGGCUGCAGUAGUGAGAGGCUGGGGGUGCGGCUCUUUCCCUGCAGUCCUGCCGAGGAAGCGUGCGUCCCUGGCGCUUCCUUCUUCUCUUCCGGCGGAGAGCUUGGGAUGUGGUA\
) } def
/len { sequence length } bind def

/coor [
[102.73811340 367.95095825]
[104.86593628 352.83688354]
[113.34793854 340.14758301]
[126.49999237 332.40252686]
[125.19985962 317.45895386]
[116.38854218 305.45022583]
[122.90058136 291.03134155]
[121.60045624 276.08779907]
[120.30032349 261.14425659]
[119.00019073 246.20071411]
[117.70005798 231.25715637]
[116.39992523 216.31361389]
[104.86495972 206.96052551]
[103.33356476 191.82415771]
[113.22215271 179.78865051]
[111.92201996 164.84509277]
[110.62188721 149.90155029]
[109.19212341 134.96984863]
[107.63282776 120.05110931]
[93.86340332 114.10106659]
[81.93016052 123.18939209]
[69.99692535 132.27772522]
[58.06368256 141.36605835]
[56.19279480 157.05921936]
[43.72164536 166.76725769]
[28.04914093 164.73056030]
[18.47350121 152.15745544]
[20.67578316 136.50737000]
[33.34941483 127.06519318]
[48.97534943 129.43281555]
[60.90859222 120.34448242]
[72.84183502 111.25614929]
[84.77507782 102.16782379]
[79.79457092 88.01880646]
[64.79965210 88.40929413]
[49.80473709 88.79978180]
[36.21065903 96.89370728]
[23.28628159 89.49034882]
[8.29136467 89.88083649]
[-6.70355177 90.27132416]
[-21.69846725 90.66181183]
[-36.69338608 91.05229187]
[-50.38693237 100.07553101]
[-64.92483521 92.48728180]
[-65.35174561 76.09369659]
[-51.22849274 67.75907898]
[-37.08386993 76.05738068]
[-22.08895302 75.66689301]
[-7.09403706 75.27640533]
[7.90087938 74.88591766]
[22.89579582 74.49543762]
[35.41733551 66.42943573]
[49.41424942 73.80486298]
[64.40916443 73.41437531]
[79.40408325 73.02389526]
[92.28462982 65.33679199]
[99.74701691 52.32476807]
[107.20941162 39.31274414]
[114.67179871 26.30072212]
[122.13418579 13.28869915]
[129.59657288 0.27667665]
[121.49123383 -17.56655693]
[129.11064148 -37.11809921]
[149.69836426 -45.86861801]
[149.95870972 -60.86635971]
[150.21903992 -75.86409760]
[142.72242737 -89.79647827]
[150.67945862 -102.38755035]
[150.93978882 -117.38529205]
[151.06996155 -132.38471985]
[151.06996155 -147.38471985]
[151.06996155 -162.38471985]
[151.06996155 -177.38471985]
[151.06996155 -192.38471985]
[151.06996155 -207.38471985]
[143.53684998 -213.13504028]
[139.56781006 -221.58885193]
[139.94430542 -230.78248596]
[144.45423889 -238.64425659]
[151.96842957 -243.46134949]
[152.74913025 -258.44100952]
[153.52984619 -273.42068481]
[154.31054688 -288.40036011]
[155.09124756 -303.38003540]
[155.74192810 -318.36590576]
[156.26252747 -333.35687256]
[156.78312683 -348.34783936]
[157.30372620 -363.33880615]
[146.34109497 -374.72283936]
[146.72257996 -390.52252197]
[158.22187805 -401.36416626]
[174.01664734 -400.81567383]
[184.73612976 -389.20239258]
[184.02066040 -373.41430664]
[172.29469299 -362.81820679]
[171.77409363 -347.82723999]
[171.25349426 -332.83627319]
[170.73289490 -317.84530640]
[173.65090942 -311.03295898]
[170.07092285 -302.59933472]
[169.29020691 -287.61965942]
[168.50950623 -272.63998413]
[167.72880554 -257.66030884]
[166.94808960 -242.68064880]
[177.92141724 -225.21754456]
[166.06996155 -207.38471985]
[166.06996155 -192.38471985]
[166.06996155 -177.38471985]
[166.06996155 -162.38471985]
[166.06996155 -147.38471985]
[166.06996155 -132.38471985]
[169.22267151 -125.67777252]
[165.93753052 -117.12494659]
[165.67720032 -102.12720490]
[173.19242859 -89.26756287]
[165.21678162 -75.60375977]
[164.95645142 -60.60601807]
[164.69610596 -45.60828018]
[175.70874023 -35.42387772]
[190.64044189 -36.85364532]
[205.57214355 -38.28341293]
[220.50384521 -39.71318054]
[235.43554688 -41.14294815]
[250.36724854 -42.57271576]
[265.29895020 -44.00248337]
[280.23065186 -45.43225098]
[295.16235352 -46.86201859]
[310.09405518 -48.29178619]
[317.06811523 -62.05282211]
[330.38638306 -69.83916473]
[345.79907227 -69.16622162]
[358.38803101 -60.24872589]
[364.13616943 -45.93221664]
[361.20928955 -30.78504372]
[350.54135132 -19.64060974]
[335.53643799 -16.05506706]
[320.98257446 -21.17254829]
[311.52383423 -33.36008072]
[296.59213257 -31.93031502]
[281.66043091 -30.50054741]
[266.72872925 -29.07077980]
[251.79701233 -27.64101219]
[236.86531067 -26.21124458]
[221.93360901 -24.78147697]
[207.00190735 -23.35170937]
[192.07020569 -21.92194176]
[177.13850403 -20.49217415]
[172.29348755 -2.82666826]
[158.66387939 7.64252901]
[142.60859680 7.73906660]
[135.14620972 20.75108910]
[127.68382263 33.76311111]
[120.22142792 46.77513504]
[112.75904083 59.78715897]
[105.29665375 72.79917908]
[122.55155945 118.49181366]
[124.11085510 133.41055298]
[128.12493896 141.64643860]
[125.56543732 148.60142517]
[126.86557007 163.54496765]
[128.16569519 178.48851013]
[139.98422241 188.63545227]
[141.08985901 203.80885315]
[131.34347534 215.01347351]
[132.64360046 229.95703125]
[133.94374084 244.90057373]
[135.24386597 259.84411621]
[136.54400635 274.78768921]
[137.84413147 289.73123169]
[146.74845886 302.80883789]
[140.14341736 316.15884399]
[141.44354248 331.10238647]
[155.73554993 336.45974731]
[166.28152466 347.49356079]
[170.98756409 362.01306152]
[168.91926575 377.13540649]
[160.48730469 389.85800171]
[147.36584473 397.65481567]
[132.16017151 398.97775269]
[117.88937378 393.56414795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[7 169]
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[15 161]
[16 160]
[17 159]
[18 157]
[19 156]
[20 33]
[21 32]
[22 31]
[23 30]
[34 55]
[35 54]
[36 53]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[64 118]
[65 117]
[66 116]
[68 114]
[69 113]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 98]
[86 97]
[87 96]
[88 95]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
