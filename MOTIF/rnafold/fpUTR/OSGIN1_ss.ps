%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCCUCUGGCCUCUCAGAGCCUCUUGGAUCCCCACAGGGUAAUGGGUGUCCCGAUCUCGCGGGGGACUCUGUGAUCCGUGUUCCCCUGACCCUCCUAGUGCACAACUUGGCCGGGCUCACUGGGCUCCUGCACCACUGCCUGUCAGGUCCGCUGCCAGCCCCAAGCCCCCCACCAGCC\
) } def
/len { sequence length } bind def

/coor [
[178.22218323 294.33587646]
[168.05760193 283.30496216]
[161.18917847 269.96984863]
[158.11065674 255.28916931]
[159.04331970 240.31819153]
[163.92013550 226.13310242]
[172.39054871 213.75358582]
[183.84564209 204.06954956]
[197.46199036 197.77709961]
[212.26080322 195.32856750]
[227.18269348 196.90106201]
[214.83793640 188.38008118]
[202.49317932 179.85911560]
[190.14842224 171.33813477]
[178.00405884 180.04443359]
[163.58671570 184.07800293]
[148.63130188 182.93342590]
[134.94430542 176.72959900]
[124.18561554 166.19770813]
[117.66725159 152.59509277]
[116.19333649 137.55516052]
[119.96097565 122.89124298]
[107.61621857 114.37027740]
[96.03823090 115.77390289]
[86.49751282 109.06610870]
[83.90017700 97.69624329]
[71.70433807 88.96347046]
[55.97948074 87.22006989]
[50.13603592 73.51957703]
[37.94019318 64.78679657]
[25.74435234 56.05401611]
[14.51673222 62.49295044]
[1.73300576 64.19203949]
[-10.69620991 60.93309402]
[-20.92681313 53.23628616]
[-27.45481300 42.27746964]
[-29.33738899 29.70865822]
[-26.32891464 17.40901184]
[-38.21606827 8.26048183]
[-50.10322189 -0.88804835]
[-61.99037170 -10.03657818]
[-73.87752533 -19.18510818]
[-89.53283691 -21.47023010]
[-94.89990997 -35.36425018]
[-106.78706360 -44.51277924]
[-118.67421722 -53.66130829]
[-131.30572510 -61.75111008]
[-144.58757019 -68.72195435]
[-157.86941528 -75.69280243]
[-171.15124512 -82.66365051]
[-186.96640015 -82.22587585]
[-194.64013672 -94.99156952]
[-207.92198181 -101.96241760]
[-221.20381165 -108.93326569]
[-234.48565674 -115.90411377]
[-247.76750183 -122.87496185]
[-262.77972412 -117.93444061]
[-276.85058594 -125.13069916]
[-281.63211060 -140.19432068]
[-274.28750610 -154.18832397]
[-259.17416382 -158.81031799]
[-245.25860596 -151.31814575]
[-240.79664612 -136.15679932]
[-227.51481628 -129.18595886]
[-214.23297119 -122.21510315]
[-200.95112610 -115.24426270]
[-187.66928101 -108.27341461]
[-172.80415344 -109.20979309]
[-164.18040466 -95.94549561]
[-150.89855957 -88.97464752]
[-137.61672974 -82.00379944]
[-124.33488464 -75.03295135]
[-130.71600342 -88.60797119]
[-129.56877136 -103.56403351]
[-121.19187927 -116.00701141]
[-107.76642609 -122.69709778]
[-92.78802490 -121.89239502]
[-80.15662384 -113.80242157]
[-73.16107941 -100.53357697]
[-73.62282562 -85.54068756]
[-81.42163849 -72.72747040]
[-94.52693176 -65.43013000]
[-109.52568817 -65.54846191]
[-97.63853455 -56.39993286]
[-85.75138092 -47.25140381]
[-70.94631958 -45.62064362]
[-64.72899628 -31.07226181]
[-52.84184265 -21.92373085]
[-40.95468903 -12.77520084]
[-29.06753731 -3.62667084]
[-17.18038559 5.52185917]
[-1.53643656 -1.61760485]
[15.65860939 0.14311607]
[29.67436218 10.40999794]
[36.60941696 26.43658447]
[34.47713470 43.85817719]
[46.67297363 52.59095383]
[58.86881638 61.32373428]
[73.72134399 62.44250870]
[80.43711853 76.76762390]
[92.63295746 85.50040436]
[109.35407257 86.69538116]
[116.13718414 102.02552032]
[128.48194885 110.54648590]
[140.85691833 101.82379150]
[155.44215393 97.86869049]
[170.47225952 99.13991547]
[184.13484192 105.46480560]
[194.78900146 116.06246185]
[201.16246033 129.64015198]
[202.50346375 144.55090332]
[198.66938782 158.99337769]
[211.01414490 167.51435852]
[223.35890198 176.03532410]
[235.70365906 184.55628967]
[249.38215637 190.71249390]
[263.94628906 194.30223083]
[278.51040649 197.89195251]
[293.07455444 201.48168945]
[307.63867188 205.07142639]
[316.44580078 197.03984070]
[327.92193604 194.29690552]
[339.17764282 197.41389465]
[347.43646240 205.50149536]
[350.71957397 216.45951843]
[365.15109253 220.54980469]
[379.58264160 224.64010620]
[394.01419067 228.73039246]
[408.44573975 232.82069397]
[417.64935303 226.96293640]
[428.33746338 227.14842224]
[436.96948242 233.07336426]
[440.81942749 242.57278442]
[455.10119629 247.15876770]
[469.38296509 251.74473572]
[479.25567627 241.81565857]
[492.38250732 237.13662720]
[506.17797852 238.56861877]
[517.95098877 245.77487183]
[525.42962646 257.29785156]
[527.19982910 270.85372925]
[541.40026855 275.68554688]
[555.60076904 280.51733398]
[569.80126953 285.34915161]
[586.74377441 284.72720337]
[592.03161621 300.83544922]
[578.01666260 310.37579346]
[564.96942139 299.54962158]
[550.76898193 294.71783447]
[536.56848145 289.88601685]
[522.36798096 285.05419922]
[510.48696899 295.98895264]
[494.62292480 299.46725464]
[479.07818604 294.44906616]
[468.11721802 282.21173096]
[464.79696655 266.02648926]
[450.51519775 261.44052124]
[436.23345947 256.85455322]
[417.70550537 262.33383179]
[404.35543823 247.25222778]
[389.92388916 243.16194153]
[375.49237061 239.07164001]
[361.06082153 234.98135376]
[346.62927246 230.89105225]
[331.23706055 240.76576233]
[313.19955444 236.20104980]
[304.04895020 219.63555908]
[289.48480225 216.04582214]
[274.92068481 212.45608521]
[260.35656738 208.86634827]
[245.79243469 205.27661133]
[256.86157227 215.39956665]
[264.84329224 228.09965515]
[269.16378784 242.46395874]
[269.51254272 257.45989990]
[265.86444092 272.00952148]
[258.48175049 285.06692505]
[247.89515686 295.69348145]
[234.86567688 303.12533569]
[220.32991028 306.82824707]
[205.33274841 306.53601074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 115]
[12 114]
[13 113]
[14 112]
[22 104]
[23 103]
[26 101]
[27 100]
[29 98]
[30 97]
[31 96]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[44 85]
[45 84]
[46 83]
[47 72]
[48 71]
[49 70]
[50 69]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[116 171]
[117 170]
[118 169]
[119 168]
[120 167]
[125 164]
[126 163]
[127 162]
[128 161]
[129 160]
[133 158]
[134 157]
[135 156]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
