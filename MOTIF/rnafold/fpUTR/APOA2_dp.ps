%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOA2)
} def

/sequence { (\
AGGCACAGACACCAAGGACAGAGACGCUGGCUAGGCCGCCCUCCCCACUGUUACCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.004295164 ubox
1 49 0.004660178 ubox
1 52 0.006384981 ubox
2 13 0.523690376 ubox
2 28 0.004883655 ubox
2 32 0.012006211 ubox
2 37 0.032491233 ubox
2 40 0.021411697 ubox
2 41 0.004508850 ubox
2 44 0.005751487 ubox
2 45 0.010933459 ubox
2 46 0.010896401 ubox
2 48 0.004484950 ubox
2 52 0.031924399 ubox
2 55 0.651117371 ubox
3 12 0.523790127 ubox
3 27 0.006005537 ubox
3 31 0.012477930 ubox
3 36 0.032532012 ubox
3 39 0.021553581 ubox
3 40 0.004037410 ubox
3 43 0.005736702 ubox
3 44 0.010965703 ubox
3 45 0.010805356 ubox
3 51 0.034463123 ubox
3 54 0.650758725 ubox
4 26 0.006014821 ubox
4 30 0.012479803 ubox
4 35 0.032427406 ubox
4 38 0.021609816 ubox
4 50 0.035140123 ubox
5 49 0.032148630 ubox
5 51 0.575034879 ubox
6 29 0.012553174 ubox
6 50 0.591816968 ubox
7 28 0.012626875 ubox
7 32 0.029928526 ubox
7 42 0.004346480 ubox
7 49 0.591471441 ubox
7 52 0.050758139 ubox
8 27 0.012592510 ubox
8 31 0.030160584 ubox
8 41 0.004475317 ubox
8 48 0.589170994 ubox
8 51 0.038448264 ubox
8 52 0.442844428 ubox
9 51 0.462669336 ubox
10 29 0.007255452 ubox
10 50 0.465550150 ubox
11 28 0.006431633 ubox
11 49 0.448995900 ubox
11 51 0.065173116 ubox
12 30 0.033460159 ubox
12 35 0.027895688 ubox
12 50 0.068753398 ubox
13 29 0.033485773 ubox
13 34 0.028062644 ubox
13 50 0.065235340 ubox
14 28 0.025771757 ubox
14 49 0.061927408 ubox
14 52 0.012351110 ubox
15 28 0.026631158 ubox
15 32 0.027883194 ubox
15 42 0.202067410 ubox
15 49 0.120452568 ubox
15 51 0.011467285 ubox
15 52 0.008178851 ubox
16 27 0.034228617 ubox
16 28 0.006296311 ubox
16 31 0.028343746 ubox
16 32 0.022214296 ubox
16 37 0.003864634 ubox
16 40 0.032163316 ubox
16 41 0.209457939 ubox
16 42 0.006328267 ubox
16 43 0.003776367 ubox
16 44 0.100554670 ubox
16 45 0.353690552 ubox
16 46 0.665648798 ubox
16 48 0.134953285 ubox
16 49 0.025754769 ubox
16 51 0.004390675 ubox
16 52 0.020291056 ubox
16 55 0.332881064 ubox
17 27 0.008003349 ubox
17 31 0.022704694 ubox
17 36 0.003842512 ubox
17 39 0.031997355 ubox
17 40 0.209188130 ubox
17 41 0.006619817 ubox
17 43 0.097669844 ubox
17 44 0.354239171 ubox
17 45 0.666167793 ubox
17 48 0.029956884 ubox
17 51 0.012774688 ubox
17 52 0.399542697 ubox
17 54 0.327398814 ubox
18 42 0.086652187 ubox
18 51 0.501787359 ubox
19 29 0.063456591 ubox
19 50 0.514637956 ubox
20 28 0.068961334 ubox
20 42 0.055546327 ubox
20 49 0.514057667 ubox
20 52 0.008966408 ubox
21 27 0.069926321 ubox
21 41 0.062978511 ubox
21 43 0.797109831 ubox
21 48 0.483952338 ubox
21 51 0.004849096 ubox
21 52 0.014994092 ubox
22 28 0.023598547 ubox
22 32 0.005372985 ubox
22 42 0.809274507 ubox
22 49 0.025871981 ubox
22 51 0.010537967 ubox
22 52 0.014019494 ubox
23 27 0.024580951 ubox
23 31 0.005428117 ubox
23 41 0.808169599 ubox
23 43 0.190401975 ubox
23 48 0.026893893 ubox
23 51 0.011262136 ubox
23 52 0.237291124 ubox
24 42 0.187270401 ubox
24 51 0.246442192 ubox
25 38 0.047432591 ubox
25 50 0.247777462 ubox
26 36 0.066302703 ubox
26 37 0.033063208 ubox
26 39 0.838095011 ubox
26 49 0.240040197 ubox
26 51 0.007716648 ubox
27 34 0.005825428 ubox
27 35 0.073733974 ubox
27 38 0.820183444 ubox
27 50 0.008017544 ubox
28 33 0.005924606 ubox
28 34 0.072843359 ubox
28 38 0.238548590 ubox
28 47 0.350492821 ubox
29 37 0.857569654 ubox
29 40 0.354968295 ubox
29 41 0.024585280 ubox
29 44 0.013481420 ubox
29 45 0.013701811 ubox
29 46 0.353645659 ubox
30 36 0.858135196 ubox
30 39 0.358892262 ubox
30 40 0.017892366 ubox
30 43 0.013618581 ubox
30 44 0.014924299 ubox
30 45 0.353517627 ubox
31 35 0.851894139 ubox
31 38 0.358933239 ubox
33 42 0.351237412 ubox
34 40 0.022506665 ubox
34 41 0.354297090 ubox
34 42 0.005959412 ubox
34 43 0.008706942 ubox
34 44 0.012189686 ubox
34 45 0.010425329 ubox
34 46 0.007548699 ubox
34 55 0.005088000 ubox
35 39 0.024633862 ubox
35 40 0.349983601 ubox
35 41 0.006455587 ubox
35 42 0.006766590 ubox
35 43 0.012131459 ubox
35 44 0.010497789 ubox
35 45 0.007477491 ubox
35 54 0.005086863 ubox
38 51 0.005209603 ubox
39 50 0.005288506 ubox
49 56 0.055392616 ubox
50 55 0.060034807 ubox
50 58 0.037880415 ubox
51 57 0.038105776 ubox
52 56 0.032075256 ubox
2 55 0.9500000 lbox
3 54 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
showpage
end
%%EOF
