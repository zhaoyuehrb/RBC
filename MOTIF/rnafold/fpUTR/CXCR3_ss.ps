%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACCACAAGCACCAAAGCAGAGGGGCAGGCAGCACACCACCCAGCAGCCAGAGCACCAGCCCAGCCAUGGUCCUUGAGGGGUCCCUGGGCCGAUGGGAUCACGCAGAAGAAUGCGAGAGAAGCAGCCUUUGAGAAGGGAAGUCACUAUCCCAGAGCCCAGGCUGAGCGG\
) } def
/len { sequence length } bind def

/coor [
[-171.51597595 176.64112854]
[-178.49035645 171.24223328]
[-184.17568970 164.51243591]
[-188.32403564 156.75177002]
[-190.75579834 148.30505371]
[-205.75579834 148.30505371]
[-219.55596924 156.04234314]
[-232.28323364 148.30505371]
[-247.28323364 148.30505371]
[-262.28323364 148.30505371]
[-277.28323364 148.30505371]
[-291.08340454 156.04234314]
[-303.81066895 148.30505371]
[-318.81066895 148.30505371]
[-333.81066895 148.30505371]
[-348.81066895 148.30505371]
[-359.94381714 159.19960022]
[-375.15594482 158.98591614]
[-385.47363281 148.30505371]
[-400.47363281 148.30505371]
[-407.74114990 156.46006775]
[-418.08984375 159.19259644]
[-428.01901245 155.82926941]
[-434.30682373 147.71762085]
[-449.29681396 147.16979980]
[-464.28680420 146.62196350]
[-479.28619385 146.75895691]
[-494.26367188 147.58045959]
[-510.58731079 159.36720276]
[-527.46746826 149.97998047]
[-542.40496826 151.34796143]
[-557.34240723 152.71594238]
[-570.37945557 161.67955017]
[-583.75933838 155.13520813]
[-598.69683838 156.50317383]
[-605.05828857 170.48271179]
[-617.56652832 179.39556885]
[-632.85699463 180.84420776]
[-646.81646729 174.43896484]
[-655.69006348 161.90283203]
[-657.09082031 146.60794067]
[-650.64184570 132.66854858]
[-638.07794189 123.83429718]
[-622.77874756 122.48153687]
[-608.85961914 128.97416687]
[-600.06481934 141.56568909]
[-585.12731934 140.19770813]
[-573.15869141 131.33193970]
[-558.71038818 137.77844238]
[-543.77294922 136.41047668]
[-528.83544922 135.04249573]
[-523.00134277 126.59864807]
[-513.27124023 122.69657135]
[-502.78842163 124.85823059]
[-495.08517456 132.60298157]
[-480.10769653 131.78146362]
[-489.19851685 119.85012817]
[-485.72027588 105.25897217]
[-472.22454834 98.71183777]
[-458.61157227 105.01158905]
[-454.86761475 119.53683472]
[-463.73898315 131.63197327]
[-448.74899292 132.17979431]
[-433.75900269 132.72763062]
[-417.41830444 122.43000793]
[-400.47363281 133.30505371]
[-385.47363281 133.30505371]
[-375.15594482 122.62417603]
[-359.94381714 122.41049957]
[-348.81066895 133.30505371]
[-333.81066895 133.30505371]
[-318.81066895 133.30505371]
[-303.81066895 133.30505371]
[-291.08340454 125.56774902]
[-277.28323364 133.30505371]
[-262.28323364 133.30505371]
[-247.28323364 133.30505371]
[-232.28323364 133.30505371]
[-219.55596924 125.56774902]
[-205.75579834 133.30505371]
[-190.75579834 133.30505371]
[-181.59223938 113.65708923]
[-163.77244568 101.18830109]
[-142.03625488 99.29969025]
[-122.20767975 108.56671906]
[-109.63430786 126.56650543]
[-94.83651733 124.11180878]
[-80.03873444 121.65711212]
[-65.24094391 119.20241547]
[-50.44316101 116.74772644]
[-35.64537430 114.29302979]
[-20.84758759 111.83833313]
[-14.87574100 100.39636993]
[-3.22503734 94.40393829]
[9.94181156 96.25463867]
[19.77317810 105.49336243]
[34.61332703 103.30934143]
[49.45347977 101.12532806]
[64.29363251 98.94130707]
[79.13378143 96.75728607]
[93.97393036 94.57327271]
[88.66202545 82.65549469]
[89.50640869 68.36119843]
[97.17446136 54.14126968]
[108.87748718 44.75835419]
[120.58052063 35.37543869]
[132.28355408 25.99252510]
[133.76274109 10.25760937]
[145.98806763 0.24177557]
[161.70646667 1.88723934]
[171.59248352 14.21777630]
[169.78092957 29.91789818]
[157.34655762 39.67300034]
[141.66645813 37.69555283]
[129.96343994 47.07846832]
[118.26040649 56.46138382]
[106.55738068 65.84429932]
[108.38803101 73.11744690]
[112.04934692 87.66374969]
[113.87999725 94.93689728]
[128.63047791 97.66145325]
[141.55726624 88.97030640]
[156.47753906 91.94351959]
[164.68356323 104.32079315]
[179.43405151 107.04534149]
[192.36082458 98.35420227]
[207.28111267 101.32740784]
[215.48712158 113.70468903]
[230.23760986 116.42923737]
[244.98809814 119.15379333]
[259.73858643 121.87834167]
[274.48907471 124.60289764]
[291.16296387 121.53410339]
[298.72763062 136.70684814]
[286.24194336 148.17611694]
[271.76449585 139.35337830]
[257.01403809 136.62882996]
[242.26353455 133.90428162]
[227.51304626 131.17971802]
[212.76257324 128.45516968]
[200.67646790 137.08430481]
[185.67857361 134.53134155]
[176.70948792 121.79582977]
[161.95899963 119.07127380]
[149.87290955 127.70040894]
[134.87501526 125.14745331]
[125.90592957 112.41193390]
[111.15544891 109.68738556]
[96.15795135 109.41342163]
[81.31779480 111.59744263]
[66.47764587 113.78145599]
[51.63749695 115.96547699]
[36.79734421 118.14949036]
[21.95719528 120.33351135]
[11.79786491 134.55288696]
[-5.16563272 136.99562073]
[-18.39289284 126.63612366]
[-33.19067764 129.09082031]
[-47.98846436 131.54551697]
[-62.78625107 134.00019836]
[-77.58403778 136.45489502]
[-92.38182068 138.90959167]
[-107.17961121 141.36428833]
[-108.28085327 150.21614075]
[-111.20473480 158.63279724]
[-115.81811523 166.24378967]
[-121.91361237 172.71507263]
[-129.21887207 177.76358032]
[-137.40876770 181.16975403]
[-146.11987305 182.78697205]
[-154.96656799 182.54789734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 81]
[6 80]
[8 78]
[9 77]
[10 76]
[11 75]
[13 73]
[14 72]
[15 71]
[16 70]
[19 67]
[20 66]
[24 64]
[25 63]
[26 62]
[27 56]
[28 55]
[30 51]
[31 50]
[32 49]
[34 47]
[35 46]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[96 154]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[104 117]
[105 116]
[106 115]
[107 114]
[120 148]
[121 147]
[124 144]
[125 143]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
