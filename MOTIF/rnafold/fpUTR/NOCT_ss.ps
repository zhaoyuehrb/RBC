%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCUCGCCAGGUCUCACAGCAGACGGUGCCGACGCAGCGGUGUUGCACCUCCCUCUCCGGCUCUGCUGCCCGGGAUUUCCCCAGAACCUGCGCCGCGCGAGAAGGAGCCUGGGAGCAUCCGCCCACACUGCCCGGACAGUCGGCUCGACUCGGUGCCCUCGGCCCCAGCCGGGCUCCGCUCCUCGGGCGCGCGAGGGGCCGUGGUGGCGGCGGCGCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[334.11288452 105.85254669]
[319.04858398 106.81856537]
[305.43399048 100.07028198]
[296.96990967 87.33031464]
[281.99349976 88.17137146]
[267.01712036 89.01242828]
[252.04071045 89.85348511]
[237.06430054 90.69454193]
[222.08790588 91.53559875]
[207.16014099 93.00585938]
[192.30741882 95.10271454]
[177.45469666 97.19956970]
[162.60198975 99.29642487]
[147.74926758 101.39328003]
[141.57139587 105.43687439]
[132.67370605 103.41387177]
[117.79303741 105.30222321]
[106.97401428 125.25195312]
[77.13356781 124.92953491]
[62.90723038 129.68467712]
[48.68089294 134.43980408]
[34.45455551 139.19494629]
[20.22821808 143.95008850]
[6.00188065 148.70521545]
[-8.22445679 153.46035767]
[-12.12902927 173.50285339]
[-36.78810883 183.99583435]
[-50.11479187 190.88055420]
[-63.44147873 197.76528931]
[-76.76816559 204.65000916]
[-90.09484863 211.53474426]
[-96.27555847 218.24743652]
[-103.65705872 218.42109680]
[-117.07898712 225.11824036]
[-130.50091553 231.81539917]
[-143.92285156 238.51254272]
[-157.34477234 245.20970154]
[-165.93559265 259.17858887]
[-182.31866455 258.45275879]
[-189.64050293 243.77888489]
[-180.36901855 230.25218201]
[-164.04193115 231.78776550]
[-150.61999512 225.09062195]
[-137.19807434 218.39346313]
[-123.77613831 211.69631958]
[-110.35420990 204.99916077]
[-96.97957611 198.20805359]
[-83.65289307 191.32333374]
[-70.32620239 184.43859863]
[-56.99951935 177.55387878]
[-43.67283630 170.66914368]
[-45.23903275 163.33450317]
[-48.37142563 148.66520691]
[-49.93762207 141.33056641]
[-64.91402435 140.48950195]
[-77.78637695 150.06457520]
[-93.26085663 145.83137512]
[-99.46676636 131.03724670]
[-91.64346313 117.03098297]
[-75.79231262 114.55699158]
[-64.07296753 125.51310730]
[-49.09656525 126.35416412]
[-25.21861839 125.54969025]
[-12.97959328 139.23402405]
[1.24674463 134.47888184]
[15.47308254 129.72373962]
[29.69941902 124.96860504]
[43.92575836 120.21347046]
[58.15209579 115.45833588]
[72.37843323 110.70320129]
[73.58284760 103.30053711]
[61.96546173 93.81179047]
[75.99167633 88.49521637]
[77.19609833 81.09255981]
[65.21093750 72.07279968]
[53.22578049 63.05304337]
[37.20318222 63.86293030]
[26.68846321 51.74599075]
[29.74761581 35.99730301]
[44.03392029 28.69791412]
[58.58814621 35.44728851]
[62.24553680 51.06788635]
[74.23069763 60.08764267]
[86.21585083 69.10739899]
[107.85494232 75.00804138]
[115.90469360 90.42155457]
[130.78535461 88.53321075]
[145.65240479 86.54055786]
[160.50512695 84.44370270]
[175.35784912 82.34684753]
[190.21055603 80.24999237]
[205.06327820 78.15313721]
[193.71952820 68.33890533]
[192.50843811 53.38787460]
[202.12467957 41.87580109]
[217.05249023 40.40587997]
[228.72941589 49.82124710]
[230.45773315 64.72134399]
[221.24684143 76.55919647]
[236.22325134 75.71813965]
[251.19964600 74.87708282]
[266.17605591 74.03602600]
[281.15246582 73.19496918]
[296.12884521 72.35391235]
[303.11328125 58.74637604]
[315.88671875 50.51617432]
[330.96444702 49.78945160]
[344.29235840 56.66135788]
[352.33691406 69.19734192]
[367.31329346 68.35628510]
[382.28970337 67.51522827]
[390.67312622 63.91246414]
[397.48175049 66.76889038]
[412.46847534 66.13794708]
[427.45520020 65.50701141]
[440.91772461 57.19609070]
[453.95916748 64.39120483]
[468.94589233 63.76026535]
[479.61093140 52.40706635]
[494.81857300 51.98069763]
[505.57638550 62.21813202]
[520.56311035 61.58719254]
[535.54986572 60.95625687]
[550.53656006 60.32531738]
[565.52331543 59.69438171]
[576.18829346 48.34118271]
[591.39599609 47.91481400]
[602.15380859 58.15224838]
[617.14050293 57.52130890]
[632.12725830 56.89037323]
[645.58972168 48.57944870]
[658.63122559 55.77456284]
[673.61791992 55.14362335]
[688.60467529 54.51268768]
[703.59136963 53.88175201]
[709.06835938 42.65673447]
[718.73956299 34.86773300]
[730.73382568 31.94312859]
[742.76342773 34.37761688]
[752.56085205 41.64975357]
[758.30578613 52.33213806]
[773.30432129 52.12177277]
[784.28356934 41.07215500]
[799.49719238 41.07247162]
[809.96368408 51.60759354]
[824.96215820 51.39722443]
[839.96069336 51.18685532]
[854.95922852 50.97649002]
[869.95776367 50.76612091]
[884.95629883 50.55575562]
[897.64495850 36.47776031]
[916.27490234 36.16038513]
[928.99151611 49.33807373]
[943.97827148 48.70713425]
[958.96496582 48.07619858]
[972.42749023 39.76527405]
[985.46893311 46.96038818]
[1000.45568848 46.32944870]
[1015.44238281 45.69851303]
[1030.42907715 45.06757355]
[1036.19274902 41.85961914]
[1041.86181641 42.01374435]
[1045.84375000 44.63508224]
[1060.84228516 44.42471313]
[1075.84082031 44.21434402]
[1089.64172363 35.35622025]
[1104.08752441 43.11851883]
[1104.31750488 59.51605225]
[1090.09509277 67.68045044]
[1076.05126953 59.21287155]
[1061.05273438 59.42323685]
[1046.05419922 59.63360596]
[1031.06005859 60.05429840]
[1016.07336426 60.68523788]
[1001.08660889 61.31617355]
[986.09991455 61.94711304]
[973.70935059 70.21290588]
[959.59594727 63.06292343]
[944.60919189 63.69385910]
[929.62249756 64.32479858]
[923.91241455 74.18940735]
[914.04962158 80.13792419]
[902.42095947 80.59576416]
[891.90667725 75.33390045]
[885.16662598 65.55427551]
[870.16815186 65.76464844]
[855.16961670 65.97501373]
[840.17108154 66.18537903]
[825.17254639 66.39575195]
[810.17401123 66.60611725]
[800.00714111 77.43064117]
[784.79949951 77.85764313]
[773.51470947 67.12029266]
[758.51617432 67.33066559]
[749.01141357 82.22339630]
[732.32000732 88.47766113]
[715.06701660 83.40917206]
[704.22229004 68.86847687]
[689.23559570 69.49941254]
[674.24884033 70.13034821]
[659.26214600 70.76128387]
[646.87158203 79.02707672]
[632.75817871 71.87709808]
[617.77142334 72.50803375]
[602.78472900 73.13896942]
[592.92541504 84.24437714]
[577.73577881 85.09773254]
[566.15423584 74.68110657]
[551.16748047 75.31204224]
[536.18078613 75.94297791]
[521.19403076 76.57392120]
[506.20733643 77.20485687]
[496.34805298 88.31026459]
[481.15835571 89.16361237]
[469.57684326 78.74698639]
[454.59011841 79.37792969]
[442.19955444 87.64372253]
[428.08615112 80.49373627]
[413.09942627 81.12467194]
[398.11270142 81.75561523]
[383.13076782 82.49163055]
[368.15435791 83.33268738]
[353.17794800 84.17374420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 104]
[5 103]
[6 102]
[7 101]
[8 100]
[9 99]
[10 92]
[11 91]
[12 90]
[13 89]
[14 88]
[16 87]
[17 86]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[54 62]
[55 61]
[74 84]
[75 83]
[76 82]
[109 223]
[110 222]
[111 221]
[113 220]
[114 219]
[115 218]
[117 216]
[118 215]
[121 212]
[122 211]
[123 210]
[124 209]
[125 208]
[128 205]
[129 204]
[130 203]
[132 201]
[133 200]
[134 199]
[135 198]
[141 194]
[142 193]
[145 190]
[146 189]
[147 188]
[148 187]
[149 186]
[150 185]
[153 180]
[154 179]
[155 178]
[157 176]
[158 175]
[159 174]
[160 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
