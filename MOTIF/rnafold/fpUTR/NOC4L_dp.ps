%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOC4L)
} def

/sequence { (\
AGUGGUGACGUCACGGGAGCGCCGGCGGCUGAGAAUCCGCGUUGUUCCGUGUUGGGGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.008502362 ubox
2 9 0.061850756 ubox
2 11 0.009958518 ubox
2 14 0.067665310 ubox
2 20 0.004266768 ubox
2 22 0.019412463 ubox
2 26 0.005276960 ubox
2 29 0.009013169 ubox
2 40 0.333400093 ubox
2 59 0.051649863 ubox
2 62 0.887710588 ubox
3 8 0.061434218 ubox
3 10 0.026440014 ubox
3 13 0.071667896 ubox
3 15 0.003197283 ubox
3 19 0.003994000 ubox
3 21 0.019402461 ubox
3 24 0.138199270 ubox
3 25 0.003747860 ubox
3 28 0.008878902 ubox
3 31 0.004303923 ubox
3 39 0.333614334 ubox
3 58 0.051490948 ubox
3 60 0.042668491 ubox
3 61 0.892595220 ubox
4 9 0.036593198 ubox
4 12 0.072891496 ubox
4 14 0.004292668 ubox
4 20 0.019143604 ubox
4 23 0.181481138 ubox
4 26 0.003606641 ubox
4 30 0.007121994 ubox
4 37 0.010404511 ubox
4 38 0.333946070 ubox
4 40 0.005384288 ubox
4 59 0.055766607 ubox
5 11 0.059661360 ubox
5 14 0.064044470 ubox
5 20 0.006175717 ubox
5 22 0.181559975 ubox
5 26 0.008530956 ubox
5 29 0.007464135 ubox
5 36 0.013775326 ubox
5 37 0.333468848 ubox
5 40 0.065169243 ubox
5 59 0.901172654 ubox
5 62 0.014117020 ubox
6 10 0.016534222 ubox
6 13 0.066999079 ubox
6 19 0.006980659 ubox
6 21 0.180637976 ubox
6 24 0.009105433 ubox
6 25 0.007716755 ubox
6 28 0.007327407 ubox
6 31 0.011735830 ubox
6 35 0.074584952 ubox
6 39 0.065223479 ubox
6 54 0.006937774 ubox
6 58 0.896740214 ubox
6 60 0.008056224 ubox
6 61 0.013688121 ubox
7 12 0.067731494 ubox
7 20 0.177219441 ubox
7 23 0.011641164 ubox
7 30 0.008421181 ubox
7 37 0.012585663 ubox
7 38 0.064445622 ubox
7 40 0.003396333 ubox
7 43 0.003748356 ubox
7 53 0.016008355 ubox
7 59 0.010436772 ubox
8 36 0.019139816 ubox
8 42 0.004252953 ubox
8 52 0.016072455 ubox
9 15 0.036822542 ubox
9 21 0.021462949 ubox
9 24 0.007453507 ubox
9 27 0.057839166 ubox
9 31 0.089602296 ubox
9 39 0.004306630 ubox
9 41 0.004351760 ubox
9 51 0.012748937 ubox
9 54 0.822024530 ubox
9 60 0.077105151 ubox
10 14 0.035202860 ubox
10 20 0.024487521 ubox
10 23 0.007504729 ubox
10 26 0.057976152 ubox
10 29 0.159619508 ubox
10 30 0.007204903 ubox
10 36 0.028313389 ubox
10 38 0.004355817 ubox
10 40 0.003604786 ubox
10 50 0.006336235 ubox
10 52 0.051637940 ubox
10 53 0.702065687 ubox
10 59 0.078104854 ubox
10 62 0.009221917 ubox
11 17 0.022367855 ubox
11 18 0.147600014 ubox
11 19 0.019261492 ubox
11 25 0.056975313 ubox
11 28 0.159784042 ubox
11 32 0.074278842 ubox
11 34 0.280040777 ubox
11 35 0.021041069 ubox
11 55 0.078707292 ubox
11 56 0.003826937 ubox
11 57 0.005912731 ubox
11 58 0.077701610 ubox
11 61 0.009258625 ubox
12 16 0.028880620 ubox
12 17 0.151334488 ubox
12 24 0.043754083 ubox
12 27 0.158558864 ubox
12 31 0.073288677 ubox
12 33 0.281430306 ubox
12 51 0.901327643 ubox
12 54 0.079169091 ubox
12 55 0.004996735 ubox
12 56 0.006599347 ubox
12 57 0.065202332 ubox
12 60 0.008993230 ubox
13 30 0.063940105 ubox
13 50 0.902631738 ubox
13 52 0.086490927 ubox
13 53 0.057749499 ubox
14 21 0.034894670 ubox
14 24 0.205473437 ubox
14 27 0.009624064 ubox
14 31 0.283343524 ubox
14 39 0.006101062 ubox
14 49 0.901963026 ubox
14 51 0.102431813 ubox
14 54 0.014396919 ubox
15 20 0.035595041 ubox
15 23 0.219845473 ubox
15 26 0.009363663 ubox
15 30 0.287176423 ubox
15 38 0.008391205 ubox
15 40 0.006235047 ubox
15 48 0.817047707 ubox
15 50 0.090931322 ubox
15 53 0.013924081 ubox
16 22 0.219728343 ubox
16 23 0.046009831 ubox
16 29 0.289127781 ubox
16 30 0.011716099 ubox
16 37 0.008373882 ubox
16 38 0.011484850 ubox
16 45 0.003166713 ubox
16 47 0.722233499 ubox
16 48 0.400867569 ubox
17 22 0.046152449 ubox
17 29 0.014493914 ubox
17 36 0.007907778 ubox
17 37 0.011514662 ubox
17 45 0.007726016 ubox
17 46 0.608134376 ubox
17 47 0.553852985 ubox
18 30 0.011675283 ubox
18 36 0.011318047 ubox
18 43 0.063276095 ubox
18 45 0.578451915 ubox
18 46 0.672427062 ubox
19 26 0.290919499 ubox
19 29 0.013749437 ubox
19 42 0.121178209 ubox
19 45 0.696270208 ubox
20 25 0.290893516 ubox
20 27 0.006674378 ubox
20 28 0.013602789 ubox
20 31 0.006261890 ubox
20 41 0.123666614 ubox
20 44 0.742005416 ubox
20 60 0.006491313 ubox
21 26 0.006882839 ubox
21 29 0.019530645 ubox
21 40 0.119846881 ubox
21 42 0.481707426 ubox
21 43 0.673569251 ubox
21 45 0.026231898 ubox
21 59 0.006792703 ubox
21 62 0.010391206 ubox
22 28 0.019691270 ubox
22 39 0.091954593 ubox
22 41 0.485689610 ubox
22 44 0.029677792 ubox
22 58 0.006792586 ubox
22 61 0.010475860 ubox
23 27 0.019560163 ubox
23 31 0.012996587 ubox
23 39 0.110462125 ubox
23 41 0.572292418 ubox
23 44 0.028350729 ubox
23 57 0.006771103 ubox
23 60 0.010449709 ubox
24 30 0.012984459 ubox
24 37 0.035852812 ubox
24 38 0.133820621 ubox
24 40 0.411482420 ubox
24 43 0.029211230 ubox
24 59 0.004613874 ubox
25 29 0.012783141 ubox
25 36 0.028308856 ubox
25 37 0.132596169 ubox
25 40 0.830355824 ubox
25 42 0.030057545 ubox
26 39 0.927448462 ubox
26 41 0.030049738 ubox
26 44 0.003261559 ubox
27 37 0.014303179 ubox
27 38 0.928507240 ubox
27 40 0.023953073 ubox
27 43 0.003330274 ubox
28 36 0.016753661 ubox
28 37 0.926149931 ubox
28 40 0.025897215 ubox
28 42 0.003382218 ubox
29 39 0.031497671 ubox
29 41 0.003386223 ubox
30 39 0.006139425 ubox
31 37 0.034849541 ubox
31 38 0.011588679 ubox
32 36 0.037735848 ubox
37 61 0.003676957 ubox
38 60 0.003725830 ubox
39 59 0.003712926 ubox
40 58 0.003705429 ubox
41 62 0.407905105 ubox
42 61 0.410216409 ubox
43 60 0.411276568 ubox
44 59 0.413948493 ubox
45 57 0.009623230 ubox
45 58 0.413540061 ubox
46 56 0.014034790 ubox
46 57 0.412451507 ubox
46 58 0.007901370 ubox
47 55 0.017408514 ubox
47 56 0.413561194 ubox
47 57 0.011178880 ubox
47 61 0.004274857 ubox
48 54 0.019640745 ubox
48 55 0.413390874 ubox
48 56 0.011183400 ubox
48 60 0.004580747 ubox
49 53 0.013358482 ubox
49 59 0.006852528 ubox
49 62 0.003189569 ubox
50 58 0.006825053 ubox
50 60 0.005787698 ubox
51 59 0.007863525 ubox
51 62 0.025362544 ubox
52 58 0.007800677 ubox
52 61 0.026784363 ubox
53 57 0.005767614 ubox
53 60 0.027922895 ubox
54 59 0.028572360 ubox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
