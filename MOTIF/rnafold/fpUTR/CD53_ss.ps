%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGACAGACUGAAGAAACAUCCAAGGUGGUCUUGAAGGACACUGGGAUCCUGUAACACAGCCCCGGAUAUCUGUGUUACCAGCCUUGUCUCGGCCACCUCAAGGAUAAUCACUAAAUUCUGCCGAAAGGACUGAGGAACGGUGCCUGGAAAAGGGCAAGAAUAUCACGGC\
) } def
/len { sequence length } bind def

/coor [
[94.83290863 183.33299255]
[85.37931061 182.20294189]
[76.11582947 180.00395203]
[67.16291809 176.76466370]
[58.63700867 172.52716064]
[50.64895248 167.34657288]
[43.30262375 161.29025269]
[36.69355392 154.43695068]
[30.90768051 146.87577820]
[26.02024078 138.70506287]
[22.09478569 130.03106689]
[19.18235970 120.96655273]
[17.32083702 111.62940216]
[16.53442001 102.14103699]
[16.83333778 92.62482452]
[18.21369934 83.20452118]
[20.65756035 74.00260925]
[24.13313866 65.13875580]
[28.59524155 56.72821426]
[33.98584747 48.88034821]
[22.99894714 38.66819763]
[12.01204681 28.45604706]
[1.02514708 18.24389648]
[-18.78998375 14.67332745]
[-23.74816704 -3.99418139]
[-35.10070419 -13.79825592]
[-46.45324326 -23.60232925]
[-57.80578232 -33.40640259]
[-69.15831757 -43.21047974]
[-80.51085663 -53.01455307]
[-91.86339569 -62.81862640]
[-103.21593475 -72.62270355]
[-111.36302948 -70.45790863]
[-119.60588837 -71.69764709]
[-126.59590912 -76.06333923]
[-131.21965027 -82.77128601]
[-132.77598572 -90.67235565]
[-131.08163452 -98.44857025]
[-141.68823242 -109.05517578]
[-152.29483032 -119.66177368]
[-162.90144348 -130.26837158]
[-173.50804138 -140.87498474]
[-179.84144592 -142.97065735]
[-183.57966614 -147.31269836]
[-184.29945374 -152.06797791]
[-194.51159668 -163.05488586]
[-204.72375488 -174.04177856]
[-216.86912537 -170.90939331]
[-229.12005615 -173.23922729]
[-239.15072632 -180.52622986]
[-245.08366394 -191.33024597]
[-245.84097290 -203.56036377]
[-241.33967590 -214.87937927]
[-251.14375305 -226.23191833]
[-260.94781494 -237.58445740]
[-270.75189209 -248.93699646]
[-280.55596924 -260.28955078]
[-290.36004639 -271.64208984]
[-300.16412354 -282.99462891]
[-309.96820068 -294.34716797]
[-319.77227783 -305.69970703]
[-334.84313965 -302.73928833]
[-349.36993408 -307.72610474]
[-359.44494629 -319.31875610]
[-362.35812378 -334.39883423]
[-357.32577515 -348.90991211]
[-345.70162964 -358.94854736]
[-330.61248779 -361.81442261]
[-316.11724854 -356.73663330]
[-306.11508179 -345.08105469]
[-303.29653931 -329.98300171]
[-308.41973877 -315.50378418]
[-298.61566162 -304.15124512]
[-288.81158447 -292.79870605]
[-279.00750732 -281.44616699]
[-269.20343018 -270.09362793]
[-259.39935303 -258.74108887]
[-249.59529114 -247.38853455]
[-239.79121399 -236.03599548]
[-229.98713684 -224.68345642]
[-212.50868225 -226.99607849]
[-196.99075317 -218.30172729]
[-189.70903015 -201.90122986]
[-193.73684692 -184.25393677]
[-183.52470398 -173.26702881]
[-173.31254578 -162.28013611]
[-162.90144348 -151.48158264]
[-152.29483032 -140.87498474]
[-141.68823242 -130.26837158]
[-131.08163452 -119.66177368]
[-120.47502899 -109.05517578]
[-99.11769867 -105.62619781]
[-93.41186523 -83.97523499]
[-82.05932617 -74.17116547]
[-70.70678711 -64.36708832]
[-59.35424805 -54.56301498]
[-48.00170898 -44.75894165]
[-36.64916992 -34.95486832]
[-25.29663086 -25.15079498]
[-13.94409275 -15.34671974]
[-3.81602955 -17.00737190]
[5.74647617 -12.71099472]
[11.46614838 -3.66402698]
[11.23729801 7.25699663]
[22.22419739 17.46914673]
[33.21109772 27.68129921]
[44.19799805 37.89344788]
[62.14893723 25.57967949]
[82.67282867 18.32468987]
[104.37454987 16.62164307]
[125.77890778 20.58630562]
[145.43092346 29.94917488]
[161.99473572 44.07380295]
[174.34440613 62.00006104]
[181.64047241 82.50939178]
[183.38694763 104.20766449]
[179.46513367 125.61991119]
[193.27032471 131.48648071]
[207.07551575 137.35305786]
[220.88070679 143.21961975]
[234.68589783 149.08619690]
[248.54409790 154.82644653]
[262.45413208 160.43989563]
[276.36416626 166.05335999]
[292.67089844 154.56140137]
[312.46701050 155.18635559]
[327.79293823 167.50444031]
[332.59030151 186.42503357]
[346.87298584 191.00814819]
[361.15567017 195.59126282]
[375.47961426 200.04374695]
[389.84362793 204.36523438]
[404.20764160 208.68672180]
[418.57165527 213.00820923]
[433.32690430 206.71038818]
[447.38156128 214.44639587]
[449.95410156 230.28186035]
[439.07110596 242.06913757]
[423.08105469 240.76605225]
[414.25018311 227.37220764]
[399.88616943 223.05073547]
[385.52215576 218.72924805]
[371.15814209 214.40776062]
[363.81988525 215.49583435]
[356.57257080 209.87394714]
[342.28988647 205.29083252]
[328.00720215 200.70771790]
[321.15451050 208.56175232]
[312.03640747 213.69064331]
[301.69027710 215.48146057]
[291.30319214 213.70271301]
[282.07553101 208.53395081]
[275.08248901 200.54801941]
[271.14862061 190.64764404]
[270.75070190 179.96339417]
[256.84066772 174.34992981]
[242.93064880 168.73648071]
[235.52374268 169.15078735]
[228.81933594 162.89138794]
[215.01414490 157.02481079]
[201.20895386 151.15824890]
[187.40374756 145.29167175]
[173.59855652 139.42510986]
[168.63162231 147.54772949]
[162.77224731 155.05207825]
[156.09661865 161.84057617]
[148.69154358 167.82492065]
[140.65332031 172.92732239]
[132.08645630 177.08142090]
[123.10237122 180.23320007]
[113.81787109 182.34169006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 107]
[21 106]
[22 105]
[23 104]
[25 100]
[26 99]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[45 86]
[46 85]
[47 84]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[117 163]
[118 162]
[119 161]
[120 160]
[121 159]
[122 157]
[123 156]
[124 155]
[128 147]
[129 146]
[130 145]
[131 143]
[132 142]
[133 141]
[134 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
