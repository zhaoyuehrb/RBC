%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGUGCAGCAGGGGGCCUGCCUGUCAGACAUCCUUGGGGAGCCUGCCCUUUCAAGCAUGAAUCAUACCACCAGAGAUCACCCAGCGUGCUCUUAGCUCUGCCUGCCUGGUGUAGGGUCCUGGAGACCUUCUUGGAGCUCAUCCAGCAGCCAUCAUGCAAGGUGGUGCUGGGGACUGCCCUCUUGCUAGGAGGUGGAGGUCUC\
) } def
/len { sequence length } bind def

/coor [
[102.76870728 122.03467560]
[94.17222595 121.42964172]
[85.57899475 133.72421265]
[76.98576355 146.01876831]
[68.39253235 158.31333923]
[59.79929733 170.60791016]
[51.20606232 182.90246582]
[42.61283112 195.19703674]
[46.62960052 213.70820618]
[36.02550125 229.01689148]
[17.91560173 231.67076111]
[9.70130253 244.22166443]
[1.48700380 256.77258301]
[-6.72729540 269.32348633]
[-14.94159412 281.87438965]
[-10.24993992 296.79156494]
[-16.29221916 311.21463013]
[-30.21545219 318.33346558]
[-45.44551468 314.78674316]
[-54.79123688 302.24914551]
[-53.83985519 286.64053345]
[-43.04058075 275.33081055]
[-27.49250221 273.66009521]
[-19.27820396 261.10919189]
[-11.06390381 248.55827332]
[-2.84960508 236.00737000]
[5.36469412 223.45646667]
[0.66585565 213.05491638]
[1.58291805 201.55789185]
[8.00327969 191.83259583]
[18.42754173 186.36030579]
[30.31826401 186.60380554]
[38.91149902 174.30923462]
[47.50473022 162.01467896]
[56.09796524 149.72010803]
[64.69120026 137.42553711]
[73.28443146 125.13097382]
[81.87766266 112.83641052]
[77.79787445 100.50798035]
[81.30954742 88.00585175]
[72.16300964 76.11717224]
[63.01647186 64.22848511]
[53.86993408 52.33979797]
[39.32259369 46.12003708]
[37.69431686 31.31470108]
[28.54777908 19.42601585]
[19.40124130 7.53733015]
[10.25470352 -4.35135555]
[1.10816574 -16.24004173]
[-8.12875938 -28.05863762]
[-17.45553398 -39.80645752]
[-32.85128784 -39.28022003]
[-45.45746994 -47.82056808]
[-50.55724716 -61.97882462]
[-46.39203262 -76.25429535]
[-55.71880722 -88.00211334]
[-70.35930634 -93.99930573]
[-72.21317291 -108.77809143]
[-81.53994751 -120.52590942]
[-90.86672211 -132.27372742]
[-98.65680695 -137.05142212]
[-100.24451447 -144.27256775]
[-109.39105225 -156.16123962]
[-116.90343475 -153.58967590]
[-124.78260803 -152.71932983]
[-132.64881897 -153.58633423]
[-140.12423706 -156.14323425]
[-146.85105896 -160.26156616]
[-152.50863647 -165.73822021]
[-156.82876587 -172.30557251]
[-159.60841370 -179.64445496]
[-160.71925354 -187.39970398]
[-160.11352539 -195.19738770]
[-157.82615662 -202.66275024]
[-153.97270203 -209.43830872]
[-148.74360657 -215.20089722]
[-156.17745972 -228.22923279]
[-163.61132812 -241.25756836]
[-171.04519653 -254.28591919]
[-184.60472107 -262.43759155]
[-184.19197083 -277.32647705]
[-191.62583923 -290.35482788]
[-199.05970764 -303.38314819]
[-214.09330750 -308.98406982]
[-218.95051575 -324.27416992]
[-209.90528870 -337.52420044]
[-193.89634705 -338.56988525]
[-183.20439148 -326.60903931]
[-186.03135681 -310.81701660]
[-178.59748840 -297.78869629]
[-171.16363525 -284.76034546]
[-158.13583374 -277.54052734]
[-158.01686096 -261.71978760]
[-150.58299255 -248.69143677]
[-143.14912415 -235.66310120]
[-135.71525574 -222.63476562]
[-113.16284943 -222.42582703]
[-95.17774200 -208.61201477]
[-89.09276581 -186.63658142]
[-97.50236511 -165.30778503]
[-88.35582733 -153.41909790]
[-79.11890411 -141.60050964]
[-69.79212952 -129.85267639]
[-60.46535492 -118.10486603]
[-46.49196625 -112.94795227]
[-43.97098923 -97.32888794]
[-34.64421082 -85.58106995]
[-19.79610062 -86.40057373]
[-7.16313791 -78.22303009]
[-1.70393848 -64.00858307]
[-5.70771456 -49.13323212]
[3.61906052 -37.38541412]
[10.24271965 -34.10015488]
[12.99685097 -25.38657951]
[22.14338875 -13.49789333]
[31.28992653 -1.60920763]
[40.43646622 10.27947807]
[49.58300400 22.16816330]
[63.47612381 27.53756523]
[65.75862122 43.19326019]
[74.90515900 55.08194733]
[84.05169678 66.97063446]
[93.19823456 78.85931396]
[112.86096191 81.89508057]
[122.20141602 99.46192932]
[136.43872070 104.18412781]
[150.67602539 108.90631866]
[164.91334534 113.62850952]
[179.15065002 118.35070038]
[193.38795471 123.07289124]
[207.62525940 127.79508972]
[221.86256409 132.51727295]
[236.09986877 137.23947144]
[243.27792358 128.91578674]
[253.56645203 123.94520569]
[265.41787720 123.45657349]
[276.89401245 127.87340546]
[285.98321533 136.78941345]
[290.95077515 148.98416138]
[305.77667236 151.26286316]
[317.51565552 139.08793640]
[334.03411865 136.33488464]
[348.79132080 143.89305115]
[356.06323242 158.60826111]
[370.92218018 160.66061401]
[385.78109741 162.71296692]
[400.64004517 164.76531982]
[415.49896240 166.81767273]
[430.35787964 168.87002563]
[445.21682739 170.92237854]
[454.14996338 168.99612427]
[460.28604126 173.12100220]
[475.11193848 175.39971924]
[489.93783569 177.67842102]
[504.76376343 179.95713806]
[519.58966064 182.23583984]
[532.18310547 172.68699646]
[547.82849121 174.92260742]
[557.24365234 187.61631775]
[554.84277344 203.23718262]
[542.05023193 212.51760864]
[526.45562744 209.95169067]
[517.31097412 197.06175232]
[502.48504639 194.78303528]
[487.65914917 192.50433350]
[472.83322144 190.22561646]
[458.00732422 187.94689941]
[443.16445923 185.78131104]
[428.30554199 183.72895813]
[413.44662476 181.67660522]
[398.58767700 179.62425232]
[383.72875977 177.57189941]
[368.86981201 175.51954651]
[354.01089478 173.46719360]
[345.69085693 183.91122437]
[333.19607544 188.91957092]
[319.75131226 187.08436584]
[308.88385010 178.77912903]
[303.49798584 166.08877563]
[288.67205811 163.81005859]
[280.36230469 176.29797363]
[288.19003296 189.09355164]
[296.01776123 201.88912964]
[303.84548950 214.68469238]
[311.67318726 227.48027039]
[319.50091553 240.27584839]
[332.92431641 250.63195801]
[326.68887329 266.39761353]
[309.81320190 264.77023315]
[306.70535278 248.10357666]
[298.87762451 235.30799866]
[291.04989624 222.51242065]
[283.22216797 209.71684265]
[275.39447021 196.92127991]
[267.56674194 184.12570190]
[239.75781250 176.07878113]
[231.37768555 151.47677612]
[217.14036560 146.75459290]
[202.90306091 142.03239441]
[188.66575623 137.31019592]
[174.42845154 132.58801270]
[160.19114685 127.86581421]
[145.95384216 123.14362335]
[131.71653748 118.42143250]
[117.47922516 113.69924164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[40 123]
[41 122]
[42 121]
[43 120]
[45 118]
[46 117]
[47 116]
[48 115]
[49 114]
[50 112]
[51 111]
[55 107]
[56 106]
[58 104]
[59 103]
[60 102]
[62 101]
[63 100]
[76 96]
[77 95]
[78 94]
[79 93]
[81 91]
[82 90]
[83 89]
[125 205]
[126 204]
[127 203]
[128 202]
[129 201]
[130 200]
[131 199]
[132 198]
[133 197]
[139 180]
[140 179]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
