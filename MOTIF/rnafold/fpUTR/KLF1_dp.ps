%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLF1)
} def

/sequence { (\
UCAGAGUUCACGAGGCAGCCGAGGAAGAGGAGGCUUGAGGCCCAGGGUGGGCACCAGCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.145742336 ubox
1 15 0.011295519 ubox
1 22 0.026274745 ubox
1 24 0.013024255 ubox
1 25 0.029601083 ubox
1 28 0.056008389 ubox
1 30 0.053612558 ubox
1 31 0.307018218 ubox
1 38 0.015991935 ubox
2 12 0.155811284 ubox
2 14 0.017042272 ubox
2 21 0.028052560 ubox
2 23 0.016447415 ubox
2 24 0.031592624 ubox
2 27 0.059756391 ubox
2 29 0.067903895 ubox
2 30 0.327956508 ubox
2 37 0.017085840 ubox
2 45 0.009727641 ubox
3 36 0.015769710 ubox
4 35 0.006501276 ubox
6 16 0.114286219 ubox
6 19 0.050886405 ubox
6 41 0.034891956 ubox
6 52 0.021907281 ubox
6 58 0.015087421 ubox
6 62 0.058859789 ubox
7 13 0.029495421 ubox
7 14 0.009922413 ubox
7 15 0.109612267 ubox
7 18 0.050956406 ubox
7 22 0.004521054 ubox
7 23 0.038404603 ubox
7 24 0.006515065 ubox
7 25 0.203715009 ubox
7 26 0.333431009 ubox
7 27 0.014887001 ubox
7 28 0.007945379 ubox
7 29 0.022180428 ubox
7 31 0.009377840 ubox
7 38 0.005672222 ubox
7 39 0.039332390 ubox
7 40 0.030619454 ubox
7 51 0.021913643 ubox
7 57 0.014831577 ubox
7 61 0.058434815 ubox
8 12 0.028829116 ubox
8 13 0.018909939 ubox
8 14 0.093470096 ubox
8 15 0.045481997 ubox
8 17 0.047096751 ubox
8 21 0.003985694 ubox
8 22 0.042373376 ubox
8 23 0.005815221 ubox
8 24 0.209294686 ubox
8 25 0.351798328 ubox
8 26 0.013054013 ubox
8 27 0.006885743 ubox
8 28 0.030354192 ubox
8 30 0.009960790 ubox
8 31 0.007810226 ubox
8 37 0.005113972 ubox
8 38 0.079818797 ubox
8 39 0.023071042 ubox
8 40 0.015480825 ubox
8 50 0.021943933 ubox
8 56 0.011025802 ubox
8 60 0.052733874 ubox
9 14 0.063246250 ubox
9 21 0.042563762 ubox
9 23 0.210616671 ubox
9 24 0.353435128 ubox
9 27 0.031027536 ubox
9 29 0.010187805 ubox
9 30 0.008081470 ubox
9 37 0.083010901 ubox
9 39 0.025084086 ubox
9 49 0.027036503 ubox
10 36 0.075207948 ubox
10 48 0.027052083 ubox
11 21 0.304039315 ubox
11 37 0.064825036 ubox
11 47 0.027043698 ubox
12 20 0.301709588 ubox
12 36 0.055484616 ubox
13 35 0.052893795 ubox
13 36 0.123507399 ubox
14 20 0.285987400 ubox
14 34 0.038715904 ubox
14 35 0.166353101 ubox
14 42 0.042943417 ubox
14 43 0.009358807 ubox
14 59 0.200220534 ubox
14 63 0.819919347 ubox
15 19 0.281869894 ubox
15 34 0.175500311 ubox
15 41 0.043119821 ubox
15 42 0.008905907 ubox
15 58 0.200414194 ubox
15 62 0.827103615 ubox
16 33 0.179219393 ubox
16 37 0.008577099 ubox
16 40 0.043146277 ubox
16 49 0.004887635 ubox
16 57 0.200158623 ubox
16 61 0.826272404 ubox
17 35 0.203072816 ubox
17 36 0.007976139 ubox
17 48 0.005099829 ubox
18 34 0.218734826 ubox
18 41 0.010069364 ubox
18 58 0.003541446 ubox
18 62 0.011003224 ubox
19 30 0.869244893 ubox
19 33 0.218799969 ubox
19 40 0.010110979 ubox
19 46 0.005298618 ubox
19 57 0.003413277 ubox
19 61 0.009450081 ubox
20 29 0.871971304 ubox
20 32 0.218743290 ubox
20 37 0.009439424 ubox
20 39 0.010079681 ubox
20 45 0.005312859 ubox
21 36 0.010044390 ubox
22 35 0.010183068 ubox
23 34 0.010192531 ubox
23 42 0.005295434 ubox
23 63 0.010859120 ubox
24 41 0.005302438 ubox
24 62 0.010954614 ubox
25 36 0.007285046 ubox
26 35 0.007567392 ubox
27 34 0.007608937 ubox
27 36 0.007831354 ubox
28 35 0.008278624 ubox
29 34 0.008340030 ubox
29 63 0.185218923 ubox
30 62 0.186715940 ubox
32 42 0.014188593 ubox
32 59 0.953691846 ubox
32 63 0.086388461 ubox
33 41 0.014280714 ubox
33 58 0.954692677 ubox
33 62 0.087138318 ubox
34 40 0.014310299 ubox
34 57 0.949889115 ubox
34 61 0.087130644 ubox
35 39 0.012896413 ubox
35 56 0.676606947 ubox
35 57 0.109089901 ubox
35 60 0.079041167 ubox
36 44 0.003431820 ubox
36 53 0.003284062 ubox
36 56 0.706011696 ubox
36 60 0.003258238 ubox
37 43 0.004419664 ubox
37 55 0.976151128 ubox
37 59 0.004163312 ubox
39 55 0.011742356 ubox
39 59 0.008343888 ubox
39 63 0.126652347 ubox
40 48 0.004554152 ubox
40 52 0.988929144 ubox
40 54 0.007988878 ubox
40 58 0.008260855 ubox
40 62 0.128368992 ubox
41 47 0.004724480 ubox
41 51 0.988982935 ubox
41 57 0.008166294 ubox
41 61 0.128316796 ubox
42 46 0.004709340 ubox
42 50 0.988980223 ubox
43 49 0.988759886 ubox
43 50 0.003337000 ubox
44 48 0.801324279 ubox
45 55 0.007330741 ubox
45 59 0.130359342 ubox
45 63 0.036920922 ubox
46 54 0.007316449 ubox
46 55 0.005071712 ubox
46 58 0.130403993 ubox
46 59 0.005450213 ubox
46 62 0.037150703 ubox
46 63 0.049944397 ubox
47 54 0.005105830 ubox
47 58 0.005505746 ubox
47 62 0.050676047 ubox
48 53 0.004798897 ubox
48 56 0.130304577 ubox
48 57 0.003872650 ubox
48 60 0.036700568 ubox
48 61 0.048271287 ubox
49 55 0.130518533 ubox
49 59 0.033669051 ubox
50 54 0.128410745 ubox
50 58 0.030182486 ubox
50 59 0.055539921 ubox
50 63 0.005745209 ubox
51 58 0.057778641 ubox
51 62 0.005947850 ubox
52 57 0.059584811 ubox
52 61 0.005954024 ubox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
