%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC124)
} def

/sequence { (\
GAGACGGACUCUUGCUAUGUUGCCCAGGCUGGUCUUGAACUCCUGGCCUCAAGCAAUCCUCCUGCCUCAGCCUCCCAAAGCACGGGGAUUACAAACCCUGCUGAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.040253445 ubox
1 13 0.006856494 ubox
1 61 0.030282283 ubox
1 68 0.937708514 ubox
1 74 0.014604109 ubox
2 10 0.040320176 ubox
2 12 0.008468924 ubox
2 60 0.030193518 ubox
2 63 0.149686272 ubox
2 67 0.938340891 ubox
2 73 0.015770000 ubox
3 9 0.040181963 ubox
3 11 0.009045070 ubox
3 58 0.003315067 ubox
3 59 0.016990282 ubox
3 61 0.151145712 ubox
3 62 0.150605859 ubox
3 66 0.935832607 ubox
3 68 0.020956768 ubox
3 72 0.015801995 ubox
4 10 0.008620528 ubox
4 57 0.004287982 ubox
4 60 0.154179335 ubox
4 67 0.020276756 ubox
5 64 0.835839417 ubox
6 58 0.009383949 ubox
6 59 0.255097617 ubox
6 60 0.006647279 ubox
6 61 0.008561067 ubox
6 62 0.895862804 ubox
6 63 0.357220473 ubox
6 66 0.006276429 ubox
6 72 0.006484207 ubox
7 57 0.009298934 ubox
7 58 0.255810697 ubox
7 59 0.007357066 ubox
7 60 0.007915472 ubox
7 61 0.905617427 ubox
7 62 0.332840494 ubox
7 65 0.006286745 ubox
7 71 0.006486231 ubox
8 57 0.254103672 ubox
8 60 0.896833231 ubox
9 70 0.005860428 ubox
10 69 0.005675535 ubox
12 56 0.932495716 ubox
13 55 0.994799652 ubox
14 23 0.003751326 ubox
14 54 0.999857922 ubox
14 65 0.006151198 ubox
15 22 0.003781552 ubox
15 53 0.999836014 ubox
15 64 0.006170581 ubox
16 52 0.984987159 ubox
18 51 0.977243019 ubox
19 25 0.003534192 ubox
19 47 0.004294318 ubox
19 50 0.991064232 ubox
19 57 0.012685426 ubox
20 52 0.025566281 ubox
20 56 0.013626537 ubox
21 51 0.052058138 ubox
21 55 0.013833964 ubox
22 29 0.005738598 ubox
22 47 0.982238267 ubox
22 50 0.052244612 ubox
22 54 0.013876249 ubox
23 28 0.005746269 ubox
23 46 0.803259128 ubox
23 53 0.013854006 ubox
24 45 0.570050872 ubox
24 46 0.592518156 ubox
25 37 0.016742289 ubox
25 45 0.819330009 ubox
26 36 0.016649931 ubox
26 41 0.016576205 ubox
26 44 0.995528805 ubox
26 49 0.058171625 ubox
27 34 0.003280895 ubox
27 35 0.016530117 ubox
27 40 0.016780752 ubox
27 41 0.004398368 ubox
27 42 0.012119162 ubox
27 43 0.997661389 ubox
27 44 0.013370625 ubox
27 48 0.059039404 ubox
28 34 0.016398784 ubox
28 40 0.006090609 ubox
28 41 0.008272862 ubox
28 42 0.993973364 ubox
28 43 0.014837571 ubox
28 47 0.059044791 ubox
29 46 0.059042742 ubox
30 37 0.018967695 ubox
30 45 0.057273752 ubox
31 36 0.017459987 ubox
31 41 0.903762033 ubox
31 42 0.013429744 ubox
31 43 0.038934383 ubox
31 44 0.042801272 ubox
31 48 0.006002081 ubox
32 40 0.975991746 ubox
32 41 0.026388537 ubox
32 42 0.039134011 ubox
32 43 0.042539650 ubox
32 47 0.006038464 ubox
33 39 0.941686533 ubox
33 46 0.006024307 ubox
34 45 0.006023159 ubox
55 90 0.005010454 ubox
56 89 0.007393247 ubox
57 88 0.008196077 ubox
58 87 0.008345596 ubox
58 106 0.004521179 ubox
59 86 0.008342545 ubox
59 105 0.004526866 ubox
60 85 0.007875335 ubox
60 104 0.004521776 ubox
61 84 0.007841121 ubox
61 103 0.004504956 ubox
61 107 0.004350550 ubox
62 70 0.040908984 ubox
62 106 0.003401565 ubox
62 107 0.007761579 ubox
63 69 0.042066666 ubox
63 82 0.008366767 ubox
64 68 0.041639636 ubox
64 71 0.067687741 ubox
64 81 0.008423782 ubox
65 70 0.067763339 ubox
65 80 0.008284849 ubox
65 106 0.316195276 ubox
65 107 0.008291489 ubox
66 105 0.317139271 ubox
66 106 0.006298929 ubox
67 104 0.317154459 ubox
68 103 0.317209143 ubox
69 90 0.004355854 ubox
69 102 0.316538936 ubox
70 81 0.019736914 ubox
70 89 0.004534082 ubox
70 101 0.315578390 ubox
71 80 0.020947635 ubox
71 87 0.007604324 ubox
71 100 0.308236471 ubox
71 106 0.458408026 ubox
71 107 0.028317111 ubox
72 80 0.036043887 ubox
72 84 0.003818226 ubox
72 86 0.008292078 ubox
72 87 0.082268004 ubox
72 105 0.459752094 ubox
72 106 0.027208891 ubox
72 107 0.028048170 ubox
73 79 0.035263283 ubox
73 85 0.005640766 ubox
73 86 0.074213426 ubox
73 87 0.058697446 ubox
73 88 0.181245908 ubox
73 104 0.459644363 ubox
73 105 0.022523941 ubox
73 106 0.022152417 ubox
73 107 0.047667263 ubox
74 84 0.006585063 ubox
74 85 0.074986953 ubox
74 86 0.075278697 ubox
74 87 0.185509648 ubox
74 103 0.459229603 ubox
74 105 0.024471057 ubox
74 106 0.082474228 ubox
74 107 0.804355812 ubox
75 84 0.075245212 ubox
75 85 0.076057749 ubox
75 86 0.185428371 ubox
75 105 0.081929601 ubox
75 106 0.822758833 ubox
75 107 0.034979741 ubox
76 84 0.076622176 ubox
76 85 0.185284580 ubox
76 103 0.037567053 ubox
76 105 0.822392615 ubox
76 106 0.035424735 ubox
77 99 0.003900503 ubox
77 102 0.027982060 ubox
79 99 0.004619738 ubox
79 102 0.942772187 ubox
80 101 0.947651264 ubox
81 100 0.946295865 ubox
81 103 0.013335089 ubox
82 99 0.923370183 ubox
82 102 0.014305742 ubox
83 100 0.087261715 ubox
84 97 0.086551846 ubox
84 98 0.910690053 ubox
84 99 0.286944621 ubox
85 96 0.086546638 ubox
85 97 0.910521307 ubox
85 98 0.341029292 ubox
85 99 0.011591544 ubox
86 96 0.909787017 ubox
86 97 0.342671545 ubox
86 98 0.014882053 ubox
87 96 0.343614161 ubox
87 97 0.015590708 ubox
87 98 0.004281175 ubox
89 95 0.075637899 ubox
90 94 0.065746643 ubox
91 99 0.005433099 ubox
92 100 0.007949427 ubox
93 99 0.011541066 ubox
96 107 0.036586566 ubox
97 106 0.037022066 ubox
98 105 0.037023613 ubox
99 104 0.036653987 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
74 107 0.9500000 lbox
75 106 0.9500000 lbox
76 105 0.9500000 lbox
79 102 0.9500000 lbox
80 101 0.9500000 lbox
81 100 0.9500000 lbox
82 99 0.9500000 lbox
84 98 0.9500000 lbox
85 97 0.9500000 lbox
86 96 0.9500000 lbox
showpage
end
%%EOF
