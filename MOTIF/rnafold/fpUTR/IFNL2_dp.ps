%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFNL2)
} def

/sequence { (\
UGGGUGACAGCCUCAGAGUGUUUCUUCUGCUGACAAAGACCAGAGAUCAGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.039656060 ubox
1 15 0.458000460 ubox
1 20 0.005581911 ubox
1 29 0.007017107 ubox
1 35 0.015102910 ubox
1 42 0.292763053 ubox
1 49 0.037848340 ubox
2 8 0.044172639 ubox
2 12 0.090947052 ubox
2 13 0.641677898 ubox
2 14 0.505857814 ubox
2 19 0.003659987 ubox
2 24 0.012723977 ubox
2 25 0.030389916 ubox
2 26 0.039410388 ubox
2 27 0.009196285 ubox
2 28 0.013154329 ubox
2 34 0.016537358 ubox
2 41 0.323490831 ubox
2 48 0.041475187 ubox
3 11 0.089832824 ubox
3 12 0.856932516 ubox
3 13 0.113782055 ubox
3 14 0.007062634 ubox
3 23 0.011608393 ubox
3 24 0.033869745 ubox
3 25 0.079899388 ubox
3 26 0.007927462 ubox
3 27 0.013635268 ubox
3 40 0.320899147 ubox
3 41 0.272024071 ubox
3 47 0.012222265 ubox
3 48 0.014197716 ubox
4 11 0.858376009 ubox
4 12 0.104991336 ubox
4 13 0.006265871 ubox
4 22 0.006130758 ubox
4 23 0.028399607 ubox
4 24 0.085531998 ubox
4 25 0.006156565 ubox
4 26 0.011810120 ubox
4 34 0.076488387 ubox
4 40 0.274093223 ubox
4 47 0.014064872 ubox
5 10 0.845714860 ubox
5 15 0.023195091 ubox
5 33 0.071756321 ubox
5 35 0.289984329 ubox
5 39 0.247015182 ubox
5 42 0.003240870 ubox
5 46 0.012610915 ubox
5 49 0.013776288 ubox
6 14 0.025963490 ubox
6 22 0.094029799 ubox
6 23 0.004451121 ubox
6 24 0.019117885 ubox
6 34 0.355174058 ubox
6 41 0.003586821 ubox
6 48 0.015286464 ubox
7 13 0.024731886 ubox
7 19 0.008050387 ubox
7 21 0.100502044 ubox
7 22 0.004483781 ubox
7 23 0.018803662 ubox
7 47 0.014796632 ubox
8 18 0.008280319 ubox
8 20 0.100731767 ubox
8 29 0.005599943 ubox
8 32 0.461157843 ubox
9 19 0.093287984 ubox
9 22 0.020870798 ubox
9 28 0.005625897 ubox
9 31 0.462383363 ubox
10 19 0.035522235 ubox
10 21 0.024247690 ubox
10 27 0.005605772 ubox
10 30 0.462509900 ubox
11 18 0.057462108 ubox
11 20 0.024490980 ubox
11 29 0.443260400 ubox
11 51 0.062262208 ubox
12 18 0.030971252 ubox
12 38 0.004357309 ubox
12 45 0.012637762 ubox
12 50 0.062474370 ubox
12 51 0.008457568 ubox
13 17 0.028476021 ubox
13 33 0.107967590 ubox
13 37 0.003623186 ubox
13 39 0.003768440 ubox
13 44 0.013467242 ubox
13 46 0.006224867 ubox
13 49 0.058023758 ubox
13 50 0.008084554 ubox
13 51 0.037724581 ubox
13 52 0.051258122 ubox
14 20 0.040448719 ubox
14 29 0.382734077 ubox
14 32 0.139542406 ubox
14 38 0.005228921 ubox
14 43 0.013701003 ubox
14 45 0.008346149 ubox
14 50 0.072499124 ubox
14 51 0.098961998 ubox
15 19 0.033289697 ubox
15 22 0.010702968 ubox
15 23 0.014148551 ubox
15 25 0.370203698 ubox
15 26 0.014632815 ubox
15 28 0.460771757 ubox
15 31 0.139580023 ubox
16 21 0.011566545 ubox
16 22 0.019684104 ubox
16 23 0.020593572 ubox
16 24 0.389638284 ubox
16 25 0.011377113 ubox
16 26 0.114561578 ubox
16 27 0.463113369 ubox
16 30 0.139156522 ubox
16 48 0.170368430 ubox
17 21 0.017614835 ubox
17 22 0.025074760 ubox
17 23 0.382914063 ubox
17 25 0.178735471 ubox
17 26 0.444675693 ubox
17 28 0.139824909 ubox
17 31 0.012027103 ubox
17 47 0.148863013 ubox
18 22 0.259782733 ubox
18 24 0.218736171 ubox
18 25 0.355596310 ubox
18 27 0.140350883 ubox
18 30 0.012511908 ubox
18 34 0.005158537 ubox
18 40 0.028299486 ubox
18 47 0.068565742 ubox
19 29 0.012449136 ubox
19 33 0.004992676 ubox
19 35 0.022289823 ubox
19 39 0.028362838 ubox
19 42 0.011000094 ubox
19 46 0.083543555 ubox
19 49 0.283254172 ubox
20 28 0.009338179 ubox
20 30 0.006022742 ubox
20 34 0.024602128 ubox
20 40 0.012010153 ubox
20 41 0.011638030 ubox
20 47 0.406329367 ubox
20 48 0.308971644 ubox
21 29 0.006133364 ubox
21 33 0.024373420 ubox
21 37 0.027531401 ubox
21 38 0.007488657 ubox
21 39 0.012031041 ubox
21 43 0.011821549 ubox
21 44 0.090977589 ubox
21 45 0.008907285 ubox
21 46 0.517408552 ubox
21 50 0.021985499 ubox
21 51 0.105774542 ubox
21 52 0.035509507 ubox
22 32 0.023906855 ubox
22 36 0.027107234 ubox
22 37 0.008977626 ubox
22 38 0.011667770 ubox
22 42 0.010477306 ubox
22 43 0.090915179 ubox
22 44 0.008910277 ubox
22 45 0.524499527 ubox
22 46 0.037238969 ubox
22 49 0.022266661 ubox
22 50 0.132929344 ubox
22 51 0.038670489 ubox
22 52 0.275495590 ubox
23 33 0.010558363 ubox
23 35 0.024404174 ubox
23 36 0.009427802 ubox
23 37 0.009844849 ubox
23 39 0.033857726 ubox
23 42 0.085718697 ubox
23 43 0.006826020 ubox
23 44 0.527047675 ubox
23 45 0.025337891 ubox
23 46 0.196384985 ubox
23 49 0.138079250 ubox
23 50 0.029127549 ubox
23 51 0.331426653 ubox
23 52 0.146323624 ubox
24 32 0.011679444 ubox
24 38 0.036118546 ubox
24 43 0.527559815 ubox
24 45 0.203922102 ubox
24 50 0.353873077 ubox
24 51 0.171636866 ubox
25 33 0.008788902 ubox
25 37 0.035937367 ubox
25 38 0.003208308 ubox
25 39 0.005471641 ubox
25 42 0.500569198 ubox
25 43 0.004375141 ubox
25 44 0.150771711 ubox
25 45 0.114211966 ubox
25 46 0.012514338 ubox
25 49 0.335321838 ubox
25 50 0.169183381 ubox
25 51 0.006894306 ubox
25 52 0.127756351 ubox
26 32 0.007164200 ubox
26 33 0.042275945 ubox
26 36 0.032075205 ubox
26 37 0.006223826 ubox
26 39 0.497417516 ubox
26 42 0.013214100 ubox
26 43 0.049879716 ubox
26 44 0.205621490 ubox
26 45 0.006851346 ubox
26 46 0.454077492 ubox
26 49 0.066390053 ubox
26 51 0.171780078 ubox
26 52 0.012395144 ubox
27 32 0.043688668 ubox
27 38 0.514075958 ubox
27 43 0.249367928 ubox
27 45 0.475747772 ubox
27 50 0.193910574 ubox
27 51 0.013464936 ubox
28 35 0.039214638 ubox
28 37 0.512737861 ubox
28 42 0.249743293 ubox
28 44 0.474039120 ubox
28 49 0.194162214 ubox
28 50 0.007688122 ubox
29 34 0.046945387 ubox
29 41 0.247238999 ubox
29 48 0.193992061 ubox
30 38 0.285151429 ubox
30 43 0.572960442 ubox
30 45 0.033786973 ubox
30 50 0.224304938 ubox
30 51 0.013362420 ubox
31 37 0.286141679 ubox
31 42 0.574468416 ubox
31 44 0.033288268 ubox
31 49 0.225342756 ubox
31 50 0.009285354 ubox
32 41 0.574534945 ubox
32 48 0.225554163 ubox
33 47 0.208722012 ubox
38 48 0.033466155 ubox
39 47 0.031925890 ubox
40 51 0.231982216 ubox
41 50 0.233015097 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
