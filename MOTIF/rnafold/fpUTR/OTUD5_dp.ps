%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OTUD5)
} def

/sequence { (\
CCGGGUUCUCUCCCGGCGUGCCCCGCGCCGGGUUUGUUGGGGGGUACUCGGCAGUGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.158481183 ubox
1 40 0.008794144 ubox
1 41 0.005079397 ubox
1 43 0.004190461 ubox
1 51 0.904858837 ubox
2 15 0.160746667 ubox
2 39 0.008969215 ubox
2 40 0.005139830 ubox
2 42 0.004200884 ubox
2 50 0.948990563 ubox
3 10 0.003511716 ubox
3 11 0.004237590 ubox
3 12 0.006663308 ubox
3 14 0.160859813 ubox
3 38 0.008852871 ubox
3 48 0.007039823 ubox
3 49 0.985664341 ubox
3 61 0.007964711 ubox
4 10 0.004532849 ubox
4 11 0.007837923 ubox
4 13 0.160862424 ubox
4 37 0.008591541 ubox
4 38 0.004720762 ubox
4 47 0.011991959 ubox
4 48 0.985464976 ubox
4 49 0.011613566 ubox
4 60 0.007886899 ubox
4 61 0.023740620 ubox
5 10 0.008071516 ubox
5 12 0.160586060 ubox
5 37 0.004246369 ubox
5 47 0.986092054 ubox
5 48 0.004632464 ubox
5 57 0.004174276 ubox
5 60 0.024051971 ubox
6 43 0.003184371 ubox
6 44 0.026549746 ubox
6 46 0.944479867 ubox
6 56 0.004077025 ubox
6 59 0.023824942 ubox
7 42 0.008668997 ubox
7 43 0.076636921 ubox
7 44 0.185546112 ubox
7 58 0.019689065 ubox
8 41 0.008938368 ubox
8 42 0.086613279 ubox
8 43 0.196778508 ubox
8 44 0.752530280 ubox
8 54 0.003926928 ubox
9 40 0.008736546 ubox
9 41 0.087140330 ubox
9 42 0.194670174 ubox
9 43 0.549092294 ubox
9 44 0.572343476 ubox
9 53 0.003268243 ubox
10 39 0.008614709 ubox
10 40 0.087836135 ubox
10 41 0.193686478 ubox
10 42 0.547058320 ubox
10 43 0.789607776 ubox
10 44 0.019551739 ubox
10 54 0.012859453 ubox
11 39 0.087657171 ubox
11 40 0.191667758 ubox
11 41 0.175093817 ubox
11 42 0.791412103 ubox
11 43 0.017900290 ubox
11 53 0.012380299 ubox
12 32 0.248892993 ubox
12 39 0.063347465 ubox
12 40 0.096137806 ubox
12 41 0.946634645 ubox
12 42 0.016286161 ubox
13 31 0.261596779 ubox
13 32 0.005940463 ubox
13 39 0.069253227 ubox
13 40 0.947830378 ubox
13 41 0.014131097 ubox
13 51 0.012902759 ubox
14 30 0.266134615 ubox
14 31 0.004857981 ubox
14 39 0.948921691 ubox
14 40 0.011563279 ubox
14 50 0.012929180 ubox
15 29 0.266293092 ubox
15 38 0.946933554 ubox
15 49 0.013417987 ubox
16 28 0.266300604 ubox
16 37 0.949682711 ubox
16 48 0.013444785 ubox
17 27 0.266296729 ubox
17 36 0.950081453 ubox
17 50 0.003437291 ubox
18 26 0.266273031 ubox
18 35 0.935710566 ubox
18 47 0.160862876 ubox
18 49 0.003260873 ubox
19 25 0.265698479 ubox
19 46 0.161096696 ubox
20 24 0.253071808 ubox
20 26 0.003626180 ubox
20 33 0.938603769 ubox
20 45 0.161203282 ubox
20 60 0.005030170 ubox
21 25 0.003772370 ubox
21 31 0.003648033 ubox
21 32 0.933330834 ubox
21 44 0.161241281 ubox
21 59 0.005044686 ubox
22 30 0.004037863 ubox
22 31 0.924593586 ubox
22 32 0.178166294 ubox
22 43 0.161234864 ubox
23 30 0.914223942 ubox
23 31 0.219310001 ubox
23 32 0.006275902 ubox
23 42 0.161227857 ubox
24 30 0.253663681 ubox
24 31 0.006426195 ubox
24 41 0.161187521 ubox
24 56 0.005119592 ubox
25 29 0.265614888 ubox
25 37 0.004028696 ubox
25 55 0.005360786 ubox
26 36 0.004080559 ubox
26 39 0.155775626 ubox
26 54 0.005363237 ubox
27 33 0.004594346 ubox
27 35 0.003434228 ubox
27 37 0.030247697 ubox
27 38 0.146303357 ubox
27 52 0.005433032 ubox
28 32 0.004951665 ubox
28 36 0.041853348 ubox
28 40 0.039376627 ubox
28 51 0.005450770 ubox
29 36 0.143596014 ubox
29 39 0.039409863 ubox
29 50 0.005450925 ubox
30 35 0.109879734 ubox
30 38 0.038949796 ubox
30 49 0.005450513 ubox
31 37 0.037534966 ubox
31 38 0.003624187 ubox
31 48 0.005445771 ubox
32 37 0.003568793 ubox
32 47 0.005447449 ubox
32 57 0.007230976 ubox
33 40 0.004952708 ubox
33 46 0.005326001 ubox
33 56 0.007186569 ubox
34 39 0.007354526 ubox
34 54 0.019703508 ubox
35 40 0.004682024 ubox
35 53 0.026019268 ubox
36 52 0.027111039 ubox
37 51 0.027097187 ubox
38 50 0.026995551 ubox
39 49 0.027093039 ubox
40 48 0.027017247 ubox
40 61 0.003165662 ubox
41 47 0.026993134 ubox
41 48 0.003333370 ubox
41 60 0.004084934 ubox
41 61 0.006932141 ubox
42 47 0.003664132 ubox
42 60 0.007105373 ubox
44 57 0.017851380 ubox
45 56 0.017887187 ubox
46 55 0.017901511 ubox
47 54 0.017901989 ubox
48 53 0.016361942 ubox
50 61 0.309521608 ubox
51 57 0.093726279 ubox
51 60 0.384011726 ubox
52 56 0.097042050 ubox
52 59 0.394796811 ubox
54 60 0.137639460 ubox
55 59 0.129017818 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
showpage
end
%%EOF
