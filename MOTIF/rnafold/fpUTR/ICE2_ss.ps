%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUAUGUCGCUGAGACGUCAUCACGCAGGGCCGAGUCGGCGCGGCCACAUCCUUUAAAUAUGGUCUUUUUUGGGCGCGCGCGACAAUGUGAGGAGUGGGGUGGAGCGUGUGUGGUGUGUGGCUGCGGCCUGGGCAAGAGCCGCCGCGGACCAUGAGCUGAGUAAGUUCUGGAGGGAUCCUGCCUCUUGGAGCCUUCGCAGCCAGGCAGCUGUGAACUGUGAGCUAGAGUGAAGCAGAAAUCUAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-57.56555557 287.69857788]
[-72.12100220 291.32336426]
[-86.67644501 294.94812012]
[-101.23188782 298.57290649]
[-115.78733826 302.19769287]
[-126.81649780 312.36419678]
[-131.61215210 326.57690430]
[-136.40782166 340.78964233]
[-141.20347595 355.00238037]
[-145.99913025 369.21508789]
[-140.19430542 384.17114258]
[-148.39234924 397.96142578]
[-164.30442810 400.00720215]
[-175.72416687 388.73913574]
[-173.89129639 372.80111694]
[-160.21185303 364.41943359]
[-155.41619873 350.20672607]
[-150.62054443 335.99398804]
[-145.82489014 321.78125000]
[-141.02923584 307.56854248]
[-145.49815369 301.54534912]
[-154.43598938 289.49899292]
[-158.90492249 283.47579956]
[-173.89758301 283.94506836]
[-188.89022827 284.41436768]
[-203.88288879 284.88363647]
[-210.13034058 298.76638794]
[-221.73855591 308.52020264]
[-236.37063599 312.25143433]
[-251.11119080 309.27194214]
[-263.04708862 300.22521973]
[-269.84329224 286.94827271]
[-284.83596802 287.41757202]
[-293.60470581 300.08306885]
[-307.98187256 305.09808350]
[-322.38488770 300.73724365]
[-331.35095215 288.87353516]
[-346.34362793 289.34280396]
[-361.33627319 289.81210327]
[-376.32891846 290.28137207]
[-391.31835938 290.84448242]
[-406.30395508 291.50137329]
[-421.28958130 292.15826416]
[-436.27517700 292.81518555]
[-451.26080322 293.47207642]
[-464.70889282 301.80630493]
[-477.76278687 294.63378906]
[-492.74841309 295.29067993]
[-507.73400879 295.94757080]
[-517.91070557 313.19271851]
[-536.31958008 320.69494629]
[-555.37127686 315.55108643]
[-567.32568359 300.03286743]
[-582.25964355 301.43887329]
[-589.25555420 315.18881226]
[-602.58624268 322.95394897]
[-617.99780273 322.25650024]
[-630.57257080 313.31900024]
[-636.29791260 298.99337769]
[-633.34698486 283.85086060]
[-622.66131592 272.72341919]
[-607.65069580 269.16174316]
[-593.10498047 274.30236816]
[-583.66564941 286.50491333]
[-568.73168945 285.09890747]
[-565.57116699 275.31192017]
[-559.32214355 267.09548950]
[-550.67108154 261.39392090]
[-540.58215332 258.87307739]
[-530.19000244 259.84243774]
[-520.67205811 264.21762085]
[-513.11499023 271.52688599]
[-508.39089966 280.96197510]
[-493.40530396 280.30508423]
[-478.41967773 279.64816284]
[-466.04345703 271.36093140]
[-451.91769409 278.48645020]
[-436.93206787 277.82955933]
[-421.94647217 277.17266846]
[-406.96087646 276.51577759]
[-391.97525024 275.85888672]
[-385.44754028 272.43505859]
[-376.79821777 275.28872681]
[-361.80557251 274.81942749]
[-346.81289673 274.35015869]
[-331.82025146 273.88085938]
[-323.61370850 261.47964478]
[-309.51159668 256.22656250]
[-294.84893799 260.33258057]
[-285.30523682 272.42489624]
[-270.31259155 271.95562744]
[-264.36004639 258.27963257]
[-253.01327515 248.50411987]
[-238.48793030 244.60859680]
[-223.65112305 247.41741943]
[-211.45562744 256.42614746]
[-204.35217285 269.89099121]
[-189.35951233 269.42172241]
[-174.36686707 268.95242310]
[-159.37420654 268.48315430]
[-119.41211700 287.64224243]
[-104.85667419 284.01745605]
[-90.30122375 280.39270020]
[-75.74578094 276.76791382]
[-61.19033813 273.14312744]
[-31.13058853 254.32147217]
[-19.97504425 244.29380798]
[-8.81950092 234.26615906]
[-5.95352221 227.47499084]
[2.53898597 224.18388367]
[13.81916142 214.29663086]
[25.09933662 204.40939331]
[29.57035446 190.20167542]
[45.04828644 186.92382812]
[56.32846069 177.03659058]
[67.60863495 167.14933777]
[78.82671356 157.19169617]
[89.98226166 147.16403198]
[101.13780212 137.13638306]
[78.24411011 74.05189514]
[82.68252563 59.72358322]
[87.12093353 45.39527512]
[91.55934906 31.06696129]
[95.90799713 16.71115494]
[100.16673279 2.32841444]
[104.42546082 -12.05432606]
[108.68418884 -26.43706703]
[112.94292450 -40.81980515]
[117.20165253 -55.20254517]
[121.46038055 -69.58528900]
[120.25416565 -74.61096191]
[121.00489807 -79.14964294]
[123.20465851 -82.54186249]
[126.15838623 -84.42247009]
[130.95404053 -98.63520050]
[135.74969482 -112.84793091]
[131.99229431 -128.81082153]
[144.12161255 -139.84764099]
[159.66006470 -134.60467529]
[162.62300110 -118.47541046]
[149.96243286 -108.05226898]
[145.16676331 -93.83953857]
[140.37110901 -79.62680817]
[135.84312439 -65.32655334]
[131.58439636 -50.94381714]
[127.32566071 -36.56107712]
[123.06693268 -22.17833519]
[118.80820465 -7.79559565]
[114.54946899 6.58714437]
[110.29074097 20.96988487]
[111.40230560 28.25673485]
[105.88765717 35.50537109]
[101.44924927 49.83368301]
[97.01083374 64.16199493]
[92.57242584 78.49031067]
[104.78446198 87.20042419]
[116.88652802 78.33814240]
[128.98858643 69.47586060]
[141.09065247 60.61357880]
[153.19271851 51.75129318]
[157.05403137 36.17985153]
[171.69525146 29.62134552]
[185.88490295 37.10689926]
[188.73788452 52.89423752]
[178.06564331 64.87266541]
[162.05499268 63.85335922]
[149.95292664 72.71563721]
[137.85087585 81.57792664]
[125.74880981 90.44020844]
[113.64674377 99.30249023]
[116.22169495 106.34661102]
[121.37159729 120.43485260]
[123.94654083 127.47897339]
[138.91101074 126.44718933]
[153.87548828 125.41541290]
[168.83996582 124.38362885]
[183.80442810 123.35185242]
[197.03970337 114.68363190]
[210.26904297 121.52715302]
[225.23352051 120.49537659]
[240.19799805 119.46359253]
[248.31915283 106.24140167]
[262.67395020 100.34905243]
[277.74264526 104.05227661]
[287.73101807 115.92710114]
[288.79837036 131.40742493]
[280.53427124 144.54074097]
[266.11639404 150.27702332]
[251.08876038 146.41055298]
[241.22976685 134.42807007]
[226.26530457 135.45983887]
[211.30082703 136.49162292]
[199.13591003 145.08604431]
[184.83621216 138.31632996]
[169.87173462 139.34809875]
[154.90727234 140.37988281]
[139.94279480 141.41166687]
[124.97832489 142.44345093]
[111.16545868 148.29193115]
[100.00991821 158.31958008]
[88.85437012 168.34722900]
[84.57907104 176.38937378]
[77.49588013 178.42951965]
[66.21570587 188.31675720]
[54.93553162 198.20401001]
[49.65768051 213.11892700]
[34.98658371 215.68955994]
[23.70640755 225.57681274]
[12.42623234 235.46405029]
[1.20815301 245.42170715]
[-9.94739056 255.44935608]
[-21.10293388 265.47702026]
[-7.14057636 259.99499512]
[6.32402849 266.60592651]
[10.52468777 281.00573730]
[2.72654176 293.81933594]
[-11.99338913 296.70440674]
[-24.05140686 287.78298950]
[-15.88444519 300.36474609]
[-7.71748447 312.94650269]
[0.44947657 325.52825928]
[17.63439751 328.86450195]
[26.89605522 343.31954956]
[22.90523720 359.66900635]
[31.22903252 372.14755249]
[46.16299438 378.92315674]
[47.49261475 395.26834106]
[33.85010147 404.36853027]
[19.26969528 396.86227417]
[18.75047302 380.47134399]
[10.42667866 367.99279785]
[-2.42298508 367.26626587]
[-12.66594219 359.15661621]
[-16.43115616 346.44342041]
[-12.13228607 333.69522095]
[-20.29924774 321.11346436]
[-28.46620750 308.53170776]
[-36.63316727 295.94995117]
[-35.49800491 310.90692139]
[-29.08337784 324.46615601]
[-28.96832848 339.46569824]
[-35.17421341 353.12173462]
[-46.54923630 362.89971924]
[-60.98223495 366.98489380]
[-75.79448700 364.61904907]
[-88.23689270 356.24130249]
[-96.00017548 343.40652466]
[-97.64349365 328.49682617]
[-92.86186218 314.27935791]
[-82.54273224 303.39288330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[23 100]
[24 99]
[25 98]
[26 97]
[32 91]
[33 90]
[37 86]
[38 85]
[39 84]
[40 83]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[47 75]
[48 74]
[49 73]
[53 65]
[54 64]
[106 212]
[107 211]
[108 210]
[110 209]
[111 208]
[112 207]
[114 205]
[115 204]
[116 203]
[117 201]
[118 200]
[119 199]
[120 155]
[121 154]
[122 153]
[123 152]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[134 143]
[135 142]
[136 141]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[179 192]
[180 191]
[181 190]
[218 238]
[219 237]
[220 236]
[221 235]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
