%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IGFBP6)
} def

/sequence { (\
GCGGCGGCGGGCAGCAGCUGCGCUGCGACUGCUCUGGAAGGAGAGGACGGGGCACAAACCCUGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.056216922 ubox
1 12 0.006338590 ubox
1 21 0.122045774 ubox
1 23 0.025897350 ubox
1 26 0.577434050 ubox
1 32 0.695244797 ubox
2 7 0.056290223 ubox
2 9 0.008717444 ubox
2 11 0.006339519 ubox
2 20 0.122136041 ubox
2 22 0.025899949 ubox
2 25 0.577860411 ubox
2 27 0.088933475 ubox
2 31 0.726897460 ubox
2 36 0.200750372 ubox
2 49 0.003565213 ubox
2 63 0.006308850 ubox
3 8 0.009069163 ubox
3 19 0.122056426 ubox
3 21 0.018380700 ubox
3 24 0.577295172 ubox
3 26 0.063923957 ubox
3 30 0.726881962 ubox
3 33 0.033335712 ubox
3 34 0.011134992 ubox
3 35 0.202156795 ubox
3 48 0.004186790 ubox
3 62 0.004736871 ubox
3 66 0.019272145 ubox
4 12 0.004690208 ubox
4 18 0.122158682 ubox
4 21 0.031071902 ubox
4 23 0.577453481 ubox
4 26 0.267529351 ubox
4 29 0.723874071 ubox
4 32 0.044806527 ubox
4 33 0.003514722 ubox
4 34 0.202101025 ubox
4 65 0.017685400 ubox
5 11 0.004707873 ubox
5 17 0.121697272 ubox
5 20 0.037224237 ubox
5 22 0.576507031 ubox
5 25 0.277565236 ubox
5 27 0.168780340 ubox
5 31 0.046044569 ubox
5 36 0.008459927 ubox
5 63 0.015273493 ubox
6 19 0.048534255 ubox
6 21 0.421604069 ubox
6 24 0.277603780 ubox
6 26 0.120225036 ubox
6 30 0.045944698 ubox
6 33 0.202543996 ubox
6 34 0.009897677 ubox
6 35 0.005534253 ubox
6 62 0.015140546 ubox
6 66 0.004421558 ubox
7 15 0.123064910 ubox
7 18 0.077744933 ubox
7 21 0.391965340 ubox
7 23 0.278235533 ubox
7 26 0.713497499 ubox
7 29 0.045300019 ubox
7 32 0.208382900 ubox
7 34 0.004176106 ubox
7 61 0.015044778 ubox
7 65 0.004391694 ubox
8 14 0.123502211 ubox
8 17 0.077946020 ubox
8 20 0.553119539 ubox
8 22 0.278201001 ubox
8 25 0.723231813 ubox
8 27 0.018449954 ubox
8 31 0.208721914 ubox
8 36 0.006951056 ubox
9 19 0.505023752 ubox
9 21 0.270238267 ubox
9 24 0.722270017 ubox
9 26 0.010998214 ubox
9 30 0.208008726 ubox
9 34 0.046788745 ubox
9 35 0.007256423 ubox
9 60 0.015062951 ubox
9 61 0.003448639 ubox
9 66 0.011848052 ubox
10 18 0.453042220 ubox
10 19 0.359646218 ubox
10 23 0.721205580 ubox
10 24 0.025136594 ubox
10 29 0.207126497 ubox
10 30 0.021367642 ubox
10 33 0.047492510 ubox
10 34 0.007331213 ubox
10 59 0.015031249 ubox
10 60 0.003472591 ubox
10 65 0.011902211 ubox
10 66 0.003684137 ubox
11 18 0.443970331 ubox
11 21 0.723185124 ubox
11 23 0.034938540 ubox
11 26 0.100292779 ubox
11 29 0.027087430 ubox
11 32 0.048466368 ubox
11 59 0.003162911 ubox
11 65 0.003677156 ubox
12 17 0.496473332 ubox
12 20 0.724050095 ubox
12 22 0.041984523 ubox
12 25 0.100863661 ubox
12 31 0.048526831 ubox
12 63 0.005038671 ubox
13 19 0.722268655 ubox
13 24 0.100857059 ubox
13 30 0.048361335 ubox
13 62 0.005088435 ubox
14 18 0.706439809 ubox
14 21 0.044740940 ubox
14 23 0.100878443 ubox
14 26 0.193159945 ubox
14 29 0.042420678 ubox
14 61 0.004976869 ubox
15 20 0.044719119 ubox
15 22 0.100788634 ubox
15 25 0.193580847 ubox
16 24 0.193536860 ubox
17 23 0.193571918 ubox
17 26 0.040669166 ubox
18 22 0.192164738 ubox
18 25 0.040656733 ubox
19 56 0.005596173 ubox
20 55 0.005955468 ubox
22 32 0.014619041 ubox
22 53 0.111960027 ubox
23 31 0.015100047 ubox
23 52 0.112078343 ubox
24 51 0.111716005 ubox
25 32 0.012085750 ubox
26 31 0.012731415 ubox
26 49 0.112252592 ubox
27 34 0.009228939 ubox
27 48 0.121493162 ubox
28 33 0.008337444 ubox
29 37 0.005942856 ubox
29 40 0.023912324 ubox
29 41 0.004867668 ubox
29 43 0.085067698 ubox
29 45 0.284272837 ubox
29 46 0.276366770 ubox
29 50 0.004225562 ubox
30 36 0.005832350 ubox
30 39 0.023955288 ubox
30 40 0.004744847 ubox
30 42 0.085250252 ubox
30 44 0.291951907 ubox
30 45 0.253920525 ubox
30 49 0.004780153 ubox
30 54 0.036481900 ubox
31 48 0.008055809 ubox
31 53 0.041197838 ubox
32 40 0.084543411 ubox
32 41 0.015420618 ubox
32 43 0.608353345 ubox
32 45 0.274950636 ubox
32 46 0.012568803 ubox
32 52 0.041210108 ubox
33 39 0.081672289 ubox
33 40 0.014528494 ubox
33 41 0.059239540 ubox
33 42 0.677124871 ubox
33 44 0.617303813 ubox
33 45 0.006469721 ubox
33 46 0.064943608 ubox
33 47 0.032429691 ubox
33 51 0.041189340 ubox
34 40 0.072356026 ubox
34 41 0.683772778 ubox
34 43 0.642963514 ubox
34 45 0.081269777 ubox
34 46 0.034705875 ubox
34 50 0.041219832 ubox
35 39 0.066281152 ubox
35 40 0.666031107 ubox
35 42 0.639145538 ubox
35 44 0.082452803 ubox
35 45 0.033837730 ubox
35 49 0.041191489 ubox
36 48 0.041214626 ubox
36 66 0.004082752 ubox
37 65 0.004148125 ubox
40 66 0.010267232 ubox
41 65 0.010314088 ubox
44 62 0.004829092 ubox
45 61 0.004587851 ubox
45 66 0.831342421 ubox
46 60 0.004134060 ubox
46 65 0.854295039 ubox
48 63 0.980374001 ubox
49 60 0.006745217 ubox
49 61 0.086435501 ubox
49 62 0.987638725 ubox
50 59 0.006995188 ubox
50 60 0.086726721 ubox
50 61 0.988973835 ubox
50 62 0.003741175 ubox
51 59 0.086890003 ubox
51 60 0.988966030 ubox
51 61 0.004244461 ubox
52 59 0.985191612 ubox
52 60 0.004425221 ubox
55 63 0.024018002 ubox
56 62 0.022970821 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
