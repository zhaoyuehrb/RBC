%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCCGCCUCCACGGCGAUCAGGUUAGUGUGCGCCGCGGGUGCUGGGGGCUCGAGAACCGAGCGGAGCUGGUUGAGCCUUCAAAGUCCUAAAACGCGCGGCCGUGGGUUCGGGGUUUAUUGAUUGAAUUCCGCCGGCGCGGGAGCCUCUGCAGAGAGAGAGCGCGAGAG\
) } def
/len { sequence length } bind def

/coor [
[50.71956253 73.96467590]
[38.52021790 65.23679352]
[26.32087135 56.50890732]
[14.12152481 47.78102493]
[1.92217863 39.05314255]
[-10.27716732 30.32525826]
[-22.47651291 21.59737396]
[-34.67586136 12.86949062]
[-50.06940842 15.25201035]
[-62.31694794 6.22691107]
[-64.49345398 -8.46316814]
[-76.69279480 -17.19105148]
[-88.89214325 -25.91893578]
[-101.09149170 -34.64682007]
[-113.29084015 -43.37470245]
[-125.49018097 -52.10258484]
[-137.68952942 -60.83047104]
[-149.88887024 -69.55835724]
[-145.10507202 -55.34163284]
[-147.36441040 -40.51276016]
[-156.16500854 -28.36577034]
[-169.55194092 -21.59894562]
[-184.55149841 -21.71544075]
[-197.83171082 -28.68937874]
[-206.44258118 -40.97159958]
[-208.47131348 -55.83377075]
[-203.46726990 -69.97447205]
[-192.54200745 -80.25254822]
[-178.12243652 -84.38485718]
[-163.41041565 -81.45288849]
[-173.62257385 -92.43978882]
[-183.83471680 -103.42668915]
[-194.04687500 -114.41358948]
[-204.25901794 -125.40048981]
[-214.47117615 -136.38739014]
[-229.40266418 -133.07104492]
[-243.89364624 -137.64358521]
[-254.08253479 -148.78147888]
[-257.30685425 -163.42591858]
[-252.79847717 -177.62240601]
[-263.01062012 -188.60929871]
[-273.22277832 -199.59620667]
[-289.96670532 -197.32872009]
[-304.62405396 -205.39608765]
[-311.52783203 -220.45370483]
[-308.14358521 -236.49957275]
[-318.55468750 -247.29812622]
[-328.96582031 -258.09667969]
[-339.37692261 -268.89523315]
[-349.78802490 -279.69378662]
[-360.19915771 -290.49234009]
[-370.61026001 -301.29089355]
[-381.02136230 -312.08944702]
[-391.43249512 -322.88800049]
[-401.84359741 -333.68655396]
[-406.93261719 -335.14437866]
[-410.56951904 -338.12625122]
[-412.41519165 -341.81375122]
[-412.50897217 -345.37329102]
[-422.31304932 -356.72583008]
[-432.11712646 -368.07836914]
[-440.12567139 -372.54965210]
[-441.99429321 -379.72894287]
[-451.58938599 -391.25866699]
[-461.18447876 -402.78836060]
[-475.96383667 -411.09539795]
[-472.07278442 -427.59677124]
[-455.13912964 -428.42584229]
[-449.65475464 -412.38345337]
[-440.05966187 -400.85375977]
[-430.46456909 -389.32403564]
[-420.76458740 -377.88244629]
[-410.96051025 -366.52990723]
[-401.15643311 -355.17736816]
[-391.04504395 -344.09765625]
[-380.63394165 -333.29910278]
[-370.22280884 -322.50054932]
[-359.81170654 -311.70199585]
[-349.40060425 -300.90344238]
[-338.98947144 -290.10488892]
[-328.57836914 -279.30633545]
[-318.16726685 -268.50778198]
[-307.75613403 -257.70925903]
[-297.34503174 -246.91069031]
[-284.33038330 -249.97753906]
[-271.39880371 -246.17359924]
[-261.96719360 -236.39228821]
[-258.58282471 -223.12080383]
[-262.23587036 -209.80834961]
[-252.02372742 -198.82145691]
[-241.81156921 -187.83454895]
[-227.32388306 -191.29464722]
[-212.95385742 -187.00994873]
[-202.58941650 -176.03521729]
[-199.08685303 -161.24911499]
[-203.48428345 -146.59954834]
[-193.27212524 -135.61264038]
[-183.05996704 -124.62574005]
[-172.84782410 -113.63883972]
[-162.63566589 -102.65193939]
[-152.42352295 -91.66503906]
[-141.16099548 -81.75769806]
[-128.96163940 -73.02981567]
[-116.76229858 -64.30193329]
[-104.56295013 -55.57404709]
[-92.36360931 -46.84616470]
[-80.16426086 -38.11828232]
[-67.96491241 -29.39039803]
[-55.76556778 -20.66251373]
[-41.15954208 -23.34572220]
[-28.66333961 -14.66819191]
[-25.94797516 0.67014414]
[-13.74862957 9.39802742]
[-1.54928374 18.12591171]
[10.65006256 26.85379601]
[22.84940910 35.58168030]
[35.04875565 44.30956268]
[47.24810028 53.03744507]
[59.44744492 61.76533127]
[69.51253510 52.89905930]
[81.47895813 46.64443588]
[94.67737579 43.39918137]
[108.35803223 43.39134216]
[121.73330688 46.66379547]
[134.02305603 53.06934738]
[144.50013733 62.27684402]
[152.53335571 73.78807831]
[157.62545776 86.96463013]
[159.44372559 101.06324005]
[157.84141541 115.27771759]
[172.12409973 119.86082458]
[186.40678406 124.44393921]
[200.68946838 129.02705383]
[214.97215271 133.61015320]
[229.25483704 138.19326782]
[245.15989685 134.19816589]
[256.37643433 146.16149902]
[251.36582947 161.77641296]
[235.28256226 164.97964478]
[224.67172241 152.47595215]
[210.38903809 147.89283752]
[196.10635376 143.30973816]
[181.82366943 138.72662354]
[167.54098511 134.14350891]
[153.25830078 129.56039429]
[144.41937256 141.67953491]
[153.14724731 153.87887573]
[161.98619080 165.99800110]
[170.93542480 178.03590393]
[179.88465881 190.07382202]
[188.83389282 202.11172485]
[204.50428772 204.16459656]
[214.06695557 216.74755859]
[211.84851074 232.39537048]
[199.16514587 241.82446289]
[183.54165649 239.44071960]
[174.24719238 226.65837097]
[176.79598999 211.06095886]
[167.84675598 199.02305603]
[158.89752197 186.98515320]
[149.94827271 174.94725037]
[143.40997314 171.44233704]
[140.94790649 162.60676575]
[132.22003174 150.40740967]
[116.23669434 157.10726929]
[99.13272858 158.90979004]
[82.36341858 155.73800659]
[67.33371735 147.93495178]
[55.28047943 136.22837830]
[47.17080688 121.66343689]
[43.62463379 105.50970459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 119]
[2 118]
[3 117]
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[18 102]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[40 91]
[41 90]
[42 89]
[46 84]
[47 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[59 74]
[60 73]
[61 72]
[63 71]
[64 70]
[65 69]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[146 164]
[147 163]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
