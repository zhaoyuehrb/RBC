%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUUUAUCGGGAGCAGUGAGGUGACUUUGGCAGCUAACAGGCCACUAGUAUCCUACUAAAGCUUUUGUCUGGAUAGGAGCAACAUGCAUGUUUACAGUCUUGCAGUGUGCUGAGAGCUGGUGGCCAGUGGGACUGAGUGAGCUGUGUGCCGUGUAUUGACCCGCUUCCUAGUCCUGAAUUCCUUUCAGAAGCUCCGGCAGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[328.10885620 875.84082031]
[323.88287354 861.44842529]
[319.65686035 847.05603027]
[315.43087769 832.66363525]
[300.69723511 830.34307861]
[288.38156128 821.82055664]
[280.95706177 808.74237061]
[279.94299316 793.67614746]
[285.59387207 779.60650635]
[296.83859253 769.34405518]
[292.61260986 754.95172119]
[288.38659668 740.55932617]
[284.16061401 726.16693115]
[279.93463135 711.77453613]
[275.70864868 697.38214111]
[262.55358887 690.49151611]
[258.06280518 675.95581055]
[265.37951660 662.20428467]
[261.15350342 647.81188965]
[256.25207520 642.27880859]
[256.97390747 633.17132568]
[252.96473694 618.71704102]
[248.95556641 604.26275635]
[244.94638062 589.80847168]
[240.93721008 575.35418701]
[236.92802429 560.89990234]
[223.87803650 553.81231689]
[219.60624695 539.21075439]
[227.12879944 525.57073975]
[223.11962891 511.11648560]
[205.50592041 502.79656982]
[199.59620667 483.91470337]
[209.62832642 466.50845337]
[204.97163391 452.24957275]
[193.66549683 442.55316162]
[196.73629761 427.03283691]
[192.07960510 412.77395630]
[178.72337341 406.28192139]
[173.79769897 391.88772583]
[180.69772339 377.92251587]
[176.04103088 363.66363525]
[171.38433838 349.40478516]
[166.72764587 335.14590454]
[153.37142944 328.65386963]
[148.44575500 314.25967407]
[155.34577942 300.29446411]
[150.68908691 286.03558350]
[146.03239441 271.77673340]
[141.37570190 257.51785278]
[128.34516907 254.60746765]
[118.37458801 245.56562805]
[114.14045715 232.67510986]
[116.85045624 219.26995850]
[125.90151215 208.87315369]
[121.45967102 194.54589844]
[117.01782990 180.21865845]
[112.57598877 165.89140320]
[108.13414001 151.56416321]
[103.69229889 137.23690796]
[99.25045776 122.90966034]
[87.58258820 123.06932068]
[75.94049835 117.02866364]
[67.63880920 105.05124664]
[65.64629364 89.13768768]
[53.60447693 80.19371033]
[41.56266403 71.24973297]
[29.52084923 62.30575943]
[17.47903633 53.36178207]
[5.43722153 44.41780472]
[-6.60459232 35.47383118]
[-18.64640617 26.52985382]
[-34.99012756 25.18268776]
[-41.74970245 10.24146557]
[-31.97146416 -2.92356706]
[-15.71442318 -0.76935166]
[-9.70242977 14.48803902]
[2.33938408 23.43201637]
[14.38119793 32.37599182]
[26.42301178 41.31996918]
[38.46482468 50.26394653]
[50.50664139 59.20792007]
[62.54845428 68.15190125]
[74.59027100 77.09587097]
[81.54602051 74.29096985]
[75.26630402 60.66873932]
[68.98659515 47.04650879]
[60.35363007 34.77980804]
[68.66471100 22.29277992]
[83.31307983 25.52160263]
[85.60428619 40.34543610]
[90.53090668 54.51330185]
[95.45753479 68.68116760]
[102.41328430 65.87625885]
[104.88220215 51.08084106]
[107.35112000 36.28542328]
[98.43760681 23.51095581]
[101.15221405 8.54146671]
[113.38564301 0.12251823]
[115.85456085 -14.67290115]
[118.32347870 -29.46832085]
[116.64911652 -38.44960403]
[120.94231415 -44.46687698]
[123.63333893 -59.22351456]
[126.32437134 -73.98015594]
[121.18837738 -88.94451904]
[131.08345032 -100.07720947]
[133.77447510 -114.83384705]
[136.46549988 -129.59048462]
[130.44032288 -144.84268188]
[140.84704590 -157.51675415]
[156.98013306 -154.57470703]
[162.24324036 -139.04307556]
[151.22213745 -126.89945984]
[148.53111267 -112.14282227]
[145.84008789 -97.38618469]
[151.16854858 -83.47731018]
[141.08100891 -71.28912354]
[138.38998413 -56.53248596]
[135.69894409 -41.77584839]
[133.11889648 -26.99940109]
[130.64997864 -12.20398235]
[128.18106079 2.59143710]
[137.01803589 14.52641296]
[134.72496033 29.56624222]
[122.14654541 38.75434113]
[119.67761993 53.54976273]
[117.20870209 68.34518433]
[129.40785217 97.99683380]
[113.57770538 118.46781921]
[118.01954651 132.79505920]
[122.46138763 147.12231445]
[126.90323639 161.44955444]
[131.34507751 175.77680969]
[135.78691101 190.10406494]
[140.22875977 204.43130493]
[156.31507874 209.65637207]
[166.02139282 223.30422974]
[165.68426514 239.88204956]
[155.63456726 252.86117554]
[160.29125977 267.12002563]
[164.94795227 281.37890625]
[169.60464478 295.63775635]
[183.41714478 302.83865356]
[187.93656921 317.36547852]
[180.98651123 330.48922729]
[185.64320374 344.74807739]
[190.29989624 359.00695801]
[194.95658875 373.26580811]
[208.76908875 380.46670532]
[213.28851318 394.99353027]
[206.33847046 408.11727905]
[210.99516296 422.37612915]
[222.63436890 433.09243774]
[219.23049927 447.59289551]
[223.88719177 461.85174561]
[234.30677795 464.15701294]
[242.76441956 470.53137207]
[247.77386475 479.77072144]
[248.48979187 490.17535400]
[244.84988403 499.86257935]
[237.57391357 507.10729980]
[241.58309937 521.56158447]
[255.05694580 529.37780762]
[258.91690063 544.09362793]
[251.38230896 556.89068604]
[255.39149475 571.34497070]
[259.40066528 585.79925537]
[263.40985107 600.25354004]
[267.41903687 614.70788574]
[271.42822266 629.16217041]
[275.54589844 643.58587646]
[279.77191162 657.97827148]
[293.36169434 665.59112549]
[297.44244385 680.24725342]
[290.10104370 693.15612793]
[294.32702637 707.54852295]
[298.55300903 721.94091797]
[302.77899170 736.33331299]
[307.00500488 750.72570801]
[311.23098755 765.11810303]
[326.23895264 767.67205811]
[338.59936523 776.45306396]
[345.89169312 789.67584229]
[346.71643066 804.69189453]
[340.96343994 818.51983643]
[329.82327271 828.43762207]
[334.04925537 842.83001709]
[338.27526855 857.22241211]
[342.50125122 871.61480713]
[352.84680176 874.23223877]
[361.10903931 880.85797119]
[365.83850098 890.24371338]
[366.24136353 900.66516113]
[362.31192017 910.23858643]
[354.82147217 917.26129150]
[358.39434814 931.82958984]
[361.96725464 946.39782715]
[365.54013062 960.96612549]
[378.45938110 970.47784424]
[378.93380737 986.51385498]
[366.59951782 996.77276611]
[350.91827393 993.38476562]
[343.91943359 978.94885254]
[350.97186279 964.53900146]
[347.39898682 949.97076416]
[343.82608032 935.40246582]
[340.25320435 920.83422852]
[322.89752197 911.98864746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[18 172]
[19 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[29 162]
[30 161]
[33 155]
[34 154]
[36 152]
[37 151]
[40 148]
[41 147]
[42 146]
[43 145]
[46 142]
[47 141]
[48 140]
[49 139]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[93 127]
[94 126]
[95 125]
[98 122]
[99 121]
[100 120]
[102 119]
[103 118]
[104 117]
[106 115]
[107 114]
[108 113]
[195 207]
[196 206]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
