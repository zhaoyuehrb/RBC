%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD52)
} def

/sequence { (\
CUCCUGGUUCAAAAGCAGCUAAACCAAAAGAAGCCUCCAGACAGCCCUGAGAUCACCUAAAAAGCUGCUACCAAGACAGCCACGAAGAUCCUACCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.019963841 ubox
1 33 0.003364321 ubox
1 51 0.023559833 ubox
1 75 0.095870169 ubox
1 79 0.063927771 ubox
1 87 0.382274132 ubox
2 29 0.019961834 ubox
2 31 0.008409639 ubox
2 50 0.024414759 ubox
2 74 0.091532992 ubox
2 76 0.442588960 ubox
2 78 0.051724740 ubox
2 85 0.694903736 ubox
2 86 0.277633985 ubox
2 88 0.043517732 ubox
3 30 0.009010638 ubox
3 49 0.024477509 ubox
3 75 0.477720807 ubox
3 84 0.770015700 ubox
3 87 0.046072058 ubox
4 18 0.007572426 ubox
4 40 0.011191534 ubox
4 44 0.003896282 ubox
4 75 0.174133985 ubox
4 79 0.143218224 ubox
4 87 0.028703500 ubox
5 17 0.007809514 ubox
5 21 0.003916963 ubox
5 26 0.026870549 ubox
5 39 0.011298686 ubox
5 43 0.003898797 ubox
5 73 0.541568185 ubox
5 74 0.124130102 ubox
5 78 0.144329891 ubox
5 82 0.794334213 ubox
5 84 0.004651531 ubox
5 86 0.020560227 ubox
5 93 0.003598619 ubox
5 96 0.057590925 ubox
6 16 0.007797466 ubox
6 20 0.004205070 ubox
6 25 0.027866208 ubox
6 35 0.004106418 ubox
6 38 0.011304645 ubox
6 42 0.003650536 ubox
6 46 0.024465678 ubox
6 57 0.004184308 ubox
6 72 0.567404006 ubox
6 77 0.142334900 ubox
6 81 0.805872480 ubox
6 83 0.003301992 ubox
6 90 0.003517745 ubox
6 91 0.018067910 ubox
6 92 0.003258977 ubox
6 95 0.062231371 ubox
7 16 0.003164843 ubox
7 19 0.004250554 ubox
7 24 0.027867151 ubox
7 34 0.004123583 ubox
7 37 0.011288383 ubox
7 45 0.024509187 ubox
7 56 0.004193435 ubox
7 71 0.567482603 ubox
7 77 0.042378804 ubox
7 80 0.805674420 ubox
7 83 0.003797591 ubox
7 89 0.003534683 ubox
7 90 0.018045326 ubox
7 91 0.003249764 ubox
7 94 0.062197263 ubox
8 14 0.007020326 ubox
8 15 0.003305808 ubox
8 18 0.004232082 ubox
8 23 0.027627640 ubox
8 33 0.003612170 ubox
8 44 0.024256983 ubox
8 55 0.003933939 ubox
8 70 0.565201840 ubox
8 74 0.022475267 ubox
8 75 0.041824101 ubox
8 76 0.056255224 ubox
8 79 0.790410166 ubox
8 82 0.003721693 ubox
8 86 0.005709722 ubox
8 88 0.003850488 ubox
8 93 0.059188658 ubox
9 13 0.008980499 ubox
9 14 0.004094324 ubox
9 17 0.003865439 ubox
9 22 0.025541059 ubox
9 31 0.003858760 ubox
9 41 0.012167309 ubox
9 43 0.018412932 ubox
9 73 0.039385381 ubox
9 74 0.088607724 ubox
9 75 0.072897561 ubox
9 76 0.576973025 ubox
9 78 0.478661044 ubox
9 85 0.009324364 ubox
9 87 0.003416854 ubox
9 88 0.022775488 ubox
10 30 0.004358761 ubox
10 40 0.013215254 ubox
10 75 0.626624880 ubox
10 84 0.009387998 ubox
10 87 0.023123149 ubox
14 20 0.005912664 ubox
14 36 0.011045803 ubox
14 66 0.004179810 ubox
14 69 0.972338307 ubox
14 92 0.003546349 ubox
15 19 0.006014319 ubox
15 34 0.041838807 ubox
15 35 0.009889194 ubox
15 65 0.004244558 ubox
15 68 0.998025226 ubox
15 91 0.003434838 ubox
16 33 0.042318177 ubox
16 64 0.004239746 ubox
16 67 0.998115881 ubox
17 36 0.003798605 ubox
17 66 0.997881105 ubox
17 69 0.003209885 ubox
18 34 0.030547870 ubox
18 65 0.998104504 ubox
18 68 0.003328109 ubox
19 30 0.042810361 ubox
19 33 0.030859065 ubox
19 64 0.997924170 ubox
19 67 0.003325383 ubox
20 29 0.043997581 ubox
20 32 0.030316730 ubox
20 59 0.007727713 ubox
20 63 0.957443491 ubox
21 58 0.011437349 ubox
25 49 0.003670074 ubox
26 48 0.003313260 ubox
29 36 0.133637405 ubox
29 48 0.014989167 ubox
29 58 0.167730867 ubox
30 35 0.153181286 ubox
30 37 0.134581468 ubox
30 47 0.015384771 ubox
30 54 0.870104720 ubox
30 57 0.173099851 ubox
31 36 0.126360618 ubox
31 53 0.866559153 ubox
32 48 0.012723341 ubox
32 58 0.055694229 ubox
33 45 0.025606522 ubox
33 47 0.012605083 ubox
33 57 0.057591198 ubox
34 44 0.024701228 ubox
35 44 0.014384334 ubox
35 51 0.855307577 ubox
36 43 0.015112412 ubox
36 50 0.855247748 ubox
36 52 0.438542011 ubox
37 49 0.610065094 ubox
37 51 0.447530759 ubox
38 49 0.789795865 ubox
39 48 0.991579996 ubox
39 58 0.003332496 ubox
39 69 0.005349590 ubox
40 47 0.991277954 ubox
40 54 0.006474992 ubox
40 57 0.003482504 ubox
40 68 0.005608981 ubox
41 53 0.006229663 ubox
42 49 0.014100397 ubox
42 67 0.006389816 ubox
43 48 0.013447430 ubox
43 58 0.005370665 ubox
43 66 0.006412406 ubox
44 57 0.005620394 ubox
44 65 0.006419726 ubox
45 64 0.006408189 ubox
48 55 0.015339716 ubox
48 59 0.004782663 ubox
48 93 0.004697635 ubox
49 54 0.018076932 ubox
49 58 0.004573461 ubox
49 92 0.005095645 ubox
50 58 0.158217324 ubox
50 92 0.007450829 ubox
51 57 0.162968730 ubox
51 90 0.030175261 ubox
51 91 0.005568361 ubox
52 89 0.031338301 ubox
53 88 0.031444701 ubox
54 87 0.031125820 ubox
57 64 0.005928314 ubox
57 87 0.023984552 ubox
58 63 0.011931891 ubox
58 86 0.023796912 ubox
64 80 0.060324636 ubox
65 79 0.060489955 ubox
66 78 0.060482905 ubox
67 77 0.060481399 ubox
68 75 0.059415052 ubox
69 74 0.056887688 ubox
69 78 0.003538725 ubox
74 92 0.025919908 ubox
75 90 0.019856370 ubox
75 91 0.026594454 ubox
76 89 0.018950230 ubox
78 92 0.036052817 ubox
79 91 0.037588097 ubox
84 90 0.102897436 ubox
85 89 0.089752000 ubox
86 92 0.096463086 ubox
87 91 0.097783506 ubox
2 76 0.9500000 lbox
3 75 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
