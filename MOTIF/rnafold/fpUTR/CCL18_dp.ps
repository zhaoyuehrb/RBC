%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL18)
} def

/sequence { (\
AGAAGGAGGCCAGGAGUUGUGAGUUUCCAAGCCCCAGCUCACUCUGACCACUUCUCUGCCUGCCCAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.003627711 ubox
1 55 0.203270594 ubox
1 57 0.029203169 ubox
1 61 0.021241415 ubox
2 38 0.004257717 ubox
2 54 0.233657326 ubox
2 56 0.032272016 ubox
2 60 0.024036285 ubox
2 71 0.058447819 ubox
3 53 0.233616189 ubox
3 55 0.026447567 ubox
3 70 0.057834881 ubox
4 52 0.233525541 ubox
4 53 0.019995962 ubox
4 55 0.022368219 ubox
4 57 0.005837598 ubox
4 61 0.017574199 ubox
5 35 0.007574083 ubox
5 51 0.233389076 ubox
5 52 0.022501117 ubox
5 54 0.029046257 ubox
5 55 0.008201600 ubox
5 56 0.006021726 ubox
5 57 0.025262387 ubox
5 60 0.018759869 ubox
5 64 0.894328032 ubox
5 65 0.316507982 ubox
5 71 0.004742157 ubox
6 34 0.007926040 ubox
6 51 0.024720668 ubox
6 53 0.029003020 ubox
6 54 0.010895932 ubox
6 56 0.025763350 ubox
6 59 0.018676141 ubox
6 63 0.897598173 ubox
6 64 0.309702090 ubox
6 70 0.004224260 ubox
6 71 0.005472541 ubox
7 52 0.028579560 ubox
7 53 0.010913193 ubox
7 55 0.025782690 ubox
7 57 0.010605029 ubox
7 61 0.956827819 ubox
7 70 0.005050359 ubox
8 33 0.008769295 ubox
8 49 0.234736394 ubox
8 51 0.026163588 ubox
8 52 0.010190841 ubox
8 54 0.025638591 ubox
8 56 0.010622290 ubox
8 57 0.013077264 ubox
8 60 0.969281174 ubox
8 61 0.024740098 ubox
8 64 0.043776818 ubox
8 65 0.022125770 ubox
9 32 0.008801262 ubox
9 48 0.234749114 ubox
9 51 0.010215462 ubox
9 53 0.022892950 ubox
9 55 0.007943816 ubox
9 56 0.014197384 ubox
9 59 0.969312505 ubox
9 60 0.025800755 ubox
9 63 0.044472180 ubox
9 64 0.021919006 ubox
10 31 0.008799607 ubox
10 58 0.945321390 ubox
10 62 0.041563992 ubox
11 46 0.230982692 ubox
11 58 0.206560021 ubox
11 62 0.027111557 ubox
12 43 0.013070699 ubox
12 45 0.229593798 ubox
12 52 0.028262588 ubox
12 53 0.005253453 ubox
12 55 0.524914579 ubox
12 57 0.273428985 ubox
12 61 0.031486828 ubox
13 28 0.008892734 ubox
13 42 0.016622155 ubox
13 44 0.224886856 ubox
13 45 0.054596890 ubox
13 49 0.017338668 ubox
13 51 0.029479875 ubox
13 52 0.005907947 ubox
13 54 0.541992462 ubox
13 55 0.071636672 ubox
13 56 0.216838979 ubox
13 57 0.697925138 ubox
13 60 0.030909890 ubox
14 27 0.008910211 ubox
14 40 0.084724316 ubox
14 42 0.009248974 ubox
14 43 0.198856932 ubox
14 44 0.070965572 ubox
14 48 0.017368655 ubox
14 51 0.006404580 ubox
14 53 0.543764122 ubox
14 54 0.118049258 ubox
14 55 0.091937667 ubox
14 56 0.771312260 ubox
14 59 0.027530129 ubox
15 26 0.008892999 ubox
15 39 0.086955524 ubox
15 43 0.083564231 ubox
15 45 0.025084725 ubox
15 52 0.548727576 ubox
15 53 0.101211965 ubox
15 55 0.789035230 ubox
15 57 0.017392736 ubox
16 25 0.008750724 ubox
16 38 0.087067327 ubox
16 42 0.070086892 ubox
16 44 0.027403579 ubox
16 48 0.067573864 ubox
16 51 0.551447175 ubox
16 52 0.052738887 ubox
16 54 0.793093742 ubox
16 56 0.017338792 ubox
17 37 0.087020182 ubox
17 41 0.051617252 ubox
17 47 0.073598080 ubox
17 50 0.538594056 ubox
18 29 0.004095537 ubox
18 36 0.086830798 ubox
18 41 0.005093975 ubox
18 46 0.081580256 ubox
18 50 0.039863746 ubox
19 28 0.004316948 ubox
19 35 0.086490674 ubox
19 38 0.009277661 ubox
19 40 0.005417879 ubox
19 42 0.296522119 ubox
19 45 0.016763193 ubox
19 48 0.513199302 ubox
19 49 0.039261514 ubox
19 51 0.793135640 ubox
20 29 0.020372000 ubox
20 31 0.003400159 ubox
20 36 0.005566772 ubox
20 37 0.008802856 ubox
20 41 0.302856445 ubox
20 46 0.021087867 ubox
20 47 0.508745744 ubox
20 50 0.793086039 ubox
21 27 0.005678476 ubox
21 28 0.020575304 ubox
21 35 0.006191190 ubox
21 40 0.308746095 ubox
21 44 0.184472941 ubox
21 45 0.005475861 ubox
21 49 0.792539245 ubox
22 26 0.005161218 ubox
22 39 0.308807323 ubox
22 43 0.186436618 ubox
22 45 0.482544439 ubox
23 32 0.080871755 ubox
23 38 0.308807540 ubox
23 42 0.186667911 ubox
23 44 0.483140896 ubox
23 48 0.787761409 ubox
24 30 0.014123998 ubox
24 31 0.080126966 ubox
24 37 0.306316350 ubox
24 41 0.181706232 ubox
24 47 0.786584154 ubox
25 29 0.012665830 ubox
25 30 0.065158231 ubox
25 31 0.009916908 ubox
25 36 0.266237744 ubox
25 37 0.015609176 ubox
25 46 0.771518562 ubox
25 47 0.017684510 ubox
26 30 0.010664630 ubox
26 36 0.019101128 ubox
26 46 0.022035955 ubox
26 47 0.016270157 ubox
27 46 0.020234531 ubox
28 46 0.050116073 ubox
29 45 0.052881325 ubox
30 39 0.905861212 ubox
30 43 0.041539846 ubox
30 45 0.016010997 ubox
31 38 0.938858034 ubox
31 42 0.041733096 ubox
31 44 0.016121229 ubox
32 37 0.935918778 ubox
35 46 0.039309565 ubox
36 43 0.016275257 ubox
36 45 0.041122645 ubox
37 42 0.016506486 ubox
37 44 0.040591855 ubox
39 47 0.010500332 ubox
40 46 0.020347449 ubox
41 45 0.016636643 ubox
46 54 0.008868246 ubox
47 53 0.008484514 ubox
56 67 0.077259253 ubox
57 66 0.078504048 ubox
57 69 0.153247306 ubox
58 65 0.078169303 ubox
58 68 0.170697879 ubox
59 67 0.166996788 ubox
60 67 0.036282694 ubox
61 66 0.046920662 ubox
61 69 0.119771378 ubox
62 68 0.167228364 ubox
63 67 0.166097234 ubox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
