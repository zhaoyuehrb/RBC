%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NAA25)
} def

/sequence { (\
UAGCCCUUUCCCGGGGUCCUGCCCCGCGCGUGCGCACUGUGGUUCUGCGCUUGUCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.013512536 ubox
1 53 0.013238704 ubox
2 8 0.019757360 ubox
2 9 0.027338186 ubox
2 20 0.015586135 ubox
2 31 0.007806483 ubox
2 44 0.006308733 ubox
2 51 0.019630319 ubox
2 52 0.014321899 ubox
3 7 0.016538579 ubox
3 8 0.024794936 ubox
3 17 0.085436289 ubox
3 19 0.013814050 ubox
3 27 0.084899206 ubox
3 29 0.077574642 ubox
3 31 0.015496030 ubox
3 33 0.018889923 ubox
3 35 0.018213095 ubox
3 43 0.007792656 ubox
3 48 0.005895571 ubox
3 50 0.021046964 ubox
3 51 0.011366022 ubox
3 54 0.035842837 ubox
4 15 0.020380855 ubox
4 16 0.089365698 ubox
4 26 0.077674266 ubox
4 28 0.077690301 ubox
4 30 0.016263062 ubox
4 32 0.018897092 ubox
4 34 0.018210298 ubox
4 42 0.007911692 ubox
4 47 0.005892846 ubox
4 49 0.020495423 ubox
4 53 0.037016195 ubox
5 14 0.020860659 ubox
5 15 0.089367376 ubox
5 16 0.004708842 ubox
5 41 0.007845301 ubox
5 42 0.003342148 ubox
6 13 0.021272840 ubox
6 14 0.089318700 ubox
6 15 0.004758451 ubox
6 41 0.003374187 ubox
7 13 0.085543270 ubox
7 14 0.004688196 ubox
8 13 0.005573329 ubox
10 42 0.009019228 ubox
11 41 0.008985242 ubox
11 42 0.007566503 ubox
12 26 0.893538778 ubox
12 28 0.008373023 ubox
12 39 0.006159916 ubox
12 41 0.007567446 ubox
12 53 0.012860254 ubox
13 24 0.024272195 ubox
13 25 0.995099877 ubox
13 27 0.008732330 ubox
14 23 0.024545859 ubox
14 24 0.995319200 ubox
14 25 0.016072772 ubox
15 22 0.024752419 ubox
15 23 0.995319320 ubox
15 24 0.016099582 ubox
15 25 0.003198679 ubox
16 22 0.994978875 ubox
16 23 0.016021464 ubox
16 24 0.003240831 ubox
17 21 0.930790543 ubox
20 28 0.010889941 ubox
20 30 0.013619870 ubox
20 49 0.003858279 ubox
20 56 0.025427226 ubox
21 25 0.003726757 ubox
21 27 0.030364294 ubox
21 29 0.018406482 ubox
21 40 0.003233664 ubox
21 48 0.005265246 ubox
21 54 0.018306884 ubox
21 55 0.028047352 ubox
22 26 0.030172313 ubox
22 28 0.018405678 ubox
22 39 0.003248242 ubox
22 47 0.005259139 ubox
22 53 0.023371127 ubox
24 42 0.006288630 ubox
25 34 0.003468527 ubox
25 41 0.006322301 ubox
25 49 0.003206474 ubox
25 53 0.010797811 ubox
26 33 0.010239809 ubox
26 35 0.022392554 ubox
26 40 0.006405574 ubox
26 48 0.006555412 ubox
26 50 0.356858503 ubox
26 52 0.012092435 ubox
26 54 0.068268719 ubox
27 32 0.010405144 ubox
27 34 0.022745431 ubox
27 39 0.006455235 ubox
27 41 0.006238005 ubox
27 47 0.006626006 ubox
27 49 0.362912206 ubox
27 53 0.101597752 ubox
28 33 0.022215069 ubox
28 35 0.015029102 ubox
28 38 0.005378821 ubox
28 40 0.006468840 ubox
28 46 0.005807693 ubox
28 48 0.363421690 ubox
28 50 0.163795015 ubox
28 52 0.095283713 ubox
28 54 0.845361513 ubox
29 34 0.015033876 ubox
29 39 0.006485179 ubox
29 47 0.363325465 ubox
29 49 0.164014900 ubox
29 53 0.881564347 ubox
30 37 0.007348984 ubox
30 38 0.004419167 ubox
30 43 0.005520408 ubox
30 46 0.341703184 ubox
30 48 0.163979907 ubox
30 50 0.085571031 ubox
30 52 0.816798139 ubox
30 54 0.007831085 ubox
30 57 0.042397680 ubox
31 36 0.006960300 ubox
31 41 0.030159716 ubox
31 42 0.008728968 ubox
31 47 0.163264166 ubox
31 49 0.085578018 ubox
31 53 0.006317935 ubox
31 56 0.044517234 ubox
32 40 0.035772315 ubox
32 43 0.319046356 ubox
32 46 0.143775627 ubox
32 48 0.085721767 ubox
32 50 0.910480327 ubox
32 55 0.044501965 ubox
33 39 0.036026663 ubox
33 41 0.162028097 ubox
33 42 0.317446447 ubox
33 47 0.085693810 ubox
33 49 0.910847905 ubox
33 53 0.003938761 ubox
34 38 0.022282885 ubox
34 40 0.168707073 ubox
34 43 0.160856733 ubox
34 46 0.068252064 ubox
34 48 0.910867667 ubox
34 54 0.049745597 ubox
35 39 0.168707029 ubox
35 41 0.147715645 ubox
35 42 0.161820729 ubox
35 47 0.910746862 ubox
35 53 0.050632759 ubox
36 40 0.120262856 ubox
36 43 0.170944780 ubox
36 46 0.820984992 ubox
36 52 0.049964270 ubox
36 54 0.017133168 ubox
37 42 0.226691834 ubox
37 53 0.018255499 ubox
38 49 0.005358427 ubox
39 46 0.017906503 ubox
39 48 0.007811711 ubox
39 50 0.058613412 ubox
40 47 0.007720891 ubox
40 49 0.058622262 ubox
41 46 0.010511274 ubox
41 48 0.058538162 ubox
41 51 0.003669794 ubox
42 48 0.004550289 ubox
42 50 0.003937244 ubox
43 47 0.004835635 ubox
43 49 0.003837381 ubox
47 54 0.003244120 ubox
48 53 0.004075438 ubox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
showpage
end
%%EOF
