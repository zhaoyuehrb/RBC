%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUCUGUGAGGUGGACAUGACAAGGCCUAGCACUGGGAUUCAUUAGGCACCAGAACCCUGAAUUCCGAGAUAGAGGGAUGGUUGAUCUCAUGCUAAUGAAGUUUAGACC\
) } def
/len { sequence length } bind def

/coor [
[-24.71866989 371.55120850]
[-32.33979797 384.47088623]
[-39.96092987 397.39056396]
[-47.58206177 410.31027222]
[-47.92935181 426.12765503]
[-61.06000137 433.15869141]
[-68.68112946 446.07836914]
[-68.29331207 462.47293091]
[-82.43640137 470.77386475]
[-96.56119537 462.44186401]
[-96.13731384 446.04818726]
[-81.60082245 438.45724487]
[-73.97969055 425.53756714]
[-74.17751312 410.64425659]
[-60.50175095 402.68914795]
[-52.88061905 389.76943970]
[-45.25949097 376.84976196]
[-37.63835907 363.93005371]
[-49.73885727 352.55685425]
[-58.86524200 338.67385864]
[-64.51354980 323.04113770]
[-66.37036133 306.51556396]
[-64.33017731 290.00384521]
[-58.50142288 274.41275024]
[-49.20066833 260.59936523]
[-36.93546295 249.32389832]
[-22.37661171 241.20793152]
[-6.32151937 236.70010376]
[10.34951401 236.05131531]
[26.72154045 239.30076599]
[32.84820557 225.60902405]
[38.97486877 211.91726685]
[45.10153198 198.22552490]
[51.22819519 184.53376770]
[51.08560944 177.03558350]
[57.72349167 170.54769897]
[64.23175049 157.03317261]
[70.74000549 143.51863098]
[77.24826050 130.00410461]
[83.75651550 116.48957062]
[90.26477051 102.97503662]
[90.66529846 94.79862976]
[97.14977264 89.17663574]
[104.03450012 75.84995270]
[89.25757599 78.42726898]
[76.83945465 70.01358032]
[73.75447845 55.33424377]
[81.73526001 42.63357162]
[96.29958344 39.04460907]
[109.26771545 46.58301163]
[113.35650635 61.01405716]
[122.37626648 49.02890015]
[131.39602661 37.04374313]
[140.41577148 25.05858612]
[138.25460815 14.21395206]
[142.41065979 4.20612192]
[151.24977112 -1.67182481]
[161.64341736 -1.63511503]
[171.32099915 -13.09567547]
[180.99858093 -24.55623627]
[190.67614746 -36.01679611]
[189.53509521 -51.55178070]
[199.51278687 -63.03656006]
[214.33006287 -64.02865601]
[224.00762939 -75.48921204]
[233.68521118 -86.94977570]
[236.04907227 -103.17765808]
[251.38278198 -108.99223328]
[263.91235352 -98.41196442]
[260.74841309 -82.32092285]
[245.14578247 -77.27219391]
[235.46820068 -65.81163025]
[225.79061890 -54.35107422]
[227.29452515 -39.57698059]
[217.64334106 -27.81648064]
[202.13671875 -26.33921814]
[192.45913696 -14.87865639]
[182.78155518 -3.41809607]
[173.10397339 8.04246426]
[171.24887085 27.20383644]
[152.40093994 34.07834244]
[143.38117981 46.06349945]
[134.36141968 58.04865646]
[125.34166718 70.03381348]
[117.36118317 82.73468018]
[110.47645569 96.06136322]
[103.77930450 109.48329163]
[97.27104950 122.99782562]
[90.76279449 136.51235962]
[84.25453949 150.02688599]
[77.74628448 163.54142761]
[71.23802948 177.05595398]
[64.91994476 190.66043091]
[58.79328156 204.35218811]
[52.66661835 218.04393005]
[46.53995514 231.73568726]
[40.41328812 245.42742920]
[51.39824677 253.32098389]
[60.69009781 263.14501953]
[67.95520020 274.54421997]
[72.93316650 287.10668945]
[75.44620514 300.37899780]
[75.40548706 313.88238525]
[72.81424713 327.13006592]
[67.76763153 339.64489746]
[60.44920349 350.97637939]
[51.12425232 360.71707153]
[40.13019562 368.51702881]
[27.86435318 374.09658813]
[14.76960087 377.25622559]
[1.31837368 377.88378906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[6 13]
[7 12]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[43 86]
[44 85]
[51 84]
[52 83]
[53 82]
[54 81]
[58 79]
[59 78]
[60 77]
[61 76]
[64 73]
[65 72]
[66 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
