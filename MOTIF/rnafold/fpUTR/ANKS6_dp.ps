%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKS6)
} def

/sequence { (\
GCCGACGCGGCCGGCGGGGCGGACGGGAGCGGGCCGCGCGUGGCGGCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.006357447 ubox
1 44 0.048716004 ubox
1 47 0.057470426 ubox
1 50 0.945019984 ubox
2 19 0.006362878 ubox
2 26 0.007689997 ubox
2 27 0.003226849 ubox
2 32 0.004218757 ubox
2 43 0.048761396 ubox
2 46 0.057513941 ubox
2 49 0.945704040 ubox
3 18 0.006353441 ubox
3 25 0.007723728 ubox
3 26 0.003225118 ubox
3 31 0.004229292 ubox
3 40 0.010467833 ubox
3 42 0.048423447 ubox
3 45 0.057469500 ubox
3 48 0.926448630 ubox
3 51 0.253025596 ubox
4 24 0.007644109 ubox
4 30 0.004220624 ubox
4 39 0.016987072 ubox
4 41 0.042467430 ubox
4 44 0.055832324 ubox
4 47 0.812211205 ubox
4 50 0.261167002 ubox
5 41 0.017275915 ubox
6 16 0.006545282 ubox
6 21 0.004048666 ubox
6 31 0.014498718 ubox
6 38 0.060699751 ubox
6 40 0.017725432 ubox
6 42 0.044467853 ubox
6 45 0.796799114 ubox
6 48 0.358307954 ubox
6 51 0.065965085 ubox
7 15 0.006565817 ubox
7 20 0.004037824 ubox
7 30 0.014626425 ubox
7 37 0.062813368 ubox
7 39 0.015599357 ubox
7 41 0.045607175 ubox
7 44 0.806205725 ubox
7 47 0.533683560 ubox
7 50 0.069281721 ubox
8 14 0.006565070 ubox
8 19 0.004022963 ubox
8 21 0.007806155 ubox
8 25 0.004195465 ubox
8 29 0.014620964 ubox
8 36 0.062965060 ubox
8 38 0.015119013 ubox
8 40 0.045624279 ubox
8 42 0.008382142 ubox
8 43 0.805930317 ubox
8 45 0.053609768 ubox
8 46 0.561408335 ubox
8 49 0.069257023 ubox
9 20 0.007816398 ubox
9 24 0.004190642 ubox
9 35 0.063593621 ubox
9 37 0.011447797 ubox
9 39 0.043644447 ubox
9 41 0.010151081 ubox
9 44 0.038473552 ubox
10 34 0.063732738 ubox
10 37 0.018969087 ubox
10 39 0.033186693 ubox
10 41 0.798898745 ubox
10 44 0.580337338 ubox
10 47 0.069331790 ubox
11 18 0.009030476 ubox
11 19 0.003211126 ubox
11 22 0.004415547 ubox
11 26 0.014510711 ubox
11 33 0.063730689 ubox
11 36 0.013791791 ubox
11 38 0.035799612 ubox
11 40 0.781406730 ubox
11 43 0.582084474 ubox
11 46 0.069375765 ubox
12 17 0.009231024 ubox
12 18 0.003650439 ubox
12 21 0.004501301 ubox
12 25 0.014517200 ubox
12 32 0.063697968 ubox
12 36 0.062385098 ubox
12 38 0.090220243 ubox
12 40 0.156638241 ubox
12 42 0.582270861 ubox
12 45 0.069372241 ubox
13 20 0.004474867 ubox
13 24 0.014485630 ubox
13 35 0.064145452 ubox
13 37 0.063835574 ubox
13 39 0.168200876 ubox
13 41 0.514700031 ubox
13 44 0.069151758 ubox
14 20 0.004004472 ubox
14 30 0.063623299 ubox
14 34 0.064179911 ubox
14 37 0.340290467 ubox
14 39 0.914650654 ubox
14 41 0.055680515 ubox
14 44 0.003458208 ubox
15 19 0.004015554 ubox
15 21 0.009843859 ubox
15 25 0.004164121 ubox
15 29 0.063541434 ubox
15 33 0.064121793 ubox
15 36 0.346197690 ubox
15 38 0.928238549 ubox
15 40 0.076671004 ubox
15 42 0.060085060 ubox
15 43 0.004855640 ubox
16 20 0.009292254 ubox
16 24 0.008721692 ubox
16 35 0.345452568 ubox
16 37 0.927702122 ubox
16 39 0.076769432 ubox
16 41 0.055988423 ubox
17 34 0.344428477 ubox
17 35 0.024974506 ubox
18 34 0.027220411 ubox
18 35 0.927689497 ubox
19 30 0.208474214 ubox
19 34 0.927849307 ubox
19 37 0.101504245 ubox
19 39 0.011545889 ubox
19 41 0.005742270 ubox
20 29 0.208945975 ubox
20 31 0.277529547 ubox
20 33 0.925284272 ubox
20 36 0.102327414 ubox
20 38 0.011546949 ubox
20 40 0.006137574 ubox
21 30 0.292285020 ubox
21 35 0.102348305 ubox
21 37 0.011276086 ubox
21 39 0.006169475 ubox
22 34 0.102206472 ubox
24 31 0.844328435 ubox
24 36 0.012775306 ubox
25 30 0.850329495 ubox
25 35 0.012984361 ubox
26 34 0.012972953 ubox
29 50 0.009136113 ubox
30 49 0.009141834 ubox
33 47 0.017423370 ubox
33 50 0.006254359 ubox
34 46 0.017809088 ubox
34 49 0.006260721 ubox
35 45 0.017812481 ubox
35 48 0.006261366 ubox
36 44 0.017815832 ubox
36 47 0.006257136 ubox
37 43 0.017815133 ubox
37 45 0.003261613 ubox
37 46 0.005530083 ubox
38 44 0.007475622 ubox
38 47 0.005436801 ubox
39 43 0.007588196 ubox
39 45 0.010889923 ubox
39 46 0.009430370 ubox
40 44 0.010325149 ubox
40 47 0.006066866 ubox
41 46 0.006083305 ubox
43 50 0.008839617 ubox
44 49 0.008862630 ubox
45 50 0.010318636 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
