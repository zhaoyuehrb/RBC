%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFRSF10D)
} def

/sequence { (\
GGCAGUGUAGCUGCGAGAACCUUUGCACGCGCACAAACUACGGGGACGAUUUCUGAUUGAUUUUUGGCGCUUUCGAUCCACCCUCCUCCCUUCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006956817 ubox
1 39 0.224339663 ubox
1 86 0.007796130 ubox
1 89 0.006032648 ubox
1 90 0.014067838 ubox
1 92 0.005381044 ubox
1 93 0.062797498 ubox
1 94 0.029025676 ubox
1 95 0.024775556 ubox
2 8 0.003716485 ubox
2 11 0.008170978 ubox
2 14 0.119547400 ubox
2 30 0.008653943 ubox
2 32 0.043735492 ubox
2 38 0.236487083 ubox
2 85 0.007721447 ubox
2 88 0.005921149 ubox
2 89 0.013888554 ubox
2 91 0.003208750 ubox
2 92 0.048077398 ubox
2 93 0.033216787 ubox
2 94 0.019779697 ubox
3 7 0.003767222 ubox
3 10 0.008170484 ubox
3 13 0.119657497 ubox
3 29 0.008633761 ubox
3 31 0.043657594 ubox
4 12 0.119628941 ubox
4 39 0.055668343 ubox
4 87 0.004334049 ubox
4 91 0.005965332 ubox
4 92 0.013651177 ubox
4 94 0.008920794 ubox
5 11 0.119601091 ubox
5 28 0.012726031 ubox
5 30 0.042232851 ubox
5 32 0.057974130 ubox
5 34 0.982501563 ubox
5 38 0.056743450 ubox
5 41 0.009443128 ubox
5 93 0.005355972 ubox
6 10 0.111885953 ubox
6 27 0.012695887 ubox
6 29 0.042240997 ubox
6 31 0.057996136 ubox
6 33 0.983923521 ubox
6 35 0.079861487 ubox
6 37 0.046382743 ubox
6 40 0.007959077 ubox
6 42 0.003897206 ubox
7 26 0.012653911 ubox
7 28 0.042212246 ubox
7 30 0.057353069 ubox
7 32 0.984320563 ubox
7 34 0.092872436 ubox
7 39 0.004870279 ubox
7 41 0.010187650 ubox
8 25 0.012623364 ubox
8 27 0.033489922 ubox
8 29 0.056922153 ubox
8 31 0.921461918 ubox
8 33 0.090672301 ubox
8 40 0.010179904 ubox
9 24 0.012308556 ubox
9 39 0.010124250 ubox
10 23 0.009847079 ubox
10 26 0.019266634 ubox
10 30 0.983352160 ubox
10 32 0.024843040 ubox
10 38 0.007225599 ubox
11 25 0.019240804 ubox
11 29 0.983780727 ubox
11 31 0.024802041 ubox
12 27 0.985593526 ubox
12 33 0.004780477 ubox
13 26 0.992446505 ubox
13 30 0.009235463 ubox
13 32 0.005173220 ubox
14 25 0.992429749 ubox
14 29 0.009239331 ubox
14 31 0.005175175 ubox
15 23 0.097595100 ubox
15 24 0.984063811 ubox
15 28 0.009107492 ubox
15 30 0.005121207 ubox
15 41 0.005965385 ubox
15 85 0.006347632 ubox
15 93 0.007102759 ubox
15 95 0.110989646 ubox
16 22 0.138550430 ubox
16 23 0.962546049 ubox
16 24 0.039909048 ubox
16 39 0.008999650 ubox
16 84 0.006360452 ubox
16 92 0.006832710 ubox
16 94 0.111926770 ubox
17 21 0.165483272 ubox
17 22 0.776943775 ubox
17 23 0.044344189 ubox
17 24 0.011997972 ubox
17 38 0.009176677 ubox
17 83 0.006338231 ubox
17 91 0.003479058 ubox
17 93 0.112030578 ubox
18 22 0.044883906 ubox
18 23 0.014375587 ubox
18 24 0.004668451 ubox
18 92 0.108001800 ubox
19 23 0.005042738 ubox
19 91 0.055361576 ubox
22 36 0.025827704 ubox
22 37 0.024623243 ubox
23 35 0.027775743 ubox
23 36 0.028200901 ubox
23 37 0.003970876 ubox
23 76 0.006610988 ubox
24 33 0.103029292 ubox
24 35 0.026510061 ubox
24 75 0.006727169 ubox
25 30 0.003524237 ubox
25 32 0.115467821 ubox
25 34 0.025848311 ubox
25 74 0.006715283 ubox
26 31 0.115376090 ubox
28 42 0.004446028 ubox
29 41 0.004514315 ubox
29 70 0.007815374 ubox
30 42 0.004450560 ubox
30 69 0.007825801 ubox
31 41 0.004735748 ubox
31 68 0.007827705 ubox
32 67 0.007810789 ubox
34 66 0.007561208 ubox
35 65 0.007536083 ubox
35 92 0.013007511 ubox
36 64 0.007399720 ubox
36 91 0.007410075 ubox
36 92 0.019539285 ubox
37 63 0.006887898 ubox
37 91 0.010977725 ubox
39 59 0.003925784 ubox
40 58 0.003557456 ubox
41 55 0.005976341 ubox
42 54 0.006326942 ubox
42 82 0.025012304 ubox
42 83 0.012370512 ubox
42 84 0.009730455 ubox
42 85 0.005012382 ubox
42 86 0.006035062 ubox
42 88 0.034433118 ubox
42 89 0.027904103 ubox
42 90 0.078950833 ubox
42 91 0.927197239 ubox
42 92 0.043248647 ubox
42 93 0.050644843 ubox
42 94 0.009632781 ubox
42 95 0.010949428 ubox
43 53 0.006362730 ubox
43 54 0.003387196 ubox
43 81 0.025086612 ubox
43 82 0.012287323 ubox
43 83 0.010737949 ubox
43 84 0.004340645 ubox
43 85 0.006013583 ubox
43 87 0.034812654 ubox
43 88 0.027968642 ubox
43 89 0.075757117 ubox
43 90 0.994887066 ubox
43 91 0.011710097 ubox
43 92 0.008487266 ubox
43 93 0.005211541 ubox
44 52 0.006289577 ubox
44 53 0.003555024 ubox
44 54 0.003619316 ubox
44 79 0.025897852 ubox
44 81 0.011232868 ubox
44 82 0.010747077 ubox
44 83 0.005178655 ubox
44 84 0.004933584 ubox
44 86 0.039060755 ubox
44 87 0.022007678 ubox
44 88 0.072219960 ubox
44 89 0.995520543 ubox
44 90 0.010832349 ubox
45 51 0.006100105 ubox
45 52 0.003518497 ubox
45 53 0.004892493 ubox
45 78 0.026407654 ubox
45 81 0.010715866 ubox
45 82 0.005163276 ubox
45 83 0.004913889 ubox
45 85 0.039222718 ubox
45 86 0.026096272 ubox
45 87 0.061582860 ubox
45 88 0.995775658 ubox
45 89 0.009129606 ubox
46 50 0.005224174 ubox
46 51 0.003205929 ubox
46 52 0.004693481 ubox
46 77 0.026336820 ubox
46 84 0.038218224 ubox
46 87 0.986556980 ubox
47 59 0.008313985 ubox
47 75 0.026983437 ubox
48 58 0.008432321 ubox
48 64 0.003848884 ubox
48 74 0.027005538 ubox
48 78 0.006954084 ubox
48 85 0.966277721 ubox
49 57 0.008450377 ubox
49 63 0.004380288 ubox
49 73 0.026659846 ubox
49 77 0.006949829 ubox
49 84 0.947165100 ubox
50 56 0.008398065 ubox
50 76 0.006730763 ubox
51 55 0.007574055 ubox
51 75 0.006055188 ubox
52 60 0.009068812 ubox
52 67 0.006403243 ubox
53 59 0.009401153 ubox
53 66 0.006898612 ubox
53 67 0.022408246 ubox
54 66 0.022341478 ubox
54 69 0.005337138 ubox
54 80 0.167313846 ubox
55 64 0.006587477 ubox
55 65 0.022125949 ubox
55 68 0.005806046 ubox
55 72 0.003581460 ubox
55 74 0.004644474 ubox
55 78 0.989294023 ubox
55 79 0.122516340 ubox
56 63 0.007221375 ubox
56 64 0.021959878 ubox
56 71 0.003628506 ubox
56 73 0.004581899 ubox
56 77 0.998803078 ubox
57 67 0.004354664 ubox
57 76 0.998912309 ubox
58 66 0.004361336 ubox
58 69 0.005240232 ubox
58 75 0.998501101 ubox
59 65 0.004307566 ubox
59 68 0.006072453 ubox
59 72 0.003895012 ubox
59 73 0.005781956 ubox
59 74 0.999212879 ubox
59 78 0.005692842 ubox
60 64 0.003965824 ubox
60 71 0.006746717 ubox
60 72 0.049403239 ubox
60 73 0.986301082 ubox
60 77 0.005708679 ubox
61 67 0.025324828 ubox
61 76 0.005393085 ubox
62 66 0.018992079 ubox
62 75 0.004920227 ubox
64 76 0.004894443 ubox
65 75 0.005761053 ubox
65 80 0.009513430 ubox
66 72 0.028665412 ubox
66 73 0.006220596 ubox
66 74 0.006928730 ubox
66 79 0.010654471 ubox
67 71 0.018945557 ubox
67 72 0.014137137 ubox
67 73 0.006189328 ubox
67 78 0.010588564 ubox
68 75 0.009946176 ubox
69 74 0.009524704 ubox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
44 89 0.9500000 lbox
45 88 0.9500000 lbox
46 87 0.9500000 lbox
48 85 0.9500000 lbox
49 84 0.9500000 lbox
55 78 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
60 73 0.9500000 lbox
showpage
end
%%EOF
