%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGCGGUUGCUUUGUCUCUCCUUCGCCGGAGCCGGCUCUUCCUGUUAGUCUCCGCUGCUAGUUCUUGGCUCUGGGAGGCCCAGGUGGCUCUGCAGCAGCCUCUGCCACCCUGUGACCUGCGAGUAUUGGGACAUCCCUAGCUGACGCCAGGACACCCGGGAAGCCGAGGA\
) } def
/len { sequence length } bind def

/coor [
[227.32231140 500.96466064]
[236.13395691 488.32894897]
[231.34442139 474.11416626]
[226.55490112 459.89935303]
[221.76538086 445.68457031]
[216.97586060 431.46975708]
[212.18634033 417.25497437]
[207.39680481 403.04016113]
[193.15083313 398.77514648]
[184.04019165 386.79766846]
[183.72558594 371.57418823]
[192.53723145 358.93847656]
[187.74769592 344.72369385]
[182.95817566 330.50888062]
[165.35087585 317.94259644]
[169.87223816 296.01248169]
[164.06948853 282.18032837]
[158.26675415 268.34820557]
[152.46400452 254.51605225]
[146.66125488 240.68391418]
[140.85850525 226.85177612]
[124.78099823 223.61584473]
[113.67983246 211.31977844]
[112.06658936 194.66584778]
[120.77227783 180.18313599]
[114.72074890 166.45800781]
[108.66921997 152.73289490]
[102.61769867 139.00776672]
[96.56616974 125.28264618]
[87.48855591 113.34124756]
[75.88266754 103.83843994]
[64.27677917 94.33563232]
[52.67089081 84.83282471]
[41.06500244 75.33000946]
[29.45911598 65.82720184]
[17.85322952 56.32439423]
[6.24734116 46.82158661]
[6.42323112 61.82055664]
[-3.93795156 72.66702271]
[-18.92926598 73.17739105]
[-30.00412178 63.06069183]
[-30.84870911 48.08448792]
[-20.98152733 36.78675842]
[-6.02616501 35.60891724]
[-16.53658295 24.90699577]
[-27.04700279 14.20507622]
[-37.55742264 3.50315619]
[-48.46512604 4.03233480]
[-57.66427612 -1.43362737]
[-62.22323227 -10.87062931]
[-60.84597778 -21.03828049]
[-70.96318054 -32.11267471]
[-81.08038330 -43.18706894]
[-91.19758606 -54.26146698]
[-101.31478882 -65.33586121]
[-111.43199158 -76.41025543]
[-128.19596863 -74.28730774]
[-142.78361511 -82.48222351]
[-149.55601501 -97.60054779]
[-146.03067017 -113.61709595]
[-156.34617615 -124.50702667]
[-166.66166687 -135.39695740]
[-176.97715759 -146.28689575]
[-192.91084290 -148.15692139]
[-201.26058960 -161.85586548]
[-195.62118530 -176.87507629]
[-180.31869507 -181.69309998]
[-167.09187317 -172.61395264]
[-166.08721924 -156.60238647]
[-155.77172852 -145.71244812]
[-145.45623779 -134.82250977]
[-135.14074707 -123.93258667]
[-122.10086060 -126.88452911]
[-109.20427704 -122.96790314]
[-99.85912323 -113.10572052]
[-96.59021759 -99.80666351]
[-100.35759735 -86.52745819]
[-90.24039459 -75.45306396]
[-80.12319183 -64.37866974]
[-70.00598907 -53.30427170]
[-59.88878632 -42.22987747]
[-49.77158356 -31.15548325]
[-30.97218132 -26.71772194]
[-26.85550117 -7.00726271]
[-16.34508324 3.69465733]
[-5.83466387 14.39657688]
[4.67575502 25.09849739]
[15.75014973 35.21569824]
[27.35603714 44.71850967]
[38.96192551 54.22131729]
[50.56781387 63.72412491]
[62.17370224 73.22693634]
[73.77958679 82.72974396]
[85.38547516 92.23255157]
[96.99136353 101.73535919]
[85.40036774 99.66212463]
[78.32711792 86.12493134]
[83.79895782 66.88667297]
[91.99124146 54.32138062]
[100.18353271 41.75609589]
[108.37581635 29.19080544]
[111.96146393 12.62036610]
[128.87692261 11.47873020]
[134.65661621 27.41709709]
[120.94110107 37.38309097]
[112.74881744 49.94837952]
[104.55653381 62.51366806]
[96.36424255 75.07895660]
[107.25418091 85.39444733]
[119.35751343 76.53390503]
[131.46086121 67.67336273]
[140.66969299 53.43841553]
[156.89758301 58.34674072]
[156.67341614 75.29920959]
[140.32139587 79.77670288]
[128.21806335 88.63724518]
[116.11472321 97.49778748]
[131.07409668 96.39460754]
[140.63725281 107.95082855]
[136.75500488 122.43972015]
[122.69498444 127.66619110]
[110.29129028 119.23111725]
[116.34281921 132.95623779]
[122.39434814 146.68136597]
[128.44587708 160.40649414]
[134.49740601 174.13160706]
[148.16787720 176.04173279]
[159.01783752 184.39811707]
[164.27165222 196.92774963]
[162.65245056 210.30833435]
[154.69065857 221.04902649]
[160.49339294 234.88116455]
[166.29614258 248.71330261]
[172.09889221 262.54544067]
[177.90164185 276.37759399]
[183.70437622 290.20971680]
[191.95852661 291.89624023]
[198.78480530 296.67105103]
[203.10095215 303.68582153]
[204.25926208 311.74508667]
[202.14291382 319.50967407]
[197.17297363 325.71936035]
[201.96249390 339.93417358]
[206.75202942 354.14895630]
[221.41371155 358.87557983]
[230.37612915 371.18527222]
[230.37165833 386.23400879]
[221.61160278 398.25064087]
[226.40113831 412.46545410]
[231.19065857 426.68023682]
[235.98017883 440.89505005]
[240.76969910 455.10983276]
[245.55921936 469.32464600]
[250.34873962 483.53942871]
[265.01043701 488.26605225]
[273.97283936 500.57574463]
[273.96838379 515.62445068]
[265.20834351 527.64111328]
[269.99786377 541.85589600]
[274.91549683 556.02691650]
[279.96087646 570.15289307]
[285.00625610 584.27893066]
[297.84857178 594.47729492]
[295.17031860 610.65631104]
[279.72668457 616.17230225]
[267.40475464 605.35089111]
[270.88024902 589.32427979]
[265.83486938 575.19830322]
[260.78948975 561.07226562]
[255.56036377 555.81256104]
[255.78306580 546.64544678]
[250.99353027 532.43066406]
[236.74755859 528.16564941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 154]
[3 153]
[4 152]
[5 151]
[6 150]
[7 149]
[8 148]
[12 144]
[13 143]
[14 142]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 88]
[44 87]
[45 86]
[46 85]
[47 84]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[60 72]
[61 71]
[62 70]
[63 69]
[98 108]
[99 107]
[100 106]
[101 105]
[109 117]
[110 116]
[111 115]
[158 172]
[159 171]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
