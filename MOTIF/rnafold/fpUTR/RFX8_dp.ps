%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RFX8)
} def

/sequence { (\
AUAACUCCAACGCUCAAGCAAGUCAAGGACACCCACGGACUCAACACCGCGACCAGAUUGGAAAAGGUGUUGGUCGACAACUUCUGCAUUUGCGAAGAGUGCAGCGUCCCUCGCUGUCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 117 0.003578457 ubox
2 101 0.003838614 ubox
3 100 0.005153654 ubox
4 100 0.121017032 ubox
4 117 0.009264100 ubox
5 99 0.124888083 ubox
5 116 0.008081321 ubox
6 29 0.019114057 ubox
6 95 0.016563484 ubox
6 98 0.124853025 ubox
7 28 0.020806500 ubox
7 94 0.017437734 ubox
7 97 0.124280520 ubox
8 27 0.020791259 ubox
8 92 0.017699246 ubox
8 101 0.013644053 ubox
8 116 0.003924262 ubox
9 90 0.003982031 ubox
9 91 0.017315121 ubox
9 100 0.009109880 ubox
10 23 0.007691083 ubox
10 89 0.005107690 ubox
10 90 0.015930410 ubox
10 100 0.048226872 ubox
10 117 0.005613625 ubox
11 22 0.007777564 ubox
11 94 0.125152100 ubox
11 99 0.049366204 ubox
11 101 0.857356249 ubox
12 19 0.020322034 ubox
12 23 0.019789389 ubox
12 87 0.018970799 ubox
12 93 0.126245559 ubox
12 100 0.976632413 ubox
13 18 0.020286890 ubox
13 22 0.020160654 ubox
13 86 0.018990947 ubox
13 92 0.126117443 ubox
13 97 0.049299254 ubox
13 99 0.984052757 ubox
14 21 0.019203829 ubox
14 95 0.036168199 ubox
14 96 0.047831339 ubox
14 98 0.983885386 ubox
15 92 0.003385408 ubox
15 94 0.038691370 ubox
15 97 0.981725032 ubox
16 83 0.018398303 ubox
16 90 0.041467026 ubox
16 91 0.006680057 ubox
17 82 0.018958125 ubox
17 85 0.015421382 ubox
17 89 0.042166917 ubox
17 90 0.006492477 ubox
17 115 0.005946134 ubox
17 119 0.004218087 ubox
18 81 0.018930225 ubox
18 84 0.015638379 ubox
18 87 0.124583041 ubox
18 93 0.990843095 ubox
18 114 0.006313400 ubox
18 117 0.005201160 ubox
18 118 0.004433278 ubox
19 86 0.124715761 ubox
19 92 0.991133934 ubox
19 113 0.006305193 ubox
19 116 0.006102825 ubox
20 83 0.037927570 ubox
20 85 0.110911057 ubox
20 90 0.011397774 ubox
20 91 0.990388365 ubox
20 115 0.004352859 ubox
21 41 0.028109092 ubox
21 82 0.074631013 ubox
21 83 0.017479310 ubox
21 85 0.018995902 ubox
21 89 0.015911530 ubox
21 90 0.987431338 ubox
21 91 0.007916973 ubox
21 111 0.006024109 ubox
21 115 0.006845425 ubox
22 30 0.057941809 ubox
22 32 0.003811600 ubox
22 36 0.018084603 ubox
22 40 0.032518998 ubox
22 78 0.050284600 ubox
22 81 0.076920604 ubox
22 82 0.007072102 ubox
22 84 0.025749106 ubox
22 87 0.039925280 ubox
22 89 0.981256723 ubox
22 90 0.010581728 ubox
22 110 0.006073375 ubox
22 114 0.008147835 ubox
23 29 0.058016547 ubox
23 31 0.003667393 ubox
23 35 0.017906755 ubox
23 39 0.032526384 ubox
23 77 0.051830589 ubox
23 80 0.072157524 ubox
23 86 0.034406010 ubox
23 88 0.954230964 ubox
23 113 0.008016500 ubox
24 28 0.057592860 ubox
24 37 0.029769904 ubox
24 38 0.032457607 ubox
24 76 0.052601886 ubox
24 86 0.538596989 ubox
25 83 0.025991138 ubox
25 85 0.397319647 ubox
26 82 0.042678065 ubox
26 83 0.077998822 ubox
26 85 0.757534920 ubox
27 33 0.048299732 ubox
27 34 0.202239647 ubox
27 81 0.043340426 ubox
27 82 0.080838230 ubox
27 83 0.030146602 ubox
27 84 0.833684184 ubox
27 85 0.472615973 ubox
27 109 0.010157437 ubox
27 119 0.004668425 ubox
28 32 0.047853859 ubox
28 33 0.202007438 ubox
28 75 0.015049027 ubox
28 81 0.081149419 ubox
28 82 0.028512197 ubox
28 83 0.823670553 ubox
28 84 0.490184356 ubox
28 108 0.010217533 ubox
28 118 0.005005842 ubox
29 74 0.015036347 ubox
29 82 0.785980779 ubox
29 83 0.481066650 ubox
29 107 0.010257899 ubox
29 117 0.004990116 ubox
30 73 0.014793537 ubox
30 106 0.010241346 ubox
30 116 0.004977776 ubox
31 115 0.004406497 ubox
32 38 0.018245832 ubox
33 37 0.025659526 ubox
36 49 0.009426737 ubox
36 76 0.418032775 ubox
36 86 0.003642954 ubox
37 48 0.009609147 ubox
37 75 0.332188973 ubox
37 84 0.003293671 ubox
37 85 0.003653888 ubox
37 109 0.003526042 ubox
38 47 0.009601165 ubox
38 74 0.198149749 ubox
38 75 0.941579368 ubox
38 84 0.003176815 ubox
38 108 0.003524464 ubox
39 74 0.976892522 ubox
39 107 0.003522432 ubox
40 73 0.982887052 ubox
40 106 0.003515743 ubox
41 72 0.154295191 ubox
41 73 0.168365774 ubox
42 72 0.987630094 ubox
43 71 0.998720841 ubox
44 70 0.999438844 ubox
45 69 0.999926952 ubox
46 68 0.999742922 ubox
47 67 0.999939440 ubox
48 66 0.999611779 ubox
50 60 0.010199509 ubox
50 76 0.009615620 ubox
51 59 0.010519676 ubox
51 75 0.009771790 ubox
52 58 0.009888843 ubox
52 74 0.009771255 ubox
53 61 0.995672668 ubox
53 73 0.009772460 ubox
54 60 0.997144377 ubox
54 72 0.009771769 ubox
55 59 0.808129846 ubox
55 71 0.009683659 ubox
56 70 0.008351161 ubox
57 68 0.008966384 ubox
58 65 0.003694320 ubox
58 67 0.008990284 ubox
59 64 0.003749377 ubox
59 66 0.008494954 ubox
73 81 0.008797849 ubox
73 87 0.008302489 ubox
74 80 0.008528230 ubox
74 86 0.008106378 ubox
74 95 0.003826608 ubox
75 94 0.004100708 ubox
76 83 0.015964767 ubox
76 84 0.091339035 ubox
76 85 0.004321005 ubox
76 93 0.004159907 ubox
76 118 0.004594772 ubox
77 82 0.016106311 ubox
77 83 0.087024311 ubox
77 100 0.006426407 ubox
77 117 0.004551983 ubox
78 86 0.027459264 ubox
78 92 0.004132549 ubox
78 99 0.006580204 ubox
78 116 0.004528385 ubox
79 85 0.026391806 ubox
79 91 0.004080746 ubox
79 115 0.003933774 ubox
80 90 0.003616391 ubox
80 100 0.006251480 ubox
81 97 0.022089074 ubox
81 99 0.006447728 ubox
82 96 0.027699317 ubox
82 98 0.006106934 ubox
83 95 0.028871968 ubox
83 97 0.005465472 ubox
84 94 0.028534459 ubox
84 97 0.003199605 ubox
84 104 0.011264590 ubox
85 94 0.014369096 ubox
85 103 0.012196341 ubox
86 93 0.033341523 ubox
86 102 0.012594602 ubox
87 92 0.033308795 ubox
87 101 0.012605109 ubox
88 100 0.012603719 ubox
89 99 0.012559375 ubox
90 98 0.012508569 ubox
91 97 0.012353955 ubox
96 119 0.006838833 ubox
97 118 0.007469083 ubox
97 120 0.108645133 ubox
98 117 0.005054599 ubox
98 119 0.111153931 ubox
99 118 0.111390260 ubox
101 117 0.489893898 ubox
102 116 0.996105179 ubox
103 115 0.999312641 ubox
104 114 0.999913271 ubox
105 113 0.999902065 ubox
106 112 0.994642689 ubox
11 101 0.9500000 lbox
12 100 0.9500000 lbox
13 99 0.9500000 lbox
14 98 0.9500000 lbox
15 97 0.9500000 lbox
18 93 0.9500000 lbox
19 92 0.9500000 lbox
20 91 0.9500000 lbox
21 90 0.9500000 lbox
22 89 0.9500000 lbox
23 88 0.9500000 lbox
26 85 0.9500000 lbox
27 84 0.9500000 lbox
28 83 0.9500000 lbox
29 82 0.9500000 lbox
38 75 0.9500000 lbox
39 74 0.9500000 lbox
40 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
47 67 0.9500000 lbox
48 66 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
102 116 0.9500000 lbox
103 115 0.9500000 lbox
104 114 0.9500000 lbox
105 113 0.9500000 lbox
106 112 0.9500000 lbox
showpage
end
%%EOF
