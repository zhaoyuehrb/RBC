%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (JMJD7-PLA2G4B)
} def

/sequence { (\
GUCGGGGAAAGGCGGGGUCUCGGCCGGCGCUGACGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.072195309 ubox
1 24 0.151024640 ubox
1 28 0.699915917 ubox
1 34 0.679111390 ubox
1 36 0.019187913 ubox
1 39 0.006119659 ubox
2 8 0.013683131 ubox
2 12 0.072230585 ubox
2 15 0.018107722 ubox
2 23 0.151394103 ubox
2 27 0.700129422 ubox
2 33 0.679782050 ubox
2 35 0.012221997 ubox
2 38 0.005768109 ubox
3 7 0.014504902 ubox
3 11 0.072475001 ubox
3 14 0.023708449 ubox
3 22 0.151987368 ubox
3 26 0.700786772 ubox
3 32 0.679998130 ubox
3 35 0.014417074 ubox
4 13 0.023956985 ubox
4 21 0.151703050 ubox
4 25 0.698633876 ubox
4 28 0.003530905 ubox
4 31 0.676682836 ubox
4 34 0.014771380 ubox
4 40 0.017412717 ubox
5 19 0.008533867 ubox
5 20 0.150101384 ubox
5 21 0.027806241 ubox
5 24 0.696197247 ubox
5 25 0.058390751 ubox
5 30 0.674340029 ubox
5 31 0.055401986 ubox
5 39 0.017484943 ubox
5 40 0.015956263 ubox
6 18 0.008129586 ubox
6 19 0.149284019 ubox
6 20 0.047316523 ubox
6 21 0.029702088 ubox
6 24 0.079037620 ubox
6 25 0.010169266 ubox
6 30 0.078425156 ubox
6 31 0.019196441 ubox
6 39 0.016133225 ubox
6 40 0.013545539 ubox
7 18 0.123280481 ubox
7 19 0.050396533 ubox
7 20 0.015859047 ubox
7 21 0.219622202 ubox
7 24 0.010518260 ubox
7 30 0.022468047 ubox
7 39 0.013691358 ubox
8 18 0.049570635 ubox
8 20 0.172030741 ubox
10 20 0.653728477 ubox
10 31 0.010568753 ubox
11 19 0.694311665 ubox
11 20 0.022733583 ubox
11 21 0.021409200 ubox
11 25 0.684586572 ubox
11 30 0.011200905 ubox
11 31 0.024749587 ubox
11 40 0.071976599 ubox
12 18 0.693289546 ubox
12 19 0.025604428 ubox
12 20 0.016684166 ubox
12 24 0.684878162 ubox
12 28 0.042788697 ubox
12 30 0.026619509 ubox
12 36 0.015882461 ubox
12 39 0.072611057 ubox
13 17 0.689377238 ubox
13 22 0.107307573 ubox
13 23 0.676523099 ubox
13 26 0.032190407 ubox
13 27 0.042443676 ubox
13 29 0.027059533 ubox
13 32 0.016835031 ubox
13 35 0.015874866 ubox
13 38 0.072525755 ubox
14 20 0.023503267 ubox
14 21 0.150066702 ubox
14 25 0.036188558 ubox
14 28 0.027090834 ubox
14 31 0.017672009 ubox
14 34 0.015609151 ubox
14 40 0.052711358 ubox
15 19 0.030814272 ubox
15 20 0.118336701 ubox
15 21 0.641447214 ubox
15 24 0.036177810 ubox
15 25 0.042193394 ubox
15 30 0.018399857 ubox
15 39 0.053106586 ubox
15 40 0.012064725 ubox
16 20 0.416339676 ubox
16 24 0.042007268 ubox
16 25 0.039934063 ubox
16 39 0.012182250 ubox
16 40 0.008431451 ubox
17 24 0.040170035 ubox
17 28 0.019516160 ubox
17 34 0.043618086 ubox
17 36 0.081081260 ubox
17 39 0.008515638 ubox
18 23 0.038456842 ubox
18 27 0.019491075 ubox
18 33 0.040709134 ubox
18 35 0.080307719 ubox
18 38 0.007962986 ubox
19 26 0.019395203 ubox
19 32 0.038547861 ubox
20 33 0.085126846 ubox
21 29 0.022490580 ubox
21 32 0.087235427 ubox
22 28 0.022515339 ubox
22 31 0.091822453 ubox
22 40 0.043282831 ubox
23 30 0.092633538 ubox
23 39 0.044391261 ubox
24 29 0.092379915 ubox
24 38 0.044383120 ubox
26 40 0.170245460 ubox
27 36 0.056565640 ubox
27 39 0.171745783 ubox
28 35 0.056607142 ubox
28 38 0.171656719 ubox
29 34 0.055329091 ubox
29 36 0.186823868 ubox
29 39 0.695392454 ubox
30 35 0.187032654 ubox
30 38 0.696785641 ubox
31 37 0.695955194 ubox
32 36 0.684878249 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
showpage
end
%%EOF
