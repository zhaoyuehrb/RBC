%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HLA-DQA1)
} def

/sequence { (\
ACAAUUACUCUACAGCUCAGAACACCAACUGCUGAGGCUGCCUUGGGAAGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 40 0.009678365 ubox
2 45 0.020555058 ubox
3 39 0.009272436 ubox
3 44 0.020472326 ubox
4 43 0.018973122 ubox
5 46 0.007009506 ubox
5 47 0.005951369 ubox
5 48 0.030137700 ubox
5 49 0.112836148 ubox
5 50 0.067512677 ubox
5 51 0.064872989 ubox
5 52 0.032629237 ubox
5 53 0.013523467 ubox
6 12 0.023951552 ubox
6 40 0.023929559 ubox
6 45 0.009333322 ubox
6 46 0.008492594 ubox
6 47 0.029154431 ubox
6 48 0.123235346 ubox
6 49 0.095410425 ubox
6 50 0.067893591 ubox
6 51 0.041271104 ubox
6 52 0.014742196 ubox
7 11 0.022692326 ubox
7 39 0.026065684 ubox
7 44 0.009040728 ubox
8 15 0.005762306 ubox
8 36 0.021776795 ubox
8 37 0.020609990 ubox
8 46 0.082812526 ubox
8 47 0.338436964 ubox
8 50 0.055000870 ubox
8 52 0.498973239 ubox
8 53 0.015384693 ubox
9 14 0.005313825 ubox
9 21 0.006234770 ubox
9 35 0.021806657 ubox
9 36 0.008061128 ubox
9 37 0.050081552 ubox
9 45 0.078540226 ubox
9 46 0.334262186 ubox
9 47 0.179884150 ubox
9 48 0.068189147 ubox
9 49 0.042339928 ubox
9 51 0.500075782 ubox
9 52 0.009949159 ubox
9 53 0.011028679 ubox
10 20 0.006550037 ubox
10 34 0.020802014 ubox
10 36 0.065666124 ubox
10 37 0.015502922 ubox
10 45 0.334613876 ubox
10 46 0.226993357 ubox
10 47 0.072521112 ubox
10 50 0.499557135 ubox
10 52 0.019299552 ubox
10 53 0.004748235 ubox
11 19 0.006383576 ubox
11 35 0.065534486 ubox
11 36 0.015307422 ubox
11 40 0.005461710 ubox
11 45 0.229748189 ubox
11 46 0.067765638 ubox
11 49 0.480761571 ubox
11 51 0.018787150 ubox
11 52 0.004422519 ubox
12 39 0.004634321 ubox
12 44 0.232683283 ubox
13 31 0.024195684 ubox
13 34 0.073430579 ubox
13 40 0.989858944 ubox
13 45 0.035614323 ubox
14 30 0.024228059 ubox
14 33 0.074273005 ubox
14 39 0.993892556 ubox
14 43 0.008573358 ubox
14 44 0.029537646 ubox
15 29 0.024109062 ubox
15 32 0.074301999 ubox
15 38 0.994072153 ubox
15 41 0.007872176 ubox
15 42 0.010699553 ubox
15 43 0.020892856 ubox
16 31 0.072226462 ubox
16 36 0.660241161 ubox
16 37 0.745345534 ubox
16 40 0.007159763 ubox
16 46 0.005501839 ubox
16 47 0.029951591 ubox
16 52 0.009929052 ubox
17 35 0.931864937 ubox
17 36 0.345505502 ubox
17 45 0.004190158 ubox
17 46 0.030005428 ubox
17 48 0.003615038 ubox
17 51 0.009964454 ubox
18 31 0.140072406 ubox
18 34 0.985908041 ubox
18 36 0.009241954 ubox
18 40 0.007576166 ubox
18 45 0.030226027 ubox
18 47 0.003612359 ubox
18 50 0.009932935 ubox
19 30 0.145002627 ubox
19 33 0.985319260 ubox
19 39 0.007610211 ubox
19 43 0.005949133 ubox
19 44 0.029674032 ubox
20 29 0.146432600 ubox
20 32 0.980441393 ubox
20 38 0.007593422 ubox
20 42 0.007542695 ubox
20 43 0.027010683 ubox
23 31 0.457647283 ubox
23 34 0.006721833 ubox
23 40 0.028925675 ubox
24 30 0.428417270 ubox
24 33 0.006630666 ubox
24 39 0.028787785 ubox
25 37 0.029135134 ubox
25 46 0.013945151 ubox
25 53 0.009982869 ubox
26 34 0.004579456 ubox
26 36 0.029067314 ubox
26 40 0.003729894 ubox
26 45 0.013955646 ubox
26 52 0.010083731 ubox
27 33 0.004670446 ubox
27 39 0.003664894 ubox
27 44 0.013853350 ubox
28 43 0.012930027 ubox
29 36 0.009238324 ubox
29 50 0.006431595 ubox
30 35 0.009629466 ubox
30 49 0.006322897 ubox
31 38 0.006546112 ubox
31 41 0.012841744 ubox
32 37 0.006531897 ubox
32 40 0.012856181 ubox
32 46 0.033433076 ubox
32 47 0.005125959 ubox
33 45 0.033486140 ubox
33 46 0.004890115 ubox
34 44 0.034147525 ubox
35 43 0.038673797 ubox
35 44 0.006342058 ubox
36 42 0.039249548 ubox
36 43 0.006381953 ubox
37 41 0.038635694 ubox
37 42 0.006525032 ubox
38 46 0.008456958 ubox
38 47 0.016644240 ubox
38 50 0.015618295 ubox
38 52 0.005190889 ubox
39 45 0.008300885 ubox
39 46 0.016551634 ubox
39 49 0.014067546 ubox
39 51 0.005055071 ubox
40 44 0.003966380 ubox
41 47 0.394240584 ubox
41 53 0.722812120 ubox
42 46 0.392649440 ubox
42 50 0.052154905 ubox
42 52 0.736747804 ubox
42 53 0.063747631 ubox
43 49 0.052014571 ubox
43 50 0.036326854 ubox
43 51 0.734870703 ubox
43 52 0.065104205 ubox
44 48 0.044593993 ubox
44 49 0.057167440 ubox
44 50 0.725222552 ubox
44 51 0.068758501 ubox
44 52 0.003887423 ubox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
showpage
end
%%EOF
