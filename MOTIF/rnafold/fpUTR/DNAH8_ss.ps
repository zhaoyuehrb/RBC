%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGGCAGCGCAACCGCUGGGGCCGGCCUCAGUGGGCUGAGUGGUCGGGGCAUCGGGGCCCAGAGAGCGGCUGGUUUCGAAGUAUAAAGCAUUCCGCACGACGGGGG\
) } def
/len { sequence length } bind def

/coor [
[97.09886169 180.63919067]
[96.24253082 165.66365051]
[95.38619995 150.68811035]
[94.52986908 135.71258545]
[75.57041931 126.61778259]
[64.88652802 108.50617218]
[49.89265060 108.93450928]
[34.89876556 109.36285400]
[21.32516861 117.49107361]
[8.38214016 110.12036896]
[-6.61174297 110.54871368]
[-20.18534088 118.67693329]
[-33.12836838 111.30622864]
[-48.12225342 111.73457336]
[-63.47852325 121.77007294]
[-78.61391449 113.01547241]
[-93.58944702 113.87180328]
[-108.56498718 114.72814178]
[-123.54051971 115.58447266]
[-138.51605225 116.44080353]
[-153.49159241 117.29713440]
[-168.46713257 118.15346527]
[-183.44267273 119.00979614]
[-198.41819763 119.86613464]
[-211.82469177 129.31059265]
[-226.59141541 122.17784882]
[-227.52761841 105.80545044]
[-213.67022705 97.03591919]
[-199.27453613 104.89059448]
[-184.29899597 104.03426361]
[-169.32345581 103.17793274]
[-154.34793091 102.32160187]
[-139.37239075 101.46526337]
[-124.39685059 100.60893250]
[-109.42131805 99.75260162]
[-94.44577789 98.89627075]
[-79.47024536 98.03993988]
[-71.10443115 89.17382050]
[-58.53416443 88.42116547]
[-48.55059433 96.74069214]
[-33.55670929 96.31234741]
[-21.05557442 88.21475983]
[-7.04008389 95.55483246]
[7.95379925 95.12648773]
[20.45493317 87.02890015]
[34.47042465 94.36897278]
[49.46430969 93.94062805]
[64.45819092 93.51229095]
[75.19282532 73.73377228]
[95.55191040 64.14578247]
[96.83553314 49.20080566]
[98.11915588 34.25582886]
[99.40278625 19.31085205]
[89.03432465 7.38312721]
[90.22022247 -8.37660599]
[102.25690460 -18.61837769]
[118.00321960 -17.26592445]
[128.11715698 -5.12163544]
[126.59830475 10.60949993]
[114.34776306 20.59447670]
[113.06413269 35.53945160]
[111.78050995 50.48442841]
[110.49688721 65.42940521]
[116.90391541 68.06932068]
[122.68910217 71.88389587]
[127.63960266 76.73278809]
[131.57330322 82.43762970]
[134.34550476 88.78855133]
[135.85421753 95.55191040]
[150.79919434 96.83553314]
[165.74417114 98.11915588]
[180.68914795 99.40278625]
[197.08927917 91.18318176]
[211.12806702 101.60601807]
[226.10360718 102.46234894]
[240.32298279 95.52550507]
[252.58778381 103.97676849]
[267.56332397 104.83309937]
[282.53884888 105.68943787]
[292.25674438 93.59223175]
[307.23803711 89.54990387]
[321.72213745 95.11682129]
[330.13958740 108.15238190]
[329.25375366 123.64414978]
[319.40521240 135.63522339]
[304.38095093 139.51478577]
[289.95809937 133.79107666]
[281.68252563 120.66497040]
[266.70700073 119.80863953]
[251.73144531 118.95230865]
[238.58322144 125.95040131]
[225.24726868 117.43788910]
[210.27172852 116.58155823]
[200.94978333 124.43624878]
[188.37567139 123.75109863]
[179.40551758 114.34776306]
[164.46054077 113.06413269]
[149.51556396 111.78050995]
[134.57058716 110.49688721]
[131.76246643 117.21790314]
[127.66326904 123.23905945]
[122.43962860 128.31561279]
[116.30387115 132.24119568]
[109.50540161 134.85624695]
[110.36173248 149.83178711]
[111.21807098 164.80731201]
[112.07440186 179.78285217]
[119.01511383 195.25097656]
[106.07287598 206.20245361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[4 104]
[6 48]
[7 47]
[8 46]
[10 44]
[11 43]
[13 41]
[14 40]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[50 63]
[51 62]
[52 61]
[53 60]
[69 99]
[70 98]
[71 97]
[72 96]
[74 93]
[75 92]
[77 90]
[78 89]
[79 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
