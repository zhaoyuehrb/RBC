%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OXCT2)
} def

/sequence { (\
CAGGGCGCGGGCGCCCGCCCUGCUCUGUGACGCGCGGCCCGAGGCGCACGCAGGGCUCACACCACCUGUCCUGGCCUCCGACCCGGGCCGACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.095135372 ubox
1 27 0.980171797 ubox
1 29 0.065201322 ubox
2 21 0.102911568 ubox
2 26 0.990986796 ubox
2 28 0.062289739 ubox
2 72 0.004917371 ubox
3 16 0.008680878 ubox
3 20 0.104333137 ubox
3 21 0.005940383 ubox
3 25 0.992532565 ubox
3 26 0.007055608 ubox
3 71 0.005437343 ubox
4 15 0.008697556 ubox
4 19 0.104336556 ubox
4 20 0.006956335 ubox
4 24 0.991986052 ubox
4 25 0.007905120 ubox
4 26 0.059035391 ubox
4 70 0.005439278 ubox
4 89 0.005134917 ubox
5 14 0.008699186 ubox
5 18 0.104290773 ubox
5 19 0.007029071 ubox
5 23 0.992635100 ubox
5 24 0.003904219 ubox
5 25 0.059225857 ubox
5 69 0.005430971 ubox
5 88 0.005143872 ubox
6 13 0.008699077 ubox
6 17 0.104246555 ubox
6 22 0.992568536 ubox
6 68 0.005430771 ubox
6 87 0.005147099 ubox
7 12 0.008475471 ubox
7 14 0.006959652 ubox
7 16 0.103728301 ubox
7 18 0.045393502 ubox
7 21 0.972772400 ubox
7 23 0.059694797 ubox
7 67 0.003921690 ubox
8 13 0.007627030 ubox
8 17 0.045894298 ubox
8 22 0.059756983 ubox
8 85 0.005142662 ubox
9 15 0.102296524 ubox
9 16 0.046330541 ubox
9 19 0.010593105 ubox
9 20 0.992893538 ubox
9 21 0.017557487 ubox
9 84 0.005142949 ubox
10 14 0.100658631 ubox
10 15 0.046275910 ubox
10 18 0.009503296 ubox
10 19 0.993265332 ubox
10 20 0.014722630 ubox
10 83 0.005141271 ubox
11 18 0.993315139 ubox
11 19 0.011006176 ubox
11 82 0.005120267 ubox
12 17 0.991938432 ubox
12 80 0.004758849 ubox
13 79 0.004450951 ubox
17 56 0.007208606 ubox
18 55 0.007217727 ubox
19 54 0.007218013 ubox
20 53 0.007217829 ubox
21 34 0.012523642 ubox
21 52 0.007215577 ubox
22 33 0.037240257 ubox
22 51 0.007216507 ubox
22 56 0.016331578 ubox
23 27 0.003950461 ubox
23 32 0.038329012 ubox
23 34 0.004988989 ubox
23 50 0.007149738 ubox
23 55 0.017083227 ubox
24 30 0.022258444 ubox
24 54 0.017083133 ubox
25 29 0.022455690 ubox
25 53 0.017113942 ubox
26 32 0.005276801 ubox
26 34 0.024640646 ubox
26 52 0.017114627 ubox
27 31 0.008866900 ubox
27 33 0.046244305 ubox
27 35 0.029910879 ubox
27 49 0.007080468 ubox
27 51 0.017125375 ubox
27 92 0.019828322 ubox
28 32 0.044179695 ubox
28 34 0.053135685 ubox
28 48 0.007087526 ubox
28 50 0.017103906 ubox
28 90 0.010988533 ubox
28 91 0.021099710 ubox
29 33 0.065674165 ubox
29 35 0.015637928 ubox
29 47 0.006860066 ubox
29 49 0.016945791 ubox
29 89 0.013953917 ubox
31 46 0.006844522 ubox
31 90 0.029296834 ubox
32 45 0.006846632 ubox
32 47 0.017377718 ubox
32 88 0.067534911 ubox
32 89 0.020739329 ubox
33 44 0.006845155 ubox
33 46 0.017424104 ubox
33 87 0.070683919 ubox
33 90 0.016095505 ubox
34 45 0.017420212 ubox
34 89 0.007090858 ubox
35 41 0.005516495 ubox
35 44 0.017418548 ubox
35 85 0.070688191 ubox
35 90 0.982805484 ubox
36 40 0.005173318 ubox
36 84 0.070653753 ubox
36 89 0.997227700 ubox
37 82 0.003994672 ubox
37 83 0.070558106 ubox
37 88 0.997306176 ubox
38 87 0.997305309 ubox
39 86 0.997302739 ubox
40 80 0.064193945 ubox
40 85 0.997132003 ubox
41 78 0.307456347 ubox
41 79 0.049456141 ubox
41 84 0.949477110 ubox
42 77 0.370783506 ubox
43 76 0.371799100 ubox
43 77 0.003546532 ubox
43 78 0.003737805 ubox
43 79 0.011076193 ubox
43 83 0.926506434 ubox
43 84 0.003335147 ubox
44 75 0.371807035 ubox
44 76 0.004035700 ubox
44 77 0.003471698 ubox
44 78 0.011077639 ubox
44 82 0.926510359 ubox
44 83 0.003545658 ubox
45 73 0.008247151 ubox
45 74 0.371536112 ubox
45 80 0.924585625 ubox
46 72 0.010304667 ubox
46 75 0.037824031 ubox
46 79 0.918205101 ubox
47 73 0.244759789 ubox
47 74 0.040572849 ubox
48 72 0.237385418 ubox
49 73 0.014019442 ubox
49 80 0.013700085 ubox
50 69 0.348957199 ubox
50 72 0.005723132 ubox
50 75 0.668864937 ubox
50 79 0.013751852 ubox
51 68 0.355302122 ubox
51 73 0.798398413 ubox
51 74 0.483948735 ubox
52 67 0.355262026 ubox
52 72 0.923110328 ubox
52 77 0.004431691 ubox
53 63 0.005219825 ubox
53 66 0.355244492 ubox
53 67 0.005934869 ubox
53 71 0.933506183 ubox
53 72 0.034522652 ubox
53 76 0.003823171 ubox
53 77 0.019399550 ubox
53 78 0.006350497 ubox
54 62 0.005885871 ubox
54 63 0.029125545 ubox
54 65 0.353906552 ubox
54 66 0.008310183 ubox
54 70 0.933495999 ubox
54 71 0.037220389 ubox
54 76 0.021114020 ubox
55 62 0.040809057 ubox
55 65 0.010068910 ubox
55 69 0.932742413 ubox
55 70 0.037176803 ubox
55 75 0.021267124 ubox
56 68 0.932840786 ubox
56 74 0.021402243 ubox
57 73 0.020264175 ubox
58 68 0.027572908 ubox
58 73 0.005908820 ubox
59 67 0.034193983 ubox
59 69 0.036521103 ubox
59 72 0.005242103 ubox
60 68 0.038769612 ubox
61 67 0.038850658 ubox
61 69 0.008872753 ubox
62 68 0.009199443 ubox
68 92 0.015006098 ubox
69 91 0.015012984 ubox
70 90 0.014635541 ubox
72 80 0.003333861 ubox
72 90 0.007994261 ubox
73 79 0.005150325 ubox
73 89 0.018095948 ubox
74 78 0.005691186 ubox
74 88 0.018329098 ubox
75 87 0.018275831 ubox
76 86 0.017953201 ubox
77 85 0.015636454 ubox
78 85 0.007026566 ubox
78 86 0.003571369 ubox
79 85 0.007815571 ubox
80 84 0.019282068 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
35 90 0.9500000 lbox
36 89 0.9500000 lbox
37 88 0.9500000 lbox
38 87 0.9500000 lbox
39 86 0.9500000 lbox
40 85 0.9500000 lbox
41 84 0.9500000 lbox
43 83 0.9500000 lbox
44 82 0.9500000 lbox
45 80 0.9500000 lbox
46 79 0.9500000 lbox
51 73 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
55 69 0.9500000 lbox
56 68 0.9500000 lbox
showpage
end
%%EOF
