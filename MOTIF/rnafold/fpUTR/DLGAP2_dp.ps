%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DLGAP2)
} def

/sequence { (\
CCCAACCCGCGAGCCCCGGGAGCCGUCGGUCUGAGGAGGGGCCGCUUCGCCAUGUCGCCCCGCACCUGCUGAGCCCGGAGCGUCCGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.007657281 ubox
1 89 0.027377165 ubox
2 35 0.007690831 ubox
2 88 0.027932377 ubox
2 89 0.056408061 ubox
3 33 0.008596988 ubox
3 88 0.057175493 ubox
4 32 0.008503465 ubox
5 30 0.006005810 ubox
6 20 0.010142233 ubox
6 29 0.006086076 ubox
6 89 0.934172256 ubox
7 19 0.010195440 ubox
7 28 0.006032487 ubox
7 29 0.006848281 ubox
7 88 0.945097339 ubox
7 89 0.214659117 ubox
8 18 0.010200114 ubox
8 28 0.006893602 ubox
8 82 0.006628454 ubox
8 86 0.968523122 ubox
8 88 0.217867681 ubox
9 17 0.010001928 ubox
9 26 0.006112051 ubox
9 27 0.006777255 ubox
9 81 0.006585645 ubox
9 83 0.016194230 ubox
9 85 0.968484719 ubox
10 25 0.009191203 ubox
10 80 0.006550606 ubox
10 82 0.020218653 ubox
10 86 0.206675557 ubox
11 24 0.009185043 ubox
11 81 0.014548080 ubox
11 84 0.918607871 ubox
11 85 0.186592758 ubox
12 83 0.899066075 ubox
13 23 0.009102876 ubox
13 81 0.994540511 ubox
13 83 0.038929769 ubox
14 22 0.009070955 ubox
14 78 0.007040566 ubox
14 80 0.995033867 ubox
14 82 0.041224226 ubox
14 89 0.047490171 ubox
15 77 0.006821173 ubox
15 78 0.062858977 ubox
15 88 0.048332585 ubox
15 89 0.044196089 ubox
16 77 0.049422973 ubox
16 78 0.994835661 ubox
16 88 0.044955148 ubox
17 77 0.996274954 ubox
17 86 0.066695296 ubox
18 75 0.004193817 ubox
18 76 0.990676119 ubox
18 85 0.066772353 ubox
19 74 0.004218822 ubox
19 75 0.983512864 ubox
19 76 0.117212694 ubox
19 84 0.066751309 ubox
19 85 0.007511572 ubox
20 27 0.005356572 ubox
20 31 0.004558416 ubox
20 74 0.901646861 ubox
20 75 0.162395913 ubox
20 83 0.065003065 ubox
20 84 0.007683159 ubox
21 26 0.010918090 ubox
21 30 0.005125583 ubox
21 32 0.054851461 ubox
21 70 0.098815074 ubox
21 83 0.007665053 ubox
22 30 0.077797860 ubox
22 31 0.055759165 ubox
22 69 0.100152629 ubox
22 74 0.413258366 ubox
22 81 0.066444186 ubox
23 29 0.098869988 ubox
23 36 0.069077912 ubox
23 68 0.099197729 ubox
23 73 0.540294649 ubox
23 78 0.010092772 ubox
23 80 0.066070821 ubox
24 28 0.098290709 ubox
24 33 0.024660112 ubox
24 35 0.069335249 ubox
24 68 0.013429346 ubox
24 71 0.044333298 ubox
24 77 0.012144073 ubox
25 32 0.019572396 ubox
25 45 0.005888855 ubox
25 65 0.015775725 ubox
25 67 0.013678171 ubox
25 69 0.173806430 ubox
25 70 0.027146062 ubox
25 74 0.040426243 ubox
25 76 0.012082825 ubox
26 34 0.063573975 ubox
26 36 0.005670942 ubox
26 37 0.018822513 ubox
26 64 0.015376649 ubox
26 68 0.170825212 ubox
26 72 0.909131664 ubox
26 73 0.034302291 ubox
26 78 0.060268833 ubox
26 79 0.006906139 ubox
27 33 0.067387197 ubox
27 35 0.007346759 ubox
27 36 0.020262617 ubox
27 44 0.008240354 ubox
27 62 0.013657684 ubox
27 68 0.038500822 ubox
27 71 0.966325587 ubox
27 77 0.065317396 ubox
27 78 0.005437543 ubox
28 32 0.041615339 ubox
28 43 0.009152373 ubox
28 61 0.013180996 ubox
28 66 0.177819724 ubox
28 67 0.031832917 ubox
28 70 0.966831338 ubox
28 75 0.011591738 ubox
28 76 0.065401808 ubox
29 42 0.009154708 ubox
29 60 0.012925451 ubox
29 63 0.012638095 ubox
29 65 0.177961655 ubox
29 66 0.031126069 ubox
29 69 0.967451671 ubox
29 74 0.012791313 ubox
29 75 0.065146452 ubox
30 36 0.004063944 ubox
30 37 0.015636198 ubox
30 41 0.009145258 ubox
30 62 0.012688434 ubox
30 64 0.169745074 ubox
30 68 0.960917837 ubox
30 72 0.022662362 ubox
30 73 0.008315866 ubox
30 79 0.003627753 ubox
31 35 0.008811246 ubox
31 36 0.021669468 ubox
31 38 0.007099556 ubox
31 40 0.009140823 ubox
31 71 0.030072242 ubox
31 73 0.072548211 ubox
31 78 0.003645721 ubox
32 37 0.012280563 ubox
32 39 0.009029375 ubox
32 57 0.010851218 ubox
32 62 0.060891750 ubox
32 64 0.046978880 ubox
32 68 0.028928634 ubox
32 71 0.004607636 ubox
32 72 0.072370968 ubox
32 77 0.003642150 ubox
33 56 0.011599618 ubox
33 61 0.028759331 ubox
33 63 0.058073987 ubox
33 67 0.063040416 ubox
33 70 0.005515528 ubox
33 76 0.003637257 ubox
34 55 0.011542295 ubox
34 67 0.945705332 ubox
34 70 0.071385782 ubox
35 51 0.003249938 ubox
35 56 0.003707941 ubox
35 59 0.020929160 ubox
35 60 0.009412538 ubox
35 61 0.025263279 ubox
35 66 0.957867938 ubox
35 67 0.014631107 ubox
35 69 0.070597406 ubox
35 75 0.003458593 ubox
36 50 0.003240260 ubox
36 55 0.003646382 ubox
36 58 0.020914747 ubox
36 59 0.009263772 ubox
36 60 0.023900547 ubox
36 65 0.955296965 ubox
36 66 0.014524347 ubox
36 74 0.003445892 ubox
37 67 0.061296793 ubox
38 56 0.018143262 ubox
38 59 0.022364445 ubox
38 60 0.003320628 ubox
38 61 0.997507715 ubox
38 66 0.043240598 ubox
39 55 0.017684085 ubox
39 56 0.007061349 ubox
39 58 0.022350794 ubox
39 60 0.998585237 ubox
39 61 0.014126680 ubox
39 65 0.035016610 ubox
40 51 0.028279536 ubox
40 56 0.021067179 ubox
40 59 0.998944918 ubox
40 60 0.014167237 ubox
41 50 0.028345551 ubox
41 55 0.021155071 ubox
41 58 0.998955509 ubox
41 59 0.013317271 ubox
41 63 0.021719324 ubox
42 49 0.028049530 ubox
42 54 0.021150064 ubox
42 57 0.990032710 ubox
42 62 0.021746468 ubox
43 49 0.018567065 ubox
43 54 0.037191969 ubox
43 57 0.123128690 ubox
43 62 0.004440840 ubox
44 48 0.017808759 ubox
44 50 0.034605390 ubox
44 53 0.033293414 ubox
44 55 0.964531110 ubox
44 56 0.169767672 ubox
44 58 0.020645147 ubox
44 61 0.005700972 ubox
45 49 0.034454672 ubox
45 54 0.994176568 ubox
45 57 0.020685659 ubox
45 73 0.004983957 ubox
46 72 0.004931755 ubox
46 73 0.004854657 ubox
47 71 0.004676077 ubox
47 72 0.006390636 ubox
48 54 0.037827677 ubox
48 57 0.005309651 ubox
48 71 0.006609638 ubox
49 53 0.024301522 ubox
49 55 0.015162499 ubox
49 56 0.007011684 ubox
49 58 0.006621704 ubox
49 69 0.005729051 ubox
49 70 0.005838220 ubox
50 54 0.015510879 ubox
50 57 0.006630045 ubox
50 68 0.005223326 ubox
51 68 0.006552402 ubox
52 67 0.006922297 ubox
53 64 0.007553007 ubox
54 63 0.008502691 ubox
54 65 0.007458412 ubox
55 62 0.006948455 ubox
55 64 0.007460115 ubox
56 62 0.006084706 ubox
57 61 0.005782675 ubox
57 63 0.008691382 ubox
58 62 0.008633895 ubox
62 69 0.080451114 ubox
63 68 0.080479063 ubox
63 71 0.008915925 ubox
63 73 0.003698719 ubox
64 70 0.008279108 ubox
66 73 0.016213233 ubox
67 72 0.016385051 ubox
68 74 0.006496361 ubox
69 73 0.008415381 ubox
74 89 0.011071981 ubox
75 88 0.011611333 ubox
76 86 0.013299789 ubox
77 85 0.013349593 ubox
78 84 0.013345527 ubox
79 83 0.011610864 ubox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
18 76 0.9500000 lbox
19 75 0.9500000 lbox
20 74 0.9500000 lbox
26 72 0.9500000 lbox
27 71 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
36 65 0.9500000 lbox
38 61 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
showpage
end
%%EOF
