%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGCACGUGACUAAGGCCUUGGGCGCGGCAGGUGGUAGCCUUCCCGCCCUUCUGGCCUCUCCAUCCCCUGCUGCGGGGGACCGCGCAAGCGCAGUGAGUACUGCACGUUGUCGCGGGCCAGUAACGUCAUCAGACGUGUGUGUGUCCCUGCGGCGCUAAGAAGGGGAGACUGAGGCUGAGGCUGGGGAACAUCGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[92.72861481 411.76895142]
[81.78771210 400.36404419]
[82.19934082 384.56509399]
[93.71929932 373.74539185]
[93.95142365 358.74719238]
[94.18355560 343.74899292]
[86.64413452 330.90350342]
[94.59407043 317.22470093]
[94.82620239 302.22650146]
[94.94226837 287.22695923]
[94.94226837 272.22695923]
[85.36052704 257.52792358]
[94.69152832 241.65640259]
[94.45939636 226.65820312]
[83.62014008 216.50704956]
[83.17107391 201.30004883]
[93.89202881 189.99964905]
[93.65990448 175.00144958]
[93.42777252 160.00325012]
[93.19564819 145.00505066]
[92.96351624 130.00683594]
[92.73139191 115.00863647]
[80.06150055 106.97908020]
[66.39954376 113.17188263]
[52.73757935 119.36469269]
[39.07562256 125.55750275]
[25.41366196 131.75030518]
[18.88435555 138.14764404]
[11.49203014 137.93141174]
[-2.26412797 143.91206360]
[-11.83501530 156.51002502]
[-26.59184265 154.48881531]
[-40.34799957 160.46945190]
[-54.10416031 166.45010376]
[-67.86032104 172.43074036]
[-77.17521667 185.92758179]
[-93.49729156 184.33953857]
[-100.03578949 169.30024719]
[-90.06446838 156.28085327]
[-73.84096527 158.67459106]
[-60.08480453 152.69393921]
[-46.32864380 146.71330261]
[-32.57248688 140.73265076]
[-23.98553276 128.56246948]
[-8.24477291 130.15589905]
[5.51138544 124.17525482]
[19.22085381 118.08834839]
[32.88281250 111.89553833]
[46.54477310 105.70273590]
[60.20673370 99.50992584]
[73.86869049 93.31711578]
[79.38622284 89.76735687]
[85.07765961 88.14980316]
[90.39895630 88.34960175]
[94.86770630 90.11467743]
[98.09539795 93.07752991]
[105.22386169 79.87961578]
[112.35232544 66.68170166]
[119.48078918 53.48377991]
[126.60925293 40.28586578]
[133.73771667 27.08794785]
[125.80496216 14.01053619]
[125.48517609 -1.18138754]
[132.76411438 -14.40573788]
[145.59919739 -22.15922356]
[160.49160767 -22.44524956]
[167.62007141 -35.64316559]
[174.74853516 -48.84108353]
[181.87699890 -62.03900146]
[189.00546265 -75.23691559]
[196.13392639 -88.43483734]
[202.53741455 -101.99932098]
[208.19714355 -115.89059448]
[213.85687256 -129.78186035]
[219.51660156 -143.67314148]
[225.17633057 -157.56440735]
[230.83605957 -171.45568848]
[236.49578857 -185.34695435]
[242.15551758 -199.23823547]
[247.81524658 -213.12950134]
[240.52284241 -217.80697632]
[235.38613892 -226.45440674]
[234.37889099 -237.89585876]
[233.91468811 -252.88867188]
[233.45048523 -267.88150024]
[232.98628235 -282.87429810]
[232.52207947 -297.86712646]
[231.94189453 -312.85589600]
[231.24572754 -327.83972168]
[230.54956055 -342.82357788]
[217.40661621 -354.36373901]
[216.68719482 -371.50128174]
[228.34852600 -383.61550903]
[227.42057800 -398.58679199]
[226.49261475 -413.55807495]
[225.56465149 -428.52932739]
[224.63670349 -443.50061035]
[215.12821960 -456.86175537]
[222.19024658 -471.66244507]
[238.55798340 -472.67694092]
[247.39369202 -458.86166382]
[239.60797119 -444.42855835]
[240.53593445 -429.45727539]
[241.46388245 -414.48602295]
[242.39184570 -399.51473999]
[243.31979370 -384.54348755]
[254.07835388 -377.44567871]
[258.85385132 -365.26473999]
[255.69331360 -352.36813354]
[245.53340149 -343.51974487]
[246.22956848 -328.53588867]
[246.92572021 -313.55206299]
[250.37864685 -307.01214600]
[247.51490784 -298.33132935]
[247.97909546 -283.33850098]
[248.44329834 -268.34570312]
[248.90750122 -253.35287476]
[249.37170410 -238.36006165]
[262.73153687 -231.53985596]
[275.14685059 -239.95767212]
[287.49670410 -248.47128296]
[299.78027344 -257.08023071]
[300.17391968 -272.47991943]
[309.45150757 -284.55386353]
[323.88891602 -288.79946899]
[337.89031982 -283.78958130]
[350.17388916 -292.39849854]
[362.45748901 -301.00744629]
[374.74105835 -309.61636353]
[387.02462769 -318.22528076]
[393.45455933 -333.31130981]
[409.76477051 -335.01696777]
[419.17672729 -321.58761597]
[412.00817871 -306.83822632]
[395.63357544 -305.94171143]
[383.34997559 -297.33279419]
[371.06640625 -288.72384644]
[358.78283691 -280.11492920]
[346.49923706 -271.50601196]
[346.43103027 -256.63543701]
[337.51400757 -244.51312256]
[322.99905396 -239.91210938]
[308.38919067 -244.79663086]
[296.10562134 -236.18771362]
[292.42999268 -229.77030945]
[283.56466675 -227.54232788]
[271.14932251 -219.12452698]
[261.70651245 -207.46977234]
[256.04678345 -193.57850647]
[250.38706970 -179.68722534]
[244.72732544 -165.79595947]
[239.06759644 -151.90467834]
[233.40786743 -138.01341248]
[227.74813843 -124.12213898]
[222.08840942 -110.23086548]
[216.42868042 -96.33959198]
[230.23788452 -102.19670105]
[244.61891174 -97.93214417]
[253.00279236 -85.49387360]
[251.55996704 -70.56343079]
[240.94947815 -59.96070480]
[226.01799011 -58.52879715]
[213.58584595 -66.92177582]
[209.33183289 -81.30637360]
[202.20336914 -68.10845184]
[195.07490540 -54.91053772]
[187.94644165 -41.71261978]
[180.81797791 -28.51470184]
[173.68951416 -15.31678581]
[181.61599731 -2.70581722]
[182.16957092 12.27915955]
[175.10151672 25.61740875]
[162.22155762 33.67987823]
[146.93563843 34.21641159]
[139.80717468 47.41432571]
[132.67871094 60.61224365]
[125.55024719 73.81015778]
[118.42178345 87.00807953]
[111.29331970 100.20599365]
[107.72959137 114.77651215]
[107.96172333 129.77471924]
[108.19384766 144.77291870]
[108.42597961 159.77111816]
[108.65810394 174.76931763]
[108.89023590 189.76753235]
[119.95577240 200.73072815]
[119.97752380 215.94433594]
[109.45760345 226.42607117]
[109.68972778 241.42428589]
[118.39214325 250.94998169]
[118.27317047 263.45086670]
[109.94226837 272.22695923]
[109.94226837 287.22695923]
[113.07328796 295.81500244]
[109.82440186 302.45864868]
[109.59227753 317.45684814]
[117.11508942 331.37509155]
[109.18175507 343.98110962]
[108.94963074 358.97930908]
[108.71749878 373.97750854]
[119.89710236 385.14855957]
[119.81961823 400.95263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[8 196]
[9 195]
[10 193]
[11 192]
[13 189]
[14 188]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[29 46]
[30 45]
[32 43]
[33 42]
[34 41]
[35 40]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 112]
[89 111]
[90 110]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[119 147]
[120 146]
[121 144]
[122 143]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
