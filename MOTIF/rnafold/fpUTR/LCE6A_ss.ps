%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAAGGCCUCCAGACUCCUCCUGGGAUAACUUGUCCACACAUCUUCCACUAGGGUAAGGCUACUUCUGGCUGAGGAGACACUUGGAUGUAGCUCAAGUGCUGCUUAGGCAGUCCUGAUCUCUCCUCUCGUCUCUUCCCAGGGAGCUGAAAAGCCAGAUUCGACCUGGUAGCCAAGCA\
) } def
/len { sequence length } bind def

/coor [
[119.47406006 120.02193451]
[113.89630127 131.62614441]
[102.32293701 141.09275818]
[92.88313293 152.74995422]
[83.44332123 164.40713501]
[74.00351715 176.06433105]
[64.56371307 187.72151184]
[69.16523743 203.98405457]
[63.23545074 219.63325500]
[49.29177856 228.58337402]
[32.92597580 227.48011780]
[23.69105530 239.30027771]
[14.45613384 251.12045288]
[5.22121143 262.94061279]
[-4.01371098 274.76077271]
[-0.58571458 290.01800537]
[-7.81275415 303.88537598]
[-22.28244209 309.81512451]
[-37.16263580 305.00744629]
[-45.42736053 291.73233032]
[-43.17426682 276.25790405]
[-31.46719742 265.89074707]
[-15.83387184 265.52584839]
[-6.59894991 253.70568848]
[2.63597202 241.88552856]
[11.87089443 230.06536865]
[21.10581589 218.24520874]
[16.24825287 205.79290771]
[18.20064545 192.46055603]
[26.55800629 181.75311279]
[39.21745682 176.53892517]
[52.90652084 178.28170776]
[62.34632874 166.62452698]
[71.78613281 154.96733093]
[81.22593689 143.31015015]
[90.66574860 131.65295410]
[88.22398376 124.56156921]
[74.35102081 130.26602173]
[60.47805786 135.97048950]
[46.60509491 141.67495728]
[33.40205765 148.79393005]
[21.56425858 139.58161926]
[25.22206306 125.03443909]
[40.00827789 122.51640320]
[54.45233917 118.47052765]
[68.89640045 114.42465973]
[83.34046173 110.37878418]
[80.89870453 103.28739929]
[66.28314972 99.91313171]
[50.76730347 105.22261047]
[38.59082413 94.23783112]
[42.27983093 78.25899506]
[58.03938675 73.72375488]
[69.65741730 85.29758453]
[84.27296448 88.67184448]
[98.97183990 85.68132782]
[111.10709381 76.86454773]
[113.71031952 61.50678635]
[126.14279175 52.73818970]
[140.76803589 55.31461334]
[152.90328979 46.49783707]
[165.03854370 37.68105698]
[177.17379761 28.86427879]
[189.30905151 20.04749870]
[201.44430542 11.23072052]
[213.57955933 2.41394186]
[225.07023621 -7.22787237]
[235.86032104 -17.64774704]
[246.65042114 -28.06762314]
[257.44052124 -38.48749924]
[268.23062134 -48.90737534]
[279.02072144 -59.32725143]
[289.81082153 -69.74712372]
[299.25061035 -81.40431213]
[307.19940186 -94.12503815]
[315.14819336 -106.84575653]
[323.09698486 -119.56648254]
[331.04577637 -132.28720093]
[338.99456787 -145.00791931]
[346.94335938 -157.72863770]
[354.89215088 -170.44937134]
[347.80224609 -184.00224304]
[348.44378662 -199.18399048]
[356.54440308 -211.92156982]
[369.84411621 -218.84788513]
[384.72479248 -218.19158936]
[392.67358398 -230.91232300]
[400.62237549 -243.63304138]
[397.55999756 -254.10676575]
[400.71777344 -264.32217407]
[408.81649780 -270.96154785]
[419.01528931 -272.00936890]
[427.40319824 -284.44494629]
[428.70565796 -300.21243286]
[442.23715210 -306.43719482]
[450.62506104 -318.87274170]
[452.83923340 -327.76431274]
[459.26943970 -331.45040894]
[467.87307739 -343.73767090]
[469.45050049 -359.48004150]
[483.08859253 -365.46768188]
[491.69223022 -377.75497437]
[500.29589844 -390.04223633]
[508.89953613 -402.32952881]
[517.50317383 -414.61682129]
[518.39263916 -430.99182129]
[533.13897705 -438.16668701]
[546.57232666 -428.76052856]
[544.87371826 -412.44958496]
[529.79046631 -406.01315308]
[521.18682861 -393.72589111]
[512.58319092 -381.43859863]
[503.97952271 -369.15133667]
[495.37588501 -356.86404419]
[494.41381836 -342.00054932]
[480.16033936 -335.13403320]
[471.55670166 -322.84674072]
[463.06060791 -310.48486328]
[454.67272949 -298.04928589]
[453.97024536 -283.17126465]
[439.83877563 -276.05703735]
[431.45086670 -263.62149048]
[431.54644775 -244.30178833]
[413.34310913 -235.68424988]
[405.39431763 -222.96353149]
[397.44552612 -210.24281311]
[404.55865479 -197.15583801]
[404.16351318 -182.16584778]
[396.26614380 -169.30125427]
[382.90213013 -162.06941223]
[367.61285400 -162.50057983]
[359.66406250 -149.77986145]
[351.71527100 -137.05912781]
[343.76651001 -124.33840942]
[335.81771851 -111.61769104]
[327.86892700 -98.89697266]
[319.92013550 -86.17624664]
[311.97134399 -73.45552826]
[325.95288086 -70.92379761]
[332.54586792 -59.59457397]
[346.72866821 -54.71105194]
[360.91143799 -49.82752991]
[376.89727783 -53.48607254]
[387.85882568 -41.28868103]
[382.51977539 -25.78298187]
[366.37249756 -22.91991234]
[356.02792358 -35.64474869]
[341.84512329 -40.52827454]
[327.66235352 -45.41179657]
[319.56448364 -41.14784622]
[310.08892822 -42.30446625]
[302.66442871 -48.91356659]
[300.23068237 -58.95702744]
[289.44058228 -48.53715134]
[278.65048218 -38.11727905]
[267.86038208 -27.69740105]
[257.07031250 -17.27752686]
[246.28019714 -6.85765076]
[235.49011230 3.56222486]
[250.48152161 3.05474567]
[262.98324585 11.34372425]
[268.35147095 25.35021782]
[264.59222412 39.87151337]
[253.10186768 49.51367569]
[238.14846802 50.69512177]
[225.28648376 42.97700500]
[219.29348755 29.22621918]
[222.39634705 14.54919720]
[210.26109314 23.36597633]
[198.12583923 32.18275452]
[185.99057007 40.99953461]
[173.85531616 49.81631088]
[161.72006226 58.63309097]
[149.58480835 67.44986725]
[147.51568604 82.15545654]
[135.33441162 91.26979828]
[119.92387390 88.99980164]
[107.78862000 97.81658173]
[114.65067291 101.23666382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 33]
[7 32]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[48 55]
[49 54]
[56 178]
[57 177]
[60 174]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[86 126]
[87 125]
[88 124]
[92 122]
[93 121]
[95 119]
[96 118]
[98 117]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
