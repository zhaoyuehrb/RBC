%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGUUCAGGCGGAAGUGGCGUCAGGGGCGCUUUAGGGACUGGACUUGCAGUGUAAACAGAGACGCUGCAAAUUGCUUGUGGACGGUGUAGGCCGCUGCAGGCCACC\
) } def
/len { sequence length } bind def

/coor [
[76.39483643 165.15835571]
[65.07863617 155.31236267]
[59.89371490 141.23696899]
[62.11857224 126.40288544]
[71.20460510 114.46789551]
[84.91017151 108.37512207]
[69.93463898 109.23145294]
[54.95909882 110.08778381]
[39.98356247 110.94411469]
[25.00802612 111.80044556]
[10.03248882 112.65677643]
[6.19688082 126.54046631]
[-1.74553931 138.53071594]
[-12.99955463 147.45126343]
[-26.44587135 152.43196106]
[-40.75243378 152.99362183]
[-54.50638580 149.09420776]
[-66.35359192 141.13148499]
[-75.13196564 129.90264893]
[-79.98545074 116.52444458]
[-94.97933197 116.95278168]
[-109.97321320 117.38112640]
[-124.96709442 117.80946350]
[-139.96098328 118.23780823]
[-154.95486450 118.66614532]
[-170.61488342 125.16232300]
[-181.19230652 111.91262817]
[-171.38853455 98.08069611]
[-155.38320923 103.67226410]
[-140.38931274 103.24392700]
[-125.39543915 102.81558228]
[-110.40155792 102.38724518]
[-95.40766907 101.95890045]
[-80.41378784 101.53056335]
[-75.67713165 86.58759308]
[-66.11478424 74.13256836]
[-52.85742950 65.66807556]
[-37.48284912 62.22309494]
[-21.82818985 64.22792053]
[-7.77043200 71.46051025]
[2.99866867 83.07095337]
[9.17615700 97.68124390]
[24.15169334 96.82491302]
[39.12723160 95.96858215]
[54.10276794 95.11224365]
[69.07830048 94.25591278]
[84.05384064 93.39958191]
[95.93237305 84.23986816]
[100.56762695 69.97401428]
[105.20288086 55.70816803]
[109.83813477 41.44232178]
[114.47339630 27.17647362]
[119.10865021 12.91062546]
[123.74390411 -1.35522187]
[128.37915039 -15.62106991]
[133.01441956 -29.88691711]
[123.78510284 -42.36086655]
[123.68410492 -57.87761307]
[132.75024414 -70.47064972]
[147.49742126 -75.29769897]
[162.25503540 -70.50266266]
[171.34849548 -57.92932129]
[171.28115845 -42.41239166]
[162.07893372 -29.91844749]
[147.28025818 -25.25166321]
[142.64500427 -10.98581505]
[138.00975037 3.28003311]
[133.37449646 17.54588127]
[128.73924255 31.81172943]
[124.10398865 46.07757568]
[119.46872711 60.34342575]
[114.83347321 74.60926819]
[110.19821930 88.87512207]
[112.00893402 91.36170959]
[113.24436188 94.11203766]
[113.87428284 96.99822235]
[113.89598846 99.89134216]
[127.16248322 106.89135742]
[140.42897034 113.89136505]
[153.69546509 120.89137268]
[166.96195984 127.89138031]
[180.22845459 134.89138794]
[193.49494934 141.89140320]
[206.76144409 148.89141846]
[215.96136475 150.16496277]
[220.30261230 156.28544617]
[233.36380005 163.66143799]
[246.42498779 171.03744507]
[259.48617554 178.41343689]
[275.87051392 177.71633911]
[284.43679810 191.70027161]
[276.37280273 205.97976685]
[259.97406006 205.86529541]
[252.11019897 191.47462463]
[239.04899597 184.09863281]
[225.98780823 176.72264099]
[212.92662048 169.34664917]
[199.76142883 162.15791321]
[186.49493408 155.15789795]
[173.22843933 148.15788269]
[159.96194458 141.15788269]
[146.69546509 134.15786743]
[133.42897034 127.15785980]
[120.16246796 120.15784454]
[106.89597321 113.15783691]
[116.83252716 124.39460754]
[120.13890839 139.02566528]
[115.99982452 153.44329834]
[105.43589783 164.09239197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[86 97]
[87 96]
[88 95]
[89 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
