%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCCGGCGCCACUCGGCCCAGGGCAGGGACCCCGCCACGGCCGGGACCGCCCGGCCCGGCCCCAGCCCGCGCCUCUCCGCGCCGCCCCGCGCUCCGCACCGCGCCCUCUCCGCGUCCCCGCCCGCGCGGCCGGACCGGGCAGCCAGAAAAAUCAUUUUUCUUCUCUGGGAAGGUGAACAUUUGUAGCAUUGAUUUCCCGGAUCUGGUAAC\
) } def
/len { sequence length } bind def

/coor [
[91.64930725 168.29531860]
[78.83084106 160.50514221]
[71.33998108 147.50949097]
[71.02382660 132.51281738]
[77.96033478 119.21301270]
[90.43795013 110.88993073]
[75.77967834 114.07349396]
[61.12140656 117.25705719]
[46.46313477 120.44062805]
[31.80486488 123.62419128]
[17.14659309 126.80775452]
[13.52354145 141.59407043]
[3.87917447 153.29335022]
[-9.83227730 159.61918640]
[-24.86878777 159.36553955]
[-38.24885559 152.63624573]
[-47.34267426 140.81390381]
[-62.00094604 143.99746704]
[-76.65921783 147.18103027]
[-82.59186554 159.27209473]
[-94.23485565 165.64602661]
[-107.23054504 164.17268372]
[-116.86017609 155.61248779]
[-131.56379700 158.57951355]
[-146.26742554 161.54653931]
[-160.97106934 164.51358032]
[-172.96812439 174.82769775]
[-186.97438049 169.76075745]
[-201.67800903 172.72778320]
[-216.38163757 175.69480896]
[-205.51538086 186.03524780]
[-206.67385864 200.99044800]
[-219.00294495 209.53408813]
[-233.41250610 205.36703491]
[-239.27854919 191.56161499]
[-232.27607727 178.29641724]
[-247.15834045 180.17202759]
[-262.04061890 182.04763794]
[-270.55023193 191.73905945]
[-282.98327637 192.99560547]
[-292.62057495 185.68634033]
[-307.52890015 187.34225464]
[-322.43722534 188.99816895]
[-337.34555054 190.65408325]
[-352.25387573 192.30998230]
[-367.16217041 193.96589661]
[-382.07049561 195.62181091]
[-394.95278931 205.76965332]
[-410.07977295 199.43675232]
[-411.89016724 183.13783264]
[-398.52154541 173.63984680]
[-383.72640991 180.71348572]
[-368.81808472 179.05757141]
[-353.90975952 177.40167236]
[-339.00146484 175.74575806]
[-324.09313965 174.08984375]
[-309.18481445 172.43394470]
[-294.27648926 170.77803040]
[-280.72009277 159.63291931]
[-263.91622925 167.16535950]
[-249.03395081 165.28974915]
[-234.15168762 163.41415405]
[-219.34866333 160.99118042]
[-204.64503479 158.02415466]
[-189.94140625 155.05712891]
[-178.99604797 144.95521545]
[-163.93809509 149.80993652]
[-149.23446655 146.84291077]
[-134.53083801 143.87588501]
[-119.82720184 140.90885925]
[-111.12878418 126.51443481]
[-94.38110352 122.79228973]
[-79.84278107 132.52276611]
[-65.18450928 129.33920288]
[-50.52624130 126.15563202]
[-47.15565109 111.62619019]
[-37.77233124 99.95302582]
[-24.19567299 93.48500061]
[-9.09548950 93.55336761]
[4.53293991 100.19813538]
[13.96302700 112.14949036]
[28.62129784 108.96591949]
[43.27956772 105.78235626]
[57.93783951 102.59879303]
[72.59610748 99.41522217]
[87.25437927 96.23165894]
[87.89777374 91.67098236]
[90.22682953 87.21607208]
[94.20951080 83.49414825]
[95.75543213 68.57402802]
[97.30135345 53.65390015]
[98.84727478 38.73377609]
[100.39319611 23.81365204]
[101.93911743 8.89352703]
[92.30084229 -0.51357269]
[89.87522888 -13.56358528]
[95.32744598 -25.45189667]
[106.46355438 -31.93214798]
[108.22936249 -46.82785034]
[95.65545654 -58.14233780]
[92.33666229 -74.55912781]
[99.38685608 -89.56845093]
[113.84794617 -97.33872986]
[115.39386749 -112.25885773]
[116.93979645 -127.17898560]
[118.48571777 -142.09910583]
[107.47711945 -153.20518494]
[106.23442078 -168.79330444]
[115.34437561 -181.50325012]
[130.50555420 -185.33377075]
[144.55929565 -178.47619629]
[150.86987305 -164.16848755]
[146.45759583 -149.16629028]
[133.40583801 -140.55319214]
[131.85992432 -125.63305664]
[130.31399536 -110.71293640]
[128.76806641 -95.79280853]
[139.48690796 -87.83503723]
[144.91783142 -75.52136993]
[143.54458618 -62.02468109]
[135.61944580 -50.88076019]
[123.12506866 -45.06204224]
[121.35926056 -30.16634178]
[132.32363892 -17.41313362]
[130.63792419 -0.33983564]
[116.85924530 10.43944931]
[115.31332397 25.35957336]
[113.76740265 40.27969742]
[112.22147369 55.19982529]
[110.67555237 70.11994934]
[109.12963104 85.04006958]
[117.38253021 97.56563568]
[131.70208740 102.03224182]
[146.02162170 106.49884796]
[160.34117126 110.96545410]
[174.66072083 115.43206024]
[189.01281738 119.79294586]
[203.39668274 124.04787445]
[217.78054810 128.30279541]
[232.16441345 132.55772400]
[246.54827881 136.81265259]
[261.05139160 140.64149475]
[275.66110229 144.04089355]
[290.31936646 147.22447205]
[305.02301025 150.19149780]
[319.76879883 152.94134521]
[334.55352783 155.47340393]
[349.33828735 158.00547791]
[364.12301636 160.53753662]
[373.24691772 150.20692444]
[386.18115234 145.76840210]
[399.51300049 148.28005981]
[409.78033447 156.98083496]
[414.37069702 169.51669312]
[429.11648560 172.26654053]
[443.86227417 175.01638794]
[458.60809326 177.76623535]
[473.35388184 180.51608276]
[488.09967041 183.26593018]
[502.84545898 186.01577759]
[517.59124756 188.76562500]
[532.33703613 191.51547241]
[547.08282471 194.26531982]
[561.07421875 186.41546631]
[575.88012695 192.59329224]
[580.14263916 208.05972290]
[570.59197998 220.95021057]
[554.55462646 221.37629700]
[544.33294678 209.01110840]
[529.58715820 206.26126099]
[514.84136963 203.51141357]
[500.09561157 200.76156616]
[485.34982300 198.01171875]
[470.60403442 195.26187134]
[455.85824585 192.51202393]
[441.11242676 189.76217651]
[426.36663818 187.01234436]
[411.62084961 184.26249695]
[400.06768799 195.92546082]
[383.67501831 198.42848206]
[368.87396240 190.58918762]
[361.59097290 175.32228088]
[346.80621338 172.79022217]
[332.02148438 170.25814819]
[317.23672485 167.72608948]
[312.89096069 169.70346069]
[307.25698853 168.97291565]
[302.05596924 164.89512634]
[287.35235596 161.92810059]
[282.95013428 163.77644348]
[277.34017944 162.88003540]
[272.26168823 158.65061951]
[257.65197754 155.25120544]
[255.20446777 156.61494446]
[252.06971741 157.09211731]
[248.58238220 156.41625977]
[245.16734314 154.44677734]
[242.29335022 151.19651794]
[227.90948486 146.94158936]
[213.52561951 142.68666077]
[199.14175415 138.43174744]
[184.75788879 134.17681885]
[177.45326233 135.29362488]
[170.19410706 129.75160217]
[155.87457275 125.28500366]
[141.55502319 120.81839752]
[127.23547363 116.35178375]
[112.91592407 111.88517761]
[124.60984802 121.27944183]
[130.34321594 135.14048767]
[128.70228577 150.05046082]
[120.09169006 162.33287048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[17 75]
[18 74]
[19 73]
[23 70]
[24 69]
[25 68]
[26 67]
[28 65]
[29 64]
[30 63]
[36 62]
[37 61]
[38 60]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[98 123]
[99 122]
[103 117]
[104 116]
[105 115]
[106 114]
[132 208]
[133 207]
[134 206]
[135 205]
[136 204]
[137 202]
[138 201]
[139 200]
[140 199]
[141 198]
[142 193]
[143 192]
[144 189]
[145 188]
[146 185]
[147 184]
[148 183]
[149 182]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
