%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUGGGGAUUGUAGUUUCUCCGUGACGCGGUGACUUGCAGAGCACUGACGCACUCUGCGCCCGGAGGACAGAGCGGCCCGGUCGCCGGCAUGGUUUCUCCGUCCUGCUGCAGCCGGCGGGAGGCAGCCAGUCCAGGCGCCCGCUAGCUUCGGCGGCGACCCAGACGGGGAAAGCGGAAGGAAUGUCGCGUGCAAGCAGGCAGCUGGUGUGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[-161.49882507 286.48739624]
[-167.02220154 300.43344116]
[-178.83963013 309.67184448]
[-193.70648193 311.66610718]
[-207.53973389 305.86953735]
[-208.76957703 290.92004395]
[-214.85745239 304.62905884]
[-220.94534302 318.33810425]
[-227.03321838 332.04714966]
[-233.12110901 345.75616455]
[-225.23339844 359.11895752]
[-226.74005127 374.56271362]
[-237.06173706 386.14901733]
[-252.22955322 389.42269897]
[-266.41116333 383.12493896]
[-274.15344238 369.67739868]
[-272.47933960 354.25088501]
[-262.03256226 342.77725220]
[-246.83013916 339.66830444]
[-240.74226379 325.95925903]
[-234.65437317 312.25021362]
[-228.56649780 298.54119873]
[-222.47860718 284.83215332]
[-233.16136169 274.30224609]
[-246.78125000 280.58706665]
[-260.40112305 286.87185669]
[-266.87783813 293.30554199]
[-274.26287842 293.14752197]
[-287.97189331 299.23538208]
[-301.63671875 305.42190552]
[-315.25659180 311.70669556]
[-328.87649536 317.99151611]
[-342.49636841 324.27630615]
[-356.11627197 330.56109619]
[-362.59295654 336.99481201]
[-369.97799683 336.83676147]
[-383.68704224 342.92465210]
[-397.39605713 349.01254272]
[-409.41806030 360.96694946]
[-424.23330688 352.72409058]
[-420.41384888 336.20596313]
[-403.48394775 335.30349731]
[-389.77490234 329.21560669]
[-376.06588745 323.12771606]
[-362.40106201 316.94122314]
[-348.78118896 310.65643311]
[-335.16128540 304.37161255]
[-321.54141235 298.08682251]
[-307.92153931 291.80200195]
[-303.16766357 286.14831543]
[-294.05978394 285.52636719]
[-280.35073853 279.43847656]
[-266.68594360 273.25198364]
[-253.06605530 266.96716309]
[-239.44616699 260.68237305]
[-227.29821777 251.88308716]
[-217.08055115 240.90132141]
[-206.86286926 229.91955566]
[-196.64520264 218.93778992]
[-186.42752075 207.95602417]
[-176.20985413 196.97425842]
[-165.99218750 185.99249268]
[-155.77450562 175.01072693]
[-155.66642761 160.01112366]
[-165.72479248 148.88325500]
[-175.78314209 137.75538635]
[-185.84150696 126.62751770]
[-195.89987183 115.49965668]
[-205.95822144 104.37178802]
[-216.01658630 93.24391937]
[-226.23425293 82.26215363]
[-236.60911560 71.42877197]
[-251.88993835 73.37883759]
[-265.23300171 66.04290771]
[-271.62231445 52.41790771]
[-268.79733276 37.81799316]
[-279.17221069 26.98461151]
[-289.54705811 16.15122795]
[-299.92193604 5.31784439]
[-315.72595215 5.22685528]
[-326.77719116 -6.07119703]
[-326.51910400 -21.87337875]
[-315.10485840 -32.80453491]
[-299.30627441 -32.37940598]
[-288.49639893 -20.85021210]
[-289.08856201 -5.05702019]
[-278.71368408 5.77636290]
[-268.33880615 16.60974693]
[-257.96395874 27.44312859]
[-243.25558472 25.25178337]
[-229.91946411 32.22399139]
[-223.16706848 45.87164688]
[-225.77574158 61.05390930]
[-215.40087891 71.88729095]
[-210.73512268 72.88457489]
[-206.64451599 76.82023621]
[-204.88871765 83.18556213]
[-194.83035278 94.31343079]
[-184.77200317 105.44129181]
[-174.71363831 116.56916046]
[-164.65527344 127.69702911]
[-154.59692383 138.82489014]
[-144.53855896 149.95275879]
[-120.31667328 140.43608093]
[-100.28893280 153.49572754]
[-85.97059631 149.02523804]
[-71.65225983 144.55476379]
[-57.33392334 140.08427429]
[-43.01558685 135.61380005]
[-28.69724846 131.14331055]
[-14.41149521 126.56977844]
[-0.15906614 121.89342499]
[14.09336281 117.21707153]
[20.56699562 103.85190582]
[34.95436859 98.90638733]
[48.92909241 105.78714752]
[63.18151855 101.11079407]
[77.43395233 96.43444061]
[91.68637848 91.75808716]
[104.08285522 83.31254578]
[113.65087891 71.76036072]
[112.36195374 56.23694229]
[122.22985077 44.65768433]
[137.03700256 43.52455139]
[146.60501099 31.97236824]
[156.17303467 20.42018318]
[159.23458862 11.81976795]
[165.96311951 8.77175999]
[175.69662476 -2.64134574]
[185.43013000 -14.05445194]
[183.92909241 -29.78729820]
[194.05679321 -41.92012024]
[209.80462646 -43.25473022]
[221.82969666 -32.99932861]
[222.99772644 -17.23826027]
[212.61576843 -5.32229137]
[196.84323120 -4.32095194]
[187.10972595 7.09215403]
[177.37623596 18.50526047]
[167.72521973 29.98820305]
[158.15719604 41.54039001]
[148.58918762 53.09257507]
[150.23368835 67.85167694]
[140.69491577 79.70353699]
[125.20306396 81.32837677]
[115.63504028 92.88056183]
[118.67898560 99.73508453]
[124.76686859 113.44412231]
[127.81080627 120.29863739]
[142.79678345 120.94692993]
[157.78277588 121.59522247]
[172.76875305 122.24351501]
[186.89044189 115.10987854]
[199.27142334 123.39001465]
[214.25740051 124.03830719]
[221.14411926 111.86634827]
[232.54826355 103.88620758]
[246.21243286 101.60795593]
[259.46163940 105.41983032]
[269.72692871 114.52344513]
[275.04354858 127.10018921]
[290.01864624 127.96436310]
[304.99371338 128.82855225]
[319.39352417 120.98141479]
[333.24633789 129.75820923]
[332.30154419 146.13011169]
[317.53109741 153.25512695]
[304.12954712 143.80363464]
[289.15444946 142.93945312]
[274.17938232 142.07527161]
[265.63784790 155.79505920]
[251.25938416 163.37754822]
[234.92556763 162.66868591]
[221.10011292 153.76736450]
[213.60911560 139.02429199]
[198.62312317 138.37599182]
[185.57334900 145.55599976]
[172.12046814 137.22949219]
[157.13447571 136.58120728]
[142.14849854 135.93290710]
[127.16251373 135.28462219]
[114.96351624 133.86990356]
[105.16878510 129.07147217]
[98.58917236 121.98149109]
[95.64975739 113.85935211]
[96.36273193 106.01052094]
[82.11029816 110.68687439]
[67.85787201 115.36322784]
[53.60544586 120.03957367]
[46.42362595 133.86199951]
[31.90301895 138.40144348]
[18.76971436 131.46949768]
[4.51728630 136.14585876]
[-9.73514271 140.82220459]
[-16.90893936 146.46815491]
[-24.22676659 145.46165466]
[-38.54510498 149.93212891]
[-52.86344147 154.40261841]
[-67.18177795 158.87309265]
[-81.50011444 163.34358215]
[-95.81845093 167.81405640]
[-97.28565979 178.28222656]
[-103.06878662 187.51258850]
[-112.38243103 193.75894165]
[-123.75135040 195.71694946]
[-135.24230957 192.78820801]
[-144.79273987 185.22839355]
[-155.01042175 196.21015930]
[-165.22808838 207.19192505]
[-175.44575500 218.17369080]
[-185.66343689 229.15545654]
[-195.88110352 240.13722229]
[-206.09878540 251.11898804]
[-216.31645203 262.10076904]
[-202.08467102 257.36196899]
[-187.30807495 254.78276062]
[-173.25576782 260.02993774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[24 55]
[25 54]
[26 53]
[28 52]
[29 51]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[36 44]
[37 43]
[38 42]
[56 214]
[57 213]
[58 212]
[59 211]
[60 210]
[61 209]
[62 208]
[63 207]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 94]
[72 93]
[76 89]
[77 88]
[78 87]
[79 86]
[105 201]
[106 200]
[107 199]
[108 198]
[109 197]
[110 196]
[111 194]
[112 193]
[113 192]
[116 189]
[117 188]
[118 187]
[119 186]
[120 146]
[121 145]
[124 142]
[125 141]
[126 140]
[128 139]
[129 138]
[130 137]
[149 181]
[150 180]
[151 179]
[152 178]
[154 176]
[155 175]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
