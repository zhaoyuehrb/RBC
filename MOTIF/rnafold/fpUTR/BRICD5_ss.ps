%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCCAGACCCUGAGCUCCAGUCUGCACAGGCCAGGUGUCUGGAGCCGGGCCUGGUGACAGGCAUCCCCCAGGUGGGAGGAGGGGCUGUCCUGGCUCUGACCUGGAUAUCAGAUCCAGAGCUGAGGGGGAGGCGCAGGGUCAGGAGGGGAGGGGUUCUGUUCUGAGUUUCCCCUGGCCAAGGCUGCAGACAAGGGACGCAGACAAUCGGCACAUUGUGAGCAGGGGCUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[106.98082733 741.77227783]
[109.42782593 722.54565430]
[109.62749481 707.54699707]
[109.82717133 692.54833984]
[101.62083435 683.67584229]
[101.65411377 671.18951416]
[110.45393372 661.77490234]
[110.85324097 646.78021240]
[111.25254822 631.78552246]
[108.29377747 625.02716064]
[111.75829315 616.59429932]
[112.35716248 601.60626221]
[112.95603943 586.61822510]
[113.55490875 571.63018799]
[105.58767700 562.54235840]
[105.95333099 550.06140137]
[115.00065613 540.88433838]
[115.79898834 525.90557861]
[116.59732056 510.92684937]
[117.39565277 495.94812012]
[118.09427643 480.96438599]
[118.69314575 465.97634888]
[118.19404602 450.98464966]
[116.59963989 436.06964111]
[115.00524139 421.15460205]
[113.41083527 406.23959351]
[111.81643677 391.32455444]
[110.22203064 376.40954590]
[98.93417358 371.99484253]
[90.53986359 363.15209961]
[86.67256165 351.51309204]
[88.12246704 339.26177979]
[94.67592621 328.72454834]
[105.14437866 321.92843628]
[103.94758606 306.97625732]
[95.61978149 301.09146118]
[91.81735229 291.39370728]
[94.01628113 280.98757935]
[101.72841644 273.34820557]
[100.93008423 258.36947632]
[100.13175201 243.39073181]
[99.33341980 228.41198730]
[98.53508759 213.43324280]
[97.73675537 198.45449829]
[89.33304596 186.15707397]
[96.32490540 171.96466064]
[95.52657318 156.98591614]
[94.72824097 142.00717163]
[93.92990875 127.02843475]
[84.93367767 123.24625397]
[77.80728149 116.57907104]
[73.43513489 107.85430908]
[58.43646240 108.05398560]
[43.43778992 108.25365448]
[28.43912125 108.45333099]
[13.44044971 108.65299988]
[-0.36679345 117.50128174]
[-14.80697155 109.72868347]
[-15.02526855 93.33098602]
[-0.79711777 85.17674255]
[13.24077797 93.65432739]
[28.23944855 93.45465851]
[43.23812103 93.25498199]
[58.23678970 93.05531311]
[73.23545837 92.85564423]
[77.82657623 79.09449005]
[89.55093384 68.43712616]
[82.45797729 55.22009659]
[75.36502838 42.00305939]
[68.27207184 28.78602600]
[61.17911911 15.56899071]
[54.08616638 2.35195589]
[21.13740540 -6.46591473]
[10.67293262 -17.21276665]
[0.20845982 -27.95961761]
[-10.25601292 -38.70646667]
[-25.42688942 -43.19591141]
[-28.76239395 -57.71223450]
[-39.22686768 -68.45908356]
[-49.69134140 -79.20594025]
[-60.15581131 -89.95278931]
[-75.72811127 -90.32880402]
[-86.18747711 -101.37670898]
[-85.73303223 -116.22019958]
[-96.19750977 -126.96704865]
[-106.66197968 -137.71389771]
[-122.61991119 -139.36433411]
[-131.15751648 -152.94700623]
[-125.72545624 -168.04244995]
[-110.49076080 -173.07073975]
[-97.14017487 -164.17459106]
[-95.91513062 -148.17837524]
[-85.45065308 -137.43151855]
[-74.98618317 -126.68466949]
[-60.13586044 -126.74381256]
[-49.37030411 -115.99404907]
[-49.40896225 -100.41725922]
[-38.94448853 -89.67041016]
[-28.48001671 -78.92356110]
[-18.01554298 -68.17670441]
[-3.59315610 -64.45595551]
[0.49083811 -49.17094040]
[10.95531082 -38.42409134]
[21.41978455 -27.67723846]
[31.88425636 -16.93038750]
[45.28542709 -23.66898346]
[42.89947128 -38.47800827]
[40.51351929 -53.28703308]
[38.12756729 -68.09606171]
[26.01779938 -78.61903381]
[26.83861160 -94.64108276]
[39.96034622 -103.87144470]
[55.31713104 -99.22938538]
[61.12855530 -84.27590179]
[52.93659210 -70.48200989]
[55.32254410 -55.67298508]
[57.70849991 -40.86396027]
[60.09445190 -26.05493546]
[66.33092499 -39.69701767]
[79.15512848 -47.47774506]
[94.13538361 -46.70830536]
[106.09491730 -37.65460205]
[110.90084839 -23.44534302]
[106.89237976 -8.99085808]
[95.45471954 0.71378326]
[80.54042053 2.31492305]
[67.30319977 -4.74099779]
[74.39615631 8.47603703]
[81.48910522 21.69307137]
[88.58206177 34.91010666]
[95.67501068 48.12714005]
[102.76796722 61.34417725]
[117.23948669 65.29071045]
[130.06028748 57.50437546]
[142.88108826 49.71803284]
[148.57911682 42.60125351]
[155.92477417 41.91468811]
[168.84808350 34.29970169]
[181.77140808 26.68471336]
[194.69471741 19.06972694]
[207.61802673 11.45474052]
[220.28080750 3.41396666]
[232.66902161 -5.04368877]
[245.05725098 -13.50134373]
[257.44546509 -21.95899963]
[269.83367920 -30.41665459]
[282.22192383 -38.87430954]
[289.25659180 -53.04554367]
[304.13043213 -53.83164215]
[316.51867676 -62.28929901]
[328.90689087 -70.74695587]
[341.29510498 -79.20460510]
[347.90954590 -94.21064758]
[364.23944092 -95.71616364]
[373.48599243 -82.17241669]
[366.13714600 -67.51203918]
[349.75277710 -66.81638336]
[337.36453247 -58.35873032]
[324.97631836 -49.90107346]
[312.58810425 -41.44342041]
[306.43951416 -27.87713432]
[290.67956543 -26.48608780]
[278.29135132 -18.02843285]
[265.90313721 -9.57077694]
[253.51490784 -1.11312127]
[241.12667847 7.34453392]
[228.73846436 15.80218983]
[242.80499268 21.01107788]
[247.63259888 35.21298981]
[239.65457153 47.91539383]
[224.76516724 49.73360825]
[213.96485901 39.32432175]
[215.23301697 24.37805176]
[202.30969238 31.99303818]
[189.38638306 39.60802460]
[176.46307373 47.22301102]
[163.53976440 54.83800125]
[150.66741943 62.53883362]
[137.84661865 70.32517242]
[125.02582550 78.11151123]
[131.33337402 97.97239685]
[124.56468201 116.42546082]
[108.90864563 126.23010254]
[109.70698547 141.20884705]
[110.50531769 156.18759155]
[111.30364990 171.16632080]
[119.76445770 184.53514099]
[112.71549225 197.65617371]
[113.51382446 212.63491821]
[114.31216431 227.61364746]
[115.11049652 242.59239197]
[115.90882874 257.57113647]
[116.70716095 272.54986572]
[128.44505310 288.95217896]
[118.89976501 305.77944946]
[120.09655762 320.73162842]
[135.85220337 329.73345947]
[142.97534180 346.25140381]
[138.78131104 363.58203125]
[125.13705444 374.81515503]
[126.73146057 389.73016357]
[128.32586670 404.64520264]
[129.92025757 419.56021118]
[131.51466370 434.47521973]
[133.10906982 449.39025879]
[140.04022217 436.08764648]
[152.31221008 427.46218872]
[167.17608643 425.44598389]
[181.30235291 430.49063110]
[191.52671814 441.46615601]
[195.55894470 455.91403198]
[192.49578857 470.59796143]
[183.02340698 482.22869873]
[169.26361084 488.20095825]
[154.29861450 487.17700195]
[141.48054504 479.38616943]
[133.68118286 466.57522583]
[133.08232117 481.56326294]
[135.86296082 490.24566650]
[132.37438965 496.74645996]
[131.57606506 511.72518921]
[130.77772522 526.70391846]
[129.97940063 541.68267822]
[138.70062256 557.90960693]
[128.54295349 572.22900391]
[127.94407654 587.21710205]
[127.34520721 602.20513916]
[126.74633026 617.19317627]
[126.24723053 632.18487549]
[125.84792328 647.17950439]
[125.44861603 662.17419434]
[134.59872437 678.16326904]
[124.82583618 692.74798584]
[124.62616730 707.74664307]
[124.42649841 722.74536133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 235]
[3 234]
[4 233]
[7 231]
[8 230]
[9 229]
[11 228]
[12 227]
[13 226]
[14 225]
[17 223]
[18 222]
[19 221]
[20 220]
[21 218]
[22 217]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[34 196]
[35 195]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[44 188]
[46 186]
[47 185]
[48 184]
[49 183]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 105]
[74 104]
[75 103]
[76 102]
[78 100]
[79 99]
[80 98]
[81 97]
[84 94]
[85 93]
[86 92]
[106 118]
[107 117]
[108 116]
[109 115]
[133 180]
[134 179]
[135 178]
[137 177]
[138 176]
[139 175]
[140 174]
[141 173]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
