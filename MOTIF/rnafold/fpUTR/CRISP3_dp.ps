%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRISP3)
} def

/sequence { (\
GCACAACCAGAAUUUGCCAAAACAGGAAAUAGGUGUUUCAUAUAUACGGCUCUAACCUUCUCUCUCUGCACCUUCCUUCUGUCAAUAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.684754525 ubox
1 69 0.007785076 ubox
1 82 0.008234438 ubox
2 16 0.686754711 ubox
2 68 0.007789638 ubox
2 81 0.008859442 ubox
3 15 0.638515698 ubox
3 67 0.007488699 ubox
3 80 0.007905754 ubox
3 82 0.011962160 ubox
4 16 0.167333455 ubox
4 81 0.012004319 ubox
5 14 0.317273529 ubox
5 15 0.167881810 ubox
5 78 0.003457551 ubox
5 80 0.010459697 ubox
6 13 0.279366385 ubox
6 14 0.159395540 ubox
6 82 0.047202116 ubox
7 81 0.035490615 ubox
8 16 0.119093389 ubox
8 81 0.235107398 ubox
9 15 0.117067570 ubox
9 61 0.007315553 ubox
9 80 0.238928806 ubox
10 14 0.080349448 ubox
10 60 0.007584536 ubox
10 75 0.006262901 ubox
10 79 0.239178773 ubox
10 83 0.031190330 ubox
11 59 0.007545435 ubox
11 74 0.006284345 ubox
11 77 0.003181232 ubox
11 78 0.237257863 ubox
11 82 0.024309127 ubox
12 30 0.032790697 ubox
12 58 0.006781961 ubox
12 73 0.005725694 ubox
12 77 0.124642446 ubox
12 86 0.053177539 ubox
13 20 0.023481468 ubox
13 21 0.036986403 ubox
13 22 0.058327892 ubox
13 26 0.006897753 ubox
13 28 0.003321272 ubox
13 29 0.037473859 ubox
13 55 0.003219504 ubox
13 85 0.047684697 ubox
13 88 0.014147847 ubox
14 19 0.023005861 ubox
14 20 0.041448544 ubox
14 21 0.094561433 ubox
14 22 0.027702877 ubox
14 25 0.011868890 ubox
14 27 0.003424024 ubox
14 28 0.039318727 ubox
14 29 0.017061581 ubox
14 54 0.003332252 ubox
14 84 0.038140385 ubox
14 85 0.202006746 ubox
14 87 0.017357295 ubox
14 88 0.029058684 ubox
15 19 0.035503779 ubox
15 20 0.099362094 ubox
15 21 0.042614678 ubox
15 24 0.042623628 ubox
15 27 0.039461502 ubox
15 28 0.013934645 ubox
15 70 0.007301514 ubox
15 84 0.233400289 ubox
15 87 0.043988494 ubox
16 23 0.051170342 ubox
16 50 0.007423256 ubox
16 69 0.007462106 ubox
16 82 0.022348867 ubox
16 83 0.239550252 ubox
16 86 0.042872868 ubox
17 26 0.055912184 ubox
17 49 0.007433396 ubox
17 68 0.007230913 ubox
17 81 0.027277611 ubox
18 25 0.056020391 ubox
18 48 0.007420802 ubox
18 81 0.103380079 ubox
19 78 0.004429500 ubox
19 80 0.100893906 ubox
20 78 0.018527172 ubox
21 77 0.009608768 ubox
21 78 0.044465975 ubox
22 77 0.022685832 ubox
22 82 0.906706005 ubox
23 68 0.007537910 ubox
23 81 0.958337134 ubox
24 58 0.003403690 ubox
24 61 0.003409608 ubox
24 67 0.007700731 ubox
24 77 0.243780641 ubox
24 78 0.007085036 ubox
24 80 0.957818529 ubox
25 57 0.003595304 ubox
25 60 0.003517814 ubox
25 61 0.003974886 ubox
25 66 0.007653338 ubox
25 76 0.280016047 ubox
25 77 0.006740483 ubox
25 79 0.956778637 ubox
25 80 0.028532061 ubox
26 39 0.007451162 ubox
26 56 0.003592163 ubox
26 59 0.003456865 ubox
26 60 0.004730457 ubox
26 64 0.007377891 ubox
26 75 0.280716496 ubox
26 76 0.009979760 ubox
26 77 0.008415418 ubox
26 78 0.948746740 ubox
26 79 0.046727766 ubox
27 38 0.007454372 ubox
27 59 0.004723914 ubox
27 63 0.007269258 ubox
27 74 0.278710744 ubox
27 77 0.915538704 ubox
27 78 0.058474441 ubox
28 37 0.007443491 ubox
28 58 0.003702628 ubox
28 73 0.136448757 ubox
28 74 0.030236500 ubox
28 77 0.055313075 ubox
28 78 0.007371481 ubox
29 36 0.007322123 ubox
29 73 0.017693906 ubox
29 77 0.010950218 ubox
30 35 0.006975837 ubox
30 54 0.004316139 ubox
31 51 0.003568280 ubox
31 53 0.004411667 ubox
31 58 0.009131262 ubox
31 73 0.978165585 ubox
31 74 0.018786264 ubox
32 50 0.003724070 ubox
32 52 0.004393852 ubox
32 57 0.009476531 ubox
32 72 0.999829397 ubox
32 73 0.003466725 ubox
33 47 0.003602426 ubox
33 56 0.009475518 ubox
33 71 0.999886983 ubox
34 46 0.003668070 ubox
34 48 0.004394103 ubox
34 55 0.009376877 ubox
34 70 0.999685149 ubox
35 45 0.003808762 ubox
35 47 0.005921932 ubox
35 50 0.003529062 ubox
35 69 0.999787338 ubox
36 42 0.003327981 ubox
36 44 0.004376787 ubox
36 46 0.006057162 ubox
36 49 0.003506414 ubox
36 68 0.990672870 ubox
37 48 0.003237850 ubox
37 49 0.003499153 ubox
37 54 0.003506310 ubox
37 55 0.003622838 ubox
38 49 0.016386252 ubox
38 54 0.003213725 ubox
39 48 0.020814531 ubox
39 68 0.028611458 ubox
40 67 0.032071167 ubox
41 54 0.004098341 ubox
42 53 0.004125583 ubox
42 67 0.005730738 ubox
43 54 0.008191397 ubox
44 53 0.008504114 ubox
44 67 0.003680122 ubox
45 54 0.007897868 ubox
46 53 0.007835742 ubox
46 67 0.005379057 ubox
47 68 0.011414840 ubox
48 57 0.970937658 ubox
48 58 0.057397091 ubox
48 59 0.011451696 ubox
48 60 0.016735803 ubox
48 61 0.009320714 ubox
48 62 0.009662775 ubox
48 63 0.009091446 ubox
48 64 0.009068070 ubox
48 65 0.009041364 ubox
48 66 0.006550948 ubox
48 67 0.016611247 ubox
49 56 0.969189575 ubox
49 57 0.059221759 ubox
49 58 0.012451220 ubox
49 59 0.013601517 ubox
49 60 0.009844158 ubox
49 61 0.007724853 ubox
49 62 0.009517617 ubox
49 63 0.007053843 ubox
49 64 0.009368105 ubox
49 65 0.005309835 ubox
49 66 0.016459331 ubox
49 69 0.004247254 ubox
50 68 0.004641643 ubox
79 88 0.018565177 ubox
80 87 0.018924297 ubox
81 86 0.016211784 ubox
22 82 0.9500000 lbox
23 81 0.9500000 lbox
24 80 0.9500000 lbox
25 79 0.9500000 lbox
26 78 0.9500000 lbox
27 77 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
36 68 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
