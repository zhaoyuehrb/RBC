%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS35)
} def

/sequence { (\
GCUUAGCGGCCCCAGGCCCGCCCCUGACACUGAACGCCGCUUGUCCCCUCCGGCUUGCCGUCCUCGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.016365948 ubox
1 10 0.006706389 ubox
1 21 0.005344328 ubox
1 37 0.007634178 ubox
1 40 0.010115149 ubox
1 44 0.603331504 ubox
1 54 0.016065915 ubox
1 58 0.003924136 ubox
1 67 0.151011369 ubox
1 70 0.142321211 ubox
2 6 0.016274922 ubox
2 9 0.006726112 ubox
2 20 0.005348937 ubox
2 36 0.007649003 ubox
2 39 0.010095217 ubox
2 43 0.659677456 ubox
2 53 0.016080662 ubox
2 57 0.003930824 ubox
2 66 0.150931346 ubox
2 69 0.142724093 ubox
3 8 0.006144563 ubox
3 27 0.018093521 ubox
3 33 0.004221060 ubox
3 52 0.014798798 ubox
3 68 0.132842572 ubox
3 69 0.004760110 ubox
4 26 0.020101167 ubox
4 32 0.004540290 ubox
4 43 0.103397959 ubox
4 68 0.016933066 ubox
5 25 0.020308659 ubox
5 31 0.004556750 ubox
5 41 0.921431095 ubox
5 42 0.083395535 ubox
5 49 0.006309763 ubox
5 64 0.080445682 ubox
6 21 0.134651986 ubox
6 24 0.013522778 ubox
6 37 0.008799060 ubox
6 40 0.968770642 ubox
6 41 0.012269346 ubox
6 48 0.006471968 ubox
6 61 0.149670418 ubox
6 63 0.080199664 ubox
6 67 0.105164854 ubox
6 70 0.009515215 ubox
7 20 0.135193670 ubox
7 32 0.008843065 ubox
7 36 0.008798687 ubox
7 39 0.969048485 ubox
7 60 0.154672985 ubox
7 66 0.105402188 ubox
7 69 0.009499976 ubox
8 18 0.082883787 ubox
8 19 0.110614080 ubox
8 22 0.009652561 ubox
8 31 0.009175691 ubox
8 35 0.008526026 ubox
8 38 0.969058449 ubox
8 46 0.006289540 ubox
8 47 0.004914168 ubox
8 48 0.006105859 ubox
8 59 0.154886471 ubox
8 62 0.083903754 ubox
8 63 0.024530357 ubox
8 64 0.003979248 ubox
8 65 0.097398542 ubox
8 71 0.008499469 ubox
9 17 0.113767427 ubox
9 18 0.078670031 ubox
9 21 0.009664922 ubox
9 30 0.009687244 ubox
9 37 0.969068813 ubox
9 45 0.006301206 ubox
9 46 0.004903085 ubox
9 47 0.006104173 ubox
9 58 0.154877385 ubox
9 61 0.094197477 ubox
9 62 0.026229760 ubox
9 63 0.022680555 ubox
9 64 0.076202331 ubox
9 67 0.007854401 ubox
9 70 0.008561211 ubox
10 16 0.137804090 ubox
10 20 0.009651100 ubox
10 36 0.967510877 ubox
10 57 0.143385177 ubox
10 60 0.099293043 ubox
10 66 0.007862303 ubox
10 69 0.008518883 ubox
11 15 0.136810626 ubox
11 53 0.003628345 ubox
12 52 0.003626701 ubox
12 53 0.003228889 ubox
13 26 0.579955656 ubox
13 32 0.771211755 ubox
13 43 0.011215045 ubox
13 52 0.003190574 ubox
13 57 0.117854382 ubox
14 25 0.582610540 ubox
14 31 0.774083686 ubox
14 42 0.011283067 ubox
14 55 0.010660806 ubox
14 56 0.161917659 ubox
15 22 0.027891206 ubox
15 23 0.028331139 ubox
15 24 0.582951554 ubox
15 25 0.006593786 ubox
15 30 0.773190083 ubox
15 31 0.072723347 ubox
15 41 0.011294847 ubox
15 54 0.009158826 ubox
15 55 0.165755461 ubox
15 56 0.003980340 ubox
15 59 0.077890264 ubox
16 21 0.030543454 ubox
16 22 0.035973858 ubox
16 23 0.578466057 ubox
16 24 0.012637864 ubox
16 30 0.073750171 ubox
16 40 0.011306985 ubox
16 54 0.166333114 ubox
16 55 0.003277791 ubox
16 58 0.077916400 ubox
17 39 0.011290001 ubox
17 53 0.149643354 ubox
17 57 0.077857418 ubox
18 52 0.130522936 ubox
18 53 0.078851708 ubox
19 26 0.520450353 ubox
19 36 0.003990738 ubox
19 52 0.107383322 ubox
20 25 0.356390042 ubox
20 35 0.004132797 ubox
20 37 0.010832828 ubox
20 51 0.128859887 ubox
20 54 0.072437385 ubox
20 67 0.006510855 ubox
20 70 0.003408337 ubox
21 36 0.010863337 ubox
21 53 0.072454280 ubox
21 66 0.006507451 ubox
21 69 0.003262524 ubox
22 52 0.072297273 ubox
23 52 0.003537560 ubox
24 69 0.061430259 ubox
25 32 0.004202912 ubox
25 36 0.003942388 ubox
25 66 0.005131945 ubox
25 68 0.062244850 ubox
26 31 0.005108824 ubox
26 35 0.017503939 ubox
26 45 0.199311244 ubox
26 50 0.013843137 ubox
26 62 0.017809883 ubox
26 65 0.007706455 ubox
26 67 0.062393172 ubox
27 44 0.199834331 ubox
27 49 0.013469584 ubox
27 61 0.017931753 ubox
27 64 0.007544949 ubox
28 43 0.199855078 ubox
28 60 0.017876622 ubox
29 42 0.188148143 ubox
29 44 0.008245924 ubox
29 61 0.005324286 ubox
30 43 0.008702679 ubox
30 60 0.005514186 ubox
30 69 0.046675162 ubox
31 39 0.131031201 ubox
31 57 0.004054758 ubox
31 66 0.062590972 ubox
31 68 0.046688985 ubox
32 38 0.143071516 ubox
32 42 0.008378389 ubox
32 45 0.012996566 ubox
32 50 0.003185242 ubox
32 56 0.009317912 ubox
32 59 0.003988157 ubox
32 62 0.035872345 ubox
32 65 0.079424482 ubox
32 67 0.046083109 ubox
33 41 0.012543329 ubox
33 42 0.006887903 ubox
33 44 0.009704539 ubox
33 55 0.008771750 ubox
33 56 0.028135507 ubox
33 61 0.025803128 ubox
33 64 0.078791854 ubox
34 41 0.010663889 ubox
34 44 0.013051076 ubox
34 55 0.028974769 ubox
34 61 0.045700570 ubox
35 43 0.015890411 ubox
35 60 0.053368133 ubox
35 66 0.005634413 ubox
36 42 0.012919217 ubox
36 44 0.004212108 ubox
36 54 0.090054245 ubox
36 58 0.003236933 ubox
36 59 0.052169601 ubox
36 61 0.087995094 ubox
36 65 0.005029189 ubox
37 43 0.004420118 ubox
37 53 0.090164333 ubox
37 57 0.003886916 ubox
37 60 0.089187093 ubox
38 52 0.090161591 ubox
38 57 0.004791800 ubox
38 60 0.011159328 ubox
39 51 0.087820091 ubox
39 54 0.005312424 ubox
39 56 0.004294187 ubox
39 58 0.105688445 ubox
39 59 0.008291928 ubox
39 70 0.007251339 ubox
40 53 0.005312907 ubox
40 57 0.106153723 ubox
40 69 0.007238221 ubox
41 52 0.004735569 ubox
41 68 0.005243082 ubox
41 69 0.010264218 ubox
42 52 0.007450903 ubox
42 68 0.024852309 ubox
43 51 0.041580458 ubox
43 54 0.115824900 ubox
43 58 0.003605664 ubox
43 67 0.027906682 ubox
44 53 0.110208689 ubox
44 57 0.003601510 ubox
44 66 0.027381171 ubox
45 52 0.109919729 ubox
45 53 0.038690221 ubox
46 52 0.040006550 ubox
46 53 0.020523680 ubox
47 52 0.023200980 ubox
47 53 0.009620164 ubox
48 52 0.010857034 ubox
48 69 0.003593697 ubox
49 68 0.003545771 ubox
51 60 0.043812727 ubox
51 66 0.003812320 ubox
52 59 0.044662116 ubox
52 62 0.011176291 ubox
52 63 0.007326491 ubox
52 65 0.003626798 ubox
52 71 0.962556855 ubox
53 58 0.044388922 ubox
53 61 0.011401550 ubox
53 62 0.007310471 ubox
53 67 0.003712210 ubox
53 70 0.969824718 ubox
54 60 0.012812289 ubox
54 66 0.003717364 ubox
54 69 0.965034682 ubox
55 68 0.690125977 ubox
55 69 0.104493925 ubox
56 66 0.031672733 ubox
56 68 0.679159573 ubox
57 65 0.031784222 ubox
57 67 0.957145933 ubox
57 70 0.020700308 ubox
58 66 0.834232410 ubox
58 69 0.020747557 ubox
59 66 0.494901170 ubox
60 65 0.673524672 ubox
60 67 0.029738527 ubox
61 66 0.028138319 ubox
63 69 0.004889798 ubox
64 68 0.004472781 ubox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
57 67 0.9500000 lbox
58 66 0.9500000 lbox
showpage
end
%%EOF
