%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLR3D)
} def

/sequence { (\
GAUGGCGGCGCCCAGGCCCUGCCACGCAGACUUCCGCCCGGCGCGGAGACCGAAGGCUGGCGGCUGGUCGCGUUGCAGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 10 0.027707144 ubox
3 14 0.357629851 ubox
3 24 0.091743393 ubox
3 77 0.003932884 ubox
3 81 0.061109934 ubox
4 9 0.048012114 ubox
4 12 0.722481495 ubox
4 13 0.374110379 ubox
4 18 0.134318058 ubox
4 19 0.008580849 ubox
4 20 0.037061706 ubox
4 23 0.157843446 ubox
4 80 0.058441694 ubox
5 11 0.736808438 ubox
5 12 0.347653978 ubox
5 17 0.157825054 ubox
5 18 0.006741399 ubox
5 19 0.048558027 ubox
5 22 0.157987000 ubox
5 76 0.026095782 ubox
5 80 0.295137289 ubox
6 10 0.743239490 ubox
6 16 0.157766641 ubox
6 21 0.157958583 ubox
6 75 0.026289421 ubox
6 79 0.297034748 ubox
7 13 0.106537058 ubox
7 18 0.460020365 ubox
7 19 0.054379869 ubox
7 20 0.149902592 ubox
7 74 0.026183941 ubox
8 12 0.105118045 ubox
8 17 0.489946881 ubox
8 18 0.056355468 ubox
8 19 0.149721048 ubox
8 73 0.026239424 ubox
8 80 0.015546785 ubox
9 16 0.490015642 ubox
9 72 0.026253837 ubox
9 79 0.014712497 ubox
10 17 0.209775355 ubox
10 71 0.026251071 ubox
10 80 0.006177776 ubox
11 16 0.209974076 ubox
11 70 0.026154658 ubox
11 79 0.005643346 ubox
12 67 0.023068504 ubox
12 78 0.004948168 ubox
13 66 0.023180059 ubox
14 65 0.022192188 ubox
15 23 0.004184656 ubox
15 64 0.018905038 ubox
15 65 0.007877074 ubox
15 69 0.010892548 ubox
16 22 0.004190932 ubox
16 61 0.003705389 ubox
16 64 0.014047575 ubox
16 68 0.010946596 ubox
16 80 0.755329311 ubox
17 21 0.004160475 ubox
17 60 0.003699406 ubox
17 63 0.017981841 ubox
17 67 0.010952111 ubox
17 79 0.618112161 ubox
18 59 0.003674532 ubox
18 62 0.017561127 ubox
18 63 0.005168774 ubox
18 66 0.010895236 ubox
18 78 0.438327841 ubox
18 79 0.598317771 ubox
19 29 0.006722193 ubox
19 60 0.004716613 ubox
19 62 0.005642701 ubox
19 63 0.016358222 ubox
19 78 0.880067524 ubox
19 79 0.010375952 ubox
20 28 0.006772895 ubox
20 59 0.004417464 ubox
20 62 0.016638380 ubox
20 77 0.983064021 ubox
20 78 0.005340640 ubox
20 81 0.053570729 ubox
21 27 0.006783340 ubox
21 57 0.006202617 ubox
21 61 0.024280270 ubox
21 76 0.984906038 ubox
21 80 0.065194037 ubox
22 26 0.006734068 ubox
22 56 0.006229689 ubox
22 60 0.024332688 ubox
22 75 0.983391558 ubox
22 79 0.065224040 ubox
23 55 0.006217246 ubox
23 59 0.024331435 ubox
23 75 0.042315842 ubox
23 78 0.065113174 ubox
24 58 0.024167287 ubox
24 73 0.979588817 ubox
24 74 0.042741305 ubox
25 52 0.004628891 ubox
25 72 0.998396960 ubox
26 51 0.004637640 ubox
26 57 0.024178159 ubox
26 71 0.999432790 ubox
26 73 0.005193257 ubox
26 76 0.011606535 ubox
27 56 0.024170626 ubox
27 70 0.996204325 ubox
27 72 0.005468577 ubox
27 75 0.011616896 ubox
28 74 0.011501116 ubox
29 69 0.998815610 ubox
30 68 0.999442064 ubox
31 48 0.006964612 ubox
31 67 0.999516639 ubox
32 47 0.005444278 ubox
32 48 0.021077663 ubox
32 66 0.990798218 ubox
32 67 0.003534685 ubox
33 46 0.003241782 ubox
33 47 0.024536983 ubox
33 63 0.004472799 ubox
33 66 0.018871049 ubox
34 45 0.003215504 ubox
34 46 0.025173034 ubox
34 62 0.003711136 ubox
34 63 0.998908252 ubox
35 43 0.003219533 ubox
35 45 0.025187875 ubox
35 62 0.999561005 ubox
36 42 0.003227732 ubox
36 44 0.025190309 ubox
36 61 0.999442094 ubox
36 64 0.009810140 ubox
37 41 0.003205508 ubox
37 43 0.025159567 ubox
37 60 0.819104422 ubox
37 63 0.009788389 ubox
38 56 0.007485621 ubox
38 59 0.585115034 ubox
38 60 0.572964369 ubox
38 62 0.007037335 ubox
39 52 0.018270490 ubox
39 55 0.010577027 ubox
39 59 0.810106199 ubox
40 51 0.018329560 ubox
40 58 0.991602868 ubox
41 50 0.018313787 ubox
41 57 0.998509757 ubox
42 52 0.004158108 ubox
42 56 0.996892392 ubox
43 51 0.005369940 ubox
43 57 0.006258272 ubox
44 52 0.978409843 ubox
44 56 0.006317176 ubox
45 51 0.989786954 ubox
46 50 0.973841026 ubox
50 56 0.003426800 ubox
51 55 0.003744853 ubox
70 80 0.009035858 ubox
71 79 0.009044849 ubox
72 80 0.007765067 ubox
72 83 0.039907772 ubox
73 79 0.007857227 ubox
73 82 0.049256796 ubox
74 78 0.006059246 ubox
74 81 0.058286481 ubox
75 80 0.059332272 ubox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 75 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
31 67 0.9500000 lbox
32 66 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
showpage
end
%%EOF
