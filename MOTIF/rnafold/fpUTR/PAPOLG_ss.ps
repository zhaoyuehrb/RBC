%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGACCUGCGAGAGGCAGGCUGGGAAGCGGCGCCAUAUUGGCGUCGGCCGCGCUGUAUUGUCAUAAAUAGAGCCGGUUUUGUGGUGUUUUCACUACUCGGUUGGAUGCCUCAGCCAUAGUAAGUGGGAAAGUGAGCGAGCAAGCGAGCUACUAGCGACCGGAGGAAAGUGAACAGGGGGAGAAGGGAACAGCAAGAACAGGACUCCAGAGCGAUAAACACUCGCUGGAGAGGGAGACGCAGGAAGCG\
) } def
/len { sequence length } bind def

/coor [
[101.81965637 300.95571899]
[88.15618896 294.15332031]
[78.80406189 282.09097290]
[75.62014771 267.16363525]
[79.23660278 252.33514404]
[88.93539429 240.54971313]
[102.79080963 234.14735413]
[102.97930145 219.14854431]
[103.16779327 204.14971924]
[103.35628510 189.15090942]
[103.54476929 174.15208435]
[103.73326111 159.15327454]
[68.72901917 139.12768555]
[59.61177826 106.48709106]
[44.61651611 106.11013794]
[29.62125206 105.73318481]
[14.62598896 105.35623169]
[-0.36927387 104.97928619]
[-15.36453629 104.60233307]
[-30.36424065 104.50808716]
[-45.36305618 104.69657135]
[-60.36187363 104.88506317]
[-75.36068726 105.07355499]
[-90.35950470 105.26204681]
[-105.35832214 105.45053864]
[-99.98280334 115.56880951]
[-98.92255402 128.49649048]
[-103.13969421 142.60302734]
[-113.02932739 155.98428345]
[-128.35206604 166.64811707]
[-140.81100464 175.00125122]
[-153.26994324 183.35438538]
[-165.72888184 191.70751953]
[-178.18782043 200.06065369]
[-190.64675903 208.41378784]
[-203.10569763 216.76692200]
[-215.56463623 225.12005615]
[-225.35348511 238.96255493]
[-241.36483765 233.38822937]
[-240.44073486 216.45948792]
[-223.91777039 212.66111755]
[-211.45883179 204.30798340]
[-198.99989319 195.95484924]
[-186.54095459 187.60171509]
[-174.08201599 179.24858093]
[-161.62307739 170.89544678]
[-149.16413879 162.54231262]
[-136.70520020 154.18917847]
[-140.79946899 139.75875854]
[-155.78881836 139.19342041]
[-170.77815247 138.62806702]
[-185.76750183 138.06271362]
[-194.43547058 140.86102295]
[-200.94129944 137.39489746]
[-215.92236328 136.64123535]
[-230.90341187 135.88757324]
[-245.07490540 142.92172241]
[-257.39736938 134.55471802]
[-272.37841797 133.80105591]
[-287.35946655 133.04737854]
[-302.34051514 132.29371643]
[-313.89364624 143.07800293]
[-329.68548584 142.45085144]
[-340.34701538 130.78434753]
[-339.55294800 115.00002289]
[-327.77438354 104.46243286]
[-311.99932861 105.42334747]
[-301.58685303 117.31266785]
[-286.60580444 118.06632996]
[-271.62475586 118.81999969]
[-256.64367676 119.57366180]
[-243.54373169 112.48560333]
[-230.14974976 120.90651703]
[-215.16870117 121.66017914]
[-200.18763733 122.41384125]
[-185.20214844 123.07336426]
[-170.21279907 123.63871765]
[-155.22346497 124.20407104]
[-140.23411560 124.76942444]
[-137.51705933 117.77889252]
[-146.90797424 106.08228302]
[-132.08293152 103.79782104]
[-129.36585999 96.80728912]
[-140.80250549 87.10144806]
[-152.23913574 77.39561462]
[-163.67576599 67.68977356]
[-175.11241150 57.98393250]
[-186.54904175 48.27809525]
[-202.77104187 45.87418747]
[-208.54776001 30.52617073]
[-197.93658447 18.02276230]
[-181.85340881 21.22640038]
[-176.84321594 36.84145737]
[-165.40657043 46.54729462]
[-153.96994019 56.25313568]
[-142.53329468 65.95897675]
[-131.09666443 75.66481018]
[-119.66001892 85.37065125]
[-105.54680634 90.45172119]
[-90.54799652 90.26322937]
[-75.54917908 90.07473755]
[-60.55036163 89.88625336]
[-45.55154800 89.69776154]
[-30.55273056 89.50926971]
[-27.85407257 87.27722931]
[-23.94878578 86.22817993]
[-19.39854431 86.91133881]
[-14.98758507 89.60707092]
[0.00767755 89.98402405]
[15.00294018 90.36096954]
[29.99820328 90.73792267]
[44.99346542 91.11487579]
[59.98872757 91.49182892]
[61.54680252 78.42580414]
[67.50662994 65.65789032]
[77.77861023 54.69199371]
[76.64871216 39.73461151]
[75.51880646 24.77722740]
[74.38890076 9.81984329]
[63.20867920 -1.68590069]
[65.37632751 -17.58183861]
[79.22901917 -25.67396736]
[94.14015198 -19.75469780]
[98.67118073 -4.36478853]
[89.34629059 8.68994141]
[90.47618866 23.64732552]
[91.60609436 38.60470963]
[92.73599243 53.56209183]
[100.12832642 54.82834244]
[109.71363831 43.29049683]
[114.91299438 57.36084366]
[122.30532837 58.62709427]
[128.34892273 44.89847565]
[134.39253235 31.16985893]
[128.90698242 16.59087944]
[135.23162842 2.75420284]
[149.16426086 -2.38557196]
[155.20785522 -16.11418915]
[149.24946594 -30.75226021]
[155.46382141 -45.28350830]
[170.16407776 -51.08680725]
[184.62881470 -44.71915817]
[190.27636719 -29.95837402]
[183.75613403 -15.56176949]
[168.93647766 -10.07059288]
[162.89288330 3.65802455]
[168.51139832 17.40458298]
[162.57789612 31.41344833]
[148.12113953 37.21345520]
[142.07754517 50.94207382]
[136.03395081 64.67069244]
[149.57159424 76.48208618]
[158.90992737 93.46795654]
[173.17578125 88.83270264]
[183.90956116 77.20960236]
[198.40487671 80.63526917]
[212.67071533 76.00001526]
[220.86547852 57.62988663]
[239.65080261 51.34547424]
[256.71359253 60.78994370]
[270.79461670 55.62030029]
[269.12832642 40.63741302]
[271.09680176 25.69122505]
[276.58560181 11.65068913]
[285.27557373 -0.66789562]
[296.66152954 -10.54834366]
[310.08151245 -17.41621780]
[324.75527954 -20.87223053]
[339.82974243 -20.71545219]
[354.42843628 -16.95499802]
[367.70266724 -9.80949593]
[378.88067627 0.30562368]
[387.31259155 12.80228138]
[392.50814819 26.95393753]
[394.16534424 41.93783188]
[392.18780518 56.88282394]
[386.69052124 70.92002869]
[377.99307251 83.23334503]
[366.60110474 93.10688782]
[353.17697144 99.96662903]
[338.50112915 103.41374207]
[323.42675781 103.24782562]
[308.83035278 99.47851562]
[295.56045532 92.32497406]
[284.38858032 82.20307922]
[275.96423340 69.70130920]
[261.88323975 74.87095642]
[260.25000000 84.96110535]
[254.54203796 93.53739166]
[245.72770691 99.02447510]
[235.35275269 100.38151550]
[225.26947021 97.29894257]
[217.30598450 90.26586151]
[203.04013062 94.90111542]
[193.32673645 106.19267273]
[177.81103516 103.09854889]
[163.54518127 107.73380280]
[161.86315918 115.04275513]
[176.60487366 117.81434631]
[191.58390808 117.02147675]
[197.29225159 130.89283752]
[186.09378052 140.87252808]
[172.96937561 133.61170959]
[158.49908447 129.66065979]
[156.81706238 136.96960449]
[167.62168884 147.37440491]
[178.42633057 157.77920532]
[189.23097229 168.18400574]
[200.03559875 178.58880615]
[206.31126404 180.53524780]
[210.10853577 184.72056580]
[210.97686768 189.39344788]
[221.51661682 200.06648254]
[232.05636597 210.73951721]
[242.59611511 221.41255188]
[258.16677856 219.96730042]
[270.99407959 228.91123962]
[275.02136230 244.02134705]
[268.34710693 258.16305542]
[254.12263489 264.65908813]
[239.06434631 260.44226074]
[230.28228760 247.50355530]
[231.92308044 231.95230103]
[221.38333130 221.27926636]
[210.84358215 210.60623169]
[200.30383301 199.93319702]
[189.63079834 189.39344788]
[178.82617188 178.98864746]
[168.02153015 168.58384705]
[157.21688843 158.17904663]
[146.41226196 147.77424622]
[139.49221802 150.66612244]
[145.27597046 164.50621033]
[155.05346680 175.88166809]
[147.25616455 188.69580078]
[132.65969849 185.23988342]
[131.43588257 170.28997803]
[125.65212250 156.44989014]
[118.73207855 159.34176636]
[118.54358673 174.34057617]
[118.35509491 189.33940125]
[118.16660309 204.33821106]
[117.97811890 219.33702087]
[117.78962708 234.33584595]
[131.47976685 241.08436584]
[140.87933350 253.10980225]
[144.12200928 268.02450562]
[140.56396484 282.86709595]
[130.91166687 294.69064331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 244]
[8 243]
[9 242]
[10 241]
[11 240]
[12 239]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[49 79]
[50 78]
[51 77]
[52 76]
[54 75]
[55 74]
[56 73]
[58 71]
[59 70]
[60 69]
[61 68]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[116 128]
[117 127]
[118 126]
[119 125]
[132 151]
[133 150]
[134 149]
[137 146]
[138 145]
[153 197]
[154 196]
[156 194]
[157 193]
[160 187]
[161 186]
[205 231]
[206 230]
[207 229]
[208 228]
[209 227]
[212 226]
[213 225]
[214 224]
[215 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
