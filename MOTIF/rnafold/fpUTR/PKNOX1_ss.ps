%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAUUGAUGCGGCGCGCGUCGGCGUCGCCCUCCUCCCAUUGAGCGAGGCUGUGUCGCGUGGCCCAGCGUCGGCGUGACGGUUGGACGCGGGCGCGGCACUGCGGGUCCCGAUUGCUGCAGCCGCUUGUCAGUGUGAUGAAGAUUGGCACCCAGACACCAUUCGCUUUUCACCCAAGAUGAUUUGAUGUCUUAUAAAACUCUGAUGAACC\
) } def
/len { sequence length } bind def

/coor [
[98.07504272 142.05424500]
[96.08042908 127.18745422]
[88.79026031 125.42580414]
[85.26696777 140.00614929]
[81.74367523 154.58648682]
[78.22014618 169.16677856]
[63.63991547 165.64300537]
[67.16333008 151.06320190]
[70.68662262 136.48286438]
[74.20991516 121.90251923]
[66.91973877 120.14086914]
[58.35660553 132.45642090]
[49.79346848 144.77195740]
[41.23033142 157.08750916]
[32.66719437 169.40306091]
[24.10405540 181.71859741]
[15.54091930 194.03414917]
[18.58287239 209.54292297]
[9.69828033 222.61347961]
[-5.84178782 225.49130249]
[-18.81768417 216.46900940]
[-21.53104019 200.89938354]
[-12.37207031 188.01960754]
[3.22537279 185.47100830]
[11.78851032 173.15547180]
[20.35164642 160.83992004]
[28.91478348 148.52436829]
[37.47792053 136.20883179]
[46.04105759 123.89328003]
[54.60419464 111.57773590]
[49.96535492 105.68441772]
[36.04883957 88.00447083]
[22.06648254 93.43528748]
[8.08412838 98.86610413]
[-5.85760355 104.40036774]
[-19.75794792 110.03778076]
[-33.65829086 115.67519379]
[-41.20651245 129.83160400]
[-57.00630951 132.61476135]
[-68.93743134 121.88965607]
[-67.84734344 105.88367462]
[-54.57226944 96.87524414]
[-39.29570389 101.77484894]
[-25.39536095 96.13743591]
[-11.49501705 90.50002289]
[-6.47835922 85.07357025]
[2.65331316 84.88374329]
[16.63566780 79.45293427]
[30.61802292 74.02211761]
[33.16191483 59.23940277]
[21.79924774 49.44707108]
[6.29438114 46.29910660]
[1.70441031 32.12936783]
[-9.65825844 22.33703613]
[-21.02092743 12.54470444]
[-32.38359451 2.75237298]
[-43.74626541 -7.03995895]
[-55.10893250 -16.83229065]
[-66.47160339 -26.62462234]
[-71.59860229 -27.59673691]
[-75.45481110 -30.17962265]
[-77.63952637 -33.61968994]
[-78.10911560 -37.11350250]
[-89.02536774 -47.40113831]
[-99.94161987 -57.68877029]
[-110.85787201 -67.97640991]
[-119.24875641 -71.58425140]
[-121.85823059 -78.49828339]
[-132.62084961 -88.94654846]
[-143.38345337 -99.39481354]
[-154.14605713 -109.84307861]
[-164.90867615 -120.29134369]
[-175.74839783 -130.65957642]
[-186.66465759 -140.94721985]
[-197.58090210 -151.23484802]
[-213.36883545 -150.51605225]
[-224.98437500 -161.23309326]
[-225.53620911 -177.02774048]
[-214.69696045 -188.52932739]
[-198.89735413 -188.91413879]
[-187.51101685 -177.95388794]
[-187.29327393 -162.15110779]
[-176.37701416 -151.86346436]
[-165.46076965 -141.57583618]
[-158.43759155 -139.27621460]
[-154.46040344 -131.05395508]
[-143.69779968 -120.60569000]
[-132.93518066 -110.15742493]
[-122.17257690 -99.70915985]
[-111.40996552 -89.26089478]
[-100.57024384 -78.89266205]
[-89.65399170 -68.60502625]
[-78.73773193 -58.31739044]
[-67.82147980 -48.02975464]
[-56.67926788 -37.98728943]
[-45.31660080 -28.19495964]
[-33.95393372 -18.40262794]
[-22.59126282 -8.61029530]
[-11.22859478 1.18203616]
[0.13407350 10.97436810]
[11.49674225 20.76669884]
[26.18887520 23.21425247]
[31.59157944 38.08440018]
[42.95424652 47.87673569]
[125.80278015 69.40716553]
[135.25410461 57.75930786]
[144.70541382 46.11145020]
[154.15673828 34.46359253]
[156.84385681 18.87224960]
[170.87135315 13.86439705]
[180.32267761 2.21653962]
[189.77398682 -9.43131828]
[199.22531128 -21.07917595]
[208.67662048 -32.72703552]
[218.12794495 -44.37489319]
[214.61907959 -55.73283005]
[217.00384521 -67.25638580]
[224.57659912 -76.10659790]
[235.36839294 -80.16027069]
[246.65780640 -78.51873016]
[256.45013428 -89.88139343]
[256.27526855 -102.77787781]
[264.66461182 -112.04019165]
[276.71682739 -113.06939697]
[286.67645264 -124.28571320]
[296.63607788 -135.50202942]
[293.17361450 -150.62786865]
[299.29412842 -164.88687134]
[312.64413452 -172.79615784]
[328.09030151 -171.31443787]
[339.69326782 -161.01148987]
[342.99145508 -145.84898376]
[336.71661377 -131.65721130]
[323.28158569 -123.89321136]
[307.85241699 -125.54239655]
[297.89276123 -114.32608032]
[287.93313599 -103.10976410]
[285.33432007 -85.75394440]
[267.81280518 -80.08906555]
[258.02047729 -68.72639465]
[260.47158813 -50.58450699]
[248.68067932 -36.16545105]
[229.77580261 -34.92357635]
[220.32447815 -23.27571678]
[210.87316895 -11.62785912]
[201.42184448 0.01999925]
[191.97053528 11.66785717]
[182.51921082 23.31571579]
[180.50811768 38.07392502]
[165.80459595 43.91490936]
[156.35327148 55.56276703]
[146.90196228 67.21062469]
[137.45063782 78.85848236]
[140.97393799 93.43882751]
[154.70111084 99.48567963]
[168.42829895 105.53253174]
[182.15548706 111.57938385]
[195.88267517 117.62622833]
[211.63092041 116.10865021]
[220.15914917 128.32006836]
[233.88632202 134.36691284]
[252.14099121 131.94577026]
[261.95132446 146.49690247]
[275.76660156 152.33967590]
[289.58187866 158.18244934]
[303.44006348 163.92269897]
[317.34042358 169.56011963]
[331.24075317 175.19752502]
[344.97192383 167.71495056]
[360.29000854 170.85984802]
[369.96228027 183.14727783]
[369.42178345 198.77552795]
[358.92373657 210.36538696]
[343.42498779 212.44448853]
[330.24356079 204.03114319]
[325.60336304 189.09786987]
[311.70300293 183.46046448]
[297.80267334 177.82304382]
[290.42337036 178.22221375]
[283.73910522 171.99772644]
[269.92382812 166.15495300]
[256.10855103 160.31217957]
[244.78521729 164.56625366]
[233.22793579 159.81222534]
[227.83947754 148.09410095]
[214.11228943 142.04725647]
[199.34590149 143.99734497]
[189.83581543 131.35340881]
[176.10862732 125.30656433]
[162.38145447 119.25971222]
[148.65426636 113.21286011]
[134.92707825 107.16600800]
[128.93211365 111.67271423]
[138.07983398 123.56049347]
[147.22755432 135.44825745]
[155.96885681 147.63800049]
[143.97880554 156.65127563]
[134.69810486 144.86726379]
[125.82014465 132.77670288]
[116.94218445 120.68612671]
[110.94721985 125.19283295]
[112.94184113 140.05963135]
[127.17640686 145.82786560]
[136.60711670 157.95045471]
[138.69715881 173.16648865]
[132.88433838 187.38290405]
[120.73223877 196.77557373]
[105.50974274 198.81791687]
[91.31161499 192.96054077]
[81.95708466 180.77906799]
[79.96247101 165.55024719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[32 49]
[33 48]
[34 47]
[35 45]
[36 44]
[37 43]
[50 104]
[51 103]
[53 101]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[63 94]
[64 93]
[65 92]
[66 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 84]
[74 83]
[75 82]
[105 153]
[106 152]
[107 151]
[108 150]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[115 143]
[120 140]
[121 139]
[124 137]
[125 136]
[126 135]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[160 186]
[161 185]
[163 182]
[164 181]
[165 180]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
