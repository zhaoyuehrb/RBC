%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf195)
} def

/sequence { (\
CAUGAUUGGAUGAGGUCAUAGAAGUUUGGCUUCUCUCAUUGACCUGGAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.219999695 ubox
1 12 0.627826190 ubox
1 41 0.191300207 ubox
1 46 0.101725269 ubox
2 7 0.213035080 ubox
2 11 0.630175335 ubox
2 19 0.035062974 ubox
2 39 0.221318341 ubox
2 40 0.148714322 ubox
2 45 0.099069060 ubox
3 10 0.626180107 ubox
3 12 0.006558744 ubox
3 18 0.037135437 ubox
3 38 0.259772595 ubox
3 41 0.185895292 ubox
3 46 0.009027979 ubox
4 11 0.007039128 ubox
4 17 0.037796549 ubox
4 35 0.006263804 ubox
4 37 0.265233916 ubox
4 40 0.380206208 ubox
4 45 0.010067510 ubox
5 11 0.018503195 ubox
5 16 0.037784217 ubox
5 34 0.006240329 ubox
5 36 0.211415570 ubox
5 39 0.398401708 ubox
6 10 0.017016540 ubox
6 13 0.005492653 ubox
6 15 0.037643270 ubox
6 38 0.383351394 ubox
6 42 0.026309899 ubox
6 47 0.008321172 ubox
6 48 0.012724331 ubox
6 49 0.046495476 ubox
6 50 0.044733482 ubox
6 51 0.048449938 ubox
7 12 0.010536704 ubox
7 13 0.006076407 ubox
7 14 0.035520126 ubox
7 38 0.201908873 ubox
7 41 0.024987887 ubox
7 46 0.012118148 ubox
7 47 0.012322391 ubox
7 48 0.052662100 ubox
7 49 0.057188791 ubox
7 50 0.072498144 ubox
8 33 0.010682692 ubox
8 34 0.015257891 ubox
8 35 0.050855351 ubox
8 36 0.449625793 ubox
8 37 0.230269216 ubox
8 40 0.016038272 ubox
8 44 0.040612887 ubox
8 45 0.009319189 ubox
9 32 0.009151203 ubox
9 33 0.014817078 ubox
9 34 0.041449682 ubox
9 35 0.532697417 ubox
9 36 0.145568317 ubox
9 37 0.070934528 ubox
9 39 0.009147821 ubox
9 40 0.122823839 ubox
9 43 0.039953390 ubox
9 44 0.008809387 ubox
10 31 0.005625458 ubox
10 32 0.013942037 ubox
10 34 0.525916875 ubox
10 36 0.070893418 ubox
10 39 0.134814226 ubox
11 38 0.136107947 ubox
11 46 0.040509772 ubox
12 32 0.008274376 ubox
12 33 0.566764718 ubox
12 35 0.009936967 ubox
12 37 0.136267859 ubox
12 45 0.021218643 ubox
13 31 0.008300279 ubox
13 32 0.566814013 ubox
13 34 0.009831335 ubox
13 36 0.136096054 ubox
13 45 0.789819109 ubox
14 30 0.006129158 ubox
14 31 0.567136360 ubox
14 33 0.009003191 ubox
14 35 0.135030355 ubox
14 36 0.003539242 ubox
14 44 0.810917707 ubox
15 30 0.568775693 ubox
15 33 0.003864640 ubox
15 34 0.068510872 ubox
15 35 0.007961723 ubox
15 43 0.811023177 ubox
16 29 0.568668583 ubox
16 42 0.810922118 ubox
17 28 0.568788190 ubox
17 41 0.810894591 ubox
18 25 0.012180543 ubox
18 27 0.565496174 ubox
18 39 0.266116417 ubox
18 40 0.747093011 ubox
19 24 0.018514683 ubox
19 28 0.004541684 ubox
19 38 0.371719836 ubox
20 26 0.036937680 ubox
20 27 0.008804089 ubox
20 31 0.004287132 ubox
20 34 0.750244578 ubox
20 36 0.137204309 ubox
21 25 0.028516819 ubox
21 26 0.015989353 ubox
21 27 0.004895314 ubox
21 30 0.004401589 ubox
21 33 0.800198860 ubox
21 35 0.132324923 ubox
21 37 0.129237458 ubox
22 26 0.006637868 ubox
22 32 0.801285153 ubox
22 34 0.112081160 ubox
22 36 0.124461961 ubox
23 31 0.807170445 ubox
23 32 0.018148479 ubox
23 34 0.124061507 ubox
23 36 0.027733390 ubox
24 30 0.807847605 ubox
24 31 0.013973751 ubox
24 33 0.136435283 ubox
24 35 0.036568544 ubox
24 39 0.003465741 ubox
25 29 0.755737965 ubox
25 38 0.003359555 ubox
27 38 0.003994395 ubox
28 34 0.007591298 ubox
28 35 0.008640668 ubox
28 37 0.004338205 ubox
29 33 0.007742521 ubox
29 34 0.006125280 ubox
29 36 0.003383094 ubox
30 50 0.007580400 ubox
31 49 0.007634906 ubox
32 48 0.007701980 ubox
33 47 0.007711999 ubox
33 50 0.006682282 ubox
34 42 0.022771657 ubox
34 46 0.006302276 ubox
34 47 0.004705431 ubox
34 48 0.024763622 ubox
34 49 0.007465298 ubox
34 51 0.005961240 ubox
35 41 0.025335943 ubox
35 46 0.006773827 ubox
35 47 0.026441012 ubox
35 50 0.011331636 ubox
36 42 0.010702889 ubox
36 46 0.011691677 ubox
36 47 0.030640968 ubox
36 48 0.012888939 ubox
36 49 0.009274171 ubox
36 51 0.005925801 ubox
37 41 0.013195353 ubox
37 46 0.055408111 ubox
37 47 0.015227891 ubox
37 50 0.017209905 ubox
38 45 0.050954925 ubox
39 47 0.004075699 ubox
39 48 0.026742349 ubox
39 49 0.014833739 ubox
39 50 0.013494204 ubox
40 46 0.006503821 ubox
40 47 0.028822647 ubox
40 48 0.017551406 ubox
40 49 0.019642503 ubox
40 50 0.005113969 ubox
41 45 0.004783996 ubox
43 51 0.418289489 ubox
44 50 0.423142912 ubox
44 51 0.059891109 ubox
45 49 0.381240556 ubox
45 50 0.060052280 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
