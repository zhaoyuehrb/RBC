%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUCCCCCGGGUCGAAGGGGGCGGGGCCUCGGGCGCCGCGCUUCCUCCCGCCGUGGCUUCCGCGUCGCUUCCCGGUCAGCUGCGUCCUUAGCGGGAGCCCGAGUGCGGGCGGUGGCGGGCUUGGCGGCGGGGCAGGAUUCCAGGCAGGAGCCUUGCCUCUCAGGUGGCGGGCUCUGCGACCCUGCGAG\
) } def
/len { sequence length } bind def

/coor [
[151.25160217 225.62887573]
[143.42463684 212.72132874]
[143.10722351 197.52934265]
[150.48474121 184.13085938]
[142.80921936 171.24340820]
[135.13371277 158.35595703]
[127.45819092 145.46849060]
[119.78267670 132.58103943]
[112.10716248 119.69358826]
[109.57868195 134.47894287]
[95.19695282 138.74110413]
[85.02074432 127.72091675]
[90.41382599 113.72289276]
[77.22477722 120.86775208]
[64.03573608 128.01261902]
[59.43605042 142.89483643]
[45.95870209 149.95286560]
[31.79911804 145.47605896]
[18.61007118 152.62091064]
[5.42102432 159.76577759]
[-7.76802254 166.91064453]
[-10.26526928 177.51669312]
[-18.03346634 184.84054565]
[-28.33510590 186.63378906]
[-37.71815872 182.54107666]
[-51.13277817 189.25285339]
[-64.54740143 195.96463013]
[-77.96202087 202.67640686]
[-86.84156036 215.77084351]
[-101.68572998 214.54615784]
[-115.10034943 221.25793457]
[-128.51496887 227.96971130]
[-139.97459412 240.46424866]
[-155.15316772 232.91131592]
[-152.09725952 216.23504639]
[-135.22674561 214.55509949]
[-121.81212616 207.84332275]
[-108.39750671 201.13154602]
[-100.47747040 188.51716614]
[-84.67379761 189.26177979]
[-71.25917816 182.55000305]
[-57.84455872 175.83822632]
[-44.42993546 169.12644958]
[-35.00769806 152.25134277]
[-14.91288376 153.72158813]
[-1.72383702 146.57673645]
[11.46520996 139.43186951]
[24.65425682 132.28700256]
[28.63872528 117.98107910]
[41.91251373 110.54729462]
[56.89087296 114.82357025]
[70.07991791 107.67870331]
[83.26896667 100.53384399]
[91.96680450 88.31306458]
[94.39768982 73.51134491]
[96.82857513 58.70962906]
[95.12995148 49.71871948]
[99.42137146 43.68758011]
[102.09286499 28.92739487]
[104.76435089 14.16720581]
[96.02677917 1.27176011]
[98.94631195 -13.65911293]
[111.29399109 -21.90958595]
[113.96548462 -36.66977310]
[116.63697052 -51.42996216]
[119.18824005 -66.21140289]
[121.61912537 -81.01312256]
[116.22055054 -95.88476562]
[125.91813660 -107.18989563]
[128.34901428 -121.99161530]
[130.77990723 -136.79333496]
[133.21078491 -151.59504700]
[135.64167786 -166.39675903]
[130.24308777 -181.26841736]
[139.94068909 -192.57354736]
[142.37156677 -207.37525940]
[136.97299194 -222.24690247]
[146.67057800 -233.55204773]
[149.10145569 -248.35375977]
[151.53234863 -263.15548706]
[153.96322632 -277.95718384]
[148.56465149 -292.82882690]
[158.26223755 -304.13397217]
[160.69313049 -318.93569946]
[163.12400818 -333.73739624]
[165.55488586 -348.53912354]
[167.98577881 -363.34082031]
[155.29499817 -376.17324829]
[158.53900146 -397.95190430]
[157.56303406 -412.92013550]
[156.58706665 -427.88833618]
[155.61109924 -442.85656738]
[146.05979919 -456.18716431]
[153.07432556 -471.01040649]
[169.43872070 -472.07739258]
[178.31871033 -458.29052734]
[170.57931519 -443.83251953]
[171.55528259 -428.86431885]
[172.53125000 -413.89608765]
[173.50721741 -398.92788696]
[188.34654236 -396.73825073]
[193.60409546 -410.78665161]
[198.86166382 -424.83508301]
[204.11921692 -438.88351440]
[209.37677002 -452.93191528]
[206.14303589 -469.00909424]
[218.62655640 -479.64364624]
[233.98536682 -473.89566040]
[236.41963196 -457.67819214]
[223.42520142 -447.67437744]
[218.16763306 -433.62594604]
[212.91007996 -419.57751465]
[207.65252686 -405.52911377]
[202.39495850 -391.48068237]
[199.06600952 -369.35012817]
[182.78749084 -360.90994263]
[180.35661316 -346.10824585]
[177.92572021 -331.30651855]
[175.49484253 -316.50479126]
[173.06394958 -301.70309448]
[178.63641357 -287.89016724]
[168.76493835 -275.52630615]
[166.33406067 -260.72457886]
[163.90318298 -245.92286682]
[161.47229004 -231.12115479]
[167.04475403 -217.30822754]
[157.17327881 -204.94438171]
[154.74240112 -190.14265442]
[160.31484985 -176.32972717]
[150.44338989 -163.96588135]
[148.01251221 -149.16416931]
[145.58161926 -134.36244202]
[143.15074158 -119.56072998]
[140.71984863 -104.75901794]
[146.29231262 -90.94608307]
[136.42083740 -78.58223724]
[133.98995972 -63.78051758]
[136.01138306 -56.65978622]
[131.39715576 -48.75847244]
[128.72567749 -33.99828339]
[126.05418396 -19.23809624]
[134.72673035 -7.18311262]
[132.22772217 7.82387304]
[119.52453613 16.83869553]
[116.85305023 31.59888268]
[114.18156433 46.35906982]
[111.63028717 61.14051437]
[109.19940948 75.94223022]
[106.76852417 90.74394226]
[119.01211548 95.23432159]
[124.99461365 112.01807404]
[132.67013550 124.90552521]
[140.34564209 137.79298401]
[148.02116394 150.68043518]
[155.69668579 163.56788635]
[163.37219238 176.45533752]
[178.66717529 176.35054016]
[191.87382507 183.86593628]
[199.49487305 196.89613342]
[199.57002258 211.89114380]
[192.17922974 224.82333374]
[199.85473633 237.71078491]
[207.53025818 250.59823608]
[221.23942566 258.49566650]
[221.10438538 273.38964844]
[228.77989197 286.27709961]
[236.45541382 299.16455078]
[244.23556519 311.98913574]
[252.11982727 324.74993896]
[265.95571899 332.42315674]
[266.06311035 347.31738281]
[273.94738770 360.07818604]
[281.83166504 372.83901978]
[289.71591187 385.59982300]
[303.18499756 395.89642334]
[297.01940918 411.68951416]
[280.13668823 410.13684082]
[276.95510864 393.48410034]
[269.07086182 380.72326660]
[261.18658447 367.96246338]
[253.30230713 355.20166016]
[240.03034973 348.44116211]
[239.35900879 332.63418579]
[231.47474670 319.87338257]
[225.27497864 315.82940674]
[223.56796265 306.84008789]
[215.89244080 293.95263672]
[208.21691895 281.06518555]
[195.05676270 274.08953857]
[194.64280701 258.27377319]
[186.96728516 245.38630676]
[179.29177856 232.49885559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[13 53]
[14 52]
[15 51]
[18 48]
[19 47]
[20 46]
[21 45]
[25 43]
[26 42]
[27 41]
[28 40]
[30 38]
[31 37]
[32 36]
[54 149]
[55 148]
[56 147]
[58 146]
[59 145]
[60 144]
[63 141]
[64 140]
[65 139]
[66 137]
[67 136]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[75 128]
[76 127]
[78 125]
[79 124]
[80 123]
[81 122]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[89 100]
[90 99]
[91 98]
[92 97]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[161 192]
[162 191]
[163 190]
[165 188]
[166 187]
[167 186]
[168 184]
[169 183]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
