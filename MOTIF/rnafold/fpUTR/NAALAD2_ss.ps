%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCCACCCAGAGCUCACAGCCUCCUGCCAGCGCGCUCUCUGUUUCUCUGCAGCCCCGAAGCUCGCGAAUGUAGCAGGCGCCCCAAGCUCGGUCCUCAAGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[92.78010559 424.62060547]
[94.05842590 409.41113281]
[101.81669617 396.26684570]
[114.51450348 387.79757690]
[112.37978363 372.95025635]
[110.24506378 358.10293579]
[108.11033630 343.25561523]
[104.77086639 339.65225220]
[103.75848389 333.86746216]
[106.30281067 327.50228882]
[105.01918793 312.55731201]
[103.73556519 297.61233521]
[100.60725403 293.82421875]
[99.92676544 287.99105835]
[102.83032227 281.78152466]
[102.40198517 266.78765869]
[101.97364044 251.79376221]
[101.54530334 236.79988098]
[101.11695862 221.80599976]
[85.76647186 214.28700256]
[76.21504211 200.00559998]
[75.11687469 182.77151489]
[82.85684967 167.23574829]
[97.42269897 157.63546753]
[96.13907623 142.69049072]
[94.85545349 127.74552155]
[93.57182312 112.80054474]
[85.72859955 101.22576904]
[91.48320007 88.48307800]
[90.19956970 73.53810120]
[88.91594696 58.59312820]
[87.63232422 43.64815140]
[72.71770477 32.15882874]
[70.81383514 13.74540901]
[82.65210724 -0.07346638]
[80.51738739 -14.92078781]
[78.38265991 -29.76811028]
[68.76014709 -42.32668304]
[74.60741425 -56.02554321]
[72.47268677 -70.87286377]
[70.12617493 -85.68818665]
[67.56834412 -100.46849823]
[52.76029587 -115.81830597]
[60.12288284 -135.00944519]
[56.30960846 -149.51664734]
[52.49633026 -164.02384949]
[48.68305588 -178.53105164]
[34.90927887 -186.28079224]
[30.73015976 -201.52253723]
[38.62509918 -215.21360779]
[53.91016769 -219.23133850]
[67.51700592 -211.19209290]
[71.37291718 -195.86540222]
[63.19025803 -182.34432983]
[67.00353241 -167.83711243]
[70.81681061 -153.32991028]
[74.63008118 -138.82270813]
[83.16130829 -135.54618835]
[89.25312042 -128.54843140]
[91.38624573 -119.37625885]
[88.93624115 -110.13963318]
[82.34864807 -103.02632904]
[84.90647888 -88.24602509]
[89.21215820 -82.10045624]
[87.32001495 -73.00758362]
[89.45473480 -58.16026688]
[98.92456055 -46.66366959]
[93.22998047 -31.90283203]
[95.36470795 -17.05551147]
[97.49942780 -2.20818901]
[108.04605865 2.58034897]
[114.98756409 12.00322914]
[116.46454620 23.73509026]
[111.98462677 34.80850220]
[102.57730103 42.36452484]
[103.86092377 57.30950165]
[105.14454651 72.25447845]
[106.42817688 87.19945526]
[114.27140045 98.77423096]
[108.51679993 111.51692200]
[109.80043030 126.46189880]
[111.08405304 141.40687561]
[112.36767578 156.35185242]
[124.67946625 160.76423645]
[134.33744812 169.51312256]
[139.90119934 181.24510193]
[140.55946350 194.16564941]
[136.24836731 206.31359863]
[127.65555573 215.85873413]
[116.11083984 221.37765503]
[116.53918457 236.37153625]
[116.96752167 251.36541748]
[117.39586639 266.35931396]
[117.82420349 281.35317993]
[118.68054199 296.32873535]
[119.96416473 311.27371216]
[121.24778748 326.21868896]
[122.95765686 341.12091064]
[125.09238434 355.96823120]
[127.22710419 370.81555176]
[129.36183167 385.66287231]
[143.93135071 390.21166992]
[155.07853699 400.63775635]
[160.59007263 414.87100220]
[159.37165833 430.08541870]
[151.66522217 443.26016235]
[139.00085449 451.77935791]
[123.89308929 453.95150757]
[109.34159088 449.34536743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 101]
[5 100]
[6 99]
[7 98]
[10 97]
[11 96]
[12 95]
[15 94]
[16 93]
[17 92]
[18 91]
[19 90]
[24 83]
[25 82]
[26 81]
[27 80]
[29 78]
[30 77]
[31 76]
[32 75]
[35 70]
[36 69]
[37 68]
[39 66]
[40 65]
[41 63]
[42 62]
[44 57]
[45 56]
[46 55]
[47 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
