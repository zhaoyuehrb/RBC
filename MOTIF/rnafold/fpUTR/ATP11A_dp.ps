%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP11A)
} def

/sequence { (\
GCGGCCGCACUAGUACCCCGGAGCCCAUGGGCGCGCCGAGCCGGGCGCGGGGGCGCUGAACGGCGGAGCGGGAGCGGCCGGAGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 75 0.004556064 ubox
1 87 0.041922592 ubox
2 74 0.004558275 ubox
2 80 0.984324772 ubox
2 86 0.038426230 ubox
3 79 0.999929992 ubox
4 78 0.999978363 ubox
5 71 0.004559586 ubox
5 77 0.999978453 ubox
6 70 0.004563561 ubox
6 76 0.999961077 ubox
7 69 0.004569832 ubox
7 75 0.999946265 ubox
8 68 0.004564799 ubox
8 74 0.998764228 ubox
10 68 0.004682690 ubox
10 71 0.378275710 ubox
10 72 0.874756507 ubox
10 74 0.006072631 ubox
11 58 0.036114287 ubox
11 67 0.004680775 ubox
11 70 0.337102577 ubox
11 71 0.813387716 ubox
11 73 0.012684453 ubox
12 57 0.042545447 ubox
13 34 0.003447733 ubox
13 54 0.021859851 ubox
13 56 0.043111919 ubox
13 64 0.004664368 ubox
13 69 0.967225783 ubox
14 33 0.003486182 ubox
14 53 0.021360168 ubox
14 55 0.042430325 ubox
14 63 0.004566722 ubox
14 68 0.951783690 ubox
16 31 0.017476418 ubox
16 51 0.003359713 ubox
16 52 0.222312662 ubox
16 53 0.070266507 ubox
16 63 0.026166226 ubox
16 66 0.965283992 ubox
16 72 0.011128051 ubox
17 30 0.017496437 ubox
17 31 0.024541849 ubox
17 50 0.003290199 ubox
17 51 0.222894541 ubox
17 52 0.070316662 ubox
17 62 0.026233626 ubox
17 63 0.023750069 ubox
17 65 0.967623948 ubox
17 66 0.027895601 ubox
17 71 0.010651213 ubox
17 72 0.066858017 ubox
18 29 0.017398873 ubox
18 30 0.024864148 ubox
18 49 0.003198608 ubox
18 50 0.222999334 ubox
18 51 0.070005103 ubox
18 62 0.026876316 ubox
18 63 0.965140726 ubox
18 65 0.027930082 ubox
18 66 0.017150663 ubox
18 70 0.010058241 ubox
18 71 0.067183487 ubox
19 29 0.024901728 ubox
19 38 0.068862606 ubox
19 49 0.223072299 ubox
19 50 0.069650975 ubox
19 58 0.075569491 ubox
19 62 0.963497133 ubox
19 65 0.017105430 ubox
19 70 0.067271562 ubox
20 26 0.021145749 ubox
20 28 0.022345410 ubox
20 37 0.069684522 ubox
20 48 0.214178721 ubox
20 57 0.194815079 ubox
20 61 0.941770839 ubox
20 64 0.012788534 ubox
20 69 0.067054943 ubox
21 25 0.020876644 ubox
21 36 0.069560443 ubox
21 56 0.394948154 ubox
22 57 0.554088645 ubox
23 32 0.100444194 ubox
23 34 0.064642055 ubox
23 46 0.221125544 ubox
23 54 0.766053878 ubox
23 56 0.584832001 ubox
23 64 0.068045611 ubox
24 30 0.010367206 ubox
24 31 0.101422149 ubox
24 33 0.064752041 ubox
24 45 0.221255329 ubox
24 51 0.003708507 ubox
24 52 0.038539740 ubox
24 53 0.766179059 ubox
24 55 0.584370846 ubox
24 63 0.068126014 ubox
25 29 0.010634341 ubox
25 30 0.101057885 ubox
25 31 0.063491687 ubox
25 44 0.221245782 ubox
25 50 0.004215207 ubox
25 51 0.051491694 ubox
25 52 0.765765664 ubox
25 53 0.583033806 ubox
25 62 0.067968943 ubox
25 63 0.003411245 ubox
26 30 0.063113712 ubox
26 43 0.220988208 ubox
26 49 0.004159340 ubox
26 50 0.060211215 ubox
26 51 0.762701330 ubox
26 52 0.582930772 ubox
26 58 0.005809962 ubox
26 62 0.004099256 ubox
27 57 0.005051759 ubox
28 38 0.017681975 ubox
28 43 0.004558445 ubox
28 49 0.146841808 ubox
28 55 0.004745875 ubox
29 37 0.019981077 ubox
29 42 0.027747273 ubox
29 48 0.152589062 ubox
29 54 0.008168717 ubox
29 61 0.005696743 ubox
30 36 0.019974538 ubox
30 37 0.012856198 ubox
30 41 0.023963710 ubox
30 42 0.217949680 ubox
30 57 0.069060312 ubox
31 36 0.012799146 ubox
31 41 0.218585054 ubox
31 46 0.151975357 ubox
31 48 0.580880224 ubox
31 56 0.069669211 ubox
32 38 0.015836258 ubox
32 40 0.218983406 ubox
32 45 0.151967673 ubox
32 47 0.581196615 ubox
32 49 0.746465461 ubox
32 55 0.069679978 ubox
32 58 0.005705117 ubox
32 70 0.027828811 ubox
33 37 0.015915018 ubox
33 41 0.012240218 ubox
33 46 0.581087743 ubox
33 48 0.758239783 ubox
33 54 0.069653860 ubox
33 56 0.061747631 ubox
33 69 0.029007333 ubox
34 40 0.012554788 ubox
34 43 0.150766281 ubox
34 45 0.580634265 ubox
34 47 0.758565902 ubox
34 53 0.069633086 ubox
34 55 0.061837566 ubox
34 65 0.011150389 ubox
34 68 0.028970034 ubox
34 70 0.008079120 ubox
35 41 0.053792001 ubox
35 42 0.137656714 ubox
35 46 0.758672246 ubox
35 54 0.061844828 ubox
35 64 0.011858208 ubox
35 69 0.008836387 ubox
36 40 0.074684850 ubox
36 44 0.581359501 ubox
36 45 0.757797870 ubox
36 50 0.029166249 ubox
36 51 0.060126429 ubox
36 52 0.019408921 ubox
36 53 0.061821121 ubox
36 63 0.011865386 ubox
36 66 0.028604250 ubox
36 68 0.008830866 ubox
37 43 0.582995851 ubox
37 44 0.756760683 ubox
37 49 0.035062415 ubox
37 50 0.056463083 ubox
37 51 0.019480933 ubox
37 52 0.061632178 ubox
37 62 0.011865018 ubox
37 65 0.028530790 ubox
38 42 0.546496778 ubox
38 48 0.039964417 ubox
38 61 0.011777478 ubox
38 64 0.012105768 ubox
40 46 0.049380226 ubox
40 48 0.046309387 ubox
40 64 0.074996230 ubox
41 45 0.049092832 ubox
41 47 0.046278971 ubox
41 50 0.062578796 ubox
41 51 0.003973730 ubox
41 63 0.075980815 ubox
42 49 0.063111182 ubox
42 50 0.003749113 ubox
42 58 0.005120096 ubox
42 62 0.075985663 ubox
43 48 0.062847401 ubox
43 57 0.004244322 ubox
43 61 0.075781851 ubox
44 57 0.072811552 ubox
45 56 0.073930787 ubox
46 55 0.074011586 ubox
46 58 0.021769202 ubox
47 54 0.074035251 ubox
47 56 0.023408548 ubox
47 57 0.004562822 ubox
48 53 0.074012017 ubox
48 55 0.023867595 ubox
49 54 0.023916238 ubox
49 57 0.005270697 ubox
50 56 0.005533305 ubox
50 57 0.005769231 ubox
51 56 0.006057475 ubox
53 64 0.030616775 ubox
53 69 0.086287539 ubox
54 62 0.005278760 ubox
54 63 0.030506943 ubox
54 65 0.187039007 ubox
54 68 0.085962763 ubox
54 70 0.088309034 ubox
55 61 0.006947811 ubox
55 64 0.191075974 ubox
55 69 0.091302907 ubox
56 63 0.191046240 ubox
56 66 0.085260944 ubox
56 68 0.091266898 ubox
57 62 0.178722756 ubox
57 65 0.085484459 ubox
57 67 0.090558850 ubox
58 64 0.085649949 ubox
61 70 0.039636858 ubox
62 69 0.039644861 ubox
63 69 0.017039048 ubox
64 68 0.017592922 ubox
64 70 0.006364957 ubox
65 69 0.006376904 ubox
68 75 0.004152895 ubox
69 74 0.004214991 ubox
76 88 0.004763021 ubox
77 87 0.004798109 ubox
78 86 0.004780978 ubox
80 88 0.079676917 ubox
81 87 0.101458175 ubox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
10 72 0.9500000 lbox
11 71 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
showpage
end
%%EOF
