%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGUCAGAGCAGGAAGUGUUUGAGGAAGUCGCGCCGCGCUGCCCGCGUUAAGAUUCCCGCAUUUUAAUGUUUUCAGGGGGGUGUCAUAGCCCCGGGUUUGGCCGCCCCAGCCCCGCCUUCCCCGCCCCGGGGAGCCCGCCCCCUGCCCCGCGUCCCUGCCGACAGAGUUAGCACGACAUCAGU\
) } def
/len { sequence length } bind def

/coor [
[185.92288208 349.21960449]
[200.83099365 350.87741089]
[213.88172913 358.27703857]
[207.30868530 344.79388428]
[200.73562622 331.31076050]
[194.16258240 317.82760620]
[187.58952332 304.34448242]
[174.27212524 303.25033569]
[163.14816284 295.65338135]
[157.18800354 283.45242310]
[158.04696655 269.79220581]
[165.60728455 258.25277710]
[159.26165771 244.66113281]
[152.91604614 231.06947327]
[146.57041931 217.47781372]
[140.22480774 203.88615417]
[126.18195343 199.05564880]
[119.55297852 185.36216736]
[124.71487427 170.66548157]
[118.36925507 157.07382202]
[112.02364349 143.48216248]
[102.17600250 145.06141663]
[92.22200775 144.43838501]
[82.64815521 141.64349365]
[73.92234039 136.81335449]
[66.47103119 130.18402100]
[60.65838623 122.07949829]
[46.53921127 127.14396667]
[36.16175842 139.08628845]
[21.56949806 136.10046387]
[7.45032024 141.16493225]
[0.41135609 147.01998901]
[-6.94880486 146.19371033]
[-21.15106773 151.02026367]
[-35.35333252 155.84683228]
[-48.40456390 166.66818237]
[-62.41595459 157.12265015]
[-57.12220001 141.01635742]
[-40.17989349 141.64456177]
[-25.97763062 136.81800842]
[-11.77536774 131.99143982]
[2.38585210 127.04575348]
[16.50502968 121.98128510]
[25.87258148 110.40120697]
[41.47474289 113.02478790]
[55.59391785 107.96031952]
[48.36991501 90.93585968]
[48.31677246 70.06716919]
[34.88932419 63.38109589]
[21.46187401 56.69501877]
[8.03442383 50.00894547]
[-5.39302540 43.32286835]
[-18.82047462 36.63679504]
[-32.24792480 29.95071793]
[-45.67537308 23.26464272]
[-59.10282135 16.57856750]
[-72.53027344 9.89249229]
[-87.43374634 15.15196800]
[-101.65485382 8.25735950]
[-106.75646210 -6.70088530]
[-99.71189117 -20.84830475]
[-84.70053864 -25.79148483]
[-70.62839508 -18.59772682]
[-65.84420013 -3.53495717]
[-52.41674805 3.15111828]
[-38.98929977 9.83719349]
[-25.56184959 16.52326965]
[-12.13439941 23.20934486]
[1.29304993 29.89542007]
[14.72049904 36.58149338]
[28.14794922 43.26757050]
[41.57539749 49.95364380]
[55.00284576 56.63972092]
[61.02573013 52.17039490]
[52.08707809 40.12462616]
[39.86358261 31.43059921]
[44.35485077 17.11876678]
[59.35409164 16.96764374]
[64.13284302 31.18597603]
[73.07149506 43.23174286]
[79.09438324 38.76241684]
[76.58622742 23.97359848]
[74.07807159 9.18478012]
[71.56990814 -5.60403776]
[69.06175232 -20.39285660]
[56.03166580 -29.33669853]
[53.22443008 -44.88967133]
[62.30553436 -57.82447433]
[77.88731384 -60.46711731]
[90.72538757 -51.24976349]
[93.20314026 -35.64091110]
[83.85057068 -22.90101242]
[86.35872650 -8.11219501]
[88.86688995 6.67662334]
[91.37504578 21.46544266]
[93.88320160 36.25426102]
[108.74793243 38.26419067]
[115.09354401 24.67253494]
[121.43916321 11.08087826]
[127.78478241 -2.51077914]
[134.13040161 -16.10243607]
[132.95759583 -31.88011360]
[145.35260010 -40.13923264]
[151.69821167 -53.73088837]
[149.73828125 -70.01249695]
[163.01914978 -79.63282776]
[177.87858582 -72.69531250]
[179.03048706 -56.33666992]
[165.28987122 -47.38526917]
[158.94425964 -33.79361343]
[160.57093811 -18.98810196]
[147.72206116 -9.75681877]
[141.37643433 3.83483815]
[135.03082275 17.42649460]
[128.68519592 31.01815224]
[122.33958435 44.60980988]
[133.27674866 59.49713135]
[137.77018738 75.32857513]
[151.51742554 69.32744598]
[155.76457214 64.21662140]
[161.14924622 62.31879807]
[165.82873535 63.36426544]
[179.76982117 57.82834244]
[193.71089172 52.29241562]
[207.65196228 46.75649261]
[221.59303284 41.22056961]
[235.53411865 35.68464661]
[248.02360535 24.21953201]
[262.49810791 33.04707718]
[258.02249146 49.39960098]
[241.07003784 49.62572098]
[227.12896729 55.16164398]
[213.18788147 60.69756699]
[199.24681091 66.23348999]
[185.30574036 71.76941681]
[171.36466980 77.30533600]
[157.51855469 83.07467651]
[143.77133179 89.07580566]
[142.20289612 115.94309235]
[125.61529541 137.13655090]
[131.96092224 150.72821045]
[138.30653381 164.31987000]
[152.88796997 169.79885864]
[159.12971497 183.67312622]
[153.81646729 197.54054260]
[160.16207886 211.13218689]
[166.50770569 224.72384644]
[172.85331726 238.31550598]
[179.19892883 251.90716553]
[195.83726501 254.89465332]
[207.30824280 267.08435059]
[209.24150085 283.54348755]
[201.07266235 297.77142334]
[207.64572144 311.25454712]
[214.21876526 324.73770142]
[220.79182434 338.22082520]
[227.36486816 351.70397949]
[234.52432251 355.64147949]
[238.05783081 362.07278442]
[237.61111450 368.56707764]
[246.54977417 380.61285400]
[255.48841858 392.65859985]
[269.92553711 399.13012695]
[271.29638672 413.96151733]
[280.23504639 426.00726318]
[289.17370605 438.05303955]
[303.46792603 447.16958618]
[298.66467285 463.42889404]
[281.71112061 463.31439209]
[277.12792969 446.99169922]
[268.18927002 434.94592285]
[259.25061035 422.90014648]
[245.45286560 417.29025269]
[243.44265747 401.59725952]
[234.50399780 389.55148315]
[225.56535339 377.50573730]
[226.12065125 392.49545288]
[220.72462463 406.49127197]
[210.25035095 417.22857666]
[196.39265442 422.97000122]
[181.39376831 422.78656006]
[167.68063354 416.70794678]
[157.47207642 405.71771240]
[152.41992188 391.59411621]
[153.34164429 376.62246704]
[160.08810425 363.22525024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[12 149]
[13 148]
[14 147]
[15 146]
[16 145]
[19 142]
[20 141]
[21 140]
[27 46]
[28 45]
[30 43]
[31 42]
[33 41]
[34 40]
[35 39]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[103 110]
[104 109]
[118 138]
[119 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[127 131]
[160 176]
[161 175]
[162 174]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
