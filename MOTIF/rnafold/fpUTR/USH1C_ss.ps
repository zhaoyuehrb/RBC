%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCGAGGGCGGCUGGCCCGGUCGCGGUCGCGGCUCUUUCCAGCUCCUGGCAGCCGGGCACCCGAAGGAACGGGUCGUGCAACGACGCAGCUGGACCUGGCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-16.18511200 410.39343262]
[-20.33091164 413.02947998]
[-26.16996384 426.84634399]
[-32.00901413 440.66320801]
[-37.84806824 454.48004150]
[-38.44433975 471.42352295]
[-54.89070892 475.54095459]
[-63.40004730 460.87713623]
[-51.66492081 448.64099121]
[-45.82587051 434.82415771]
[-39.98681641 421.00729370]
[-34.14776611 407.19042969]
[-28.70565033 393.21246338]
[-23.66490936 379.08480835]
[-18.62416840 364.95715332]
[-13.58342838 350.82946777]
[-8.54268742 336.70181274]
[-3.50194645 322.57415771]
[1.33654463 308.37594604]
[5.97179937 294.11010742]
[2.54613304 279.61477661]
[14.16923046 268.88098145]
[18.80448532 254.61514282]
[23.43974113 240.34930420]
[28.07499504 226.08345032]
[27.13484573 218.63879395]
[33.05167007 211.47976685]
[38.09241104 197.35209656]
[43.13315201 183.22442627]
[48.17389297 169.09677124]
[45.16355133 154.50953674]
[57.08842468 144.11204529]
[62.12916565 129.98437500]
[67.16990662 115.85671234]
[63.56417465 101.29653168]
[52.51305771 91.15391541]
[41.46194077 81.01129150]
[25.68487167 81.93845367]
[13.92886829 71.37569427]
[13.16856003 55.58970261]
[23.85502243 43.94602966]
[39.64817047 43.35266495]
[51.17820358 54.16163635]
[51.60456467 69.96017456]
[62.65568161 80.10279846]
[73.70679474 90.24541473]
[81.60839844 82.17681885]
[91.26025391 78.53353119]
[90.40391541 63.55799103]
[89.54758453 48.58245468]
[88.69125366 33.60691833]
[87.83492279 18.63138199]
[80.89420319 3.16326022]
[93.83644867 -7.78821230]
[107.94270325 1.61657131]
[102.81045532 17.77504921]
[103.66679382 32.75058746]
[104.52312469 47.72612381]
[105.37945557 62.70166016]
[106.23578644 77.67719269]
[109.50976562 74.28813934]
[113.36985779 71.31159210]
[124.42097473 61.16896439]
[135.47209167 51.02634048]
[146.52320862 40.88371658]
[157.57432556 30.74109459]
[158.00068665 14.94255829]
[169.53073120 4.13358784]
[185.32386780 4.72695494]
[196.01033020 16.37062454]
[195.25003052 32.15661621]
[183.49401855 42.71937561]
[167.71694946 41.79221344]
[156.66583252 51.93483353]
[145.61471558 62.07745743]
[134.56359863 72.22008514]
[123.51248169 82.36270905]
[129.15364075 96.26152802]
[144.14752197 95.83319092]
[159.14140320 95.40484619]
[174.80142212 88.90866852]
[185.37884521 102.15836334]
[175.57508850 115.99030304]
[159.56974792 110.39873505]
[144.57586670 110.82707214]
[129.58198547 111.25541687]
[107.05430603 129.00199890]
[81.29756927 120.89745331]
[76.25682831 135.02511597]
[71.21608734 149.15278625]
[73.86588287 164.75051880]
[62.30155563 174.13751221]
[57.26081467 188.26516724]
[52.22007370 202.39283752]
[47.17933273 216.52050781]
[42.34084320 230.71870422]
[37.70558929 244.98455811]
[33.07033157 259.25039673]
[28.43507767 273.51623535]
[31.52919960 289.03195190]
[20.23764801 298.74536133]
[15.60239220 313.01119995]
[15.91629314 322.29354858]
[10.62571907 327.61489868]
[5.58497810 341.74255371]
[0.54423714 355.87020874]
[-4.49650383 369.99789429]
[-9.53724480 384.12554932]
[-14.57798576 398.25320435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 102]
[20 101]
[22 99]
[23 98]
[24 97]
[25 96]
[27 95]
[28 94]
[29 93]
[30 92]
[32 90]
[33 89]
[34 88]
[35 46]
[36 45]
[37 44]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[78 86]
[79 85]
[80 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
