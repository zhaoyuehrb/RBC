%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACGCGCGGUUAGUAGUCGCUGCUGCGCGGCCGCCGGCGGGACUGGUCUGAAGAGACGCGGGGACCAAGUGGCAACGACUUGGACAUCUGAGCUGUCACUGCCGAAAACAGGCCGCAAGAGAGCAUCUGCCCAAGCAACAAAGAGGAGGUGUUUGCUUGGGAGUUAAAAGCAAAUGGCAACCAAAGCUCAGGACUGGGAGAGAAAAGAUAAUCAAU\
) } def
/len { sequence length } bind def

/coor [
[88.19653320 129.02427673]
[79.40320587 124.74671173]
[73.14530182 138.37898254]
[66.88739777 152.01124573]
[66.15236664 161.10995483]
[60.44070816 165.79318237]
[53.98789978 179.33427429]
[47.63237762 192.92129517]
[41.37447357 206.55357361]
[35.11656952 220.18583679]
[28.85866547 233.81809998]
[35.71505737 247.87242126]
[31.88327599 263.03326416]
[19.17256927 272.14215088]
[3.58454680 270.89816284]
[-7.52060556 259.88864136]
[-8.89937401 244.31195068]
[0.09925388 231.52294922]
[15.22640133 227.56019592]
[21.48430443 213.92793274]
[27.74220848 200.29566956]
[34.00011444 186.66339111]
[33.93394852 179.27751160]
[40.44680405 172.88146973]
[46.89961624 159.34036255]
[53.25513458 145.75334167]
[59.51303864 132.12107849]
[65.77094269 118.48880768]
[61.32025146 104.16430664]
[48.43879318 96.47873688]
[35.55733109 88.79316711]
[22.67587280 81.10759735]
[9.79441452 73.42202759]
[-3.08704519 65.73645020]
[-23.10555267 72.19137573]
[-41.11524200 61.90721512]
[-45.60025787 41.96036530]
[-58.90127563 35.02618790]
[-72.20230103 28.09200668]
[-85.50331879 21.15782547]
[-98.80433655 14.22364426]
[-112.10536194 7.28946352]
[-125.45577240 0.45086336]
[-138.85488892 -6.29180479]
[-152.25401306 -13.03447342]
[-162.93202209 -5.09754753]
[-177.80598450 -4.73671293]
[-191.51190186 -13.84683132]
[-206.50225830 -13.30900288]
[-221.49261475 -12.77117443]
[-236.48297119 -12.23334599]
[-250.08717346 -3.07597256]
[-264.69894409 -10.52097988]
[-265.28695679 -26.90958214]
[-251.24629211 -35.38259125]
[-237.02079773 -27.22370148]
[-222.03044128 -27.76152992]
[-207.04008484 -28.29935837]
[-192.04972839 -28.83718681]
[-187.49641418 -43.12939835]
[-199.41307068 -52.23946381]
[-214.87437439 -50.34592438]
[-226.82978821 -59.75458527]
[-228.53970337 -74.50625610]
[-240.45635986 -83.61632538]
[-252.37301636 -92.72639465]
[-264.48291016 -101.57794952]
[-276.78048706 -110.16690063]
[-289.07803345 -118.75585175]
[-301.37561035 -127.34480286]
[-313.67315674 -135.93376160]
[-325.97070312 -144.52270508]
[-341.02255249 -140.28291321]
[-355.25689697 -146.75727844]
[-361.95272827 -160.88879395]
[-357.94845581 -176.00500488]
[-345.13479614 -184.96850586]
[-329.56195068 -183.54698181]
[-318.58297729 -172.41165161]
[-317.38174438 -156.82026672]
[-305.08419800 -148.23130798]
[-292.78665161 -139.64236450]
[-280.48907471 -131.05340576]
[-268.19152832 -122.46446228]
[-255.89396667 -113.87550354]
[-252.38252258 -114.12572479]
[-248.57522583 -112.69127655]
[-245.26353455 -109.45151520]
[-243.26295471 -104.64304352]
[-231.34629822 -95.53298187]
[-219.42964172 -86.42291260]
[-204.74592590 -88.64194489]
[-192.53096008 -79.57279968]
[-190.30299377 -64.15612030]
[-178.38633728 -55.04605103]
[-151.74786377 -48.86024475]
[-145.51133728 -26.43359375]
[-132.11222839 -19.69092560]
[-118.71310425 -12.94825649]
[-111.32959747 -12.74955654]
[-105.17118073 -6.01155663]
[-91.87015533 0.92262423]
[-78.56913757 7.85680485]
[-65.26811981 14.79098511]
[-51.96709824 21.72516632]
[-38.66607666 28.65934753]
[-31.05087662 23.24893570]
[-21.93282127 20.96652031]
[-12.55193520 22.16590881]
[-4.19983816 26.72440720]
[1.95809340 34.05393219]
[5.04527473 43.17657852]
[4.59852600 52.85499573]
[17.47998619 60.54056549]
[30.36144447 68.22613525]
[43.24290466 75.91170502]
[56.12436295 83.59728241]
[69.00582123 91.28285217]
[78.71116638 77.24664307]
[93.78874969 70.52453613]
[109.61148071 72.54813385]
[121.64073181 82.15572357]
[126.72816467 96.09502411]
[141.58909607 98.13288879]
[154.09910583 88.85186768]
[169.14115906 91.13024902]
[177.91210938 103.11383057]
[192.77302551 105.15169525]
[207.63395691 107.18955994]
[222.49488831 109.22742462]
[227.57464600 97.09703827]
[241.64466858 89.06463623]
[254.94569397 82.13045502]
[268.24670410 75.19627380]
[281.54772949 68.26209259]
[294.84875488 61.32791138]
[308.14978027 54.39373016]
[321.45077515 47.45955276]
[334.75180054 40.52537155]
[348.05282593 33.59119034]
[361.30377197 26.56178474]
[374.50396729 19.43751907]
[375.57720947 4.04753399]
[384.81884766 -8.30542278]
[399.27990723 -13.67956543]
[414.34591675 -10.36002636]
[425.20935059 0.59394205]
[428.40371704 15.68696880]
[422.90975952 30.10292435]
[410.48052979 39.24172592]
[395.08215332 40.18722153]
[381.62823486 32.63770294]
[368.42803955 39.76196671]
[364.03735352 45.70146561]
[354.98699951 46.89220810]
[341.68600464 53.82638931]
[328.38497925 60.76057053]
[315.08395386 67.69475555]
[301.78292847 74.62892914]
[288.48190308 81.56311035]
[275.18087769 88.49729156]
[261.87988281 95.43147278]
[248.57884216 102.36565399]
[248.68643188 117.36527252]
[262.08557129 124.10794067]
[275.48468018 130.85060120]
[288.88378906 137.59327698]
[302.63400269 130.64793396]
[317.66165161 133.10220337]
[328.23748779 143.80805969]
[330.45483398 158.51252747]
[343.85394287 165.25520325]
[357.25305176 171.99786377]
[369.46676636 166.32826233]
[382.52548218 168.69181824]
[391.70391846 178.00566101]
[393.81210327 190.71377563]
[407.11312866 197.64794922]
[420.41415405 204.58212280]
[437.25436401 206.54272461]
[440.03222656 223.26754761]
[424.72998047 230.56674194]
[413.47998047 217.88314819]
[400.17895508 210.94897461]
[386.87792969 204.01478577]
[371.06268311 209.74252319]
[355.69699097 202.10681152]
[350.51040649 185.39698792]
[337.11126709 178.65432739]
[323.71215820 171.91165161]
[310.58212280 178.89306641]
[295.68258667 176.77928162]
[284.75695801 166.17341614]
[282.14114380 150.99240112]
[268.74200439 144.24972534]
[255.34289551 137.50706482]
[241.94377136 130.76438904]
[250.86578369 142.82247925]
[252.88763428 157.68559265]
[247.51075745 171.68878174]
[236.06100464 181.37915039]
[221.36164856 184.36724854]
[207.03723145 179.91625977]
[196.61988831 169.12373352]
[192.67829895 154.65086365]
[196.18438721 140.06637573]
[206.27363586 128.96650696]
[220.45701599 124.08834839]
[205.59608459 122.05048370]
[190.73516846 120.01261902]
[175.87423706 117.97475433]
[164.20114136 127.15486145]
[149.10101318 125.29987335]
[139.55122375 112.99381256]
[124.69029999 110.95594788]
[120.85569763 118.49632263]
[114.71221161 124.68904114]
[106.73519897 128.82797241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[6 25]
[7 24]
[8 22]
[9 21]
[10 20]
[11 19]
[29 118]
[30 117]
[31 116]
[32 115]
[33 114]
[34 113]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 99]
[44 98]
[45 97]
[48 59]
[49 58]
[50 57]
[51 56]
[60 95]
[61 94]
[64 91]
[65 90]
[66 89]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[123 215]
[124 214]
[127 211]
[128 210]
[129 209]
[130 208]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[141 153]
[142 152]
[164 197]
[165 196]
[166 195]
[167 194]
[171 190]
[172 189]
[173 188]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
