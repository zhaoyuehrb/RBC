%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IGF2BP2)
} def

/sequence { (\
GGGGGGCGGAGGAGGAGGAGAGACGAGGGCAGCGGAGGAGGCGAGGAGCGCCGGGUACCGGGCCGGGGGAGCCGCGGGCUCUCGGGGAAGAGACGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.004936281 ubox
1 80 0.008225017 ubox
1 81 0.007069173 ubox
1 82 0.003381493 ubox
1 83 0.023020638 ubox
2 58 0.004937116 ubox
2 79 0.014645179 ubox
2 80 0.008671712 ubox
2 81 0.004501508 ubox
2 82 0.022883925 ubox
2 83 0.060110084 ubox
3 79 0.009800548 ubox
3 80 0.004964166 ubox
3 81 0.022733824 ubox
3 82 0.060695627 ubox
3 83 0.003890988 ubox
4 79 0.005517362 ubox
4 80 0.022387681 ubox
4 81 0.060961563 ubox
5 52 0.006376919 ubox
5 64 0.006819791 ubox
5 73 0.006015629 ubox
5 79 0.022128981 ubox
5 80 0.061065384 ubox
6 30 0.017518481 ubox
6 33 0.006476531 ubox
6 51 0.006389823 ubox
6 63 0.006830762 ubox
6 72 0.006028655 ubox
6 75 0.034781704 ubox
6 79 0.061249247 ubox
7 25 0.087187273 ubox
7 29 0.017526761 ubox
7 32 0.006514763 ubox
7 50 0.006395449 ubox
7 60 0.003313713 ubox
7 62 0.006802882 ubox
7 65 0.004108606 ubox
7 71 0.006023497 ubox
7 74 0.034837117 ubox
7 76 0.006490459 ubox
7 78 0.061198116 ubox
7 84 0.010930280 ubox
7 95 0.163713919 ubox
8 24 0.089788622 ubox
8 49 0.006316825 ubox
8 59 0.003451217 ubox
8 64 0.003890959 ubox
8 73 0.034644171 ubox
8 75 0.007131929 ubox
8 83 0.007745394 ubox
8 94 0.165169219 ubox
9 58 0.003436828 ubox
9 63 0.003830798 ubox
9 72 0.034602017 ubox
9 81 0.005528717 ubox
10 80 0.005577555 ubox
11 59 0.003874530 ubox
11 73 0.022114941 ubox
11 79 0.005587051 ubox
12 58 0.003860176 ubox
12 72 0.022096236 ubox
14 73 0.012532112 ubox
15 72 0.012523074 ubox
15 83 0.003162759 ubox
17 64 0.003913946 ubox
17 73 0.012281842 ubox
18 63 0.003829527 ubox
18 72 0.012290815 ubox
18 83 0.043760103 ubox
19 82 0.043799382 ubox
20 81 0.043786867 ubox
20 83 0.005523366 ubox
21 80 0.043696183 ubox
21 82 0.005299777 ubox
22 79 0.043298222 ubox
22 81 0.004995030 ubox
23 56 0.005389291 ubox
23 80 0.004155219 ubox
24 34 0.011188244 ubox
24 50 0.009587251 ubox
24 55 0.005547539 ubox
24 65 0.015377972 ubox
24 76 0.038162962 ubox
24 84 0.968877015 ubox
24 95 0.046258365 ubox
25 33 0.011217457 ubox
25 49 0.009752106 ubox
25 64 0.006745479 ubox
25 75 0.037425058 ubox
25 83 0.977249758 ubox
25 94 0.045634957 ubox
26 82 0.977171319 ubox
27 52 0.003641963 ubox
27 59 0.004280816 ubox
27 64 0.015465400 ubox
27 73 0.006972290 ubox
27 81 0.977242622 ubox
28 51 0.003599482 ubox
28 52 0.006798014 ubox
28 58 0.004284589 ubox
28 59 0.003734016 ubox
28 63 0.013219183 ubox
28 64 0.204030896 ubox
28 72 0.005537511 ubox
28 73 0.017182442 ubox
28 79 0.005586573 ubox
28 80 0.976625486 ubox
29 49 0.005550431 ubox
29 51 0.006851032 ubox
29 58 0.003735556 ubox
29 63 0.204864327 ubox
29 72 0.017250746 ubox
29 75 0.004549136 ubox
29 79 0.977218377 ubox
30 48 0.005545510 ubox
30 50 0.006868979 ubox
30 62 0.205227725 ubox
30 71 0.017296438 ubox
30 74 0.004558620 ubox
30 78 0.976173934 ubox
32 42 0.048241404 ubox
32 49 0.017389184 ubox
32 51 0.005961234 ubox
32 56 0.022308980 ubox
32 63 0.006212962 ubox
32 72 0.004973335 ubox
32 75 0.921184443 ubox
33 41 0.048346750 ubox
33 43 0.017001190 ubox
33 48 0.017399474 ubox
33 50 0.007906876 ubox
33 53 0.004101259 ubox
33 55 0.022803165 ubox
33 60 0.371855947 ubox
33 62 0.007721656 ubox
33 65 0.011255521 ubox
33 71 0.005005792 ubox
33 74 0.921517060 ubox
33 76 0.027085145 ubox
33 95 0.008286973 ubox
34 42 0.017319949 ubox
34 49 0.007861174 ubox
34 52 0.003838141 ubox
34 59 0.375455818 ubox
34 64 0.011458831 ubox
34 73 0.919754823 ubox
34 75 0.026602419 ubox
34 94 0.008397186 ubox
35 51 0.003729734 ubox
35 58 0.374831897 ubox
35 63 0.011399453 ubox
35 72 0.918738444 ubox
37 52 0.046773209 ubox
37 59 0.013480824 ubox
37 64 0.008487404 ubox
37 73 0.012531906 ubox
38 51 0.047185394 ubox
38 58 0.013433262 ubox
38 63 0.008434155 ubox
38 72 0.012713922 ubox
40 52 0.458558490 ubox
40 64 0.719578141 ubox
40 73 0.020297437 ubox
41 49 0.263168306 ubox
41 51 0.460312403 ubox
41 56 0.010242953 ubox
41 63 0.719739937 ubox
41 72 0.022129362 ubox
42 48 0.263376042 ubox
42 50 0.461600199 ubox
42 55 0.010401512 ubox
42 62 0.719387932 ubox
42 65 0.433866707 ubox
42 71 0.023545684 ubox
42 84 0.011704958 ubox
43 49 0.458898025 ubox
43 64 0.432899366 ubox
43 83 0.012181259 ubox
44 82 0.011579647 ubox
45 52 0.014619084 ubox
45 59 0.704537943 ubox
45 64 0.055728148 ubox
45 73 0.004626661 ubox
45 81 0.008616960 ubox
45 82 0.005258099 ubox
46 51 0.014678949 ubox
46 58 0.702965676 ubox
46 63 0.041878676 ubox
46 72 0.004767205 ubox
46 80 0.003734357 ubox
46 81 0.009618648 ubox
47 80 0.012386440 ubox
48 56 0.690792825 ubox
48 63 0.436923413 ubox
48 79 0.012980541 ubox
49 55 0.702008038 ubox
49 60 0.004670929 ubox
49 62 0.438708000 ubox
49 65 0.009690943 ubox
49 71 0.004171701 ubox
49 78 0.012972949 ubox
50 56 0.040560885 ubox
50 59 0.004623874 ubox
50 63 0.057444453 ubox
50 64 0.009473757 ubox
51 55 0.040579845 ubox
51 61 0.470652154 ubox
51 62 0.051859630 ubox
51 66 0.195087895 ubox
51 67 0.154160687 ubox
51 68 0.021803237 ubox
51 69 0.007812977 ubox
51 77 0.017461602 ubox
52 60 0.471988427 ubox
52 61 0.044648677 ubox
52 65 0.197800562 ubox
52 66 0.155950969 ubox
52 67 0.020838370 ubox
52 68 0.007730044 ubox
52 76 0.017572214 ubox
53 59 0.473678036 ubox
53 64 0.213036618 ubox
53 73 0.017336977 ubox
53 75 0.017985378 ubox
54 58 0.466039706 ubox
54 63 0.212338028 ubox
54 64 0.220762793 ubox
54 72 0.017947178 ubox
54 73 0.049771031 ubox
55 63 0.221579920 ubox
55 72 0.051411330 ubox
56 62 0.219644328 ubox
56 71 0.051413608 ubox
58 66 0.117299150 ubox
58 67 0.111309954 ubox
58 68 0.072287395 ubox
58 69 0.080428601 ubox
58 77 0.044772722 ubox
58 96 0.008195999 ubox
59 65 0.117655511 ubox
59 66 0.111504532 ubox
59 67 0.072242823 ubox
59 68 0.080703826 ubox
59 76 0.044862807 ubox
59 95 0.008295282 ubox
60 64 0.110216505 ubox
60 73 0.004405513 ubox
60 75 0.044686567 ubox
60 80 0.006470270 ubox
60 94 0.008278763 ubox
61 72 0.004406420 ubox
61 73 0.047987281 ubox
61 79 0.022195296 ubox
61 80 0.005653282 ubox
62 72 0.048221462 ubox
62 75 0.018495711 ubox
62 79 0.007219919 ubox
63 69 0.045353398 ubox
63 71 0.048186591 ubox
63 74 0.013477923 ubox
63 77 0.320414399 ubox
63 78 0.006088387 ubox
63 85 0.006747492 ubox
63 86 0.014425287 ubox
63 87 0.015200153 ubox
64 68 0.045589618 ubox
64 74 0.020934122 ubox
64 76 0.322258654 ubox
64 77 0.004788287 ubox
64 84 0.006969451 ubox
64 85 0.014894904 ubox
64 86 0.015689172 ubox
65 73 0.043070844 ubox
65 75 0.323652175 ubox
65 83 0.007878284 ubox
66 72 0.043373933 ubox
66 73 0.163713077 ubox
66 82 0.005012713 ubox
66 83 0.017499259 ubox
67 72 0.163884378 ubox
67 73 0.282644602 ubox
67 81 0.003571802 ubox
67 82 0.014621924 ubox
67 83 0.188731925 ubox
68 72 0.278121168 ubox
68 81 0.010935398 ubox
68 82 0.190868615 ubox
68 83 0.006792222 ubox
69 80 0.004759084 ubox
69 81 0.191999644 ubox
70 80 0.192449355 ubox
71 79 0.192650149 ubox
72 78 0.192653466 ubox
72 87 0.003447962 ubox
73 77 0.191252267 ubox
73 86 0.003457134 ubox
75 84 0.003489941 ubox
75 95 0.006620889 ubox
76 83 0.003481596 ubox
76 94 0.007980710 ubox
79 92 0.009917056 ubox
80 91 0.009987028 ubox
80 93 0.029702518 ubox
81 90 0.010002514 ubox
81 92 0.035123533 ubox
82 89 0.009261349 ubox
82 91 0.036042019 ubox
82 93 0.005940144 ubox
82 96 0.005753973 ubox
83 87 0.003842462 ubox
83 90 0.036735423 ubox
83 92 0.008860459 ubox
83 95 0.021642741 ubox
84 94 0.038888963 ubox
24 84 0.9500000 lbox
25 83 0.9500000 lbox
26 82 0.9500000 lbox
27 81 0.9500000 lbox
28 80 0.9500000 lbox
29 79 0.9500000 lbox
30 78 0.9500000 lbox
32 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
42 62 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
showpage
end
%%EOF
