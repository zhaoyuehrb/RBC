%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANO2)
} def

/sequence { (\
CCAGGCUCCUUCUCUAUAAAGUGGGAUCUAUCAUGACCAGCCUACCUUAUCAAUAUAGGAGAGAAAAUCUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.010957078 ubox
2 35 0.014084482 ubox
2 58 0.011113472 ubox
3 10 0.020852795 ubox
3 11 0.005593998 ubox
3 13 0.009235904 ubox
3 15 0.008390001 ubox
3 29 0.043288013 ubox
3 34 0.013761286 ubox
3 43 0.268511335 ubox
3 47 0.006594467 ubox
3 70 0.148090842 ubox
3 71 0.093489160 ubox
4 9 0.025588268 ubox
4 10 0.009750390 ubox
4 12 0.009905948 ubox
4 13 0.004081963 ubox
4 14 0.008801747 ubox
4 15 0.004510863 ubox
4 28 0.045887071 ubox
4 29 0.040481598 ubox
4 32 0.005427507 ubox
4 38 0.007213326 ubox
4 42 0.282111663 ubox
4 46 0.006930748 ubox
4 69 0.158321619 ubox
4 70 0.111770571 ubox
4 71 0.013006924 ubox
4 72 0.022236261 ubox
5 9 0.010891659 ubox
5 11 0.008257616 ubox
5 12 0.005170250 ubox
5 13 0.007085477 ubox
5 14 0.004665484 ubox
5 27 0.045324576 ubox
5 28 0.042169796 ubox
5 31 0.004642556 ubox
5 37 0.007194495 ubox
5 41 0.282212425 ubox
5 45 0.006852621 ubox
5 68 0.151355712 ubox
5 69 0.113668028 ubox
5 70 0.013445711 ubox
5 71 0.020915091 ubox
6 25 0.006970256 ubox
6 40 0.282055245 ubox
6 61 0.908378272 ubox
6 63 0.077129190 ubox
7 24 0.006991660 ubox
7 25 0.011239671 ubox
7 26 0.181939269 ubox
7 36 0.015790500 ubox
7 39 0.215974037 ubox
7 60 0.917910635 ubox
7 62 0.076501399 ubox
7 64 0.087378656 ubox
8 23 0.022839024 ubox
8 24 0.023510406 ubox
8 25 0.237876337 ubox
8 35 0.019863627 ubox
8 59 0.919500461 ubox
8 61 0.061258577 ubox
8 63 0.089698166 ubox
9 21 0.032547024 ubox
9 23 0.025504318 ubox
9 24 0.238074291 ubox
9 25 0.007251764 ubox
9 58 0.919474434 ubox
9 59 0.029036314 ubox
9 61 0.094477133 ubox
9 63 0.059310346 ubox
10 19 0.005264361 ubox
10 20 0.032462076 ubox
10 21 0.005893931 ubox
10 23 0.230854342 ubox
10 24 0.006664810 ubox
10 25 0.007571699 ubox
10 26 0.013260107 ubox
10 36 0.033524155 ubox
10 53 0.005243778 ubox
10 57 0.906258090 ubox
10 58 0.028595398 ubox
10 60 0.104086910 ubox
10 61 0.029696174 ubox
10 62 0.048562232 ubox
10 63 0.117891529 ubox
10 64 0.009277087 ubox
10 65 0.153751871 ubox
10 66 0.009483691 ubox
10 67 0.003467044 ubox
11 18 0.005684689 ubox
11 19 0.030693758 ubox
11 20 0.007163177 ubox
11 23 0.007424211 ubox
11 24 0.010039517 ubox
11 25 0.013171076 ubox
11 26 0.135807605 ubox
11 35 0.022378003 ubox
11 36 0.029819874 ubox
11 52 0.009619558 ubox
11 57 0.030613951 ubox
11 59 0.103339347 ubox
11 60 0.043410767 ubox
11 61 0.032183666 ubox
11 62 0.146611896 ubox
11 63 0.004965050 ubox
11 64 0.169604707 ubox
11 65 0.007288254 ubox
12 21 0.231939585 ubox
12 23 0.032984076 ubox
12 24 0.013658213 ubox
12 25 0.141418213 ubox
12 35 0.030791752 ubox
12 58 0.103027253 ubox
12 59 0.045553729 ubox
12 61 0.153053982 ubox
12 63 0.171249394 ubox
13 20 0.220988090 ubox
13 23 0.011831842 ubox
13 24 0.138695292 ubox
13 25 0.021015253 ubox
13 26 0.012869975 ubox
13 36 0.013881990 ubox
13 57 0.100169421 ubox
13 58 0.007659502 ubox
13 59 0.037872224 ubox
13 60 0.152185743 ubox
13 62 0.171190198 ubox
14 21 0.054286373 ubox
14 23 0.140005369 ubox
14 24 0.037140146 ubox
14 25 0.013166388 ubox
14 35 0.014149856 ubox
14 58 0.071381845 ubox
14 59 0.147957691 ubox
14 61 0.171095625 ubox
15 20 0.052063605 ubox
15 23 0.038220635 ubox
15 24 0.012927617 ubox
15 49 0.012596334 ubox
15 55 0.083633511 ubox
15 57 0.080698446 ubox
15 58 0.142138607 ubox
15 60 0.167512262 ubox
16 22 0.041183308 ubox
16 31 0.010496929 ubox
16 34 0.006290755 ubox
16 48 0.012808622 ubox
16 50 0.863419362 ubox
16 54 0.075071099 ubox
16 56 0.084717806 ubox
17 21 0.038276383 ubox
17 30 0.010815724 ubox
17 33 0.006216839 ubox
17 44 0.008977235 ubox
17 49 0.913748598 ubox
17 53 0.055138947 ubox
17 55 0.082134364 ubox
17 57 0.010885549 ubox
18 29 0.009482471 ubox
18 43 0.009362655 ubox
18 48 0.917800791 ubox
18 54 0.079088504 ubox
18 56 0.010520733 ubox
19 47 0.881123032 ubox
19 48 0.153438571 ubox
20 29 0.012938432 ubox
20 43 0.021835808 ubox
20 47 0.168055928 ubox
20 48 0.009056050 ubox
21 28 0.013884161 ubox
21 31 0.009145408 ubox
21 34 0.036903404 ubox
21 41 0.050162721 ubox
21 42 0.019804853 ubox
21 45 0.943289492 ubox
21 46 0.123982419 ubox
21 50 0.008798756 ubox
22 30 0.009450413 ubox
22 33 0.037519791 ubox
22 39 0.037826894 ubox
22 40 0.048313678 ubox
22 44 0.952428000 ubox
22 49 0.009080504 ubox
22 52 0.004273678 ubox
23 29 0.009502054 ubox
23 32 0.037658424 ubox
23 38 0.045076276 ubox
23 42 0.061931870 ubox
23 43 0.950843613 ubox
23 46 0.005839063 ubox
23 47 0.008436226 ubox
23 48 0.008524800 ubox
23 51 0.004300730 ubox
24 28 0.009317716 ubox
24 31 0.034847725 ubox
24 37 0.044673409 ubox
24 38 0.102593544 ubox
24 41 0.061454231 ubox
24 42 0.950148641 ubox
24 43 0.003262144 ubox
24 45 0.005804700 ubox
24 46 0.009021183 ubox
24 47 0.007713801 ubox
25 32 0.014098650 ubox
25 37 0.107263149 ubox
25 41 0.947750888 ubox
25 42 0.004191096 ubox
25 45 0.008996218 ubox
25 46 0.007693826 ubox
26 31 0.015270427 ubox
26 34 0.029460546 ubox
27 33 0.028687724 ubox
27 36 0.694948101 ubox
27 59 0.015863103 ubox
28 35 0.758174770 ubox
28 40 0.221658580 ubox
28 58 0.034320809 ubox
29 35 0.076750687 ubox
29 39 0.216321854 ubox
29 55 0.004557796 ubox
29 57 0.035996556 ubox
30 34 0.072327185 ubox
30 54 0.005555946 ubox
30 56 0.036862408 ubox
31 53 0.005232499 ubox
31 55 0.036260977 ubox
33 50 0.004287090 ubox
33 54 0.007347277 ubox
34 49 0.004619950 ubox
34 52 0.043929933 ubox
34 53 0.005631528 ubox
35 48 0.004676758 ubox
35 51 0.046131446 ubox
35 69 0.008157356 ubox
36 47 0.004330368 ubox
36 50 0.045432150 ubox
36 68 0.007989462 ubox
39 47 0.042820622 ubox
39 48 0.005407654 ubox
40 46 0.043076520 ubox
40 47 0.004845850 ubox
41 59 0.042038730 ubox
42 58 0.042544749 ubox
42 61 0.022425460 ubox
42 63 0.024455303 ubox
43 49 0.003388393 ubox
43 57 0.042430032 ubox
43 60 0.023187530 ubox
43 62 0.024782187 ubox
44 48 0.003957711 ubox
44 56 0.040677755 ubox
45 59 0.118207793 ubox
46 58 0.120232565 ubox
46 59 0.152538157 ubox
46 61 0.011383025 ubox
46 63 0.037831070 ubox
47 53 0.022478150 ubox
47 57 0.113346176 ubox
47 58 0.153566303 ubox
47 60 0.011353906 ubox
47 62 0.037880023 ubox
48 52 0.019420638 ubox
48 55 0.035733049 ubox
48 57 0.160361188 ubox
48 59 0.010586257 ubox
48 61 0.036845872 ubox
49 54 0.033708732 ubox
49 56 0.162090381 ubox
50 55 0.144014918 ubox
50 59 0.033256057 ubox
50 60 0.017243223 ubox
50 62 0.004472994 ubox
50 64 0.003175568 ubox
51 58 0.041436105 ubox
51 59 0.020144163 ubox
51 61 0.004740563 ubox
51 63 0.003347787 ubox
57 70 0.004113660 ubox
57 71 0.024997556 ubox
58 69 0.004383274 ubox
58 70 0.030890913 ubox
58 71 0.003598209 ubox
58 72 0.225648995 ubox
59 68 0.003833452 ubox
59 69 0.031751661 ubox
59 71 0.237863362 ubox
59 72 0.013934305 ubox
60 68 0.031544789 ubox
60 70 0.255921553 ubox
60 71 0.013034219 ubox
61 69 0.260050983 ubox
61 70 0.007938150 ubox
61 71 0.135695312 ubox
61 72 0.038247881 ubox
62 68 0.258596687 ubox
62 70 0.369289106 ubox
62 71 0.050392000 ubox
63 69 0.388722594 ubox
63 70 0.043206099 ubox
63 71 0.040840581 ubox
63 72 0.251274051 ubox
64 68 0.338298750 ubox
64 70 0.042007735 ubox
64 71 0.251039712 ubox
65 70 0.218968283 ubox
65 71 0.022663415 ubox
66 70 0.019769932 ubox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
showpage
end
%%EOF
