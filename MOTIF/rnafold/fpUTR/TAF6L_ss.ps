%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAAGAGCCAGGAAGCCUCCUGGAGGGCCGGAAACUUUCCAAGGCGCCCGCCGACUGGCUGUAUUGGGGAGGGCGGGGCCGGGGCCCCGGGAGAGGGAAUGAGUGUGAGCUCGUGAGUGGGCGCCGCCGCCACCGCCCCCGCCGCCGUCGUCUCGGUAGCAGCCUUCGCCACGCCGGGGUCUUCAGCUCCACUGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[-99.21778870 825.33105469]
[-101.42595673 840.16766357]
[-103.63412476 855.00421143]
[-105.84254456 869.84075928]
[-120.67904663 867.63208008]
[-118.47070312 852.79602051]
[-116.26253510 837.95947266]
[-114.05436707 823.12286377]
[-111.84619904 808.28631592]
[-109.63803101 793.44976807]
[-117.05632019 792.34564209]
[-124.82406616 805.17773438]
[-132.59181213 818.00982666]
[-140.35955811 830.84185791]
[-148.12730408 843.67395020]
[-147.92617798 860.07189941]
[-162.16287231 868.21118164]
[-176.19187927 859.71893311]
[-175.58135986 843.33111572]
[-160.95936584 835.90618896]
[-153.19163513 823.07415771]
[-145.42388916 810.24206543]
[-137.65614319 797.40997314]
[-129.88839722 784.57788086]
[-124.85564423 770.44738770]
[-122.76291656 755.59411621]
[-120.67018127 740.74078369]
[-118.57745361 725.88751221]
[-116.48472595 711.03417969]
[-114.39199829 696.18090820]
[-112.29926300 681.32757568]
[-124.28191376 672.30450439]
[-137.97875977 678.41979980]
[-151.67561340 684.53503418]
[-165.37246704 690.65026855]
[-177.37054443 702.62866211]
[-192.20223999 694.41546631]
[-188.41578674 677.88970947]
[-171.48771667 676.95343018]
[-157.79086304 670.83819580]
[-144.09402466 664.72290039]
[-130.39717102 658.60766602]
[-126.74906158 641.08831787]
[-114.71887970 629.61657715]
[-99.55344391 627.22674561]
[-94.96258545 612.94659424]
[-90.37172699 598.66638184]
[-85.78086853 584.38616943]
[-93.21381378 573.85577393]
[-93.22233582 560.77166748]
[-85.57915497 549.91320801]
[-72.89282990 545.37573242]
[-68.08044434 531.16864014]
[-68.91260529 523.81951904]
[-63.08116913 516.77905273]
[-58.04841995 502.64855957]
[-62.95197296 491.58547974]
[-58.86914062 479.76895142]
[-47.47424316 473.71575928]
[-42.22234726 459.66522217]
[-36.97045135 445.61468506]
[-31.71855354 431.56414795]
[-26.46665764 417.51361084]
[-21.21475983 403.46307373]
[-30.79520798 392.05776978]
[-33.39781189 377.29016113]
[-28.22498322 363.10891724]
[-16.57188416 353.35687256]
[-1.50382924 350.72988892]
[3.74806762 336.67935181]
[8.99996471 322.62881470]
[14.25186062 308.57827759]
[11.46046734 293.94760132]
[23.53982162 283.72998047]
[28.79171753 269.67944336]
[34.04361343 255.62889099]
[39.29550934 241.57835388]
[44.54740906 227.52781677]
[49.68988800 213.43687439]
[54.72263718 199.30635071]
[59.75538635 185.17584229]
[56.73679733 170.59031677]
[68.65578461 160.18608093]
[73.68853760 146.05557251]
[78.72129059 131.92504883]
[83.75403595 117.79454041]
[88.78678894 103.66402435]
[89.60289001 88.68624115]
[86.13524628 74.09255981]
[82.66760254 59.49888611]
[69.08176422 51.42419052]
[65.26583099 36.08749771]
[73.48371124 22.58779335]
[88.85989380 18.93421745]
[102.27194977 27.29436684]
[105.76276398 42.70831680]
[97.26127625 56.03123856]
[100.72891998 70.62491608]
[104.19656372 85.21859741]
[111.69656372 85.21859741]
[119.19629669 72.22805786]
[126.69656372 85.21859741]
[134.19656372 85.21859741]
[137.66421509 70.62491608]
[141.13185120 56.03123856]
[144.59950256 41.43756104]
[139.38932800 25.88808632]
[150.45175171 13.78208923]
[166.40666199 17.57318497]
[170.84104919 33.36141586]
[159.19317627 44.90520859]
[155.72554016 59.49888611]
[152.25788879 74.09255981]
[148.79023743 88.68624115]
[162.02592468 95.74433136]
[172.21221924 84.73345184]
[182.39851379 73.72257233]
[185.93258667 65.29145813]
[192.82986450 62.62123108]
[203.18617249 51.77009964]
[213.54246521 40.91897202]
[223.89877319 30.06783867]
[223.27958679 14.27568436]
[234.06970215 2.72799850]
[249.86752319 2.27581954]
[261.30047607 13.18741703]
[261.58560181 28.98913383]
[250.55375671 40.30609131]
[234.74990845 40.42414093]
[224.39360046 51.27527237]
[214.03730774 62.12639999]
[203.68099976 72.97753143]
[193.40939331 83.90886688]
[183.22309875 94.91974640]
[173.03680420 105.93062592]
[132.46401978 125.40860748]
[102.91730499 108.69677734]
[97.88455200 122.82728577]
[92.85179901 136.95780945]
[87.81905365 151.08831787]
[82.78630066 165.21882629]
[85.44491577 180.81506348]
[73.88590240 190.20858765]
[68.85314941 204.33911133]
[63.82040024 218.46961975]
[63.88842010 227.61122131]
[58.59794617 232.77972412]
[53.34604645 246.83026123]
[48.09415054 260.88079834]
[42.84225464 274.93133545]
[37.59035873 288.98187256]
[40.00609970 304.61755371]
[28.30239677 313.83020020]
[23.05050087 327.88073730]
[17.79860497 341.93127441]
[12.54670715 355.98178101]
[22.19731331 367.84826660]
[24.59670448 382.85290527]
[19.19937706 396.95025635]
[7.54837275 406.39007568]
[-7.16422367 408.71496582]
[-12.41612053 422.76550293]
[-17.66801643 436.81604004]
[-22.91991425 450.86657715]
[-28.17181015 464.91711426]
[-33.42370605 478.96765137]
[-29.95985222 497.04968262]
[-43.91790390 507.68130493]
[-48.95065689 521.81182861]
[-53.87337112 535.98107910]
[-58.68576050 550.18811035]
[-50.65232849 565.72393799]
[-56.22721100 581.94494629]
[-71.50067139 588.97705078]
[-76.09152985 603.25720215]
[-80.68238831 617.53741455]
[-85.27324677 631.81762695]
[-72.87110901 648.43066406]
[-76.98052979 670.51440430]
[-97.44596863 683.42034912]
[-99.53869629 698.27362061]
[-101.63142395 713.12695312]
[-103.72415924 727.98022461]
[-105.81688690 742.83355713]
[-107.90961456 757.68682861]
[-110.00234985 772.54010010]
[-90.18988800 773.44311523]
[-72.84518433 793.06781006]
[-69.15100098 807.60577393]
[-65.45681763 822.14379883]
[-61.76263046 836.68176270]
[-58.06844711 851.21972656]
[-48.30749893 865.08190918]
[-58.92584229 878.29882812]
[-74.56569672 871.75427246]
[-72.60643005 854.91394043]
[-76.30061340 840.37597656]
[-79.99480438 825.83795166]
[-83.68898773 811.29998779]
[-87.38317108 796.76196289]
[-94.80145264 795.65789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 42]
[33 41]
[34 40]
[35 39]
[45 177]
[46 176]
[47 175]
[48 174]
[52 171]
[53 170]
[55 169]
[56 168]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[69 156]
[70 155]
[71 154]
[72 153]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 99]
[89 98]
[90 97]
[103 114]
[104 113]
[105 112]
[106 111]
[115 135]
[116 134]
[117 133]
[119 132]
[120 131]
[121 130]
[122 129]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
