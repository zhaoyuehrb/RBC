%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUP210)
} def

/sequence { (\
UGCUGGCCUGGCGCGCGCGCGGGCGGGAGCGGAGGGCAACGGGGCGGCGCGGGCGGCCGGGCGCAGGGUCGCGGGAGGUGACGCGCGGCGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004166456 ubox
1 65 0.168135953 ubox
1 85 0.008811097 ubox
1 87 0.013053600 ubox
1 90 0.151826212 ubox
2 62 0.006631366 ubox
2 64 0.186624110 ubox
2 84 0.012975005 ubox
2 86 0.017071586 ubox
2 89 0.199058384 ubox
3 60 0.049333739 ubox
3 61 0.005470982 ubox
3 63 0.185675326 ubox
3 66 0.907882043 ubox
3 67 0.053261705 ubox
3 83 0.011841285 ubox
3 85 0.015750636 ubox
3 88 0.198943490 ubox
3 92 0.288293796 ubox
3 93 0.009442381 ubox
4 59 0.049777075 ubox
4 60 0.003847032 ubox
4 63 0.008755097 ubox
4 65 0.912217912 ubox
4 66 0.032184358 ubox
4 87 0.197525873 ubox
4 91 0.288478377 ubox
4 92 0.008000648 ubox
5 58 0.050790394 ubox
5 62 0.027510451 ubox
5 64 0.911918342 ubox
5 84 0.004011695 ubox
5 86 0.188554234 ubox
6 37 0.003259514 ubox
6 57 0.050796752 ubox
6 62 0.953833707 ubox
6 84 0.005099257 ubox
6 89 0.289970467 ubox
7 36 0.003278115 ubox
7 56 0.050760269 ubox
7 60 0.005370068 ubox
7 61 0.955546851 ubox
7 83 0.004314644 ubox
7 88 0.289808586 ubox
7 93 0.007533482 ubox
8 35 0.003277895 ubox
8 55 0.050448947 ubox
8 59 0.005387454 ubox
8 60 0.956005341 ubox
8 87 0.286893842 ubox
8 88 0.010062103 ubox
8 92 0.007678498 ubox
9 34 0.003255283 ubox
9 59 0.956335040 ubox
9 87 0.013332020 ubox
9 91 0.007412718 ubox
10 54 0.008679325 ubox
10 58 0.957587723 ubox
10 86 0.040994163 ubox
10 89 0.003857038 ubox
11 54 0.046448243 ubox
11 57 0.957372924 ubox
11 84 0.030096130 ubox
11 86 0.277514714 ubox
11 89 0.006596933 ubox
12 31 0.003332980 ubox
12 51 0.018712499 ubox
12 53 0.047222190 ubox
12 55 0.552236110 ubox
12 56 0.781869300 ubox
12 83 0.030082552 ubox
12 85 0.281673801 ubox
12 87 0.005960595 ubox
12 88 0.004840018 ubox
13 30 0.003338176 ubox
13 50 0.019377279 ubox
13 54 0.780856300 ubox
13 82 0.008078420 ubox
13 84 0.281687780 ubox
13 86 0.007705506 ubox
14 29 0.003329653 ubox
14 49 0.019379631 ubox
14 51 0.047700300 ubox
14 53 0.782037605 ubox
14 55 0.550106013 ubox
14 83 0.281397675 ubox
14 85 0.007710201 ubox
15 48 0.019384257 ubox
15 50 0.048955912 ubox
15 54 0.552198629 ubox
15 64 0.283032794 ubox
15 82 0.003922013 ubox
15 84 0.005719779 ubox
16 25 0.003417097 ubox
16 47 0.019333157 ubox
16 49 0.048967228 ubox
16 51 0.781975981 ubox
16 53 0.552076454 ubox
16 55 0.014564527 ubox
16 63 0.283349992 ubox
16 83 0.005588673 ubox
17 24 0.003501469 ubox
17 48 0.048921087 ubox
17 50 0.782407513 ubox
17 54 0.014750808 ubox
17 62 0.283409924 ubox
18 23 0.003500688 ubox
18 46 0.034182668 ubox
18 47 0.040047014 ubox
18 49 0.782406104 ubox
18 51 0.551630326 ubox
18 53 0.014775969 ubox
18 61 0.283384633 ubox
19 45 0.044582967 ubox
19 48 0.782264470 ubox
19 50 0.551749980 ubox
20 44 0.044662768 ubox
20 46 0.166393361 ubox
20 47 0.764579409 ubox
20 49 0.551729023 ubox
20 51 0.015161827 ubox
20 59 0.283347757 ubox
21 30 0.005165069 ubox
21 40 0.004413108 ubox
21 45 0.232227380 ubox
21 48 0.549019940 ubox
21 50 0.015290364 ubox
21 58 0.283398357 ubox
22 57 0.283353345 ubox
22 58 0.003258751 ubox
23 30 0.098381889 ubox
23 37 0.015068660 ubox
23 45 0.744375677 ubox
23 48 0.038767696 ubox
23 54 0.003884820 ubox
23 57 0.004352499 ubox
24 29 0.098505240 ubox
24 31 0.035148820 ubox
24 36 0.015071013 ubox
24 41 0.458990154 ubox
24 44 0.743088146 ubox
24 46 0.363138930 ubox
24 47 0.040571074 ubox
24 53 0.003901057 ubox
24 55 0.283279382 ubox
24 56 0.004509365 ubox
25 30 0.035908671 ubox
25 40 0.471603656 ubox
25 45 0.363851694 ubox
25 54 0.282999492 ubox
29 37 0.689689380 ubox
29 45 0.011322242 ubox
29 50 0.282991093 ubox
30 36 0.690520414 ubox
30 41 0.649165101 ubox
30 44 0.011393052 ubox
30 49 0.283053892 ubox
30 51 0.014045165 ubox
31 40 0.649865245 ubox
31 45 0.004141858 ubox
31 48 0.282710047 ubox
31 50 0.014039833 ubox
36 45 0.299505774 ubox
36 48 0.004441500 ubox
37 44 0.299291339 ubox
37 47 0.004655359 ubox
40 46 0.021284012 ubox
41 45 0.020130460 ubox
56 89 0.003589555 ubox
57 88 0.003648788 ubox
58 87 0.003649120 ubox
59 86 0.003683208 ubox
61 84 0.003727131 ubox
61 86 0.078659838 ubox
61 89 0.009574707 ubox
62 83 0.003733609 ubox
62 85 0.083708401 ubox
62 87 0.012822516 ubox
62 88 0.007307886 ubox
62 90 0.010976348 ubox
63 69 0.011276299 ubox
63 84 0.156585173 ubox
63 86 0.057014009 ubox
63 89 0.027158622 ubox
64 68 0.011744726 ubox
64 83 0.156584311 ubox
64 85 0.059448920 ubox
64 88 0.027163512 ubox
68 82 0.374043397 ubox
68 84 0.003336816 ubox
68 86 0.078063983 ubox
68 89 0.919505452 ubox
69 81 0.374984204 ubox
69 85 0.016405968 ubox
69 88 0.919758776 ubox
69 91 0.014901259 ubox
70 80 0.375196366 ubox
70 85 0.115676569 ubox
70 87 0.918946642 ubox
70 90 0.015886947 ubox
71 79 0.375044443 ubox
71 84 0.125362370 ubox
71 86 0.918239375 ubox
71 89 0.015803709 ubox
72 78 0.375146559 ubox
72 83 0.126595890 ubox
72 85 0.918067797 ubox
72 87 0.003696721 ubox
72 88 0.015341097 ubox
73 82 0.132385676 ubox
73 84 0.915035903 ubox
73 86 0.005185352 ubox
78 84 0.014321171 ubox
78 86 0.004358440 ubox
79 83 0.014891834 ubox
79 85 0.004388267 ubox
80 84 0.004380666 ubox
82 90 0.019044414 ubox
83 89 0.071359900 ubox
84 88 0.070910648 ubox
84 90 0.027566628 ubox
85 89 0.026159957 ubox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
68 89 0.9500000 lbox
69 88 0.9500000 lbox
70 87 0.9500000 lbox
71 86 0.9500000 lbox
72 85 0.9500000 lbox
73 84 0.9500000 lbox
showpage
end
%%EOF
