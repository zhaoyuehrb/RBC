%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MMP11)
} def

/sequence { (\
AUAAGGGGCGGCGGCCCGGAGCGGCCCAGCAAGCCCAGCAGCCCCGGGGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
5 17 0.011646754 ubox
5 27 0.038060749 ubox
5 35 0.004212134 ubox
5 36 0.126330094 ubox
5 44 0.004155249 ubox
5 45 0.343285442 ubox
6 16 0.009973279 ubox
6 17 0.154915283 ubox
6 26 0.034103516 ubox
6 27 0.341167983 ubox
6 34 0.004165728 ubox
6 35 0.121009824 ubox
6 36 0.737880053 ubox
6 43 0.004035419 ubox
6 44 0.343748288 ubox
6 45 0.003409072 ubox
7 15 0.007932043 ubox
7 16 0.155183028 ubox
7 25 0.029571716 ubox
7 26 0.342010420 ubox
7 34 0.115268722 ubox
7 35 0.739703630 ubox
7 36 0.003493657 ubox
7 42 0.003858332 ubox
7 43 0.343756827 ubox
7 45 0.010918415 ubox
8 15 0.155313966 ubox
8 25 0.342436198 ubox
8 30 0.036521068 ubox
8 34 0.740621179 ubox
8 39 0.006180135 ubox
8 42 0.343737700 ubox
8 44 0.010939362 ubox
8 50 0.006721330 ubox
9 14 0.155389694 ubox
9 23 0.024128329 ubox
9 24 0.342714212 ubox
9 29 0.036510573 ubox
9 33 0.741243585 ubox
9 38 0.006845835 ubox
9 41 0.343089108 ubox
9 49 0.006719878 ubox
9 51 0.008746293 ubox
10 17 0.006134542 ubox
10 22 0.018352838 ubox
10 26 0.133297358 ubox
10 27 0.017373942 ubox
10 35 0.229492918 ubox
10 36 0.022792608 ubox
10 43 0.011245505 ubox
10 50 0.005737357 ubox
11 16 0.006069408 ubox
11 22 0.343063525 ubox
11 25 0.133819938 ubox
11 26 0.012327839 ubox
11 30 0.742660251 ubox
11 34 0.230024678 ubox
11 35 0.017223490 ubox
11 39 0.215226768 ubox
11 42 0.011423176 ubox
11 50 0.018357668 ubox
12 18 0.005379173 ubox
12 21 0.343537709 ubox
12 23 0.005748461 ubox
12 24 0.134033259 ubox
12 29 0.740617276 ubox
12 33 0.230367169 ubox
12 38 0.215576595 ubox
12 41 0.011423596 ubox
12 49 0.018929485 ubox
12 51 0.414969297 ubox
13 17 0.007112182 ubox
13 22 0.006985322 ubox
13 26 0.731153117 ubox
13 27 0.302150742 ubox
13 35 0.137360585 ubox
13 36 0.042474689 ubox
13 50 0.419822362 ubox
14 22 0.134970820 ubox
14 25 0.741044620 ubox
14 26 0.286688685 ubox
14 30 0.083057456 ubox
14 34 0.139425279 ubox
14 35 0.036822008 ubox
14 39 0.017368986 ubox
14 50 0.016421429 ubox
15 21 0.134841034 ubox
15 24 0.740515623 ubox
15 29 0.083126278 ubox
15 33 0.140619549 ubox
15 38 0.017488262 ubox
15 48 0.420506182 ubox
15 49 0.014808409 ubox
16 23 0.732214082 ubox
16 24 0.297532445 ubox
16 47 0.420650011 ubox
16 48 0.012216034 ubox
17 23 0.314870995 ubox
17 46 0.420730026 ubox
17 47 0.008889134 ubox
18 22 0.309688137 ubox
18 26 0.064865925 ubox
18 27 0.073033987 ubox
18 35 0.027261734 ubox
18 36 0.052723981 ubox
18 43 0.005347888 ubox
18 44 0.017257824 ubox
18 45 0.420516688 ubox
19 25 0.064839689 ubox
19 26 0.072958830 ubox
19 34 0.027642203 ubox
19 35 0.052896359 ubox
19 42 0.005563497 ubox
19 43 0.023946422 ubox
19 44 0.419858670 ubox
21 30 0.123524831 ubox
21 34 0.055118782 ubox
21 39 0.054653696 ubox
21 42 0.377617562 ubox
21 50 0.005124064 ubox
22 29 0.123649533 ubox
22 33 0.055120417 ubox
22 38 0.054653922 ubox
22 41 0.377355351 ubox
22 49 0.005105941 ubox
22 51 0.133201220 ubox
23 35 0.315554001 ubox
23 36 0.033581002 ubox
23 43 0.177154780 ubox
23 50 0.134110350 ubox
24 30 0.055088544 ubox
24 34 0.316435554 ubox
24 35 0.026064962 ubox
24 39 0.207772583 ubox
24 42 0.177313516 ubox
24 50 0.049657562 ubox
25 29 0.054782706 ubox
25 33 0.316753738 ubox
25 38 0.208200902 ubox
25 41 0.177229794 ubox
25 48 0.133608020 ubox
25 49 0.051360540 ubox
26 47 0.133650680 ubox
26 48 0.051293597 ubox
27 46 0.133586898 ubox
27 47 0.051192887 ubox
29 39 0.212394548 ubox
29 42 0.126210218 ubox
29 50 0.029635468 ubox
30 38 0.212428037 ubox
30 41 0.126139750 ubox
30 49 0.029626790 ubox
33 39 0.135529928 ubox
33 42 0.061507577 ubox
33 50 0.337636521 ubox
34 38 0.134705558 ubox
34 41 0.061477955 ubox
34 48 0.042663606 ubox
34 49 0.337565227 ubox
34 52 0.007631745 ubox
35 47 0.046415975 ubox
35 48 0.337080409 ubox
35 51 0.007757801 ubox
35 52 0.012332780 ubox
36 46 0.049800148 ubox
36 47 0.336293952 ubox
36 51 0.012769742 ubox
38 50 0.055245244 ubox
39 49 0.055028167 ubox
41 50 0.744494817 ubox
42 48 0.050760717 ubox
42 49 0.744978986 ubox
42 52 0.014076259 ubox
43 47 0.053627489 ubox
43 48 0.742153328 ubox
43 49 0.022804755 ubox
43 51 0.014251226 ubox
43 52 0.025115915 ubox
44 48 0.028894955 ubox
44 51 0.025266304 ubox
44 52 0.075808477 ubox
45 51 0.077334111 ubox
46 50 0.073892658 ubox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
