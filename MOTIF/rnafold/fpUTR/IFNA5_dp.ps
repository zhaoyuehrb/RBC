%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFNA5)
} def

/sequence { (\
GCCCAAGGUUCAGGGUCACUCAAUCUCAACAGCCCAGAAGCAUCUGCAACCUCCCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.077449378 ubox
1 16 0.230182964 ubox
1 33 0.054704912 ubox
1 41 0.053734989 ubox
1 47 0.411659230 ubox
2 8 0.096214432 ubox
2 15 0.251934184 ubox
2 32 0.054797035 ubox
2 40 0.053722426 ubox
2 46 0.411275191 ubox
3 7 0.095740296 ubox
3 14 0.252132795 ubox
4 13 0.252084579 ubox
4 46 0.038293551 ubox
5 45 0.034672621 ubox
6 26 0.088600650 ubox
6 45 0.154260637 ubox
6 52 0.793679506 ubox
7 25 0.093140998 ubox
7 26 0.005347611 ubox
7 27 0.003776569 ubox
7 34 0.079478930 ubox
7 35 0.005768720 ubox
7 44 0.158293786 ubox
7 45 0.018817654 ubox
7 51 0.840437249 ubox
7 52 0.009019013 ubox
7 53 0.007499514 ubox
7 54 0.034450897 ubox
7 55 0.042351156 ubox
7 56 0.063232315 ubox
8 24 0.093172580 ubox
8 25 0.005911565 ubox
8 30 0.017071782 ubox
8 33 0.079718398 ubox
8 34 0.004821489 ubox
8 41 0.205471497 ubox
8 43 0.152235959 ubox
8 44 0.019144016 ubox
8 47 0.005417017 ubox
8 50 0.840563231 ubox
8 51 0.009351261 ubox
8 52 0.005626154 ubox
8 53 0.034284993 ubox
8 54 0.042302166 ubox
8 55 0.062904765 ubox
9 23 0.093142063 ubox
9 29 0.017177165 ubox
9 32 0.079428858 ubox
9 37 0.004184261 ubox
9 38 0.010585718 ubox
9 39 0.400942538 ubox
9 40 0.170839098 ubox
9 42 0.126490506 ubox
9 46 0.005102416 ubox
9 49 0.828690462 ubox
10 22 0.087751825 ubox
10 28 0.016393281 ubox
10 31 0.070027602 ubox
10 36 0.005782883 ubox
10 37 0.010931378 ubox
10 38 0.491318086 ubox
10 39 0.124273649 ubox
10 48 0.788144096 ubox
11 37 0.519358929 ubox
11 46 0.739543945 ubox
12 20 0.088728744 ubox
12 26 0.018241257 ubox
12 45 0.733541543 ubox
12 52 0.016703398 ubox
13 19 0.090204587 ubox
13 20 0.031833592 ubox
13 21 0.039902444 ubox
13 25 0.018784390 ubox
13 26 0.063174586 ubox
13 27 0.082338903 ubox
13 34 0.022112676 ubox
13 35 0.621568774 ubox
13 44 0.711583776 ubox
13 45 0.117997932 ubox
13 51 0.017142178 ubox
13 52 0.016070434 ubox
13 53 0.003169767 ubox
13 55 0.016949616 ubox
13 56 0.017702177 ubox
14 19 0.053142614 ubox
14 20 0.043090535 ubox
14 21 0.043790570 ubox
14 24 0.017546735 ubox
14 25 0.104873097 ubox
14 26 0.085043598 ubox
14 27 0.024563576 ubox
14 33 0.022319042 ubox
14 34 0.629562746 ubox
14 35 0.027132033 ubox
14 43 0.642583204 ubox
14 44 0.126870238 ubox
14 45 0.010270354 ubox
14 50 0.016909407 ubox
14 51 0.016967665 ubox
14 54 0.017038067 ubox
14 55 0.017674765 ubox
15 19 0.043621905 ubox
15 20 0.032386470 ubox
15 24 0.106106402 ubox
15 25 0.087075814 ubox
15 26 0.018255959 ubox
15 30 0.033261236 ubox
15 33 0.629614863 ubox
15 34 0.026941655 ubox
15 41 0.572592658 ubox
15 43 0.133177326 ubox
15 44 0.010860638 ubox
15 47 0.003924981 ubox
15 50 0.017023213 ubox
15 53 0.017042349 ubox
15 54 0.017561315 ubox
16 23 0.104096949 ubox
16 29 0.032306383 ubox
16 32 0.611297290 ubox
16 38 0.058534634 ubox
16 40 0.563884938 ubox
16 42 0.136336658 ubox
16 46 0.003169029 ubox
16 49 0.016376847 ubox
17 37 0.075968682 ubox
17 46 0.006586670 ubox
18 45 0.006319206 ubox
19 32 0.054360810 ubox
19 37 0.408806587 ubox
19 40 0.202675790 ubox
20 31 0.058061840 ubox
20 36 0.393970696 ubox
20 38 0.397735276 ubox
20 39 0.184517878 ubox
21 37 0.410317507 ubox
21 46 0.004558396 ubox
22 45 0.004392913 ubox
23 43 0.007772764 ubox
24 38 0.169093602 ubox
24 42 0.009625231 ubox
25 32 0.441537027 ubox
25 37 0.171333783 ubox
25 40 0.025611042 ubox
26 31 0.405289928 ubox
26 36 0.163259180 ubox
26 38 0.062485483 ubox
26 39 0.020703491 ubox
27 37 0.065483985 ubox
27 46 0.016884198 ubox
28 45 0.016571056 ubox
30 46 0.024830144 ubox
31 45 0.024799379 ubox
31 52 0.053420920 ubox
32 41 0.152473932 ubox
32 44 0.021584653 ubox
32 47 0.100697525 ubox
32 51 0.056866096 ubox
33 40 0.152598822 ubox
33 46 0.090874630 ubox
35 46 0.249895551 ubox
36 45 0.293607181 ubox
36 52 0.021138674 ubox
37 44 0.305301061 ubox
37 51 0.022491964 ubox
37 53 0.013232814 ubox
38 43 0.279078952 ubox
38 52 0.012760504 ubox
39 45 0.025140849 ubox
39 52 0.004954590 ubox
40 44 0.026610773 ubox
40 47 0.385748368 ubox
40 51 0.005290460 ubox
41 46 0.385597086 ubox
45 57 0.005085871 ubox
46 56 0.007144583 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
9 39 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
showpage
end
%%EOF
