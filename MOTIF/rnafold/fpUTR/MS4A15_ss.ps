%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCUCACAAGGGCGGGCUCUCAGAAGAGCUGCCCCCACCCCCUCUCCCAGCCCCCUUCAGCUGAAAUUGUCUAAGAACUCAUUCUUGGCGUUCACUGCAAGCUAUAAGCUCUGCAAGUGGUGACCCCGACGUGAUCGCCUUGAAGUUACGCUUGAAGGAGGAAAACUCAUCAAUUUUCGGGGAAUCCCGCCUUUGUUUCCCAGGCUCUCUGAGCACG\
) } def
/len { sequence length } bind def

/coor [
[83.17642212 370.96725464]
[90.99821472 363.73059082]
[87.82394409 349.07031250]
[76.11968231 345.87893677]
[66.82606506 337.96951294]
[61.74465179 326.79470825]
[61.89453888 314.44763184]
[67.30861664 303.26962280]
[77.01571655 295.40643311]
[74.25947571 280.66183472]
[71.50323486 265.91723633]
[68.74699402 251.17263794]
[65.99074554 236.42803955]
[63.23450470 221.68344116]
[60.47826385 206.93884277]
[57.72201920 192.19425964]
[54.96577835 177.44966125]
[52.20953369 162.70506287]
[37.75333786 158.70275879]
[27.80649757 169.93041992]
[17.85965729 181.15808105]
[7.91281843 192.38574219]
[-2.03402162 203.61340332]
[-4.78233624 219.78062439]
[-20.24972343 225.22966003]
[-32.52466202 214.35501099]
[-28.97974586 198.34358215]
[-13.26168251 193.66656494]
[-3.31484294 182.43890381]
[6.63199711 171.21124268]
[16.57883644 159.98358154]
[26.52567673 148.75592041]
[23.76672554 141.78181458]
[9.81850815 147.29971313]
[-4.12970829 152.81762695]
[-18.07792473 158.33552551]
[-32.02614212 163.85342407]
[-45.97435760 169.37132263]
[-59.92257309 174.88923645]
[-73.87078857 180.40713501]
[-87.81909943 185.92480469]
[-93.33654022 171.97640991]
[-79.38869476 166.45892334]
[-65.44047546 160.94100952]
[-51.49225998 155.42311096]
[-37.54404449 149.90521240]
[-23.59582710 144.38731384]
[-9.64761066 138.86940002]
[4.30060577 133.35150146]
[18.24882317 127.83359528]
[15.48987103 120.85948944]
[0.55385810 119.47546387]
[-14.38215446 118.09143829]
[-29.31816673 116.70741272]
[-39.45670319 128.45431519]
[-54.57125854 131.96569824]
[-68.84998322 125.89134979]
[-76.80241394 112.56699371]
[-75.37068176 97.11611176]
[-65.10530853 85.47988129]
[-49.95354843 82.13267517]
[-35.74156189 88.36155701]
[-27.93414116 101.77140045]
[-12.99812889 103.15542603]
[1.93788350 104.53945160]
[16.87389565 105.92347717]
[19.97627831 99.09520721]
[6.31984091 92.89023590]
[12.52502728 79.23389435]
[26.18104172 85.43867493]
[29.28342438 78.61041260]
[18.41627312 68.27091980]
[10.04856777 64.62650299]
[7.46945429 57.70638275]
[-3.24962473 47.21346283]
[-13.96870422 36.72054672]
[-24.68778229 26.22762680]
[-35.40686417 15.73470879]
[-46.12594223 5.24178982]
[-56.84502029 -5.25112867]
[-72.85554504 -8.80008984]
[-77.52859497 -24.51933479]
[-66.05693054 -36.23825073]
[-50.24162292 -31.90142441]
[-46.35210037 -15.97020817]
[-35.63302231 -5.47728920]
[-24.91394424 5.01562929]
[-14.19486427 15.50854778]
[-3.47578526 26.00146675]
[7.24329376 36.49438477]
[17.96237373 46.98730469]
[28.75576019 57.40377045]
[39.62291336 67.74325562]
[65.07508087 52.96083832]
[90.45447540 52.22387695]
[89.81497955 37.23751450]
[89.17548370 22.25115395]
[88.53598785 7.26479149]
[87.89648438 -7.72157049]
[87.15048981 -22.70300865]
[86.29802704 -37.67876434]
[85.44556427 -52.65452194]
[84.48668671 -67.62384033]
[83.42143250 -82.58596802]
[82.35617828 -97.54809570]
[81.29092407 -112.51022339]
[74.13500214 -127.87997437]
[86.92314148 -139.01100159]
[101.15927887 -129.80401611]
[96.25305176 -113.57547760]
[97.31830597 -98.61334991]
[98.38356018 -83.65122223]
[99.44881439 -68.68909454]
[103.05654144 -62.24517059]
[100.42132568 -53.50698471]
[101.27378845 -38.53122711]
[102.12624359 -23.55546951]
[105.64201355 -17.06091309]
[102.88285065 -8.36106777]
[103.52234650 6.62529469]
[104.16184235 21.61165619]
[104.80133820 36.59801865]
[105.44083405 51.58438110]
[117.55860138 54.55365372]
[128.52494812 60.50313187]
[137.62071228 69.04266357]
[144.24946594 79.61226654]
[158.67684937 75.50732422]
[173.10423279 71.40238190]
[187.53161621 67.29743195]
[201.95899963 63.19248962]
[216.38639832 59.08754730]
[224.97386169 42.19417191]
[242.87734985 37.03826904]
[258.58584595 46.44850159]
[272.89071655 41.93508911]
[287.19558716 37.42167664]
[301.25827026 32.20242310]
[315.04400635 26.29024696]
[325.73059082 11.29013729]
[343.06417847 14.05115318]
[356.76446533 7.94361162]
[370.46475220 1.83606923]
[384.16503906 -4.27147293]
[393.61907959 -16.95736504]
[408.39395142 -15.07263851]
[422.09423828 -21.18018150]
[435.79455566 -27.28772354]
[449.49484253 -33.39526367]
[461.49966431 -45.36691666]
[476.32672119 -37.14532471]
[472.53097534 -20.62174606]
[455.60238647 -19.69497490]
[441.90206909 -13.58743382]
[428.20178223 -7.47989130]
[414.50149536 -1.37234914]
[406.02740479 10.87669086]
[390.27258301 9.42881680]
[376.57229614 15.53635883]
[362.87200928 21.64389992]
[349.17172241 27.75144386]
[344.55368042 38.92679977]
[333.19583130 44.12925720]
[320.95617676 40.07596970]
[307.17044067 45.98814774]
[321.15133667 51.42272568]
[328.47302246 64.51443481]
[325.78457642 79.27153778]
[314.31640625 88.94010162]
[299.31723022 89.09507751]
[287.65173340 79.66552734]
[284.65893555 64.96712494]
[291.70898438 51.72653961]
[277.40411377 56.23995209]
[263.09927368 60.75336456]
[260.15533447 71.76715088]
[252.18011475 80.08055878]
[241.06927490 83.55058289]
[229.54548645 81.20584869]
[220.49133301 73.51493073]
[206.06394958 77.61987305]
[191.63656616 81.72482300]
[177.20918274 85.82976532]
[162.78179932 89.93470764]
[148.35441589 94.03965759]
[150.04612732 116.40728760]
[141.18167114 138.84811401]
[122.18732452 156.34954834]
[95.85221100 164.37342834]
[66.95413208 159.94882202]
[69.71037292 174.69342041]
[72.46661377 189.43800354]
[75.22286224 204.18260193]
[77.97910309 218.92720032]
[80.73534393 233.67179871]
[83.49158478 248.41639709]
[86.24783325 263.16098022]
[89.00407410 277.90557861]
[91.76031494 292.65017700]
[108.36656189 299.94473267]
[117.18737030 315.61276245]
[114.85217285 333.28216553]
[102.48423004 345.89602661]
[105.65850067 360.55630493]
[123.10498810 370.53488159]
[127.50846863 389.83175659]
[116.46409607 405.88714600]
[120.26049805 420.39877319]
[124.05690002 434.91040039]
[127.85329437 449.42205811]
[137.71156311 463.21520996]
[127.18648529 476.50653076]
[111.50096130 470.07217407]
[113.34166718 453.21844482]
[109.54526520 438.70681763]
[105.74887085 424.19519043]
[101.95246887 409.68356323]
[92.03597260 407.08068848]
[84.02962494 400.54833984]
[79.41794586 391.21127319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[51 66]
[52 65]
[53 64]
[54 63]
[71 93]
[72 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 117]
[101 116]
[102 115]
[103 113]
[104 112]
[105 111]
[106 110]
[127 185]
[128 184]
[129 183]
[130 182]
[131 181]
[132 180]
[135 175]
[136 174]
[137 173]
[138 165]
[139 164]
[141 161]
[142 160]
[143 159]
[144 158]
[146 156]
[147 155]
[148 154]
[149 153]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
