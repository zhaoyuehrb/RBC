%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEP72)
} def

/sequence { (\
CGCAGGUCCCGCCCCUCUCGUAGCCUCGCCCCGCCCGCCGCGCAGGCGCCGUCCGAGGGCUCCGUUUGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.025320043 ubox
1 20 0.058026426 ubox
1 28 0.039947838 ubox
1 42 0.003881478 ubox
1 64 0.063114878 ubox
1 68 0.131052515 ubox
2 10 0.030967066 ubox
2 12 0.188115916 ubox
2 19 0.061074124 ubox
2 21 0.030831563 ubox
2 24 0.025243772 ubox
2 27 0.268616395 ubox
2 29 0.037672030 ubox
2 41 0.004135614 ubox
2 60 0.033599871 ubox
2 63 0.063778332 ubox
2 65 0.240593835 ubox
2 67 0.113756351 ubox
3 11 0.188396565 ubox
3 20 0.031796137 ubox
3 23 0.025282406 ubox
3 28 0.038494473 ubox
3 40 0.004123605 ubox
3 59 0.033160003 ubox
3 64 0.250538232 ubox
3 68 0.532553336 ubox
4 16 0.184971207 ubox
4 18 0.034363799 ubox
4 26 0.381389503 ubox
4 61 0.046899881 ubox
4 66 0.038017808 ubox
4 67 0.532112851 ubox
5 13 0.311053026 ubox
5 14 0.129918574 ubox
5 15 0.199688451 ubox
5 16 0.023516066 ubox
5 17 0.034573800 ubox
5 18 0.015962003 ubox
5 19 0.005608597 ubox
5 25 0.395657885 ubox
5 39 0.003932491 ubox
5 60 0.046600157 ubox
5 61 0.034050380 ubox
5 62 0.090606335 ubox
5 63 0.374610341 ubox
5 65 0.042360493 ubox
5 66 0.512193474 ubox
5 67 0.023291057 ubox
6 12 0.312830679 ubox
6 13 0.129769477 ubox
6 14 0.198593439 ubox
6 15 0.030483396 ubox
6 16 0.024452869 ubox
6 17 0.017014662 ubox
6 18 0.004182330 ubox
6 24 0.395715974 ubox
6 38 0.003934080 ubox
6 60 0.038364803 ubox
6 61 0.087359738 ubox
6 62 0.374384415 ubox
6 65 0.455272077 ubox
6 66 0.031849236 ubox
6 72 0.015507643 ubox
7 11 0.293033898 ubox
7 23 0.392478873 ubox
7 37 0.003821095 ubox
7 59 0.029126951 ubox
7 64 0.188053774 ubox
7 69 0.124053047 ubox
7 71 0.013767287 ubox
8 58 0.027888049 ubox
8 59 0.030974600 ubox
8 68 0.132613517 ubox
9 57 0.027027727 ubox
9 58 0.030670241 ubox
9 59 0.031342361 ubox
10 20 0.357003806 ubox
10 55 0.023573572 ubox
10 57 0.029355572 ubox
10 58 0.027394179 ubox
10 64 0.275355222 ubox
10 68 0.017272861 ubox
11 19 0.348741434 ubox
11 21 0.142607810 ubox
11 24 0.011898513 ubox
11 34 0.003646796 ubox
11 54 0.023313955 ubox
11 60 0.689349331 ubox
11 63 0.276584445 ubox
11 65 0.064905483 ubox
11 67 0.009799306 ubox
12 20 0.143398778 ubox
12 23 0.011961893 ubox
12 33 0.003642778 ubox
12 48 0.003263655 ubox
12 58 0.003752418 ubox
12 59 0.613279671 ubox
12 64 0.066294432 ubox
13 57 0.003912515 ubox
13 58 0.524065097 ubox
13 59 0.508378784 ubox
14 46 0.003163289 ubox
14 57 0.403411541 ubox
14 58 0.602425909 ubox
14 59 0.057364362 ubox
15 23 0.008134038 ubox
15 45 0.003171185 ubox
15 57 0.681260930 ubox
15 58 0.058143545 ubox
15 59 0.130823287 ubox
16 22 0.008109272 ubox
16 56 0.751143617 ubox
16 57 0.006829057 ubox
16 58 0.133226968 ubox
16 69 0.184022585 ubox
17 23 0.007119367 ubox
17 55 0.749931452 ubox
17 57 0.180715925 ubox
17 68 0.195429081 ubox
18 22 0.006792672 ubox
18 56 0.258251669 ubox
18 69 0.253668087 ubox
19 28 0.009089350 ubox
19 33 0.005929435 ubox
19 42 0.003939234 ubox
19 51 0.750681488 ubox
19 55 0.260357362 ubox
19 64 0.295463355 ubox
19 68 0.266364177 ubox
20 27 0.015258935 ubox
20 29 0.004999834 ubox
20 32 0.006468410 ubox
20 41 0.003999871 ubox
20 49 0.091713756 ubox
20 50 0.744630747 ubox
20 52 0.024317616 ubox
20 54 0.260576717 ubox
20 60 0.011582418 ubox
20 63 0.302367105 ubox
20 65 0.009894134 ubox
20 67 0.248213014 ubox
20 72 0.010318559 ubox
21 28 0.004886608 ubox
21 40 0.003952927 ubox
21 48 0.107774403 ubox
21 51 0.020130787 ubox
21 59 0.011130194 ubox
21 64 0.007312604 ubox
21 68 0.014867089 ubox
21 71 0.010348402 ubox
22 61 0.301978478 ubox
22 66 0.251766786 ubox
22 67 0.014127144 ubox
23 29 0.011774473 ubox
23 34 0.008582584 ubox
23 38 0.004075813 ubox
23 47 0.764627858 ubox
23 49 0.048370982 ubox
23 52 0.250699763 ubox
23 60 0.309390597 ubox
23 65 0.272820676 ubox
23 66 0.011393112 ubox
24 28 0.011711623 ubox
24 33 0.008598995 ubox
24 37 0.004071414 ubox
24 46 0.764820727 ubox
24 48 0.044366411 ubox
24 51 0.254591194 ubox
24 58 0.173650801 ubox
24 59 0.259606549 ubox
24 64 0.273200109 ubox
25 45 0.764806427 ubox
25 46 0.005818877 ubox
25 57 0.241900859 ubox
25 58 0.197574251 ubox
26 44 0.761498170 ubox
26 45 0.005630390 ubox
26 46 0.003837046 ubox
26 56 0.294733998 ubox
26 57 0.100181814 ubox
26 69 0.010299553 ubox
27 40 0.012103557 ubox
27 42 0.720784459 ubox
27 45 0.004317677 ubox
27 48 0.272112114 ubox
27 51 0.026377966 ubox
27 55 0.305924192 ubox
27 57 0.016372682 ubox
27 64 0.013550069 ubox
27 68 0.012720853 ubox
28 34 0.008398874 ubox
28 38 0.015910501 ubox
28 39 0.009310182 ubox
28 41 0.721177811 ubox
28 43 0.243371515 ubox
28 47 0.276808397 ubox
28 49 0.014713048 ubox
28 50 0.026650579 ubox
28 52 0.083689872 ubox
28 54 0.293172689 ubox
28 60 0.486886007 ubox
28 63 0.006057179 ubox
29 33 0.008468770 ubox
29 37 0.018407795 ubox
29 40 0.719346670 ubox
29 42 0.229579560 ubox
29 46 0.276628054 ubox
29 48 0.014667227 ubox
29 51 0.137293229 ubox
29 58 0.006186285 ubox
29 59 0.489049505 ubox
30 45 0.276028996 ubox
30 46 0.015801808 ubox
30 57 0.007291956 ubox
30 58 0.489195311 ubox
30 59 0.009028953 ubox
31 45 0.018899648 ubox
31 46 0.003752022 ubox
31 57 0.489131112 ubox
31 58 0.009343095 ubox
32 40 0.127978163 ubox
32 42 0.293924287 ubox
32 45 0.003765649 ubox
32 48 0.224501750 ubox
32 51 0.192978194 ubox
32 55 0.486821273 ubox
32 57 0.009507574 ubox
33 39 0.145945275 ubox
33 41 0.346700727 ubox
33 43 0.033941346 ubox
33 47 0.226330482 ubox
33 49 0.067210305 ubox
33 50 0.192694619 ubox
33 52 0.049573324 ubox
33 54 0.485108389 ubox
33 60 0.027754299 ubox
34 40 0.346371151 ubox
34 42 0.033926956 ubox
34 46 0.226220201 ubox
34 48 0.064793605 ubox
34 51 0.063382820 ubox
34 59 0.027793200 ubox
35 45 0.225979532 ubox
35 46 0.035585999 ubox
35 58 0.027770029 ubox
36 42 0.016808115 ubox
36 45 0.036387964 ubox
36 48 0.242598301 ubox
36 51 0.466613207 ubox
36 57 0.027286494 ubox
37 41 0.016354765 ubox
37 43 0.225588258 ubox
37 47 0.250811452 ubox
37 49 0.043047908 ubox
37 50 0.465310864 ubox
37 52 0.043239867 ubox
38 42 0.224151867 ubox
38 46 0.250941931 ubox
38 48 0.038204897 ubox
38 51 0.043386905 ubox
39 45 0.250900212 ubox
39 48 0.466296994 ubox
39 51 0.009842578 ubox
39 55 0.007931964 ubox
39 68 0.003523678 ubox
40 47 0.468803943 ubox
40 49 0.047930067 ubox
40 50 0.009739876 ubox
40 52 0.009222814 ubox
40 54 0.007590324 ubox
40 67 0.003441320 ubox
41 46 0.468657580 ubox
41 48 0.048123777 ubox
41 51 0.009700359 ubox
42 47 0.046879038 ubox
42 49 0.011979483 ubox
42 50 0.007249022 ubox
42 52 0.006530856 ubox
42 65 0.004190946 ubox
43 48 0.013582192 ubox
43 51 0.006606155 ubox
43 64 0.004675898 ubox
43 68 0.017598359 ubox
44 67 0.017639989 ubox
45 63 0.009967667 ubox
45 66 0.017487065 ubox
46 62 0.009980727 ubox
46 65 0.017553684 ubox
47 64 0.017568098 ubox
48 54 0.003718905 ubox
48 60 0.019265819 ubox
48 63 0.017098894 ubox
49 58 0.006655746 ubox
49 59 0.019472600 ubox
50 57 0.007235101 ubox
50 58 0.019426346 ubox
51 60 0.018183299 ubox
52 59 0.018119810 ubox
53 58 0.018081235 ubox
59 65 0.006622223 ubox
60 64 0.009409002 ubox
61 69 0.110407857 ubox
62 68 0.115753315 ubox
64 72 0.099632148 ubox
65 71 0.099709946 ubox
66 70 0.083513515 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
