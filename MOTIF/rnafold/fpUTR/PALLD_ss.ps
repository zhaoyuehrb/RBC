%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACCACGGACCAGGCAGUCUCUAAUGAAUAGGCAAGGCCACAACCUCCAUUCUCCCAGAAAAGAAGAAAUGCUCAUCUGAAAUUCAUCACCUCUCUGGAGUCUUCAAACUGACCAAGCAUUGAAAAGAACACAGUUUCAGAAAACAGUUUCCAGUGCCUCUGGCCUUCCUACUGAAAGCAGACACAGAGUGCAUGAAGACCGUUCAAAU\
) } def
/len { sequence length } bind def

/coor [
[84.16102600 623.04882812]
[94.07333374 610.43432617]
[93.62883759 595.44091797]
[93.18433380 580.44750977]
[90.38533020 576.57867432]
[89.98647308 570.91058350]
[92.95547485 565.00463867]
[92.95547485 550.00463867]
[92.95547485 535.00463867]
[92.95547485 520.00463867]
[79.25531769 507.86212158]
[78.77397156 489.24215698]
[92.28390503 475.95989990]
[91.83940887 460.96649170]
[83.72835541 448.47409058]
[91.05331421 434.45068359]
[90.60881042 419.45727539]
[90.16431427 404.46386719]
[82.05326080 391.97146606]
[89.37821198 377.94805908]
[88.93371582 362.95465088]
[88.48921204 347.96124268]
[73.70102692 345.44937134]
[61.93743134 336.14251709]
[56.09070969 322.32888794]
[57.59838104 307.40484619]
[66.08975983 295.03973389]
[79.47708893 288.27368164]
[94.46886444 288.77026367]
[107.37910461 296.40740967]
[115.03319550 309.30599976]
[113.25910187 294.41128540]
[111.48500061 279.51657104]
[109.71090698 264.62185669]
[105.79868317 258.35226440]
[108.02256012 249.49348450]
[106.46937561 234.57412720]
[104.91618347 219.65475464]
[103.36299896 204.73538208]
[101.80980682 189.81600952]
[100.25662231 174.89663696]
[98.70343018 159.97726440]
[91.24103546 159.76409912]
[83.81237030 158.61978149]
[76.53392792 156.54954529]
[69.52141571 153.57322693]
[62.88790131 149.72517395]
[56.74198151 145.05383301]
[51.18603897 139.62126160]
[46.31453323 133.50221252]
[42.21240616 126.78320312]
[38.95362854 119.56127930]
[36.59989929 111.94260406]
[35.19951248 104.04090881]
[34.78643036 95.97579193]
[35.37957382 87.87091064]
[36.98234177 79.85211182]
[39.58236313 72.04542542]
[26.34046936 64.99898529]
[13.09857464 57.95255280]
[-0.14331990 50.90611649]
[-15.08941460 55.29383087]
[-28.41819954 47.95910645]
[-32.50910568 33.68325043]
[-45.75099945 26.63681793]
[-59.64037323 33.55526352]
[-74.93807220 30.95523453]
[-85.76181030 19.83649826]
[-87.94964600 4.47443485]
[-80.66030884 -9.22392941]
[-66.69669342 -15.99129486]
[-51.42810822 -13.22546959]
[-40.72562027 -1.98997080]
[-38.70456314 13.39492321]
[-25.46266937 20.44135666]
[-11.33682156 15.85921669]
[2.19272089 22.81666756]
[6.90311480 37.66422272]
[20.14500809 44.71065903]
[33.38690186 51.75709152]
[46.62879562 58.80352783]
[52.41755295 54.03484726]
[42.88019180 42.45733643]
[33.34283066 30.87982750]
[23.80546761 19.30231667]
[14.26829910 7.72464800]
[25.84612656 -1.81232882]
[35.38298035 9.76495552]
[44.92034149 21.34246635]
[54.45770264 32.91997528]
[63.99506378 44.49748611]
[69.78381348 39.72880554]
[65.40296936 25.38278961]
[51.97272491 16.60735703]
[50.60352707 0.62283784]
[62.34569931 -10.30881119]
[78.19165039 -7.80176544]
[85.98573303 6.22078466]
[79.74897766 21.00193787]
[84.12982941 35.34795380]
[90.79486847 37.39175034]
[96.92667389 40.08749008]
[98.03707123 25.12864685]
[99.14746857 10.16980267]
[87.21694946 0.24798891]
[83.42949677 -14.79976177]
[89.24145508 -29.18728256]
[102.41800690 -37.38227844]
[117.89250946 -36.23360443]
[129.71469116 -26.18295097]
[133.33868408 -11.09499931]
[127.37099457 3.22862577]
[114.10630798 11.28019810]
[112.99591827 26.23904228]
[111.88552094 41.19788742]
[121.28795624 43.91277313]
[130.12387085 48.12026596]
[138.15811157 53.70840073]
[145.17689514 60.52845764]
[157.61798096 52.14875412]
[170.05906677 43.76905441]
[182.50013733 35.38935089]
[194.94122314 27.00965118]
[207.38230896 18.62994957]
[209.14764404 14.66478539]
[211.81443787 11.75942707]
[214.93899536 10.06710625]
[218.07339478 9.58126736]
[220.81799316 10.14802933]
[233.73364258 2.52006245]
[246.64929199 -5.10790443]
[252.44650269 -12.16593933]
[259.81335449 -12.75158024]
[272.84060669 -20.18732262]
[280.99035645 -33.74801636]
[295.87930298 -33.33740234]
[308.90655518 -40.77314377]
[321.93383789 -48.20888519]
[334.96109009 -55.64462662]
[342.75897217 -70.07117462]
[359.15701294 -70.26075745]
[367.28634644 -56.01834869]
[358.78417969 -41.99531937]
[342.39685059 -42.61735535]
[329.36956787 -35.18161774]
[316.34228516 -27.74587440]
[303.31503296 -20.31013298]
[296.09710693 -7.28129339]
[280.27636719 -7.16005230]
[267.24908447 0.27568901]
[254.27726746 7.80774975]
[241.36161804 15.43571663]
[228.44595337 23.06368256]
[215.76202393 31.07103348]
[203.32093811 39.45073700]
[190.87985229 47.83043671]
[178.43876648 56.21014023]
[165.99768066 64.58984375]
[153.55659485 72.96954346]
[159.98442078 99.09262085]
[154.34967041 125.39816284]
[137.78547668 146.59626770]
[113.62280273 158.42408752]
[115.17598724 173.34344482]
[116.72917938 188.26281738]
[118.28236389 203.18218994]
[119.83555603 218.10156250]
[121.38874054 233.02093506]
[122.94193268 247.94030762]
[124.60562134 262.84774780]
[126.37971497 277.74246216]
[128.15382385 292.63717651]
[129.92791748 307.53189087]
[137.84106445 320.27481079]
[150.40495300 328.46923828]
[162.96885681 336.66366577]
[179.36425781 337.01351929]
[187.02075195 351.51559448]
[178.06198120 365.25140381]
[161.70396423 364.09072876]
[154.77442932 349.22756958]
[142.21052551 341.03314209]
[129.64663696 332.83871460]
[123.10563660 336.50823975]
[130.44442749 349.59036255]
[117.36218262 356.92892456]
[110.02362823 343.84722900]
[103.48262787 347.51675415]
[103.92712402 362.51016235]
[104.37162781 377.50357056]
[112.51447296 391.06838989]
[105.15772247 404.01937866]
[105.60222626 419.01278687]
[106.04672241 434.00619507]
[114.18956757 447.57101440]
[106.83281708 460.52197266]
[107.27732086 475.51541138]
[117.35003662 481.82849121]
[123.06638336 492.11456299]
[123.10755157 503.76235962]
[117.57897949 513.87817383]
[107.95547485 520.00463867]
[107.95547485 535.00463867]
[107.95547485 550.00463867]
[107.95547485 565.00463867]
[108.17774963 580.00299072]
[108.62224579 594.99645996]
[109.06674957 609.98986816]
[119.70894623 621.99499512]
[116.81640625 637.77508545]
[102.60804749 645.22509766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 208]
[3 207]
[4 206]
[7 205]
[8 204]
[9 203]
[10 202]
[13 197]
[14 196]
[16 194]
[17 193]
[18 192]
[20 190]
[21 189]
[22 188]
[31 173]
[32 172]
[33 171]
[34 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[58 81]
[59 80]
[60 79]
[61 78]
[64 75]
[65 74]
[92 100]
[93 99]
[102 115]
[103 114]
[104 113]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[129 153]
[130 152]
[131 151]
[133 150]
[134 149]
[136 147]
[137 146]
[138 145]
[139 144]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
