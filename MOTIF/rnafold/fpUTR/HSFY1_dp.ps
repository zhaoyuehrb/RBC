%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HSFY1)
} def

/sequence { (\
AGAUAAGUGUACAUGCUUAGGCCUUCUGAAGCAGCAUUUGAAGCUGCAGUCCUGAAAACCAUGCAGGCCGGAAGAGUAGAUAAAGAAAUAUUUAUUUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.007230738 ubox
1 24 0.006816258 ubox
1 27 0.006060706 ubox
1 93 0.007523608 ubox
1 96 0.012213021 ubox
1 97 0.672146188 ubox
2 16 0.008343779 ubox
2 18 0.005610536 ubox
2 23 0.010538765 ubox
2 26 0.006419320 ubox
2 92 0.008786837 ubox
2 95 0.012033461 ubox
2 96 0.788032010 ubox
2 97 0.024497376 ubox
3 10 0.010877166 ubox
3 14 0.010657822 ubox
3 17 0.004459571 ubox
3 25 0.006346455 ubox
3 91 0.008882186 ubox
3 95 0.801428445 ubox
3 96 0.019122110 ubox
4 9 0.010593385 ubox
4 11 0.006906934 ubox
4 13 0.010797528 ubox
4 15 0.006558196 ubox
4 19 0.527374860 ubox
4 40 0.031312126 ubox
4 90 0.008667861 ubox
4 94 0.803493169 ubox
4 98 0.012025829 ubox
5 10 0.006925715 ubox
5 14 0.007028843 ubox
5 18 0.558093481 ubox
5 39 0.037772082 ubox
5 89 0.008097978 ubox
5 93 0.803615115 ubox
5 97 0.014199580 ubox
6 17 0.564082304 ubox
6 18 0.008197874 ubox
6 38 0.039009238 ubox
6 92 0.802502638 ubox
6 96 0.014163942 ubox
7 14 0.007087962 ubox
7 16 0.565113829 ubox
7 17 0.006820883 ubox
7 22 0.082969881 ubox
7 37 0.039729117 ubox
7 68 0.008556244 ubox
7 81 0.025744615 ubox
7 89 0.004570361 ubox
7 91 0.803093452 ubox
7 95 0.013869129 ubox
8 13 0.008042565 ubox
8 15 0.553654501 ubox
8 19 0.006788744 ubox
8 21 0.082966533 ubox
8 36 0.039886159 ubox
8 65 0.003593555 ubox
8 67 0.008527354 ubox
8 80 0.027033057 ubox
8 82 0.005932313 ubox
8 88 0.005156578 ubox
8 90 0.802947302 ubox
8 94 0.013783897 ubox
9 14 0.273538761 ubox
9 16 0.029068676 ubox
9 18 0.007474740 ubox
9 22 0.007802760 ubox
9 35 0.039926900 ubox
9 64 0.004024775 ubox
9 68 0.003969790 ubox
9 81 0.008382065 ubox
9 89 0.797767364 ubox
9 91 0.011197750 ubox
9 93 0.012973784 ubox
10 15 0.028182171 ubox
10 19 0.082403044 ubox
10 21 0.007708682 ubox
10 34 0.039702846 ubox
10 63 0.003675334 ubox
10 67 0.003930933 ubox
10 78 0.037800459 ubox
10 80 0.009153276 ubox
10 82 0.047636336 ubox
10 88 0.765239190 ubox
10 90 0.012797219 ubox
11 18 0.078068662 ubox
11 62 0.003301422 ubox
11 77 0.046017176 ubox
11 81 0.068823448 ubox
11 89 0.013432785 ubox
12 63 0.010268980 ubox
12 76 0.046317777 ubox
12 98 0.013791772 ubox
13 62 0.010353373 ubox
13 77 0.017123367 ubox
13 81 0.021731004 ubox
13 89 0.012268053 ubox
13 97 0.011991804 ubox
14 33 0.039910080 ubox
14 61 0.010402267 ubox
14 65 0.006768658 ubox
14 76 0.016734624 ubox
14 78 0.110028418 ubox
14 80 0.022339585 ubox
14 82 0.070554684 ubox
14 88 0.015846378 ubox
15 22 0.177227040 ubox
15 32 0.040408254 ubox
15 60 0.010356632 ubox
15 64 0.007268997 ubox
15 77 0.112037050 ubox
15 81 0.074010110 ubox
16 21 0.177821756 ubox
16 31 0.040407580 ubox
16 63 0.007262056 ubox
16 71 0.011882696 ubox
16 74 0.057067443 ubox
16 76 0.112311633 ubox
16 79 0.101152809 ubox
16 85 0.264593407 ubox
16 100 0.020719010 ubox
17 29 0.022014426 ubox
17 30 0.034388399 ubox
17 55 0.010715514 ubox
17 70 0.010998812 ubox
17 71 0.004736372 ubox
17 72 0.020650395 ubox
17 73 0.056977773 ubox
17 74 0.006609087 ubox
17 75 0.110603509 ubox
17 78 0.099531171 ubox
17 79 0.038695570 ubox
17 80 0.127549268 ubox
17 83 0.106086292 ubox
17 84 0.255863903 ubox
17 85 0.003334209 ubox
17 87 0.005981208 ubox
17 99 0.021328847 ubox
18 28 0.030651252 ubox
18 29 0.024249562 ubox
18 54 0.011482857 ubox
18 70 0.005228655 ubox
18 71 0.022493289 ubox
18 72 0.053825687 ubox
18 73 0.008887794 ubox
18 74 0.066283305 ubox
18 75 0.005326569 ubox
18 78 0.042611343 ubox
18 79 0.132001935 ubox
18 82 0.127401404 ubox
18 83 0.232803936 ubox
18 84 0.004132089 ubox
18 86 0.005877522 ubox
18 98 0.021193481 ubox
19 27 0.036492170 ubox
19 53 0.011790986 ubox
19 77 0.037565273 ubox
19 81 0.136064579 ubox
19 97 0.019421511 ubox
20 26 0.036929346 ubox
20 27 0.016762672 ubox
20 52 0.011829635 ubox
20 60 0.009492786 ubox
20 69 0.184251702 ubox
20 96 0.012451479 ubox
21 25 0.023925205 ubox
21 26 0.016985447 ubox
21 51 0.011810822 ubox
21 59 0.009513352 ubox
21 68 0.184476879 ubox
21 77 0.852405306 ubox
21 95 0.003871917 ubox
22 67 0.184438759 ubox
22 71 0.008753084 ubox
22 76 0.870563500 ubox
23 43 0.004400494 ubox
23 49 0.011327538 ubox
23 66 0.184080513 ubox
23 70 0.008762179 ubox
23 74 0.979141370 ubox
23 76 0.008613276 ubox
24 42 0.004566001 ubox
24 48 0.011247118 ubox
24 55 0.008644864 ubox
24 56 0.076115832 ubox
24 57 0.005700564 ubox
24 65 0.162813845 ubox
24 72 0.003289032 ubox
24 73 0.980656397 ubox
24 74 0.005036761 ubox
24 75 0.007739596 ubox
24 76 0.003711747 ubox
25 29 0.004022236 ubox
25 30 0.004732438 ubox
25 41 0.004625049 ubox
25 54 0.013507540 ubox
25 55 0.154266179 ubox
25 56 0.008555588 ubox
25 65 0.004850315 ubox
25 71 0.003412441 ubox
25 72 0.981290921 ubox
25 73 0.004134655 ubox
25 74 0.004055915 ubox
25 75 0.004893770 ubox
26 40 0.004615280 ubox
26 49 0.019044781 ubox
26 54 0.154952311 ubox
26 66 0.006056204 ubox
26 70 0.004285063 ubox
26 71 0.981671238 ubox
26 74 0.005104044 ubox
27 48 0.019090790 ubox
27 61 0.025665796 ubox
27 63 0.006137480 ubox
27 65 0.011566222 ubox
27 70 0.980220110 ubox
27 73 0.004945887 ubox
28 39 0.003293280 ubox
28 47 0.010295106 ubox
28 51 0.147026502 ubox
28 60 0.026364972 ubox
28 62 0.003537705 ubox
28 64 0.015209461 ubox
28 69 0.973805679 ubox
29 38 0.003689538 ubox
29 50 0.145851517 ubox
30 37 0.003633044 ubox
30 45 0.006982744 ubox
31 44 0.007619640 ubox
31 47 0.997883494 ubox
31 50 0.006320240 ubox
31 64 0.004991503 ubox
31 68 0.010483529 ubox
32 40 0.004076212 ubox
32 43 0.007621896 ubox
32 46 0.998975467 ubox
32 49 0.006496007 ubox
32 63 0.004989175 ubox
32 67 0.010243608 ubox
33 39 0.004021095 ubox
33 45 0.998758678 ubox
33 62 0.004920557 ubox
34 44 0.998991488 ubox
34 47 0.009636897 ubox
34 64 0.008338940 ubox
34 77 0.004026334 ubox
35 43 0.998448271 ubox
35 46 0.009650275 ubox
35 63 0.008342323 ubox
35 76 0.004140258 ubox
36 45 0.009440960 ubox
36 62 0.008275743 ubox
37 43 0.003437451 ubox
37 58 0.005243216 ubox
37 61 0.006933377 ubox
37 73 0.003305520 ubox
38 42 0.022273507 ubox
38 57 0.006809157 ubox
38 71 0.004074819 ubox
38 72 0.004494596 ubox
38 73 0.003561259 ubox
39 48 0.003345543 ubox
39 56 0.006854801 ubox
39 70 0.005081029 ubox
39 71 0.004813687 ubox
39 72 0.003801600 ubox
40 47 0.003518694 ubox
40 69 0.006728911 ubox
42 53 0.007810036 ubox
43 52 0.007804895 ubox
43 68 0.024139577 ubox
44 66 0.035386079 ubox
44 67 0.018302512 ubox
44 71 0.008848643 ubox
44 74 0.003963113 ubox
45 65 0.038915913 ubox
45 66 0.009033352 ubox
45 70 0.008875332 ubox
45 73 0.003980457 ubox
46 64 0.040294491 ubox
46 69 0.008631301 ubox
47 54 0.004648687 ubox
47 63 0.040333321 ubox
48 53 0.007307307 ubox
48 62 0.039386697 ubox
49 59 0.033340758 ubox
49 62 0.004379642 ubox
49 64 0.054557917 ubox
49 68 0.719947978 ubox
50 58 0.032489862 ubox
50 61 0.004745078 ubox
50 63 0.053517835 ubox
50 67 0.118395461 ubox
51 66 0.087542464 ubox
51 67 0.966130314 ubox
52 66 0.974781243 ubox
52 67 0.006300329 ubox
53 61 0.074602344 ubox
53 63 0.003925460 ubox
53 65 0.977644756 ubox
53 66 0.005794616 ubox
54 60 0.080692819 ubox
54 62 0.004973992 ubox
54 64 0.975595132 ubox
59 67 0.073444022 ubox
60 66 0.073757688 ubox
69 98 0.010230833 ubox
70 97 0.010348106 ubox
71 96 0.010137326 ubox
71 97 0.004878820 ubox
72 95 0.009594218 ubox
72 96 0.004732721 ubox
72 97 0.006827806 ubox
73 95 0.003262769 ubox
73 96 0.005650331 ubox
73 97 0.011809817 ubox
74 93 0.010533300 ubox
74 96 0.010408415 ubox
74 97 0.131503569 ubox
75 92 0.012146907 ubox
75 95 0.010154845 ubox
75 96 0.246094628 ubox
75 97 0.021143189 ubox
76 91 0.012731793 ubox
76 95 0.277873836 ubox
76 96 0.015986626 ubox
77 90 0.012803546 ubox
77 94 0.281730334 ubox
77 98 0.334249915 ubox
78 89 0.012723574 ubox
78 93 0.284189401 ubox
78 96 0.007775556 ubox
78 97 0.473466793 ubox
79 92 0.285034232 ubox
79 93 0.003677641 ubox
79 95 0.006753297 ubox
79 96 0.510590948 ubox
79 97 0.011001980 ubox
80 89 0.006532834 ubox
80 91 0.285273201 ubox
80 92 0.003566373 ubox
80 95 0.515300186 ubox
80 96 0.008664098 ubox
81 88 0.007174515 ubox
81 90 0.285004968 ubox
81 94 0.516020305 ubox
81 98 0.008898527 ubox
82 89 0.271488107 ubox
82 92 0.003968286 ubox
82 93 0.515897563 ubox
82 97 0.010896477 ubox
83 91 0.004990351 ubox
83 92 0.514890321 ubox
83 93 0.007185939 ubox
83 96 0.011178356 ubox
83 97 0.003530595 ubox
84 91 0.499926800 ubox
84 92 0.009312378 ubox
84 93 0.008050903 ubox
84 95 0.010682901 ubox
84 96 0.003621741 ubox
84 97 0.006888563 ubox
85 91 0.008562762 ubox
85 92 0.011331099 ubox
85 93 0.007572830 ubox
85 96 0.007488793 ubox
85 97 0.003904697 ubox
86 91 0.011498103 ubox
86 92 0.008277097 ubox
86 93 0.007055520 ubox
86 95 0.007441393 ubox
86 96 0.004148074 ubox
86 97 0.016627869 ubox
87 91 0.006699114 ubox
87 92 0.007459194 ubox
87 93 0.003414042 ubox
87 95 0.003869808 ubox
87 96 0.017439747 ubox
87 97 0.004182013 ubox
88 95 0.017197889 ubox
88 96 0.004337912 ubox
89 94 0.015974168 ubox
89 98 0.003833551 ubox
90 97 0.004525737 ubox
91 99 0.004504319 ubox
91 100 0.003510680 ubox
92 98 0.004820325 ubox
92 99 0.005117718 ubox
93 98 0.004976185 ubox
1 97 0.9500000 lbox
2 96 0.9500000 lbox
3 95 0.9500000 lbox
4 94 0.9500000 lbox
5 93 0.9500000 lbox
6 92 0.9500000 lbox
7 91 0.9500000 lbox
8 90 0.9500000 lbox
9 89 0.9500000 lbox
10 88 0.9500000 lbox
21 77 0.9500000 lbox
22 76 0.9500000 lbox
23 74 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
showpage
end
%%EOF
