%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGGCGCUGGGGAAAUGAGCAGGUAGGAGGCCGACAGCGACCUCCGCGUCUCGGAGCGAACCGUGAGCCUCCCCGUAACGAGAGAGUUUGACUGUCAGCCAAGGUCACCGGGCCCGGCGCAGGGAAGGGGUGGGGCUCGGCUGAGCCCGCGAGACCCGCCCUGCUCGCCGCAGCCCCCGCCCCGCUAGGGCCACAGGGUCCCGGU\
) } def
/len { sequence length } bind def

/coor [
[242.58526611 420.57489014]
[243.50311279 415.43157959]
[238.39646912 401.32760620]
[233.28982544 387.22363281]
[228.18319702 373.11962891]
[223.07655334 359.01565552]
[209.06277466 348.45413208]
[212.43840027 330.35311890]
[207.11933899 316.32788086]
[201.80026245 302.30264282]
[196.48118591 288.27740479]
[184.73353577 279.12088013]
[187.07443237 263.47378540]
[181.75535583 249.44856262]
[178.70500183 247.67561340]
[176.36273193 244.33596802]
[175.45606995 239.77890015]
[176.52882385 234.66566467]
[171.85050964 220.41389465]
[167.17218018 206.16210938]
[162.49385071 191.91032410]
[157.81552124 177.65853882]
[153.13719177 163.40676880]
[148.45886230 149.15498352]
[143.78053284 134.90319824]
[122.92693329 148.05703735]
[99.62316895 150.49955750]
[78.79597473 142.79052734]
[64.38992310 127.53041077]
[58.62331009 108.62563324]
[61.67895889 90.33407593]
[48.09500122 83.97200012]
[34.51104355 77.60991669]
[18.73195648 78.76361084]
[10.48786068 66.35860443]
[-3.09609795 59.99652481]
[-16.68005753 53.63444519]
[-30.26401711 47.27236557]
[-43.84797668 40.91028595]
[-57.47959137 34.65097046]
[-71.15808868 28.49477959]
[-84.83658600 22.33858871]
[-100.59645081 23.73046303]
[-109.02696228 11.45138550]
[-122.70545959 5.29519320]
[-136.38395691 -0.86099911]
[-140.69099426 -0.26983857]
[-144.57125854 -1.00717890]
[-147.65919495 -2.77536654]
[-149.72364807 -5.18854332]
[-150.68493652 -7.82417202]
[-163.96676636 -14.79501915]
[-177.24861145 -21.76586723]
[-190.53045654 -28.73671532]
[-203.81230164 -35.70756149]
[-218.73313904 -31.23473549]
[-232.10351562 -38.49337006]
[-236.27571106 -52.74567795]
[-249.55755615 -59.71652603]
[-262.83938599 -66.68737793]
[-274.25204468 -56.68158340]
[-288.50988770 -51.47785950]
[-303.68463135 -51.77996063]
[-317.72406006 -57.54703522]
[-328.72940063 -67.99913025]
[-335.21234131 -81.72269440]
[-336.29608154 -96.86170959]
[-331.83404541 -111.36876678]
[-322.42968750 -123.28189850]
[-309.35488892 -130.98994446]
[-294.37789917 -133.45046997]
[-279.52423096 -130.33070374]
[-266.80273438 -122.05255890]
[-257.93386841 -109.73559570]
[-254.11706543 -95.04557800]
[-255.86854553 -79.96921539]
[-242.58670044 -72.99836731]
[-229.30487061 -66.02751923]
[-215.20536804 -70.69009399]
[-201.63638306 -63.80987167]
[-196.84144592 -48.98940277]
[-183.55960083 -42.01855469]
[-170.27777100 -35.04770660]
[-156.99592590 -28.07686043]
[-143.71408081 -21.10601234]
[-130.22776794 -14.53949642]
[-116.54926300 -8.38330460]
[-102.87076569 -2.22711253]
[-88.08928680 -4.05931997]
[-78.68039703 8.66009045]
[-65.00189972 14.81628227]
[-51.32339859 20.97247505]
[-43.93197632 20.85100937]
[-37.48589706 27.32632637]
[-23.90193748 33.68840790]
[-10.31797791 40.05048752]
[3.26598144 46.41256714]
[16.84994125 52.77464676]
[31.65741158 51.16589355]
[40.87312317 64.02596283]
[54.45708084 70.38803864]
[68.04103851 76.75011444]
[73.64422607 66.95751953]
[82.27572632 58.62547302]
[93.51692963 52.68605423]
[106.66613007 49.94093704]
[120.78136444 50.97695923]
[134.74789429 56.09609985]
[142.11671448 43.03085709]
[149.48553467 29.96561813]
[156.85435486 16.90037727]
[149.61085510 1.61673164]
[152.87118530 -14.80990887]
[165.15641785 -25.94539261]
[181.49263000 -27.54862595]
[188.66328430 -40.72366714]
[195.83392334 -53.89871216]
[191.12071228 -68.98384094]
[198.52865601 -82.94441986]
[213.66278076 -87.49788666]
[227.54425049 -79.94274902]
[231.93745422 -64.76133728]
[224.23597717 -50.96051407]
[209.00897217 -46.72806168]
[201.83831787 -33.55301666]
[194.66766357 -20.37797356]
[201.49754333 -8.90497875]
[201.76805115 4.55258656]
[195.30157471 16.48112297]
[183.69343567 23.71338081]
[169.91960144 24.26919746]
[162.55078125 37.33443832]
[155.18196106 50.39967728]
[147.81314087 63.46491623]
[157.84448242 74.61714172]
[171.61441040 68.66824341]
[185.38432312 62.71934128]
[199.15423584 56.77043915]
[212.92414856 50.82154083]
[226.69406128 44.87263870]
[236.04006958 31.39732170]
[252.35844421 33.02301025]
[258.86224365 48.07733536]
[248.86090088 61.07369995]
[232.64297485 58.64255524]
[218.87304688 64.59145355]
[205.10313416 70.54035950]
[191.33322144 76.48925781]
[177.56330872 82.43815613]
[163.79338074 88.38705444]
[166.83076477 103.07631683]
[181.83076477 103.07631683]
[196.83076477 103.07631683]
[209.14598083 92.79454803]
[224.83348083 96.15343475]
[231.85914612 110.57631683]
[224.83348083 124.99920654]
[209.14598083 128.35809326]
[196.83076477 118.07631683]
[181.83076477 118.07631683]
[166.83076477 118.07631683]
[158.03231812 130.22486877]
[162.71064758 144.47665405]
[167.38897705 158.72843933]
[172.06730652 172.98022461]
[176.74563599 187.23199463]
[181.42395020 201.48377991]
[186.10227966 215.73556519]
[190.78060913 229.98733521]
[195.78059387 244.12948608]
[201.09967041 258.15472412]
[213.22778320 268.31442261]
[210.50642395 282.95831299]
[215.82550049 296.98355103]
[221.14457703 311.00878906]
[226.46365356 325.03405762]
[237.88485718 331.03057861]
[242.02566528 342.82360840]
[237.18052673 353.90902710]
[242.28717041 368.01300049]
[247.39381409 382.11697388]
[252.50044250 396.22094727]
[257.60708618 410.32495117]
[263.03192139 424.30963135]
[268.77218628 438.16781616]
[274.51242065 452.02600098]
[278.65856934 455.20492554]
[280.94094849 459.25210571]
[281.34106445 463.31158447]
[280.18304443 466.64428711]
[285.28970337 480.74826050]
[290.39633179 494.85223389]
[295.50296021 508.95623779]
[300.60961914 523.06018066]
[313.49606323 533.20275879]
[310.88806152 549.39324951]
[295.46850586 554.97619629]
[283.09970093 544.20843506]
[286.50564575 528.16687012]
[281.39898682 514.06286621]
[276.29235840 499.95889282]
[271.18572998 485.85491943]
[266.07907104 471.75091553]
[260.65423584 457.76626587]
[254.91398621 443.90805054]
[249.17373657 430.04986572]
[246.07122803 428.36987305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[8 176]
[9 175]
[10 174]
[11 173]
[13 171]
[14 170]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[25 162]
[31 102]
[32 101]
[33 100]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[40 92]
[41 91]
[42 90]
[44 88]
[45 87]
[46 86]
[51 85]
[52 84]
[53 83]
[54 82]
[55 81]
[58 78]
[59 77]
[60 76]
[108 134]
[109 133]
[110 132]
[111 131]
[115 126]
[116 125]
[117 124]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[151 161]
[152 160]
[153 159]
[184 206]
[185 205]
[186 204]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
