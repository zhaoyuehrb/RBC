%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAGGCCUCUACGGCCGCCGCUGCCGCCGCCGCUGCCGGGGCGCGUUCUCCUCCUACCGGUCGGGUGCCCCGGGGCGUUCCCUCUGCCGCUGCUUCUCGGCGCGGUUCCUACCCGGCCGCUCCCCGAGGCGCGGGCUCUGGCGGCCUCGACCGACUAGGACGCCCCGUGCGCCGCCCGCGGGCCGCCGCCUCCCUGGGCGCGCGGGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[94.66728210 115.41690826]
[83.79539490 125.75141144]
[72.92350006 136.08592224]
[62.05160904 146.42042542]
[51.17971802 156.75492859]
[40.30782318 167.08943176]
[40.18369675 184.58454895]
[27.68941116 196.34376526]
[10.89365959 195.44400024]
[0.17251833 205.93481445]
[-10.54862309 216.42561340]
[-21.26976395 226.91642761]
[-31.99090576 237.40724182]
[-32.32871246 252.98040771]
[-43.35091782 263.46685791]
[-58.19547653 263.04882812]
[-68.91661835 273.53964233]
[-79.63775635 284.03045654]
[-90.35890198 294.52127075]
[-94.81110382 309.70312500]
[-109.31919861 313.07424927]
[-120.04033661 323.56506348]
[-124.49253845 338.74688721]
[-139.00064087 342.11801147]
[-149.72177124 352.60882568]
[-153.61442566 368.53927612]
[-169.43058777 372.87298584]
[-180.89994812 361.15182495]
[-176.22381592 345.43350220]
[-160.21258545 341.88769531]
[-149.49145508 331.39688110]
[-145.80609131 316.96539307]
[-130.53114319 312.84390259]
[-119.81000519 302.35308838]
[-116.12465668 287.92163086]
[-100.84970856 283.80014038]
[-90.12857056 273.30932617]
[-79.40742493 262.81851196]
[-68.68628693 252.32769775]
[-68.78186798 237.47756958]
[-58.05855179 226.68566895]
[-42.48171616 226.68609619]
[-31.76057625 216.19529724]
[-21.03943443 205.70448303]
[-10.31829357 195.21366882]
[0.40284759 184.72285461]
[-1.26160574 171.94819641]
[4.82523155 160.37394714]
[16.64014626 154.32849121]
[29.97332001 156.21754456]
[40.84521103 145.88302612]
[51.71710587 135.54852295]
[62.58899689 125.21402740]
[73.46088409 114.87952423]
[84.33277893 104.54502106]
[90.54604340 90.89234924]
[91.19731903 75.90649414]
[91.84859467 60.92063904]
[92.49987793 45.93478394]
[93.15115356 30.94893074]
[84.26911926 14.81612396]
[94.27080536 0.39390966]
[94.70506287 -14.59980297]
[95.13932800 -29.59351540]
[95.57358551 -44.58722687]
[96.00785065 -59.58094025]
[96.44210815 -74.57465363]
[96.87637329 -89.56836700]
[97.31063080 -104.56208038]
[94.43198395 -113.22621155]
[97.86127472 -119.76927185]
[98.51255035 -134.75512695]
[99.16382599 -149.74098206]
[99.70661163 -164.73115540]
[100.14086914 -179.72486877]
[100.57513428 -194.71858215]
[101.00939178 -209.71229553]
[101.44365692 -224.70600891]
[101.87791443 -239.69972229]
[102.31217957 -254.69343567]
[93.15106964 -242.81596375]
[79.31546021 -237.02149963]
[64.42435455 -238.82571411]
[52.37288284 -247.75666809]
[46.31337357 -261.47827148]
[47.83082962 -276.40130615]
[56.52832794 -288.62234497]
[70.13083649 -294.94467163]
[85.08030701 -293.71453857]
[97.46636963 -285.25369263]
[104.04920959 -271.77505493]
[106.64205170 -286.54925537]
[109.23488617 -301.32345581]
[111.82772827 -316.09768677]
[110.22915649 -325.08645630]
[114.56652832 -331.06634521]
[117.37298584 -345.80145264]
[120.17943573 -360.53659058]
[122.98589325 -375.27169800]
[125.79234314 -390.00683594]
[117.17314911 -402.98168945]
[120.22919464 -417.88522339]
[132.65187073 -426.02233887]
[135.45831299 -440.75747681]
[130.43962097 -455.76156616]
[140.42152405 -466.81646729]
[143.22798157 -481.55160522]
[146.03442383 -496.28671265]
[148.84088135 -511.02185059]
[151.64733887 -525.75695801]
[154.45379639 -540.49206543]
[144.42735291 -552.49230957]
[144.51193237 -568.12963867]
[154.66757202 -580.02069092]
[170.09912109 -582.55078125]
[183.52024841 -574.52539062]
[188.59391785 -559.73376465]
[182.92449951 -545.16009521]
[169.18890381 -537.68560791]
[166.38246155 -522.95050049]
[163.57600403 -508.21539307]
[160.76954651 -493.48025513]
[157.96310425 -478.74514771]
[155.15664673 -464.01004028]
[160.37608337 -450.05987549]
[150.19343567 -437.95101929]
[147.38699341 -423.21588135]
[155.94885254 -411.08206177]
[153.31260681 -396.09857178]
[140.52746582 -387.20037842]
[137.72100830 -372.46524048]
[134.91456604 -357.73013306]
[132.10810852 -342.99499512]
[129.30165100 -328.25988770]
[126.60193634 -313.50482178]
[124.00909424 -298.73062134]
[121.41625214 -283.95642090]
[118.82341766 -269.18222046]
[117.30588531 -254.25917053]
[116.87162781 -239.26545715]
[116.43737030 -224.27174377]
[116.00310516 -209.27803040]
[115.56884766 -194.28431702]
[115.13458252 -179.29060364]
[114.70032501 -164.29689026]
[117.64741516 -157.52294922]
[114.14968109 -149.08970642]
[113.49840546 -134.10385132]
[112.84712982 -119.11799622]
[112.30434418 -104.12781525]
[111.87008667 -89.13410187]
[111.43582153 -74.14039612]
[111.00156403 -59.14667892]
[110.56729889 -44.15296555]
[110.13304138 -29.15925407]
[109.69877625 -14.16554165]
[109.26451874 0.82817054]
[117.33472443 9.83539867]
[117.09838104 22.32763290]
[108.13700867 31.60020828]
[107.48572540 46.58606339]
[106.83444977 61.57191849]
[106.18317413 76.55776978]
[105.53189850 91.54362488]
[117.38674164 92.36331940]
[127.50178528 104.54502106]
[138.37367249 114.87952423]
[149.24557495 125.21402740]
[160.11746216 135.54852295]
[170.98934937 145.88302612]
[181.86125183 156.21754456]
[192.73313904 166.55204773]
[203.60502625 176.88655090]
[214.47692871 187.22105408]
[225.34881592 197.55555725]
[236.22070312 207.89006042]
[247.09259033 218.22456360]
[264.61575317 212.39761353]
[282.58703613 216.25888062]
[296.04498291 228.65390015]
[301.31912231 246.08450317]
[297.03085327 263.69583130]
[308.34121704 273.54855347]
[319.65155029 283.40124512]
[330.96191406 293.25396729]
[347.15151978 295.86715698]
[352.72955322 311.28851318]
[341.95779419 323.65383911]
[325.91732788 320.24276733]
[321.10919189 304.56433105]
[309.79885864 294.71160889]
[298.48849487 284.85888672]
[287.17816162 275.00616455]
[276.68884277 280.34326172]
[264.98013306 281.83712769]
[253.41923523 279.28976440]
[243.36404419 272.97656250]
[236.00361633 263.61651611]
[232.21763611 252.29052734]
[232.47125244 240.31660461]
[236.75808716 229.09645081]
[225.88619995 218.76194763]
[215.01431274 208.42744446]
[204.14241028 198.09294128]
[193.27052307 187.75843811]
[182.39863586 177.42393494]
[171.52674866 167.08943176]
[160.65484619 156.75492859]
[149.78295898 146.42042542]
[138.91107178 136.08592224]
[128.03916931 125.75141144]
[117.16728210 115.41690826]
[124.43170166 128.54048157]
[119.64222717 142.75529480]
[105.91706085 148.80673218]
[92.19203949 142.75497437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[16 39]
[17 38]
[18 37]
[19 36]
[21 34]
[22 33]
[24 31]
[25 30]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[71 149]
[72 148]
[73 147]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[91 138]
[92 137]
[93 136]
[94 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
[103 127]
[104 126]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[166 212]
[167 211]
[168 210]
[169 209]
[170 208]
[171 207]
[172 206]
[173 205]
[174 204]
[175 203]
[176 202]
[177 201]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
