%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRRX1)
} def

/sequence { (\
UGAUUCGAGCGGGAAGAGGGGGGUGGGUGGGAUCGGUGGGGGAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005982555 ubox
1 11 0.009602863 ubox
1 25 0.008383790 ubox
1 35 0.575527853 ubox
1 38 0.007647369 ubox
2 6 0.007480211 ubox
2 10 0.012550494 ubox
2 24 0.006945831 ubox
2 34 0.953535179 ubox
3 24 0.077241503 ubox
3 28 0.066054052 ubox
3 33 0.953934873 ubox
3 37 0.008689375 ubox
4 13 0.017100998 ubox
4 14 0.092848702 ubox
4 15 0.177424370 ubox
4 16 0.006305245 ubox
4 17 0.005889687 ubox
4 18 0.048443969 ubox
4 19 0.003343058 ubox
4 20 0.018526952 ubox
4 21 0.018819831 ubox
4 22 0.017976665 ubox
4 23 0.078427174 ubox
4 27 0.067067448 ubox
4 31 0.030724014 ubox
4 32 0.950165986 ubox
4 36 0.006658750 ubox
4 40 0.004560631 ubox
4 41 0.006592097 ubox
4 42 0.007472630 ubox
4 43 0.009641705 ubox
4 44 0.006471974 ubox
5 12 0.026350164 ubox
5 13 0.100270861 ubox
5 14 0.204011697 ubox
5 15 0.006545294 ubox
5 16 0.003996308 ubox
5 17 0.063634094 ubox
5 19 0.025063199 ubox
5 20 0.025389872 ubox
5 21 0.024080704 ubox
5 22 0.079141977 ubox
5 23 0.010609758 ubox
5 26 0.067478944 ubox
5 27 0.020678742 ubox
5 30 0.055157177 ubox
5 31 0.945322116 ubox
5 32 0.083053007 ubox
5 36 0.024764600 ubox
5 39 0.007847604 ubox
5 40 0.009059684 ubox
5 41 0.011535800 ubox
5 42 0.010344209 ubox
5 43 0.009538947 ubox
6 11 0.029500745 ubox
6 12 0.103698192 ubox
6 13 0.206605573 ubox
6 16 0.065047693 ubox
6 18 0.027583197 ubox
6 19 0.027945871 ubox
6 20 0.026601331 ubox
6 21 0.079729143 ubox
6 22 0.014442162 ubox
6 25 0.067591686 ubox
6 26 0.028837569 ubox
6 29 0.071693225 ubox
6 30 0.940174421 ubox
6 31 0.113218113 ubox
6 35 0.033909266 ubox
6 38 0.009406900 ubox
6 39 0.011074248 ubox
6 40 0.013052649 ubox
6 41 0.010592856 ubox
6 42 0.009791094 ubox
7 24 0.041048857 ubox
7 28 0.070745045 ubox
7 34 0.034286983 ubox
7 37 0.008800531 ubox
8 33 0.033850713 ubox
9 24 0.487179895 ubox
9 28 0.678863772 ubox
9 37 0.018188654 ubox
10 23 0.489377219 ubox
10 25 0.345258038 ubox
10 27 0.684432708 ubox
10 29 0.037545185 ubox
10 35 0.017497661 ubox
10 36 0.018091087 ubox
10 38 0.006819829 ubox
11 24 0.324360529 ubox
11 28 0.035007204 ubox
11 34 0.017855119 ubox
11 37 0.006631618 ubox
11 47 0.007118537 ubox
12 33 0.016517570 ubox
12 34 0.015775022 ubox
12 46 0.007165259 ubox
12 47 0.003326584 ubox
13 33 0.010634906 ubox
13 34 0.006484912 ubox
13 46 0.003365051 ubox
14 33 0.006343791 ubox
16 34 0.013629974 ubox
17 33 0.013492402 ubox
18 34 0.006063514 ubox
18 47 0.007616593 ubox
19 33 0.005625571 ubox
19 34 0.007760209 ubox
19 46 0.007664217 ubox
19 47 0.005933968 ubox
20 33 0.007248157 ubox
20 34 0.008503942 ubox
20 46 0.005988362 ubox
20 47 0.006214445 ubox
21 33 0.007905549 ubox
21 34 0.009905928 ubox
21 46 0.006270330 ubox
21 47 0.005927595 ubox
22 33 0.008999003 ubox
22 34 0.060407696 ubox
22 46 0.005916961 ubox
22 47 0.018821522 ubox
23 33 0.060652022 ubox
23 37 0.006160060 ubox
23 46 0.019051567 ubox
24 32 0.060641784 ubox
24 35 0.017238211 ubox
24 36 0.014137303 ubox
24 45 0.018833491 ubox
25 34 0.027973654 ubox
25 47 0.020119406 ubox
26 33 0.025964939 ubox
26 34 0.027035057 ubox
26 46 0.019556298 ubox
26 47 0.119974315 ubox
27 33 0.026184917 ubox
27 46 0.121489746 ubox
28 32 0.024282698 ubox
28 35 0.007289233 ubox
28 45 0.120797395 ubox
29 34 0.010856850 ubox
29 47 0.240303417 ubox
30 46 0.243099802 ubox
30 47 0.028738523 ubox
31 46 0.029077735 ubox
33 39 0.010459913 ubox
33 40 0.097284056 ubox
33 41 0.065877584 ubox
33 42 0.029529588 ubox
33 43 0.243349464 ubox
33 45 0.019599684 ubox
34 38 0.010481856 ubox
34 39 0.099474465 ubox
34 40 0.067126783 ubox
34 41 0.037127042 ubox
34 42 0.242773178 ubox
34 44 0.019947782 ubox
35 47 0.588017574 ubox
36 46 0.598110849 ubox
37 45 0.595894805 ubox
38 47 0.440235340 ubox
39 46 0.444867782 ubox
39 47 0.345336892 ubox
40 46 0.349167838 ubox
40 47 0.374327653 ubox
41 46 0.378813998 ubox
41 47 0.058885440 ubox
42 46 0.058668201 ubox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
showpage
end
%%EOF
