%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EEF1A1)
} def

/sequence { (\
CUUUUUCGCAACGGGUUUGCCGCCAGAACACAGGUGUCGUGAAAACUACCCCUAAAAGCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.005676605 ubox
1 15 0.003996248 ubox
1 26 0.017853165 ubox
1 33 0.009091157 ubox
1 34 0.007754627 ubox
1 58 0.244771364 ubox
2 11 0.021211909 ubox
2 13 0.005813205 ubox
2 14 0.003989626 ubox
2 25 0.017287438 ubox
2 26 0.005986331 ubox
2 27 0.021518317 ubox
2 28 0.024358126 ubox
2 32 0.011303914 ubox
2 33 0.007886971 ubox
2 43 0.005712771 ubox
2 44 0.025988662 ubox
2 45 0.045367852 ubox
2 55 0.011930281 ubox
2 56 0.023334719 ubox
2 57 0.248896944 ubox
2 58 0.062676445 ubox
2 62 0.035052127 ubox
2 63 0.044158594 ubox
3 10 0.022430286 ubox
3 11 0.016268914 ubox
3 13 0.003860707 ubox
3 25 0.006353322 ubox
3 26 0.022631009 ubox
3 27 0.027956325 ubox
3 28 0.057206244 ubox
3 32 0.011116260 ubox
3 42 0.005798939 ubox
3 43 0.027754997 ubox
3 44 0.046857319 ubox
3 45 0.453539659 ubox
3 54 0.011255258 ubox
3 55 0.025340883 ubox
3 56 0.247587484 ubox
3 57 0.080005575 ubox
3 58 0.042306799 ubox
3 61 0.035540950 ubox
3 62 0.061568195 ubox
3 63 0.046593196 ubox
4 10 0.017683744 ubox
4 11 0.019670389 ubox
4 13 0.003365916 ubox
4 25 0.021667569 ubox
4 26 0.027900659 ubox
4 27 0.066850662 ubox
4 28 0.023600106 ubox
4 32 0.005663211 ubox
4 41 0.005551317 ubox
4 42 0.027384482 ubox
4 43 0.040801916 ubox
4 44 0.532393095 ubox
4 45 0.018196878 ubox
4 54 0.024057544 ubox
4 55 0.243149914 ubox
4 56 0.083765176 ubox
4 57 0.053409398 ubox
4 58 0.026926339 ubox
4 61 0.061957606 ubox
4 62 0.061565527 ubox
4 63 0.173314595 ubox
5 10 0.019694996 ubox
5 11 0.014719639 ubox
5 15 0.016789235 ubox
5 25 0.025148565 ubox
5 26 0.067791532 ubox
5 27 0.024027640 ubox
5 28 0.258078885 ubox
5 41 0.025767129 ubox
5 42 0.032147669 ubox
5 43 0.549963351 ubox
5 44 0.017569938 ubox
5 45 0.008909298 ubox
5 54 0.225927754 ubox
5 55 0.083634310 ubox
5 56 0.054963003 ubox
5 57 0.033387123 ubox
5 58 0.019540644 ubox
5 61 0.059531561 ubox
5 62 0.235102233 ubox
5 63 0.020468570 ubox
6 10 0.014594175 ubox
6 13 0.003723607 ubox
6 14 0.027686377 ubox
6 15 0.011264723 ubox
6 25 0.065125506 ubox
6 26 0.019323539 ubox
6 27 0.307483753 ubox
6 41 0.018616571 ubox
6 42 0.555520306 ubox
6 43 0.013223964 ubox
6 44 0.010046393 ubox
6 54 0.077196743 ubox
6 55 0.051143924 ubox
6 56 0.032206600 ubox
6 57 0.021881923 ubox
6 61 0.237551549 ubox
6 62 0.025602321 ubox
7 13 0.058467978 ubox
7 14 0.017929331 ubox
7 22 0.031678516 ubox
7 26 0.312443573 ubox
7 36 0.005366611 ubox
7 39 0.029573350 ubox
7 41 0.556805021 ubox
8 12 0.060423053 ubox
8 16 0.008963532 ubox
8 20 0.126837201 ubox
8 21 0.022991831 ubox
8 23 0.077604632 ubox
8 35 0.005629147 ubox
8 37 0.013793297 ubox
8 38 0.027080215 ubox
8 40 0.549653027 ubox
8 59 0.409585010 ubox
9 15 0.009629170 ubox
9 19 0.129201861 ubox
9 22 0.072180243 ubox
9 34 0.005677827 ubox
9 36 0.027489323 ubox
9 39 0.548333593 ubox
9 41 0.016678016 ubox
9 58 0.409604819 ubox
10 17 0.015186140 ubox
10 18 0.128677476 ubox
10 35 0.024661069 ubox
10 40 0.012390146 ubox
11 16 0.014247762 ubox
11 17 0.116021254 ubox
11 35 0.068870037 ubox
11 37 0.423124300 ubox
11 40 0.056508251 ubox
12 19 0.050102830 ubox
12 22 0.438092393 ubox
12 34 0.069738302 ubox
12 36 0.423315186 ubox
12 39 0.064134257 ubox
13 18 0.039249067 ubox
13 21 0.584001598 ubox
13 24 0.065417267 ubox
13 35 0.126499260 ubox
13 38 0.076756927 ubox
13 47 0.057010203 ubox
13 50 0.036047132 ubox
13 51 0.617554157 ubox
13 52 0.293918342 ubox
13 53 0.077294604 ubox
13 60 0.071278709 ubox
14 20 0.585113862 ubox
14 21 0.193203372 ubox
14 23 0.065416214 ubox
14 24 0.095100035 ubox
14 37 0.072652256 ubox
14 38 0.045889917 ubox
14 46 0.059312138 ubox
14 47 0.126554693 ubox
14 49 0.035139596 ubox
14 50 0.620040769 ubox
14 51 0.291697210 ubox
14 52 0.079649718 ubox
14 53 0.012083548 ubox
14 59 0.071006224 ubox
14 60 0.131902657 ubox
15 20 0.193313015 ubox
15 23 0.095272272 ubox
15 29 0.091858878 ubox
15 31 0.037701941 ubox
15 35 0.006482577 ubox
15 37 0.044287504 ubox
15 46 0.136676319 ubox
15 49 0.620795244 ubox
15 50 0.287787072 ubox
15 51 0.079212973 ubox
15 52 0.012110823 ubox
15 59 0.132254600 ubox
16 22 0.092874016 ubox
16 27 0.047370709 ubox
16 28 0.090001662 ubox
16 30 0.034579204 ubox
16 33 0.008716508 ubox
16 34 0.035484067 ubox
16 36 0.007295277 ubox
16 39 0.003909422 ubox
16 42 0.047280256 ubox
16 43 0.357601788 ubox
16 44 0.073832845 ubox
16 45 0.144029830 ubox
16 48 0.560963280 ubox
16 56 0.006639367 ubox
16 57 0.067525381 ubox
16 58 0.131803388 ubox
16 63 0.004429804 ubox
17 26 0.055378470 ubox
17 27 0.087867336 ubox
17 28 0.026297359 ubox
17 32 0.008080574 ubox
17 33 0.041756488 ubox
17 41 0.059306208 ubox
17 42 0.587678586 ubox
17 43 0.116388734 ubox
17 44 0.151719146 ubox
17 45 0.084718839 ubox
17 55 0.009329563 ubox
17 56 0.066932782 ubox
17 57 0.128440137 ubox
17 62 0.006061951 ubox
18 25 0.059197852 ubox
18 26 0.085185177 ubox
18 27 0.027497114 ubox
18 30 0.036272063 ubox
18 32 0.044338336 ubox
18 36 0.037752380 ubox
18 39 0.173438718 ubox
18 41 0.588750723 ubox
18 42 0.105563801 ubox
18 43 0.129676117 ubox
18 44 0.087785016 ubox
18 48 0.014637318 ubox
18 54 0.010802717 ubox
18 55 0.062298377 ubox
18 56 0.120667650 ubox
18 57 0.003776017 ubox
18 61 0.006367203 ubox
19 24 0.060799085 ubox
19 29 0.037923829 ubox
19 31 0.044679373 ubox
19 35 0.101581232 ubox
19 37 0.067140784 ubox
19 38 0.289134506 ubox
19 40 0.607870176 ubox
19 47 0.014894579 ubox
19 53 0.009458702 ubox
19 59 0.005227510 ubox
19 60 0.005869290 ubox
20 34 0.108104557 ubox
20 36 0.051240316 ubox
20 39 0.606497573 ubox
20 58 0.005789873 ubox
21 33 0.108094558 ubox
21 36 0.711559359 ubox
21 39 0.036415523 ubox
21 41 0.089957192 ubox
22 35 0.841171705 ubox
22 37 0.011755047 ubox
22 38 0.035373778 ubox
22 40 0.089945823 ubox
22 59 0.020387831 ubox
23 34 0.871101619 ubox
23 36 0.012249969 ubox
23 39 0.089594324 ubox
23 58 0.020584999 ubox
24 33 0.871202607 ubox
24 36 0.040004809 ubox
24 41 0.111080228 ubox
25 35 0.039219621 ubox
25 40 0.111280155 ubox
25 47 0.006614194 ubox
25 53 0.008157969 ubox
26 38 0.139979736 ubox
26 46 0.006806970 ubox
26 52 0.008493912 ubox
27 37 0.112125258 ubox
28 35 0.116630318 ubox
28 37 0.157950706 ubox
28 40 0.008413621 ubox
29 34 0.118549396 ubox
29 36 0.179587533 ubox
29 39 0.008757015 ubox
29 41 0.025632262 ubox
30 35 0.149484369 ubox
30 37 0.036618066 ubox
30 40 0.025772692 ubox
31 36 0.039494081 ubox
31 39 0.025776366 ubox
31 41 0.003687584 ubox
32 40 0.003647713 ubox
32 53 0.344396925 ubox
33 47 0.011289096 ubox
33 50 0.095793302 ubox
33 51 0.121126274 ubox
33 52 0.361297256 ubox
33 53 0.007438997 ubox
33 60 0.037722876 ubox
34 46 0.011755937 ubox
34 49 0.096185795 ubox
34 50 0.122664398 ubox
34 51 0.360569999 ubox
34 52 0.007616133 ubox
34 59 0.037767437 ubox
35 45 0.011733525 ubox
35 48 0.095888081 ubox
35 58 0.037508472 ubox
36 46 0.032429666 ubox
36 47 0.080197191 ubox
36 49 0.380561986 ubox
37 45 0.032155033 ubox
37 48 0.376465576 ubox
39 46 0.443471046 ubox
39 49 0.100418855 ubox
39 59 0.006507610 ubox
40 45 0.440239961 ubox
40 48 0.100598066 ubox
40 54 0.010088996 ubox
40 58 0.006452521 ubox
40 61 0.004247152 ubox
41 47 0.096783707 ubox
41 53 0.009864693 ubox
41 60 0.004765038 ubox
46 58 0.063803506 ubox
47 54 0.036363426 ubox
47 57 0.062497137 ubox
48 53 0.034842432 ubox
52 58 0.067856403 ubox
53 57 0.062184384 ubox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
showpage
end
%%EOF
