%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ORC6)
} def

/sequence { (\
GCGCGCGGGUUUCGUUGACCCGCGGCGUUCACGGGAAUUGUUCGCUUUAGUGCCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.004831898 ubox
1 26 0.377185809 ubox
1 28 0.221568016 ubox
1 45 0.008240301 ubox
1 53 0.052806306 ubox
1 57 0.032850918 ubox
1 59 0.683915548 ubox
2 22 0.004492011 ubox
2 24 0.008345569 ubox
2 25 0.377426424 ubox
2 27 0.244965845 ubox
2 44 0.008246581 ubox
2 52 0.052977817 ubox
2 55 0.005420658 ubox
2 56 0.032499636 ubox
2 58 0.686126681 ubox
3 23 0.010582741 ubox
3 26 0.247467400 ubox
3 43 0.007672255 ubox
3 51 0.052627296 ubox
3 53 0.010984722 ubox
3 54 0.005830708 ubox
3 57 0.685643464 ubox
3 59 0.047004969 ubox
4 22 0.009890717 ubox
4 24 0.546054415 ubox
4 25 0.175245209 ubox
4 50 0.052303341 ubox
4 52 0.011304529 ubox
4 55 0.028787471 ubox
4 56 0.682369051 ubox
4 58 0.047052138 ubox
5 21 0.005263726 ubox
5 23 0.983443349 ubox
5 51 0.006640978 ubox
5 53 0.013923395 ubox
5 54 0.004909689 ubox
5 57 0.046109942 ubox
6 22 0.998123912 ubox
6 50 0.006629549 ubox
6 52 0.014203244 ubox
6 55 0.009022665 ubox
6 56 0.045165436 ubox
7 20 0.003430315 ubox
7 21 0.999880635 ubox
7 54 0.006141462 ubox
8 19 0.003230069 ubox
8 20 0.999913450 ubox
8 53 0.005692246 ubox
8 54 0.010752000 ubox
9 19 0.999905314 ubox
9 53 0.010759780 ubox
10 18 0.998423018 ubox
10 52 0.010002514 ubox
11 17 0.986538190 ubox
11 18 0.026414733 ubox
12 17 0.033517247 ubox
12 18 0.017322781 ubox
13 17 0.023360128 ubox
13 52 0.004271947 ubox
14 45 0.003898817 ubox
14 51 0.005255845 ubox
15 44 0.003281526 ubox
15 50 0.006593728 ubox
16 44 0.004664132 ubox
16 49 0.007791207 ubox
17 43 0.005497500 ubox
17 48 0.007900013 ubox
18 42 0.005452184 ubox
18 47 0.007804878 ubox
19 35 0.008021091 ubox
20 34 0.008143980 ubox
21 33 0.008145882 ubox
22 32 0.008142073 ubox
22 45 0.022669807 ubox
22 53 0.004633888 ubox
23 33 0.004452133 ubox
23 44 0.022820408 ubox
23 50 0.003518745 ubox
23 52 0.004732280 ubox
23 55 0.174143051 ubox
24 30 0.029737687 ubox
24 32 0.015312404 ubox
24 39 0.003730583 ubox
24 42 0.122090197 ubox
24 43 0.055928920 ubox
24 46 0.272696513 ubox
24 47 0.012624838 ubox
24 48 0.004256465 ubox
24 54 0.586937877 ubox
24 57 0.004779086 ubox
24 60 0.440630205 ubox
25 29 0.019371189 ubox
25 41 0.159330291 ubox
25 42 0.043096880 ubox
25 45 0.294545938 ubox
25 51 0.008420578 ubox
25 53 0.587537336 ubox
25 57 0.026367960 ubox
25 59 0.562225063 ubox
26 33 0.043016112 ubox
26 40 0.165389096 ubox
26 44 0.294680124 ubox
26 50 0.009703652 ubox
26 52 0.586971718 ubox
26 55 0.028611506 ubox
26 56 0.026348416 ubox
26 58 0.562866277 ubox
27 32 0.045925891 ubox
27 38 0.286473407 ubox
27 39 0.119433832 ubox
27 43 0.294249051 ubox
27 45 0.036705175 ubox
27 51 0.533156424 ubox
27 53 0.007551823 ubox
27 54 0.029471480 ubox
27 57 0.566135421 ubox
27 59 0.122128690 ubox
28 34 0.004297953 ubox
28 35 0.005762007 ubox
28 36 0.032266585 ubox
28 37 0.325885041 ubox
28 40 0.003494569 ubox
28 44 0.036687633 ubox
28 50 0.369002887 ubox
28 52 0.006717961 ubox
28 56 0.561570751 ubox
28 58 0.120324595 ubox
29 33 0.004729343 ubox
29 34 0.006419242 ubox
29 35 0.035748949 ubox
29 36 0.337043947 ubox
29 49 0.348701406 ubox
29 55 0.310851410 ubox
29 56 0.041970888 ubox
30 34 0.036559269 ubox
30 35 0.337455204 ubox
30 40 0.263699594 ubox
30 52 0.364042694 ubox
30 55 0.045172544 ubox
31 39 0.246682991 ubox
31 41 0.134604759 ubox
31 51 0.368258214 ubox
32 40 0.139229138 ubox
32 44 0.272309347 ubox
32 50 0.368395947 ubox
32 52 0.030036221 ubox
32 55 0.470761735 ubox
32 58 0.024550122 ubox
33 39 0.128001455 ubox
33 42 0.012612505 ubox
33 43 0.273918397 ubox
33 46 0.370053530 ubox
33 47 0.092186901 ubox
33 48 0.029618805 ubox
33 51 0.026943534 ubox
33 54 0.479672260 ubox
33 57 0.024418988 ubox
33 60 0.084588151 ubox
34 38 0.083960549 ubox
34 41 0.021578948 ubox
34 42 0.263673373 ubox
34 43 0.218303292 ubox
34 45 0.381031447 ubox
34 46 0.108677072 ubox
34 47 0.035846299 ubox
34 48 0.105261223 ubox
34 53 0.476988024 ubox
34 54 0.133579724 ubox
34 59 0.084969602 ubox
34 60 0.097118077 ubox
35 41 0.224559472 ubox
35 42 0.212944260 ubox
35 43 0.519147832 ubox
35 45 0.109955503 ubox
35 46 0.027521982 ubox
35 47 0.129441105 ubox
35 48 0.144670741 ubox
35 53 0.138032244 ubox
35 59 0.098338098 ubox
36 41 0.193821778 ubox
36 42 0.512785840 ubox
36 46 0.124752522 ubox
36 47 0.149603449 ubox
36 48 0.024774918 ubox
37 41 0.390957595 ubox
37 46 0.146375482 ubox
37 47 0.027699373 ubox
37 51 0.431268817 ubox
38 50 0.439854976 ubox
38 56 0.040334705 ubox
39 49 0.441481052 ubox
39 52 0.004316988 ubox
39 55 0.045570593 ubox
39 58 0.234366178 ubox
40 48 0.435527870 ubox
40 51 0.003700408 ubox
40 53 0.010173560 ubox
40 54 0.047084163 ubox
40 57 0.304760655 ubox
40 59 0.043441806 ubox
41 50 0.008696566 ubox
41 52 0.009305247 ubox
41 56 0.299997224 ubox
41 58 0.035446697 ubox
42 49 0.008841616 ubox
42 55 0.269849769 ubox
42 56 0.069135982 ubox
43 52 0.145273603 ubox
43 55 0.125183039 ubox
43 58 0.197837991 ubox
44 51 0.150671060 ubox
44 53 0.348618836 ubox
44 54 0.090245876 ubox
44 57 0.210807999 ubox
44 59 0.015609393 ubox
45 50 0.150968161 ubox
45 52 0.360578553 ubox
45 56 0.210848454 ubox
45 58 0.015643302 ubox
46 55 0.207868431 ubox
47 55 0.010197152 ubox
47 56 0.009133877 ubox
48 55 0.016865671 ubox
50 57 0.021160310 ubox
50 59 0.039758727 ubox
51 56 0.021010059 ubox
51 58 0.039783965 ubox
52 57 0.039154206 ubox
52 59 0.022890110 ubox
53 58 0.022978348 ubox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
showpage
end
%%EOF
