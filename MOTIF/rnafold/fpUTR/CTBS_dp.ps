%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CTBS)
} def

/sequence { (\
GACGCGCAGCAGGCCCCGCCCACCCAGGCGGUAGGAACCCACUCCGGCCCGCUAGACCUGCUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 63 0.009670455 ubox
4 61 0.015849284 ubox
4 62 0.008808913 ubox
4 64 0.075114727 ubox
5 60 0.015885987 ubox
5 63 0.074885274 ubox
6 59 0.014504999 ubox
6 61 0.073248857 ubox
6 62 0.017992020 ubox
6 64 0.995555777 ubox
7 60 0.074846123 ubox
7 63 0.996796095 ubox
8 53 0.053271593 ubox
8 59 0.056828522 ubox
8 62 0.996627515 ubox
9 52 0.072754799 ubox
9 58 0.029930562 ubox
9 61 0.996877654 ubox
10 51 0.077028120 ubox
10 60 0.996868326 ubox
11 53 0.004747405 ubox
11 59 0.995650967 ubox
12 20 0.031491344 ubox
12 21 0.006091078 ubox
12 49 0.309895450 ubox
12 50 0.021460513 ubox
12 52 0.003196753 ubox
12 53 0.014382881 ubox
12 58 0.949749300 ubox
13 19 0.040183212 ubox
13 20 0.006394349 ubox
13 29 0.010399297 ubox
13 32 0.007919344 ubox
13 48 0.353058345 ubox
13 49 0.017433611 ubox
13 52 0.034927203 ubox
13 57 0.929726832 ubox
14 18 0.043785795 ubox
14 28 0.012061459 ubox
14 31 0.017569238 ubox
14 35 0.247204853 ubox
14 47 0.386029892 ubox
14 51 0.045489445 ubox
15 27 0.013225827 ubox
15 28 0.004885911 ubox
15 30 0.016211230 ubox
15 31 0.052764626 ubox
15 34 0.246789237 ubox
15 35 0.020187374 ubox
15 46 0.385298558 ubox
15 47 0.011933041 ubox
16 27 0.007708110 ubox
16 28 0.016710759 ubox
16 30 0.038102596 ubox
16 31 0.932273985 ubox
16 34 0.014464095 ubox
16 46 0.010407561 ubox
16 47 0.003825574 ubox
17 27 0.025024117 ubox
17 30 0.947320524 ubox
17 46 0.003765753 ubox
17 51 0.023721194 ubox
18 29 0.985497092 ubox
18 48 0.005819527 ubox
18 50 0.009999520 ubox
18 52 0.054912036 ubox
19 28 0.984233846 ubox
19 35 0.003568824 ubox
19 47 0.005879258 ubox
19 51 0.054823944 ubox
20 27 0.980961771 ubox
20 28 0.060476789 ubox
20 34 0.003616847 ubox
20 35 0.006028411 ubox
20 46 0.005825560 ubox
20 47 0.005574663 ubox
21 27 0.082235768 ubox
21 34 0.006048058 ubox
21 46 0.005581723 ubox
22 32 0.009195919 ubox
23 31 0.009446917 ubox
23 47 0.025168010 ubox
24 30 0.009416816 ubox
24 31 0.003711892 ubox
24 46 0.025027965 ubox
24 47 0.026701864 ubox
25 30 0.003795639 ubox
25 46 0.026722243 ubox
26 43 0.015694773 ubox
26 53 0.015888919 ubox
27 42 0.016294588 ubox
27 43 0.014547858 ubox
27 44 0.007849722 ubox
27 45 0.028547272 ubox
27 49 0.029030050 ubox
27 50 0.006995501 ubox
27 52 0.014705880 ubox
27 53 0.146667011 ubox
28 42 0.015439445 ubox
28 43 0.006294127 ubox
28 44 0.028566812 ubox
28 48 0.029164310 ubox
28 49 0.006038478 ubox
28 52 0.156024078 ubox
29 46 0.021641072 ubox
29 47 0.021180307 ubox
29 51 0.157233854 ubox
30 39 0.022286259 ubox
30 40 0.014358808 ubox
30 43 0.027272330 ubox
30 45 0.031086966 ubox
30 49 0.271457630 ubox
30 50 0.152540868 ubox
30 53 0.026569907 ubox
31 38 0.023118152 ubox
31 39 0.013892689 ubox
31 42 0.029466781 ubox
31 44 0.031260699 ubox
31 48 0.301819298 ubox
31 49 0.140710487 ubox
31 52 0.065836110 ubox
32 37 0.022802287 ubox
32 41 0.030327652 ubox
32 47 0.300921383 ubox
32 51 0.073314996 ubox
32 54 0.345203588 ubox
32 56 0.009646606 ubox
33 43 0.048215999 ubox
33 53 0.365052326 ubox
34 40 0.096364335 ubox
34 42 0.051963288 ubox
34 43 0.023917545 ubox
34 44 0.012972254 ubox
34 45 0.760127827 ubox
34 49 0.176672288 ubox
34 50 0.393736596 ubox
34 52 0.364808513 ubox
34 53 0.084710976 ubox
35 39 0.094912911 ubox
35 42 0.026502846 ubox
35 43 0.010644491 ubox
35 44 0.761000231 ubox
35 48 0.176924790 ubox
35 49 0.394165606 ubox
35 52 0.088331233 ubox
36 43 0.729705126 ubox
38 47 0.413390532 ubox
39 46 0.413245601 ubox
39 47 0.462550332 ubox
40 46 0.463633926 ubox
42 55 0.035603299 ubox
43 54 0.034313529 ubox
43 56 0.100872691 ubox
44 55 0.109573652 ubox
45 51 0.047461430 ubox
46 50 0.064512572 ubox
46 53 0.228867732 ubox
46 58 0.005867065 ubox
47 52 0.236908531 ubox
47 57 0.006681073 ubox
51 61 0.003505870 ubox
52 60 0.003611084 ubox
54 59 0.003302658 ubox
54 62 0.004470542 ubox
55 61 0.004717685 ubox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
showpage
end
%%EOF
