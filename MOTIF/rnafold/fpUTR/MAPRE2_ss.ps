%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGACCCGCUAGGCAGGAAGAGGUCACUAAAAAUACUAUCGUGCUGUCAAUGUAGAAUGAAGGGUUAAGCGCUCAAACCCGCGCCCGCGCGCACCGAAACGGAAGAACUUCCUUGAUUAGCAUAGUAUCGACCCUGGGGCCGCGCUGCGAGGCGGAGGUUCGGUCCCAGCUGGGGUGAAGUGUGCAGACCGGUUGCGAUUGUGGUCAGACGCAGCACCUACUUCUAAUCUGAGGACCCGCGAUUUACACUUUUG\
CUGAAUAGGACACUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[114.19771576 1008.62854004]
[101.16215515 1017.04602051]
[85.67038727 1016.16015625]
[73.67931366 1006.31164551]
[69.79974365 991.28735352]
[75.52346039 976.86450195]
[88.64956665 968.58892822]
[89.50589752 953.61340332]
[90.36222839 938.63787842]
[91.21856689 923.66235352]
[91.47559357 908.66455078]
[91.13290405 893.66845703]
[80.21910095 883.59747314]
[79.65793610 868.39416504]
[90.29530334 857.01507568]
[89.95261383 842.01898193]
[89.60992432 827.02288818]
[81.58387756 814.47570801]
[89.00387573 800.50238037]
[88.66118622 785.50628662]
[88.31849670 770.51019287]
[87.97580719 755.51416016]
[87.63311768 740.51806641]
[87.20478058 725.52416992]
[86.69080353 710.53295898]
[79.01056671 723.41760254]
[66.87473297 732.23358154]
[52.24695587 735.55444336]
[37.49408722 732.84283447]
[25.00323105 724.53747559]
[16.79548454 711.98229980]
[14.19890499 697.20874023]
[17.63363838 682.60729980]
[26.54392052 670.54052734]
[39.48801804 662.96093750]
[54.37149811 661.09490967]
[68.78613281 665.24444580]
[80.39953613 674.73803711]
[87.33331299 688.04217529]
[88.70227814 673.10473633]
[90.07125092 658.16735840]
[91.44021606 643.22991943]
[92.80918884 628.29254150]
[94.17815399 613.35516357]
[86.69406891 603.88195801]
[87.68785095 591.44854736]
[97.17069244 582.74218750]
[98.71021271 567.82141113]
[100.24973297 552.90063477]
[91.33617401 545.85021973]
[86.87080383 535.26940918]
[88.06255341 523.72668457]
[94.73160553 514.08459473]
[105.32557678 508.79003906]
[107.20557404 493.90829468]
[109.08557129 479.02658081]
[110.96556854 464.14486694]
[100.09706879 451.28848267]
[101.94437408 434.21499634]
[115.84826660 423.56921387]
[117.55813599 408.66699219]
[119.26801300 393.76477051]
[120.97788239 378.86251831]
[120.12155151 363.88699341]
[116.72409821 349.27682495]
[113.32664490 334.66662598]
[109.92919159 320.05645752]
[95.27672577 311.76693726]
[91.08853149 295.11233521]
[100.43778992 280.30551147]
[96.87365723 265.73510742]
[93.30952454 251.16468811]
[89.74539185 236.59426880]
[86.18125916 222.02384949]
[74.35717773 216.95883179]
[67.49685669 205.84861755]
[68.28785706 192.62026978]
[76.66534424 182.10258484]
[73.26789093 167.49240112]
[69.87044525 152.88221741]
[66.47299194 138.27204895]
[56.97780228 126.65991974]
[43.33332443 120.42869568]
[29.68884468 114.19747162]
[16.04436493 107.96624756]
[-0.22020486 110.06286621]
[-9.95175648 96.86328888]
[-3.13930416 81.94609833]
[13.20908451 80.65682983]
[22.27558899 94.32176208]
[35.92007065 100.55299377]
[49.56454849 106.78421783]
[63.20903015 113.01544189]
[67.78888702 107.07617188]
[55.91035461 97.91645813]
[44.03182220 88.75673676]
[32.15342712 79.59683228]
[41.31351471 67.71858215]
[53.19153976 76.87820435]
[65.07007599 86.03792572]
[76.94860840 95.19763947]
[81.52846527 89.25837708]
[72.03327942 77.64624786]
[62.53809357 66.03412628]
[53.04290390 54.42200089]
[37.52202988 49.12723541]
[34.61288834 32.98818970]
[47.30814743 22.60732269]
[62.54801941 28.66358757]
[64.65502930 44.92681503]
[74.15021515 56.53893661]
[83.64540100 68.15106201]
[93.14058685 79.76318359]
[106.24369812 72.46191406]
[101.36467743 58.27759171]
[96.48565674 44.09326172]
[91.60663605 29.90893555]
[86.72761536 15.72460747]
[71.71797180 12.15889454]
[61.03530884 1.02856719]
[58.08841324 -14.11472702]
[63.81763458 -28.43881798]
[76.39479828 -37.37294006]
[91.80657196 -38.06624985]
[105.13512421 -30.29751015]
[112.12735748 -16.54570198]
[110.55207062 -1.19897437]
[100.91194153 10.84558582]
[105.79096222 25.02991295]
[110.66998291 39.21424103]
[115.54900360 53.39856720]
[120.42802429 67.58289337]
[127.92790222 67.62573242]
[142.92765808 67.71141815]
[150.42753601 67.75425720]
[155.46827698 53.62659073]
[160.50901794 39.49892426]
[165.54975891 25.37125969]
[170.59049988 11.24359322]
[175.63124084 -2.88407207]
[180.67198181 -17.01173782]
[185.71272278 -31.13940239]
[190.75346375 -45.26706696]
[195.30715942 -59.55915833]
[199.36845398 -73.99889374]
[203.42974854 -88.43862152]
[207.49105835 -102.87835693]
[202.92086792 -118.62781525]
[214.46888733 -130.27148438]
[230.25550842 -125.83136749]
[234.04080200 -109.87506866]
[221.93078613 -98.81705475]
[217.86949158 -84.37732697]
[213.80818176 -69.93759155]
[209.74688721 -55.49786377]
[223.21580505 -62.09999466]
[237.44219971 -57.34498978]
[244.23426819 -43.97084808]
[239.68107605 -29.67859840]
[226.40440369 -22.69792557]
[212.04914856 -27.04840279]
[204.88113403 -40.22632599]
[199.84039307 -26.09866142]
[194.79965210 -11.97099686]
[189.75891113 2.15666866]
[184.71817017 16.28433418]
[179.67742920 30.41199875]
[174.63668823 44.53966522]
[169.59594727 58.66733170]
[164.55520630 72.79499817]
[160.98287964 113.49768066]
[136.84452820 140.65155029]
[105.64238739 146.93144226]
[81.08316803 134.87458801]
[84.48062134 149.48477173]
[87.87807465 164.09495544]
[91.27552032 178.70512390]
[106.30231476 187.69659424]
[110.08380890 204.44821167]
[100.75167084 218.45971680]
[104.31580353 233.03013611]
[107.87993622 247.60055542]
[111.44406891 262.17095947]
[115.00820160 276.74136353]
[127.23157501 282.34432983]
[133.90924072 293.79089355]
[132.80342102 306.80157471]
[124.53937531 316.65899658]
[127.93682861 331.26919556]
[131.33427429 345.87936401]
[134.73173523 360.48953247]
[141.86589050 354.04702759]
[151.77001953 350.27603149]
[166.75802612 349.67642212]
[181.74603271 349.07681274]
[196.73403931 348.47723389]
[211.72206116 347.87762451]
[226.71006775 347.27801514]
[240.18992615 338.99526978]
[253.21630859 346.21765137]
[268.20431519 345.61804199]
[283.19232178 345.01843262]
[296.75869751 335.80508423]
[311.40103149 343.18981934]
[312.05654907 359.57583618]
[298.05093384 368.10665894]
[283.79193115 360.00643921]
[268.80392456 360.60604858]
[253.81590271 361.20565796]
[241.40809631 369.44552612]
[227.30966187 362.26602173]
[212.32165527 362.86563110]
[197.33364868 363.46524048]
[182.34562683 364.06481934]
[167.35762024 364.66442871]
[152.36961365 365.26403809]
[166.62237549 369.93936157]
[172.78369141 383.61553955]
[166.84219360 397.38867188]
[152.66613770 402.29165649]
[139.48489380 395.13238525]
[135.88011169 380.57238770]
[134.17024231 395.47463989]
[132.46037292 410.37686157]
[130.75048828 425.27908325]
[140.27230835 434.77325439]
[142.56607056 447.82519531]
[137.01693726 459.64501953]
[125.84729004 466.02487183]
[123.96729279 480.90658569]
[122.08729553 495.78829956]
[120.20729828 510.67001343]
[132.38119507 525.22406006]
[130.05143738 543.73181152]
[115.17052460 554.44012451]
[113.63100433 569.36090088]
[112.09148407 584.28173828]
[119.99405670 600.93322754]
[109.11555481 614.72412109]
[107.74658966 629.66149902]
[106.37761688 644.59893799]
[105.00865173 659.53631592]
[103.63967896 674.47369385]
[102.27071381 689.41113281]
[106.56949615 696.93524170]
[105.97908783 704.67285156]
[101.68199158 710.01898193]
[102.19596863 725.01019287]
[105.60677338 733.44219971]
[102.62920380 740.17535400]
[102.97189331 755.17144775]
[103.31458282 770.16754150]
[103.65727234 785.16363525]
[103.99996185 800.15972900]
[112.05052185 813.77947998]
[104.60601044 826.68023682]
[104.94869232 841.67633057]
[105.29138184 856.67236328]
[116.43743896 867.55371094]
[116.57135010 882.76678467]
[106.12898254 893.32574463]
[106.47167206 908.32183838]
[116.56157684 897.22259521]
[131.41209412 895.11016846]
[144.19680786 902.95556641]
[149.03894043 917.15252686]
[143.71266174 931.17504883]
[130.66635132 938.57733154]
[115.89704132 935.95672607]
[106.19409943 924.51867676]
[105.33776855 939.49420166]
[104.48143768 954.46972656]
[103.62510681 969.44525146]
[115.72231293 979.16314697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 273]
[8 272]
[9 271]
[10 270]
[11 262]
[12 261]
[15 258]
[16 257]
[17 256]
[19 254]
[20 253]
[21 252]
[22 251]
[23 250]
[24 248]
[25 247]
[39 244]
[40 243]
[41 242]
[42 241]
[43 240]
[44 239]
[47 237]
[48 236]
[49 235]
[54 232]
[55 231]
[56 230]
[57 229]
[60 225]
[61 224]
[62 223]
[63 222]
[64 191]
[65 190]
[66 189]
[67 188]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[78 177]
[79 176]
[80 175]
[81 174]
[82 93]
[83 92]
[84 91]
[85 90]
[102 113]
[103 112]
[104 111]
[105 110]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 155]
[145 154]
[146 153]
[147 152]
[193 216]
[194 215]
[195 214]
[196 213]
[197 212]
[198 211]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
