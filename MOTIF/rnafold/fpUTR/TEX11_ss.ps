%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUCGUGCGCUGUGGACGGAGGUUGUGGAGAGAGCAGGGCGGCAUUGGUGGCUGCGGCUGAGGCUUGAGCCAGAGAUUUAAAAAUGGACAAUGAUGAUUUUUUUUCCAUGGACUUUAAAGAUGGAGUCUGUCUCUGUUGUCCAGGCUGGAGUGCAGUGGC\
) } def
/len { sequence length } bind def

/coor [
[-259.71548462 369.83895874]
[-271.33923340 379.31988525]
[-282.96298218 388.80081177]
[-288.76654053 403.51916504]
[-303.51956177 405.56784058]
[-315.14334106 415.04876709]
[-320.94686890 429.76712036]
[-335.69992065 431.81576538]
[-347.32366943 441.29669189]
[-358.94744873 450.77764893]
[-364.75097656 465.49597168]
[-379.50399780 467.54464722]
[-391.12777710 477.02557373]
[-389.21511841 496.01831055]
[-399.00930786 512.22888184]
[-416.43515015 519.25872803]
[-434.44784546 514.45898438]
[-445.50427246 524.59582520]
[-456.56072998 534.73260498]
[-460.96908569 550.52813721]
[-476.91775513 554.34552002]
[-488.00009155 542.25775146]
[-482.81555176 526.69970703]
[-466.69754028 523.67614746]
[-455.64108276 513.53936768]
[-444.58465576 503.40252686]
[-447.93887329 492.67877197]
[-447.02224731 481.42846680]
[-441.93011475 471.29711914]
[-433.37130737 463.78103638]
[-422.56982422 460.00646973]
[-411.08972168 460.56085205]
[-400.60870361 465.40182495]
[-388.98495483 455.92089844]
[-384.01281738 441.88067627]
[-368.42837524 439.15386963]
[-356.80459595 429.67294312]
[-345.18084717 420.19201660]
[-340.20870972 406.15179443]
[-324.62426758 403.42501831]
[-313.00051880 393.94406128]
[-308.02838135 379.90386963]
[-292.44393921 377.17706299]
[-280.82015991 367.69613647]
[-269.19641113 358.21517944]
[-269.74993896 349.27023315]
[-266.04376221 340.95898438]
[-258.80319214 335.22152710]
[-249.59367371 333.46124268]
[-240.48310852 336.20339966]
[-228.33087158 327.41000366]
[-222.55569458 313.68060303]
[-206.83970642 311.85897827]
[-194.68748474 303.06558228]
[-182.53526306 294.27221680]
[-170.38304138 285.47885132]
[-158.23080444 276.68545532]
[-146.07858276 267.89208984]
[-142.48590088 261.39208984]
[-133.60635376 259.04901123]
[-121.28691101 250.49148560]
[-118.90650940 235.83306885]
[-106.53475189 226.97901917]
[-91.17578888 229.57518005]
[-78.85635376 221.01765442]
[-66.53691864 212.46011353]
[-54.21747971 203.90257263]
[-41.89804077 195.34503174]
[-29.57860374 186.78749084]
[-23.53989792 173.17195129]
[-7.79172373 171.65351868]
[4.52771425 163.09599304]
[16.67993927 154.30261230]
[28.66043854 145.27667236]
[40.64093781 136.25073242]
[52.62143707 127.22478485]
[64.60193634 118.19884491]
[76.58243561 109.17289734]
[88.56293488 100.14695740]
[74.43832397 105.19625092]
[60.28982544 100.21429443]
[52.44506454 87.42915344]
[54.41245651 72.55873871]
[65.31212616 62.25352859]
[80.26940918 61.12233353]
[92.59442139 69.67028809]
[101.73539734 57.77732468]
[110.87637329 45.88436508]
[120.01734924 33.99140167]
[129.15832520 22.09843636]
[131.43350220 6.44167614]
[145.32409668 1.06577587]
[154.46507263 -10.82718754]
[156.74024963 -26.48394775]
[170.63085938 -31.85984802]
[179.77183533 -43.75281143]
[181.38783264 -60.07214355]
[196.43829346 -66.58486938]
[209.44059753 -56.59125519]
[207.01907349 -40.37187576]
[191.66479492 -34.61183548]
[182.52381897 -22.71887398]
[180.90246582 -7.91277695]
[166.35804749 -1.68621206]
[157.21707153 10.20675087]
[155.59571838 25.01284790]
[141.05128479 31.23941231]
[131.91030884 43.13237381]
[122.76933289 55.02533722]
[113.62835693 66.91830444]
[104.48738098 78.81126404]
[111.31011963 92.16979218]
[126.30384827 91.73619843]
[141.29757690 91.30260468]
[156.29132080 90.86901093]
[171.28504944 90.43541718]
[186.27877808 90.00181580]
[201.27250671 89.56822205]
[216.26623535 89.13462830]
[229.93379211 80.07205963]
[244.49345398 87.61847687]
[244.96748352 104.01077271]
[230.86825562 112.38595581]
[216.69982910 104.12835693]
[201.70610046 104.56195831]
[186.71237183 104.99555206]
[171.71864319 105.42914581]
[156.72491455 105.86273956]
[141.73117065 106.29633331]
[126.73744202 106.72992706]
[111.74371338 107.16352844]
[97.58887482 112.12745667]
[85.60837555 121.15339661]
[73.62787628 130.17933655]
[61.64738083 139.20527649]
[49.66688156 148.23123169]
[37.68638229 157.25717163]
[25.70588303 166.28311157]
[22.74064255 172.27896118]
[17.90461540 175.37738037]
[13.08525181 175.41542053]
[0.76581430 183.97296143]
[-6.15406036 198.20060730]
[-21.02106476 199.10693359]
[-33.34050369 207.66447449]
[-45.65994263 216.22201538]
[-57.97937775 224.77955627]
[-70.29881287 233.33708191]
[-82.61825562 241.89462280]
[-85.54647064 257.19375610]
[-98.16204071 265.69680786]
[-112.72937012 262.81091309]
[-125.04881287 271.36846924]
[-137.28521729 280.04431152]
[-149.43743896 288.83770752]
[-161.58966064 297.63107300]
[-173.74188232 306.42443848]
[-185.89411926 315.21780396]
[-198.04634094 324.01119995]
[-204.69071960 338.36956787]
[-219.53750610 339.56222534]
[-231.68972778 348.35562134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[8 38]
[9 37]
[10 36]
[12 34]
[13 33]
[17 26]
[18 25]
[19 24]
[50 162]
[51 161]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[60 153]
[61 152]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[71 142]
[72 141]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[92 105]
[93 104]
[95 102]
[96 101]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
