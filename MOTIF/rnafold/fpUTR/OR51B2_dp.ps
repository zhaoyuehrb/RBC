%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR51B2)
} def

/sequence { (\
GGAGGCUCCUGGUUUCAAGGUUUCAAGAAAUCUGAUCUUUACCGGUGGAUACACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.012849133 ubox
1 8 0.029348126 ubox
1 9 0.471970100 ubox
1 10 0.040095130 ubox
1 16 0.064496726 ubox
1 24 0.039059925 ubox
1 33 0.007950504 ubox
1 37 0.009701933 ubox
1 38 0.019516512 ubox
1 39 0.005594969 ubox
1 40 0.243724384 ubox
1 43 0.364710549 ubox
1 55 0.056862106 ubox
2 6 0.015911318 ubox
2 7 0.023427119 ubox
2 8 0.473002472 ubox
2 9 0.043501451 ubox
2 15 0.057903791 ubox
2 16 0.484254514 ubox
2 23 0.038736704 ubox
2 24 0.092029232 ubox
2 32 0.008451004 ubox
2 36 0.004690306 ubox
2 37 0.022426425 ubox
2 38 0.003716265 ubox
2 39 0.293564242 ubox
2 40 0.287793920 ubox
2 42 0.359589119 ubox
2 54 0.066425563 ubox
3 7 0.411534057 ubox
3 10 0.051922955 ubox
3 14 0.056198559 ubox
3 15 0.485672183 ubox
3 22 0.038546955 ubox
3 23 0.092276659 ubox
3 31 0.008376614 ubox
3 36 0.022245175 ubox
3 38 0.329501647 ubox
3 39 0.382382541 ubox
3 40 0.104925114 ubox
3 55 0.056710281 ubox
4 9 0.053817578 ubox
4 10 0.010723027 ubox
4 13 0.049142834 ubox
4 14 0.484787750 ubox
4 16 0.003482732 ubox
4 21 0.037488322 ubox
4 22 0.091663395 ubox
4 24 0.024829674 ubox
4 37 0.331205362 ubox
4 38 0.431392806 ubox
4 39 0.089025514 ubox
4 40 0.029099662 ubox
4 43 0.058651266 ubox
4 54 0.061943858 ubox
4 55 0.026411066 ubox
5 9 0.011802121 ubox
5 13 0.487427981 ubox
5 21 0.090293350 ubox
5 22 0.003321741 ubox
5 23 0.023943816 ubox
5 36 0.324873264 ubox
5 37 0.435985720 ubox
5 38 0.063344047 ubox
5 39 0.028345983 ubox
5 42 0.058615520 ubox
5 46 0.010804048 ubox
5 54 0.029282998 ubox
6 12 0.488371818 ubox
6 19 0.032820809 ubox
6 20 0.087773361 ubox
6 27 0.005387317 ubox
6 45 0.010623327 ubox
6 48 0.309250917 ubox
7 11 0.439970991 ubox
7 18 0.031369152 ubox
7 19 0.065802247 ubox
7 26 0.005361464 ubox
7 28 0.005815301 ubox
7 35 0.536986347 ubox
7 44 0.009234412 ubox
7 47 0.297252102 ubox
7 48 0.168899778 ubox
7 49 0.122278825 ubox
8 19 0.052757810 ubox
8 20 0.046992042 ubox
8 27 0.005921151 ubox
8 34 0.542216432 ubox
8 44 0.006759817 ubox
8 45 0.045017250 ubox
8 47 0.211980379 ubox
8 48 0.128363739 ubox
9 19 0.050065040 ubox
9 44 0.048349430 ubox
9 45 0.394301735 ubox
9 47 0.116478324 ubox
9 48 0.003416506 ubox
10 17 0.085225521 ubox
10 18 0.048256810 ubox
10 25 0.006475136 ubox
10 34 0.010895952 ubox
10 41 0.018925225 ubox
10 44 0.463126979 ubox
10 53 0.206750400 ubox
11 16 0.088817871 ubox
11 24 0.006695867 ubox
11 32 0.558811119 ubox
11 33 0.021650903 ubox
11 37 0.065703513 ubox
11 38 0.053365961 ubox
11 39 0.015440579 ubox
11 40 0.020003659 ubox
11 43 0.599996038 ubox
11 52 0.233762274 ubox
11 55 0.013185198 ubox
12 23 0.006255803 ubox
12 31 0.559842641 ubox
12 32 0.022904833 ubox
12 36 0.064873764 ubox
12 37 0.056116628 ubox
12 38 0.017552768 ubox
12 39 0.018307318 ubox
12 42 0.600224133 ubox
12 50 0.011758307 ubox
12 52 0.032527630 ubox
12 54 0.014857255 ubox
13 30 0.560426732 ubox
13 35 0.060425309 ubox
13 41 0.591160397 ubox
13 49 0.011547664 ubox
13 51 0.031508023 ubox
13 53 0.014680664 ubox
14 28 0.003449247 ubox
14 29 0.560098848 ubox
14 34 0.057845343 ubox
14 35 0.028013388 ubox
14 48 0.010689282 ubox
14 49 0.236063186 ubox
15 27 0.003571129 ubox
15 28 0.560537199 ubox
15 34 0.021442678 ubox
15 35 0.199288851 ubox
15 47 0.008724641 ubox
15 48 0.236361722 ubox
15 49 0.017985454 ubox
16 27 0.560258426 ubox
16 34 0.209179538 ubox
16 44 0.003447892 ubox
16 47 0.236552219 ubox
16 48 0.018237917 ubox
17 23 0.036550306 ubox
17 33 0.147970393 ubox
17 39 0.478127225 ubox
17 40 0.178749633 ubox
17 46 0.229398359 ubox
18 22 0.028724905 ubox
18 33 0.360408706 ubox
18 38 0.514100770 ubox
18 39 0.185313339 ubox
18 40 0.024879103 ubox
18 55 0.005577434 ubox
19 32 0.394873103 ubox
19 33 0.017509666 ubox
19 37 0.517056847 ubox
19 38 0.188738646 ubox
19 39 0.025855971 ubox
19 40 0.005646164 ubox
19 43 0.456995547 ubox
19 54 0.006066240 ubox
20 31 0.394782525 ubox
20 32 0.017934324 ubox
20 36 0.510317391 ubox
20 37 0.189143508 ubox
20 38 0.025027221 ubox
20 39 0.005364587 ubox
20 42 0.457419239 ubox
20 52 0.007673585 ubox
21 28 0.006042117 ubox
21 29 0.018171746 ubox
21 30 0.394450548 ubox
21 35 0.488198006 ubox
21 41 0.452259816 ubox
21 51 0.007425520 ubox
22 26 0.007611562 ubox
22 27 0.007166096 ubox
22 28 0.024640876 ubox
22 29 0.384922964 ubox
22 30 0.014492260 ubox
22 34 0.472490518 ubox
22 35 0.049193150 ubox
22 49 0.006151483 ubox
23 27 0.026807580 ubox
23 28 0.335194709 ubox
23 29 0.019113195 ubox
23 34 0.039955060 ubox
23 35 0.251820167 ubox
23 48 0.006450009 ubox
23 49 0.004546267 ubox
24 34 0.274903523 ubox
24 47 0.006543397 ubox
24 48 0.004604501 ubox
25 33 0.230710477 ubox
25 39 0.416357070 ubox
25 40 0.021436210 ubox
25 46 0.006346477 ubox
26 33 0.314328744 ubox
26 38 0.445593461 ubox
26 39 0.017199390 ubox
26 40 0.012811939 ubox
26 55 0.008346269 ubox
27 32 0.346735560 ubox
27 37 0.447797401 ubox
27 38 0.009768014 ubox
27 39 0.013122731 ubox
27 40 0.021903422 ubox
27 54 0.009226744 ubox
28 36 0.431894547 ubox
28 38 0.012733273 ubox
28 39 0.022171438 ubox
28 40 0.008071483 ubox
29 38 0.021804256 ubox
29 39 0.008250452 ubox
29 40 0.009767514 ubox
30 36 0.012715171 ubox
30 38 0.007733823 ubox
30 39 0.010142259 ubox
30 50 0.034897099 ubox
31 35 0.020856028 ubox
31 49 0.036430644 ubox
32 45 0.010127440 ubox
32 48 0.036709807 ubox
33 41 0.008403612 ubox
33 44 0.013293014 ubox
33 47 0.034442105 ubox
33 51 0.003907541 ubox
33 53 0.036674305 ubox
34 40 0.011991718 ubox
34 43 0.031985528 ubox
34 46 0.005164005 ubox
34 50 0.003926401 ubox
34 52 0.053859896 ubox
35 39 0.010498690 ubox
35 46 0.037738835 ubox
35 50 0.079986808 ubox
36 45 0.038216602 ubox
36 49 0.082037219 ubox
37 44 0.040470276 ubox
37 45 0.005809872 ubox
37 48 0.082398035 ubox
38 44 0.005845090 ubox
38 47 0.082008299 ubox
39 45 0.004457154 ubox
39 48 0.003457550 ubox
40 44 0.004615190 ubox
40 47 0.003772795 ubox
40 51 0.004674765 ubox
41 46 0.003803035 ubox
41 50 0.005293873 ubox
42 48 0.018060987 ubox
43 47 0.018007914 ubox
44 55 0.757622764 ubox
45 52 0.019275744 ubox
45 54 0.869536852 ubox
46 51 0.018144603 ubox
46 53 0.871771476 ubox
47 52 0.872184686 ubox
47 55 0.014047785 ubox
48 54 0.016922602 ubox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
7 11 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
