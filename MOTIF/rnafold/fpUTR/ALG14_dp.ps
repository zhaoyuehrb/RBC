%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALG14)
} def

/sequence { (\
AACUUUGACAGCGGCUGGUCCCCGGAAGUUGGACGCAUGCGCCGUUUCUCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.007319458 ubox
1 46 0.006109336 ubox
1 47 0.006985790 ubox
2 29 0.008339152 ubox
2 45 0.007401191 ubox
2 46 0.005899732 ubox
3 11 0.010784348 ubox
3 28 0.008457619 ubox
3 44 0.007465406 ubox
4 10 0.011239603 ubox
4 27 0.008420247 ubox
5 10 0.005093368 ubox
5 26 0.008362220 ubox
6 10 0.003665648 ubox
6 25 0.008101348 ubox
6 35 0.007766722 ubox
6 44 0.008521035 ubox
6 52 0.032312866 ubox
7 20 0.010195055 ubox
7 34 0.014318511 ubox
7 43 0.012317207 ubox
7 46 0.356372481 ubox
7 47 0.042943725 ubox
7 48 0.668367100 ubox
7 50 0.386809984 ubox
7 51 0.016155424 ubox
8 19 0.010187170 ubox
8 45 0.386137825 ubox
8 46 0.038593898 ubox
8 47 0.662789707 ubox
8 49 0.379717362 ubox
9 17 0.005539282 ubox
9 18 0.009326916 ubox
9 31 0.104212038 ubox
9 44 0.390424925 ubox
9 52 0.100325098 ubox
10 16 0.006880482 ubox
10 30 0.104949197 ubox
10 46 0.815411450 ubox
10 47 0.097123606 ubox
10 49 0.015529187 ubox
10 51 0.097999428 ubox
11 15 0.006833040 ubox
11 19 0.003766200 ubox
11 29 0.105330792 ubox
11 40 0.012813619 ubox
11 42 0.398779946 ubox
11 45 0.898786195 ubox
11 46 0.073502631 ubox
11 48 0.014529855 ubox
11 50 0.083373624 ubox
11 53 0.008674021 ubox
12 18 0.003849327 ubox
12 24 0.004615989 ubox
12 28 0.105394448 ubox
12 39 0.012827419 ubox
12 41 0.398895449 ubox
12 44 0.910365658 ubox
12 52 0.008716943 ubox
13 23 0.004703162 ubox
13 38 0.011717429 ubox
13 40 0.386683723 ubox
13 43 0.910516528 ubox
13 48 0.004462155 ubox
13 51 0.008422929 ubox
14 22 0.004669795 ubox
14 36 0.018810762 ubox
14 40 0.104567692 ubox
14 42 0.909871691 ubox
14 50 0.008272833 ubox
15 25 0.105784218 ubox
15 35 0.018748217 ubox
15 39 0.146533513 ubox
15 41 0.908591239 ubox
16 24 0.106168593 ubox
16 35 0.024819261 ubox
16 37 0.923467199 ubox
16 39 0.116502220 ubox
16 41 0.014649733 ubox
17 23 0.106457360 ubox
17 34 0.018691342 ubox
17 36 0.935073605 ubox
17 38 0.082856725 ubox
17 40 0.068694119 ubox
17 48 0.003770474 ubox
17 49 0.003642906 ubox
18 22 0.104741059 ubox
18 34 0.967060986 ubox
18 36 0.202641875 ubox
18 38 0.058074632 ubox
18 40 0.019932971 ubox
18 47 0.003589027 ubox
18 48 0.003929694 ubox
19 33 0.968277354 ubox
19 35 0.201947144 ubox
19 37 0.055880390 ubox
19 39 0.019856319 ubox
20 31 0.003645638 ubox
20 32 0.962446470 ubox
21 31 0.955012657 ubox
21 32 0.101177536 ubox
22 31 0.135169702 ubox
22 32 0.223866927 ubox
23 31 0.228223777 ubox
23 35 0.038820627 ubox
23 44 0.005808064 ubox
23 52 0.007759368 ubox
24 30 0.241092213 ubox
24 34 0.038959348 ubox
24 43 0.005856490 ubox
24 49 0.005117795 ubox
24 51 0.007957848 ubox
25 29 0.169585053 ubox
25 42 0.005849199 ubox
25 48 0.005757672 ubox
25 50 0.008006341 ubox
26 47 0.005737743 ubox
26 49 0.007413488 ubox
27 46 0.005551469 ubox
27 47 0.004987234 ubox
27 49 0.003393241 ubox
27 51 0.004496017 ubox
28 34 0.003265332 ubox
28 36 0.003986681 ubox
28 40 0.009847166 ubox
28 46 0.005309923 ubox
28 48 0.004420609 ubox
28 50 0.004649438 ubox
29 35 0.003887290 ubox
29 39 0.009531656 ubox
30 37 0.011571494 ubox
30 44 0.010538567 ubox
31 36 0.012430635 ubox
31 40 0.003163455 ubox
31 43 0.015152887 ubox
31 47 0.011314445 ubox
31 48 0.005221973 ubox
32 42 0.016042725 ubox
32 46 0.091345372 ubox
32 47 0.007889990 ubox
32 48 0.014080344 ubox
32 50 0.005354181 ubox
33 45 0.096887274 ubox
33 46 0.006425628 ubox
33 47 0.013172388 ubox
33 49 0.004810645 ubox
34 41 0.018007616 ubox
34 44 0.097823453 ubox
35 40 0.028157680 ubox
35 42 0.069984565 ubox
35 43 0.073003769 ubox
35 45 0.012218966 ubox
35 53 0.010976413 ubox
36 41 0.095281558 ubox
36 44 0.012397402 ubox
36 52 0.011067103 ubox
37 45 0.003908689 ubox
37 51 0.010095452 ubox
38 44 0.004157433 ubox
39 43 0.004116721 ubox
39 53 0.007726413 ubox
40 52 0.007813151 ubox
41 51 0.006149264 ubox
41 53 0.004846034 ubox
42 52 0.004713499 ubox
43 52 0.008759615 ubox
44 51 0.007157742 ubox
44 53 0.020362389 ubox
45 52 0.020436611 ubox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
showpage
end
%%EOF
