%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAACCAUGGGAGGCUCCUCUCCUAGACCCUGCAUCCUGAAAGCUGCGUACCUGAGAGCCUGCGGUCUGGCUGCAGGGACACACCCAAGGGGAGGAGCUGCAAUCGUGUCUGGGGCCCCAGCCCAGGCUGGCCGGAGCUCCUGUUUCCCGCUGCUCUGCUGCCUGCCCGGGGUACCAAC\
) } def
/len { sequence length } bind def

/coor [
[193.12939453 170.99171448]
[185.42774963 168.10928345]
[178.89259338 163.06222534]
[174.11793518 156.28407288]
[171.54516602 148.36677551]
[171.42231750 140.00903320]
[157.71913147 133.90798950]
[144.01594543 127.80693817]
[130.31277466 121.70588684]
[116.60958862 115.60483551]
[100.10427094 122.78987885]
[83.53390503 115.75617218]
[77.23683167 98.89208984]
[63.32907486 93.27299500]
[49.42131424 87.65389252]
[35.51355743 82.03479767]
[21.60579872 76.41569519]
[7.69804192 70.79660034]
[-6.20971584 65.17749786]
[-20.11747360 59.55839920]
[-34.02523041 53.93930054]
[-47.93299103 48.32020187]
[-61.84074783 42.70110321]
[-75.74850464 37.08200455]
[-92.98697662 49.66232681]
[-114.19138336 49.33809280]
[-130.82574463 36.40099335]
[-136.29075623 16.18767548]
[-150.70968628 12.05311489]
[-165.12861633 7.91855478]
[-179.54753113 3.78399420]
[-193.96646118 -0.35056612]
[-208.38539124 -4.48512650]
[-222.80432129 -8.61968708]
[-238.20257568 -4.98595953]
[-248.30413818 -15.93164158]
[-262.72305298 -20.06620216]
[-278.12130737 -16.43247414]
[-288.22286987 -27.37815666]
[-302.64178467 -31.51271629]
[-316.34658813 -24.10890579]
[-330.91052246 -28.50733948]
[-337.88449097 -41.61839294]
[-352.30340576 -45.75295258]
[-370.04672241 -40.87657547]
[-381.75125122 -53.93616104]
[-396.24014282 -57.81844330]
[-407.04364014 -46.90148163]
[-421.86242676 -42.86433792]
[-436.71038818 -46.79299164]
[-447.59341431 -57.63064957]
[-451.58410645 -72.46203613]
[-447.60891724 -87.29759216]
[-436.73721313 -98.14661407]
[-421.89337158 -102.09077454]
[-407.07037354 -98.06912231]
[-396.25546265 -87.16344452]
[-392.35784912 -72.30733490]
[-377.86895752 -68.42504883]
[-367.22201538 -74.20378876]
[-355.10614014 -71.06726837]
[-348.16885376 -60.17187881]
[-333.74990845 -56.03731918]
[-320.88787842 -63.46049118]
[-306.20614624 -59.47286224]
[-298.50723267 -45.93164062]
[-284.08831787 -41.79708099]
[-269.72137451 -45.72653961]
[-258.58850098 -34.48512650]
[-244.16957092 -30.35056686]
[-229.80264282 -34.28002548]
[-218.66975403 -23.03861237]
[-204.25082397 -18.90405273]
[-189.83190918 -14.76949120]
[-175.41297913 -10.63493156]
[-160.99404907 -6.50037098]
[-146.57513428 -2.36581063]
[-132.15620422 1.76874983]
[-126.68370056 -5.58492088]
[-119.37767029 -11.15968704]
[-110.79623413 -14.51339817]
[-101.59944916 -15.37419415]
[-92.49854279 -13.66250038]
[-84.20091248 -9.49818707]
[-77.35515594 -3.19227433]
[-72.50036621 4.77627182]
[-70.02366638 13.79689884]
[-70.12940979 23.17424774]
[-56.22164917 28.79334641]
[-42.31389236 34.41244507]
[-28.40613365 40.03154373]
[-14.49837494 45.65064240]
[-0.59061712 51.26974106]
[13.31714058 56.88883972]
[27.22489929 62.50793839]
[41.13265610 68.12703705]
[55.04041290 73.74613953]
[68.94817352 79.36523438]
[82.85592651 84.98433685]
[92.17846680 78.59409332]
[103.42472076 77.46867371]
[113.82866669 81.88488770]
[120.83141327 90.75654602]
[122.71063995 101.90165710]
[136.41381836 108.00270081]
[150.11700439 114.10375214]
[163.82017517 120.20480347]
[177.52336121 126.30585480]
[197.71839905 116.46671295]
[218.36434937 124.60101318]
[226.22444153 145.05989075]
[240.49028015 149.69514465]
[254.75613403 154.33039856]
[270.27182007 151.23628235]
[279.98522949 162.52783203]
[294.25106812 167.16308594]
[308.51693726 171.79833984]
[322.78277588 176.43359375]
[337.04861450 181.06884766]
[347.58004761 172.15162659]
[361.03701782 169.62979126]
[373.87777710 174.05805969]
[382.77651978 184.17616272]
[385.48461914 197.26515198]
[399.66738892 202.14866638]
[413.85015869 207.03219604]
[428.03295898 211.91571045]
[442.21572876 216.79924011]
[451.37741089 216.63667297]
[456.60214233 221.89372253]
[470.69750977 227.02403259]
[484.79290771 232.15432739]
[493.95602417 232.15168762]
[499.08819580 237.49913025]
[513.09191895 242.87464905]
[527.09564209 248.25016785]
[541.09930420 253.62568665]
[555.10302734 259.00119019]
[565.54125977 247.95077515]
[579.41577148 241.74061584]
[594.61083984 241.31770325]
[608.80926514 246.74656677]
[619.84594727 257.19931030]
[626.03790283 271.08200073]
[626.44079590 286.27758789]
[620.99328613 300.46887207]
[610.52600098 311.49182129]
[596.63519287 317.66543579]
[581.43908691 318.04837036]
[567.25494385 312.58218384]
[556.24578857 302.10043335]
[550.09045410 288.20150757]
[549.72753906 273.00491333]
[535.72381592 267.62939453]
[521.72009277 262.25387573]
[507.71640015 256.87835693]
[493.71267700 251.50283813]
[479.66259766 246.24972534]
[465.56723022 241.11941528]
[451.47183228 235.98912048]
[437.33221436 230.98200989]
[423.14941406 226.09849548]
[408.96664429 221.21496582]
[394.78387451 216.33145142]
[380.60110474 211.44792175]
[367.47644043 221.28663635]
[350.90771484 221.37471008]
[337.41140747 211.47978210]
[332.41336060 195.33470154]
[318.14752197 190.69944763]
[303.88168335 186.06419373]
[289.61581421 181.42893982]
[275.34997559 176.79368591]
[260.85467529 180.21934509]
[250.12088013 168.59625244]
[235.85502625 163.96099854]
[221.58918762 159.32574463]
[216.18984985 165.34773254]
[209.22514343 169.52604675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[13 99]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[36 70]
[37 69]
[39 67]
[40 66]
[43 63]
[44 62]
[46 59]
[47 58]
[111 177]
[112 176]
[113 175]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[124 165]
[125 164]
[126 163]
[127 162]
[128 161]
[130 160]
[131 159]
[132 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
