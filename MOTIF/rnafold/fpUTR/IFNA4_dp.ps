%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFNA4)
} def

/sequence { (\
AGAAAACCUAGAGGCCGAAGUUCAAGGUUAUCCAUCUCAAGUAGCCUAGCAAUAUUUGCAACAUCCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.076841977 ubox
1 22 0.003818064 ubox
1 29 0.003367211 ubox
1 37 0.064095201 ubox
1 47 0.011417247 ubox
1 57 0.003957782 ubox
2 8 0.081213081 ubox
2 21 0.005161234 ubox
2 22 0.007348807 ubox
2 23 0.081541381 ubox
2 29 0.006784621 ubox
2 32 0.824079131 ubox
2 36 0.072853852 ubox
2 38 0.022062479 ubox
2 46 0.011606304 ubox
2 56 0.004452224 ubox
2 57 0.005836318 ubox
2 65 0.065422164 ubox
3 21 0.007979170 ubox
3 22 0.081079261 ubox
3 28 0.004096227 ubox
3 29 0.009708904 ubox
3 31 0.817265073 ubox
3 35 0.071025174 ubox
3 37 0.021449371 ubox
3 55 0.004284018 ubox
3 56 0.006250310 ubox
3 57 0.005345957 ubox
3 64 0.061349103 ubox
4 21 0.076701256 ubox
4 22 0.004485039 ubox
4 28 0.004720680 ubox
4 29 0.032950734 ubox
4 55 0.005771662 ubox
4 56 0.005501867 ubox
4 57 0.003579190 ubox
5 21 0.004813346 ubox
5 22 0.025105780 ubox
5 28 0.024290926 ubox
5 29 0.855262139 ubox
5 55 0.004945282 ubox
5 56 0.003674453 ubox
6 21 0.029904375 ubox
6 28 0.906573797 ubox
6 42 0.012428789 ubox
6 55 0.003317918 ubox
7 14 0.177763119 ubox
7 20 0.030076443 ubox
7 27 0.909070198 ubox
7 41 0.011614231 ubox
8 13 0.178067011 ubox
8 14 0.023395492 ubox
8 20 0.026094495 ubox
8 26 0.909079049 ubox
8 41 0.027202692 ubox
8 44 0.008602325 ubox
8 49 0.009745387 ubox
9 13 0.021304527 ubox
9 19 0.026265214 ubox
9 25 0.891624626 ubox
9 40 0.027350166 ubox
9 43 0.008689567 ubox
9 48 0.013235949 ubox
9 58 0.005862717 ubox
10 22 0.006974924 ubox
10 37 0.017758342 ubox
10 42 0.008383944 ubox
10 47 0.009160824 ubox
10 57 0.006447393 ubox
11 21 0.006389689 ubox
11 22 0.040165823 ubox
11 23 0.908950826 ubox
11 32 0.025221245 ubox
11 36 0.019032303 ubox
11 38 0.034570832 ubox
11 46 0.005248472 ubox
11 56 0.006564460 ubox
11 57 0.004184328 ubox
11 65 0.032158417 ubox
12 21 0.051800247 ubox
12 22 0.894286976 ubox
12 31 0.025091741 ubox
12 35 0.018954873 ubox
12 37 0.034620762 ubox
12 47 0.151098850 ubox
12 55 0.006456564 ubox
12 56 0.004420752 ubox
12 64 0.030265196 ubox
13 21 0.806236332 ubox
13 22 0.184002472 ubox
13 23 0.051867526 ubox
13 29 0.030624073 ubox
13 33 0.014457783 ubox
13 36 0.034156875 ubox
13 46 0.156024866 ubox
13 55 0.004389099 ubox
13 65 0.010339587 ubox
13 66 0.046861719 ubox
13 67 0.189260788 ubox
14 21 0.387304941 ubox
14 22 0.040355040 ubox
14 28 0.047273241 ubox
14 32 0.013772972 ubox
14 35 0.017508987 ubox
14 45 0.156100297 ubox
14 50 0.006352209 ubox
14 59 0.081873106 ubox
14 64 0.007403252 ubox
14 65 0.046191797 ubox
14 66 0.188325762 ubox
15 20 0.510094606 ubox
15 27 0.051081344 ubox
15 44 0.155828605 ubox
15 49 0.006355554 ubox
15 58 0.075756419 ubox
16 26 0.051103152 ubox
16 58 0.048933464 ubox
17 23 0.066141189 ubox
17 32 0.009832083 ubox
17 38 0.016560585 ubox
17 56 0.057776014 ubox
17 57 0.058522517 ubox
17 65 0.200031604 ubox
18 22 0.057626047 ubox
18 29 0.005045560 ubox
18 31 0.009332012 ubox
18 37 0.014430226 ubox
18 55 0.058300283 ubox
18 56 0.058756737 ubox
18 57 0.014481692 ubox
18 64 0.198114232 ubox
19 28 0.005553998 ubox
19 37 0.017891163 ubox
19 55 0.057399904 ubox
19 56 0.016163688 ubox
20 31 0.003295478 ubox
20 35 0.010787305 ubox
20 36 0.019983752 ubox
20 42 0.008962213 ubox
20 50 0.062594004 ubox
20 53 0.063241969 ubox
20 55 0.016041573 ubox
20 59 0.004445614 ubox
20 62 0.206947445 ubox
20 64 0.005277822 ubox
21 30 0.003802537 ubox
21 34 0.011256263 ubox
21 40 0.024456244 ubox
21 41 0.021804056 ubox
21 49 0.062529672 ubox
21 52 0.065435107 ubox
21 54 0.016007030 ubox
21 58 0.004306681 ubox
21 61 0.204800418 ubox
21 63 0.005444810 ubox
22 39 0.023246847 ubox
22 40 0.023655208 ubox
22 48 0.054124506 ubox
22 51 0.060234197 ubox
22 60 0.183572362 ubox
23 58 0.060564066 ubox
24 56 0.003647127 ubox
24 57 0.060126028 ubox
25 37 0.043725037 ubox
25 47 0.367561839 ubox
25 56 0.030022771 ubox
26 32 0.007221819 ubox
26 33 0.148014551 ubox
26 36 0.044890481 ubox
26 37 0.009839090 ubox
26 46 0.382175675 ubox
26 55 0.004563216 ubox
27 31 0.004746967 ubox
27 32 0.147900356 ubox
27 35 0.044300178 ubox
27 36 0.010308486 ubox
27 45 0.382297461 ubox
28 34 0.042999376 ubox
28 44 0.382115567 ubox
29 43 0.381646658 ubox
29 48 0.003225596 ubox
30 42 0.380615685 ubox
30 47 0.003526072 ubox
30 64 0.010608826 ubox
31 41 0.369180506 ubox
31 63 0.010967432 ubox
33 58 0.018534666 ubox
34 42 0.033339592 ubox
34 57 0.018194640 ubox
34 64 0.041629812 ubox
35 41 0.034011211 ubox
35 63 0.042837009 ubox
36 44 0.058328094 ubox
36 49 0.007720109 ubox
37 43 0.056479686 ubox
37 48 0.011192915 ubox
38 58 0.529486956 ubox
39 56 0.009485598 ubox
39 57 0.535489556 ubox
40 47 0.137532226 ubox
40 55 0.010569989 ubox
40 56 0.535797737 ubox
40 57 0.005020911 ubox
41 46 0.141152063 ubox
41 50 0.052428065 ubox
41 53 0.042443669 ubox
41 55 0.536242726 ubox
41 56 0.004479284 ubox
41 59 0.081602212 ubox
41 62 0.150609773 ubox
41 64 0.015707121 ubox
42 48 0.024005291 ubox
42 49 0.051432568 ubox
42 52 0.044608652 ubox
42 54 0.535899933 ubox
42 58 0.081581004 ubox
42 61 0.148284777 ubox
42 63 0.015858272 ubox
43 47 0.022678531 ubox
43 53 0.510621649 ubox
43 56 0.004287822 ubox
43 57 0.080025080 ubox
44 50 0.389974510 ubox
44 55 0.004612854 ubox
44 56 0.065909053 ubox
44 59 0.158948813 ubox
45 49 0.388191386 ubox
45 58 0.158721129 ubox
47 54 0.106437735 ubox
47 58 0.009604437 ubox
48 53 0.106526737 ubox
48 56 0.046736137 ubox
48 57 0.029195270 ubox
49 55 0.040221174 ubox
49 56 0.029383522 ubox
49 59 0.800239491 ubox
50 58 0.801074612 ubox
51 57 0.784103485 ubox
52 56 0.597704867 ubox
52 64 0.003807258 ubox
53 63 0.003895445 ubox
54 64 0.003352807 ubox
55 61 0.004128482 ubox
55 63 0.003478713 ubox
56 60 0.004004193 ubox
57 63 0.014515337 ubox
57 68 0.014058374 ubox
58 62 0.016247007 ubox
58 67 0.018731218 ubox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
52 56 0.9500000 lbox
showpage
end
%%EOF
