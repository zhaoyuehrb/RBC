%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGGGUGGGGAAAGAUGCUCUUCCGUGACCCACAAUUAUUGGUGACUAUUGCCUGUCCAUAACAGGAAAAGCGAUUACGGAUUGGCUGAGGCGAAGUAGUAGGGCAGAAAAGUGGGUAUAGCUGCCUGCACGCACGCUUGGUGCGUGCGCGGCGACUGCGACGGGCAGUGGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[77.91105652 115.03796387]
[70.37309265 128.00634766]
[70.12743378 143.82565308]
[57.04222870 150.94090271]
[49.50426102 163.90928650]
[41.96629333 176.87767029]
[34.42832947 189.84605408]
[32.81308746 198.86679077]
[26.64256287 202.97422791]
[18.87816238 215.80833435]
[11.11376381 228.64242554]
[17.25745773 242.89144897]
[13.81960869 258.02291870]
[2.12213731 268.21844482]
[-13.33703899 269.55764771]
[-26.61355019 261.52560425]
[-32.60231018 247.21076965]
[-29.00051498 232.11749268]
[-17.19313049 222.04946899]
[-1.72033525 220.87803650]
[6.04406404 208.04393005]
[13.80846310 195.20983887]
[21.45994186 182.30809021]
[28.99790764 169.33970642]
[36.53587341 156.37132263]
[44.07384109 143.40293884]
[43.78033829 128.51121521]
[57.40470505 120.46838379]
[64.94267273 107.50000000]
[64.94267273 92.50000000]
[57.40470505 79.53161621]
[49.86674118 66.56322479]
[42.32877350 53.59483719]
[34.79080582 40.62645340]
[27.25284004 27.65806580]
[12.23911381 23.50767136]
[4.77928305 10.24850178]
[8.82857323 -4.03921413]
[1.29060650 -17.00760078]
[-5.74840689 -22.87572670]
[-6.26356173 -30.27039146]
[-13.57277298 -43.36907196]
[-20.88198471 -56.46775055]
[-37.68871689 -58.24555588]
[-50.00917816 -69.57026672]
[-53.13109970 -85.84195709]
[-46.02066803 -100.62310028]
[-53.55863190 -113.59149170]
[-61.09659958 -126.55987549]
[-68.63456726 -139.52825928]
[-76.17253113 -152.49665833]
[-83.93693542 -165.33074951]
[-91.92536926 -178.02661133]
[-99.91381073 -190.72247314]
[-107.90225220 -203.41831970]
[-115.89069366 -216.11418152]
[-134.95437622 -213.92431641]
[-152.48554993 -231.65544128]
[-164.35238647 -240.83030701]
[-176.21920776 -250.00517273]
[-191.86195374 -247.75125122]
[-204.46658325 -257.28533936]
[-206.55499268 -272.95104980]
[-196.88816833 -285.45416260]
[-181.20126343 -287.37683105]
[-168.80104065 -277.57836914]
[-167.04434204 -261.87200928]
[-155.17750549 -252.69714355]
[-143.31066895 -243.52226257]
[-137.18174744 -247.84503174]
[-124.92390442 -256.49057007]
[-118.79497528 -260.81332397]
[-123.45526123 -275.07101440]
[-128.11555481 -289.32870483]
[-143.25083923 -291.29989624]
[-156.02731323 -299.65002441]
[-163.90817261 -312.72116089]
[-165.32867432 -327.91802979]
[-160.00677490 -342.22329712]
[-148.99914551 -352.79660034]
[-134.49136353 -357.53863525]
[-119.36394501 -355.50784302]
[-106.62046051 -347.10748291]
[-98.79113770 -334.00540161]
[-97.43048859 -318.80303955]
[-102.80867767 -304.51885986]
[-113.85785675 -293.98898315]
[-109.19757080 -279.73129272]
[-104.53728485 -265.47360229]
[-93.30921173 -241.68469238]
[-103.19483948 -224.10263062]
[-95.20639801 -211.40676880]
[-87.21795654 -198.71090698]
[-79.22951508 -186.01504517]
[-71.24107361 -173.31919861]
[-66.83854675 -171.40081787]
[-63.60796738 -166.68084717]
[-63.20414352 -160.03462219]
[-55.66617966 -147.06623840]
[-48.12821198 -134.09783936]
[-40.59024429 -121.12945557]
[-33.05228043 -108.16107178]
[-19.68603897 -108.03918457]
[-8.03570938 -101.26798248]
[-1.20457768 -89.52717590]
[-1.07327306 -75.83598328]
[-7.78330469 -63.77696228]
[-0.47409305 -50.67828369]
[6.83511877 -37.57960510]
[14.25899315 -24.54556847]
[21.79696083 -11.57718086]
[36.21615982 -8.02440548]
[44.04547119 5.02000189]
[40.22122574 20.12009811]
[47.75919342 33.08848572]
[55.29716110 46.05687332]
[62.83512497 59.02526093]
[70.37309265 71.99364471]
[77.91105652 84.96203613]
[90.24760437 74.16567993]
[107.08448029 72.38874054]
[122.34148407 80.89318085]
[130.15162659 97.11492157]
[144.94361877 99.60433960]
[159.73559570 102.09375763]
[174.52758789 104.58317566]
[189.31956482 107.07259369]
[195.68241882 105.11055756]
[201.23757935 106.47248077]
[204.58316040 109.91770172]
[219.27867126 112.92469788]
[233.97418213 115.93169403]
[248.66969299 118.93869781]
[263.36520386 121.94569397]
[278.06069946 124.95269012]
[292.75622559 127.95969391]
[307.45172119 130.96669006]
[321.57809448 123.36242676]
[336.27380371 129.79794312]
[340.26553345 145.33647156]
[330.49118042 158.05816650]
[314.44879150 158.20404053]
[304.44473267 145.66220093]
[289.74920654 142.65519714]
[275.05371094 139.64820862]
[260.35818481 136.64120483]
[245.66268921 133.63420105]
[230.96717834 130.62719727]
[216.27166748 127.62020874]
[201.57617188 124.61320496]
[186.83015442 121.86457825]
[172.03816223 119.37516022]
[157.24618530 116.88574219]
[142.45419312 114.39632416]
[127.66220856 111.90690613]
[118.48734283 123.77374268]
[124.62043762 137.46260071]
[130.75354004 151.15147400]
[136.88664246 164.84034729]
[143.01974487 178.52920532]
[149.15283203 192.21807861]
[161.85635376 201.64842224]
[159.99920654 216.42678833]
[166.13230896 230.11566162]
[180.55072021 237.15048218]
[183.89962769 252.84010315]
[173.61003113 265.14880371]
[157.57524109 264.63436890]
[148.09574890 251.69146729]
[152.44343567 236.24874878]
[146.31033325 222.55989075]
[134.04550171 214.10867310]
[135.46397400 198.35118103]
[129.33087158 184.66230774]
[123.19776917 170.97343445]
[117.06467438 157.28457642]
[110.93157196 143.59570312]
[104.79846954 129.90684509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 26]
[5 25]
[6 24]
[7 23]
[9 22]
[10 21]
[11 20]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[38 111]
[39 110]
[41 109]
[42 108]
[43 107]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[58 69]
[59 68]
[60 67]
[72 89]
[73 88]
[74 87]
[123 155]
[124 154]
[125 153]
[126 152]
[127 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
