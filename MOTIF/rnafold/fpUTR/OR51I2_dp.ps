%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR51I2)
} def

/sequence { (\
UUGUCCUCCAGCAAGUGCAACUGUUAGAAUUCUCCAAGUCAGAAGAUCUGACUCUGAAAAGUACCCUAAGUUUGUUUUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006925981 ubox
1 14 0.022393823 ubox
1 20 0.003998172 ubox
2 10 0.079278110 ubox
2 13 0.028301271 ubox
2 19 0.005740415 ubox
3 9 0.108322345 ubox
3 12 0.029219315 ubox
3 18 0.006258085 ubox
4 11 0.028340814 ubox
4 17 0.006181851 ubox
6 15 0.006587942 ubox
7 14 0.006288691 ubox
7 28 0.006776619 ubox
8 27 0.007111342 ubox
10 25 0.007220243 ubox
10 76 0.004687108 ubox
10 81 0.897017111 ubox
11 18 0.005897071 ubox
11 24 0.007780394 ubox
11 75 0.005754215 ubox
11 80 0.998814387 ubox
12 17 0.005906851 ubox
12 23 0.007800850 ubox
12 74 0.005845450 ubox
12 79 0.999274646 ubox
13 22 0.006553234 ubox
13 73 0.005817850 ubox
13 77 0.018258078 ubox
13 78 0.994653146 ubox
14 22 0.004757105 ubox
14 72 0.004963440 ubox
14 76 0.023881606 ubox
14 77 0.979102836 ubox
14 78 0.065360050 ubox
14 81 0.016352246 ubox
15 21 0.006409436 ubox
15 64 0.010260904 ubox
15 75 0.015766000 ubox
15 76 0.800205154 ubox
15 77 0.089916485 ubox
15 80 0.020281475 ubox
16 20 0.005777172 ubox
16 63 0.010394331 ubox
16 74 0.014224735 ubox
16 79 0.020194338 ubox
17 62 0.010332162 ubox
17 71 0.005031064 ubox
17 73 0.034412636 ubox
17 75 0.922158214 ubox
17 78 0.012052395 ubox
17 80 0.019852469 ubox
18 23 0.003169708 ubox
18 61 0.010293062 ubox
18 70 0.005201260 ubox
18 74 0.952090343 ubox
18 79 0.019878308 ubox
19 72 0.529807292 ubox
19 73 0.832618470 ubox
19 76 0.028473535 ubox
19 78 0.017854726 ubox
20 62 0.024333103 ubox
20 71 0.706894245 ubox
20 72 0.647625311 ubox
20 75 0.036729178 ubox
20 77 0.010948912 ubox
21 27 0.007606314 ubox
21 61 0.027465475 ubox
21 70 0.841199092 ubox
21 74 0.037552173 ubox
22 26 0.006926320 ubox
22 36 0.004822695 ubox
22 60 0.027338082 ubox
22 68 0.059633548 ubox
22 69 0.791355051 ubox
23 30 0.007263079 ubox
23 35 0.006979184 ubox
23 52 0.017668255 ubox
23 64 0.090612620 ubox
23 67 0.076149849 ubox
23 71 0.049675308 ubox
24 29 0.007350166 ubox
24 51 0.017702173 ubox
24 57 0.032681236 ubox
24 58 0.003866726 ubox
24 63 0.085923459 ubox
24 69 0.567545410 ubox
24 70 0.018744669 ubox
25 36 0.005415133 ubox
25 50 0.017726809 ubox
25 56 0.034836282 ubox
25 57 0.003215235 ubox
25 63 0.086706326 ubox
25 68 0.718295410 ubox
25 69 0.014500682 ubox
26 33 0.022975069 ubox
26 49 0.017732650 ubox
26 55 0.035224849 ubox
26 62 0.092074563 ubox
26 67 0.735183433 ubox
27 32 0.026913856 ubox
27 34 0.029354215 ubox
27 48 0.017739107 ubox
27 54 0.035253221 ubox
27 66 0.735102192 ubox
28 33 0.027984308 ubox
28 47 0.017290528 ubox
28 53 0.027655799 ubox
29 62 0.471635678 ubox
30 44 0.016771824 ubox
30 57 0.005514649 ubox
30 58 0.124703144 ubox
30 59 0.064543989 ubox
30 60 0.556293848 ubox
30 61 0.470137830 ubox
31 36 0.003704902 ubox
31 43 0.017008052 ubox
31 46 0.003644375 ubox
31 56 0.004448993 ubox
31 57 0.139561800 ubox
31 58 0.071546355 ubox
31 59 0.533964850 ubox
31 60 0.419228074 ubox
32 42 0.017062165 ubox
32 45 0.003809149 ubox
32 56 0.140710970 ubox
32 61 0.487760984 ubox
33 41 0.016459665 ubox
33 43 0.003445566 ubox
33 57 0.772154351 ubox
33 60 0.455772116 ubox
34 42 0.004058202 ubox
34 56 0.794756448 ubox
35 56 0.549428618 ubox
36 55 0.547387891 ubox
37 53 0.987581510 ubox
37 55 0.017094208 ubox
38 52 0.999594010 ubox
38 54 0.012376405 ubox
39 51 0.999625583 ubox
39 57 0.012237979 ubox
40 50 0.999748854 ubox
40 56 0.012322150 ubox
41 49 0.999478234 ubox
41 55 0.012319171 ubox
42 48 0.999223139 ubox
42 54 0.012318985 ubox
43 47 0.869339481 ubox
43 53 0.010030675 ubox
44 53 0.006838848 ubox
45 52 0.009636975 ubox
54 61 0.051278179 ubox
55 60 0.051390827 ubox
55 63 0.005094348 ubox
56 62 0.005348518 ubox
60 67 0.037600173 ubox
61 66 0.038750532 ubox
61 80 0.003233335 ubox
62 68 0.007079611 ubox
62 79 0.003219024 ubox
63 67 0.006664966 ubox
63 71 0.009825317 ubox
64 70 0.010584327 ubox
69 81 0.004921549 ubox
70 80 0.005537696 ubox
71 79 0.005505573 ubox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
17 75 0.9500000 lbox
18 74 0.9500000 lbox
19 73 0.9500000 lbox
20 72 0.9500000 lbox
24 69 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
