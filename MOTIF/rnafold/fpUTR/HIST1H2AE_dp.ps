%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2AE)
} def

/sequence { (\
CAUUCUUUUUCUUUAUUCAGUGGAUUGUUAGUUCUUCUGCUGUUAGGAAGCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.006532192 ubox
2 16 0.005305290 ubox
2 26 0.006436273 ubox
3 15 0.005640865 ubox
3 24 0.003377154 ubox
3 48 0.018836451 ubox
3 49 0.053307145 ubox
3 50 0.010041001 ubox
4 23 0.003421322 ubox
4 24 0.006753282 ubox
4 47 0.020304788 ubox
4 48 0.061185556 ubox
4 49 0.008180413 ubox
5 22 0.003438840 ubox
5 23 0.006948945 ubox
5 46 0.020984159 ubox
5 47 0.061954248 ubox
5 50 0.090038901 ubox
6 22 0.006792767 ubox
6 45 0.020573922 ubox
6 46 0.060908568 ubox
6 48 0.005406287 ubox
6 49 0.085137854 ubox
6 50 0.040610108 ubox
7 45 0.056584731 ubox
7 46 0.003509370 ubox
7 47 0.005406800 ubox
7 48 0.064874633 ubox
7 49 0.040880947 ubox
7 50 0.307169731 ubox
8 45 0.004425360 ubox
8 46 0.005187981 ubox
8 47 0.055482669 ubox
8 48 0.033009039 ubox
8 49 0.388211999 ubox
8 50 0.644217490 ubox
9 45 0.005432232 ubox
9 46 0.042288295 ubox
9 47 0.025418230 ubox
9 48 0.404915378 ubox
9 49 0.818123977 ubox
9 50 0.023468826 ubox
10 24 0.003496871 ubox
10 45 0.033597712 ubox
10 46 0.012989744 ubox
10 47 0.406074413 ubox
10 48 0.856647707 ubox
10 49 0.023093783 ubox
11 23 0.003728091 ubox
11 46 0.408739094 ubox
11 47 0.861597482 ubox
11 50 0.192867105 ubox
12 19 0.003349303 ubox
12 22 0.003644759 ubox
12 45 0.401183743 ubox
12 46 0.845032036 ubox
12 47 0.043548045 ubox
12 48 0.028133841 ubox
12 49 0.195755713 ubox
12 50 0.009017749 ubox
13 45 0.793222434 ubox
13 46 0.158506938 ubox
13 47 0.030028144 ubox
13 48 0.195875377 ubox
13 49 0.011389868 ubox
14 42 0.032844596 ubox
14 45 0.222305473 ubox
14 46 0.030001272 ubox
14 47 0.193707855 ubox
14 48 0.011558878 ubox
15 41 0.032412419 ubox
15 43 0.284333479 ubox
15 44 0.268874031 ubox
16 42 0.253971077 ubox
16 46 0.013205047 ubox
16 48 0.003227297 ubox
17 45 0.015483893 ubox
17 46 0.003843667 ubox
17 47 0.003479656 ubox
18 39 0.332412064 ubox
18 42 0.919045259 ubox
19 38 0.333187827 ubox
19 41 0.921556612 ubox
19 55 0.176389157 ubox
20 37 0.333101545 ubox
20 40 0.922028189 ubox
20 51 0.004428349 ubox
20 54 0.195825314 ubox
21 39 0.920052003 ubox
21 50 0.004422579 ubox
21 53 0.195911528 ubox
22 34 0.089033563 ubox
22 35 0.328596242 ubox
22 36 0.007610658 ubox
22 37 0.025757395 ubox
22 38 0.911894027 ubox
22 52 0.195987185 ubox
23 33 0.089634507 ubox
23 34 0.339029982 ubox
23 36 0.024147022 ubox
23 37 0.915134551 ubox
23 51 0.195371037 ubox
24 32 0.096416877 ubox
24 33 0.337157662 ubox
24 35 0.031413376 ubox
24 36 0.903774168 ubox
24 43 0.003385293 ubox
25 31 0.104123848 ubox
25 42 0.003166242 ubox
25 46 0.049312332 ubox
25 47 0.024753216 ubox
25 48 0.031543296 ubox
25 49 0.113286581 ubox
25 50 0.027199348 ubox
26 30 0.080002679 ubox
26 45 0.074481452 ubox
26 46 0.026620506 ubox
26 47 0.032602168 ubox
26 48 0.141140575 ubox
26 49 0.024237973 ubox
27 40 0.005517564 ubox
27 44 0.078921944 ubox
28 39 0.004182593 ubox
28 46 0.124761372 ubox
28 47 0.011699079 ubox
28 48 0.006569106 ubox
29 39 0.008145712 ubox
29 42 0.149921199 ubox
29 45 0.095042586 ubox
29 46 0.007114062 ubox
29 47 0.005336239 ubox
30 36 0.003915474 ubox
30 38 0.011044992 ubox
30 41 0.163704885 ubox
30 44 0.074020689 ubox
30 55 0.007857595 ubox
31 35 0.008027926 ubox
31 37 0.011598505 ubox
31 40 0.170486318 ubox
31 43 0.049560789 ubox
31 51 0.003703844 ubox
31 54 0.008871625 ubox
32 39 0.168914588 ubox
32 42 0.032455468 ubox
32 48 0.009096106 ubox
32 49 0.007704353 ubox
32 50 0.004277427 ubox
32 53 0.008646834 ubox
33 47 0.009319119 ubox
33 48 0.009901248 ubox
33 49 0.003976243 ubox
34 46 0.009375719 ubox
34 47 0.010054427 ubox
34 50 0.074037846 ubox
35 45 0.009240230 ubox
35 46 0.009856750 ubox
35 48 0.013027604 ubox
35 49 0.074023602 ubox
36 45 0.009373662 ubox
36 47 0.014519539 ubox
36 48 0.073999102 ubox
37 46 0.016290076 ubox
37 47 0.073709668 ubox
38 45 0.017490214 ubox
38 46 0.072526869 ubox
39 44 0.015401209 ubox
39 51 0.006141406 ubox
40 46 0.004784739 ubox
40 47 0.004471345 ubox
40 50 0.006915806 ubox
41 45 0.004693589 ubox
41 46 0.004474693 ubox
41 49 0.006900779 ubox
42 51 0.003863646 ubox
43 50 0.004114401 ubox
44 49 0.003726466 ubox
45 55 0.009038539 ubox
46 52 0.024399754 ubox
46 54 0.010378653 ubox
46 55 0.005584830 ubox
47 51 0.024054881 ubox
47 54 0.006674394 ubox
49 55 0.017590242 ubox
50 54 0.024810724 ubox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
showpage
end
%%EOF
