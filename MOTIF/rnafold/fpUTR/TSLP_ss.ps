%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCAGAAAGCUCUGGAGCAUCAGGGAGACUCCAACUUAAGGCAACAGCAUGGGUGAAUAAGGGCUUCCUGUGGACUGGCAAUGAGAGGCAAAACCUGGUGCUUGAGCACUGGCCCCUAAGGCAGGCCUUACAGAUCUCUUACACUCGUGGUGGGAAGAGUUUAGUGUGAAACUGGGGUGGAAUUGGGUGUCCACGU\
) } def
/len { sequence length } bind def

/coor [
[-7.50187731 162.95423889]
[-8.61140728 147.99533081]
[0.59644049 136.15406799]
[15.36964798 133.54450989]
[1.10379994 128.90925598]
[-13.16204739 124.27399445]
[-27.42789650 119.63874054]
[-41.69374466 115.00348663]
[-51.09379196 120.49829865]
[-61.74663544 119.91949463]
[-70.14276123 113.69984436]
[-73.64937592 104.09047699]
[-87.76258850 99.00940704]
[-101.87580109 93.92833710]
[-115.98901367 88.84726715]
[-122.56707764 89.64210510]
[-127.77355194 87.33608246]
[-130.46147156 83.37857819]
[-144.40812683 77.85671234]
[-158.35476685 72.33484650]
[-172.30140686 66.81297302]
[-186.24806213 61.29110718]
[-200.19470215 55.76924133]
[-214.14135742 50.24737167]
[-228.08799744 44.72550201]
[-242.03465271 39.20363617]
[-255.98129272 33.68176651]
[-266.00076294 43.65626526]
[-279.02630615 49.04071045]
[-293.07754517 49.05220032]
[-306.03173828 43.72204208]
[-315.94448853 33.88600159]
[-321.34149170 21.05347061]
[-321.43792725 7.17586088]
[-335.29611206 1.43560946]
[-347.49523926 5.64222765]
[-358.92282104 0.56906742]
[-363.66955566 -10.56335354]
[-377.43588257 -16.52057266]
[-391.20217896 -22.47779083]
[-404.96850586 -28.43500900]
[-419.51272583 -22.85797882]
[-433.38888550 -29.09555244]
[-438.61608887 -42.99561691]
[-452.38241577 -48.95283508]
[-463.94503784 -39.04993820]
[-478.60092163 -35.16513824]
[-493.42947388 -38.01719666]
[-505.49963379 -46.98781967]
[-512.44934082 -60.25474930]
[-512.94750977 -75.16170502]
[-526.71386719 -81.11891937]
[-540.48016357 -87.07614136]
[-554.24645996 -93.03335571]
[-568.01281738 -98.99057770]
[-581.77911377 -104.94779205]
[-592.96051025 -94.60868073]
[-607.38250732 -89.71744537]
[-622.54656982 -91.12152863]
[-635.82537842 -98.57765198]
[-644.91827393 -110.79401398]
[-648.24981689 -125.65403748]
[-645.24291992 -140.58314514]
[-636.41845703 -152.99478149]
[-623.30529785 -160.73854065]
[-608.17547607 -162.47279358]
[-593.65026855 -157.89704895]
[-582.24621582 -147.80407715]
[-575.93920898 -133.94258118]
[-575.82189941 -118.71411133]
[-562.05560303 -112.75689697]
[-548.28924561 -106.79967499]
[-534.52294922 -100.84246063]
[-520.75665283 -94.88523865]
[-506.99032593 -88.92802429]
[-495.78256226 -98.76935577]
[-481.35400391 -102.78509521]
[-466.55209351 -100.12713623]
[-454.32220459 -91.26995087]
[-447.12145996 -77.92693329]
[-446.42520142 -62.71915436]
[-432.65887451 -56.76193619]
[-418.94787598 -62.46671295]
[-404.90200806 -56.62135315]
[-399.01129150 -42.20132828]
[-385.24496460 -36.24411011]
[-371.47866821 -30.28689194]
[-357.71234131 -24.32967377]
[-340.41812134 -27.28666306]
[-329.55587769 -12.42258358]
[-315.69769287 -6.68233204]
[-303.99249268 -17.55468178]
[-288.66262817 -22.25317192]
[-272.76043701 -19.78920746]
[-259.47555542 -10.60566998]
[-251.49490356 3.50167036]
[-250.45942688 19.73511887]
[-236.51278687 25.25698853]
[-222.56613159 30.77885628]
[-208.61949158 36.30072403]
[-194.67283630 41.82259369]
[-180.72619629 47.34445953]
[-166.77954102 52.86632919]
[-152.83290100 58.38819885]
[-138.88624573 63.91006470]
[-124.93960571 69.43193054]
[-110.90794373 74.73405457]
[-96.79473114 79.81512451]
[-82.68151855 84.89619446]
[-68.56830597 89.97726440]
[-49.84658051 85.16227722]
[-37.05848694 100.73764038]
[-22.79264069 105.37289429]
[-8.52679253 110.00814819]
[5.73905468 114.64340210]
[20.00490189 119.27865601]
[52.87639236 116.20123291]
[67.84679413 115.25937653]
[82.81719208 114.31752014]
[91.79579926 53.53757858]
[102.89026642 43.44239044]
[113.98473358 33.34720230]
[125.07920074 23.25201416]
[136.17366028 13.15682697]
[140.64135742 -2.62201023]
[156.60424805 -6.37941980]
[167.64108276 5.74989939]
[162.39811707 21.28834343]
[146.26885986 24.25129318]
[135.17439270 34.34648132]
[124.07991791 44.44166946]
[112.98545074 54.53685760]
[101.89098358 64.63204193]
[104.54204559 71.64787292]
[109.84416962 85.67953491]
[112.49523163 92.69536591]
[127.49338531 92.93097687]
[141.41339111 85.41139221]
[154.01754761 93.34764862]
[169.01570129 93.58325958]
[184.01385498 93.81887054]
[199.01200867 94.05448151]
[214.01014709 94.29009247]
[229.88227844 84.96243286]
[244.57975769 94.54458618]
[259.57974243 94.54458618]
[274.57974243 94.54458618]
[289.57974243 94.54458618]
[305.41888428 88.49824524]
[315.61364746 102.04458618]
[305.41888428 115.59091949]
[289.57974243 109.54458618]
[274.57974243 109.54458618]
[259.57974243 109.54458618]
[244.57975769 109.54458618]
[235.80220032 117.87625885]
[223.29966736 117.99372864]
[213.77453613 109.28823853]
[198.77639771 109.05262756]
[183.77824402 108.81701660]
[168.78009033 108.58140564]
[153.78193665 108.34580231]
[140.93470764 115.88223267]
[127.25777435 107.92912292]
[112.25962067 107.69351196]
[107.28955078 121.84619904]
[119.14187622 131.03981018]
[130.99420166 140.23341370]
[147.02691650 139.65730286]
[157.36378479 151.92631531]
[154.07525635 167.62870789]
[139.68400574 174.71894836]
[125.22976685 167.75801086]
[121.80059814 152.08573914]
[109.94827271 142.89213562]
[98.09594727 133.69851685]
[83.75905609 129.28791809]
[68.78865051 130.22978210]
[53.81825256 131.17163086]
[45.68162918 143.77304077]
[50.98374939 157.80470276]
[56.28587341 171.83636475]
[61.58799744 185.86801147]
[66.89012146 199.89967346]
[81.89219666 203.86416626]
[91.67275238 215.91076660]
[92.47096252 231.40728760]
[83.97988892 244.39503479]
[69.46453857 249.87992859]
[54.50634384 245.75292969]
[44.85704803 233.60093689]
[44.22699738 218.09666443]
[52.85845947 205.20179749]
[47.55633545 191.17013550]
[42.25421143 177.13847351]
[36.95209122 163.10682678]
[31.64996719 149.07516479]
[29.74019623 163.95309448]
[18.34678650 173.70964050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[12 110]
[13 109]
[14 108]
[15 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[34 91]
[35 90]
[38 88]
[39 87]
[40 86]
[41 85]
[44 82]
[45 81]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[117 179]
[118 178]
[119 177]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[136 165]
[137 164]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[145 155]
[146 154]
[147 153]
[148 152]
[166 176]
[167 175]
[168 174]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
