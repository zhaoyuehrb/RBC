%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUGCACCGCACAAUGGCCCGACCGCCGCCACUACCGGGGCCUGAGGGGGCCUGGCGGAGCCCGAGCGCGGCCCGGCCCGCAGCGUGGGGCCCCGAGCGCGGUGAAGAGAUUGUUUUCUGAAAGCUGCGUUGGAGGCUGUGACAGAGCUGAGAGCCUGUGUGGAGCGGAUGGGGAGGCUUUCUCAAUAACAUGGCCCUUUGCCAUUAGCCUUGCC\
) } def
/len { sequence length } bind def

/coor [
[211.54820251 264.45132446]
[200.56053162 258.03936768]
[192.78419495 247.91209412]
[189.40156555 235.55145264]
[190.94888306 222.78302002]
[197.23149109 211.50653076]
[188.34490967 199.42230225]
[174.57148743 193.75289917]
[172.62901306 178.05137634]
[163.74243164 165.96714783]
[154.85585022 153.88291931]
[145.96926880 141.79869080]
[137.08267212 129.71446228]
[128.19609070 117.63023376]
[119.30950928 105.54600525]
[111.75309753 114.70156097]
[101.01225281 117.52479553]
[91.36283112 113.80689240]
[78.44509888 121.43135071]
[65.52737427 129.05580139]
[52.60964584 136.68025208]
[39.69191742 144.30471802]
[40.27064896 161.87326050]
[31.91142464 177.23515320]
[16.99796486 186.19865417]
[-0.31195465 186.37013245]
[-15.24552155 177.79258728]
[-27.93816376 185.78613281]
[-40.63080597 193.77967834]
[-46.22100830 200.99700928]
[-53.56444931 201.79544067]
[-66.37096405 209.60525513]
[-69.84956360 225.02195740]
[-83.25500488 233.39273071]
[-98.63407135 229.75132751]
[-106.86264038 216.25814819]
[-103.05884552 200.91842651]
[-89.47941589 192.83297729]
[-74.18077850 196.79873657]
[-61.37426376 188.98892212]
[-48.62435532 181.08703613]
[-35.93171310 173.09349060]
[-23.23907280 165.09994507]
[-25.08014488 152.60655212]
[-22.04995728 140.29905701]
[-14.56405354 130.01298523]
[-3.70516086 123.29604340]
[8.93329716 121.17540741]
[21.48098946 124.00070953]
[32.06746292 131.38699341]
[44.98519135 123.76253510]
[57.90291977 116.13807678]
[70.82064819 108.51361847]
[83.73837280 100.88916779]
[91.07312012 84.15336609]
[111.33351898 83.41184998]
[110.46933746 68.43676758]
[109.60515594 53.46168137]
[94.98802185 41.40318680]
[93.85169983 22.80837059]
[106.45207977 9.52364826]
[105.15670013 -5.42031384]
[103.86132812 -20.36427689]
[89.65518188 -25.83662605]
[79.27606964 -36.88927460]
[74.74359131 -51.29333115]
[76.90563965 -66.17575836]
[85.28038025 -78.59239960]
[98.16232300 -86.11045074]
[96.86695099 -101.05441284]
[95.57157898 -115.99837494]
[94.27620697 -130.94233704]
[92.98083496 -145.88629150]
[91.68546295 -160.83026123]
[90.39009094 -175.77421570]
[74.43045044 -185.17466736]
[71.26230621 -206.84626770]
[61.86175156 -218.53512573]
[52.46119690 -230.22398376]
[43.06064224 -241.91285706]
[33.66008759 -253.60171509]
[18.16881561 -252.70726013]
[5.12857437 -261.11746216]
[-0.44639504 -275.59848022]
[3.58759642 -290.58200073]
[15.67939663 -300.30661011]
[31.17946243 -301.03298950]
[44.12770081 -292.48181152]
[49.54524994 -277.94116211]
[45.34895325 -263.00228882]
[54.74950790 -251.31341553]
[64.15006256 -239.62454224]
[73.55062103 -227.93568420]
[82.95117188 -216.24681091]
[97.47669220 -219.98973083]
[100.05775452 -234.76599121]
[98.45207214 -243.75276184]
[102.78395081 -249.73594666]
[105.57768250 -264.47348022]
[108.37141418 -279.21102905]
[111.16514587 -293.94854736]
[113.95887756 -308.68609619]
[116.75260925 -323.42364502]
[119.54634094 -338.16119385]
[122.34007263 -352.89871216]
[111.08409882 -368.14242554]
[114.49175262 -386.45764160]
[129.93800354 -396.28955078]
[132.30587769 -411.10147095]
[134.67373657 -425.91339111]
[137.04161072 -440.72534180]
[139.40946960 -455.53726196]
[133.05236816 -470.65411377]
[143.17961121 -483.55261230]
[159.37313843 -480.96386719]
[164.97445679 -465.55099487]
[154.22140503 -453.16940308]
[151.85353088 -438.35745239]
[149.48567200 -423.54553223]
[147.11779785 -408.73361206]
[144.74993896 -393.92169189]
[153.28224182 -386.35684204]
[157.14549255 -375.50097656]
[155.27177429 -364.01010132]
[148.01213074 -354.75524902]
[137.07760620 -350.10498047]
[134.28387451 -335.36746216]
[131.49014282 -320.62991333]
[128.69641113 -305.89236450]
[125.90268707 -291.15484619]
[123.10895538 -276.41729736]
[120.31522369 -261.67974854]
[117.52149200 -246.94221497]
[114.83402252 -232.18492126]
[112.25296021 -217.40866089]
[120.02041626 -192.96900940]
[105.33405304 -177.06959534]
[106.62942505 -162.12562561]
[107.92479706 -147.18167114]
[109.22016907 -132.23770142]
[110.51554108 -117.29374695]
[111.81091309 -102.34978485]
[113.10628510 -87.40582275]
[127.08972931 -82.21652222]
[137.47610474 -71.42612457]
[142.16673279 -57.13770294]
[140.18038940 -42.16858292]
[131.85792542 -29.49484444]
[118.80529022 -21.65964890]
[120.10066986 -6.71568632]
[121.39604187 8.22827625]
[131.50837708 13.49779320]
[137.88928223 23.09250450]
[138.85855103 34.69470215]
[134.06037903 45.43400574]
[124.58024597 52.59749985]
[125.44442749 67.57258606]
[126.30860138 82.54766846]
[131.39373779 96.65941620]
[140.28031921 108.74364471]
[149.16691589 120.82788086]
[158.05349731 132.91210938]
[166.94007874 144.99633789]
[175.82666016 157.08056641]
[184.71324158 169.16479492]
[199.12229919 175.69854736]
[200.42913818 190.53572083]
[209.31571960 202.61994934]
[226.73667908 200.27490234]
[242.86228943 207.04460144]
[253.28210449 220.97956848]
[255.19590759 238.18421936]
[248.16586304 253.90567017]
[257.39700317 265.72879028]
[271.98834229 271.84460449]
[273.72222900 286.63793945]
[282.95336914 298.46105957]
[292.18450928 310.28417969]
[301.41564941 322.10729980]
[310.64678955 333.93041992]
[319.87789917 345.75350952]
[319.79241943 330.75375366]
[326.43966675 317.30703735]
[338.40917969 308.26657104]
[353.16125488 305.55056763]
[367.56567383 309.73532104]
[378.56607056 319.93295288]
[383.82833862 333.97961426]
[382.23587036 348.89483643]
[374.12655640 361.51385498]
[361.22109985 369.15905762]
[346.25784302 370.20831299]
[332.41192627 364.43905640]
[339.84942627 377.46530151]
[347.28695679 390.49154663]
[354.72445679 403.51782227]
[362.16195679 416.54406738]
[377.19714355 422.14077759]
[382.05862427 437.42950439]
[373.01712036 450.68206787]
[357.00845337 451.73223877]
[346.31317139 439.77438354]
[349.13571167 423.98159790]
[341.69821167 410.95532227]
[334.26068115 397.92907715]
[326.82318115 384.90280151]
[319.38565063 371.87655640]
[310.14794922 366.70187378]
[308.05477905 354.98464966]
[298.82366943 343.16152954]
[289.59252930 331.33840942]
[280.36138916 319.51531982]
[271.13024902 307.69219971]
[261.89910889 295.86907959]
[247.96803284 290.59893799]
[245.57388306 274.95993042]
[236.34274292 263.13681030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[27 43]
[28 42]
[29 41]
[31 40]
[32 39]
[56 158]
[57 157]
[58 156]
[61 151]
[62 150]
[63 149]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[95 135]
[96 134]
[98 133]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 126]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[173 217]
[174 216]
[176 214]
[177 213]
[178 212]
[179 211]
[180 210]
[181 209]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
