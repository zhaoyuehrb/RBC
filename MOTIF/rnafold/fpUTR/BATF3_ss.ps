%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGACGUGGGACGGGAAGGACGGCUGCCGGGACUGGCGCGCGGGGACACUGGGCCGACGCGUGGAGUAGCGGGGAGAGCGGGAAGCCUGAGGGGGCGGGGCCGGCGCGAGGCCGUGGGUGCGGCACGAGGAUGCCGGCGGCGGGACAGCGCCCGUAGGCAGCCCCACGGGCAGGGCGCGCGGGCGGGGCGGGGCGGGCCGGGCCAGAGGAGCGCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[99.47970581 329.18344116]
[94.43152618 328.76681519]
[89.48715210 327.66641235]
[82.41620636 340.89520264]
[75.34525299 354.12402344]
[68.27429962 367.35284424]
[61.20335007 380.58166504]
[61.52168274 396.39968872]
[48.69839859 403.97680664]
[41.62744904 417.20559692]
[34.55649948 430.43441772]
[43.60407639 442.72686768]
[46.41373825 457.72915649]
[42.42761612 472.46258545]
[32.43716049 484.00180054]
[18.42598343 490.05569458]
[3.17601633 489.42227173]
[-10.28485203 482.22729492]
[-19.28395462 469.89932251]
[-22.03451347 454.88607788]
[-17.99040222 440.16845703]
[-7.95458412 428.66867065]
[6.08032322 422.67001343]
[21.32767868 423.36346436]
[28.39863014 410.13467407]
[35.46958160 396.90585327]
[34.64548492 382.03405762]
[47.97453308 373.51071167]
[55.04548264 360.28189087]
[62.11643219 347.05307007]
[69.18738556 333.82427979]
[76.25833893 320.59545898]
[66.09265137 307.50845337]
[62.61043167 291.23864746]
[66.56057739 275.00720215]
[77.21456146 262.05358887]
[92.50000000 254.98907471]
[92.50000000 239.98907471]
[84.76270294 227.26179504]
[92.50000000 213.46162415]
[92.50000000 198.46162415]
[92.50000000 183.46162415]
[92.50000000 168.46162415]
[92.50000000 153.46162415]
[92.50000000 138.46162415]
[85.23365784 136.29740906]
[78.52009583 132.77438354]
[72.61064148 128.02445984]
[67.72650909 122.22541046]
[64.05055237 115.59436035]
[61.72036362 108.37952423]
[60.82318497 100.85099792]
[61.39260101 93.29061890]
[47.37886810 87.94129944]
[33.36513138 82.59197235]
[16.37092209 90.98177338]
[-1.05653298 84.38937378]
[-8.00063133 67.44405365]
[-22.15888214 62.48986435]
[-34.09086227 67.37160492]
[-45.77747726 62.96073532]
[-51.15117264 52.12990952]
[-65.23854828 46.97764969]
[-79.32592773 41.82538986]
[-92.12805939 50.59380341]
[-107.63816833 50.12904358]
[-119.89231110 40.60982132]
[-124.17852020 25.69646835]
[-118.84864807 11.12347507]
[-105.95214844 2.49445438]
[-90.44799042 3.12744093]
[-78.29783630 12.77903843]
[-74.17366791 27.73801041]
[-60.08628845 32.89027023]
[-45.99891281 38.04253387]
[-28.89477348 34.09841537]
[-17.20469475 48.33161545]
[-3.04644537 53.28580093]
[5.90590048 46.23097992]
[17.26911163 44.35005951]
[28.24317551 48.22362900]
[36.06732941 56.99973679]
[38.71445465 68.57823944]
[52.72819138 73.92756653]
[66.74192810 79.27688599]
[75.72535706 69.23819733]
[87.57766724 62.83506393]
[100.89809418 60.82423782]
[114.11238861 63.44336700]
[122.09287262 50.74250412]
[130.07334900 38.04164124]
[138.05383301 25.34077835]
[146.03431702 12.63991451]
[143.93008423 -0.07919673]
[150.83087158 -10.49129105]
[162.58590698 -13.32017326]
[170.74372864 -25.90786552]
[178.90155029 -38.49555588]
[187.05937195 -51.08324814]
[195.21719360 -63.67094040]
[192.33705139 -74.14733887]
[195.62521362 -84.27242279]
[203.76852417 -90.78330994]
[213.93200684 -91.72200775]
[222.43965149 -104.07595062]
[230.94731140 -116.42989349]
[239.10511780 -129.01759338]
[246.90669250 -141.82911682]
[254.70826721 -154.64065552]
[262.50985718 -167.45219421]
[270.31140137 -180.26373291]
[263.06570435 -193.73394775]
[263.53213501 -208.92208862]
[271.48535156 -221.75222778]
[284.70428467 -228.83145142]
[299.59155273 -228.34680176]
[307.39312744 -241.15834045]
[315.19470215 -253.96987915]
[322.99627686 -266.78140259]
[320.71386719 -279.46975708]
[327.46795654 -289.97760010]
[339.18215942 -292.97106934]
[347.16265869 -305.67193604]
[349.07562256 -314.59393311]
[355.34518433 -318.49386597]
[363.50299072 -331.08154297]
[371.66079712 -343.66925049]
[379.81863403 -356.25692749]
[387.97644043 -368.84463501]
[384.43139648 -384.24618530]
[392.88595581 -397.59896851]
[408.32412720 -400.98095703]
[421.58676147 -392.38574219]
[424.80535889 -376.91265869]
[416.07037354 -363.74163818]
[400.56414795 -360.68679810]
[392.40631104 -348.09912109]
[384.24850464 -335.51141357]
[376.09066772 -322.92373657]
[367.93286133 -310.33602905]
[359.86352539 -297.69146729]
[351.88302612 -284.99060059]
[352.16839600 -267.43991089]
[335.80780029 -258.97982788]
[328.00622559 -246.16830444]
[320.20465088 -233.35676575]
[312.40307617 -220.54522705]
[319.66665649 -207.54115295]
[319.44442749 -192.54759216]
[311.69592285 -179.59278870]
[298.41616821 -172.20732117]
[283.12295532 -172.46215820]
[275.32138062 -159.65061951]
[267.51980591 -146.83908081]
[259.71823120 -134.02755737]
[251.91665649 -121.21601105]
[252.44003296 -118.47116852]
[251.91287231 -115.35451508]
[250.18847656 -112.26324463]
[247.26583862 -109.64020538]
[243.30125427 -107.92224884]
[234.79359436 -95.56830597]
[226.28594971 -83.21436310]
[226.15478516 -63.87321472]
[207.80488586 -55.51311874]
[199.64706421 -42.92542648]
[191.48924255 -30.33773613]
[183.33142090 -17.75004578]
[175.17359924 -5.16235352]
[175.21281433 12.39059734]
[158.73518372 20.62039566]
[150.75469971 33.32125854]
[142.77421570 46.02212143]
[134.79373169 58.72298431]
[126.81325531 71.42385101]
[137.78349304 89.60988617]
[137.65455627 110.84809113]
[126.46432495 128.89959717]
[107.50000000 138.46162415]
[107.50000000 153.46162415]
[107.50000000 168.46162415]
[107.50000000 183.46162415]
[107.50000000 198.46162415]
[107.50000000 213.46162415]
[115.23729706 227.26179504]
[107.50000000 239.98907471]
[107.50000000 254.98907471]
[122.95356750 262.18188477]
[133.62895203 275.38345337]
[137.39855957 291.86801147]
[133.55281067 308.26538086]
[122.93280029 321.25009155]
[129.62994385 334.67202759]
[142.71470642 343.56582642]
[141.47383118 358.40866089]
[148.17098999 371.83059692]
[154.86813354 385.25250244]
[161.56529236 398.67443848]
[168.26243591 412.09637451]
[182.98152161 417.19406128]
[189.58218384 430.90121460]
[184.63159180 444.90219116]
[191.32873535 458.32412720]
[206.65541077 460.74749756]
[217.60670471 471.74060059]
[219.97163391 487.07641602]
[212.84082031 500.85797119]
[198.95620728 507.78598022]
[183.65672302 505.19650269]
[172.82533264 494.08520508]
[170.62690735 478.72467041]
[177.90681458 465.02127075]
[171.20965576 451.59933472]
[157.04586792 447.13589478]
[150.06278992 433.61956787]
[154.84051514 418.79351807]
[148.14335632 405.37158203]
[141.44621277 391.94967651]
[134.74905396 378.52774048]
[128.05191040 365.10580444]
[115.44617462 357.17202759]
[116.20802307 341.36917114]
[109.51087189 327.94723511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[9 26]
[10 25]
[11 24]
[37 187]
[38 186]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[53 85]
[54 84]
[55 83]
[58 78]
[59 77]
[62 75]
[63 74]
[64 73]
[89 175]
[90 174]
[91 173]
[92 172]
[93 171]
[96 169]
[97 168]
[98 167]
[99 166]
[100 165]
[104 163]
[105 162]
[106 161]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[116 147]
[117 146]
[118 145]
[119 144]
[122 142]
[123 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[192 223]
[193 222]
[195 220]
[196 219]
[197 218]
[198 217]
[199 216]
[202 213]
[203 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
