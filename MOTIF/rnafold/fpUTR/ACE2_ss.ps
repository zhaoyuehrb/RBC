%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUUGUGAUCCCAUGGCUACAGAGGAUCAGGAGUUGACAUAGAUACUCUUUGGAUUUCAUACCAUGUGGAGGCUUUCUUACUUCCACGUGACCUUGACUGAGUUUUGAAUAGCGCCCAACCCAAGUUCAAAGGCUGAUAAGAGAGAAAAUCUCAUGAGGAGGUUUUAGUCUAGGGAAAGUCAUUCAGUGGAUGUGAUCUUGGCUCACAGGGGACG\
) } def
/len { sequence length } bind def

/coor [
[98.77362061 429.67550659]
[98.55746460 414.67709351]
[98.34130859 399.67864990]
[88.55053711 385.11203003]
[97.66721344 369.11029053]
[97.23493958 354.11651611]
[96.80267334 339.12274170]
[96.37040710 324.12896729]
[95.93813324 309.13519287]
[95.50586700 294.14141846]
[86.92923737 285.61566162]
[86.44341278 273.13110352]
[94.85350800 263.35638428]
[94.63735199 248.35794067]
[94.42119598 233.35949707]
[86.50128937 220.74504089]
[94.03892517 206.83480835]
[93.82276154 191.83636475]
[85.90286255 179.22190857]
[93.44049072 165.31167603]
[93.22433472 150.31323242]
[93.00817871 135.31478882]
[92.79202271 120.31635284]
[80.39553833 111.87080383]
[66.35853577 117.15876770]
[52.32153702 122.44673157]
[38.28453445 127.73469543]
[28.09796906 139.84025574]
[13.46014786 137.08644104]
[-0.57685381 142.37440491]
[-14.61385536 147.66236877]
[-28.65085793 152.95033264]
[-42.64939499 158.33930969]
[-56.60873413 163.82901001]
[-70.56807709 169.31871033]
[-84.52742004 174.80839539]
[-86.72673798 190.00900269]
[-96.24431610 202.06352234]
[-110.51995850 207.72933960]
[-125.71360016 205.48239136]
[-137.73822021 195.92707825]
[-143.35926819 181.63374329]
[-141.06469727 166.44721985]
[-131.47174072 154.45260620]
[-117.16085815 148.87638855]
[-101.98160553 151.21855164]
[-90.01711273 160.84906006]
[-76.05777740 155.35935974]
[-62.09843063 149.86965942]
[-48.13908768 144.37997437]
[-43.06740189 139.00952148]
[-33.93882370 138.91334534]
[-19.90182114 133.62536621]
[-5.86481905 128.33740234]
[8.17218304 123.04944611]
[17.35472679 111.32212067]
[32.99656677 113.69769287]
[47.03356934 108.40972900]
[61.07057190 103.12176514]
[75.10757446 97.83380127]
[76.34484100 90.43656158]
[61.55039978 87.96178436]
[64.02542114 73.16738129]
[78.81936646 75.64207458]
[80.05663300 68.24483490]
[68.50444794 58.67681503]
[56.95226288 49.10879517]
[45.40007782 39.54077530]
[33.84789276 29.97275352]
[22.29570770 20.40473175]
[10.74352264 10.83671188]
[-0.80866259 1.26869142]
[-12.36084747 -8.29932880]
[-23.91303253 -17.86734962]
[-38.91085052 -13.88676548]
[-53.37189865 -19.51329041]
[-61.73560333 -32.58341217]
[-60.78595352 -48.07139969]
[-50.88810730 -60.02180862]
[-35.84798813 -63.83946228]
[-21.44882965 -58.05639267]
[-13.22740269 -44.89630890]
[-14.34501266 -29.41953468]
[-2.79282713 -19.85151482]
[8.75935841 -10.28349400]
[20.31154251 -0.71547318]
[31.86372757 8.85254765]
[43.41591263 18.42056847]
[54.96809769 27.98858833]
[66.52028656 37.55661011]
[78.07247162 47.12462997]
[89.62465668 56.69264984]
[101.66081238 64.31580353]
[108.67402649 74.52334595]
[110.36767578 85.16013336]
[107.22967529 94.16159058]
[120.03618622 86.35178375]
[127.78987122 72.56080627]
[142.68446350 72.54015350]
[155.49098206 64.73033905]
[168.29748535 56.92052841]
[181.10400391 49.11071396]
[193.91052246 41.30089951]
[206.71704102 33.49108505]
[219.52354431 25.68127251]
[228.75468445 13.85815430]
[233.22517395 -0.46018285]
[237.69564819 -14.77852058]
[242.16613770 -29.09685707]
[246.63661194 -43.41519547]
[251.10710144 -57.73353195]
[255.57757568 -72.05187225]
[243.88327026 -81.76328278]
[236.79994202 -95.21300507]
[235.40777588 -110.35005188]
[239.91905212 -124.86614227]
[249.64584351 -136.54766846]
[263.10485840 -143.61329651]
[278.24374390 -144.98554993]
[292.75387573 -140.45516968]
[304.42260742 -130.71302795]
[311.47052002 -117.24472046]
[312.82284546 -102.10405731]
[308.27340698 -87.59989166]
[298.51593018 -75.94399261]
[285.03833008 -68.91381073]
[269.89590454 -67.58139038]
[265.42544556 -53.26305008]
[260.95495605 -38.94471359]
[256.48446655 -24.62637520]
[252.01399231 -10.30803776]
[247.54350281 4.01029968]
[243.07302856 18.32863808]
[252.80651855 29.74174309]
[267.65103149 27.58757019]
[282.49554443 25.43339920]
[297.34005737 23.27922630]
[301.13760376 8.58724499]
[310.24624634 -3.49893093]
[323.25311279 -11.15630150]
[338.16033936 -13.24483967]
[352.69198608 -9.47712421]
[364.64151001 -0.45743898]
[372.20669556 12.41490078]
[387.05120850 10.26072884]
[401.89572144 8.10655689]
[416.09008789 -3.62757921]
[432.12414551 3.51066685]
[446.93606567 1.14280200]
[461.74798584 -1.22506285]
[476.55990601 -3.59292769]
[491.37185669 -5.96079254]
[506.18377686 -8.32865715]
[520.99572754 -10.69652271]
[535.80761719 -13.06438732]
[546.34539795 -25.16129494]
[562.36639404 -24.32091713]
[571.58074951 -11.18792057]
[566.91992188 4.16318417]
[551.95935059 9.95634365]
[538.17547607 1.74754095]
[523.36358643 4.11540604]
[508.55163574 6.48327065]
[493.73971558 8.85113525]
[478.92779541 11.21900082]
[464.11584473 13.58686543]
[449.30392456 15.95473003]
[434.49200439 18.32259560]
[427.14709473 27.92986870]
[414.83023071 30.02631378]
[404.04989624 22.95106888]
[389.20538330 25.10524178]
[374.36087036 27.25941277]
[370.76663208 41.75115967]
[361.87384033 53.79539108]
[349.01254272 61.53825760]
[334.12655640 63.77318192]
[319.47964478 60.12881088]
[307.31127930 51.13026428]
[299.49423218 38.12373734]
[284.64971924 40.27791214]
[269.80520630 42.43208313]
[254.96069336 44.58625412]
[227.33335876 38.48778534]
[214.52684021 46.29759979]
[201.72033691 54.10741425]
[188.91381836 61.91722870]
[176.10729980 69.72704315]
[163.30079651 77.53685760]
[150.49427795 85.34667206]
[143.65660095 98.57903290]
[127.84600067 99.15829468]
[115.03948975 106.96810913]
[107.79045868 120.10018921]
[108.00662231 135.09863281]
[108.22277832 150.09707642]
[108.43893433 165.09552002]
[116.37429810 178.78276062]
[108.82120514 191.62020874]
[109.03736115 206.61865234]
[116.97272491 220.30589294]
[109.41963959 233.14334106]
[109.63579559 248.14178467]
[109.85195160 263.14022827]
[119.65169525 278.73303223]
[110.49963379 293.70916748]
[110.93190765 308.70294189]
[111.36417389 323.69668579]
[111.79644012 338.69046021]
[112.22871399 353.68423462]
[112.66098022 368.67800903]
[121.48567963 378.08010864]
[121.53987885 390.57400513]
[113.33975220 399.46249390]
[113.55590820 414.46090698]
[113.77206421 429.45935059]
[116.24018860 448.68325806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 216]
[2 215]
[3 214]
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[13 204]
[14 203]
[15 202]
[17 200]
[18 199]
[20 197]
[21 196]
[22 195]
[23 194]
[24 60]
[25 59]
[26 58]
[27 57]
[29 55]
[30 54]
[31 53]
[32 52]
[33 50]
[34 49]
[35 48]
[36 47]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[96 193]
[97 192]
[99 190]
[100 189]
[101 188]
[102 187]
[103 186]
[104 185]
[105 184]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[134 183]
[135 182]
[136 181]
[137 180]
[144 173]
[145 172]
[146 171]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
