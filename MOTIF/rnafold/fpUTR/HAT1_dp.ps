%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HAT1)
} def

/sequence { (\
CUGUGCGGUCACUUCCGGCCCGGGAGCGCGCGGGUUGAUUCGUCCUUCCUCAGCCGCGGGUGAUCGUAGCUCGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.006310739 ubox
1 69 0.073685389 ubox
1 74 0.799312156 ubox
2 11 0.005574898 ubox
2 32 0.006513667 ubox
2 68 0.063596389 ubox
2 73 0.801113376 ubox
3 10 0.006279374 ubox
3 12 0.026412447 ubox
3 31 0.006731711 ubox
3 67 0.025646761 ubox
3 70 0.320442569 ubox
3 72 0.793328678 ubox
4 11 0.026432362 ubox
4 30 0.006729953 ubox
4 68 0.925688083 ubox
4 69 0.158243716 ubox
4 73 0.004841062 ubox
5 10 0.026030113 ubox
5 29 0.006734010 ubox
5 67 0.974392792 ubox
5 70 0.178625628 ubox
5 72 0.004358351 ubox
6 28 0.006733950 ubox
6 66 0.985750388 ubox
6 69 0.163571492 ubox
7 20 0.007933505 ubox
7 27 0.006702176 ubox
7 65 0.999054492 ubox
8 19 0.007951305 ubox
8 64 0.998656980 ubox
9 18 0.007949320 ubox
9 63 0.999219858 ubox
10 17 0.007916349 ubox
10 62 0.999376371 ubox
11 61 0.999112868 ubox
12 26 0.020089833 ubox
12 59 0.016410693 ubox
12 60 0.998724929 ubox
13 25 0.021023167 ubox
13 26 0.004655884 ubox
13 58 0.022570380 ubox
13 59 0.981853495 ubox
13 60 0.023724661 ubox
13 76 0.022849015 ubox
14 24 0.021683053 ubox
14 25 0.011450367 ubox
14 58 0.906235728 ubox
14 59 0.166534483 ubox
14 75 0.032318124 ubox
15 23 0.022149198 ubox
15 24 0.011962847 ubox
15 58 0.236009714 ubox
15 59 0.008327344 ubox
15 74 0.033163885 ubox
16 22 0.022157605 ubox
16 23 0.011949214 ubox
16 56 0.997490177 ubox
16 58 0.007900794 ubox
16 73 0.033166688 ubox
17 21 0.020735891 ubox
17 55 0.999061651 ubox
17 57 0.003714186 ubox
17 71 0.005479113 ubox
17 72 0.032703647 ubox
18 54 0.999085724 ubox
18 70 0.032786817 ubox
18 71 0.004902536 ubox
19 53 0.998005547 ubox
19 69 0.032933439 ubox
20 33 0.003902670 ubox
21 32 0.003921124 ubox
21 66 0.032993260 ubox
22 31 0.003923164 ubox
22 46 0.003959602 ubox
22 49 0.670145226 ubox
22 50 0.726479269 ubox
22 51 0.067038340 ubox
22 65 0.033290443 ubox
23 45 0.004213323 ubox
23 48 0.671797304 ubox
23 49 0.739105290 ubox
23 50 0.019947943 ubox
23 64 0.033164440 ubox
23 65 0.006967085 ubox
24 44 0.004254454 ubox
24 47 0.671619322 ubox
24 48 0.738853394 ubox
24 49 0.018901356 ubox
24 51 0.004682333 ubox
24 64 0.006948831 ubox
25 36 0.003645466 ubox
25 43 0.003489047 ubox
25 46 0.706584368 ubox
25 47 0.702315585 ubox
25 50 0.004750650 ubox
26 35 0.010018076 ubox
26 43 0.031290088 ubox
26 45 0.739031779 ubox
26 46 0.580961691 ubox
26 49 0.004747070 ubox
26 61 0.034266562 ubox
27 34 0.010778087 ubox
27 37 0.006824800 ubox
27 42 0.034651067 ubox
27 60 0.039079714 ubox
28 35 0.011299040 ubox
28 36 0.004912195 ubox
28 41 0.033267075 ubox
28 43 0.334652751 ubox
28 61 0.003873424 ubox
29 34 0.014437757 ubox
29 37 0.011974654 ubox
29 42 0.337631413 ubox
29 58 0.041557163 ubox
29 60 0.004123415 ubox
30 36 0.009856187 ubox
30 41 0.326475482 ubox
30 43 0.923256469 ubox
30 57 0.041637664 ubox
31 37 0.100990892 ubox
31 42 0.936134616 ubox
31 56 0.041595834 ubox
31 58 0.004257687 ubox
32 36 0.062716574 ubox
32 40 0.171803373 ubox
32 41 0.936231359 ubox
32 44 0.003856015 ubox
32 45 0.054354495 ubox
32 46 0.044203435 ubox
32 55 0.034495227 ubox
32 57 0.004256729 ubox
33 39 0.176716784 ubox
33 40 0.853136865 ubox
33 41 0.048198947 ubox
33 43 0.003602517 ubox
33 44 0.054380986 ubox
33 45 0.048621903 ubox
33 54 0.025493410 ubox
33 55 0.023877700 ubox
34 39 0.580823246 ubox
34 40 0.066502809 ubox
34 43 0.050002998 ubox
34 44 0.048586462 ubox
34 54 0.033344262 ubox
35 42 0.020765115 ubox
35 53 0.040638826 ubox
36 42 0.024760261 ubox
36 52 0.041578862 ubox
37 41 0.027804598 ubox
37 44 0.005312997 ubox
37 48 0.005650236 ubox
37 51 0.041601705 ubox
38 43 0.004877356 ubox
38 47 0.005832757 ubox
38 50 0.039585207 ubox
46 76 0.004288576 ubox
47 75 0.006095117 ubox
48 74 0.006250574 ubox
49 73 0.006235634 ubox
52 71 0.006299140 ubox
53 70 0.006490549 ubox
54 69 0.006487093 ubox
56 67 0.006419686 ubox
57 66 0.006496118 ubox
58 65 0.006482415 ubox
59 64 0.005745446 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
showpage
end
%%EOF
