%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGGCCCAGUGCGUGCUGGCCCGGGGUGGCAGGAGCCGCAGAGGCUUGGGCUGCAGAAAAAGGAUCCUGUUUGCUGUGUAAUCCUGAGAAUGGACUGCAAGAGAGGAAAAACUGGGCGUCUGCUUGGGAAUCUAUUGUGGAAACCCAGGGUGUUUCCCGACCAGUCCCUGGGCGCCAACUAGAGUAUGGACUGACCAGGUACCUGGAUGGAGACCUGAGCUGGAGAAGGAGAUGCGCUUGGGAGGAAAUUGCA\
GAGGCCGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[294.90924072 88.49336243]
[279.95971680 89.72283173]
[265.01019287 90.95230103]
[250.06065369 92.18176270]
[235.11112976 93.41123199]
[220.17704773 94.81585693]
[205.26043701 96.39543915]
[190.34384155 97.97502136]
[175.42724609 99.55461121]
[160.51065063 101.13419342]
[145.59405518 102.71377563]
[130.67744446 104.29336548]
[126.07584381 121.13075256]
[112.32056427 133.98469543]
[92.52554321 138.00741577]
[72.25476837 130.62167358]
[60.92900085 140.45666504]
[49.60323334 150.29164124]
[45.19581985 158.25201416]
[38.08657455 160.17459106]
[26.64629745 169.87614441]
[15.20601940 179.57768250]
[3.76574206 189.27923584]
[-7.67453575 198.98078918]
[-19.11481285 208.68232727]
[-30.55509186 218.38388062]
[-41.99536896 228.08543396]
[-53.14646149 238.11802673]
[-63.99879456 248.47306824]
[-74.85112762 258.82812500]
[-85.70346069 269.18316650]
[-96.55579376 279.53820801]
[-100.64864349 295.41839600]
[-116.51809692 299.55270386]
[-127.83901978 287.68811035]
[-122.96541595 272.02987671]
[-106.91083527 268.68585205]
[-96.05850220 258.33081055]
[-85.20616913 247.97578430]
[-74.35383606 237.62074280]
[-63.50150299 227.26570129]
[-78.24542999 224.50587463]
[-85.38658142 211.31481934]
[-79.63694000 197.46052551]
[-65.25410461 193.20210266]
[-52.88858795 201.69291687]
[-51.69691849 216.64515686]
[-40.25664139 206.94360352]
[-28.81636238 197.24205017]
[-17.37608337 187.54051208]
[-5.93580675 177.83895874]
[5.50447083 168.13740540]
[16.94474792 158.43586731]
[28.38502693 148.73431396]
[39.76824570 138.96588135]
[51.09401321 129.13088989]
[62.41978455 119.29590607]
[61.58629227 111.84236145]
[46.93185043 115.04351044]
[35.59739685 124.86848450]
[20.77780724 122.54904938]
[12.98728275 109.73078918]
[17.75304413 95.50801086]
[31.69387627 89.97148132]
[44.91974640 97.05019379]
[59.91930389 96.93527985]
[59.08581161 89.48173523]
[45.86736679 82.39141083]
[32.64892578 75.30107880]
[19.43048096 68.21075439]
[1.02691090 69.19929504]
[-7.60236931 53.90166473]
[-20.90301895 46.96677017]
[-34.20366669 40.03187943]
[-47.50431824 33.09698486]
[-60.80496597 26.16209412]
[-76.61887360 26.64265251]
[-84.32711029 13.89776134]
[-97.62776184 6.96286869]
[-113.44166565 7.44342899]
[-121.14990997 -5.30146313]
[-134.45056152 -12.23635578]
[-150.26446533 -11.75579548]
[-157.97270203 -24.50068665]
[-171.27336121 -31.43557930]
[-187.62518311 -30.19072723]
[-196.65454102 -43.88024521]
[-189.07278442 -58.42153168]
[-172.67938232 -58.85575867]
[-164.33847046 -44.73622894]
[-151.03781128 -37.80133820]
[-136.17526245 -38.77792740]
[-127.51567078 -25.53700447]
[-114.21501923 -18.60211182]
[-99.35246277 -19.57870293]
[-90.69287109 -6.33778048]
[-77.39221954 0.59711236]
[-62.52966690 -0.37947777]
[-53.87007141 12.86144447]
[-40.56942368 19.79633713]
[-27.26877403 26.73122978]
[-13.96812630 33.66612244]
[-0.66747689 40.60101318]
[10.93926811 37.27150345]
[22.06660652 42.91176605]
[26.52080917 54.99230957]
[39.73925400 62.08263779]
[52.95769501 69.17296600]
[66.17613983 76.26329041]
[84.41864777 64.53660583]
[104.71956635 64.16033936]
[120.99523926 73.81492615]
[129.09786987 89.37676239]
[144.01446533 87.79718018]
[158.93106079 86.21759796]
[173.84765625 84.63800812]
[188.76426697 83.05842590]
[203.68086243 81.47884369]
[218.59745789 79.89925385]
[224.11218262 76.35440826]
[229.74751282 76.13374329]
[233.88166809 78.46170044]
[248.83119202 77.23223877]
[263.78073120 76.00276947]
[278.73025513 74.77330017]
[293.67977905 73.54383850]
[306.57958984 55.91864395]
[328.02145386 53.71807098]
[343.80627441 67.97102356]
[358.65811157 65.86795044]
[368.15377808 53.52008820]
[383.24563599 51.59884644]
[394.95889282 60.72762680]
[409.81072998 58.62455368]
[424.66256714 56.52148056]
[431.99636841 42.97446060]
[445.74017334 36.42001724]
[460.53317261 39.18256760]
[470.74069214 49.99665833]
[485.59252930 47.89358521]
[490.28720093 33.41182709]
[500.76132202 22.44916916]
[514.89868164 17.14299202]
[529.87640381 18.49559593]
[542.72851562 26.18535614]
[550.93341064 38.64108658]
[565.78521729 36.53801346]
[580.63708496 34.43494034]
[595.48889160 32.33186722]
[610.34075928 30.22879219]
[625.19256592 28.12571907]
[640.03186035 25.93563271]
[654.85797119 23.65860939]
[669.68414307 21.38158798]
[684.51031494 19.10456467]
[699.33648682 16.82754135]
[714.16265869 14.55051708]
[728.98883057 12.27349472]
[743.81500244 9.99647141]
[751.37298584 -5.15377426]
[766.32928467 -12.72705936]
[782.68627930 -9.90899944]
[794.01647949 1.99155569]
[808.81494141 -0.45910472]
[823.61340332 -2.90976524]
[838.41186523 -5.36042547]
[853.21032715 -7.81108618]
[858.43664551 -20.54437065]
[869.18139648 -28.97268105]
[882.57916260 -30.98396873]
[895.12316895 -26.15971184]
[903.58337402 -15.85649776]
[918.40954590 -18.13352013]
[925.58404541 -31.76557732]
[939.25012207 -38.48067856]
[954.07446289 -35.89172363]
[964.40802002 -25.19802856]
[979.23419189 -27.47505188]
[994.06036377 -29.75207520]
[1006.52606201 -39.49459457]
[1020.28039551 -33.77898407]
[1035.10656738 -36.05600739]
[1049.93273926 -38.33303070]
[1064.75891113 -40.61005402]
[1072.73327637 -44.99205399]
[1079.77209473 -42.82580948]
[1094.62390137 -44.92888260]
[1109.47570801 -47.03195572]
[1124.30187988 -49.30897903]
[1139.10034180 -51.75963974]
[1153.89880371 -54.21030045]
[1164.36877441 -66.36595154]
[1180.39428711 -65.61518097]
[1189.68188477 -52.53391647]
[1185.10693359 -37.15699005]
[1170.17907715 -31.28025627]
[1156.34948730 -39.41184616]
[1141.55102539 -36.96118546]
[1126.75256348 -34.51052475]
[1123.31030273 -31.24528694]
[1117.79113770 -30.08602333]
[1111.57885742 -32.18011856]
[1096.72692871 -30.07704544]
[1081.87512207 -27.97397232]
[1067.03588867 -25.78388786]
[1052.20971680 -23.50686455]
[1037.38354492 -21.22984123]
[1022.55737305 -18.95281792]
[1011.15216064 -9.37316513]
[996.33740234 -14.92591095]
[981.51123047 -12.64888763]
[966.68505859 -10.37186432]
[960.03674316 2.92993331]
[946.67248535 9.84812927]
[931.62121582 7.54348183]
[920.68658447 -3.30735612]
[905.86041260 -1.03033304]
[898.79699707 13.80558777]
[884.12957764 21.57472420]
[867.55902100 19.03269577]
[855.66094971 6.98736858]
[840.86248779 9.43802929]
[826.06408691 11.88868999]
[811.26562500 14.33934975]
[796.46716309 16.79001045]
[791.63397217 29.21466637]
[781.21453857 37.70358276]
[767.85626221 39.96218491]
[755.02191162 35.29677200]
[746.09204102 24.82263565]
[731.26586914 27.09965897]
[716.43969727 29.37668228]
[701.61352539 31.65370560]
[686.78735352 33.93072891]
[671.96118164 36.20775223]
[657.13500977 38.48477554]
[642.30883789 40.76179886]
[636.19592285 44.86907196]
[627.29565430 42.97755814]
[612.44378662 45.08063126]
[597.59197998 47.18370438]
[582.74011230 49.28677750]
[567.88830566 51.38985062]
[553.03643799 53.49292374]
[548.61236572 67.73696136]
[538.40051270 78.69266510]
[524.38720703 84.15049744]
[509.33242798 82.97802734]
[496.22640991 75.35440063]
[487.69558716 62.74542236]
[472.84375000 64.84849548]
[466.03997803 78.07144928]
[452.59558105 84.83251190]
[437.57229614 82.35158539]
[426.76565552 71.37332153]
[411.91381836 73.47639465]
[397.06198120 75.57946777]
[388.34371948 87.60142517]
[373.31179810 89.94581604]
[360.76116943 80.71978760]
[345.90933228 82.82286072]
[343.38473511 90.96196747]
[338.34429932 97.88675690]
[331.30422974 102.84055328]
[323.00103760 105.27098846]
[314.31445312 104.89144135]
[306.17419434 101.71458435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[5 122]
[6 119]
[7 118]
[8 117]
[9 116]
[10 115]
[11 114]
[12 113]
[16 57]
[17 56]
[18 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[67 109]
[68 108]
[69 107]
[70 106]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[78 97]
[79 96]
[81 94]
[82 93]
[84 91]
[85 90]
[129 261]
[130 260]
[133 257]
[134 256]
[135 255]
[139 251]
[140 250]
[146 244]
[147 243]
[148 242]
[149 241]
[150 240]
[151 239]
[152 237]
[153 236]
[154 235]
[155 234]
[156 233]
[157 232]
[158 231]
[159 230]
[163 225]
[164 224]
[165 223]
[166 222]
[167 221]
[172 217]
[173 216]
[177 212]
[178 211]
[179 210]
[181 208]
[182 207]
[183 206]
[184 205]
[186 204]
[187 203]
[188 202]
[189 199]
[190 198]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
