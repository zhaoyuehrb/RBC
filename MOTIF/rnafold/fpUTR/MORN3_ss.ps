%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGCACUAAAGGAUCCCCACUAAGGGCUGUUCACCUGCCCCAGGGACUCAGAACACACAUGACUCUCCCCACUUGAGCUCAGGAUCCCGGCAUUACACGGGGCGCGCUGAGCCCCAGAUGUCCCUAACCCCUUUCCAGCACCCUCCAGCCUUGCAGAAGCAGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-23.44437981 519.01538086]
[-42.41053009 519.60980225]
[-47.76899338 533.62005615]
[-53.12745667 547.63031006]
[-58.48591995 561.64056396]
[-49.26087570 574.00592041]
[-48.20828629 589.39733887]
[-55.66403198 602.90344238]
[-69.24901581 610.21453857]
[-84.62830353 608.99761963]
[-96.89443970 599.64105225]
[-102.13333130 585.13043213]
[-98.67327118 570.09606934]
[-87.61835480 559.33538818]
[-72.49616241 556.28210449]
[-67.13770294 542.27185059]
[-61.77923584 528.26159668]
[-56.42077255 514.25134277]
[-65.13761902 507.36914062]
[-71.78459930 498.45214844]
[-75.90191650 488.10372925]
[-77.20126343 477.02667236]
[-75.58599854 465.97549438]
[-71.15830231 455.70507812]
[-64.21273804 446.91903687]
[-55.21665573 440.22164917]
[-44.77878571 436.07614136]
[-33.60802078 434.77273560]
[-22.46528053 436.40832520]
[-15.85143375 422.94515991]
[-9.23758793 409.48196411]
[-2.62374234 396.01879883]
[3.99010348 382.55563354]
[10.60394955 369.09246826]
[17.21779442 355.62927246]
[13.04941559 346.25057983]
[14.78741455 335.91232300]
[22.09351158 328.09033203]
[32.71730804 325.54946899]
[39.81844330 312.33682251]
[46.91957855 299.12417603]
[54.02071381 285.91152954]
[45.99803162 270.78652954]
[50.04750061 253.07040405]
[65.53441620 241.67857361]
[85.75218201 243.24288940]
[86.57369995 228.26541138]
[87.39521790 213.28791809]
[88.21673584 198.31044006]
[89.03825378 183.33294678]
[89.85977173 168.35546875]
[90.54447174 153.37109375]
[91.09230042 138.38110352]
[80.05410004 133.97966003]
[70.83021545 126.48735809]
[64.25967407 116.58570862]
[60.94015121 105.17538452]
[61.17359161 93.29430389]
[64.93875885 82.02318573]
[71.89317322 72.38726807]
[63.38955688 60.03055573]
[48.10337448 57.03550339]
[39.65552139 44.38289642]
[42.60504532 29.82831383]
[34.10142899 17.47159576]
[18.58656693 17.20948792]
[6.20912027 7.85115290]
[1.72846782 -7.00493622]
[6.86751270 -21.64631081]
[19.65018845 -30.44306374]
[35.16129303 -30.01266289]
[47.43649292 -20.52060699]
[51.75572205 -5.61678600]
[46.45814514 8.96797752]
[54.96176529 21.32469559]
[69.60964203 23.76913643]
[78.40954590 36.17947006]
[75.74627686 51.52693558]
[84.24989319 63.88365173]
[97.12389374 60.70388794]
[110.32368469 61.97529984]
[116.93753052 48.51212311]
[123.55137634 35.04895020]
[130.16522217 21.58577728]
[136.77906799 8.12260342]
[143.39291382 -5.34056997]
[136.58404541 -22.98891449]
[144.66398621 -39.73987198]
[162.10688782 -45.20648575]
[168.22460938 -58.90222931]
[174.34234619 -72.59796906]
[180.46008301 -86.29371643]
[186.57780457 -99.98945618]
[178.71922302 -113.36937714]
[180.25952148 -128.80981445]
[190.60643005 -140.37361145]
[205.78134155 -143.61422729]
[219.94920349 -137.28561401]
[227.66217041 -123.82122803]
[225.95446777 -108.39840698]
[215.48272705 -96.94754791]
[200.27355957 -93.87172699]
[194.15582275 -80.17597961]
[188.03808594 -66.48023987]
[181.92036438 -52.78449631]
[175.80262756 -39.08875656]
[182.10987854 -29.53010178]
[183.01223755 -17.99319267]
[178.16838074 -7.35149384]
[168.68276978 -0.31196716]
[156.85607910 1.27327585]
[150.24223328 14.73644924]
[143.62838745 28.19962311]
[137.01454163 41.66279602]
[130.40069580 55.12596893]
[123.78685760 68.58914185]
[135.39328003 82.68608093]
[139.39802551 100.50166321]
[134.94096375 118.20949554]
[122.97935486 132.00633240]
[106.08229065 138.92893982]
[105.53446198 153.91893005]
[108.35630035 162.64627075]
[104.83725739 169.17698669]
[104.01573944 184.15446472]
[103.19422150 199.13195801]
[102.37270355 214.10943604]
[101.55118561 229.08692932]
[100.72966766 244.06440735]
[102.58955383 229.18016052]
[110.52151489 216.44894409]
[123.06235504 208.21928406]
[137.89865112 206.00929260]
[152.29357910 210.22666931]
[163.59169006 220.09342957]
[169.70881653 233.78942871]
[169.51654053 248.78820801]
[163.05033875 262.32290649]
[151.50302124 271.89678955]
[137.00473022 275.74377441]
[122.22994232 273.15420532]
[109.90626526 264.60803223]
[121.60929871 273.99093628]
[136.54185486 269.77212524]
[151.09062195 275.16772461]
[159.66133118 288.10305786]
[158.95834351 303.60421753]
[149.25198364 315.71066284]
[134.27453613 319.76724243]
[119.78514862 314.21411133]
[111.35527802 301.18658447]
[112.22637939 285.69396973]
[100.52335358 276.31106567]
[94.68959808 285.74667358]
[86.19050598 291.95541382]
[76.52738953 294.36053467]
[67.23335266 293.01266479]
[60.13222122 306.22531128]
[53.03108597 319.43795776]
[45.92994690 332.65060425]
[47.48738861 352.72451782]
[30.68096924 362.24313354]
[24.06712341 375.70629883]
[17.45327759 389.16946411]
[10.83943081 402.63265991]
[4.22558546 416.09582520]
[-2.38826060 429.55899048]
[-9.00210667 443.02215576]
[3.51254964 457.60888672]
[8.42946434 476.13830566]
[4.81189871 494.91485596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[39 160]
[40 159]
[41 158]
[42 157]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[51 124]
[52 122]
[53 121]
[60 79]
[61 78]
[64 75]
[65 74]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
