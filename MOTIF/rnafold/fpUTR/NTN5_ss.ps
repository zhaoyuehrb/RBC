%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCUCUGAGCCCCCGCCCAGCCCAGAAACCCCACUAGCCUGGGGCCUGAGAACAGCCACGCCACUCCCUCCUGAGAGCCCACCGCGCCACAGCUUGGAGGAAGAGCCUGCGGGGAACUGGCUGCAGGACGCUCUCUUCUUGAGUGCAGGUGCUGGCUCUGCUGUGACC\
) } def
/len { sequence length } bind def

/coor [
[83.42845917 142.86906433]
[75.80944824 155.79000854]
[68.19043732 168.71095276]
[60.57142639 181.63188171]
[64.30105591 196.75563049]
[56.39023209 209.75076294]
[41.94906998 213.21319580]
[34.33005905 226.13414001]
[26.71104813 239.05506897]
[26.36635017 254.87252808]
[13.23685646 261.90570068]
[5.61784554 274.82666016]
[6.00834990 291.22113037]
[-8.13337421 299.52438354]
[-22.25953293 291.19470215]
[-21.83834648 274.80096436]
[-7.30309391 267.20764160]
[0.31591681 254.28669739]
[0.11565242 239.39343262]
[13.79010868 231.43606567]
[21.40912056 218.51512146]
[29.02813148 205.59417725]
[25.06837273 191.28140259]
[32.61106873 178.06918335]
[47.65048599 174.01287842]
[55.26949692 161.09193420]
[62.88850784 148.17098999]
[70.50751495 135.25006104]
[64.53621674 129.23513794]
[59.77093506 122.22600555]
[56.37372971 114.46103668]
[41.55625534 116.79394531]
[26.73878098 119.12684631]
[11.92130661 121.45975494]
[-2.89616752 123.79266357]
[-11.99363613 136.71595764]
[-27.57875252 139.33888245]
[-40.40514374 130.10528564]
[-42.86314011 114.49330902]
[-33.49445343 101.76525879]
[-17.85736275 99.47245789]
[-5.22907448 108.97518921]
[9.58839989 106.64228058]
[24.40587425 104.30937195]
[39.22335052 101.97647095]
[54.04082489 99.64356232]
[56.02716064 86.62979126]
[61.62112808 74.71294403]
[70.36377716 64.87070465]
[81.53785706 57.91054535]
[94.22660065 54.40349960]
[107.38901520 54.63729095]
[119.94521332 58.59273529]
[130.86506653 65.94532776]
[142.61703491 56.62379074]
[154.36901855 47.30225372]
[166.12100220 37.98072052]
[177.87297058 28.65918350]
[163.01522827 30.72016525]
[148.27803040 27.92468262]
[135.20710754 20.56594467]
[125.17345428 9.41579628]
[119.22947693 -4.35624552]
[117.99862671 -19.30566025]
[121.61001587 -33.86443710]
[129.68482971 -46.50552750]
[141.37614441 -55.90304184]
[155.45765686 -61.07129288]
[170.45240784 -61.46818924]
[184.78761292 -57.05210495]
[196.95970154 -48.28623199]
[205.69194031 -36.09000397]
[210.06843567 -21.74266052]
[209.63015747 -6.74906588]
[204.42304993 7.31813478]
[194.99366760 18.98313522]
[209.04133606 13.72357273]
[223.08900452 8.46400928]
[237.13667297 3.20444584]
[251.18434143 -2.05511737]
[265.23202515 -7.31468058]
[279.18069458 -12.83142376]
[293.02566528 -18.60348511]
[306.87063599 -24.37554741]
[320.71560669 -30.14760780]
[334.50698853 -36.04660416]
[348.24359131 -42.07203674]
[361.98019409 -48.09746552]
[375.71676636 -54.12289810]
[389.39746094 -60.27425766]
[403.02105713 -66.55102539]
[389.46762085 -72.97789764]
[384.26864624 -87.04810333]
[390.38677979 -100.74366760]
[404.33557129 -106.26010895]
[418.16622925 -100.45384979]
[423.99731445 -86.63362885]
[418.50653076 -72.67557526]
[432.73791504 -77.41554260]
[446.96932983 -82.15550995]
[461.20071411 -86.89546967]
[475.43212891 -91.63543701]
[489.66351318 -96.37540436]
[496.84954834 -102.07732391]
[504.20010376 -101.06911469]
[518.51617432 -105.54683685]
[532.83227539 -110.02455902]
[547.14831543 -114.50228119]
[561.33557129 -119.37277222]
[575.38323975 -124.63233948]
[589.43090820 -129.89190674]
[603.47857666 -135.15145874]
[617.52624512 -140.41102600]
[631.57391357 -145.67059326]
[635.58386230 -160.66058350]
[647.66003418 -170.40457153]
[663.15893555 -171.15580750]
[676.12091064 -162.62541199]
[681.56176758 -148.09349060]
[677.38940430 -133.14787292]
[665.20825195 -123.53546143]
[649.70214844 -122.95241547]
[636.83349609 -131.62292480]
[622.78582764 -126.36335754]
[608.73815918 -121.10379791]
[594.69049072 -115.84423065]
[580.64282227 -110.58467102]
[566.59515381 -105.32510376]
[564.80554199 -102.24542999]
[561.41613770 -99.89415741]
[556.79266357 -99.02241516]
[551.62603760 -100.18621063]
[537.30999756 -95.70848846]
[522.99389648 -91.23076630]
[508.67782593 -86.75304413]
[494.40347290 -82.14400482]
[480.17208862 -77.40403748]
[465.94067383 -72.66407013]
[451.70928955 -67.92411041]
[437.47787476 -63.18414307]
[423.24649048 -58.44417953]
[409.29782104 -52.92743683]
[395.67422485 -46.65066910]
[390.89675903 -40.97416306]
[381.74221802 -40.38629913]
[368.00561523 -34.36086655]
[354.26901245 -28.33543587]
[340.53240967 -22.31000328]
[335.65145874 -16.72222328]
[326.48767090 -16.30263519]
[312.64270020 -10.53057289]
[298.79772949 -4.75851154]
[284.95275879 1.01354980]
[282.32818604 5.04501104]
[277.12600708 7.44958401]
[270.49157715 6.73298788]
[256.44390869 11.99255085]
[242.39624023 17.25211525]
[228.34857178 22.51167870]
[214.30090332 27.77124023]
[200.25323486 33.03080368]
[187.19450378 40.41115952]
[175.44253540 49.73269653]
[163.69055176 59.05423355]
[151.93856812 68.37577057]
[140.18659973 77.69730377]
[145.73579407 95.46021271]
[143.78680420 113.96739960]
[134.65916443 130.18469238]
[119.84928894 141.45332336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 153]
[83 152]
[84 151]
[85 150]
[86 148]
[87 147]
[88 146]
[89 145]
[90 143]
[91 142]
[98 141]
[99 140]
[100 139]
[101 138]
[102 137]
[103 136]
[105 135]
[106 134]
[107 133]
[108 132]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
