%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIGLEC16)
} def

/sequence { (\
ACUGCCCCUCCACCAGGCUUCCUGCUGGAGGAGUUUCCUUCCCAGCCAGGCCGGCCCAGAAGCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.105443894 ubox
2 16 0.038987978 ubox
2 17 0.003445861 ubox
2 33 0.121519582 ubox
2 45 0.014549157 ubox
2 49 0.021376181 ubox
2 50 0.004776026 ubox
2 54 0.005187792 ubox
2 59 0.140479648 ubox
2 62 0.023824912 ubox
2 66 0.446661896 ubox
3 12 0.064532895 ubox
3 15 0.053168600 ubox
3 16 0.003303415 ubox
3 32 0.120047452 ubox
3 44 0.014675314 ubox
3 48 0.021405366 ubox
3 49 0.004570961 ubox
3 53 0.005196372 ubox
3 58 0.140925999 ubox
3 61 0.023510324 ubox
3 65 0.452695116 ubox
4 11 0.072385373 ubox
4 14 0.054875404 ubox
4 18 0.204893438 ubox
4 34 0.523777638 ubox
4 43 0.013048382 ubox
4 46 0.008053602 ubox
4 47 0.018870651 ubox
4 51 0.073243122 ubox
4 52 0.007552018 ubox
4 55 0.059369270 ubox
4 57 0.138556984 ubox
4 63 0.359791576 ubox
4 64 0.364511703 ubox
5 17 0.204210024 ubox
5 31 0.012656802 ubox
5 33 0.554287914 ubox
5 45 0.010820831 ubox
5 50 0.073769022 ubox
5 54 0.060925836 ubox
5 62 0.447634832 ubox
6 16 0.202817648 ubox
6 17 0.026548060 ubox
6 30 0.011018832 ubox
6 31 0.040956534 ubox
6 49 0.073536175 ubox
6 53 0.060804944 ubox
6 54 0.020869229 ubox
7 16 0.032914976 ubox
7 17 0.044825209 ubox
7 30 0.029101647 ubox
7 31 0.686166988 ubox
7 53 0.021049473 ubox
7 54 0.063001258 ubox
8 16 0.046195394 ubox
8 17 0.004359361 ubox
8 30 0.687705378 ubox
8 33 0.024604206 ubox
8 53 0.062967907 ubox
8 54 0.005456399 ubox
8 59 0.406843357 ubox
8 62 0.136360018 ubox
8 66 0.020511322 ubox
9 15 0.046718151 ubox
9 16 0.004268745 ubox
9 29 0.688337878 ubox
9 32 0.024865372 ubox
9 53 0.005304908 ubox
9 58 0.395049934 ubox
9 60 0.191063213 ubox
9 61 0.120819400 ubox
9 65 0.019896474 ubox
10 16 0.004401714 ubox
10 17 0.023496328 ubox
10 28 0.688455936 ubox
10 31 0.024895501 ubox
10 53 0.003486109 ubox
10 54 0.033786193 ubox
10 59 0.201304781 ubox
11 16 0.024098317 ubox
11 27 0.688438534 ubox
11 30 0.024865075 ubox
11 53 0.033825927 ubox
12 26 0.681460250 ubox
13 28 0.024862281 ubox
13 54 0.426231007 ubox
14 24 0.687108882 ubox
14 27 0.024916527 ubox
14 53 0.425336676 ubox
15 23 0.688165797 ubox
15 26 0.024174650 ubox
16 22 0.688313696 ubox
16 23 0.003874616 ubox
16 25 0.021717382 ubox
16 26 0.011616705 ubox
16 52 0.584314795 ubox
16 56 0.340848654 ubox
16 57 0.027057854 ubox
16 64 0.136060164 ubox
17 21 0.677195420 ubox
17 22 0.005043419 ubox
17 25 0.018697578 ubox
17 51 0.585150457 ubox
17 55 0.342348710 ubox
17 56 0.019390994 ubox
17 63 0.136391917 ubox
18 24 0.021545422 ubox
18 49 0.005144428 ubox
18 50 0.577653951 ubox
18 54 0.342844116 ubox
18 62 0.136393706 ubox
19 48 0.006857061 ubox
19 49 0.566023151 ubox
19 50 0.003167957 ubox
19 53 0.332262677 ubox
19 54 0.003808191 ubox
19 60 0.006786863 ubox
19 61 0.135997457 ubox
20 48 0.541411217 ubox
20 49 0.012454120 ubox
20 50 0.012492746 ubox
20 53 0.012621594 ubox
20 59 0.009497835 ubox
20 60 0.134181963 ubox
21 49 0.031337428 ubox
21 50 0.425266217 ubox
21 54 0.003162300 ubox
21 59 0.091370016 ubox
22 45 0.026460860 ubox
22 49 0.444396801 ubox
22 50 0.020671688 ubox
22 53 0.003758928 ubox
22 54 0.011857078 ubox
22 59 0.014584164 ubox
23 44 0.026827534 ubox
23 48 0.445550186 ubox
23 49 0.018826021 ubox
23 53 0.011746132 ubox
23 58 0.020219067 ubox
24 43 0.026746617 ubox
24 46 0.651079357 ubox
24 47 0.315523789 ubox
24 51 0.003912954 ubox
24 52 0.005809004 ubox
24 55 0.018168502 ubox
24 57 0.016177777 ubox
25 45 0.723804860 ubox
25 49 0.005842059 ubox
25 50 0.003877154 ubox
25 54 0.018287258 ubox
26 44 0.723497757 ubox
26 48 0.006470469 ubox
26 53 0.018243374 ubox
27 41 0.042831754 ubox
27 42 0.123055484 ubox
27 43 0.712705489 ubox
27 47 0.006656155 ubox
27 52 0.017975735 ubox
28 40 0.068950347 ubox
28 41 0.172418893 ubox
28 42 0.699773984 ubox
28 46 0.006646222 ubox
28 51 0.017585289 ubox
29 39 0.290793392 ubox
29 40 0.184856375 ubox
30 37 0.003214020 ubox
30 38 0.326868376 ubox
30 39 0.155837635 ubox
30 40 0.008250497 ubox
30 41 0.626802397 ubox
30 42 0.016397997 ubox
30 47 0.003256882 ubox
31 37 0.327015716 ubox
31 38 0.155228794 ubox
31 39 0.005913171 ubox
31 40 0.626728885 ubox
31 41 0.021564509 ubox
31 46 0.003241927 ubox
32 36 0.284704425 ubox
32 39 0.626998519 ubox
32 40 0.021672833 ubox
33 38 0.621022826 ubox
33 39 0.018497648 ubox
33 46 0.051965051 ubox
33 51 0.013183959 ubox
33 55 0.004917695 ubox
33 63 0.203154149 ubox
34 45 0.051898049 ubox
34 50 0.012098218 ubox
34 54 0.004838727 ubox
34 62 0.202548208 ubox
34 66 0.053040655 ubox
35 44 0.049869173 ubox
35 45 0.003234926 ubox
35 48 0.003833296 ubox
35 49 0.011544995 ubox
35 53 0.004330986 ubox
35 60 0.003272767 ubox
35 61 0.203082676 ubox
35 62 0.004751548 ubox
35 65 0.120020482 ubox
35 66 0.042218011 ubox
36 44 0.003967160 ubox
36 48 0.010450771 ubox
36 50 0.003192458 ubox
36 59 0.003171115 ubox
36 60 0.203340883 ubox
36 61 0.004823648 ubox
36 65 0.058711022 ubox
37 49 0.004069816 ubox
37 50 0.095120843 ubox
37 54 0.012945364 ubox
37 59 0.199871779 ubox
38 45 0.021471556 ubox
38 49 0.096289928 ubox
38 50 0.009313250 ubox
38 53 0.013694897 ubox
38 54 0.019327283 ubox
38 59 0.037694524 ubox
38 62 0.625819480 ubox
38 66 0.006685773 ubox
39 44 0.019968057 ubox
39 45 0.004117497 ubox
39 48 0.094960832 ubox
39 49 0.009328433 ubox
39 53 0.019057720 ubox
39 58 0.049435705 ubox
39 59 0.004056029 ubox
39 60 0.007446166 ubox
39 61 0.633276734 ubox
39 62 0.004510033 ubox
39 65 0.006063982 ubox
40 44 0.004757560 ubox
40 48 0.009120512 ubox
40 50 0.004477413 ubox
40 54 0.005349939 ubox
40 58 0.015337513 ubox
40 59 0.007520302 ubox
40 60 0.635112351 ubox
40 61 0.004499454 ubox
41 49 0.005841537 ubox
41 50 0.041937701 ubox
41 53 0.005668544 ubox
41 54 0.033425526 ubox
41 59 0.634280656 ubox
42 49 0.042253277 ubox
42 50 0.058196725 ubox
42 53 0.032794368 ubox
42 54 0.182543806 ubox
43 49 0.058722202 ubox
43 53 0.182792763 ubox
45 51 0.186096642 ubox
45 55 0.642735842 ubox
46 50 0.184829903 ubox
46 54 0.643568950 ubox
47 53 0.643173035 ubox
49 56 0.033251482 ubox
49 57 0.033015032 ubox
49 64 0.026746826 ubox
50 55 0.033986136 ubox
50 56 0.033155195 ubox
50 63 0.026788262 ubox
51 62 0.026743935 ubox
53 64 0.460597042 ubox
54 63 0.461189734 ubox
55 62 0.460295780 ubox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
38 62 0.9500000 lbox
39 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
showpage
end
%%EOF
