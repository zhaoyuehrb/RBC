%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGAGGGGCAGUGCCUACUACGCAGGCGCACGCUGCGGGCGACAGGACCAGGCAGCAACAUUGCCACGCGGAUCCGCGCCGGCCAAUCAGCAUGGCCAGGGGCGGGGCUUCCCUGAGGCGCGCCGGGAGGCGGCGGCCCACUUCCGGCAAUAACCGCCUGGUCGCCGUCAGGUGCGGGCCCAGGUGGCCGGCGCGCCCGUUGGGCACUGGGGGACGCGGGCGCGUCAGGUGAAGACUGGGGGCCGCAGGCGCG\
CUAGGAGAACU\
) } def
/len { sequence length } bind def

/coor [
[114.76579285 118.87581635]
[107.27682495 130.59783936]
[92.38414764 138.18531799]
[80.79949188 147.71400452]
[82.64836121 161.35366821]
[77.56481934 174.02848816]
[66.97248077 182.47563171]
[53.69785690 184.57751465]
[41.21653748 179.89186096]
[29.52057076 189.28358459]
[17.82460594 198.67530823]
[6.12863970 208.06703186]
[-3.60301137 219.48170471]
[-11.02645779 232.51599121]
[-18.44990540 245.55026245]
[-25.87335014 258.58453369]
[-33.29679871 271.61883545]
[-40.72024536 284.65310669]
[-35.11623001 299.25204468]
[-40.25617599 314.02075195]
[-53.71315384 321.98593140]
[-69.13319397 319.38659668]
[-79.23542023 307.45016479]
[-79.24987793 291.81259155]
[-69.16973114 279.85745239]
[-53.75452423 277.22964478]
[-46.33107758 264.19537354]
[-38.90763092 251.16110229]
[-31.48418427 238.12681580]
[-24.06073761 225.09254456]
[-16.63729095 212.05825806]
[-21.86202049 206.67753601]
[-32.31148148 195.91609192]
[-37.53621292 190.53535461]
[-50.78318405 197.57223511]
[-64.03015900 204.60911560]
[-77.27713776 211.64599609]
[-90.52410889 218.68287659]
[-99.94392395 234.52357483]
[-117.45597076 233.18078613]
[-130.61923218 240.37304688]
[-132.47024536 255.77932739]
[-143.04798889 267.13235474]
[-158.28509521 270.06661987]
[-172.32260132 263.45388794]
[-179.76278687 249.83688354]
[-177.74475098 234.45158386]
[-167.04447937 223.21398926]
[-151.77642822 220.44515991]
[-137.81149292 227.20977783]
[-124.64822388 220.01753235]
[-120.95583344 208.52075195]
[-110.07719421 202.41395569]
[-97.56098938 205.43589783]
[-84.31401062 198.39901733]
[-71.06703949 191.36213684]
[-57.82006454 184.32527161]
[-44.57308960 177.28839111]
[-34.08824921 175.56901550]
[-24.40690041 176.46752930]
[-16.11583519 179.56930542]
[-9.66441345 184.33879089]
[-5.34159470 190.15834045]
[-3.26307940 196.37106323]
[8.43288612 186.97933960]
[20.12885094 177.58761597]
[31.82481766 168.19590759]
[30.51451302 151.81687927]
[39.32393646 137.74990845]
[54.94163132 131.65681458]
[71.27080536 136.12934875]
[82.85546112 126.60066986]
[82.45853424 119.11118317]
[69.08941650 112.30921936]
[81.66468048 104.13220215]
[81.26775360 96.64271545]
[68.74082947 88.39189148]
[56.21390533 80.14106750]
[43.68697739 71.89023590]
[27.90612030 70.76102448]
[21.53315353 57.29868698]
[9.00622749 49.04786301]
[-3.56902218 40.87087631]
[-16.19216156 32.76801300]
[-28.81529999 24.66515160]
[-41.43843842 16.56229019]
[-54.06157684 8.45942688]
[-68.93663788 13.28296185]
[-83.41263580 7.36860847]
[-90.65444183 -6.49105549]
[-87.24269104 -21.75192070]
[-74.78832245 -31.20827293]
[-59.17189407 -30.39511299]
[-47.76701355 -19.69638824]
[-45.95871353 -4.16371107]
[-33.33557510 3.93915105]
[-20.71243668 12.04201317]
[-8.08929825 20.14487457]
[4.53383970 28.24773788]
[11.83529758 29.21298218]
[17.25705338 36.52093506]
[29.78397942 44.77175903]
[44.66882706 45.31082153]
[51.93780136 59.36331177]
[64.46472931 67.61413574]
[76.99165344 75.86495972]
[89.51858521 84.11579132]
[104.38146973 86.13928223]
[118.65818787 81.53761292]
[125.83627319 75.94505310]
[133.13002014 76.96685791]
[147.45989990 72.53348541]
[161.78976440 68.10011292]
[176.09330750 63.58250809]
[190.37002563 58.98083878]
[204.64674377 54.37916946]
[209.31892395 49.77928543]
[214.79022217 48.40908813]
[219.31382751 49.84146881]
[233.69487000 45.57700729]
[248.07591248 41.31254959]
[262.45693970 37.04808807]
[276.83798218 32.78362656]
[291.21902466 28.51916504]
[305.60006714 24.25470543]
[319.98110962 19.99024391]
[316.31213379 15.33072662]
[313.84619141 9.33169746]
[312.93368530 2.29739976]
[313.85076904 -5.38805103]
[316.78268433 -13.27808857]
[322.78683472 -27.02400017]
[328.79098511 -40.76991272]
[334.79513550 -54.51582336]
[340.79931641 -68.26173401]
[346.80346680 -82.00764465]
[352.80761719 -95.75356293]
[358.81176758 -109.49947357]
[364.81591797 -123.24538422]
[370.82009888 -136.99130249]
[363.42184448 -145.67189026]
[359.79800415 -156.43244934]
[360.43222046 -167.71783447]
[365.19546509 -177.91189575]
[373.37026978 -185.56895447]
[383.75839233 -189.61880493]
[394.85632324 -189.51615906]
[401.34185791 -203.04161072]
[407.82739258 -216.56706238]
[402.34674072 -231.39062500]
[409.02896118 -245.71275330]
[423.90963745 -251.03639221]
[438.16030884 -244.20310974]
[443.32632446 -229.26698303]
[436.34277344 -215.08934021]
[421.35284424 -210.08154297]
[414.86730957 -196.55609131]
[408.38180542 -183.03062439]
[418.19686890 -167.08639526]
[416.36410522 -148.30163574]
[403.44741821 -134.33372498]
[384.56600952 -130.98713684]
[378.56182861 -117.24122620]
[372.55767822 -103.49531555]
[366.55352783 -89.74940491]
[360.54937744 -76.00349426]
[354.54522705 -62.25757980]
[348.54104614 -48.51166534]
[342.53689575 -34.76575470]
[336.53274536 -21.01984406]
[330.52859497 -7.27393103]
[333.73150635 -0.49224389]
[348.68066406 0.74178743]
[340.13735962 13.07113075]
[343.34027100 19.85281754]
[357.77050781 23.94777679]
[372.20071411 28.04273415]
[386.63095093 32.13769150]
[401.06115723 36.23265076]
[418.82577515 31.32559776]
[430.53125000 44.41973877]
[445.00866699 48.34462738]
[459.48605347 52.26951599]
[473.96347046 56.19440460]
[488.44088745 60.11929321]
[502.25195312 48.32819366]
[520.22009277 47.22428513]
[535.10748291 57.06219864]
[541.03143311 73.72718048]
[555.59716797 77.31032562]
[570.16296387 80.89346313]
[584.74951172 84.39085388]
[599.35644531 87.80236816]
[613.96331787 91.21389008]
[628.57025146 94.62540436]
[643.17712402 98.03691864]
[657.78405762 101.44843292]
[672.39093018 104.85994720]
[686.99780273 108.27146149]
[701.60473633 111.68297577]
[716.21160889 115.09449005]
[725.24505615 113.99948883]
[730.96984863 118.63303375]
[745.53558350 122.21617889]
[755.21142578 110.41190338]
[769.05438232 103.98259735]
[784.31585693 104.20479584]
[797.96575928 111.03439331]
[807.29382324 123.11535645]
[810.44799805 138.04901123]
[806.80200195 152.87025452]
[797.07977295 164.63633728]
[783.21160889 171.01107788]
[767.95111084 170.72879028]
[754.32824707 163.84548950]
[745.04779053 151.72789001]
[741.95245361 136.78192139]
[727.38671875 133.19877625]
[712.80010986 129.70140076]
[698.19323730 126.28987885]
[683.58630371 122.87836456]
[668.97943115 119.46685028]
[654.37249756 116.05533600]
[639.76562500 112.64382172]
[625.15869141 109.23229980]
[610.55181885 105.82078552]
[595.94488525 102.40927124]
[581.33801270 98.99775696]
[574.13452148 100.53150940]
[566.57977295 95.45921326]
[552.01403809 91.87607574]
[537.44830322 88.29293060]
[529.46594238 97.38837433]
[518.31317139 102.26800537]
[506.07165527 101.95436096]
[495.05453491 96.44558716]
[487.36959839 86.72727966]
[484.51599121 74.59669495]
[470.03857422 70.67180634]
[455.56118774 66.74691772]
[441.08377075 62.82202911]
[426.60635376 58.89714050]
[415.98190308 64.63564301]
[403.90444946 61.50944901]
[396.96621704 50.66287231]
[382.53598022 46.56791306]
[368.10577393 42.47295761]
[353.67553711 38.37799835]
[339.24533081 34.28303909]
[324.24557495 34.37128830]
[309.86453247 38.63574600]
[295.48348999 42.90020752]
[281.10244751 47.16466904]
[266.72140503 51.42913055]
[252.34036255 55.69358826]
[237.95932007 59.95804977]
[223.57827759 64.22251129]
[209.24841309 68.65588379]
[194.97169495 73.25755310]
[180.69497681 77.85922241]
[175.31129456 82.88504791]
[166.22314453 82.42997742]
[151.89326477 86.86334991]
[137.56340027 91.29672241]
[123.25985718 95.81432343]
[108.98313904 100.41600037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 72]
[4 71]
[9 67]
[10 66]
[11 65]
[12 64]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[40 51]
[41 50]
[76 107]
[77 106]
[78 105]
[79 104]
[81 102]
[82 101]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[108 266]
[109 265]
[111 264]
[112 263]
[113 262]
[114 260]
[115 259]
[116 258]
[119 257]
[120 256]
[121 255]
[122 254]
[123 253]
[124 252]
[125 251]
[126 250]
[131 171]
[132 170]
[133 169]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[147 158]
[148 157]
[149 156]
[175 249]
[176 248]
[177 247]
[178 246]
[179 245]
[181 242]
[182 241]
[183 240]
[184 239]
[185 238]
[189 232]
[190 231]
[191 230]
[192 228]
[193 227]
[194 226]
[195 225]
[196 224]
[197 223]
[198 222]
[199 221]
[200 220]
[201 219]
[203 218]
[204 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
