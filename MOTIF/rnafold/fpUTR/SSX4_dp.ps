%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SSX4)
} def

/sequence { (\
ACACGCCGAUUUGCCCUUUUGAUUCUUCCACAAUCAGGGUGAGACUGCUCCCAGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 55 0.045105159 ubox
2 13 0.009143218 ubox
2 41 0.039473946 ubox
2 47 0.008474900 ubox
2 54 0.047618960 ubox
2 56 0.575024591 ubox
3 12 0.009428668 ubox
3 40 0.039466401 ubox
3 46 0.008268493 ubox
3 55 0.576976486 ubox
4 13 0.007288849 ubox
4 39 0.039321236 ubox
4 41 0.023935006 ubox
4 47 0.016803820 ubox
4 54 0.576868599 ubox
4 56 0.102317653 ubox
5 12 0.007118629 ubox
5 14 0.044261876 ubox
5 40 0.023908961 ubox
5 46 0.016094102 ubox
5 48 0.644619791 ubox
5 55 0.100518116 ubox
5 57 0.214566746 ubox
6 13 0.044215685 ubox
6 38 0.038347090 ubox
6 39 0.023789723 ubox
6 47 0.642241068 ubox
6 54 0.100405318 ubox
6 56 0.213543381 ubox
7 13 0.007398619 ubox
7 21 0.004848240 ubox
7 37 0.038434651 ubox
7 38 0.023557137 ubox
7 41 0.012877441 ubox
7 47 0.092685763 ubox
7 56 0.025480016 ubox
8 12 0.005902973 ubox
8 19 0.004056491 ubox
8 20 0.004919061 ubox
8 25 0.004213518 ubox
8 35 0.035441649 ubox
8 40 0.005011790 ubox
8 46 0.098969508 ubox
8 50 0.339164526 ubox
8 55 0.009506149 ubox
9 18 0.004705329 ubox
9 19 0.004888222 ubox
9 24 0.004086337 ubox
9 34 0.035497813 ubox
9 49 0.338593265 ubox
9 55 0.008347277 ubox
10 33 0.033445531 ubox
10 42 0.045252676 ubox
10 43 0.780718585 ubox
10 44 0.112089980 ubox
10 54 0.008149241 ubox
11 22 0.003934903 ubox
11 32 0.029896029 ubox
11 33 0.022454615 ubox
11 37 0.003539064 ubox
11 41 0.034078101 ubox
11 42 0.946056263 ubox
11 43 0.112885586 ubox
11 44 0.018155418 ubox
11 53 0.006171718 ubox
12 21 0.004056760 ubox
12 30 0.022317282 ubox
12 32 0.025494962 ubox
12 36 0.003981549 ubox
12 41 0.959971524 ubox
12 42 0.107188539 ubox
12 43 0.019620873 ubox
12 47 0.003732099 ubox
12 53 0.003282984 ubox
13 29 0.022557631 ubox
13 31 0.027777384 ubox
13 35 0.004050221 ubox
13 40 0.992752695 ubox
13 48 0.012279057 ubox
13 57 0.010835704 ubox
14 38 0.003530606 ubox
14 39 0.996758781 ubox
14 47 0.012235722 ubox
14 56 0.010814945 ubox
15 37 0.004444218 ubox
15 38 0.996713513 ubox
15 39 0.035053298 ubox
16 37 0.994298476 ubox
16 38 0.037097516 ubox
16 39 0.005345013 ubox
16 43 0.008108138 ubox
16 54 0.009144202 ubox
17 33 0.027645021 ubox
17 36 0.795610509 ubox
17 37 0.034981633 ubox
17 38 0.004767726 ubox
17 39 0.008603240 ubox
17 42 0.007962406 ubox
17 44 0.005139033 ubox
17 53 0.008571361 ubox
18 32 0.051948531 ubox
18 33 0.091736327 ubox
18 36 0.042172691 ubox
18 37 0.008094535 ubox
18 38 0.014656909 ubox
18 41 0.007054504 ubox
18 43 0.005072977 ubox
18 44 0.007294536 ubox
19 32 0.098481539 ubox
19 33 0.509569795 ubox
19 36 0.037166160 ubox
19 37 0.079495927 ubox
19 42 0.004792350 ubox
19 43 0.007921188 ubox
20 30 0.116494106 ubox
20 32 0.520491351 ubox
20 36 0.581505762 ubox
20 41 0.004444537 ubox
20 42 0.008071905 ubox
21 27 0.006473714 ubox
21 28 0.137932438 ubox
21 29 0.113630271 ubox
21 31 0.515551735 ubox
21 35 0.824698937 ubox
22 26 0.013012518 ubox
22 27 0.149782375 ubox
22 34 0.824139487 ubox
22 40 0.009296960 ubox
23 33 0.818330459 ubox
23 39 0.009256638 ubox
23 43 0.005302242 ubox
24 32 0.766078231 ubox
24 38 0.009179791 ubox
24 42 0.007804891 ubox
24 44 0.004363540 ubox
25 37 0.009293883 ubox
25 41 0.008032636 ubox
25 43 0.006181733 ubox
26 33 0.017427079 ubox
26 36 0.008825377 ubox
26 42 0.006134538 ubox
27 32 0.022771602 ubox
27 39 0.007121270 ubox
27 41 0.005478266 ubox
28 38 0.008699404 ubox
28 39 0.006038709 ubox
29 37 0.008796661 ubox
29 38 0.006043302 ubox
29 41 0.003982641 ubox
30 40 0.004089484 ubox
31 39 0.004090572 ubox
37 50 0.005235896 ubox
37 52 0.013283204 ubox
38 49 0.005419827 ubox
38 51 0.013245073 ubox
38 52 0.047449228 ubox
38 58 0.008187271 ubox
39 48 0.006205733 ubox
39 50 0.012383980 ubox
39 51 0.047748752 ubox
39 57 0.008662100 ubox
40 47 0.006159821 ubox
40 53 0.007109333 ubox
40 56 0.008666546 ubox
41 46 0.004170510 ubox
41 50 0.112011386 ubox
41 52 0.013851029 ubox
42 49 0.112845784 ubox
43 48 0.112876514 ubox
43 50 0.031276450 ubox
44 49 0.028305357 ubox
44 55 0.623995618 ubox
45 54 0.641031811 ubox
46 53 0.640778407 ubox
46 56 0.035141228 ubox
47 52 0.633485272 ubox
47 55 0.062364889 ubox
47 57 0.125692802 ubox
48 54 0.063960621 ubox
48 56 0.126143264 ubox
49 53 0.058363893 ubox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
showpage
end
%%EOF
