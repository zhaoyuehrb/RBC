%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCGGCGGUGGGAGGAGUGGGGGACCUGGAGGGAGGUGGUGAAAUAGAAUGGUCCUGGGGGACGGGACUCCAGGGGUUUGACGAUUAGGCGUCAAGACUGACUUAGACCUGGGAAGAAAACCAGAGGCAGUCGAGCAGAGAGGCCAAACGCCAGGCAGGGCGAAGUCAGCCGGAG\
) } def
/len { sequence length } bind def

/coor [
[188.28631592 380.44479370]
[183.34999084 366.28030396]
[171.06230164 362.34411621]
[163.17510986 351.88766479]
[162.75373840 338.60205078]
[170.17675781 327.34149170]
[165.49118042 313.09210205]
[160.80560303 298.84271240]
[156.12001038 284.59332275]
[142.42707825 273.63793945]
[146.30184937 255.65032959]
[141.36552429 241.48583984]
[136.42918396 227.32135010]
[121.51846313 226.54701233]
[108.00356293 220.10551453]
[97.95735168 208.95031738]
[92.93385315 194.76045227]
[93.72792053 179.68786621]
[100.24965668 166.03099060]
[111.53334045 155.88435364]
[106.59700775 141.71987915]
[95.31705475 143.61515808]
[83.51715851 142.40248108]
[72.06647491 137.94882202]
[61.86471939 130.36665344]
[53.77250671 120.01971436]
[40.09819031 126.18518829]
[26.42387390 132.35066223]
[12.74955845 138.51614380]
[7.39042282 153.38406372]
[-6.94761372 160.03208923]
[-21.75804901 154.51606750]
[-28.25411224 140.10853577]
[-22.58180618 125.35725403]
[-8.10641003 119.01387787]
[6.58408260 124.84182739]
[20.25839806 118.67634583]
[33.93271255 112.51087189]
[47.60702896 106.34539795]
[48.85866547 98.95057678]
[33.90243912 97.80547333]
[18.94621086 96.66036987]
[3.98998260 95.51526642]
[-10.96624470 94.37016296]
[-25.44923973 98.27437592]
[-38.33483887 90.59574890]
[-41.79354095 75.99994659]
[-33.72377777 63.35562515]
[-19.02887344 60.34567642]
[-6.63802433 68.79849243]
[7.86196566 72.63909912]
[22.36195564 76.47970581]
[36.86194611 80.32032013]
[51.36193848 84.16092682]
[52.61357117 76.76610565]
[41.72991943 66.44398499]
[30.84626770 56.12186813]
[19.96261597 45.79975128]
[9.07896328 35.47763443]
[-1.80468941 25.15551758]
[-12.68834209 14.83339882]
[-23.57199478 4.51128149]
[-39.08695984 6.46572018]
[-52.20031357 -2.05331922]
[-56.72032547 -17.02340508]
[-50.51278687 -31.37612343]
[-36.50870895 -38.33455658]
[-21.32038689 -34.61314774]
[-12.11928272 -21.96903038]
[-13.24987698 -6.37237072]
[-2.36622429 3.94974685]
[8.51742840 14.27186489]
[19.40108109 24.59398270]
[30.28473282 34.91609955]
[41.16838455 45.23821640]
[52.05203629 55.56033325]
[62.93569183 65.88245392]
[74.34626770 57.93155670]
[87.22431183 53.55454254]
[100.50554657 52.93507767]
[100.24081421 37.93741608]
[99.97608948 22.93975258]
[99.71136475 7.94208813]
[99.44663239 -7.05557585]
[99.18190765 -22.05323982]
[87.63846588 -32.84788513]
[87.19248962 -48.64588165]
[98.10858154 -60.07455444]
[113.91040802 -60.35347748]
[125.22303009 -49.31716919]
[125.33486938 -33.51327515]
[114.17957306 -22.31796646]
[114.44429779 -7.32030296]
[114.70903015 7.67736053]
[114.97375488 22.67502403]
[115.23847961 37.67268753]
[115.50321198 52.67035294]
[128.89225769 59.43299103]
[141.12019348 50.74521255]
[153.34814453 42.05743408]
[165.57608032 33.36965179]
[177.80401611 24.68187523]
[183.00737000 17.13681221]
[190.32530212 15.95091915]
[202.70466614 7.48029757]
[215.08403015 -0.99032360]
[216.84318542 -5.03504181]
[219.53779602 -7.99583006]
[222.70611572 -9.71070671]
[225.88156128 -10.18649483]
[228.64894104 -9.58545494]
[241.59497070 -17.16174889]
[254.54101562 -24.73804283]
[267.48703003 -32.31433487]
[268.88412476 -47.76839066]
[279.12338257 -59.42760086]
[294.26760864 -62.80876923]
[308.49353027 -56.61175919]
[316.33099365 -43.21945572]
[314.76632690 -27.78146744]
[304.40118408 -16.23401833]
[289.22119141 -13.01733685]
[275.06332397 -19.36830330]
[262.11730957 -11.79200935]
[249.17126465 -4.21571541]
[236.22523499 3.36057854]
[223.55464172 11.38903713]
[211.17529297 19.85965919]
[198.79592896 28.33028030]
[186.49179077 36.90981293]
[174.26385498 45.59759140]
[162.03591919 54.28536987]
[149.80798340 62.97315216]
[137.58004761 71.66092682]
[144.75140381 89.97614288]
[143.71418762 109.10796356]
[135.07499695 125.63716125]
[120.76148987 136.78353882]
[125.69782257 150.94802856]
[140.84378052 151.88391113]
[154.44087219 158.52935791]
[164.43081665 169.84370422]
[169.31463623 184.08224487]
[168.37756348 199.06512451]
[161.79348755 212.51113892]
[150.59367371 222.38502502]
[155.52999878 236.54949951]
[160.46633911 250.71398926]
[171.73455811 257.03054810]
[175.54461670 268.95321655]
[170.36941528 279.90771484]
[175.05499268 294.15713501]
[179.74057007 308.40652466]
[184.42616272 322.65591431]
[200.17332458 330.24154663]
[205.47239685 346.54351807]
[197.51446533 361.34396362]
[202.45080566 375.50845337]
[220.96658325 383.23623657]
[227.77114868 401.78732300]
[218.92016602 419.11312866]
[224.59921265 432.99652100]
[230.27825928 446.87988281]
[245.22537231 451.47534180]
[253.67817688 464.63146973]
[251.64553833 480.13638306]
[240.08720398 490.66912842]
[224.46064758 491.25646973]
[212.14427185 481.62106323]
[208.95349121 466.31246948]
[216.39488220 452.55892944]
[210.71583557 438.67556763]
[205.03678894 424.79217529]
[194.80018616 423.50836182]
[185.95957947 418.03515625]
[180.15692139 409.30987549]
[178.50276184 398.88067627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[6 154]
[7 153]
[8 152]
[9 151]
[11 148]
[12 147]
[13 146]
[20 139]
[21 138]
[26 39]
[27 38]
[28 37]
[29 36]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[104 129]
[105 128]
[106 127]
[111 126]
[112 125]
[113 124]
[114 123]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
