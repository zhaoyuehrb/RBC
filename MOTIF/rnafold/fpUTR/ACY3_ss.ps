%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGUGACAGCCCCACGGGCCACGCAGCAAGCAGAAGAUCCCCGGGAGUCACCCUCAACCCUCUGGGGCCACGUGGGCCCAUGAAUACCAGCCUGUCUGCGAGUUAGACGCCAGUCCUGGUGGCCCGGGAAGCCCAGAUCCGCAUCAGCGGUUCUGCACCCCACACCAGC\
) } def
/len { sequence length } bind def

/coor [
[89.58883667 209.94294739]
[101.85075378 200.69412231]
[99.93814087 185.81655884]
[90.64117432 174.17973328]
[96.55569458 159.50564575]
[94.64308167 144.62808228]
[92.73047638 129.75051880]
[80.49264526 120.73584747]
[74.86738586 107.79338837]
[76.39688873 94.85707092]
[83.60226440 85.33228302]
[76.50112152 72.11964417]
[60.62771988 62.81971741]
[61.80295563 45.32587051]
[54.46168900 32.24512863]
[47.50656891 26.26553726]
[47.10828781 18.85775757]
[40.00715256 5.64511585]
[32.90601730 -7.56752443]
[25.80488014 -20.78016472]
[18.70374489 -33.99280548]
[11.60260868 -47.20544434]
[4.50147247 -60.41808701]
[-2.59966326 -73.63072968]
[-9.44441223 -79.73635101]
[-9.70733166 -87.15016937]
[-16.56596565 -100.49030304]
[-23.42460060 -113.83042908]
[-34.05579376 -114.95387268]
[-42.96654510 -120.80591583]
[-48.19222260 -130.06364441]
[-48.59566116 -140.65692139]
[-58.39973450 -152.00946045]
[-68.20381165 -163.36199951]
[-78.00788116 -174.71453857]
[-87.81195831 -186.06707764]
[-97.71929932 -197.32960510]
[-107.72908020 -208.50119019]
[-122.79395294 -200.77189636]
[-139.88790894 -198.35542297]
[-157.15658569 -201.73278809]
[-172.65489197 -210.74432373]
[-184.56597900 -224.58428955]
[-191.41322327 -241.86920166]
[-192.24089050 -260.77484131]
[-206.75314331 -264.56884766]
[-221.26539612 -268.36285400]
[-235.78077698 -261.53033447]
[-250.10859680 -268.74789429]
[-253.25778198 -284.47882080]
[-242.81254578 -296.65570068]
[-226.78556824 -295.93746948]
[-217.47138977 -282.87509155]
[-202.95913696 -279.08108521]
[-188.44688416 -275.28710938]
[-183.64933777 -281.05194092]
[-195.17904663 -290.64703369]
[-209.10948181 -296.20965576]
[-208.12384033 -311.17724609]
[-193.58422852 -314.86505127]
[-185.58395386 -302.17675781]
[-174.05424500 -292.58166504]
[-169.25669861 -298.34649658]
[-175.62355042 -311.92822266]
[-190.21353149 -317.38442993]
[-196.47694397 -331.24893188]
[-191.18537903 -345.12463379]
[-197.55223083 -358.70635986]
[-203.91908264 -372.28808594]
[-210.28593445 -385.86981201]
[-216.65277100 -399.45153809]
[-231.18966675 -406.23815918]
[-234.80703735 -421.86807251]
[-224.72994995 -434.35131836]
[-208.68867493 -434.11184692]
[-198.98872375 -421.33334351]
[-203.07106018 -405.81835938]
[-196.70420837 -392.23666382]
[-190.33735657 -378.65493774]
[-183.97050476 -365.07321167]
[-177.60365295 -351.49148560]
[-163.55326843 -346.68292236]
[-156.90289307 -332.99981689]
[-162.04182434 -318.29507446]
[-155.67497253 -304.71334839]
[-139.28968811 -307.44900513]
[-123.03445435 -305.38522339]
[-108.26651001 -298.82531738]
[-96.18117523 -288.44238281]
[-87.71527863 -275.21261597]
[-83.47504425 -260.32434082]
[-83.69403076 -245.07196045]
[-88.22383118 -230.74328613]
[-96.55749512 -218.51097107]
[-86.54771423 -207.33940125]
[-79.71701050 -204.44537354]
[-76.45941925 -195.87115479]
[-66.65534210 -184.51861572]
[-56.85127258 -173.16607666]
[-47.04719543 -161.81353760]
[-37.24312210 -150.46099854]
[-44.51750565 -163.57905579]
[-41.11746216 -178.18862915]
[-28.79844475 -186.74678040]
[-13.92078686 -184.83489990]
[-4.16585684 -173.44009399]
[-4.57014704 -158.44554138]
[-14.92677593 -147.59208679]
[-2.57005858 -156.09570312]
[9.78665924 -164.59931946]
[16.34530449 -179.62983704]
[32.66949463 -181.19599915]
[41.96630096 -167.68669128]
[34.67196655 -152.99911499]
[18.29027748 -152.24259949]
[5.93355989 -143.73898315]
[-6.42315817 -135.23536682]
[-10.08446884 -120.68906403]
[-3.22583389 -107.34893799]
[3.63280106 -94.00880432]
[10.61297703 -80.73186493]
[17.71411324 -67.51922607]
[24.81524849 -54.30658340]
[31.91638374 -41.09394073]
[39.01752090 -27.88129997]
[46.11865616 -14.66866016]
[53.21979141 -1.45601964]
[60.32092667 11.75662041]
[67.54242706 24.90386009]
[74.88369751 37.98460007]
[86.46048737 41.57125473]
[92.67626953 52.44039917]
[89.71376801 65.01850891]
[96.81490326 78.23114777]
[119.74497223 82.60686493]
[129.50175476 108.22104645]
[141.53965759 117.17028046]
[153.57756042 126.11952209]
[165.61546326 135.06875610]
[181.30667114 137.09275818]
[186.90444946 150.89544678]
[198.94236755 159.84468079]
[210.98027039 168.79393005]
[223.01817322 177.74316406]
[239.36129761 179.09747314]
[246.11434937 194.04164124]
[236.33035278 207.20240784]
[220.07426453 205.04107666]
[214.06893921 189.78106689]
[202.03102112 180.83183289]
[189.99311829 171.88259888]
[177.95521545 162.93334961]
[163.12504578 161.54945374]
[156.66622925 147.10665894]
[144.62832642 138.15742493]
[132.59042358 129.20819092]
[120.55251312 120.25894928]
[107.60803986 127.83789825]
[109.52064514 142.71546936]
[111.43325806 157.59303284]
[120.86702728 170.29399109]
[114.81570435 183.90394592]
[116.72831726 198.78150940]
[130.93086243 204.62815857]
[140.29458618 216.80256653]
[142.30070496 232.02987671]
[136.40957642 246.21401978]
[124.20587158 255.53955078]
[108.97234344 257.49792480]
[94.80673218 251.56234741]
[85.51950836 239.32948303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[5 160]
[6 159]
[7 158]
[11 134]
[12 133]
[14 130]
[15 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[24 121]
[26 120]
[27 119]
[28 118]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 95]
[38 94]
[45 55]
[46 54]
[47 53]
[63 85]
[64 84]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[108 117]
[109 116]
[110 115]
[136 157]
[137 156]
[138 155]
[139 154]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
