%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUUGUCGGACCAGCCUUUCAUUAAAGUGAAGAGACUAGCGCGUUGCCCAGGCCUGGCGGCGGCUUUUCCUCCCCUUCACCCUUGCGGCCCCGGCCCCGGCGCUUGCUCACCGCCGCCUAUGCUCUCCCCGCAGCCACCCGUGGGACACGGUCAUCCAGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[126.88581848 173.47686768]
[115.31877136 183.02691650]
[100.38430023 184.42747498]
[87.24334717 177.19454956]
[80.43705750 163.82763672]
[82.31750488 148.94596863]
[92.23515320 137.69206238]
[81.05052185 147.68727112]
[69.86588287 157.68246460]
[60.40429688 169.32197571]
[52.90429688 182.31236267]
[55.65095901 198.11854553]
[44.89833450 210.02487183]
[28.89491844 208.89782715]
[19.91716194 195.60198975]
[24.85203171 180.33677673]
[39.91391754 174.81236267]
[47.41391754 161.82197571]
[36.51401138 151.51702881]
[23.96459579 159.73361206]
[11.41517925 167.95018005]
[-1.13423717 176.16676331]
[-13.68365383 184.38333130]
[-26.23307037 192.59991455]
[-33.13637924 207.47528076]
[-49.49232483 208.66481018]
[-58.47531891 194.94482422]
[-50.84442139 180.42927551]
[-34.44964600 180.05049133]
[-21.90023041 171.83392334]
[-9.35081482 163.61734009]
[3.19860172 155.40077209]
[15.74801826 147.18418884]
[28.29743385 138.96760559]
[48.17218399 136.96740723]
[59.87068939 146.49783325]
[71.05532074 136.50263977]
[82.23995209 126.50743103]
[71.69015503 100.76984406]
[85.13653564 80.23072815]
[80.18235016 66.07247925]
[75.22816467 51.91423035]
[70.27397919 37.75598145]
[58.41296005 27.28569794]
[61.51251984 12.71716881]
[56.55833435 -1.44108081]
[50.74658203 -8.54334068]
[51.64657974 -15.91064262]
[46.95800400 -30.15905380]
[42.26942444 -44.40746689]
[28.44085312 -51.57742691]
[23.88894463 -66.09413147]
[30.80962563 -79.23337555]
[26.12104988 -93.48178864]
[21.43247414 -107.73020172]
[16.74389648 -121.97861481]
[11.06596756 -129.18830872]
[12.10356522 -136.53749084]
[7.68223810 -150.87107849]
[2.14011455 -158.18568420]
[3.31495261 -165.51417542]
[-0.83757997 -179.92794800]
[-4.99011278 -194.34170532]
[-16.24539566 -205.46057129]
[-12.33385086 -219.83238220]
[-16.48638344 -234.24613953]
[-31.59177017 -234.30938721]
[-46.06707001 -238.62705994]
[-58.73883438 -246.84916687]
[-68.57982635 -258.30917358]
[-74.79227448 -272.07806396]
[-76.87256622 -287.03964233]
[-74.65205383 -301.98104858]
[-68.31076050 -315.69107056]
[-58.36273193 -327.05828857]
[-45.61441803 -335.16119385]
[-31.09926224 -339.34295654]
[-15.99394798 -339.26452637]
[-1.52299261 -334.93231201]
[11.14050770 -326.69747925]
[20.96997833 -315.22760010]
[27.16859055 -301.45248413]
[29.23384857 -286.48880005]
[26.99833298 -271.54962158]
[20.64326668 -257.84597778]
[10.68382454 -246.48876953]
[-2.07262397 -238.39868164]
[2.07990861 -223.98490906]
[13.03817558 -213.89701843]
[9.42364693 -198.49423218]
[13.57617950 -184.08047485]
[17.72871208 -169.66671753]
[22.01583099 -155.29240417]
[26.43715858 -140.95881653]
[30.99230957 -126.66719055]
[35.68088531 -112.41877747]
[40.36946106 -98.17036438]
[45.05803680 -83.92195129]
[58.42875290 -77.45978546]
[63.38660812 -63.07666397]
[56.51783752 -49.09604263]
[61.20641327 -34.84762955]
[65.89498901 -20.59921837]
[70.71658325 -6.39526653]
[75.67076874 7.76298332]
[87.17742920 17.22057533]
[84.43222809 32.80179596]
[89.38641357 46.96004486]
[94.34059906 61.11829376]
[99.29478455 75.27654266]
[111.38330841 76.43739319]
[122.10401917 83.46714783]
[128.64978027 95.26968384]
[128.97370911 109.43876648]
[122.37846375 122.74351501]
[135.22633362 130.48510742]
[148.07420349 138.22669983]
[160.92207336 145.96830750]
[173.76994324 153.70989990]
[186.61781311 161.45149231]
[199.46568298 169.19308472]
[212.45605469 176.69308472]
[225.58441162 183.94886780]
[238.71275330 191.20465088]
[251.90838623 198.33737183]
[265.17010498 205.34638977]
[280.22973633 197.68923950]
[296.72485352 200.47418213]
[308.20571899 212.41195679]
[310.30264282 228.67402649]
[323.69311523 235.43385315]
[337.08358765 242.19367981]
[350.47406006 248.95350647]
[363.86453247 255.71331787]
[377.60177612 248.49757385]
[392.95190430 250.76777649]
[404.01242065 261.65100098]
[406.53033447 276.96243286]
[399.53750610 290.81448364]
[385.72277832 297.88079834]
[370.39819336 295.44421387]
[359.45639038 284.44161987]
[357.10470581 269.10379028]
[343.71423340 262.34396362]
[330.32376099 255.58415222]
[316.93328857 248.82432556]
[303.54281616 242.06449890]
[292.26577759 249.25375366]
[278.80047607 249.92683411]
[266.66925049 243.80032349]
[259.09851074 232.38352966]
[258.16107178 218.60812378]
[244.89935303 211.59909058]
[237.48538208 211.25230408]
[231.45697021 204.33300781]
[218.32862854 197.07720947]
[205.20027161 189.82142639]
[200.40773010 190.27323914]
[195.28675842 187.69021606]
[191.72407532 182.04095459]
[178.87622070 174.29936218]
[166.02835083 166.55776978]
[153.18048096 158.81616211]
[140.33261108 151.07456970]
[127.48474121 143.33297729]
[114.63687134 135.59138489]
[126.47364807 144.80499268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 38]
[8 37]
[9 36]
[10 18]
[11 17]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[40 110]
[41 109]
[42 108]
[43 107]
[45 105]
[46 104]
[48 103]
[49 102]
[50 101]
[53 98]
[54 97]
[55 96]
[56 95]
[58 94]
[59 93]
[61 92]
[62 91]
[63 90]
[65 88]
[66 87]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[120 161]
[121 160]
[122 157]
[123 156]
[124 155]
[125 153]
[126 152]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
