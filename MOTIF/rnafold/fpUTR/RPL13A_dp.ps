%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL13A)
} def

/sequence { (\
CACUUCUGCCGCCCCUGUUUCAAGGGAUAAGAAACCCUGCGACAAAACCUCCUCCUUUUCCAAGCGGCUGCCGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.007192129 ubox
2 69 0.007246505 ubox
3 76 0.974839178 ubox
4 33 0.004395956 ubox
4 74 0.013114429 ubox
4 75 0.990284394 ubox
4 76 0.004679196 ubox
5 32 0.004881649 ubox
5 73 0.013057186 ubox
5 74 0.994046130 ubox
5 75 0.005642918 ubox
6 31 0.004934965 ubox
6 73 0.992834526 ubox
6 76 0.006229855 ubox
7 30 0.004897896 ubox
7 70 0.044478334 ubox
7 73 0.008351829 ubox
7 75 0.006355465 ubox
8 68 0.230685052 ubox
8 69 0.010215745 ubox
8 71 0.971522486 ubox
8 72 0.026718330 ubox
9 67 0.231768210 ubox
9 70 0.971391614 ubox
10 41 0.005459422 ubox
10 66 0.232262260 ubox
10 70 0.026249733 ubox
10 73 0.003264382 ubox
11 40 0.005516769 ubox
11 65 0.232193161 ubox
11 68 0.971355227 ubox
11 69 0.013216784 ubox
11 71 0.014170544 ubox
12 26 0.003733796 ubox
12 39 0.005510758 ubox
12 64 0.231029765 ubox
12 67 0.970543862 ubox
12 70 0.014397074 ubox
13 25 0.003871965 ubox
13 26 0.124374995 ubox
13 66 0.966255853 ubox
13 67 0.048395681 ubox
14 24 0.004190807 ubox
14 25 0.128198930 ubox
14 26 0.011007613 ubox
14 66 0.066677504 ubox
14 67 0.013051122 ubox
15 24 0.129125077 ubox
15 25 0.010959485 ubox
15 31 0.003397974 ubox
15 64 0.827645325 ubox
15 66 0.016139347 ubox
15 67 0.030216677 ubox
16 22 0.027568170 ubox
16 23 0.128053176 ubox
16 24 0.010766122 ubox
16 30 0.003290829 ubox
16 41 0.018140898 ubox
16 44 0.495651453 ubox
16 62 0.136112086 ubox
16 63 0.762242924 ubox
16 66 0.048118571 ubox
17 21 0.032113631 ubox
17 35 0.017716065 ubox
17 40 0.033296683 ubox
17 43 0.620785427 ubox
17 48 0.110286892 ubox
17 61 0.178496644 ubox
17 65 0.267336158 ubox
18 34 0.017786749 ubox
18 39 0.032853087 ubox
18 42 0.619560003 ubox
18 45 0.020807641 ubox
18 46 0.017655846 ubox
18 47 0.110123090 ubox
18 63 0.028777765 ubox
18 64 0.267318140 ubox
19 33 0.017804089 ubox
19 41 0.595908758 ubox
19 42 0.044733195 ubox
19 44 0.023265184 ubox
19 45 0.019849543 ubox
19 46 0.107710775 ubox
19 47 0.003916027 ubox
19 62 0.034164258 ubox
19 63 0.265064251 ubox
20 32 0.017824201 ubox
20 41 0.052064243 ubox
20 42 0.133543004 ubox
20 44 0.015287964 ubox
20 45 0.069643500 ubox
20 62 0.257105885 ubox
20 63 0.003768989 ubox
21 31 0.017815864 ubox
21 39 0.507580455 ubox
21 41 0.142957418 ubox
22 38 0.360396736 ubox
22 57 0.136889698 ubox
22 58 0.656332170 ubox
22 59 0.040604949 ubox
23 38 0.553439146 ubox
23 50 0.004301568 ubox
23 53 0.011407629 ubox
23 56 0.145882815 ubox
23 57 0.702964468 ubox
23 58 0.035419730 ubox
23 59 0.012833835 ubox
24 36 0.056195930 ubox
24 37 0.661906096 ubox
24 38 0.018054477 ubox
24 49 0.004507438 ubox
24 52 0.011846379 ubox
24 53 0.027547259 ubox
24 54 0.013701009 ubox
24 55 0.143545773 ubox
24 56 0.716725650 ubox
24 57 0.025846785 ubox
24 58 0.005258178 ubox
24 61 0.023023801 ubox
25 35 0.056290608 ubox
25 36 0.661981126 ubox
25 37 0.019054536 ubox
25 48 0.004515161 ubox
25 51 0.011802504 ubox
25 52 0.037055317 ubox
25 53 0.008972470 ubox
25 54 0.139139649 ubox
25 55 0.719454752 ubox
25 56 0.008182309 ubox
25 60 0.022970783 ubox
25 61 0.035765534 ubox
26 35 0.661411739 ubox
26 36 0.019246576 ubox
26 48 0.003506945 ubox
26 49 0.005986037 ubox
26 50 0.009368148 ubox
26 51 0.042382102 ubox
26 52 0.048441332 ubox
26 53 0.109113261 ubox
26 54 0.719994877 ubox
26 55 0.007793541 ubox
26 59 0.022770811 ubox
26 60 0.037319411 ubox
27 50 0.040719483 ubox
27 53 0.713993714 ubox
27 58 0.022195929 ubox
27 59 0.037352002 ubox
28 39 0.022280091 ubox
29 38 0.021195055 ubox
29 57 0.039366308 ubox
29 58 0.003384080 ubox
29 59 0.006440331 ubox
30 38 0.095408019 ubox
30 50 0.654910287 ubox
30 53 0.031557445 ubox
30 56 0.045231684 ubox
30 57 0.003588548 ubox
30 58 0.007395302 ubox
30 59 0.008537165 ubox
30 69 0.003196992 ubox
31 37 0.098064243 ubox
31 49 0.657514421 ubox
31 51 0.218655438 ubox
31 52 0.045079631 ubox
31 54 0.017814397 ubox
31 55 0.044619173 ubox
31 57 0.007595290 ubox
31 58 0.010024232 ubox
31 59 0.010049284 ubox
31 60 0.053553874 ubox
31 68 0.003297114 ubox
32 50 0.211175837 ubox
32 53 0.018692503 ubox
32 56 0.007273430 ubox
32 57 0.010114379 ubox
32 58 0.010833771 ubox
32 59 0.053541621 ubox
33 56 0.009310998 ubox
33 57 0.010949091 ubox
33 58 0.052437820 ubox
34 56 0.009912110 ubox
34 57 0.046882152 ubox
35 67 0.005077803 ubox
36 66 0.006588862 ubox
36 67 0.005427055 ubox
37 64 0.007753188 ubox
37 66 0.008198284 ubox
37 67 0.019269689 ubox
38 44 0.172045921 ubox
38 62 0.054115871 ubox
38 63 0.008423225 ubox
38 66 0.033118626 ubox
39 43 0.176031697 ubox
39 61 0.065388684 ubox
39 65 0.113349947 ubox
40 64 0.113440989 ubox
40 66 0.003747217 ubox
41 51 0.070131639 ubox
41 54 0.036405554 ubox
41 57 0.005691538 ubox
41 58 0.007061253 ubox
41 59 0.011335426 ubox
41 60 0.078593583 ubox
41 65 0.004699147 ubox
42 50 0.067422233 ubox
42 53 0.034476386 ubox
42 56 0.005654957 ubox
42 57 0.006789854 ubox
42 58 0.011242966 ubox
42 59 0.075312978 ubox
44 57 0.044180826 ubox
44 58 0.066222740 ubox
44 59 0.186703331 ubox
45 56 0.046418779 ubox
45 57 0.077973944 ubox
45 58 0.233113606 ubox
45 59 0.076702264 ubox
46 56 0.074567855 ubox
46 57 0.241280017 ubox
46 58 0.083155296 ubox
46 59 0.031820177 ubox
47 56 0.235220109 ubox
47 57 0.075074712 ubox
47 58 0.031274464 ubox
48 67 0.004148990 ubox
49 64 0.056876256 ubox
49 66 0.005357422 ubox
50 63 0.055796981 ubox
51 66 0.008800429 ubox
51 67 0.006453882 ubox
52 64 0.073075136 ubox
52 66 0.010858227 ubox
52 67 0.004964600 ubox
53 63 0.071642190 ubox
53 66 0.007986024 ubox
53 67 0.003468222 ubox
54 66 0.025996723 ubox
54 67 0.003924898 ubox
55 64 0.304944199 ubox
55 66 0.006592066 ubox
56 63 0.307441722 ubox
56 64 0.045502796 ubox
57 62 0.264008992 ubox
57 63 0.066062927 ubox
57 64 0.032648059 ubox
58 62 0.060565423 ubox
58 63 0.039439838 ubox
58 64 0.023111233 ubox
59 63 0.026447291 ubox
60 66 0.006053531 ubox
60 67 0.006726853 ubox
61 66 0.011302787 ubox
66 72 0.003300101 ubox
67 71 0.003247727 ubox
69 75 0.005035328 ubox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 56 0.9500000 lbox
25 55 0.9500000 lbox
26 54 0.9500000 lbox
27 53 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
showpage
end
%%EOF
