%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HOXA11)
} def

/sequence { (\
CUUCAAAGAGGCAGCUGCAGUGGAGAAUCAUGUUAAGCUCGGCUACUGCGGAGAGCCCAAGGUAGCCCAAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.107658758 ubox
1 10 0.340991166 ubox
1 11 0.597881200 ubox
1 25 0.287029229 ubox
1 53 0.009470166 ubox
1 61 0.009926582 ubox
1 62 0.006346414 ubox
1 65 0.015217419 ubox
2 7 0.100294729 ubox
2 8 0.017374776 ubox
2 9 0.338434564 ubox
2 10 0.608807593 ubox
2 11 0.017561385 ubox
2 13 0.005698475 ubox
2 24 0.288764439 ubox
2 25 0.010563664 ubox
2 27 0.011972287 ubox
2 52 0.009521132 ubox
2 60 0.009983908 ubox
2 61 0.006362079 ubox
2 64 0.015221623 ubox
2 65 0.004164255 ubox
2 70 0.009957017 ubox
3 7 0.017272712 ubox
3 8 0.311754004 ubox
3 9 0.613880060 ubox
3 10 0.018966571 ubox
3 11 0.072083715 ubox
3 23 0.288835165 ubox
3 24 0.012700410 ubox
3 26 0.013747480 ubox
3 51 0.009503239 ubox
3 59 0.009349018 ubox
3 60 0.005707094 ubox
3 62 0.009121339 ubox
3 64 0.004719557 ubox
3 69 0.010041409 ubox
4 8 0.610500665 ubox
4 10 0.094466023 ubox
4 22 0.289407795 ubox
4 23 0.012976859 ubox
4 25 0.013890775 ubox
4 50 0.009443220 ubox
4 61 0.011124818 ubox
5 21 0.286755558 ubox
7 16 0.014746705 ubox
7 39 0.004592298 ubox
7 47 0.009254613 ubox
8 15 0.016070212 ubox
8 29 0.004319003 ubox
8 38 0.004305439 ubox
8 40 0.213695693 ubox
8 46 0.009266369 ubox
9 16 0.207337414 ubox
9 28 0.004297771 ubox
9 39 0.202341052 ubox
10 15 0.208338712 ubox
10 16 0.057832111 ubox
10 34 0.005918280 ubox
10 38 0.167178151 ubox
10 39 0.119884207 ubox
10 40 0.133414175 ubox
10 44 0.009172463 ubox
10 57 0.114539647 ubox
10 58 0.014942215 ubox
10 67 0.060372457 ubox
10 68 0.097203406 ubox
11 15 0.057002737 ubox
11 18 0.194508902 ubox
11 21 0.004558718 ubox
11 33 0.011911184 ubox
11 38 0.162230091 ubox
11 39 0.064684338 ubox
11 43 0.009466808 ubox
11 49 0.003914901 ubox
11 56 0.115180751 ubox
11 57 0.012744556 ubox
11 66 0.060628503 ubox
11 67 0.091976872 ubox
12 17 0.194302935 ubox
12 20 0.005071486 ubox
12 22 0.006768160 ubox
12 32 0.012020586 ubox
12 37 0.186405024 ubox
12 42 0.009475465 ubox
12 48 0.003920842 ubox
12 55 0.114741248 ubox
12 65 0.060630151 ubox
13 21 0.006514372 ubox
13 31 0.011329189 ubox
13 34 0.051304038 ubox
13 39 0.847427759 ubox
13 44 0.004883686 ubox
13 47 0.003772515 ubox
14 21 0.005528067 ubox
14 33 0.063475902 ubox
14 38 0.910582349 ubox
14 43 0.006250473 ubox
14 46 0.003613498 ubox
14 63 0.009120139 ubox
14 66 0.111286883 ubox
15 20 0.006176086 ubox
15 23 0.003868323 ubox
15 25 0.006464740 ubox
15 32 0.063690690 ubox
15 37 0.911503985 ubox
15 42 0.006294457 ubox
15 51 0.129289246 ubox
15 53 0.004968456 ubox
15 62 0.009452288 ubox
15 65 0.111738244 ubox
16 22 0.003812966 ubox
16 24 0.006506151 ubox
16 30 0.022455488 ubox
16 32 0.004044812 ubox
16 35 0.101710885 ubox
16 36 0.891237283 ubox
16 41 0.006326367 ubox
16 50 0.129805628 ubox
16 52 0.004086919 ubox
16 61 0.008661542 ubox
16 64 0.111809218 ubox
17 29 0.022807685 ubox
17 31 0.003845613 ubox
17 33 0.475827933 ubox
17 34 0.118494435 ubox
17 38 0.008022787 ubox
17 40 0.010375236 ubox
17 49 0.130590775 ubox
17 63 0.111813483 ubox
18 32 0.490331481 ubox
18 37 0.008010888 ubox
18 48 0.130594997 ubox
18 62 0.111808922 ubox
19 31 0.411890469 ubox
19 34 0.032497117 ubox
19 39 0.016608474 ubox
19 44 0.009978907 ubox
19 47 0.130312824 ubox
20 28 0.061052040 ubox
20 31 0.830445798 ubox
20 33 0.021306319 ubox
20 38 0.017352486 ubox
20 43 0.013035603 ubox
20 46 0.130094993 ubox
21 27 0.064121328 ubox
21 30 0.909619021 ubox
21 32 0.015996908 ubox
21 35 0.004009630 ubox
21 37 0.017278637 ubox
21 42 0.014242490 ubox
21 45 0.129859585 ubox
21 59 0.110660298 ubox
21 69 0.003436644 ubox
22 29 0.915886843 ubox
22 31 0.018180666 ubox
22 34 0.003921348 ubox
22 44 0.129611593 ubox
22 57 0.009510964 ubox
22 58 0.111086671 ubox
22 68 0.003849453 ubox
23 28 0.535985124 ubox
23 29 0.125250022 ubox
23 33 0.003166168 ubox
23 34 0.010492671 ubox
23 40 0.045499250 ubox
23 43 0.126848735 ubox
23 56 0.011155877 ubox
23 57 0.109541269 ubox
24 28 0.118845939 ubox
24 33 0.013641465 ubox
24 34 0.013012710 ubox
24 39 0.049557524 ubox
25 33 0.011881559 ubox
25 34 0.018593900 ubox
25 38 0.049523923 ubox
25 40 0.111851666 ubox
26 33 0.018945096 ubox
26 34 0.038903094 ubox
26 39 0.108144648 ubox
27 33 0.040989481 ubox
27 71 0.003807764 ubox
28 32 0.038165059 ubox
28 42 0.026303979 ubox
28 52 0.023954057 ubox
28 54 0.012454993 ubox
28 62 0.003184305 ubox
28 70 0.003689404 ubox
29 41 0.026991614 ubox
29 51 0.024016040 ubox
29 53 0.011185153 ubox
29 61 0.003291964 ubox
30 71 0.005866635 ubox
31 41 0.004357896 ubox
31 50 0.021880666 ubox
31 59 0.003361626 ubox
31 69 0.018113744 ubox
31 70 0.005764889 ubox
31 72 0.013971732 ubox
32 38 0.065832241 ubox
32 40 0.027503400 ubox
32 43 0.003198087 ubox
32 46 0.004623650 ubox
32 49 0.024259608 ubox
32 56 0.061721628 ubox
32 58 0.003477421 ubox
32 66 0.004913323 ubox
32 68 0.020141003 ubox
32 71 0.016772604 ubox
33 37 0.061681280 ubox
33 42 0.003802223 ubox
33 45 0.004373505 ubox
33 48 0.023813873 ubox
33 55 0.061258985 ubox
33 65 0.004925074 ubox
33 70 0.016884782 ubox
34 41 0.003389756 ubox
34 45 0.004222740 ubox
34 54 0.058347678 ubox
34 64 0.004811494 ubox
34 69 0.015899277 ubox
34 72 0.008975481 ubox
35 44 0.003296260 ubox
35 47 0.003194606 ubox
35 63 0.004501037 ubox
35 71 0.009904955 ubox
36 44 0.024131481 ubox
37 43 0.025902474 ubox
37 46 0.003224323 ubox
37 56 0.057626651 ubox
38 42 0.025737222 ubox
38 53 0.090374916 ubox
38 55 0.057253648 ubox
38 61 0.003187492 ubox
39 52 0.091914112 ubox
39 54 0.055537169 ubox
40 51 0.092588783 ubox
40 53 0.054370284 ubox
41 57 0.023018253 ubox
41 67 0.978855158 ubox
41 68 0.087729640 ubox
42 49 0.106453278 ubox
42 56 0.023383889 ubox
42 66 0.982887416 ubox
42 67 0.062105337 ubox
43 48 0.106503156 ubox
43 51 0.010616459 ubox
43 55 0.023413907 ubox
43 65 0.984851752 ubox
44 50 0.010323795 ubox
44 54 0.023315262 ubox
44 64 0.984574071 ubox
45 63 0.984568501 ubox
46 53 0.023190074 ubox
46 61 0.038265838 ubox
46 62 0.984038462 ubox
47 52 0.023016549 ubox
47 59 0.088423707 ubox
47 60 0.048256397 ubox
47 61 0.975290431 ubox
48 56 0.153753737 ubox
48 58 0.130162247 ubox
49 55 0.153817476 ubox
50 57 0.344927710 ubox
50 58 0.908050130 ubox
50 68 0.004638026 ubox
51 56 0.346013269 ubox
51 57 0.906621101 ubox
51 67 0.004637749 ubox
55 63 0.057440290 ubox
55 66 0.006029373 ubox
56 62 0.058751096 ubox
56 65 0.006037986 ubox
57 61 0.058342766 ubox
61 67 0.029543805 ubox
61 68 0.084082225 ubox
62 66 0.029205224 ubox
62 67 0.083536512 ubox
62 71 0.006992179 ubox
63 70 0.006994952 ubox
63 72 0.005472908 ubox
64 71 0.006243849 ubox
1 11 0.9500000 lbox
2 10 0.9500000 lbox
3 9 0.9500000 lbox
4 8 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
41 67 0.9500000 lbox
42 66 0.9500000 lbox
43 65 0.9500000 lbox
44 64 0.9500000 lbox
45 63 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
showpage
end
%%EOF
