%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGGAAGGCUUGCAGGUUCUGCUGUUUGGUUGCUGAAGGGGGUCAGUGUGUGUAUGUGUCAUGGAGGUGGGCAGGGAAGGGGAGGGCUGUGCGUGGGGGAGAGGAUAUAUAUGCUGGUGUGGCUGAGAAAGCGGAACCGAGCCUCGCAUCCAUCGGAGGGAGCCGGGGACUGACAGCUCUCAGCACCUGCUUCCUGCUCCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[42.03995514 635.28857422]
[39.34892273 650.04522705]
[36.65789413 664.80187988]
[44.56347656 678.76184082]
[38.44472122 693.59222412]
[22.99541473 697.91638184]
[10.06694508 688.41723633]
[9.57692432 672.38165283]
[21.90125656 662.11083984]
[24.59228706 647.35418701]
[27.28331566 632.59753418]
[19.46063995 614.91540527]
[32.73911285 599.74951172]
[34.98536301 584.91870117]
[37.23161316 570.08782959]
[39.47786331 555.25695801]
[41.72411346 540.42608643]
[43.97036362 525.59521484]
[30.05521584 518.23077393]
[19.48484421 506.52694702]
[13.55078983 491.88635254]
[12.98747826 476.07211304]
[17.88137627 460.99539185]
[27.65831757 448.48452759]
[41.15079880 440.06341553]
[56.73737717 436.76565552]
[58.76045227 421.90270996]
[51.69039536 412.08618164]
[53.25526047 399.68615723]
[63.15721512 391.41934204]
[65.40346527 376.58850098]
[67.64971924 361.75762939]
[65.54294586 354.67239380]
[70.04280853 346.72140503]
[72.51172638 331.92599487]
[74.98064423 317.13055420]
[77.44956207 302.33514404]
[79.91847992 287.53973389]
[77.91844940 280.42361450]
[82.53730774 272.54116821]
[85.22834015 257.78454590]
[87.91937256 243.02789307]
[81.13143921 226.84556580]
[93.16450500 212.90783691]
[95.63343048 198.11242676]
[98.10234833 183.31700134]
[100.57126617 168.52159119]
[103.04018402 153.72616577]
[105.50910187 138.93074036]
[79.99057770 127.17744446]
[72.18486023 104.51540375]
[81.52381134 86.96835327]
[72.85359955 74.72795868]
[64.18338013 62.48755646]
[55.51316452 50.24715805]
[46.84294891 38.00675964]
[38.17273331 25.76635933]
[29.50251770 13.52596188]
[20.83230209 1.28556263]
[12.16208744 -10.95483589]
[3.49187207 -23.19523430]
[-5.17834377 -35.43563461]
[-20.52207947 -31.14768219]
[-36.37978363 -32.37062836]
[-50.83575821 -38.93829727]
[-62.14995575 -50.03996658]
[-68.96741486 -64.32038879]
[-70.48052216 -80.04520416]
[-66.52465057 -95.31162262]
[-57.59582901 -108.27861023]
[-66.44905090 -120.38730621]
[-80.84001923 -126.96077728]
[-82.10594177 -141.80148315]
[-90.95915985 -153.91018677]
[-99.81237793 -166.01887512]
[-114.20335388 -172.59234619]
[-115.46926880 -187.43305969]
[-124.32249451 -199.54174805]
[-139.58351135 -197.81065369]
[-153.65908813 -203.95669556]
[-162.76295471 -216.32661438]
[-164.44621277 -231.59300232]
[-158.25607300 -245.64923096]
[-145.85766602 -254.71427917]
[-130.58609009 -256.34967041]
[-116.54933167 -250.11552429]
[-107.52319336 -237.68875122]
[-105.93566895 -222.41212463]
[-112.21379852 -208.39497375]
[-103.36057281 -196.28628540]
[-89.60284424 -190.57890320]
[-87.70368958 -174.87210083]
[-78.85046387 -162.76339722]
[-69.99724579 -150.65470886]
[-56.23951340 -144.94734192]
[-54.34035492 -129.24052429]
[-45.48713303 -117.13183594]
[-32.01562500 -121.48545074]
[-17.83666229 -121.46549988]
[-4.33667040 -117.06068420]
[7.16022205 -108.68910217]
[15.52205944 -97.15860748]
[19.92050171 -83.58887482]
[19.91286850 -69.30263519]
[15.48665714 -55.69680786]
[7.06205511 -44.10585022]
[15.73227119 -31.86544991]
[24.40248680 -19.62505150]
[33.07270050 -7.38465309]
[41.74291611 4.85574579]
[50.41313171 17.09614563]
[59.08334732 29.33654404]
[67.75356293 41.57694244]
[76.42378235 53.81734085]
[85.09399414 66.05773926]
[93.76421356 78.29814148]
[108.73710632 79.19948578]
[118.81310272 68.08758545]
[128.88909912 56.97568512]
[138.96508789 45.86378479]
[135.94392395 30.75819778]
[142.32215881 16.93171883]
[155.46347046 9.59891701]
[170.22605896 11.38890076]
[180.30204773 0.27700037]
[190.37803650 -10.83489990]
[191.03392029 -26.86454010]
[204.05996704 -36.22946167]
[219.46371460 -31.74569321]
[225.42872620 -16.85280418]
[217.37915039 -2.97534013]
[201.48994446 -0.75890589]
[191.41395569 10.35299492]
[181.33795166 21.46489525]
[184.55949402 35.98246002]
[178.54359436 49.77640915]
[165.40524292 57.47298813]
[150.07699585 55.93978119]
[140.00099182 67.05168152]
[129.92500305 78.16358185]
[119.84900665 89.27548218]
[122.86172485 96.14378357]
[128.88714600 109.88037872]
[131.89987183 116.74868011]
[146.89944458 116.86141968]
[161.89901733 116.97415161]
[176.89859009 117.08689117]
[191.89817810 117.19962311]
[203.11286926 106.38905334]
[218.32296753 106.71705627]
[228.56007385 117.47517395]
[243.55964661 117.58790588]
[258.55923462 117.70064545]
[268.56222534 105.68090057]
[283.96020508 102.95393372]
[297.48269653 110.80732727]
[302.74484253 125.53295135]
[297.26196289 140.17781067]
[283.62292480 147.82707214]
[268.26770020 144.86895752]
[258.44650269 132.70022583]
[243.44691467 132.58747864]
[228.44734192 132.47474670]
[218.04968262 143.07777405]
[202.83636475 143.17712402]
[191.78543091 132.19920349]
[176.78585815 132.08647156]
[161.78628540 131.97372437]
[146.78671265 131.86099243]
[131.78713989 131.74826050]
[120.30451965 141.39965820]
[117.83560181 156.19508362]
[115.36668396 170.99050903]
[112.89776611 185.78591919]
[110.42884827 200.58134460]
[107.95993042 215.37677002]
[114.80623627 226.30915833]
[112.44424438 238.58229065]
[102.67601013 245.71893311]
[99.98497772 260.47555542]
[97.29394531 275.23220825]
[94.71389771 290.00863647]
[92.24497986 304.80407715]
[89.77606201 319.59948730]
[87.30714417 334.39489746]
[84.83822632 349.19033813]
[82.48057556 364.00387573]
[80.23432159 378.83474731]
[77.98807526 393.66558838]
[85.09969330 410.65029907]
[73.62339783 423.92578125]
[71.60032654 438.78872681]
[84.43180847 445.16659546]
[94.65084076 455.18066406]
[101.26747894 467.84228516]
[103.64650726 481.90728760]
[101.56835938 495.99819946]
[95.24935150 508.73916626]
[85.31922150 518.89025879]
[72.75839996 525.46820068]
[58.80122375 527.84149170]
[56.55497360 542.67236328]
[54.30872345 557.50323486]
[52.06247330 572.33404541]
[49.81622314 587.16491699]
[47.56997299 601.99578857]
[54.51908875 610.36602783]
[55.68946457 620.96093750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 201]
[26 192]
[27 191]
[30 189]
[31 188]
[32 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[40 181]
[41 180]
[42 179]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[52 116]
[53 115]
[54 114]
[55 113]
[56 112]
[57 111]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[70 97]
[71 96]
[73 94]
[74 93]
[75 92]
[77 90]
[78 89]
[117 141]
[118 140]
[119 139]
[120 138]
[124 134]
[125 133]
[126 132]
[144 170]
[145 169]
[146 168]
[147 167]
[148 166]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
