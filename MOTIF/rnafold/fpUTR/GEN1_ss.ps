%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUCCUGGGCCUGGCGGUUGAGCCCGGGGAGCUAGUCUUUGCUUGGGUAAAGAAAGAGGACUUUCCUUUUUUUUUUUCCUUUUGAGAAAAUUCAGAAAUUUGGAGGCACAGUAGUUAGGAUUCAGGCCAAACUGGUAAAUGACGAAGGGGCUUCUUCCAGAGCCAAGGAGGAAGGGUUGUCCGGCAGAUAAUCACCAGA\
) } def
/len { sequence length } bind def

/coor [
[216.28659058 454.32028198]
[219.44760132 444.78970337]
[224.95054626 436.37045288]
[232.43658447 429.62744141]
[226.53507996 415.83715820]
[220.63357544 402.04684448]
[214.73207092 388.25656128]
[208.83056641 374.46627808]
[196.70991516 365.80950928]
[198.39378357 350.07818604]
[192.49227905 336.28787231]
[186.59077454 322.49758911]
[180.58221436 308.75360107]
[174.46696472 295.05676270]
[168.35169983 281.35989380]
[162.23645020 267.66305542]
[149.98263550 259.19586182]
[151.42164612 243.44023132]
[145.30639648 229.74337769]
[141.23872375 227.22821045]
[138.71177673 222.12770081]
[139.22132874 215.52415466]
[133.53500366 201.64375305]
[127.84867859 187.76333618]
[122.16235352 173.88293457]
[116.47602844 160.00253296]
[110.78970337 146.12211609]
[91.08065033 148.96127319]
[70.96794891 143.34178162]
[54.07812119 129.47334290]
[43.76692200 109.10944366]
[29.79976082 114.57921600]
[15.83259869 120.04898834]
[1.86543810 125.51876068]
[-1.91911757 140.56724548]
[-13.84772205 150.49134827]
[-29.33358383 151.47506714]
[-42.42207336 143.14013672]
[-48.08039856 128.69151306]
[-44.13282013 113.68496704]
[-32.09725952 103.89084625]
[-16.60163498 103.07517242]
[-3.60433483 111.55159760]
[10.36282635 106.08182526]
[24.32998657 100.61205292]
[38.29714966 95.14228058]
[38.64704514 80.14636230]
[24.95019722 74.03110504]
[11.25334835 67.91585541]
[-4.50228024 69.35485840]
[-12.96947765 57.10104752]
[-26.66632652 50.98579407]
[-40.36317444 44.87054062]
[-54.06002426 38.75528717]
[-67.75687408 32.64002991]
[-81.45372009 26.52477837]
[-95.15057373 20.40952301]
[-108.84741974 14.29426861]
[-122.54426575 8.17901516]
[-136.24111938 2.06376052]
[-149.93795776 -4.05149364]
[-163.63481140 -10.16674805]
[-180.56288147 -11.10304928]
[-184.34933472 -27.62876129]
[-169.51763916 -35.84200287]
[-157.51956177 -23.86359596]
[-143.82270813 -17.74834251]
[-130.12585449 -11.63308811]
[-116.42901611 -5.51783419]
[-102.73216248 0.59742022]
[-89.03531647 6.71267462]
[-75.33847046 12.82792854]
[-61.64161682 18.94318199]
[-47.94477081 25.05843735]
[-34.24792099 31.17369080]
[-20.55107117 37.28894424]
[-6.85422325 43.40420151]
[7.92171526 41.52779007]
[17.36860275 54.21900558]
[31.06545067 60.33425903]
[44.76229858 66.44951630]
[55.85205460 56.34914780]
[51.03966904 42.14207458]
[46.22728348 27.93500328]
[41.41489410 13.72792912]
[36.60250854 -0.47914413]
[31.79012299 -14.68621731]
[17.51100349 -21.45986557]
[12.28260422 -36.37426758]
[19.20684052 -50.58097458]
[34.17568588 -55.65139771]
[48.30839157 -48.57734299]
[53.22027206 -33.55572891]
[45.99719620 -19.49860382]
[50.80958176 -5.29153061]
[55.62197113 8.91554260]
[60.43435669 23.12261581]
[65.24674225 37.32968903]
[70.05912781 51.53676224]
[81.33407593 49.57753372]
[92.15919495 50.04462814]
[102.04448700 52.67677307]
[105.05658722 37.98231125]
[108.06869507 23.28784943]
[99.15698242 10.23576260]
[102.16673279 -5.27929306]
[115.31230927 -14.05251217]
[130.79467773 -10.87889957]
[139.42842102 2.35869741]
[136.09129333 17.80664635]
[122.76316071 26.29995537]
[119.75105286 40.99441528]
[116.73894501 55.68887711]
[122.44489288 58.28795624]
[127.75756836 61.61790466]
[132.58387756 65.62037659]
[144.49600220 56.50438690]
[156.40812683 47.38839722]
[168.32025146 38.27240753]
[166.44532776 23.09242249]
[172.38113403 9.10446072]
[184.44134521 0.02604252]
[199.32681274 -1.78470469]
[213.02774048 4.05911636]
[224.93986511 -5.05687380]
[236.85198975 -14.17286491]
[248.76411438 -23.28885460]
[250.59858704 -38.98631668]
[263.04718018 -48.72325516]
[278.72436523 -46.72292328]
[288.32916260 -34.17208099]
[286.16317749 -18.51691818]
[273.51147461 -9.04536629]
[257.88009644 -11.37672997]
[245.96797180 -2.26073980]
[234.05584717 6.85525084]
[222.14372253 15.97124100]
[224.20413208 30.72320175]
[218.56640625 44.61823654]
[206.65185547 53.88698578]
[191.59878540 55.96116638]
[177.43624878 50.18453217]
[165.52412415 59.30052185]
[153.61199951 68.41651154]
[141.69987488 77.53250122]
[146.50813293 91.01884460]
[147.06701660 105.32578278]
[143.32543945 119.14611053]
[135.62528992 131.21708679]
[124.67010498 140.43579102]
[130.35643005 154.31620789]
[136.04275513 168.19660950]
[141.72908020 182.07701111]
[147.41540527 195.95742798]
[153.10173035 209.83782959]
[159.00323486 223.62812805]
[165.11849976 237.32498169]
[177.80970764 246.77186584]
[175.93330383 261.54779053]
[182.04855347 275.24465942]
[188.16380310 288.94149780]
[194.27906799 302.63833618]
[200.63980103 309.20449829]
[200.38107300 316.59609985]
[206.28257751 330.38638306]
[212.18408203 344.17666626]
[224.72683716 353.81979370]
[222.62086487 368.56475830]
[228.52236938 382.35507202]
[234.42387390 396.14535522]
[240.32537842 409.93563843]
[246.22688293 423.72595215]
[266.69299316 424.98333740]
[283.63259888 436.40121460]
[292.41140747 454.76257324]
[290.67510986 474.96386719]
[278.98025513 491.43347168]
[286.14105225 504.61386108]
[293.30184937 517.79425049]
[300.46264648 530.97467041]
[307.62344360 544.15509033]
[314.78424072 557.33544922]
[321.94503784 570.51586914]
[336.85870361 576.42877197]
[341.39627075 591.81677246]
[332.07693481 604.87548828]
[316.04968262 605.58734131]
[305.60925293 593.40637207]
[308.76464844 577.67663574]
[301.60385132 564.49627686]
[294.44305420 551.31585693]
[287.28225708 538.13543701]
[280.12145996 524.95507812]
[272.96066284 511.77465820]
[265.79986572 498.59426880]
[256.05184937 500.35018921]
[246.16200256 499.55294800]
[236.78901672 496.24691772]
[228.55940247 490.64379883]
[222.02557373 483.10922241]
[217.62884521 474.13873291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[10 166]
[11 165]
[12 164]
[13 162]
[14 161]
[15 160]
[16 159]
[18 157]
[19 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[31 46]
[32 45]
[33 44]
[34 43]
[47 81]
[48 80]
[49 79]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[102 113]
[103 112]
[104 111]
[116 145]
[117 144]
[118 143]
[119 142]
[124 137]
[125 136]
[126 135]
[127 134]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
