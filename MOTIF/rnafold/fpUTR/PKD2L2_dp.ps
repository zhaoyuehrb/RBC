%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PKD2L2)
} def

/sequence { (\
GCGCGCAAGCGCCGCGGCCUCAGGCGAACGAACGGGCGGUGUAGUGCAGGUCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.019890074 ubox
1 12 0.866099354 ubox
1 15 0.069392218 ubox
1 18 0.005142429 ubox
1 47 0.079726152 ubox
1 51 0.025940027 ubox
1 55 0.464573437 ubox
2 9 0.019931551 ubox
2 11 0.868921282 ubox
2 14 0.069470289 ubox
2 16 0.034235923 ubox
2 17 0.004452498 ubox
2 26 0.009299725 ubox
2 30 0.003341880 ubox
2 34 0.007057032 ubox
2 46 0.079780044 ubox
2 50 0.028315643 ubox
2 54 0.466076459 ubox
3 10 0.869031406 ubox
3 12 0.035058027 ubox
3 13 0.065974180 ubox
3 15 0.034782268 ubox
3 25 0.009424252 ubox
3 29 0.003290926 ubox
3 33 0.007061778 ubox
3 42 0.003290433 ubox
3 45 0.079648266 ubox
3 47 0.111657283 ubox
3 51 0.007867313 ubox
3 53 0.464732036 ubox
3 55 0.030163537 ubox
4 9 0.868703942 ubox
4 11 0.041521868 ubox
4 14 0.034777504 ubox
4 16 0.004956413 ubox
4 24 0.009422255 ubox
4 26 0.004554159 ubox
4 30 0.006389510 ubox
4 34 0.004271377 ubox
4 41 0.003525296 ubox
4 44 0.079575725 ubox
4 46 0.112320596 ubox
4 50 0.012578003 ubox
4 54 0.030197333 ubox
5 10 0.040455774 ubox
5 12 0.066497971 ubox
5 13 0.025946529 ubox
5 15 0.005015216 ubox
5 25 0.004630281 ubox
5 29 0.006451180 ubox
5 33 0.004264949 ubox
5 40 0.004210574 ubox
5 42 0.057756945 ubox
5 45 0.112273328 ubox
5 47 0.037425270 ubox
5 51 0.458757596 ubox
5 53 0.025315567 ubox
6 11 0.070281247 ubox
6 14 0.005012722 ubox
6 24 0.004628565 ubox
6 39 0.004216007 ubox
6 41 0.061715407 ubox
6 44 0.112134107 ubox
6 46 0.037523106 ubox
6 50 0.464645199 ubox
7 40 0.060593768 ubox
7 45 0.036378944 ubox
8 20 0.009337459 ubox
9 18 0.003506407 ubox
9 19 0.009584980 ubox
9 37 0.018448008 ubox
9 40 0.007632858 ubox
9 42 0.122262822 ubox
9 45 0.011127134 ubox
9 47 0.465238195 ubox
10 17 0.003664415 ubox
10 26 0.011649205 ubox
10 36 0.018437734 ubox
10 38 0.065768988 ubox
10 39 0.005513800 ubox
10 41 0.125373989 ubox
10 44 0.011189713 ubox
10 46 0.465403596 ubox
11 18 0.009879687 ubox
11 25 0.013093702 ubox
11 37 0.066072741 ubox
11 40 0.125702753 ubox
11 42 0.005014670 ubox
11 45 0.464944412 ubox
12 17 0.009876632 ubox
12 24 0.013126562 ubox
12 35 0.021326116 ubox
12 36 0.065395603 ubox
12 39 0.125812372 ubox
12 41 0.004078448 ubox
12 44 0.462444316 ubox
13 23 0.013165518 ubox
13 26 0.232086444 ubox
13 30 0.117113257 ubox
13 34 0.033392207 ubox
13 35 0.064598328 ubox
13 38 0.125825858 ubox
13 41 0.446685131 ubox
13 54 0.060275570 ubox
14 25 0.234421805 ubox
14 29 0.116670314 ubox
14 33 0.034240859 ubox
14 37 0.125490560 ubox
14 40 0.462612439 ubox
14 42 0.050726079 ubox
14 53 0.062465519 ubox
14 55 0.818632203 ubox
15 24 0.234409226 ubox
15 26 0.041880779 ubox
15 30 0.046664950 ubox
15 34 0.059144495 ubox
15 36 0.124900808 ubox
15 38 0.018782882 ubox
15 39 0.462689465 ubox
15 41 0.050981110 ubox
15 54 0.820255714 ubox
16 25 0.032355556 ubox
16 29 0.048601253 ubox
16 33 0.060655477 ubox
16 37 0.023529137 ubox
16 40 0.040150431 ubox
16 52 0.112325629 ubox
16 53 0.815290099 ubox
16 56 0.004577238 ubox
17 25 0.188338560 ubox
17 37 0.464698208 ubox
17 40 0.017184622 ubox
17 51 0.144421594 ubox
17 52 0.810145782 ubox
17 55 0.004332934 ubox
18 24 0.190941948 ubox
18 35 0.062406255 ubox
18 36 0.464531946 ubox
18 39 0.023702746 ubox
18 50 0.821257347 ubox
18 54 0.004106083 ubox
19 23 0.189579184 ubox
19 34 0.064170706 ubox
19 35 0.464042277 ubox
19 36 0.012454926 ubox
19 38 0.023660413 ubox
19 49 0.821280970 ubox
19 50 0.048565439 ubox
20 27 0.060002681 ubox
20 31 0.211462859 ubox
20 34 0.364692327 ubox
20 35 0.017666404 ubox
20 36 0.008834738 ubox
20 43 0.003279002 ubox
20 48 0.814022545 ubox
20 49 0.042391441 ubox
20 50 0.013594618 ubox
21 26 0.074512334 ubox
21 30 0.258890183 ubox
21 34 0.135753556 ubox
21 35 0.010069759 ubox
21 38 0.004415228 ubox
21 41 0.027246350 ubox
21 46 0.722093435 ubox
21 49 0.025213161 ubox
22 40 0.026917931 ubox
22 45 0.712400043 ubox
23 56 0.014503295 ubox
24 37 0.039566702 ubox
24 40 0.018248170 ubox
24 42 0.644197042 ubox
24 45 0.174080355 ubox
24 47 0.329043850 ubox
24 55 0.014629334 ubox
25 34 0.125889423 ubox
25 36 0.039598676 ubox
25 38 0.024601673 ubox
25 39 0.019290887 ubox
25 41 0.649453183 ubox
25 44 0.179379064 ubox
25 46 0.329016360 ubox
25 54 0.014577941 ubox
26 33 0.142143941 ubox
26 37 0.024826220 ubox
26 40 0.581472397 ubox
26 45 0.286382195 ubox
26 53 0.014225875 ubox
28 40 0.195182948 ubox
28 42 0.102193208 ubox
28 45 0.135075331 ubox
28 51 0.010054802 ubox
29 38 0.717561070 ubox
29 39 0.192248176 ubox
29 41 0.104510867 ubox
29 44 0.160133319 ubox
29 50 0.010284055 ubox
29 54 0.019298583 ubox
30 37 0.712067973 ubox
30 40 0.064175245 ubox
30 52 0.011094310 ubox
30 53 0.019546160 ubox
31 51 0.008893118 ubox
32 40 0.304493732 ubox
32 42 0.103625842 ubox
32 45 0.008538897 ubox
32 51 0.021648524 ubox
33 39 0.309627383 ubox
33 41 0.106415141 ubox
33 44 0.009523042 ubox
33 50 0.023160380 ubox
33 54 0.204384202 ubox
34 40 0.100591988 ubox
34 53 0.208513299 ubox
34 56 0.016085854 ubox
35 52 0.208537229 ubox
35 55 0.011487716 ubox
35 56 0.198595296 ubox
36 42 0.009552247 ubox
36 45 0.017845173 ubox
36 47 0.056294039 ubox
36 51 0.208286448 ubox
36 55 0.201263305 ubox
37 41 0.009595789 ubox
37 44 0.019174049 ubox
37 46 0.056350342 ubox
37 50 0.208203219 ubox
37 54 0.201595841 ubox
38 45 0.052210531 ubox
38 53 0.201582471 ubox
38 56 0.003671507 ubox
39 47 0.095941762 ubox
39 52 0.201371918 ubox
39 55 0.003714488 ubox
40 46 0.094581345 ubox
40 48 0.225609700 ubox
40 50 0.039857152 ubox
40 54 0.003709538 ubox
41 45 0.043978093 ubox
41 47 0.229467277 ubox
41 51 0.009246423 ubox
41 53 0.003665356 ubox
42 46 0.214699610 ubox
42 50 0.017588568 ubox
44 51 0.004703260 ubox
44 55 0.014064882 ubox
45 50 0.004403010 ubox
45 54 0.014083502 ubox
46 53 0.013805784 ubox
46 55 0.015055811 ubox
47 54 0.015102065 ubox
49 56 0.055155938 ubox
50 55 0.055286459 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
showpage
end
%%EOF
