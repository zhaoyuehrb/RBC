%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACAGGGCGGCUUCCGGGAUGUGGUAGGACCGUUGGCUCUCGCUGCACGCGGAGGUCAAGGUGUCGUCCUUACUGCUGUGUGUCGUCCGCUCCUAAAGGCCCAGCUUCUAUGGCCCUGUGACCUGCAGGUAUUGGGAGAUUCACAACUAAGUCGCCAGGACCCCCGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[98.54209900 333.41870117]
[83.46411133 335.15615845]
[68.77765656 331.32568359]
[56.46894836 322.44537354]
[48.20264435 309.71615601]
[45.09669113 294.85958862]
[47.57114792 279.88488770]
[55.29135895 266.81729126]
[67.21323395 257.42401123]
[81.72443390 252.97547913]
[82.77661896 238.01243591]
[83.82880402 223.04937744]
[84.88098145 208.08631897]
[85.93316650 193.12327576]
[86.98535156 178.16021729]
[88.03753662 163.19717407]
[89.08971405 148.23411560]
[90.14189911 133.27107239]
[91.19408417 118.30801392]
[78.23228455 102.34749603]
[85.54998016 81.50299072]
[108.63370514 76.48444366]
[93.84172058 73.99502563]
[79.04973602 71.50560760]
[64.25775146 69.01618958]
[49.46577072 66.52677155]
[34.67378616 64.03735352]
[19.86052513 61.67784119]
[5.02713060 59.44840240]
[-9.80626488 57.21896744]
[-24.63965988 54.98953247]
[-40.65633011 68.57146454]
[-61.20583725 66.01595306]
[-73.06826782 49.40039825]
[-88.02151489 48.21694946]
[-102.97475433 47.03350067]
[-117.92799377 45.85005569]
[-132.88124084 44.66660690]
[-147.83448792 43.48315811]
[-162.20208740 50.10755539]
[-174.27923584 41.39023590]
[-189.23248291 40.20679092]
[-204.18571472 39.02334213]
[-219.13896179 37.83989334]
[-232.22698975 47.11798477]
[-247.60058594 42.53188324]
[-253.46643066 27.59965706]
[-245.32475281 13.77602863]
[-229.42115784 11.66530514]
[-217.95552063 22.88665199]
[-203.00227356 24.07009888]
[-188.04902649 25.25354767]
[-173.09577942 26.43699455]
[-159.79774475 19.72795105]
[-146.65103149 28.52991676]
[-131.69778442 29.71336555]
[-116.74455261 30.89681244]
[-101.79130554 32.08026123]
[-86.83806610 33.26370621]
[-71.88481903 34.44715500]
[-66.94684601 26.42597389]
[-59.37046432 20.73230171]
[-50.18045807 18.18936539]
[-40.63947678 19.19058609]
[-32.07456589 23.63938522]
[-25.69259071 30.95671844]
[-22.41022491 40.15613556]
[-7.57682896 42.38557434]
[7.25656652 44.61500931]
[22.08996201 46.84444427]
[29.19252396 44.72310638]
[37.16320419 49.24537277]
[51.95518875 51.73479080]
[66.74716949 54.22420502]
[81.53915405 56.71362305]
[96.33113861 59.20304108]
[111.12312317 61.69245529]
[125.42116547 57.15746689]
[136.07420349 46.59750366]
[146.72723389 36.03754425]
[157.38027954 25.47758293]
[161.73416138 10.26724625]
[176.22013855 6.80233002]
[186.87316895 -3.75763106]
[197.52621460 -14.31759262]
[201.88008118 -29.52792740]
[216.36607361 -32.99284363]
[227.01910400 -43.55280685]
[237.67214966 -54.11276627]
[244.86613464 -67.27508545]
[248.00196838 -81.94364166]
[251.13781738 -96.61219025]
[242.33641052 -109.73892212]
[245.47680664 -125.22805786]
[258.69586182 -133.89018250]
[274.15093994 -130.58619690]
[282.67282104 -117.27630615]
[279.20559692 -101.85703278]
[265.80636597 -93.47634888]
[262.67053223 -78.80780029]
[259.53469849 -64.13924408]
[266.23803711 -60.77542877]
[278.76748657 -69.02239227]
[279.64471436 -54.04779816]
[286.34805298 -50.68398285]
[296.23410034 -61.96519470]
[306.12017822 -73.24640656]
[306.50405884 -89.28486633]
[319.36938477 -98.86938477]
[334.84695435 -94.64754486]
[341.06372070 -79.85797882]
[333.25070190 -65.84597778]
[317.40136719 -63.36034393]
[307.51531982 -52.07913208]
[297.62924194 -40.79791641]
[306.38201904 -28.61640930]
[320.22756958 -34.38705063]
[334.07315063 -40.15769196]
[347.91870117 -45.92832947]
[361.76428223 -51.69897079]
[369.17620850 -65.92721558]
[384.94854736 -68.86196899]
[396.98211670 -58.25193405]
[396.04577637 -42.23622894]
[382.85781860 -33.10072708]
[367.53491211 -37.85340500]
[353.68936157 -32.08276367]
[339.84378052 -26.31212425]
[325.99822998 -20.54148293]
[312.15264893 -14.77084255]
[292.27401733 -10.77134323]
[274.43020630 -13.21610069]
[260.43127441 -20.73632622]
[251.51228333 -31.50872421]
[248.23210144 -43.45972824]
[237.57907104 -32.89976883]
[226.92602539 -22.33980560]
[223.33412170 -7.88478947]
[208.08616638 -3.66455436]
[197.43313599 6.89540672]
[186.78009033 17.45536804]
[183.18820190 31.91038513]
[167.94023132 36.13061905]
[157.28720093 46.69058228]
[146.63415527 57.25054169]
[135.98112488 67.81050110]
[149.16793823 60.66152573]
[163.34017944 65.57556152]
[169.27093506 79.35330200]
[163.09896851 93.02468109]
[148.84255981 97.68889618]
[135.78367615 90.30963898]
[146.24975586 101.05493164]
[156.71582031 111.80022430]
[172.67399597 113.44829559]
[181.21362305 127.02969360]
[175.78381348 142.12594604]
[160.54986572 147.15649414]
[147.19795227 138.26232910]
[145.97052002 122.26629639]
[135.50445557 111.52100372]
[125.03838348 100.77571106]
[118.09972382 113.67189789]
[106.15713501 119.36019897]
[105.10494995 134.32325745]
[104.05277252 149.28630066]
[103.00058746 164.24935913]
[101.94840240 179.21240234]
[100.89621735 194.17546082]
[99.84403992 209.13850403]
[98.79185486 224.10156250]
[97.73966980 239.06460571]
[96.68748474 254.02766418]
[110.43333435 260.46319580]
[120.92333984 271.43243408]
[126.73883057 285.45187378]
[127.09329224 300.62548828]
[121.93879700 314.90118408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 70]
[29 69]
[30 68]
[31 67]
[34 60]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[41 53]
[42 52]
[43 51]
[44 50]
[78 146]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 101]
[91 100]
[92 99]
[105 115]
[106 114]
[107 113]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
