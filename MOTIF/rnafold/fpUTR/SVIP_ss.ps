%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGGACGGGUGGACGCGUCAGGAGGGUCGUUGGGUCCUGUCAGAGCGACCUAGGCCGUCGCCUCCGUGUAGAUCUCCACUUUUGUAACAAAAAGUUGUCGAAAGGCGGCUGUGGCGUCUUUCUACCUUCCACUGACUUUAGCUGCGCCGGAUCUUCAUAGGGCGCCGGCGCACGCAGAGGGCGUUACGCGUGGGACAUUCCGGGGGAUGUGGUAG\
) } def
/len { sequence length } bind def

/coor [
[212.33258057 144.39212036]
[208.00651550 142.73100281]
[204.26229858 139.10891724]
[189.71018982 135.47076416]
[175.15808105 131.83261108]
[160.60597229 128.19445801]
[146.05386353 124.55631256]
[131.50175476 120.91815948]
[116.94965363 117.28001404]
[81.80755615 121.84056854]
[67.25544739 125.47872162]
[52.70333862 129.11686707]
[38.15122986 132.75502014]
[23.59912109 136.39317322]
[9.04701138 140.03131104]
[-5.33426046 144.29499817]
[-19.51782036 149.17625427]
[-33.70138168 154.05751038]
[-47.88494110 158.93875122]
[-50.87630081 175.20298767]
[-61.60130692 187.66696167]
[-77.05989838 192.98941040]
[-93.00056458 189.80670166]
[-105.08953857 179.08071899]
[-119.20128632 184.16586304]
[-129.56123352 196.12336731]
[-144.15785217 193.15890503]
[-158.26960754 198.24403381]
[-172.38134766 203.32917786]
[-186.49310303 208.41430664]
[-191.03785706 213.20443726]
[-196.49931335 214.75199890]
[-201.08544922 213.43624878]
[-215.33787537 218.11259460]
[-229.59030151 222.78895569]
[-243.84272766 227.46530151]
[-258.09515381 232.14164734]
[-272.34759521 236.81800842]
[-286.56594849 241.59693909]
[-300.74951172 246.47817993]
[-309.04855347 260.20791626]
[-324.97525024 262.13681030]
[-336.31195068 250.78523254]
[-334.36212158 234.86109924]
[-320.62155151 226.58006287]
[-305.63076782 232.29461670]
[-291.44720459 227.41337585]
[-286.14813232 222.26715088]
[-277.02392578 222.56558228]
[-262.77151489 217.88922119]
[-248.51907349 213.21287537]
[-234.26664734 208.53651428]
[-220.01422119 203.86016846]
[-205.76179504 199.18382263]
[-191.57823181 194.30256653]
[-177.46649170 189.21742249]
[-163.35473633 184.13229370]
[-149.24299622 179.04714966]
[-139.89241028 167.45336914]
[-124.28642273 170.05410767]
[-110.17467499 164.96897888]
[-108.65224457 151.39978027]
[-101.39804077 139.75381470]
[-89.77886200 132.33314514]
[-76.03073120 130.63343811]
[-62.82866669 135.04283142]
[-52.76619339 144.75518799]
[-38.58263397 139.87394714]
[-24.39907265 134.99269104]
[-10.21551228 130.11143494]
[-23.20362663 122.60752106]
[-27.21033287 108.15254211]
[-19.93875694 95.03293610]
[-5.55738020 90.76959991]
[7.68956852 97.80652618]
[12.20818233 112.10974884]
[5.40886211 125.47920990]
[19.96096992 121.84105682]
[34.51308060 118.20291138]
[49.06518936 114.56475830]
[63.61729813 110.92661285]
[78.16940308 107.28845978]
[63.65450668 103.50458527]
[49.01782990 106.78601074]
[34.50078201 103.01039124]
[23.31750107 93.01367950]
[17.94401932 79.00919342]
[19.57005310 64.09758759]
[27.83559036 51.58036423]
[40.91059875 44.22889328]
[55.90021515 43.67082977]
[69.48566437 50.02972794]
[78.65906525 61.89770126]
[81.38923645 76.64964294]
[90.56845093 88.51311493]
[88.20059204 73.70118713]
[85.83272552 58.88925934]
[83.46485901 44.07733154]
[81.09699249 29.26540184]
[78.72912598 14.45347404]
[76.36126709 -0.35845456]
[65.60820770 -12.74004745]
[71.20952606 -28.15294075]
[87.40306091 -30.74167252]
[97.53028870 -17.84317589]
[91.17319489 -2.72631931]
[93.54105377 12.08560848]
[95.90892029 26.89753723]
[98.27678680 41.70946503]
[100.64465332 56.52139282]
[103.01251984 71.33332062]
[105.38037872 86.14524841]
[112.48235321 72.93305969]
[127.36630249 71.07077026]
[137.50460815 82.12584686]
[134.36399841 96.79338074]
[120.58779907 102.72790527]
[135.13990784 106.36605072]
[149.69201660 110.00420380]
[164.24412537 113.64234924]
[178.79623413 117.28050232]
[193.34834290 120.91864777]
[207.90045166 124.55680084]
[222.52780151 127.87956238]
[237.22355652 130.88537598]
[251.91929626 133.89118958]
[266.61505127 136.89700317]
[281.31079102 139.90281677]
[292.97940063 129.06484985]
[311.78582764 130.96096802]
[326.78427124 130.74481201]
[341.78271484 130.52865601]
[356.78115845 130.31250000]
[371.77960205 130.09634399]
[370.85516357 119.86467743]
[375.60073853 108.60008240]
[386.37738037 99.19632721]
[402.17428589 94.56349945]
[417.07470703 92.83801270]
[431.97512817 91.11252594]
[446.87554932 89.38703156]
[455.03521729 85.29313660]
[462.00292969 87.74563599]
[476.92666626 86.23504639]
[491.83914185 84.61696625]
[506.73956299 82.89147949]
[521.64001465 81.16599274]
[536.54040527 79.44049835]
[551.44085693 77.71501160]
[566.34124756 75.98952484]
[581.24169922 74.26403809]
[596.14215088 72.53854370]
[605.94812012 60.43564224]
[621.08386230 58.89801407]
[632.56170654 68.32111359]
[647.46209717 66.59562683]
[662.36254883 64.87014008]
[675.19732666 54.66225433]
[690.35369873 60.92447281]
[692.24017334 77.21475983]
[678.91601562 86.77506256]
[664.08801270 79.77056122]
[649.18762207 81.49604797]
[634.28717041 83.22154236]
[625.26666260 95.01837921]
[610.18005371 96.98052979]
[597.86761475 87.43897247]
[582.96716309 89.16445923]
[568.06677246 90.88995361]
[553.16632080 92.61544037]
[538.26593018 94.34092712]
[523.36547852 96.06641388]
[508.46505737 97.79190826]
[493.56463623 99.51739502]
[487.28512573 103.40728760]
[478.43725586 101.15879059]
[463.51351929 102.66938019]
[448.60104370 104.28746033]
[433.70062256 106.01294708]
[418.80020142 107.73843384]
[403.89978027 109.46392822]
[399.73965454 123.87619019]
[395.57986450 138.28717041]
[407.26873779 147.68772888]
[423.30908203 147.39356995]
[433.42868042 159.84242249]
[429.86459351 175.48457336]
[415.35092163 182.32070923]
[401.02130127 175.10673523]
[397.86819458 159.37658691]
[386.17932129 149.97602844]
[371.99575806 145.09478760]
[356.99731445 145.31094360]
[341.99887085 145.52709961]
[327.00042725 145.74325562]
[312.00198364 145.95941162]
[303.73596191 158.47630310]
[309.42623901 172.35508728]
[315.11651611 186.23387146]
[320.80682373 200.11265564]
[326.49710083 213.99143982]
[332.18737793 227.87022400]
[345.48553467 237.46665955]
[343.55487061 253.75177002]
[328.38153076 259.97280884]
[315.57452393 249.73013306]
[318.30859375 233.56051636]
[312.61831665 219.68173218]
[306.92803955 205.80294800]
[301.23773193 191.92416382]
[295.54745483 178.04537964]
[289.85717773 164.16659546]
[278.30499268 154.59857178]
[263.60922241 151.59275818]
[248.91348267 148.58694458]
[234.21772766 145.58113098]
[219.52198792 142.57531738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 123]
[4 122]
[5 121]
[6 120]
[7 119]
[8 118]
[9 117]
[10 82]
[11 81]
[12 80]
[13 79]
[14 78]
[15 77]
[16 70]
[17 69]
[18 68]
[19 67]
[24 61]
[25 60]
[27 58]
[28 57]
[29 56]
[30 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 47]
[40 46]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[124 217]
[125 216]
[126 215]
[127 214]
[128 213]
[130 196]
[131 195]
[132 194]
[133 193]
[134 192]
[138 181]
[139 180]
[140 179]
[141 178]
[143 177]
[144 176]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[155 164]
[156 163]
[157 162]
[183 191]
[184 190]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
