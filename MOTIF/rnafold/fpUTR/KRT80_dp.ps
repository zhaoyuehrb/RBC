%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT80)
} def

/sequence { (\
CCCAGCUGUGACCAGAGCAACCAGAGCCUGCCACCCGACGCAACCCCAGGCUCACUCGCUCACCCCCCUGGGCCCUCCUGCUUCCGGCCGGGGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.044347549 ubox
1 72 0.362357740 ubox
1 92 0.067204700 ubox
1 93 0.041516860 ubox
1 94 0.009498309 ubox
2 70 0.034492176 ubox
2 71 0.804997098 ubox
2 91 0.067509118 ubox
2 92 0.041546910 ubox
2 93 0.009502911 ubox
3 10 0.201776005 ubox
3 70 0.807367178 ubox
3 71 0.003817907 ubox
3 90 0.067523161 ubox
3 91 0.041430580 ubox
3 92 0.009311867 ubox
4 9 0.193931043 ubox
4 60 0.014028142 ubox
4 69 0.807480751 ubox
5 18 0.094449572 ubox
5 27 0.011356244 ubox
5 59 0.015001415 ubox
5 68 0.804618610 ubox
5 73 0.006728769 ubox
5 88 0.079593094 ubox
5 95 0.036707531 ubox
6 15 0.075683538 ubox
6 17 0.094653701 ubox
6 26 0.011444143 ubox
6 58 0.014948486 ubox
6 71 0.008342119 ubox
6 72 0.006692333 ubox
6 87 0.079624362 ubox
6 94 0.032596266 ubox
7 14 0.149377264 ubox
7 16 0.094425835 ubox
7 19 0.016854479 ubox
7 25 0.011399282 ubox
7 62 0.006951773 ubox
7 70 0.008199545 ubox
7 71 0.006248693 ubox
7 86 0.079549756 ubox
7 93 0.008031372 ubox
7 96 0.031887390 ubox
8 13 0.157339908 ubox
8 18 0.018216481 ubox
8 21 0.003760558 ubox
8 55 0.006856133 ubox
8 59 0.007446575 ubox
8 61 0.004959560 ubox
8 63 0.698543585 ubox
8 69 0.005532746 ubox
8 85 0.079412937 ubox
8 95 0.035819205 ubox
8 97 0.325907034 ubox
9 17 0.018106530 ubox
9 19 0.003216165 ubox
9 20 0.003685291 ubox
9 23 0.011554891 ubox
9 54 0.006819817 ubox
9 58 0.007456742 ubox
9 62 0.700067548 ubox
9 94 0.016524387 ubox
9 96 0.327188666 ubox
10 18 0.003745390 ubox
10 22 0.011598551 ubox
10 53 0.005766022 ubox
10 57 0.007415367 ubox
10 61 0.668563377 ubox
10 83 0.037760987 ubox
10 84 0.066015503 ubox
10 95 0.326542261 ubox
11 52 0.004969268 ubox
11 56 0.007178414 ubox
11 60 0.635111412 ubox
11 82 0.039437268 ubox
11 83 0.059625079 ubox
12 71 0.072003175 ubox
12 93 0.005191401 ubox
12 94 0.048393978 ubox
13 30 0.003405913 ubox
13 70 0.072185656 ubox
13 80 0.055728482 ubox
13 92 0.004827697 ubox
13 93 0.042058477 ubox
14 29 0.003915411 ubox
14 56 0.016010423 ubox
14 60 0.011956678 ubox
14 69 0.071736701 ubox
14 79 0.054995876 ubox
15 28 0.004173799 ubox
15 53 0.003207503 ubox
15 55 0.016641707 ubox
15 57 0.612926721 ubox
15 59 0.017634805 ubox
15 61 0.726869088 ubox
15 68 0.044558614 ubox
15 77 0.028084103 ubox
15 78 0.042125447 ubox
15 83 0.025446658 ubox
15 84 0.004872729 ubox
16 52 0.003219524 ubox
16 56 0.613032272 ubox
16 60 0.750368624 ubox
16 76 0.039105119 ubox
16 82 0.046620722 ubox
16 83 0.003474643 ubox
17 27 0.004816009 ubox
17 51 0.003209699 ubox
17 55 0.611145504 ubox
17 59 0.779550459 ubox
17 75 0.038719080 ubox
17 81 0.047122108 ubox
18 26 0.004826508 ubox
18 58 0.778451293 ubox
18 80 0.047121144 ubox
19 79 0.043604144 ubox
21 50 0.005843558 ubox
21 71 0.010923112 ubox
22 49 0.005877545 ubox
22 70 0.010936837 ubox
23 56 0.021212685 ubox
23 69 0.010854500 ubox
24 53 0.997337970 ubox
24 55 0.014312753 ubox
24 57 0.007759172 ubox
24 61 0.003770216 ubox
24 68 0.006785580 ubox
25 52 0.999511808 ubox
25 56 0.007525590 ubox
25 60 0.003802392 ubox
26 51 0.999842989 ubox
26 55 0.007106325 ubox
26 59 0.003795645 ubox
27 50 0.999849666 ubox
27 58 0.003787271 ubox
28 49 0.999817116 ubox
29 37 0.003260822 ubox
29 40 0.006605266 ubox
29 42 0.233836461 ubox
29 48 0.970841918 ubox
29 96 0.010530488 ubox
30 36 0.006502660 ubox
30 39 0.013454752 ubox
30 41 0.331986177 ubox
30 47 0.935690915 ubox
30 51 0.007851243 ubox
30 95 0.011933417 ubox
31 40 0.353648798 ubox
31 50 0.007870698 ubox
31 94 0.011942786 ubox
32 49 0.007866624 ubox
32 93 0.011931876 ubox
34 92 0.011928557 ubox
35 91 0.011939030 ubox
36 90 0.011937430 ubox
37 89 0.011710352 ubox
39 86 0.007043852 ubox
40 85 0.006824258 ubox
40 88 0.007835185 ubox
41 87 0.007694658 ubox
42 83 0.004969037 ubox
43 82 0.005172067 ubox
44 87 0.003355242 ubox
45 72 0.005256481 ubox
45 86 0.003715214 ubox
46 71 0.006174412 ubox
47 70 0.006202888 ubox
47 80 0.008290935 ubox
48 69 0.006210385 ubox
48 79 0.008312193 ubox
48 83 0.005926190 ubox
49 68 0.006188219 ubox
49 78 0.008272370 ubox
49 82 0.006633466 ubox
50 67 0.006066328 ubox
50 77 0.008238879 ubox
50 81 0.006698582 ubox
51 80 0.006698340 ubox
58 73 0.075916274 ubox
58 95 0.011097674 ubox
59 72 0.076081286 ubox
59 94 0.009718463 ubox
60 71 0.076110800 ubox
60 93 0.005488562 ubox
61 70 0.076227257 ubox
61 92 0.004440905 ubox
62 69 0.068738587 ubox
63 71 0.043252423 ubox
63 72 0.078168958 ubox
63 91 0.004524347 ubox
63 92 0.022105525 ubox
63 93 0.031478042 ubox
63 94 0.301266972 ubox
64 70 0.043237363 ubox
64 71 0.089975478 ubox
64 72 0.035070422 ubox
64 90 0.004515305 ubox
64 91 0.022210044 ubox
64 92 0.033618906 ubox
64 93 0.302644421 ubox
64 94 0.288066786 ubox
65 70 0.089632673 ubox
65 71 0.044610311 ubox
65 72 0.004598777 ubox
65 90 0.022183763 ubox
65 91 0.033606311 ubox
65 92 0.302410642 ubox
65 93 0.291708754 ubox
65 94 0.267410839 ubox
66 70 0.044413025 ubox
66 71 0.005824260 ubox
66 87 0.004547678 ubox
66 90 0.033517900 ubox
66 91 0.301855522 ubox
66 92 0.292537690 ubox
66 93 0.270620605 ubox
66 94 0.218728362 ubox
67 86 0.004597623 ubox
67 87 0.011341522 ubox
67 90 0.300798626 ubox
67 91 0.292810690 ubox
67 92 0.271230524 ubox
67 93 0.221507581 ubox
68 86 0.011872830 ubox
68 87 0.121876926 ubox
68 90 0.291612627 ubox
68 91 0.271327817 ubox
68 92 0.222161379 ubox
69 80 0.003193382 ubox
69 86 0.123371234 ubox
69 90 0.260287284 ubox
69 91 0.221713118 ubox
70 78 0.007126956 ubox
70 79 0.006756972 ubox
70 83 0.012900711 ubox
70 84 0.008645912 ubox
70 85 0.123235214 ubox
70 89 0.223564437 ubox
70 98 0.139572930 ubox
71 77 0.007142295 ubox
71 78 0.007373068 ubox
71 82 0.030616725 ubox
71 83 0.006683233 ubox
71 84 0.120141089 ubox
71 85 0.003262622 ubox
71 88 0.161509582 ubox
71 89 0.484832640 ubox
71 97 0.143172514 ubox
71 98 0.006379019 ubox
72 76 0.004649485 ubox
72 77 0.007418233 ubox
72 81 0.106413968 ubox
72 82 0.004355951 ubox
72 83 0.053993218 ubox
72 84 0.003318589 ubox
72 88 0.509881222 ubox
72 95 0.740768562 ubox
72 97 0.011678349 ubox
73 80 0.107601661 ubox
73 87 0.531700392 ubox
73 92 0.015551897 ubox
73 93 0.022996661 ubox
73 94 0.770308320 ubox
74 86 0.529824476 ubox
74 87 0.044371294 ubox
74 91 0.015680399 ubox
74 92 0.023448311 ubox
74 93 0.768192540 ubox
74 94 0.281967638 ubox
75 86 0.055703235 ubox
75 87 0.003868571 ubox
75 90 0.015669473 ubox
75 91 0.023447504 ubox
75 92 0.765607561 ubox
75 93 0.290749742 ubox
75 94 0.034147435 ubox
76 86 0.003514099 ubox
76 87 0.004533514 ubox
76 90 0.022542829 ubox
76 91 0.329030117 ubox
76 92 0.296298760 ubox
76 93 0.034622883 ubox
77 86 0.008375951 ubox
77 87 0.024585661 ubox
77 90 0.320054253 ubox
77 91 0.751911905 ubox
77 92 0.042298397 ubox
78 86 0.025340889 ubox
78 87 0.090096171 ubox
78 90 0.753852566 ubox
78 91 0.044370890 ubox
79 86 0.090970310 ubox
79 90 0.044614875 ubox
79 96 0.108654664 ubox
80 85 0.094357025 ubox
80 88 0.815284725 ubox
80 89 0.040135085 ubox
80 95 0.122601669 ubox
81 87 0.816407820 ubox
81 94 0.122625728 ubox
82 86 0.735490966 ubox
82 93 0.122266052 ubox
83 92 0.121848802 ubox
83 93 0.007197966 ubox
84 91 0.122203975 ubox
84 92 0.010222800 ubox
85 90 0.122031988 ubox
85 91 0.010250916 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
72 95 0.9500000 lbox
73 94 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
77 91 0.9500000 lbox
78 90 0.9500000 lbox
80 88 0.9500000 lbox
81 87 0.9500000 lbox
82 86 0.9500000 lbox
showpage
end
%%EOF
