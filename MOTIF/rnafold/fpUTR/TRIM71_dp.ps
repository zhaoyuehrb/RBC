%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRIM71)
} def

/sequence { (\
GCUCUCUCCUCCUCCUCCUCCUCUUCCUCUCUGGUCUCCUCCCUCCUCCGGGCUGGGUUGCAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.020334049 ubox
1 53 0.022430285 ubox
1 58 0.052019752 ubox
1 61 0.550703219 ubox
2 34 0.022199188 ubox
2 52 0.022455514 ubox
2 57 0.056944257 ubox
2 60 0.550514156 ubox
3 33 0.017670564 ubox
3 34 0.016095997 ubox
3 51 0.022273356 ubox
3 56 0.054349433 ubox
3 57 0.045339060 ubox
4 33 0.029018965 ubox
4 34 0.009022623 ubox
4 50 0.022259407 ubox
4 55 0.053849313 ubox
4 56 0.055576754 ubox
4 57 0.345301044 ubox
5 33 0.007379808 ubox
5 34 0.017523063 ubox
5 55 0.053460513 ubox
5 56 0.342043412 ubox
5 57 0.088808444 ubox
6 33 0.029288380 ubox
6 34 0.008028907 ubox
6 52 0.006667516 ubox
6 55 0.341488825 ubox
6 56 0.091968908 ubox
6 57 0.100553072 ubox
7 33 0.007412719 ubox
7 34 0.006862411 ubox
7 51 0.005767489 ubox
7 52 0.017573209 ubox
7 55 0.083694799 ubox
7 56 0.083923811 ubox
7 57 0.088599005 ubox
8 33 0.011151719 ubox
8 34 0.114864110 ubox
8 50 0.005686236 ubox
8 51 0.019742707 ubox
8 52 0.278723468 ubox
8 55 0.083928469 ubox
8 56 0.109131632 ubox
8 57 0.084762338 ubox
9 33 0.117533019 ubox
9 34 0.012082673 ubox
9 50 0.019669029 ubox
9 51 0.278873590 ubox
9 52 0.189956812 ubox
9 55 0.109124361 ubox
9 56 0.083251005 ubox
9 57 0.020404976 ubox
10 33 0.011178073 ubox
10 34 0.007552497 ubox
10 50 0.276069103 ubox
10 51 0.178224506 ubox
10 52 0.059108832 ubox
10 55 0.072275422 ubox
10 56 0.015987163 ubox
10 57 0.025311864 ubox
11 33 0.012304877 ubox
11 34 0.137895540 ubox
11 50 0.181879440 ubox
11 51 0.093257579 ubox
11 52 0.099306328 ubox
11 55 0.024170396 ubox
11 56 0.033530120 ubox
11 57 0.029807786 ubox
12 33 0.141006878 ubox
12 34 0.013367897 ubox
12 50 0.093358983 ubox
12 51 0.099113384 ubox
12 52 0.052504702 ubox
12 55 0.033756604 ubox
12 56 0.029347207 ubox
12 57 0.017533199 ubox
13 33 0.012310195 ubox
13 34 0.008949371 ubox
13 50 0.093434284 ubox
13 51 0.047079514 ubox
13 52 0.025485499 ubox
13 55 0.025414326 ubox
13 56 0.013537889 ubox
13 57 0.027851977 ubox
14 33 0.014544793 ubox
14 34 0.151500575 ubox
14 50 0.048678672 ubox
14 51 0.034494738 ubox
14 52 0.033576405 ubox
14 55 0.015236908 ubox
14 56 0.036184924 ubox
14 57 0.032567793 ubox
15 33 0.154838072 ubox
15 34 0.015770230 ubox
15 50 0.034509980 ubox
15 51 0.033369147 ubox
15 52 0.017646037 ubox
15 55 0.036257808 ubox
15 56 0.032276346 ubox
15 57 0.025320049 ubox
16 33 0.014523192 ubox
16 34 0.010531231 ubox
16 50 0.030822272 ubox
16 51 0.014995020 ubox
16 52 0.011384238 ubox
16 55 0.027963713 ubox
16 56 0.020999492 ubox
16 57 0.038411900 ubox
17 33 0.017128365 ubox
17 34 0.178645972 ubox
17 50 0.016118257 ubox
17 51 0.015198318 ubox
17 52 0.022537618 ubox
17 55 0.023374159 ubox
17 56 0.050025600 ubox
17 57 0.028983794 ubox
18 33 0.182564396 ubox
18 34 0.018584323 ubox
18 50 0.015243389 ubox
18 51 0.022404509 ubox
18 52 0.019991426 ubox
18 55 0.050119202 ubox
18 56 0.028708534 ubox
18 57 0.017161426 ubox
19 33 0.017088427 ubox
19 34 0.012410216 ubox
19 50 0.020696903 ubox
19 51 0.015866156 ubox
19 52 0.015497089 ubox
19 55 0.025409822 ubox
19 56 0.012268040 ubox
19 57 0.031266080 ubox
20 33 0.020149527 ubox
20 34 0.228514459 ubox
20 50 0.016245376 ubox
20 51 0.020927155 ubox
20 52 0.043533490 ubox
20 55 0.013267055 ubox
20 56 0.040791885 ubox
20 57 0.061629418 ubox
21 33 0.233512292 ubox
21 34 0.027500366 ubox
21 50 0.020965264 ubox
21 51 0.043496634 ubox
21 52 0.035073333 ubox
21 55 0.040820341 ubox
21 56 0.061705749 ubox
21 57 0.084609186 ubox
22 33 0.021807058 ubox
22 34 0.044520644 ubox
22 50 0.040408379 ubox
22 51 0.034181021 ubox
22 52 0.007577672 ubox
22 55 0.045281703 ubox
22 56 0.084779903 ubox
22 57 0.015261080 ubox
23 33 0.073855953 ubox
23 34 0.081030480 ubox
23 50 0.035163142 ubox
23 51 0.010218680 ubox
23 52 0.013144118 ubox
23 55 0.093771887 ubox
23 56 0.019526865 ubox
23 57 0.013205634 ubox
24 33 0.083080994 ubox
24 34 0.006223411 ubox
24 50 0.009860509 ubox
24 51 0.012312403 ubox
24 52 0.008286969 ubox
24 55 0.019268296 ubox
24 56 0.008214078 ubox
24 57 0.012428192 ubox
24 63 0.008239702 ubox
25 33 0.008219129 ubox
25 34 0.033704686 ubox
25 50 0.010509458 ubox
25 51 0.008633917 ubox
25 52 0.038393074 ubox
25 55 0.006444044 ubox
25 56 0.010361277 ubox
25 57 0.184989111 ubox
25 62 0.010418360 ubox
26 33 0.055611632 ubox
26 34 0.583427700 ubox
26 50 0.009459987 ubox
26 51 0.042841058 ubox
26 52 0.100095265 ubox
26 55 0.011671799 ubox
26 56 0.243991585 ubox
26 57 0.093833300 ubox
27 33 0.591885626 ubox
27 34 0.052728280 ubox
27 50 0.042848091 ubox
27 51 0.099901910 ubox
27 52 0.022017291 ubox
27 55 0.244319072 ubox
27 56 0.094372525 ubox
27 57 0.037471695 ubox
28 33 0.047976423 ubox
28 34 0.019763243 ubox
28 50 0.091529365 ubox
28 51 0.022011469 ubox
28 52 0.004646187 ubox
28 55 0.089631000 ubox
28 56 0.037535225 ubox
28 57 0.006719279 ubox
29 33 0.030880891 ubox
29 50 0.037430360 ubox
29 51 0.005717968 ubox
29 52 0.063374389 ubox
29 55 0.040518110 ubox
29 56 0.008584597 ubox
29 57 0.028941382 ubox
30 50 0.005116680 ubox
30 51 0.034539295 ubox
30 52 0.245912531 ubox
30 55 0.007446301 ubox
30 56 0.020896601 ubox
30 57 0.068534327 ubox
31 50 0.034274177 ubox
31 51 0.268420821 ubox
31 52 0.008210332 ubox
31 55 0.020933530 ubox
31 56 0.088861806 ubox
31 57 0.003511519 ubox
32 50 0.269053880 ubox
32 51 0.006123567 ubox
32 55 0.088771528 ubox
32 60 0.029176120 ubox
32 62 0.302042768 ubox
33 39 0.112648554 ubox
33 40 0.029632625 ubox
33 41 0.006853521 ubox
33 42 0.069905814 ubox
33 43 0.052409867 ubox
33 44 0.015653103 ubox
33 45 0.009123550 ubox
33 46 0.095805926 ubox
33 47 0.005680659 ubox
33 48 0.007298806 ubox
33 49 0.273199482 ubox
33 54 0.094561655 ubox
33 59 0.048707333 ubox
33 61 0.321102958 ubox
34 38 0.111047445 ubox
34 39 0.032206039 ubox
34 40 0.006577243 ubox
34 41 0.070474256 ubox
34 42 0.051953389 ubox
34 43 0.017091651 ubox
34 44 0.006554105 ubox
34 45 0.095742534 ubox
34 46 0.006425577 ubox
34 47 0.005883719 ubox
34 48 0.272730977 ubox
34 53 0.095309865 ubox
34 58 0.053165915 ubox
34 61 0.454438542 ubox
35 52 0.087721081 ubox
35 56 0.010083536 ubox
35 57 0.032939601 ubox
35 60 0.456142001 ubox
36 50 0.003411101 ubox
36 51 0.085611489 ubox
36 52 0.023204967 ubox
36 55 0.015845442 ubox
36 56 0.042970806 ubox
36 57 0.278211084 ubox
37 50 0.078105331 ubox
37 51 0.018924853 ubox
37 52 0.012663573 ubox
37 55 0.034955360 ubox
37 56 0.258333417 ubox
37 57 0.415387642 ubox
38 50 0.029846877 ubox
38 51 0.026337296 ubox
38 52 0.012059174 ubox
38 55 0.260614871 ubox
38 56 0.513339787 ubox
38 57 0.481706405 ubox
39 50 0.026967348 ubox
39 51 0.012295313 ubox
39 52 0.014803839 ubox
39 55 0.514297250 ubox
39 56 0.481999170 ubox
39 57 0.039389043 ubox
40 50 0.010311916 ubox
40 51 0.014279162 ubox
40 52 0.021531126 ubox
40 55 0.447168681 ubox
40 56 0.026286834 ubox
40 57 0.083132924 ubox
41 50 0.016855593 ubox
41 51 0.030327297 ubox
41 52 0.742477240 ubox
41 55 0.033285026 ubox
41 56 0.110291228 ubox
41 57 0.392577537 ubox
42 50 0.030463126 ubox
42 51 0.744377559 ubox
42 52 0.160848060 ubox
42 55 0.110768417 ubox
42 56 0.395994833 ubox
42 57 0.046153458 ubox
43 50 0.743662202 ubox
43 51 0.160872532 ubox
43 52 0.086760039 ubox
43 55 0.395932419 ubox
43 56 0.046509270 ubox
43 57 0.004525835 ubox
44 50 0.148403427 ubox
44 51 0.084347058 ubox
44 52 0.044799579 ubox
44 55 0.043066696 ubox
44 57 0.010188509 ubox
45 50 0.094403083 ubox
45 51 0.057310210 ubox
45 52 0.416139468 ubox
45 56 0.013529622 ubox
46 50 0.057167126 ubox
46 51 0.416437374 ubox
46 52 0.032532486 ubox
46 55 0.013575789 ubox
46 57 0.003526908 ubox
47 51 0.029340716 ubox
47 57 0.007052630 ubox
48 56 0.009361752 ubox
48 57 0.006027154 ubox
49 55 0.009388755 ubox
49 56 0.006079533 ubox
50 54 0.005802672 ubox
52 61 0.038624173 ubox
53 60 0.038915764 ubox
54 62 0.016908952 ubox
55 61 0.018286823 ubox
34 61 0.9500000 lbox
35 60 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
