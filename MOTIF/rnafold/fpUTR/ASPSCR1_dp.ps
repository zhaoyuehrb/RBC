%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASPSCR1)
} def

/sequence { (\
GCUGCGGCCCCGCCCCCUGGCCGCGUGGCUGCGCGUCCUGGCUGUUGCCGAUAAAGUUGUUUGACGCCGGCCCGGCGGCGGGUCACGUGAGCGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.045816650 ubox
1 34 0.006994893 ubox
1 88 0.014119287 ubox
1 92 0.985539610 ubox
2 7 0.045960379 ubox
2 33 0.006842307 ubox
2 87 0.014624830 ubox
2 91 0.986229406 ubox
2 94 0.146551034 ubox
3 87 0.049387861 ubox
3 89 0.310468220 ubox
3 90 0.924898588 ubox
3 93 0.147078846 ubox
4 13 0.010450229 ubox
4 24 0.004941874 ubox
4 32 0.007682254 ubox
4 86 0.097920147 ubox
4 88 0.948393820 ubox
4 92 0.147208237 ubox
5 12 0.010488976 ubox
5 23 0.005041033 ubox
5 31 0.007687040 ubox
5 87 0.979202121 ubox
5 89 0.039564756 ubox
5 91 0.146853973 ubox
6 11 0.010402317 ubox
6 14 0.033413437 ubox
6 15 0.003217299 ubox
6 22 0.005853801 ubox
6 30 0.007682784 ubox
6 84 0.175709683 ubox
6 86 0.972444596 ubox
6 88 0.031583720 ubox
7 13 0.033958342 ubox
7 21 0.005953140 ubox
7 29 0.007689619 ubox
7 83 0.229137081 ubox
7 88 0.112148072 ubox
7 92 0.003472134 ubox
8 12 0.033734198 ubox
8 20 0.005924713 ubox
8 28 0.007680662 ubox
8 82 0.202641600 ubox
8 87 0.114382407 ubox
8 91 0.003594542 ubox
9 19 0.005881794 ubox
9 27 0.007662436 ubox
9 81 0.166602466 ubox
9 82 0.973144807 ubox
9 94 0.004387522 ubox
10 80 0.120105561 ubox
10 81 0.981334076 ubox
10 82 0.006149085 ubox
10 93 0.003903641 ubox
10 94 0.043956580 ubox
11 19 0.009627782 ubox
11 25 0.007443484 ubox
11 80 0.988091100 ubox
11 81 0.004469732 ubox
11 87 0.016418504 ubox
11 89 0.007912256 ubox
11 93 0.044105189 ubox
12 18 0.007889176 ubox
12 21 0.004549524 ubox
12 24 0.007388716 ubox
12 79 0.994727480 ubox
12 83 0.070418321 ubox
12 86 0.016477043 ubox
12 88 0.008151139 ubox
12 92 0.044139217 ubox
13 20 0.007556626 ubox
13 23 0.007350366 ubox
13 78 0.993682666 ubox
13 82 0.071527513 ubox
13 87 0.008176592 ubox
13 91 0.044057569 ubox
14 19 0.009137472 ubox
14 20 0.007453694 ubox
14 77 0.991646537 ubox
14 78 0.045282086 ubox
14 81 0.071391101 ubox
14 82 0.032207301 ubox
15 19 0.010603808 ubox
15 74 0.003406805 ubox
15 75 0.226101192 ubox
15 77 0.063903007 ubox
15 80 0.071192006 ubox
15 81 0.032539190 ubox
15 82 0.036407917 ubox
16 74 0.221540575 ubox
16 75 0.955527389 ubox
16 77 0.003171778 ubox
16 78 0.005632282 ubox
16 80 0.032753411 ubox
16 81 0.036591133 ubox
16 82 0.028239446 ubox
17 70 0.008402157 ubox
17 74 0.956389512 ubox
17 75 0.032563382 ubox
17 77 0.005962869 ubox
17 78 0.004443738 ubox
17 80 0.036458109 ubox
17 81 0.028347034 ubox
17 82 0.026326754 ubox
17 94 0.005096812 ubox
18 69 0.008444889 ubox
18 74 0.033052245 ubox
18 77 0.004582003 ubox
18 80 0.026633374 ubox
18 81 0.026447113 ubox
18 93 0.005057241 ubox
19 24 0.004562918 ubox
19 38 0.006191588 ubox
19 68 0.008461139 ubox
19 72 0.981578336 ubox
19 73 0.041588977 ubox
19 76 0.010019427 ubox
19 79 0.020220583 ubox
19 92 0.005046733 ubox
20 37 0.006201651 ubox
20 67 0.008459912 ubox
20 71 0.982788048 ubox
20 72 0.029438526 ubox
20 76 0.148992223 ubox
20 79 0.098966073 ubox
20 92 0.004544657 ubox
21 66 0.008416818 ubox
21 70 0.983219589 ubox
21 75 0.149376054 ubox
21 78 0.101488788 ubox
21 91 0.004810024 ubox
22 35 0.012179291 ubox
22 69 0.982935170 ubox
22 74 0.149067708 ubox
22 77 0.101807729 ubox
22 89 0.007665695 ubox
23 29 0.008768675 ubox
23 32 0.033201179 ubox
23 34 0.028905060 ubox
23 36 0.052003140 ubox
23 67 0.657708047 ubox
23 68 0.727108781 ubox
23 73 0.147242833 ubox
23 76 0.102666657 ubox
23 88 0.008201448 ubox
24 28 0.008793312 ubox
24 31 0.033680320 ubox
24 33 0.029495932 ubox
24 35 0.068621657 ubox
24 63 0.005959389 ubox
24 66 0.930084689 ubox
24 74 0.020969524 ubox
24 75 0.101058678 ubox
24 87 0.008293478 ubox
25 30 0.023826773 ubox
25 32 0.032776840 ubox
25 34 0.071507381 ubox
25 48 0.004732492 ubox
25 52 0.006815400 ubox
25 62 0.005360780 ubox
25 65 0.929302649 ubox
25 67 0.303462132 ubox
25 73 0.034581516 ubox
25 86 0.009249622 ubox
26 31 0.031434217 ubox
26 33 0.071511640 ubox
26 47 0.004886640 ubox
26 50 0.092289662 ubox
26 51 0.010080114 ubox
26 59 0.018749859 ubox
26 63 0.057432124 ubox
26 64 0.899954403 ubox
26 66 0.302912530 ubox
26 74 0.005267890 ubox
26 85 0.009251494 ubox
27 32 0.072593817 ubox
27 34 0.011796825 ubox
27 37 0.062229706 ubox
27 38 0.044955081 ubox
27 46 0.007992880 ubox
27 49 0.306224626 ubox
27 58 0.095438567 ubox
27 61 0.589674843 ubox
27 62 0.101815098 ubox
27 65 0.297173425 ubox
27 68 0.004701877 ubox
27 72 0.181415552 ubox
27 73 0.004999758 ubox
27 84 0.009253850 ubox
28 34 0.041252134 ubox
28 36 0.063877078 ubox
28 37 0.044829239 ubox
28 45 0.009261556 ubox
28 48 0.307379640 ubox
28 57 0.100193508 ubox
28 60 0.728121899 ubox
28 61 0.091020210 ubox
28 67 0.005168678 ubox
28 71 0.181607274 ubox
28 72 0.003553120 ubox
28 83 0.009208835 ubox
29 33 0.041042360 ubox
29 35 0.073053890 ubox
29 44 0.009391565 ubox
29 47 0.307220967 ubox
29 56 0.100638205 ubox
29 59 0.739642105 ubox
29 66 0.005123348 ubox
29 70 0.181642871 ubox
29 82 0.008868615 ubox
30 44 0.005023188 ubox
30 55 0.100038916 ubox
30 59 0.020180785 ubox
30 63 0.018327768 ubox
30 69 0.181496768 ubox
30 80 0.003617286 ubox
30 81 0.007767563 ubox
31 42 0.016037691 ubox
31 43 0.007376825 ubox
31 45 0.293395241 ubox
31 46 0.005967941 ubox
31 57 0.718087471 ubox
31 58 0.026858339 ubox
31 60 0.486881631 ubox
31 62 0.015531482 ubox
31 68 0.181609448 ubox
31 79 0.004415872 ubox
32 41 0.016105213 ubox
32 44 0.302399037 ubox
32 56 0.739589964 ubox
32 59 0.489710600 ubox
32 63 0.004079396 ubox
32 78 0.004412301 ubox
32 80 0.007939464 ubox
33 42 0.295409009 ubox
33 43 0.081878051 ubox
33 45 0.006722563 ubox
33 57 0.387129825 ubox
33 58 0.352888753 ubox
33 60 0.038390778 ubox
33 67 0.189537816 ubox
33 79 0.008064357 ubox
34 40 0.011237378 ubox
34 41 0.301896653 ubox
34 44 0.006950774 ubox
34 50 0.009197698 ubox
34 56 0.512866328 ubox
34 59 0.039052928 ubox
34 66 0.189653831 ubox
34 77 0.004711535 ubox
34 78 0.007932862 ubox
35 39 0.008249157 ubox
35 42 0.052492066 ubox
35 43 0.004436290 ubox
35 49 0.004111678 ubox
35 52 0.587741415 ubox
35 57 0.007976696 ubox
35 58 0.036111729 ubox
35 65 0.189804253 ubox
35 76 0.004944752 ubox
36 41 0.049997918 ubox
36 51 0.606890185 ubox
36 56 0.006955793 ubox
36 64 0.189716137 ubox
36 95 0.004151505 ubox
37 50 0.592370916 ubox
37 63 0.189035102 ubox
37 75 0.008756271 ubox
37 94 0.004449309 ubox
38 56 0.041351033 ubox
38 70 0.003167280 ubox
38 74 0.008763127 ubox
38 93 0.004435958 ubox
39 50 0.657292152 ubox
39 53 0.008422930 ubox
39 55 0.035900547 ubox
39 59 0.042154695 ubox
39 69 0.006228438 ubox
40 49 0.946456942 ubox
40 58 0.047765852 ubox
40 61 0.032219512 ubox
40 68 0.039833805 ubox
40 72 0.009686399 ubox
41 48 0.948653253 ubox
41 57 0.050129370 ubox
41 60 0.033284571 ubox
41 67 0.039912867 ubox
41 71 0.009706612 ubox
42 47 0.948139692 ubox
42 56 0.050230582 ubox
42 59 0.033333032 ubox
42 66 0.039036820 ubox
42 70 0.009714487 ubox
43 53 0.008670891 ubox
43 55 0.049329827 ubox
43 66 0.008276365 ubox
43 69 0.009695343 ubox
44 52 0.014100680 ubox
44 57 0.010772911 ubox
44 65 0.039340425 ubox
44 68 0.009562761 ubox
45 51 0.014505500 ubox
45 54 0.019333442 ubox
45 55 0.010029060 ubox
45 56 0.021436553 ubox
45 64 0.039324900 ubox
46 50 0.013131191 ubox
46 53 0.021546545 ubox
46 54 0.010937173 ubox
46 55 0.022836034 ubox
46 63 0.038348127 ubox
46 66 0.008037431 ubox
47 52 0.018638997 ubox
47 57 0.004735021 ubox
47 60 0.008409429 ubox
47 62 0.024925770 ubox
47 65 0.008340047 ubox
47 67 0.004383380 ubox
48 56 0.004950980 ubox
48 59 0.006942859 ubox
48 66 0.003855574 ubox
49 59 0.033830690 ubox
49 63 0.018101341 ubox
50 58 0.064512078 ubox
50 61 0.201866414 ubox
50 62 0.036850326 ubox
50 65 0.013089930 ubox
50 68 0.003738355 ubox
51 57 0.067256425 ubox
51 60 0.221517310 ubox
51 61 0.036203935 ubox
52 56 0.062524035 ubox
52 59 0.222317153 ubox
52 63 0.118007387 ubox
53 58 0.203697315 ubox
53 61 0.017950344 ubox
53 62 0.151857873 ubox
54 60 0.018875797 ubox
54 61 0.155944054 ubox
54 62 0.044133770 ubox
55 60 0.148715017 ubox
55 61 0.044941735 ubox
55 62 0.044071048 ubox
56 60 0.031193481 ubox
56 61 0.043502784 ubox
56 65 0.064660033 ubox
56 67 0.017121425 ubox
57 64 0.064827130 ubox
57 66 0.015033212 ubox
57 94 0.004191659 ubox
58 63 0.061569972 ubox
58 66 0.014795517 ubox
58 93 0.005343452 ubox
59 65 0.023076758 ubox
59 67 0.009537803 ubox
59 68 0.003872656 ubox
59 92 0.007200279 ubox
60 64 0.020875430 ubox
60 66 0.009334660 ubox
60 91 0.007016122 ubox
61 90 0.006786329 ubox
62 89 0.006354166 ubox
63 68 0.006184064 ubox
64 88 0.006898920 ubox
65 87 0.007415723 ubox
66 76 0.004805432 ubox
66 86 0.007397620 ubox
67 75 0.004810151 ubox
68 74 0.004809835 ubox
69 73 0.004500241 ubox
69 84 0.007817013 ubox
70 83 0.007848768 ubox
71 82 0.007855042 ubox
72 81 0.007855594 ubox
73 80 0.007855513 ubox
74 79 0.007820401 ubox
83 90 0.029408256 ubox
83 95 0.012618834 ubox
84 89 0.031551549 ubox
84 94 0.013494021 ubox
86 93 0.017309976 ubox
87 92 0.017020360 ubox
1 92 0.9500000 lbox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
4 88 0.9500000 lbox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
9 82 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
