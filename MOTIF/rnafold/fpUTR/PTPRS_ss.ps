%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCGCCGCCCGCCCGGCAGCCCGGCCGGCGCGCGCACGCCGCGAGCCGCUGGCGCUCGGGCUCCGCUCGGAUCCCAUGCAACAGCCACGAUGUGAAGCGGGGCAGAGCCGGGGGAGCCCAGCCCAGCCAGCCUCCAGACGUUGCCCCAUCUGACGCUCGGCUCGAGGCCUCUCUGUGAGGGACCGGGGGGCCAUCCCCCUCCAGGGCGGAGAUCGGAGGUCGCUGCCAAGC\
) } def
/len { sequence length } bind def

/coor [
[105.35848236 191.54496765]
[102.96246338 176.73756409]
[100.56644440 161.93017578]
[98.17042542 147.12277222]
[83.49130249 144.03678894]
[75.33573914 156.62594604]
[67.18016815 169.21510315]
[59.02460480 181.80424500]
[50.95336914 194.44763184]
[42.96682358 207.14468384]
[34.98028183 219.84173584]
[26.99373627 232.53878784]
[26.19541740 248.33984375]
[12.86956310 254.99346924]
[4.88301897 267.69052124]
[-3.10352516 280.38757324]
[-3.90184450 296.18862915]
[-17.22769928 302.84225464]
[-25.21424294 315.53930664]
[-28.52952576 332.16595459]
[-45.42415619 333.58294678]
[-51.46266937 317.74084473]
[-37.91129303 307.55276489]
[-29.92474937 294.85571289]
[-29.69768143 279.96286011]
[-15.80057621 272.40103149]
[-7.81403208 259.70397949]
[0.17251191 247.00692749]
[0.39957997 232.11405945]
[14.29668522 224.55224609]
[22.28322983 211.85519409]
[30.26977348 199.15814209]
[38.25631714 186.46109009]
[39.15565109 179.13795471]
[46.43545151 173.64868164]
[54.59101868 161.05952454]
[62.74658585 148.47038269]
[70.90215302 135.88122559]
[61.98566437 110.50706482]
[69.29987335 88.79063416]
[85.34085846 78.61695862]
[80.80105591 64.32044220]
[76.26126099 50.02393341]
[64.71017456 39.21269608]
[68.23265076 24.74060631]
[63.69285583 10.44409370]
[59.15306091 -3.85241842]
[54.61326599 -18.14892960]
[50.07346725 -32.44544220]
[45.53367233 -46.74195480]
[38.14974213 -59.79866028]
[28.23758888 -71.05695343]
[18.32543373 -82.31524658]
[8.41327858 -93.57353973]
[-1.49887586 -104.83184052]
[-9.50441647 -109.19520569]
[-11.46705723 -116.30752563]
[-21.22782516 -127.69731903]
[-30.98859215 -139.08711243]
[-38.93508530 -143.55709839]
[-40.80247498 -150.69502258]
[-50.41011047 -162.21427917]
[-60.01774597 -173.73355103]
[-69.62538147 -185.25280762]
[-79.23301697 -196.77206421]
[-88.84065247 -208.29132080]
[-98.44828796 -219.81057739]
[-106.33432007 -224.38641357]
[-108.10611725 -231.54866028]
[-117.55890656 -243.19531250]
[-127.01168823 -254.84197998]
[-136.46447754 -266.48864746]
[-145.91726685 -278.13531494]
[-165.99768066 -279.17010498]
[-178.62707520 -294.42062378]
[-175.98391724 -313.73556519]
[-185.89607239 -324.99386597]
[-195.80822754 -336.25216675]
[-203.81376648 -340.61550903]
[-205.77641296 -347.72784424]
[-215.53718567 -359.11764526]
[-225.29794312 -370.50744629]
[-244.59973145 -376.35885620]
[-247.28721619 -395.51696777]
[-257.34899902 -406.64175415]
[-267.41076660 -417.76654053]
[-283.02981567 -417.00518799]
[-295.45272827 -426.50283813]
[-298.81381226 -441.77493286]
[-291.52606201 -455.61047363]
[-277.03051758 -461.47677612]
[-262.17153931 -456.60388184]
[-253.96507263 -443.29269409]
[-256.28598022 -427.82830811]
[-246.22421265 -416.70352173]
[-236.16244507 -405.57873535]
[-225.97271729 -405.98870850]
[-217.04718018 -400.61697388]
[-212.44863892 -391.02569580]
[-213.90815735 -380.26818848]
[-204.14738464 -368.87841797]
[-194.38661194 -357.48861694]
[-184.54994202 -346.16430664]
[-174.63778687 -334.90600586]
[-164.72563171 -323.64773560]
[-154.71282959 -325.77615356]
[-144.63926697 -323.54730225]
[-136.33001709 -317.29656982]
[-131.31877136 -308.09402466]
[-130.56491089 -297.56179810]
[-134.27059937 -287.58810425]
[-124.81781006 -275.94143677]
[-115.36502838 -264.29476929]
[-105.91223907 -252.64810181]
[-96.45944977 -241.00143433]
[-86.92903137 -229.41821289]
[-77.32139587 -217.89895630]
[-67.71376038 -206.37969971]
[-58.10612106 -194.86044312]
[-48.49848557 -183.34118652]
[-38.89085007 -171.82191467]
[-29.28321457 -160.30265808]
[-19.59879684 -148.84788513]
[-9.83802986 -137.45808411]
[-0.07726270 -126.06829071]
[9.75941849 -114.74399567]
[19.67157364 -103.48569489]
[29.58372879 -92.22740173]
[39.49588394 -80.96910858]
[49.40803909 -69.71081543]
[58.09196472 -81.67501831]
[71.45927429 -82.64790344]
[81.81485748 -93.49972534]
[92.17044067 -104.35153961]
[96.10011292 -119.67694855]
[110.48424530 -123.54293823]
[120.83982849 -134.39476013]
[124.49196625 -142.74876404]
[131.40711975 -145.32124329]
[141.90684509 -156.03366089]
[152.40657043 -166.74607849]
[148.20561218 -181.51928711]
[151.96965027 -196.40980530]
[162.68615723 -207.41217041]
[177.47245789 -211.56678772]
[192.35110474 -207.75610352]
[203.31982422 -197.00515747]
[207.42808533 -182.20591736]
[203.57078552 -167.33927917]
[192.78550720 -156.40431213]
[177.97344971 -152.34246826]
[163.11898804 -156.24635315]
[152.61926270 -145.53393555]
[142.11953735 -134.82153320]
[131.69165039 -124.03916931]
[121.33606720 -113.18735504]
[118.14709473 -98.63813782]
[103.02225494 -93.99595642]
[92.66667175 -83.14414215]
[82.31109619 -72.29232788]
[78.73078918 -55.17749405]
[59.83018494 -51.28174973]
[64.36997986 -36.98523712]
[68.90977478 -22.68872643]
[73.44956970 -8.39221382]
[77.98936462 5.90429783]
[82.52916718 20.20080948]
[93.75553894 29.98946571]
[90.55777740 45.48413849]
[95.09757233 59.78065109]
[99.63736725 74.07716370]
[128.89703369 78.42769623]
[144.10282898 113.75093079]
[157.44508362 120.60541534]
[170.78735352 127.45989990]
[184.12962341 134.31439209]
[197.47187805 141.16888428]
[210.81414795 148.02336121]
[224.15640259 154.87785339]
[237.96421814 148.04774475]
[252.97080994 150.62759399]
[263.45675659 161.42152405]
[265.55102539 176.14402771]
[278.89331055 182.99851990]
[292.23556519 189.85299683]
[298.82000732 189.91078186]
[303.66772461 192.83653259]
[305.83923340 197.07325745]
[318.99349976 204.28198242]
[332.14773560 211.49070740]
[345.30200195 218.69943237]
[358.45623779 225.90815735]
[374.19729614 222.81002808]
[386.34024048 233.29472351]
[385.57000732 249.31929016]
[372.47747803 258.59103394]
[357.10610962 253.99748230]
[351.24752808 239.06240845]
[338.09326172 231.85368347]
[324.93902588 224.64495850]
[311.78475952 217.43623352]
[298.63052368 210.22750854]
[285.38107300 203.19526672]
[272.03881836 196.34077454]
[258.69656372 189.48629761]
[245.50859070 196.35765076]
[230.62725830 194.11933899]
[219.79071045 183.42248535]
[217.30192566 168.22012329]
[203.95965576 161.36563110]
[190.61740112 154.51113892]
[177.27513123 147.65664673]
[163.93286133 140.80216980]
[150.59060669 133.94767761]
[137.24833679 127.09319305]
[131.18070984 131.50158691]
[132.74894714 146.41937256]
[119.04545593 140.31835938]
[112.97782898 144.72674561]
[115.37384796 159.53414917]
[117.76986694 174.34155273]
[120.16588593 189.14895630]
[130.14321899 197.30587769]
[131.84156799 209.67654419]
[124.89147949 219.56445312]
[127.08934021 234.40257263]
[129.28720093 249.24067688]
[139.89756775 261.74475098]
[134.11987305 277.09240723]
[117.89772034 279.49526978]
[107.91905975 266.48150635]
[114.44908905 251.43853760]
[112.25122833 236.60041809]
[110.05337524 221.76231384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 222]
[2 221]
[3 220]
[4 219]
[5 38]
[6 37]
[7 36]
[8 35]
[9 33]
[10 32]
[11 31]
[12 30]
[14 28]
[15 27]
[16 26]
[18 24]
[19 23]
[41 171]
[42 170]
[43 169]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[57 125]
[58 124]
[59 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[76 105]
[77 104]
[78 103]
[80 102]
[81 101]
[82 100]
[84 96]
[85 95]
[86 94]
[132 160]
[133 159]
[134 158]
[136 156]
[137 155]
[139 154]
[140 153]
[141 152]
[173 215]
[174 214]
[175 213]
[176 212]
[177 211]
[178 210]
[179 209]
[183 205]
[184 204]
[185 203]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
