%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:49:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUUUGUUUAUGGCCUGAUCUAGCUAAGGCUUCUAGACUUCAGGAGCUUAAGAAUCGUCCGGAGGGCUGGGCGUGGCGGUGCAGGCCUGUAGUCCCACCCACUCCGAAGGCUGCGGAGGGAGGAUCAACUUGAGUCUGGGAACUCAGCCAGGAAUUCAAGACCAGCCUGGGCAACACAGUGAGGCCCCCUACCCACAUCCUCUCCGUCCCCGCAAUCUCCUUCCAUCCCAGGGUGUUGCUGAAA\
) } def
/len { sequence length } bind def

/coor [
[75.05231476 122.54103851]
[65.87072754 134.40267944]
[56.68913269 146.26431274]
[47.58285904 158.18386841]
[38.55226135 170.16085815]
[29.52166367 182.13784790]
[32.26329803 199.42678833]
[21.84814262 213.07322693]
[5.12058258 214.91566467]
[-3.75757337 227.00608826]
[-12.63572884 239.09651184]
[-21.51388550 251.18693542]
[-30.39204025 263.27737427]
[-31.99564934 281.63281250]
[-48.34611893 288.03518677]
[-57.07040787 300.23709106]
[-65.79470062 312.43902588]
[-74.51898956 324.64093018]
[-83.24327850 336.84286499]
[-76.81682587 350.79263306]
[-78.24222565 366.08523560]
[-87.13604736 378.60702515]
[-101.10589600 384.98974609]
[-116.39395905 383.51641846]
[-128.88781738 374.58337402]
[-135.22669983 360.59359741]
[-133.70545959 345.31021118]
[-124.73331451 332.84442139]
[-110.72371674 326.54943848]
[-95.44519043 328.11856079]
[-86.72090149 315.91665649]
[-77.99661255 303.71472168]
[-69.27232361 291.51281738]
[-60.54803467 279.31088257]
[-62.22322845 267.34625244]
[-55.07552719 257.11367798]
[-42.48246384 254.39921570]
[-33.60430908 242.30879211]
[-24.72615242 230.21836853]
[-15.84799767 218.12794495]
[-6.96984148 206.03752136]
[-10.68298912 193.71359253]
[-6.56567860 181.31370544]
[4.09398937 173.42700195]
[17.54467201 173.10725403]
[26.57526970 161.13024902]
[35.60586548 149.15325928]
[37.11960602 141.93795776]
[44.82749939 137.08271790]
[54.00908661 125.22108459]
[63.19067764 113.35945129]
[62.05496979 105.94593811]
[48.31059647 111.95361328]
[38.78813171 123.54338074]
[24.16735649 126.89492798]
[10.54747105 120.61013031]
[3.61015129 107.31074524]
[6.24937010 92.54475403]
[17.36415100 82.47193909]
[32.31784821 81.29427338]
[44.87102890 89.50131226]
[59.78355408 91.11891174]
[58.64784622 83.70539856]
[46.33639145 75.13637543]
[34.02494049 66.56735229]
[21.71348953 57.99832916]
[9.40203857 49.42930603]
[-2.96344113 40.93843079]
[-15.38245201 32.52605057]
[-31.14735985 31.19253731]
[-37.34542465 17.64878464]
[-49.76443863 9.23640251]
[-62.18344879 0.82402027]
[-74.60245514 -7.58836174]
[-89.92989349 -4.81212997]
[-102.40470123 -13.52039528]
[-104.95695496 -28.14987183]
[-117.37596893 -36.56225204]
[-132.70339966 -33.78602219]
[-145.17820740 -42.49428558]
[-147.73046875 -57.12376404]
[-160.14947510 -65.53614807]
[-172.56848145 -73.94852448]
[-188.95530701 -74.58437347]
[-196.35760498 -89.21782684]
[-187.16055298 -102.79524231]
[-170.82527161 -101.34933472]
[-164.15609741 -86.36753845]
[-151.73709106 -77.95515442]
[-139.31808472 -69.54277802]
[-124.78561401 -72.59941101]
[-112.07113647 -64.24497223]
[-108.96358490 -48.98126602]
[-96.54457092 -40.56888199]
[-82.01210785 -43.62552261]
[-69.29763031 -35.27108383]
[-66.19007874 -20.00737190]
[-53.77106476 -11.59499073]
[-41.35205460 -3.18260860]
[-28.93304443 5.22977352]
[-14.05642796 5.96157694]
[-6.97006989 20.10704041]
[5.44894075 28.51942062]
[12.73165989 29.66576767]
[17.97106171 37.11785507]
[30.28251266 45.68687820]
[42.59396362 54.25590134]
[54.90541458 62.82492447]
[67.21686554 71.39394379]
[91.69226074 66.55011749]
[109.10943604 76.26490784]
[113.57038116 90.82638550]
[126.09495544 82.57199097]
[129.39561462 67.34886932]
[142.21490479 59.15616226]
[156.70747375 62.39664459]
[169.23205566 54.14225388]
[181.75663757 45.88786316]
[194.28120422 37.63347244]
[206.80578613 29.37908173]
[219.33036804 21.12469101]
[231.85493469 12.87030029]
[244.37951660 4.61591005]
[251.56556702 -26.74573517]
[259.97793579 -39.16474533]
[268.39031982 -51.58375549]
[260.80938721 -64.78566742]
[259.71664429 -79.90826416]
[265.27545166 -93.94821167]
[276.33340454 -104.14047241]
[290.66098022 -108.50286865]
[305.40072632 -106.22136688]
[313.81311035 -118.64038086]
[322.22549438 -131.05938721]
[330.63787842 -143.47839355]
[339.05026245 -155.89741516]
[347.46264648 -168.31642151]
[355.87503052 -180.73542786]
[364.12939453 -193.26000977]
[372.22448730 -205.88813782]
[380.31954956 -218.51628113]
[388.41464233 -231.14440918]
[382.64303589 -245.54817200]
[386.47268677 -260.58523560]
[398.43099976 -270.47357178]
[413.91973877 -271.41085815]
[426.98318481 -263.03674316]
[432.59817505 -248.57119751]
[428.60562134 -233.57656860]
[416.54077148 -223.81855774]
[401.04275513 -223.04933167]
[392.94769287 -210.42120361]
[384.85263062 -197.79307556]
[376.75753784 -185.16493225]
[376.87826538 -180.41258240]
[374.03128052 -175.52931213]
[368.29403687 -172.32304382]
[359.88165283 -159.90403748]
[351.46926880 -147.48503113]
[343.05688477 -135.06602478]
[334.64450073 -122.64701080]
[326.23211670 -110.22799683]
[317.81973267 -97.80898285]
[325.40615845 -84.96719360]
[326.66979980 -70.04363251]
[321.30670166 -55.99379730]
[310.33047485 -45.62349319]
[295.88150024 -41.02854538]
[280.80935669 -43.17137527]
[272.39697266 -30.75236320]
[263.98458862 -18.33335304]
[271.83825684 -5.55368853]
[286.71804810 -7.44876766]
[301.59786987 -9.34384632]
[316.47766113 -11.23892498]
[326.14520264 -23.45272636]
[341.26242065 -25.16263580]
[352.84683228 -15.87086964]
[367.72665405 -17.76594925]
[382.67498779 -25.76493454]
[394.49948120 -13.61512947]
[386.09783936 1.11065674]
[369.62173462 -2.88614082]
[354.74191284 -0.99106199]
[345.85632324 10.90774822]
[330.79306030 13.04159546]
[318.37274170 3.64088225]
[303.49295044 5.53596115]
[288.61312866 7.43104029]
[273.73333740 9.32611942]
[288.46420288 12.15476990]
[300.64981079 20.90181351]
[308.04229736 33.95368576]
[309.27795410 48.90270233]
[304.12881470 62.99122620]
[293.54476929 73.62034607]
[279.47827148 78.82930756]
[264.52413940 77.65721893]
[251.44096375 70.32028961]
[242.64219666 58.17196655]
[239.75096130 43.45324326]
[243.30058289 28.87928963]
[252.63391113 17.14048767]
[240.10932922 25.39487839]
[227.58474731 33.64926910]
[215.06018066 41.90365982]
[202.53559875 50.15805054]
[190.01101685 58.41244125]
[177.48645020 66.66683197]
[164.96186829 74.92121887]
[162.22450256 89.51719666]
[149.64038086 98.06673431]
[134.34934998 95.09657288]
[121.82476807 103.35095978]
[118.15703583 117.89563751]
[125.26984406 131.10200500]
[132.38265991 144.30836487]
[139.49546814 157.51472473]
[146.60827637 170.72108459]
[159.96424866 179.20214844]
[159.18725586 194.07647705]
[166.30006409 207.28283691]
[173.41287231 220.48919678]
[180.52568054 233.69555664]
[195.92053223 235.63935852]
[207.20960999 246.28532410]
[210.05203247 261.53982544]
[203.35484314 275.53723145]
[189.69323730 282.89523315]
[174.32037354 280.78454590]
[163.14746094 270.01675415]
[160.47067261 254.73228455]
[167.31932068 240.80836487]
[160.20651245 227.60200500]
[153.09370422 214.39564514]
[145.98089600 201.18928528]
[133.13368225 193.65281677]
[133.40191650 177.83389282]
[126.28910065 164.62753296]
[119.17629242 151.42117310]
[112.06348419 138.21481323]
[104.95067596 125.00845337]
[97.47608185 124.39159393]
[103.88233185 137.95478821]
[95.33947754 150.28440857]
[80.39027405 149.05096436]
[73.98377228 135.48789978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 47]
[5 46]
[6 45]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[63 109]
[64 108]
[65 107]
[66 106]
[67 105]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[74 97]
[77 94]
[78 93]
[81 90]
[82 89]
[83 88]
[112 214]
[113 213]
[116 210]
[117 209]
[118 208]
[119 207]
[120 206]
[121 205]
[122 204]
[123 203]
[124 171]
[125 170]
[126 169]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[139 154]
[140 153]
[141 152]
[142 151]
[172 190]
[173 189]
[174 188]
[175 187]
[178 184]
[179 183]
[215 242]
[216 241]
[217 240]
[218 239]
[219 238]
[221 236]
[222 235]
[223 234]
[224 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
