%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPPA)
} def

/sequence { (\
GAGACAGGGACAGACGUAGGCCAAGAGAGGGGAACCAGAGAGGAACCAGAGGGGAGAGACAGAGCAGCAAGCAGUGGAUUGCUCCUUGACGACGCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 17 0.115599406 ubox
5 16 0.119089819 ubox
5 88 0.040571011 ubox
6 87 0.038604370 ubox
7 22 0.220444139 ubox
7 36 0.058633864 ubox
7 47 0.050672899 ubox
7 86 0.036492227 ubox
7 96 0.296135911 ubox
8 21 0.220387503 ubox
8 22 0.108238506 ubox
8 35 0.058599432 ubox
8 36 0.026842162 ubox
8 46 0.050693718 ubox
8 47 0.027822659 ubox
8 85 0.036172466 ubox
8 95 0.295500825 ubox
8 96 0.358971888 ubox
9 21 0.108406964 ubox
9 35 0.026744691 ubox
9 46 0.027871135 ubox
9 84 0.035743074 ubox
9 95 0.359530623 ubox
10 17 0.309696701 ubox
10 83 0.030097530 ubox
11 16 0.319480187 ubox
11 81 0.018393828 ubox
11 88 0.014882721 ubox
12 80 0.015979604 ubox
12 87 0.011135387 ubox
13 79 0.009891608 ubox
13 80 0.003861276 ubox
13 82 0.003817234 ubox
13 86 0.005295761 ubox
14 79 0.003399289 ubox
15 88 0.043027722 ubox
15 91 0.408507694 ubox
15 94 0.202847631 ubox
16 35 0.075595515 ubox
16 46 0.018801789 ubox
16 60 0.007236278 ubox
16 82 0.014199823 ubox
16 87 0.016329342 ubox
16 90 0.411660805 ubox
16 93 0.204894156 ubox
16 95 0.021384481 ubox
16 99 0.333756375 ubox
17 34 0.073947225 ubox
17 45 0.018214997 ubox
17 59 0.007204662 ubox
17 81 0.014188175 ubox
17 88 0.030777690 ubox
17 89 0.398125732 ubox
17 92 0.198840718 ubox
17 94 0.020801130 ubox
17 98 0.319962950 ubox
18 80 0.013884293 ubox
18 86 0.006670320 ubox
18 87 0.032702157 ubox
19 36 0.133111057 ubox
19 47 0.131850228 ubox
19 79 0.008677100 ubox
19 85 0.006293405 ubox
19 86 0.018242017 ubox
19 87 0.035456608 ubox
19 96 0.779917190 ubox
20 35 0.132789322 ubox
20 46 0.131477228 ubox
20 84 0.005236584 ubox
20 85 0.009638885 ubox
20 86 0.015304810 ubox
20 95 0.781315534 ubox
20 99 0.024750272 ubox
21 30 0.467544245 ubox
21 31 0.096693404 ubox
21 32 0.152409753 ubox
21 43 0.146024248 ubox
21 52 0.003967178 ubox
21 53 0.007647989 ubox
21 54 0.011164183 ubox
21 77 0.013240374 ubox
21 94 0.772020989 ubox
21 98 0.024868534 ubox
22 29 0.503238591 ubox
22 30 0.120632412 ubox
22 31 0.155222099 ubox
22 42 0.148436095 ubox
22 51 0.004348233 ubox
22 52 0.007871931 ubox
22 53 0.011206953 ubox
22 76 0.013192491 ubox
22 88 0.085392383 ubox
23 75 0.011496536 ubox
23 87 0.073910223 ubox
24 86 0.060681023 ubox
24 87 0.006364268 ubox
25 84 0.004231290 ubox
25 85 0.053154182 ubox
25 86 0.003302183 ubox
25 87 0.014401046 ubox
26 83 0.005801601 ubox
26 86 0.012528898 ubox
26 87 0.012730209 ubox
27 82 0.005751116 ubox
27 84 0.039935163 ubox
27 85 0.010322852 ubox
27 86 0.006334905 ubox
27 87 0.100585794 ubox
28 83 0.039533090 ubox
28 86 0.100138879 ubox
28 87 0.032750763 ubox
29 36 0.437870754 ubox
29 47 0.277252384 ubox
29 82 0.038458506 ubox
29 84 0.006200367 ubox
29 85 0.099052829 ubox
29 86 0.022194446 ubox
29 87 0.018143120 ubox
29 96 0.059796027 ubox
30 35 0.438121541 ubox
30 36 0.070751591 ubox
30 46 0.276703902 ubox
30 47 0.488316085 ubox
30 82 0.004685689 ubox
30 83 0.006189696 ubox
30 84 0.097992927 ubox
30 85 0.018980004 ubox
30 86 0.014236679 ubox
30 87 0.004709826 ubox
30 95 0.059506177 ubox
30 96 0.015761948 ubox
31 35 0.069828217 ubox
31 46 0.490335538 ubox
31 47 0.628344433 ubox
31 80 0.019423155 ubox
31 82 0.011277762 ubox
31 83 0.092778050 ubox
31 84 0.016883613 ubox
31 85 0.013725643 ubox
31 95 0.015271734 ubox
31 96 0.019443125 ubox
32 46 0.629570107 ubox
32 79 0.012615572 ubox
32 80 0.007017689 ubox
32 82 0.092027881 ubox
32 83 0.010819223 ubox
32 84 0.013693062 ubox
32 95 0.019430823 ubox
33 79 0.008384487 ubox
33 80 0.026839913 ubox
33 83 0.011987674 ubox
34 79 0.025371591 ubox
35 43 0.858494255 ubox
35 52 0.011446387 ubox
35 53 0.010025510 ubox
35 54 0.006409673 ubox
35 77 0.031419762 ubox
36 42 0.859177758 ubox
36 51 0.011479690 ubox
36 52 0.010029685 ubox
36 53 0.006416788 ubox
36 76 0.031295213 ubox
36 81 0.005757516 ubox
36 88 0.004097074 ubox
37 75 0.027596913 ubox
37 80 0.004958148 ubox
37 87 0.003539725 ubox
40 84 0.004075827 ubox
40 87 0.008040357 ubox
41 83 0.004138712 ubox
41 86 0.008447953 ubox
42 82 0.004156101 ubox
42 85 0.008477480 ubox
42 96 0.287955976 ubox
43 84 0.008427375 ubox
43 95 0.288124534 ubox
44 80 0.003747441 ubox
44 83 0.007343923 ubox
44 87 0.003576310 ubox
45 79 0.003436633 ubox
46 52 0.035426507 ubox
46 53 0.084170681 ubox
46 54 0.050400348 ubox
46 77 0.003414577 ubox
47 51 0.035347318 ubox
47 52 0.084261755 ubox
47 53 0.050541316 ubox
47 76 0.003411327 ubox
47 88 0.270100435 ubox
48 75 0.003290524 ubox
48 86 0.009742936 ubox
48 87 0.233292895 ubox
49 84 0.008782625 ubox
49 85 0.009723418 ubox
49 86 0.143672395 ubox
49 87 0.878272748 ubox
50 83 0.009165753 ubox
50 86 0.961687989 ubox
50 87 0.057857694 ubox
51 82 0.009037741 ubox
51 83 0.011961686 ubox
51 84 0.020967113 ubox
51 85 0.981703084 ubox
51 86 0.056409236 ubox
51 87 0.106728841 ubox
51 96 0.004889582 ubox
52 82 0.013482803 ubox
52 83 0.023666031 ubox
52 84 0.982158982 ubox
52 85 0.056418716 ubox
52 86 0.128762765 ubox
52 87 0.004831551 ubox
52 95 0.004852046 ubox
52 96 0.006705087 ubox
53 80 0.007282380 ubox
53 82 0.031072666 ubox
53 83 0.981286092 ubox
53 84 0.055771045 ubox
53 85 0.132539363 ubox
53 86 0.003973658 ubox
53 95 0.006707869 ubox
53 96 0.008900928 ubox
54 79 0.004881378 ubox
54 80 0.015555554 ubox
54 82 0.978965123 ubox
54 83 0.040400525 ubox
54 84 0.133201338 ubox
54 85 0.004144056 ubox
54 95 0.008922894 ubox
55 79 0.016249531 ubox
55 80 0.040250362 ubox
55 83 0.133356732 ubox
56 79 0.030124860 ubox
56 80 0.833690618 ubox
56 82 0.131143518 ubox
56 84 0.008003984 ubox
57 79 0.977706392 ubox
57 80 0.053476918 ubox
57 83 0.008372571 ubox
58 79 0.048224181 ubox
58 80 0.037663141 ubox
58 82 0.008555148 ubox
59 75 0.013328281 ubox
59 79 0.040311695 ubox
60 74 0.013953554 ubox
60 76 0.998186105 ubox
60 81 0.014495311 ubox
60 88 0.006752639 ubox
61 75 0.997370720 ubox
61 80 0.014425810 ubox
61 87 0.005860533 ubox
62 79 0.013371714 ubox
62 84 0.018831453 ubox
62 86 0.003388574 ubox
62 87 0.013845361 ubox
63 83 0.019641075 ubox
63 86 0.014844249 ubox
64 72 0.998608097 ubox
64 75 0.012245039 ubox
64 82 0.019979982 ubox
64 85 0.015215020 ubox
65 71 0.998143320 ubox
65 74 0.013164277 ubox
65 76 0.014228705 ubox
65 81 0.020003697 ubox
66 75 0.013827289 ubox
66 80 0.019574599 ubox
66 83 0.024794280 ubox
67 75 0.009864891 ubox
67 79 0.014540917 ubox
67 82 0.028836569 ubox
68 74 0.011212495 ubox
68 76 0.013143377 ubox
68 81 0.029123346 ubox
69 75 0.012364348 ubox
69 80 0.029091266 ubox
70 79 0.028921237 ubox
70 83 0.009358989 ubox
71 82 0.011212362 ubox
72 81 0.011347150 ubox
73 80 0.010976127 ubox
74 79 0.007775304 ubox
86 92 0.006627381 ubox
86 98 0.006519322 ubox
87 91 0.010176755 ubox
87 94 0.021224452 ubox
87 97 0.017044181 ubox
88 93 0.140521429 ubox
88 96 0.023367941 ubox
19 96 0.9500000 lbox
20 95 0.9500000 lbox
21 94 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
49 87 0.9500000 lbox
50 86 0.9500000 lbox
51 85 0.9500000 lbox
52 84 0.9500000 lbox
53 83 0.9500000 lbox
54 82 0.9500000 lbox
56 80 0.9500000 lbox
57 79 0.9500000 lbox
60 76 0.9500000 lbox
61 75 0.9500000 lbox
64 72 0.9500000 lbox
65 71 0.9500000 lbox
showpage
end
%%EOF
