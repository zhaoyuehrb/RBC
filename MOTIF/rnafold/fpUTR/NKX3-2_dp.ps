%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NKX3-2)
} def

/sequence { (\
GGCGCUCUCUGUCCCGCUCGGAGCUGCUCGGCGCCCCAGCUGCCCGCCCCGCCGGCCGCUCCUGCCCGCGGCGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.103946666 ubox
1 8 0.058544219 ubox
1 9 0.030256916 ubox
1 10 0.011323067 ubox
1 13 0.037707324 ubox
1 14 0.012422537 ubox
1 15 0.051025468 ubox
1 18 0.022158768 ubox
1 19 0.015195161 ubox
1 28 0.122165479 ubox
1 29 0.075097525 ubox
1 35 0.149269988 ubox
1 36 0.009700831 ubox
1 37 0.003399079 ubox
1 44 0.045693506 ubox
1 45 0.026323761 ubox
1 48 0.019757690 ubox
1 53 0.020785600 ubox
2 6 0.067913903 ubox
2 7 0.066140749 ubox
2 8 0.027438166 ubox
2 9 0.015027499 ubox
2 12 0.038315503 ubox
2 13 0.012755993 ubox
2 14 0.051012811 ubox
2 17 0.029326575 ubox
2 18 0.004365861 ubox
2 27 0.158017196 ubox
2 28 0.019943976 ubox
2 34 0.149929162 ubox
2 35 0.006930525 ubox
2 43 0.046035519 ubox
2 44 0.025595399 ubox
2 47 0.019836026 ubox
2 52 0.020801051 ubox
2 74 0.328580744 ubox
3 11 0.038815350 ubox
3 16 0.029383109 ubox
3 26 0.158237136 ubox
3 33 0.150101750 ubox
3 42 0.046079211 ubox
3 46 0.019827585 ubox
3 51 0.020783795 ubox
3 73 0.328977828 ubox
4 10 0.031491244 ubox
4 12 0.053413360 ubox
4 15 0.027614737 ubox
4 17 0.007330420 ubox
4 24 0.162434946 ubox
4 25 0.042255640 ubox
4 27 0.032683231 ubox
4 32 0.150071890 ubox
4 40 0.014891378 ubox
4 41 0.012940577 ubox
4 43 0.024692578 ubox
4 45 0.009260130 ubox
4 50 0.011161520 ubox
4 72 0.328371273 ubox
4 74 0.032728408 ubox
5 11 0.055966973 ubox
5 16 0.007344873 ubox
5 23 0.165782288 ubox
5 26 0.032810539 ubox
5 31 0.150053451 ubox
5 39 0.015101221 ubox
5 42 0.024695872 ubox
5 71 0.314156932 ubox
5 73 0.032737770 ubox
5 76 0.009398492 ubox
6 22 0.165614969 ubox
6 30 0.147666270 ubox
6 38 0.014154520 ubox
6 70 0.260015998 ubox
6 71 0.009359248 ubox
6 75 0.007177694 ubox
7 21 0.165521633 ubox
7 23 0.142901915 ubox
7 30 0.010088427 ubox
7 70 0.078894214 ubox
7 71 0.008900068 ubox
7 76 0.019513688 ubox
8 20 0.161879146 ubox
8 22 0.143363533 ubox
8 70 0.010680931 ubox
8 71 0.005245780 ubox
8 75 0.015957247 ubox
9 20 0.020504438 ubox
9 21 0.143522960 ubox
9 39 0.026742074 ubox
9 70 0.030460837 ubox
9 71 0.075230234 ubox
9 76 0.879245337 ubox
10 16 0.013027793 ubox
10 20 0.143510267 ubox
10 26 0.007372969 ubox
10 33 0.009066577 ubox
10 38 0.027183013 ubox
10 68 0.099131274 ubox
10 70 0.150919548 ubox
10 73 0.014972357 ubox
10 75 0.907028127 ubox
11 15 0.015083348 ubox
11 17 0.160819217 ubox
11 19 0.143764647 ubox
11 24 0.055759469 ubox
11 25 0.003512386 ubox
11 27 0.015924327 ubox
11 29 0.003736929 ubox
11 32 0.009942792 ubox
11 34 0.007467890 ubox
11 37 0.027389403 ubox
11 43 0.005346479 ubox
11 65 0.014980967 ubox
11 67 0.101021555 ubox
11 69 0.285143264 ubox
11 72 0.018747937 ubox
11 74 0.911970892 ubox
12 16 0.150512213 ubox
12 22 0.037608602 ubox
12 23 0.050683266 ubox
12 26 0.015619678 ubox
12 31 0.009708986 ubox
12 33 0.006929849 ubox
12 42 0.005320437 ubox
12 64 0.014106772 ubox
12 68 0.278723201 ubox
12 71 0.016167108 ubox
12 73 0.901279168 ubox
13 21 0.040150631 ubox
13 30 0.009662087 ubox
13 70 0.019528409 ubox
13 71 0.055675547 ubox
14 20 0.040022796 ubox
14 21 0.050336506 ubox
14 30 0.003164512 ubox
14 31 0.006644270 ubox
14 70 0.053919345 ubox
14 71 0.912833733 ubox
15 20 0.050399438 ubox
15 30 0.006656765 ubox
15 33 0.027943016 ubox
15 64 0.015142245 ubox
15 68 0.060463459 ubox
15 70 0.916453113 ubox
15 73 0.004812445 ubox
16 24 0.016317546 ubox
16 27 0.011024535 ubox
16 29 0.005865626 ubox
16 32 0.028189369 ubox
16 40 0.017858356 ubox
16 47 0.004070534 ubox
16 63 0.015016146 ubox
16 65 0.311643822 ubox
16 67 0.057288312 ubox
16 69 0.916852101 ubox
16 72 0.006161906 ubox
16 74 0.020407435 ubox
17 23 0.016333283 ubox
17 26 0.011113516 ubox
17 31 0.028071960 ubox
17 39 0.017905952 ubox
17 46 0.003752381 ubox
17 64 0.312521087 ubox
17 68 0.916037195 ubox
17 71 0.006155792 ubox
17 73 0.020374716 ubox
18 22 0.014714987 ubox
18 30 0.015803163 ubox
18 38 0.017700240 ubox
18 70 0.005858597 ubox
19 26 0.005432363 ubox
19 30 0.022893718 ubox
19 46 0.012916555 ubox
19 64 0.707211888 ubox
19 68 0.005873884 ubox
20 25 0.004159841 ubox
20 28 0.010879080 ubox
20 29 0.022339448 ubox
20 35 0.005357048 ubox
20 36 0.014410338 ubox
20 37 0.009774753 ubox
20 44 0.004972156 ubox
20 45 0.031970348 ubox
20 50 0.003572874 ubox
20 62 0.957189119 ubox
20 63 0.164191145 ubox
20 66 0.014056800 ubox
20 67 0.007848831 ubox
21 27 0.012189397 ubox
21 28 0.017794608 ubox
21 29 0.013866910 ubox
21 34 0.005442198 ubox
21 35 0.014389905 ubox
21 36 0.009759258 ubox
21 43 0.004982112 ubox
21 44 0.031995347 ubox
21 49 0.003571045 ubox
21 61 0.965068343 ubox
21 62 0.116410253 ubox
21 65 0.011613961 ubox
21 66 0.006504853 ubox
22 28 0.015249297 ubox
22 41 0.005717175 ubox
22 60 0.971966664 ubox
22 63 0.003489210 ubox
23 27 0.015218579 ubox
23 32 0.010015855 ubox
23 34 0.015364326 ubox
23 40 0.005929946 ubox
23 43 0.032265778 ubox
23 47 0.004310156 ubox
23 59 0.972155798 ubox
23 62 0.003378685 ubox
23 72 0.008402812 ubox
23 74 0.004152404 ubox
24 31 0.010033319 ubox
24 33 0.015105547 ubox
24 39 0.005945140 ubox
24 42 0.032217456 ubox
24 46 0.004275995 ubox
24 58 0.971433491 ubox
24 71 0.008996983 ubox
24 73 0.004084315 ubox
24 76 0.004869347 ubox
25 30 0.009401612 ubox
25 33 0.003466171 ubox
25 38 0.005939476 ubox
25 46 0.003439321 ubox
25 58 0.014285346 ubox
25 70 0.010115677 ubox
25 73 0.017508797 ubox
25 75 0.010511112 ubox
26 32 0.014126773 ubox
26 37 0.005692978 ubox
26 40 0.050106787 ubox
26 43 0.005492035 ubox
26 45 0.011059831 ubox
26 47 0.015824830 ubox
26 56 0.968650197 ubox
26 57 0.064418827 ubox
26 59 0.003493172 ubox
26 69 0.013656712 ubox
26 72 0.027294081 ubox
26 74 0.011168062 ubox
27 31 0.014031821 ubox
27 39 0.050208678 ubox
27 42 0.005302758 ubox
27 46 0.015857940 ubox
27 55 0.963585779 ubox
27 58 0.003490517 ubox
27 68 0.013285185 ubox
27 71 0.027314238 ubox
27 73 0.011140967 ubox
28 38 0.049750839 ubox
28 54 0.163083528 ubox
28 55 0.124371049 ubox
28 70 0.026872975 ubox
29 42 0.059345327 ubox
29 46 0.014445710 ubox
29 51 0.030309830 ubox
29 54 0.958335921 ubox
29 68 0.029145997 ubox
29 73 0.004635910 ubox
30 36 0.035957917 ubox
30 37 0.035516812 ubox
30 41 0.065309514 ubox
30 44 0.145410934 ubox
30 45 0.024582326 ubox
30 48 0.012693956 ubox
30 50 0.030403163 ubox
30 53 0.971985429 ubox
30 66 0.012175834 ubox
30 67 0.030331829 ubox
30 72 0.005001222 ubox
31 35 0.035420095 ubox
31 36 0.035095697 ubox
31 40 0.065995027 ubox
31 43 0.146114569 ubox
31 44 0.022083459 ubox
31 47 0.012939468 ubox
31 49 0.030271204 ubox
31 52 0.972020167 ubox
31 65 0.012291360 ubox
31 66 0.030302585 ubox
31 74 0.017909978 ubox
32 39 0.065991904 ubox
32 42 0.146459507 ubox
32 46 0.013133360 ubox
32 51 0.971974237 ubox
32 64 0.012380696 ubox
32 70 0.005017116 ubox
32 73 0.017931763 ubox
33 40 0.146051441 ubox
33 41 0.043503779 ubox
33 43 0.040446258 ubox
33 45 0.011830071 ubox
33 47 0.092399587 ubox
33 50 0.958373456 ubox
33 63 0.011303596 ubox
33 65 0.030312551 ubox
33 69 0.005024798 ubox
33 72 0.017929575 ubox
34 39 0.149988398 ubox
34 42 0.043452506 ubox
34 46 0.100123095 ubox
34 51 0.003576635 ubox
34 64 0.030281450 ubox
34 68 0.005016123 ubox
34 71 0.017893432 ubox
35 70 0.017799638 ubox
37 64 0.012517520 ubox
38 60 0.040398616 ubox
38 63 0.012190647 ubox
39 47 0.922642114 ubox
39 59 0.042228411 ubox
39 62 0.011799396 ubox
39 72 0.003377212 ubox
39 74 0.008047612 ubox
40 46 0.923084823 ubox
40 58 0.042236835 ubox
40 71 0.003377924 ubox
40 73 0.007882241 ubox
40 76 0.119586349 ubox
41 70 0.003362182 ubox
41 75 0.122844670 ubox
42 50 0.005875438 ubox
42 56 0.044138410 ubox
42 59 0.011678835 ubox
42 69 0.003365924 ubox
42 72 0.007448158 ubox
42 74 0.123272791 ubox
43 55 0.044145545 ubox
43 58 0.011659566 ubox
43 68 0.003356465 ubox
43 71 0.006375067 ubox
43 73 0.121735285 ubox
44 54 0.044462360 ubox
44 55 0.006032171 ubox
44 70 0.005039098 ubox
44 71 0.107283099 ubox
45 51 0.004890178 ubox
45 54 0.011425235 ubox
45 70 0.107330982 ubox
45 73 0.026712278 ubox
46 50 0.007547494 ubox
46 52 0.045375406 ubox
46 53 0.010864391 ubox
46 56 0.016008579 ubox
46 69 0.107256328 ubox
46 72 0.049712926 ubox
46 74 0.185107152 ubox
47 51 0.045262422 ubox
47 55 0.016083265 ubox
47 68 0.106736864 ubox
47 71 0.046274773 ubox
47 73 0.185215715 ubox
48 54 0.016120349 ubox
48 55 0.006989547 ubox
48 70 0.041978547 ubox
48 71 0.014895497 ubox
49 54 0.007237003 ubox
49 55 0.003211638 ubox
49 70 0.011986050 ubox
49 71 0.190037328 ubox
50 54 0.003306195 ubox
50 68 0.017593812 ubox
50 70 0.191433116 ubox
50 73 0.020856197 ubox
51 65 0.102265588 ubox
51 67 0.019800229 ubox
51 69 0.195632082 ubox
51 72 0.022778785 ubox
51 74 0.012397614 ubox
52 64 0.101620039 ubox
52 68 0.191444899 ubox
52 71 0.022782211 ubox
52 73 0.012121602 ubox
53 64 0.015447397 ubox
53 68 0.040939799 ubox
53 70 0.022769649 ubox
54 60 0.004488112 ubox
54 61 0.007021782 ubox
54 62 0.100586141 ubox
54 63 0.019525924 ubox
54 66 0.189396417 ubox
54 67 0.059076829 ubox
54 69 0.021982912 ubox
55 59 0.004595447 ubox
55 60 0.005043433 ubox
55 61 0.099926066 ubox
55 62 0.019481025 ubox
55 65 0.189572601 ubox
55 66 0.058506364 ubox
55 69 0.005485614 ubox
55 72 0.047149411 ubox
56 64 0.186410910 ubox
56 68 0.007670013 ubox
56 71 0.047406138 ubox
57 64 0.039532370 ubox
57 70 0.047489026 ubox
58 63 0.035004643 ubox
58 65 0.059409932 ubox
58 69 0.047549614 ubox
59 64 0.059712342 ubox
59 68 0.047538451 ubox
62 76 0.014210927 ubox
63 73 0.034936606 ubox
63 75 0.016343006 ubox
64 69 0.005630971 ubox
64 72 0.051845113 ubox
64 74 0.016562507 ubox
65 71 0.051889708 ubox
65 73 0.016503550 ubox
66 70 0.051587971 ubox
68 74 0.007005642 ubox
69 73 0.006963193 ubox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
14 71 0.9500000 lbox
15 70 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
