%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGCCUUUUCCGCUAGUCGCCCCGCUCUAUCCCAUAGUCUCGCUGCCCUGAGCCUCCCGUGCCGGCCGGCCGGCCGGGGGAACAGGCGGGCGCUCGGGGGGCGCUCGGGGGGCGGGGGGAGUUCCGGUUCCGGUUCUUUGUGCGGCUGCAUCGGCGGCUCCGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[279.20803833 452.32730103]
[273.32388306 447.94317627]
[269.30563354 441.72183228]
[267.70001221 434.42184448]
[268.75610352 426.95333862]
[272.38793945 420.26464844]
[265.00759888 407.20590210]
[257.62722778 394.14718628]
[242.73208618 394.14694214]
[229.75061035 386.64111328]
[222.21929932 373.55883789]
[222.24757385 358.36358643]
[229.92797852 345.13638306]
[222.54762268 332.07766724]
[215.16726685 319.01892090]
[200.27210999 319.01867676]
[187.29063416 311.51284790]
[179.75932312 298.43060303]
[179.78759766 283.23532104]
[187.46798706 270.00811768]
[180.08763123 256.94940186]
[167.08956909 249.67620850]
[167.03550720 233.85510254]
[159.65515137 220.79637146]
[152.27479553 207.73764038]
[144.89443970 194.67890930]
[137.51408386 181.62019348]
[130.13372803 168.56146240]
[122.75336456 155.50273132]
[115.37300873 142.44401550]
[107.99265289 129.38528442]
[101.14076996 130.43150330]
[94.22978973 129.90119934]
[87.61773682 127.82187653]
[81.64714813 124.30123901]
[76.62732697 119.52166748]
[72.81833649 113.73078156]
[70.41748810 107.22856903]
[55.41811752 107.09077454]
[40.41875076 106.95298767]
[25.41938400 106.81520081]
[9.52537918 112.71578979]
[-0.54451066 99.07637787]
[9.77424812 85.62425995]
[25.55717087 91.81583405]
[40.55653763 91.95362091]
[55.55590439 92.09140778]
[70.55527496 92.22919464]
[72.49832153 80.87162781]
[78.96246338 70.11545563]
[70.64324188 57.63385391]
[62.32401276 45.15224838]
[54.00478363 32.67064285]
[38.76475143 29.44897652]
[30.50567818 16.67234421]
[33.67096329 2.16315508]
[25.35173798 -10.31844997]
[17.95919228 -15.74997044]
[16.99678993 -23.10664940]
[8.90826416 -35.73897934]
[0.81973916 -48.37130737]
[-7.26878643 -61.00363922]
[-14.56030178 -66.57005310]
[-15.38739300 -73.94316864]
[-23.24248695 -86.72195435]
[-31.09757996 -99.50074768]
[-38.95267487 -112.27954102]
[-46.80776978 -125.05833435]
[-61.48006439 -132.38334656]
[-62.20234680 -148.76657104]
[-48.23159409 -157.35437012]
[-33.93972015 -149.31233215]
[-34.02897644 -132.91342163]
[-26.17388344 -120.13463593]
[-18.31879044 -107.35584259]
[-10.46369648 -94.57704926]
[-2.60860229 -81.79826355]
[5.36354351 -69.09216309]
[13.45206928 -56.45983505]
[21.54059410 -43.82750320]
[29.62911987 -31.19517326]
[37.83334351 -18.63767624]
[46.15256882 -6.15607214]
[60.76253891 -3.49443054]
[69.37722778 9.04518127]
[66.48638916 24.35141563]
[74.80561829 36.83302307]
[83.12484741 49.31462479]
[91.44406891 61.79623032]
[106.43837738 61.38291550]
[114.05738831 48.46197510]
[121.67639923 35.54103851]
[129.29541016 22.62009811]
[136.91441345 9.69915867]
[144.53343201 -3.22178102]
[152.15243530 -16.14272118]
[159.77145386 -29.06365967]
[167.39045715 -41.98460007]
[170.22740173 -58.69950485]
[187.07443237 -60.60057831]
[193.56492615 -44.93820953]
[180.31140137 -34.36558914]
[172.69239807 -21.44464874]
[165.07337952 -8.52370930]
[157.45437622 4.39722967]
[149.83535767 17.31816864]
[142.21635437 30.23910904]
[134.59733582 43.16004944]
[126.97832489 56.08098602]
[119.35931396 69.00193024]
[133.32398987 96.57241058]
[121.05137634 122.00492859]
[128.43173218 135.06365967]
[135.81208801 148.12237549]
[143.19244385 161.18110657]
[150.57279968 174.23983765]
[157.95315552 187.29855347]
[165.33351135 200.35728455]
[172.71386719 213.41601562]
[180.09422302 226.47473145]
[193.62019348 234.68197632]
[193.14636230 249.56904602]
[200.52671814 262.62777710]
[215.82011414 262.87094116]
[228.85238647 270.68481445]
[236.17504883 283.88500977]
[235.90905762 298.87786865]
[228.22598267 311.63858032]
[235.60633850 324.69729614]
[242.98669434 337.75604248]
[258.28009033 337.99920654]
[271.31237793 345.81307983]
[278.63504028 359.01327515]
[278.36904907 374.00610352]
[270.68597412 386.76681519]
[278.06631470 399.82556152]
[285.44668579 412.88427734]
[306.38540649 422.84353638]
[305.69610596 445.28283691]
[314.24322510 457.60949707]
[322.79034424 469.93615723]
[331.33746338 482.26284790]
[345.55923462 489.19473267]
[346.45300293 504.06250000]
[355.00012207 516.38916016]
[369.22192383 523.32104492]
[370.11569214 538.18884277]
[378.66281128 550.51550293]
[387.20993042 562.84216309]
[395.75704956 575.16882324]
[404.30416870 587.49548340]
[412.85128784 599.82214355]
[427.90481567 606.32781982]
[429.52853394 622.64636230]
[416.05206299 631.99072266]
[401.33886719 624.74822998]
[400.52462769 608.36926270]
[391.97750854 596.04260254]
[383.43038940 583.71594238]
[374.88327026 571.38928223]
[366.33615112 559.06262207]
[357.78900146 546.73596191]
[344.17855835 540.68572998]
[342.67346191 524.93627930]
[334.12634277 512.60961914]
[320.51589966 506.55941772]
[319.01080322 490.80996704]
[310.46368408 478.48327637]
[301.91653442 466.15661621]
[293.36941528 453.82995605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 137]
[7 136]
[8 135]
[13 130]
[14 129]
[15 128]
[20 123]
[21 122]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[31 112]
[38 48]
[39 47]
[40 46]
[41 45]
[50 89]
[51 88]
[52 87]
[53 86]
[56 83]
[57 82]
[59 81]
[60 80]
[61 79]
[62 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[139 170]
[140 169]
[141 168]
[142 167]
[144 165]
[145 164]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
