%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD300LG)
} def

/sequence { (\
AAAGACCCGUGUGACUGAAGAGGAGCUCACAGUUCCCAGCGUCUGCUCCCACGGUGUCCAGCGCCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 44 0.018995853 ubox
4 43 0.019602048 ubox
4 48 0.003980141 ubox
4 58 0.992068216 ubox
5 12 0.008045983 ubox
5 42 0.019512125 ubox
5 47 0.003942060 ubox
5 55 0.013935040 ubox
5 57 0.994690509 ubox
6 11 0.008229359 ubox
6 41 0.018440962 ubox
6 54 0.011802997 ubox
6 56 0.994908334 ubox
7 53 0.008482464 ubox
7 54 0.995779908 ubox
8 17 0.004960757 ubox
8 41 0.008945146 ubox
8 53 0.996016256 ubox
8 63 0.045562162 ubox
9 15 0.004327960 ubox
9 16 0.003792960 ubox
9 40 0.011754076 ubox
9 46 0.014283086 ubox
9 52 0.996395858 ubox
9 62 0.047194268 ubox
9 64 0.040176344 ubox
10 14 0.003934061 ubox
10 31 0.006523166 ubox
10 38 0.011911577 ubox
10 39 0.010730144 ubox
10 45 0.014283878 ubox
10 51 0.996021133 ubox
10 53 0.005669763 ubox
10 60 0.016869114 ubox
10 61 0.044316055 ubox
10 63 0.040224122 ubox
11 30 0.008087229 ubox
11 37 0.012598039 ubox
11 42 0.005281068 ubox
11 44 0.011728166 ubox
11 46 0.058830275 ubox
11 50 0.992648130 ubox
11 52 0.030291549 ubox
11 59 0.020612174 ubox
11 62 0.040267261 ubox
11 64 0.008672498 ubox
12 29 0.008408767 ubox
12 38 0.006627067 ubox
12 41 0.109327987 ubox
12 45 0.069749843 ubox
12 51 0.032026368 ubox
12 60 0.009773531 ubox
12 61 0.037715918 ubox
12 63 0.008698892 ubox
13 28 0.008509818 ubox
13 34 0.045753982 ubox
13 35 0.016525107 ubox
13 37 0.009278009 ubox
13 40 0.113148937 ubox
13 43 0.143332134 ubox
13 44 0.010821725 ubox
13 48 0.714829241 ubox
13 50 0.034058330 ubox
13 58 0.059968338 ubox
13 59 0.009838336 ubox
13 62 0.008703283 ubox
14 27 0.008472315 ubox
14 33 0.053337634 ubox
14 34 0.011749445 ubox
14 42 0.144492640 ubox
14 47 0.680920808 ubox
14 55 0.015593419 ubox
14 57 0.060321944 ubox
15 22 0.050697689 ubox
15 25 0.008256133 ubox
15 32 0.055610495 ubox
15 39 0.259236751 ubox
15 41 0.140279411 ubox
15 54 0.016718553 ubox
15 56 0.060062622 ubox
15 61 0.008718496 ubox
15 68 0.027677906 ubox
16 21 0.073874793 ubox
16 22 0.003295055 ubox
16 24 0.008230584 ubox
16 31 0.055568385 ubox
16 38 0.263454786 ubox
16 41 0.061157662 ubox
16 45 0.159208207 ubox
16 51 0.007488516 ubox
16 53 0.017521069 ubox
16 60 0.008742927 ubox
16 67 0.027841664 ubox
17 28 0.003368415 ubox
17 30 0.055319944 ubox
17 37 0.264439053 ubox
17 40 0.129151436 ubox
17 43 0.395144581 ubox
17 44 0.040592626 ubox
17 48 0.039934621 ubox
17 50 0.009872883 ubox
17 52 0.017925444 ubox
17 55 0.004553216 ubox
17 59 0.008592527 ubox
17 66 0.027811070 ubox
18 27 0.003299536 ubox
18 42 0.393603244 ubox
18 47 0.038280479 ubox
19 27 0.011265762 ubox
19 44 0.503041316 ubox
19 47 0.016147015 ubox
20 26 0.011651310 ubox
20 28 0.053648644 ubox
20 43 0.507583831 ubox
20 46 0.024364736 ubox
20 48 0.008431278 ubox
21 27 0.053714839 ubox
21 42 0.505644204 ubox
21 44 0.044778172 ubox
21 47 0.007767187 ubox
22 26 0.052545397 ubox
22 35 0.003598231 ubox
22 36 0.774171577 ubox
22 37 0.073784063 ubox
22 43 0.044824492 ubox
22 44 0.014055401 ubox
22 46 0.006126082 ubox
22 49 0.620528053 ubox
22 50 0.006178268 ubox
23 35 0.777342753 ubox
23 36 0.052671592 ubox
23 42 0.043644465 ubox
23 43 0.015185527 ubox
23 48 0.622219002 ubox
23 49 0.005073449 ubox
24 33 0.003486855 ubox
24 34 0.778640011 ubox
24 42 0.014822746 ubox
24 44 0.005259459 ubox
24 47 0.622172828 ubox
25 33 0.778686935 ubox
25 40 0.049380518 ubox
25 43 0.005105814 ubox
25 46 0.622273698 ubox
26 32 0.778875825 ubox
26 39 0.049395583 ubox
26 45 0.622023361 ubox
27 31 0.701680374 ubox
27 38 0.047032546 ubox
28 45 0.004776271 ubox
29 42 0.563995361 ubox
29 44 0.009724124 ubox
30 41 0.566575466 ubox
30 45 0.010818657 ubox
31 44 0.022647474 ubox
32 40 0.578536532 ubox
32 43 0.022740230 ubox
33 39 0.573246529 ubox
33 41 0.003821288 ubox
34 38 0.436996289 ubox
37 45 0.089326082 ubox
37 56 0.007947557 ubox
38 44 0.090016050 ubox
38 47 0.233329843 ubox
38 55 0.008071520 ubox
39 43 0.088133093 ubox
39 46 0.289172886 ubox
39 64 0.009314089 ubox
40 45 0.289669598 ubox
40 53 0.008181342 ubox
40 63 0.009356261 ubox
41 52 0.008285738 ubox
41 62 0.009354913 ubox
42 51 0.008131687 ubox
42 61 0.005093526 ubox
42 69 0.008456975 ubox
43 61 0.007783698 ubox
43 68 0.009968731 ubox
44 60 0.007795837 ubox
44 67 0.009991808 ubox
45 57 0.005754590 ubox
45 59 0.007178393 ubox
45 66 0.010000632 ubox
46 56 0.007544223 ubox
47 69 0.003953101 ubox
48 54 0.009181015 ubox
48 68 0.004781182 ubox
49 53 0.009127951 ubox
53 65 0.060584434 ubox
53 66 0.005429575 ubox
54 64 0.062267665 ubox
54 65 0.004340442 ubox
55 63 0.062876147 ubox
55 67 0.003181959 ubox
56 62 0.063443568 ubox
56 64 0.006623801 ubox
56 66 0.003550771 ubox
57 61 0.059354173 ubox
57 63 0.006477631 ubox
57 69 0.003184771 ubox
58 68 0.004867150 ubox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
showpage
end
%%EOF
