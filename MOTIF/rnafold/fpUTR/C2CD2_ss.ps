%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCGCCCCUGUUCCGCAGGUGUGCGGGGCUUGCGCCCAGCCCGGGCCGCGGCCGCCGCGCGUUUCCUCCCCGCUUGCCCGCCCAGAGGCCCCCGGCCACGCUCCUCGCCGGGCUCCGACCCCGCCGCGCCCCCUCCACGCCCCCAGCGCGCUGUGGCCGCAGCCAGCGCGUGUCCUGAGUCCGCCGUUCCGGCCCGGGGCUGCCGGGGAAGUUGGGGCGAGGCGGGCCGGGGAUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[125.81591797 232.71638489]
[110.02351379 232.10357666]
[99.35139465 220.44674683]
[100.13114929 204.66171265]
[111.90014648 194.11343384]
[112.48178101 179.12471008]
[113.06340790 164.13600159]
[113.64504242 149.14727783]
[106.33617401 147.46487427]
[84.40958405 142.41764832]
[78.37947845 156.15219116]
[72.34937286 169.88673401]
[66.31926727 183.62129211]
[60.28916550 197.35583496]
[59.45797348 214.28939819]
[42.95608902 218.17835999]
[34.65092468 203.39794922]
[46.55461502 191.32572937]
[52.58472061 177.59118652]
[58.61482620 163.85662842]
[64.64492798 150.12208557]
[70.67503357 136.38754272]
[65.28672791 131.17062378]
[49.12179947 115.51990509]
[35.58929062 121.99069214]
[22.05677795 128.46148682]
[8.52426720 134.93228149]
[-5.00824451 141.40306091]
[-18.54075623 147.87385559]
[-32.03115463 154.43199158]
[-45.47888184 161.07719421]
[-58.92660904 167.72238159]
[-72.37433624 174.36758423]
[-78.66477966 180.96063232]
[-86.03914642 181.01049805]
[-99.57165527 187.48129272]
[-113.10416412 193.95208740]
[-126.59456635 200.51022339]
[-140.04229736 207.15541077]
[-153.49002075 213.80061340]
[-159.97584534 228.47418213]
[-175.52795410 232.41265869]
[-188.21607971 222.59478760]
[-188.30700684 206.55198669]
[-175.73095703 196.59092712]
[-160.13522339 200.35289001]
[-146.68748474 193.70768738]
[-133.23976135 187.06248474]
[-128.64543152 181.29397583]
[-119.57495880 180.41957092]
[-106.04244232 173.94877625]
[-92.50993347 167.47799683]
[-79.01953125 160.91986084]
[-65.57180786 154.27465820]
[-52.12408066 147.62945557]
[-38.67635345 140.98426819]
[-34.08201599 135.21575928]
[-25.01154709 134.34133911]
[-11.47903538 127.87055206]
[2.05347586 121.39976501]
[15.58598709 114.92897034]
[29.11849785 108.45818329]
[42.65100861 101.98738861]
[48.58772278 85.52530670]
[58.74192047 72.76120758]
[71.47471619 64.59532928]
[85.02905273 61.30097580]
[97.74832916 62.54610062]
[108.26872253 67.48580170]
[115.66338348 74.91129303]
[126.57398987 64.61766815]
[137.48458862 54.32403946]
[148.39520264 44.03041840]
[159.30580139 33.73679352]
[170.21640015 23.44316673]
[171.70167542 18.48347473]
[174.63832092 14.93288612]
[178.25216675 13.10731697]
[181.75537109 12.97211552]
[193.05691528 3.10929513]
[204.35844421 -6.75352526]
[215.65998840 -16.61634636]
[226.96153259 -26.47916603]
[238.26306152 -36.34198761]
[249.56460571 -46.20480728]
[247.02304077 -57.12841415]
[250.68652344 -68.65796661]
[260.37384033 -77.29877472]
[253.46910095 -90.61511230]
[246.56439209 -103.93144989]
[242.20262146 -106.72062683]
[239.59410095 -110.51880646]
[238.83023071 -114.49487305]
[239.66146851 -117.90071106]
[233.27828979 -131.47477722]
[226.89511108 -145.04882812]
[220.51193237 -158.62287903]
[214.12875366 -172.19694519]
[207.74557495 -185.77099609]
[192.43435669 -186.98017883]
[179.78814697 -195.69619751]
[173.20869446 -209.57447815]
[174.46586609 -224.88182068]
[183.22148132 -237.50065613]
[197.12031555 -244.03656006]
[212.42364502 -242.73141479]
[225.01496887 -233.93629456]
[231.50727844 -220.01704407]
[230.15417480 -204.71786499]
[221.31962585 -192.15417480]
[227.70280457 -178.58012390]
[234.08598328 -165.00605774]
[240.46916199 -151.43200684]
[246.85235596 -137.85795593]
[253.23553467 -124.28389740]
[259.88073730 -110.83616638]
[266.78543091 -97.51982880]
[273.69015503 -84.20349121]
[287.53906250 -78.44084930]
[301.85208130 -82.92831421]
[309.08572388 -88.47018433]
[316.37924194 -87.37998199]
[330.74908447 -91.68202972]
[345.11892700 -95.98407745]
[359.48876953 -100.28612518]
[373.85861206 -104.58817291]
[378.64077759 -109.10337830]
[384.15686035 -110.35433197]
[388.65582275 -108.81050873]
[403.13208008 -112.73960876]
[411.02276611 -126.16997528]
[425.75973511 -129.94841003]
[438.51489258 -122.34308624]
[452.99118042 -126.27217865]
[467.46743774 -130.20127869]
[481.94369507 -134.13037109]
[489.83438110 -147.56072998]
[504.57135010 -151.33917236]
[517.32653809 -143.73384094]
[531.80279541 -147.66293335]
[539.24591064 -152.92015076]
[546.49163818 -151.54795837]
[561.01745605 -155.28958130]
[575.54333496 -159.03118896]
[590.06915283 -162.77281189]
[604.59503174 -166.51443481]
[618.58825684 -171.91709900]
[631.85968018 -178.90774536]
[645.13110352 -185.89840698]
[658.31109619 -193.06004333]
[671.39733887 -200.39147949]
[684.48358154 -207.72291565]
[697.56982422 -215.05433655]
[710.65606689 -222.38577271]
[715.04400635 -237.33181763]
[728.41973877 -244.58052063]
[742.64147949 -240.30523682]
[755.72772217 -247.63667297]
[768.81396484 -254.96810913]
[781.90020752 -262.29953003]
[789.81311035 -276.66333008]
[806.21215820 -276.72189331]
[814.22741699 -262.41500854]
[805.61352539 -248.46034241]
[789.23168945 -249.21328735]
[776.14538574 -241.88185120]
[763.05914307 -234.55041504]
[749.97290039 -227.21897888]
[746.19201660 -212.85791016]
[733.02508545 -205.23637390]
[717.98754883 -209.29951477]
[704.90124512 -201.96809387]
[691.81500244 -194.63665771]
[678.72875977 -187.30522156]
[665.64251709 -179.97378540]
[663.51159668 -175.72137451]
[658.69757080 -172.75199890]
[652.12176514 -172.62696838]
[638.85034180 -165.63632202]
[625.57891846 -158.64567566]
[626.54583740 -151.20825195]
[640.09509277 -157.64401245]
[650.40277100 -146.74668884]
[643.22399902 -133.57604980]
[628.47973633 -136.33343506]
[629.44665527 -128.89602661]
[644.06439209 -125.53121948]
[658.68212891 -122.16639709]
[673.29980469 -118.80158234]
[690.09161377 -121.14077759]
[696.98785400 -105.65276337]
[684.01416016 -94.73854828]
[669.93499756 -104.18385315]
[655.31726074 -107.54866791]
[640.69958496 -110.91349030]
[626.08184814 -114.27830505]
[612.77618408 -125.59478760]
[606.91607666 -139.29733276]
[608.33666992 -151.98858643]
[593.81079102 -148.24696350]
[579.28491211 -144.50534058]
[564.75909424 -140.76373291]
[550.23321533 -137.02210999]
[535.73187256 -133.18667603]
[521.25561523 -129.25758362]
[514.09594727 -116.24703217]
[499.47091675 -112.05614471]
[485.87280273 -119.65410614]
[471.39651489 -115.72500610]
[456.92025757 -111.79591370]
[442.44400024 -107.86682129]
[435.28430176 -94.85626984]
[420.65930176 -90.66539001]
[407.06118774 -98.26334381]
[392.58489990 -94.33424377]
[378.16064453 -90.21833038]
[363.79080200 -85.91628265]
[349.42095947 -81.61423492]
[335.05111694 -77.31218719]
[320.68127441 -73.01013947]
[306.33953857 -68.61528778]
[292.02651978 -64.12783051]
[284.90499878 -36.50609589]
[259.42742920 -34.90327072]
[248.12588501 -25.04044914]
[236.82434082 -15.17762852]
[225.52281189 -5.31480742]
[214.22126770 4.54801321]
[202.91972351 14.41083336]
[191.61819458 24.27365494]
[180.51002502 34.35377121]
[169.59942627 44.64739609]
[158.68882751 54.94102097]
[147.77821350 65.23464203]
[136.86761475 75.52826691]
[125.95700836 85.82189178]
[141.85559082 111.77404785]
[128.63375854 149.72891235]
[128.05212402 164.71762085]
[127.47049713 179.70634460]
[126.88887024 194.69506836]
[137.80506897 206.12362671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 241]
[6 240]
[7 239]
[8 238]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 56]
[31 55]
[32 54]
[33 53]
[35 52]
[36 51]
[37 50]
[38 48]
[39 47]
[40 46]
[70 236]
[71 235]
[72 234]
[73 233]
[74 232]
[75 231]
[79 230]
[80 229]
[81 228]
[82 227]
[83 226]
[84 225]
[85 224]
[88 118]
[89 117]
[90 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[119 222]
[120 221]
[122 220]
[123 219]
[124 218]
[125 217]
[126 216]
[129 215]
[130 214]
[133 211]
[134 210]
[135 209]
[136 208]
[139 205]
[140 204]
[142 203]
[143 202]
[144 201]
[145 200]
[146 199]
[147 180]
[148 179]
[149 178]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[157 168]
[158 167]
[159 166]
[160 165]
[186 196]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
