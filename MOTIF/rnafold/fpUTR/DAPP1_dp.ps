%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DAPP1)
} def

/sequence { (\
GCAGGCUGCUGUCUCACAGAGCGAGAAGGUGUCAGGAGCAGCCCAGUUGUGUCUCUCUCUCUACCUCUGUGAAGGGCGCGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.171893715 ubox
1 12 0.123416312 ubox
1 42 0.004256716 ubox
1 47 0.028563353 ubox
1 77 0.039100916 ubox
1 79 0.168281497 ubox
2 8 0.172162617 ubox
2 11 0.141808293 ubox
2 41 0.004268867 ubox
2 46 0.034795346 ubox
2 76 0.038951273 ubox
2 78 0.167389052 ubox
3 7 0.139579316 ubox
3 10 0.145380803 ubox
3 14 0.042559195 ubox
4 9 0.145759832 ubox
4 10 0.005160688 ubox
4 13 0.067573771 ubox
4 43 0.120905842 ubox
4 44 0.014151819 ubox
5 9 0.005795232 ubox
5 12 0.068318348 ubox
5 39 0.004409481 ubox
5 42 0.121541288 ubox
5 43 0.010635741 ubox
5 77 0.143796840 ubox
5 79 0.774810959 ubox
6 11 0.068431367 ubox
6 38 0.004411375 ubox
6 41 0.121900704 ubox
6 74 0.012027529 ubox
6 75 0.003598447 ubox
6 76 0.144278240 ubox
6 78 0.758785371 ubox
7 37 0.004397922 ubox
7 40 0.121871840 ubox
7 73 0.011978383 ubox
7 75 0.130829580 ubox
7 78 0.215671557 ubox
7 80 0.406733995 ubox
8 39 0.121898740 ubox
8 42 0.005968495 ubox
8 77 0.788771585 ubox
8 79 0.501825131 ubox
9 35 0.004667984 ubox
9 38 0.121861439 ubox
9 41 0.006130337 ubox
9 74 0.121183547 ubox
9 75 0.161449214 ubox
9 76 0.788627883 ubox
9 78 0.493782094 ubox
10 34 0.005529667 ubox
10 37 0.120468885 ubox
10 40 0.006137913 ubox
10 73 0.121069479 ubox
10 74 0.160902743 ubox
10 75 0.758011114 ubox
10 78 0.161171539 ubox
10 80 0.013945063 ubox
11 33 0.006284423 ubox
11 39 0.006143777 ubox
11 77 0.466635273 ubox
11 79 0.016633449 ubox
12 26 0.011941041 ubox
12 36 0.103402909 ubox
12 37 0.008663481 ubox
12 72 0.024944520 ubox
12 75 0.318229216 ubox
12 76 0.459637457 ubox
12 78 0.015526751 ubox
13 21 0.003449420 ubox
13 25 0.012813999 ubox
13 35 0.114700507 ubox
13 36 0.011263508 ubox
13 38 0.006384346 ubox
13 71 0.020654260 ubox
13 74 0.433312884 ubox
13 75 0.447590323 ubox
13 76 0.014800141 ubox
13 80 0.004651234 ubox
14 20 0.003519287 ubox
14 24 0.012831478 ubox
14 34 0.112160960 ubox
14 35 0.010480792 ubox
14 36 0.004715444 ubox
14 37 0.007628044 ubox
14 72 0.869127766 ubox
14 73 0.312051988 ubox
14 74 0.267075212 ubox
14 75 0.010083556 ubox
15 19 0.003506257 ubox
15 23 0.012832042 ubox
15 31 0.051074848 ubox
15 35 0.005759707 ubox
15 36 0.008279804 ubox
15 71 0.991405539 ubox
15 74 0.006867930 ubox
16 30 0.051257464 ubox
16 32 0.104877901 ubox
16 70 0.992249404 ubox
17 29 0.051194665 ubox
17 31 0.106332089 ubox
17 69 0.992486293 ubox
18 30 0.093891712 ubox
18 68 0.992264181 ubox
19 33 0.017422583 ubox
19 67 0.992488905 ubox
20 32 0.016160841 ubox
20 62 0.008198624 ubox
20 66 0.992229941 ubox
21 30 0.052799302 ubox
21 32 0.004591780 ubox
21 61 0.013298769 ubox
21 65 0.990686438 ubox
22 29 0.062887299 ubox
22 31 0.006832346 ubox
23 30 0.005438772 ubox
23 33 0.004186116 ubox
23 57 0.007041290 ubox
23 59 0.046824821 ubox
23 61 0.866271007 ubox
24 32 0.004149117 ubox
24 56 0.007064678 ubox
24 58 0.046968397 ubox
24 60 0.866788652 ubox
24 62 0.476471720 ubox
25 33 0.003335411 ubox
25 55 0.007080224 ubox
25 57 0.047078271 ubox
25 59 0.866840637 ubox
25 61 0.479892602 ubox
26 32 0.003352441 ubox
26 54 0.005562120 ubox
26 56 0.039117115 ubox
26 58 0.815595818 ubox
26 60 0.446718706 ubox
27 54 0.022246803 ubox
27 56 0.269502224 ubox
27 58 0.298875182 ubox
27 60 0.159099775 ubox
27 62 0.009277512 ubox
27 66 0.007646497 ubox
28 43 0.011681693 ubox
28 44 0.005587852 ubox
28 53 0.022532452 ubox
28 54 0.035160174 ubox
28 55 0.273817153 ubox
28 56 0.707156386 ubox
28 57 0.395703660 ubox
28 58 0.381184112 ubox
28 59 0.224380310 ubox
28 60 0.036847679 ubox
28 61 0.009595417 ubox
28 65 0.012371318 ubox
29 42 0.011776323 ubox
29 43 0.005586738 ubox
29 52 0.019919144 ubox
29 53 0.049938494 ubox
29 54 0.154819840 ubox
29 55 0.736006163 ubox
29 56 0.318957498 ubox
29 57 0.403888939 ubox
29 58 0.194216965 ubox
29 59 0.060788459 ubox
29 60 0.007475935 ubox
29 64 0.013517298 ubox
30 40 0.010256097 ubox
30 41 0.008056795 ubox
30 49 0.003348643 ubox
30 51 0.014678812 ubox
30 63 0.013469267 ubox
31 39 0.012172846 ubox
31 42 0.005032843 ubox
31 48 0.003703967 ubox
31 50 0.011687473 ubox
31 52 0.050556490 ubox
31 62 0.012659226 ubox
32 38 0.011925515 ubox
32 41 0.004998994 ubox
32 51 0.012823886 ubox
33 49 0.039742989 ubox
33 51 0.214407365 ubox
34 48 0.039082139 ubox
34 50 0.202253093 ubox
34 54 0.838909996 ubox
34 56 0.117518799 ubox
34 58 0.026811431 ubox
34 60 0.005454745 ubox
35 43 0.020122202 ubox
35 44 0.041095719 ubox
35 47 0.018553662 ubox
35 48 0.003689042 ubox
35 53 0.863148260 ubox
35 54 0.341661852 ubox
35 55 0.125040934 ubox
35 56 0.135271574 ubox
35 57 0.034854945 ubox
35 58 0.021527755 ubox
35 59 0.006484489 ubox
35 60 0.005578451 ubox
36 42 0.020195159 ubox
36 43 0.041151711 ubox
36 48 0.159702017 ubox
36 52 0.637513840 ubox
36 53 0.367870264 ubox
36 54 0.052495510 ubox
36 55 0.149192846 ubox
36 56 0.004331759 ubox
36 57 0.029058856 ubox
36 59 0.006725119 ubox
37 47 0.146065966 ubox
37 48 0.113048022 ubox
37 52 0.344239547 ubox
37 54 0.149504765 ubox
37 56 0.029128173 ubox
37 58 0.006736603 ubox
38 47 0.135076717 ubox
38 50 0.945208236 ubox
38 52 0.028916967 ubox
38 53 0.141099243 ubox
38 55 0.028032747 ubox
38 57 0.006547483 ubox
39 46 0.165537375 ubox
39 49 0.962191066 ubox
39 51 0.087882595 ubox
40 48 0.961249758 ubox
40 50 0.081915959 ubox
40 54 0.019449420 ubox
40 56 0.005049800 ubox
41 47 0.959396522 ubox
41 50 0.087738188 ubox
41 52 0.019774554 ubox
41 53 0.019408629 ubox
41 55 0.005048672 ubox
42 46 0.953927750 ubox
42 49 0.094190472 ubox
42 51 0.022897967 ubox
44 51 0.019048611 ubox
45 50 0.018455460 ubox
45 54 0.008934539 ubox
45 56 0.006379397 ubox
46 53 0.009525286 ubox
46 55 0.006864868 ubox
47 81 0.091611828 ubox
48 80 0.112416701 ubox
49 79 0.121986589 ubox
50 78 0.121959426 ubox
51 77 0.122032976 ubox
52 76 0.115981902 ubox
53 74 0.003819358 ubox
53 75 0.115650227 ubox
53 76 0.036906106 ubox
54 72 0.005452828 ubox
54 73 0.004353351 ubox
54 74 0.103076435 ubox
54 75 0.037076616 ubox
55 71 0.007164428 ubox
55 74 0.059668316 ubox
55 75 0.004596031 ubox
55 76 0.006019991 ubox
56 72 0.100414417 ubox
56 73 0.056426034 ubox
56 74 0.004304661 ubox
56 75 0.006978697 ubox
57 71 0.103001275 ubox
57 74 0.010799629 ubox
57 76 0.005964812 ubox
58 72 0.053606626 ubox
58 73 0.010922087 ubox
58 75 0.006866473 ubox
59 71 0.054060651 ubox
59 74 0.010329566 ubox
60 72 0.029226033 ubox
60 73 0.010541093 ubox
61 71 0.029378844 ubox
62 69 0.012807458 ubox
62 71 0.013945522 ubox
63 68 0.011674401 ubox
63 70 0.031339508 ubox
64 69 0.031501688 ubox
67 74 0.003192353 ubox
68 73 0.003244293 ubox
5 79 0.9500000 lbox
6 78 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 65 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
showpage
end
%%EOF
