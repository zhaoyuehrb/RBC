%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM258)
} def

/sequence { (\
CCUGCCGACGUGUUCUUCCGGUGGCGGAGCGGCGGAUUAGCCUUCGCGGGGCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.017298587 ubox
1 35 0.119408198 ubox
1 49 0.012760685 ubox
1 50 0.451599001 ubox
1 51 0.050776371 ubox
2 23 0.004053938 ubox
2 24 0.006391857 ubox
2 26 0.017172718 ubox
2 27 0.086318944 ubox
2 34 0.118230123 ubox
2 35 0.596396346 ubox
2 48 0.012536407 ubox
2 49 0.453163408 ubox
2 50 0.050387816 ubox
2 51 0.021226094 ubox
3 23 0.011168303 ubox
3 26 0.086945761 ubox
3 34 0.598215153 ubox
3 39 0.004976391 ubox
3 48 0.452889710 ubox
3 49 0.041229245 ubox
3 50 0.019368450 ubox
3 53 0.588985020 ubox
4 22 0.018925685 ubox
4 25 0.089482769 ubox
4 33 0.611207505 ubox
4 38 0.004595998 ubox
4 47 0.453083267 ubox
4 52 0.636484302 ubox
5 21 0.019350976 ubox
5 24 0.089518248 ubox
5 32 0.611235566 ubox
5 35 0.050166712 ubox
5 46 0.346724709 ubox
5 49 0.053633493 ubox
5 50 0.026511098 ubox
5 51 0.636026158 ubox
6 12 0.011110033 ubox
6 20 0.019375473 ubox
6 23 0.089531751 ubox
6 31 0.610844186 ubox
6 34 0.050546500 ubox
6 46 0.294108399 ubox
6 48 0.055917550 ubox
6 49 0.035201719 ubox
6 50 0.634542314 ubox
7 11 0.007466224 ubox
7 14 0.008176569 ubox
7 15 0.051070884 ubox
7 18 0.006466347 ubox
7 19 0.018600798 ubox
7 22 0.060346678 ubox
7 30 0.599857142 ubox
7 33 0.048944922 ubox
7 38 0.005735770 ubox
7 44 0.130031902 ubox
7 45 0.413887545 ubox
7 47 0.062023609 ubox
8 13 0.012924553 ubox
8 14 0.049711903 ubox
8 16 0.005403431 ubox
8 17 0.008382834 ubox
8 22 0.019128964 ubox
8 37 0.006012391 ubox
8 43 0.136780166 ubox
8 44 0.400449479 ubox
9 20 0.087157893 ubox
9 21 0.022689329 ubox
9 26 0.075344646 ubox
9 31 0.056559004 ubox
9 34 0.022572989 ubox
9 46 0.100783030 ubox
9 48 0.624608585 ubox
10 19 0.086960855 ubox
10 25 0.075943936 ubox
10 30 0.069173761 ubox
10 33 0.023238234 ubox
10 41 0.101978258 ubox
10 45 0.102210686 ubox
10 47 0.625940307 ubox
11 20 0.013159358 ubox
11 24 0.074448256 ubox
11 26 0.143633490 ubox
11 29 0.067844413 ubox
11 31 0.035110310 ubox
11 32 0.018776535 ubox
11 34 0.016620196 ubox
11 39 0.011042067 ubox
11 40 0.101090619 ubox
11 46 0.623768547 ubox
11 53 0.010366479 ubox
12 19 0.015244901 ubox
12 25 0.146385687 ubox
12 30 0.204262355 ubox
12 33 0.032135010 ubox
12 37 0.011695926 ubox
12 38 0.010680968 ubox
12 41 0.482131994 ubox
12 45 0.550476558 ubox
12 47 0.004768134 ubox
12 52 0.011574286 ubox
13 21 0.009530270 ubox
13 24 0.140604216 ubox
13 28 0.006301569 ubox
13 29 0.212532258 ubox
13 32 0.032153078 ubox
13 36 0.012708131 ubox
13 40 0.492302821 ubox
13 46 0.004658627 ubox
13 51 0.011548961 ubox
14 20 0.008768882 ubox
14 21 0.048729977 ubox
14 23 0.118084798 ubox
14 24 0.037046377 ubox
14 27 0.006076184 ubox
14 28 0.202945061 ubox
14 31 0.031906294 ubox
14 32 0.009770179 ubox
14 35 0.012603114 ubox
14 36 0.022549510 ubox
14 39 0.484427434 ubox
14 50 0.011481176 ubox
15 20 0.064120812 ubox
15 21 0.087469113 ubox
15 23 0.052885790 ubox
15 24 0.013627807 ubox
15 26 0.006274081 ubox
15 27 0.201831652 ubox
15 29 0.218021910 ubox
15 31 0.022266050 ubox
15 32 0.003301903 ubox
15 34 0.012464639 ubox
15 35 0.022850726 ubox
15 40 0.171934518 ubox
15 49 0.011608326 ubox
16 20 0.078948237 ubox
16 23 0.015300402 ubox
16 26 0.197206639 ubox
16 28 0.155853663 ubox
16 29 0.656067868 ubox
16 31 0.003162522 ubox
16 34 0.021964168 ubox
16 36 0.007462396 ubox
16 39 0.163409489 ubox
16 40 0.018670457 ubox
16 48 0.010814818 ubox
17 24 0.014809033 ubox
17 26 0.004140182 ubox
17 27 0.024892099 ubox
17 28 0.763003943 ubox
17 36 0.545619422 ubox
17 39 0.006916867 ubox
18 23 0.016102580 ubox
18 24 0.199529667 ubox
18 26 0.019941488 ubox
18 27 0.788040027 ubox
18 32 0.019468592 ubox
18 35 0.548520773 ubox
18 49 0.005035461 ubox
19 23 0.198266202 ubox
19 26 0.788415814 ubox
19 31 0.019482866 ubox
19 34 0.548370496 ubox
19 48 0.005045551 ubox
20 25 0.785081547 ubox
20 30 0.018775512 ubox
20 33 0.527978190 ubox
20 45 0.003172640 ubox
21 30 0.015646263 ubox
21 33 0.148279891 ubox
22 29 0.016336534 ubox
22 31 0.501728052 ubox
22 32 0.208860227 ubox
23 30 0.499359585 ubox
23 33 0.004977005 ubox
23 42 0.004218044 ubox
24 30 0.223516442 ubox
24 33 0.008005731 ubox
24 41 0.004220396 ubox
24 47 0.024123738 ubox
24 52 0.005808020 ubox
25 29 0.229932898 ubox
25 31 0.006241138 ubox
25 32 0.008645220 ubox
25 40 0.004218272 ubox
25 46 0.024410758 ubox
25 48 0.006254675 ubox
25 51 0.005959741 ubox
26 30 0.006079909 ubox
26 45 0.024213404 ubox
26 47 0.007512289 ubox
27 44 0.023804914 ubox
27 45 0.016512511 ubox
28 37 0.003643244 ubox
28 43 0.022415049 ubox
28 44 0.023216750 ubox
29 41 0.007591898 ubox
29 42 0.011315044 ubox
29 43 0.038447413 ubox
29 47 0.082117739 ubox
29 52 0.044515380 ubox
30 40 0.007942728 ubox
30 46 0.082474391 ubox
30 48 0.010907743 ubox
30 51 0.044455560 ubox
31 42 0.554432985 ubox
31 43 0.004780690 ubox
31 45 0.079232258 ubox
31 47 0.007926415 ubox
32 41 0.555680447 ubox
32 42 0.003816655 ubox
32 44 0.075592072 ubox
32 47 0.067449343 ubox
33 40 0.555570276 ubox
33 46 0.068078903 ubox
33 48 0.005808955 ubox
34 42 0.082924880 ubox
34 43 0.009008265 ubox
34 45 0.068475784 ubox
34 47 0.005866827 ubox
35 41 0.082828586 ubox
35 42 0.010059787 ubox
35 44 0.068003693 ubox
35 45 0.013922853 ubox
36 43 0.063673013 ubox
36 44 0.014086095 ubox
37 54 0.116414913 ubox
37 55 0.121917343 ubox
38 53 0.132000933 ubox
38 54 0.149644549 ubox
40 47 0.013129417 ubox
40 52 0.612228900 ubox
41 46 0.013119115 ubox
41 49 0.013459329 ubox
41 50 0.035943309 ubox
41 51 0.612482048 ubox
42 48 0.013625557 ubox
42 49 0.041473695 ubox
42 50 0.612102396 ubox
42 51 0.003330616 ubox
43 48 0.042247725 ubox
43 49 0.600891408 ubox
43 50 0.004286771 ubox
44 48 0.442223661 ubox
44 49 0.020556051 ubox
44 51 0.005468329 ubox
44 53 0.003279068 ubox
45 49 0.009013977 ubox
45 50 0.008537698 ubox
46 52 0.013779547 ubox
47 51 0.013693850 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
