%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPIHBP1)
} def

/sequence { (\
CCUUCAUCCCACUUACCGCAGCUCCAGAGCCCUGCGGGAGGACUCAGAGUCAGGGACACAGCAGCGUCCGGCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.096108735 ubox
1 54 0.029421144 ubox
1 55 0.027927550 ubox
1 71 0.140256697 ubox
2 40 0.097512464 ubox
2 41 0.053424196 ubox
2 47 0.067004809 ubox
2 49 0.045746544 ubox
2 53 0.047304921 ubox
2 54 0.028131974 ubox
2 61 0.149424228 ubox
2 64 0.011780967 ubox
2 70 0.142032231 ubox
2 71 0.025150140 ubox
2 75 0.188935388 ubox
3 39 0.095386316 ubox
3 40 0.054065972 ubox
3 42 0.017289884 ubox
3 46 0.065098612 ubox
3 47 0.007886967 ubox
3 48 0.045617525 ubox
3 49 0.046493300 ubox
3 52 0.044991385 ubox
3 53 0.028019624 ubox
3 60 0.146918854 ubox
3 61 0.020379795 ubox
3 63 0.011934581 ubox
3 70 0.023750757 ubox
3 71 0.005451717 ubox
3 74 0.181796796 ubox
3 75 0.213295586 ubox
4 38 0.092705848 ubox
4 39 0.056465101 ubox
4 41 0.018837882 ubox
4 42 0.022499474 ubox
4 46 0.008571099 ubox
4 47 0.042111032 ubox
4 48 0.089789955 ubox
4 52 0.023934949 ubox
4 56 0.003571635 ubox
4 60 0.023908626 ubox
4 70 0.005733520 ubox
4 71 0.031219848 ubox
4 73 0.166622014 ubox
4 74 0.349713433 ubox
5 37 0.030594300 ubox
5 38 0.058668046 ubox
5 40 0.021350601 ubox
5 41 0.023897231 ubox
5 47 0.093616584 ubox
5 53 0.012860061 ubox
5 70 0.041782975 ubox
5 73 0.364939055 ubox
6 50 0.006666103 ubox
7 39 0.034294823 ubox
7 42 0.114410999 ubox
7 48 0.048430036 ubox
7 49 0.005147669 ubox
7 55 0.005400363 ubox
7 56 0.322381756 ubox
7 71 0.175946142 ubox
7 74 0.647798683 ubox
8 38 0.036057377 ubox
8 40 0.005117781 ubox
8 41 0.121804952 ubox
8 47 0.050004733 ubox
8 53 0.009292330 ubox
8 54 0.009844716 ubox
8 55 0.347734828 ubox
8 70 0.176775015 ubox
8 71 0.253917767 ubox
8 73 0.692526282 ubox
9 37 0.033135002 ubox
9 38 0.006513983 ubox
9 40 0.118044923 ubox
9 41 0.079125480 ubox
9 53 0.013557396 ubox
9 54 0.347954301 ubox
9 55 0.009146553 ubox
9 70 0.253951010 ubox
9 71 0.757057246 ubox
10 36 0.029882813 ubox
10 37 0.004728426 ubox
10 40 0.079946430 ubox
10 53 0.347917726 ubox
10 54 0.009239214 ubox
10 70 0.756994455 ubox
11 50 0.027711973 ubox
12 21 0.003991098 ubox
12 37 0.014958144 ubox
12 38 0.039630224 ubox
12 40 0.874466222 ubox
12 41 0.242431487 ubox
12 49 0.029506162 ubox
12 53 0.018382985 ubox
12 71 0.015516306 ubox
12 75 0.046272139 ubox
13 20 0.003933226 ubox
13 36 0.007019941 ubox
13 37 0.009940243 ubox
13 38 0.016807857 ubox
13 39 0.871833556 ubox
13 40 0.281630603 ubox
13 41 0.009049055 ubox
13 42 0.005692976 ubox
13 48 0.029168573 ubox
13 52 0.017196795 ubox
13 53 0.003202427 ubox
13 70 0.014503227 ubox
13 74 0.046879204 ubox
14 38 0.786614085 ubox
14 39 0.170139770 ubox
14 40 0.029269338 ubox
14 41 0.005818237 ubox
14 47 0.026584275 ubox
14 52 0.003932055 ubox
14 73 0.044120940 ubox
14 74 0.004150706 ubox
15 67 0.006449501 ubox
16 37 0.991149480 ubox
16 38 0.019266076 ubox
16 54 0.009658093 ubox
16 55 0.004957697 ubox
16 66 0.004696648 ubox
16 71 0.040051556 ubox
17 36 0.995110749 ubox
17 37 0.013740631 ubox
17 53 0.015706222 ubox
17 54 0.005036830 ubox
17 66 0.017147384 ubox
17 70 0.040006610 ubox
17 73 0.073185689 ubox
18 35 0.995707149 ubox
18 65 0.018410700 ubox
18 69 0.025719655 ubox
18 72 0.074013451 ubox
19 34 0.995669675 ubox
19 64 0.018467519 ubox
19 66 0.003774838 ubox
19 71 0.073924728 ubox
20 33 0.948829697 ubox
21 30 0.793094531 ubox
21 32 0.595713406 ubox
21 50 0.080229433 ubox
21 62 0.018589698 ubox
21 65 0.025431314 ubox
22 29 0.882753995 ubox
22 38 0.011255333 ubox
22 40 0.018361260 ubox
22 49 0.083166280 ubox
22 61 0.018614373 ubox
22 64 0.025435232 ubox
23 28 0.818717678 ubox
23 37 0.011298053 ubox
23 39 0.018425348 ubox
23 48 0.083185289 ubox
23 60 0.017840053 ubox
23 63 0.024361906 ubox
24 36 0.011338414 ubox
24 38 0.018419581 ubox
24 47 0.083036897 ubox
25 34 0.012452431 ubox
25 37 0.018137421 ubox
26 33 0.014792747 ubox
27 32 0.016002826 ubox
27 45 0.083249763 ubox
28 44 0.083401970 ubox
29 35 0.015746480 ubox
29 43 0.083245579 ubox
30 34 0.015658398 ubox
30 38 0.007260214 ubox
30 41 0.022224675 ubox
30 55 0.031195094 ubox
31 37 0.007345784 ubox
31 38 0.010053818 ubox
31 40 0.021263055 ubox
31 41 0.080038564 ubox
31 54 0.031219960 ubox
32 36 0.007308810 ubox
32 37 0.011281781 ubox
32 38 0.016094055 ubox
32 40 0.080239622 ubox
32 53 0.031227566 ubox
33 37 0.014505133 ubox
33 39 0.079977906 ubox
33 52 0.031202728 ubox
34 50 0.005636693 ubox
34 51 0.030498884 ubox
35 49 0.028746701 ubox
36 44 0.006856529 ubox
36 45 0.016529081 ubox
37 43 0.007200198 ubox
37 44 0.016509969 ubox
37 45 0.004583956 ubox
38 43 0.017194452 ubox
38 44 0.004174660 ubox
38 45 0.038476216 ubox
38 51 0.013614223 ubox
39 44 0.036043387 ubox
39 50 0.013267474 ubox
40 51 0.021019379 ubox
40 69 0.008746194 ubox
41 50 0.013519161 ubox
41 51 0.927610722 ubox
41 68 0.008826113 ubox
42 50 0.931601981 ubox
42 67 0.008817907 ubox
43 49 0.931915786 ubox
43 53 0.039241749 ubox
43 55 0.004798478 ubox
43 66 0.008720553 ubox
43 71 0.003672218 ubox
43 75 0.229826939 ubox
44 48 0.839566811 ubox
44 52 0.037976913 ubox
44 53 0.005396218 ubox
44 54 0.005009151 ubox
44 70 0.003584740 ubox
44 74 0.233441233 ubox
45 53 0.020428489 ubox
45 73 0.233567843 ubox
49 57 0.012228272 ubox
49 72 0.304153659 ubox
50 56 0.012252606 ubox
50 71 0.303888802 ubox
50 74 0.051342787 ubox
51 55 0.012156691 ubox
51 70 0.295334193 ubox
51 73 0.054898292 ubox
53 68 0.003603997 ubox
53 69 0.085894653 ubox
54 68 0.066839878 ubox
54 69 0.930500957 ubox
55 67 0.036694420 ubox
55 68 0.933587717 ubox
56 67 0.934989301 ubox
57 66 0.935398289 ubox
58 67 0.025659715 ubox
59 66 0.030117635 ubox
61 67 0.009222604 ubox
61 72 0.133311897 ubox
62 66 0.009691521 ubox
62 71 0.133483859 ubox
64 72 0.288216733 ubox
65 71 0.288534068 ubox
65 73 0.114251446 ubox
66 72 0.115749589 ubox
67 71 0.108287071 ubox
67 74 0.019721952 ubox
68 73 0.021114656 ubox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 71 0.9500000 lbox
10 70 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
