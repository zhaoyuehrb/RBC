%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC183)
} def

/sequence { (\
AAGCUGAGCCCAGGGAGGCUUUGAGGUACACAGGGUCCCUUGGGGGGCCUGAGAGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.003847680 ubox
2 20 0.004905262 ubox
2 50 0.065363398 ubox
3 9 0.023145124 ubox
3 19 0.005029477 ubox
3 27 0.027478396 ubox
3 48 0.459135753 ubox
3 49 0.050668959 ubox
3 56 0.148447858 ubox
3 59 0.609801241 ubox
4 8 0.029462481 ubox
4 13 0.078815313 ubox
4 18 0.005022471 ubox
4 25 0.017833451 ubox
4 26 0.028029726 ubox
4 33 0.009807804 ubox
4 45 0.033083066 ubox
4 46 0.038196443 ubox
4 47 0.462163362 ubox
4 53 0.113309462 ubox
4 55 0.147947167 ubox
4 58 0.611218891 ubox
5 12 0.079094622 ubox
5 17 0.004841943 ubox
5 24 0.017201799 ubox
5 25 0.027669735 ubox
5 30 0.019866799 ubox
5 32 0.010151310 ubox
5 44 0.008148147 ubox
5 45 0.041833881 ubox
5 46 0.436516201 ubox
5 51 0.004335623 ubox
5 52 0.116640136 ubox
5 54 0.142611278 ubox
5 57 0.610487046 ubox
6 11 0.078912185 ubox
6 21 0.060036878 ubox
6 22 0.005974117 ubox
6 29 0.032155638 ubox
6 31 0.010497008 ubox
6 50 0.013550976 ubox
6 56 0.605394519 ubox
7 20 0.104019634 ubox
7 21 0.005912866 ubox
7 50 0.172294711 ubox
8 19 0.108439579 ubox
8 27 0.205846582 ubox
8 48 0.069609723 ubox
8 49 0.171259004 ubox
8 56 0.006541698 ubox
9 15 0.005651820 ubox
9 18 0.108330022 ubox
9 26 0.210482097 ubox
9 43 0.006814160 ubox
9 44 0.959439762 ubox
9 45 0.076631522 ubox
9 46 0.016174729 ubox
9 47 0.071038479 ubox
9 55 0.006120310 ubox
10 14 0.005635009 ubox
10 17 0.107958886 ubox
10 18 0.006519935 ubox
10 25 0.210497008 ubox
10 42 0.005278815 ubox
10 43 0.962899972 ubox
10 44 0.064273204 ubox
10 45 0.015710276 ubox
10 46 0.064664419 ubox
11 17 0.008771496 ubox
11 23 0.209615032 ubox
11 42 0.964289919 ubox
11 43 0.048540873 ubox
11 44 0.015001914 ubox
11 45 0.057618927 ubox
11 51 0.031716101 ubox
12 20 0.005496889 ubox
12 21 0.034318843 ubox
12 22 0.207071076 ubox
12 40 0.025876683 ubox
12 41 0.965572252 ubox
12 50 0.031812175 ubox
13 19 0.007563941 ubox
13 20 0.046448333 ubox
13 21 0.203842089 ubox
13 22 0.009852565 ubox
13 39 0.032401019 ubox
13 40 0.965798496 ubox
13 41 0.009955277 ubox
13 49 0.031804258 ubox
13 60 0.005665003 ubox
14 19 0.055836098 ubox
14 20 0.200958815 ubox
14 21 0.009568249 ubox
14 38 0.032400076 ubox
14 39 0.966714906 ubox
14 40 0.011762357 ubox
14 48 0.031777764 ubox
14 59 0.005936299 ubox
14 60 0.081319245 ubox
15 19 0.196744154 ubox
15 20 0.007870493 ubox
15 37 0.031628411 ubox
15 38 0.966593033 ubox
15 39 0.012464523 ubox
15 41 0.006311070 ubox
15 59 0.082271952 ubox
16 36 0.023300804 ubox
16 40 0.006335651 ubox
17 37 0.966045882 ubox
17 38 0.006270694 ubox
17 39 0.005993574 ubox
17 60 0.007097905 ubox
18 36 0.966675599 ubox
18 37 0.007726066 ubox
18 38 0.005412671 ubox
18 56 0.083135294 ubox
18 59 0.007154158 ubox
19 33 0.011548864 ubox
19 34 0.008746448 ubox
19 35 0.967248491 ubox
19 45 0.031451107 ubox
19 47 0.003173411 ubox
19 55 0.083197758 ubox
19 58 0.007147333 ubox
20 32 0.011417069 ubox
20 33 0.009549220 ubox
20 34 0.966070222 ubox
20 44 0.031438538 ubox
20 54 0.083223839 ubox
20 57 0.006945658 ubox
21 32 0.009679882 ubox
21 33 0.962859643 ubox
21 34 0.003419054 ubox
21 43 0.031342912 ubox
21 53 0.083160470 ubox
22 28 0.005945070 ubox
22 30 0.053680177 ubox
22 32 0.964658959 ubox
22 33 0.004161417 ubox
22 42 0.031017222 ubox
22 52 0.082058976 ubox
22 57 0.003474188 ubox
23 27 0.005691062 ubox
23 29 0.059208156 ubox
23 31 0.963187027 ubox
23 41 0.031640627 ubox
23 56 0.004054141 ubox
24 40 0.031844153 ubox
24 50 0.077548066 ubox
25 39 0.031835888 ubox
25 49 0.077483695 ubox
25 60 0.022229752 ubox
26 38 0.031764354 ubox
26 48 0.077393261 ubox
26 56 0.029447789 ubox
26 59 0.022540888 ubox
27 47 0.076787724 ubox
27 55 0.029377734 ubox
27 58 0.022107561 ubox
28 36 0.031069349 ubox
29 35 0.031688598 ubox
29 51 0.012788571 ubox
30 36 0.003516048 ubox
30 50 0.008988243 ubox
31 35 0.003607953 ubox
31 42 0.074698385 ubox
31 51 0.223341048 ubox
32 40 0.011763883 ubox
32 41 0.073918728 ubox
32 50 0.222847095 ubox
33 39 0.015891457 ubox
33 40 0.073062390 ubox
33 49 0.218601526 ubox
33 50 0.079194368 ubox
34 38 0.015680021 ubox
34 39 0.072783355 ubox
34 40 0.003281764 ubox
34 48 0.214073996 ubox
34 49 0.096715343 ubox
35 39 0.003430626 ubox
35 48 0.106437210 ubox
36 46 0.207112198 ubox
36 47 0.115072286 ubox
37 45 0.209237186 ubox
37 46 0.116645525 ubox
37 47 0.011275354 ubox
38 44 0.209250726 ubox
38 45 0.116621874 ubox
38 46 0.011537533 ubox
39 43 0.207747193 ubox
39 44 0.116214836 ubox
39 45 0.011559233 ubox
40 44 0.010437457 ubox
44 49 0.003793836 ubox
44 50 0.004108977 ubox
44 59 0.003695345 ubox
44 60 0.009736772 ubox
45 49 0.017454432 ubox
45 59 0.020590802 ubox
45 60 0.074371516 ubox
46 59 0.069920404 ubox
46 60 0.585104032 ubox
47 56 0.097823500 ubox
47 59 0.592969783 ubox
48 55 0.105670365 ubox
48 58 0.430780927 ubox
49 55 0.077848565 ubox
49 58 0.569276077 ubox
50 54 0.071393505 ubox
50 57 0.702850055 ubox
51 56 0.701784998 ubox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
showpage
end
%%EOF
