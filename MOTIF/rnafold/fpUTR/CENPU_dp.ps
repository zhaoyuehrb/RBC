%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CENPU)
} def

/sequence { (\
GGAUUGGCUGUUCGGAGCGGCGAGGGGCUUGGCGGGAGCUUCCAGUCGCUCGAGAGCGGAGAGCGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.006132658 ubox
1 13 0.012348554 ubox
1 43 0.030127369 ubox
1 70 0.544110586 ubox
2 8 0.006948813 ubox
2 12 0.012396788 ubox
2 13 0.003972925 ubox
2 42 0.030126559 ubox
2 47 0.003295531 ubox
2 69 0.549510789 ubox
3 11 0.012425800 ubox
3 12 0.003953187 ubox
3 41 0.028632060 ubox
3 46 0.003467702 ubox
4 10 0.012334084 ubox
4 23 0.003270146 ubox
4 24 0.006067999 ubox
4 45 0.003495923 ubox
4 59 0.006502032 ubox
4 60 0.231536445 ubox
4 61 0.019233717 ubox
4 62 0.115418917 ubox
4 63 0.177556347 ubox
4 66 0.086833555 ubox
5 22 0.003318914 ubox
5 23 0.020056507 ubox
5 44 0.007667227 ubox
5 58 0.008229298 ubox
5 59 0.248474436 ubox
5 60 0.022497483 ubox
5 61 0.123831055 ubox
5 62 0.227194333 ubox
5 65 0.095607481 ubox
5 68 0.125553322 ubox
6 29 0.019052359 ubox
6 40 0.021562487 ubox
6 43 0.008159993 ubox
6 57 0.006848675 ubox
6 64 0.087725588 ubox
6 67 0.121381418 ubox
6 70 0.049773922 ubox
7 21 0.025275234 ubox
7 28 0.020604799 ubox
7 39 0.022767140 ubox
7 42 0.007983638 ubox
7 57 0.261976002 ubox
7 64 0.652770445 ubox
7 67 0.489793085 ubox
7 69 0.047466054 ubox
8 20 0.025400377 ubox
8 27 0.020613617 ubox
8 35 0.003905648 ubox
8 38 0.022765882 ubox
8 56 0.262125184 ubox
8 59 0.504138922 ubox
8 61 0.020946546 ubox
8 63 0.653032088 ubox
8 66 0.494924519 ubox
9 19 0.025381471 ubox
9 26 0.020588777 ubox
9 34 0.004000397 ubox
9 37 0.022612392 ubox
9 55 0.260338803 ubox
9 58 0.515292841 ubox
9 60 0.017741984 ubox
9 62 0.643220505 ubox
9 65 0.494038296 ubox
9 68 0.008488088 ubox
10 18 0.025396577 ubox
10 33 0.004273427 ubox
10 39 0.007983053 ubox
10 57 0.545906817 ubox
10 64 0.492639425 ubox
10 67 0.008598041 ubox
11 17 0.025150246 ubox
11 24 0.020464965 ubox
11 32 0.003985784 ubox
11 35 0.011608626 ubox
11 36 0.015780548 ubox
11 38 0.007978218 ubox
11 53 0.126636198 ubox
11 54 0.196216807 ubox
11 55 0.013335745 ubox
11 56 0.545809389 ubox
11 60 0.622355852 ubox
11 61 0.006607953 ubox
11 62 0.006005120 ubox
11 63 0.490968770 ubox
11 66 0.008083666 ubox
12 16 0.019169899 ubox
12 23 0.020616764 ubox
12 34 0.007411013 ubox
12 35 0.018461398 ubox
12 37 0.007979817 ubox
12 52 0.094747585 ubox
12 53 0.231314369 ubox
12 54 0.019911914 ubox
12 55 0.547727493 ubox
12 59 0.624534290 ubox
12 60 0.014307771 ubox
12 61 0.005187828 ubox
12 62 0.482955714 ubox
12 65 0.004452391 ubox
13 22 0.020630582 ubox
13 31 0.003982077 ubox
13 34 0.019778679 ubox
13 36 0.007970845 ubox
13 52 0.243652390 ubox
13 54 0.547924289 ubox
13 58 0.625929166 ubox
13 59 0.013012711 ubox
13 61 0.480100087 ubox
14 21 0.020575934 ubox
14 33 0.019608551 ubox
14 51 0.182698879 ubox
14 57 0.627022332 ubox
15 30 0.018938233 ubox
15 50 0.079132463 ubox
15 51 0.887633436 ubox
16 29 0.020387049 ubox
16 50 0.904642159 ubox
17 28 0.020599002 ubox
17 33 0.007392275 ubox
17 49 0.908779790 ubox
17 57 0.413389379 ubox
18 27 0.020598827 ubox
18 32 0.007328146 ubox
18 34 0.003709365 ubox
18 48 0.908776445 ubox
18 52 0.022844713 ubox
18 56 0.413056321 ubox
18 58 0.011699328 ubox
19 29 0.011844750 ubox
19 33 0.003874726 ubox
19 47 0.908677467 ubox
19 50 0.025103157 ubox
19 51 0.023399502 ubox
19 57 0.011279188 ubox
20 28 0.012600463 ubox
20 46 0.908461569 ubox
20 49 0.034359276 ubox
21 27 0.012604860 ubox
21 31 0.004029827 ubox
21 45 0.908622956 ubox
21 48 0.034460474 ubox
21 52 0.410756970 ubox
22 30 0.004050899 ubox
22 42 0.009641199 ubox
22 47 0.034455111 ubox
22 51 0.413759949 ubox
23 29 0.004050370 ubox
23 41 0.009266651 ubox
23 46 0.033699175 ubox
23 50 0.413719971 ubox
24 28 0.003962574 ubox
24 40 0.005855760 ubox
24 41 0.004100297 ubox
24 42 0.865056487 ubox
24 43 0.266905322 ubox
24 49 0.413657926 ubox
25 39 0.004990351 ubox
25 40 0.004288583 ubox
25 41 0.866093986 ubox
25 42 0.266438641 ubox
25 43 0.015512842 ubox
25 47 0.003807326 ubox
25 51 0.003209705 ubox
26 39 0.003534730 ubox
26 40 0.888150274 ubox
26 41 0.188178514 ubox
26 42 0.015368802 ubox
26 43 0.013071414 ubox
26 47 0.413528836 ubox
26 50 0.003237300 ubox
27 39 0.909054134 ubox
27 40 0.025720541 ubox
27 41 0.011203374 ubox
27 42 0.013048234 ubox
27 46 0.413598647 ubox
27 49 0.003274583 ubox
28 36 0.004868749 ubox
28 38 0.909393810 ubox
28 45 0.413689085 ubox
28 48 0.003250229 ubox
29 35 0.005532966 ubox
29 36 0.024976649 ubox
29 37 0.907940570 ubox
29 38 0.004664898 ubox
29 44 0.382560939 ubox
29 45 0.003522614 ubox
30 34 0.006693002 ubox
30 35 0.050719852 ubox
30 36 0.899335263 ubox
30 37 0.025762564 ubox
30 44 0.128852421 ubox
31 40 0.360153433 ubox
31 41 0.016640086 ubox
31 42 0.056404477 ubox
31 43 0.181971587 ubox
31 47 0.003885420 ubox
32 39 0.369971717 ubox
32 40 0.003258538 ubox
32 41 0.023278737 ubox
32 42 0.178484967 ubox
32 46 0.004157420 ubox
33 38 0.371277513 ubox
33 45 0.004189316 ubox
34 40 0.162491744 ubox
34 41 0.028955349 ubox
34 42 0.003801057 ubox
34 43 0.042864035 ubox
35 39 0.161986741 ubox
35 40 0.024261554 ubox
35 41 0.008886487 ubox
35 42 0.042862254 ubox
35 43 0.030500826 ubox
36 40 0.007367123 ubox
36 41 0.034049390 ubox
36 42 0.030599381 ubox
37 41 0.026737305 ubox
45 67 0.040665416 ubox
46 66 0.040690680 ubox
47 65 0.040749900 ubox
48 64 0.040887422 ubox
49 63 0.040885895 ubox
50 59 0.017240684 ubox
50 60 0.009171725 ubox
50 62 0.040856134 ubox
51 58 0.038956253 ubox
51 59 0.012578876 ubox
51 61 0.040811599 ubox
52 57 0.108568539 ubox
56 64 0.019803192 ubox
56 67 0.016191743 ubox
57 63 0.020337995 ubox
57 65 0.008024687 ubox
57 66 0.015823427 ubox
58 64 0.020905663 ubox
58 70 0.020037058 ubox
59 69 0.020155507 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
