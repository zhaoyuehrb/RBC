%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UQCRHL)
} def

/sequence { (\
UUGAGGUGCCGCUGUUGCUGCUCGUGUUAAAUCUAGAACCGUAGCCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.067822058 ubox
1 31 0.005754210 ubox
1 36 0.008097086 ubox
1 37 0.017705870 ubox
1 38 0.005085988 ubox
1 44 0.069783362 ubox
1 48 0.061805482 ubox
1 49 0.035883957 ubox
2 8 0.014504192 ubox
2 11 0.130185277 ubox
2 14 0.017280553 ubox
2 17 0.029426202 ubox
2 24 0.060144077 ubox
2 26 0.019232649 ubox
2 29 0.077882070 ubox
2 30 0.005852832 ubox
2 35 0.009165811 ubox
2 36 0.017375742 ubox
2 37 0.006067012 ubox
2 43 0.094615699 ubox
2 47 0.075764038 ubox
2 48 0.039827487 ubox
3 7 0.011557988 ubox
3 10 0.179573946 ubox
3 13 0.011390618 ubox
3 16 0.050100444 ubox
3 23 0.089343732 ubox
3 25 0.035242027 ubox
3 28 0.079174335 ubox
3 33 0.019843568 ubox
3 34 0.005114889 ubox
3 40 0.003740166 ubox
3 42 0.096408546 ubox
3 46 0.077111954 ubox
4 13 0.267363650 ubox
4 15 0.046370453 ubox
4 16 0.016862574 ubox
4 19 0.038639894 ubox
4 22 0.088936239 ubox
4 27 0.079024878 ubox
4 28 0.005275861 ubox
4 32 0.019848685 ubox
4 34 0.035042066 ubox
5 12 0.274532198 ubox
5 13 0.144512865 ubox
5 15 0.013789563 ubox
5 16 0.007568079 ubox
5 18 0.039319275 ubox
5 19 0.048356566 ubox
5 21 0.078107844 ubox
5 22 0.021829792 ubox
5 23 0.080487019 ubox
5 27 0.005622790 ubox
5 33 0.037032283 ubox
5 40 0.110014862 ubox
5 46 0.194011340 ubox
6 12 0.157163110 ubox
6 15 0.008555206 ubox
6 18 0.052819955 ubox
6 21 0.028467841 ubox
6 22 0.076709880 ubox
6 25 0.061381532 ubox
6 32 0.036857160 ubox
6 39 0.110006565 ubox
6 45 0.193550901 ubox
6 50 0.060922995 ubox
7 11 0.147610412 ubox
7 14 0.007978014 ubox
7 17 0.050870420 ubox
7 20 0.032400223 ubox
7 24 0.022622293 ubox
7 26 0.003218873 ubox
7 29 0.016456665 ubox
7 31 0.036423006 ubox
7 38 0.107927696 ubox
7 43 0.025491909 ubox
7 44 0.184413126 ubox
7 47 0.022271882 ubox
7 49 0.061295049 ubox
8 13 0.007836815 ubox
8 15 0.063487870 ubox
8 16 0.035978720 ubox
8 18 0.083222927 ubox
8 19 0.019347887 ubox
8 21 0.245185561 ubox
8 23 0.013987789 ubox
8 25 0.008231205 ubox
8 27 0.022622715 ubox
8 28 0.016929908 ubox
8 40 0.003766436 ubox
8 42 0.027036400 ubox
8 45 0.041479673 ubox
8 46 0.023629031 ubox
9 14 0.069762469 ubox
9 17 0.082411907 ubox
9 20 0.246509239 ubox
9 24 0.008219807 ubox
9 26 0.022422883 ubox
9 41 0.027363060 ubox
9 44 0.042605404 ubox
10 17 0.032067698 ubox
10 20 0.012724716 ubox
10 24 0.022096526 ubox
10 26 0.034210023 ubox
10 41 0.084963818 ubox
11 16 0.024477316 ubox
11 18 0.362798822 ubox
11 19 0.004041121 ubox
11 21 0.024894904 ubox
11 23 0.021602070 ubox
11 25 0.034891860 ubox
11 27 0.008991711 ubox
11 40 0.083061804 ubox
11 42 0.073567476 ubox
11 45 0.019538805 ubox
12 17 0.364751936 ubox
12 20 0.025041266 ubox
12 24 0.034928440 ubox
12 26 0.009203706 ubox
12 36 0.042281028 ubox
12 41 0.075371397 ubox
12 44 0.019586188 ubox
12 48 0.766306438 ubox
13 24 0.007435914 ubox
13 29 0.003336685 ubox
13 35 0.041871552 ubox
13 43 0.019338544 ubox
13 47 0.769498292 ubox
14 21 0.039912496 ubox
14 23 0.011895931 ubox
14 28 0.003628071 ubox
14 32 0.025006405 ubox
14 34 0.036759096 ubox
14 39 0.106196397 ubox
14 40 0.004882996 ubox
14 42 0.016321344 ubox
14 45 0.044281889 ubox
14 46 0.761101027 ubox
14 50 0.230752237 ubox
15 20 0.039293082 ubox
15 30 0.020953463 ubox
15 31 0.028010934 ubox
15 36 0.010249362 ubox
15 37 0.004212463 ubox
15 38 0.106690959 ubox
15 41 0.003543833 ubox
15 44 0.057797262 ubox
15 48 0.109731638 ubox
15 49 0.231564383 ubox
16 26 0.006201207 ubox
16 29 0.021044434 ubox
16 30 0.027731214 ubox
16 35 0.010404066 ubox
16 36 0.004554112 ubox
16 37 0.105661988 ubox
16 43 0.058082037 ubox
16 47 0.136444239 ubox
16 48 0.216733305 ubox
17 25 0.010476272 ubox
17 27 0.023992966 ubox
17 28 0.017513472 ubox
17 34 0.009490616 ubox
17 40 0.003336352 ubox
17 42 0.058241569 ubox
17 45 0.796062953 ubox
17 46 0.119510117 ubox
18 24 0.010619983 ubox
18 26 0.026089898 ubox
18 36 0.100237902 ubox
18 41 0.057741028 ubox
18 44 0.803033889 ubox
18 48 0.338181817 ubox
19 29 0.008328094 ubox
19 35 0.100033716 ubox
19 43 0.802181564 ubox
19 47 0.346055514 ubox
20 27 0.059584014 ubox
20 28 0.006705112 ubox
20 34 0.091293247 ubox
20 40 0.016856700 ubox
20 42 0.793741648 ubox
20 45 0.451100827 ubox
20 46 0.246377350 ubox
21 26 0.061775164 ubox
21 36 0.014176650 ubox
21 41 0.765127449 ubox
21 44 0.514450614 ubox
21 48 0.003960939 ubox
22 35 0.014333409 ubox
22 37 0.242340278 ubox
22 43 0.509046844 ubox
22 47 0.004708970 ubox
22 49 0.034592811 ubox
23 36 0.245165687 ubox
23 41 0.587009797 ubox
23 48 0.037501527 ubox
24 32 0.086154031 ubox
24 39 0.548512704 ubox
24 40 0.677216060 ubox
24 42 0.005878814 ubox
24 45 0.014481526 ubox
24 50 0.012317173 ubox
25 31 0.087452882 ubox
25 35 0.062476120 ubox
25 38 0.545873570 ubox
25 41 0.009659508 ubox
25 44 0.014243750 ubox
25 47 0.012845719 ubox
25 49 0.012354334 ubox
26 32 0.041416490 ubox
26 34 0.062588718 ubox
26 39 0.712050562 ubox
26 40 0.019824164 ubox
26 45 0.049839043 ubox
26 46 0.011557609 ubox
26 50 0.046271072 ubox
27 31 0.039765002 ubox
27 36 0.398001020 ubox
27 37 0.095811209 ubox
27 38 0.710481518 ubox
27 44 0.050405404 ubox
27 48 0.004986353 ubox
27 49 0.046909744 ubox
28 35 0.482718867 ubox
28 36 0.102644535 ubox
28 37 0.699241190 ubox
28 43 0.049794112 ubox
28 47 0.005488000 ubox
28 48 0.045430640 ubox
29 34 0.460259634 ubox
29 42 0.047504139 ubox
31 42 0.010313942 ubox
32 41 0.011635120 ubox
32 49 0.025426063 ubox
33 44 0.092821937 ubox
33 48 0.027751950 ubox
34 43 0.094581193 ubox
34 47 0.026666989 ubox
35 42 0.093532743 ubox
41 50 0.019986061 ubox
42 49 0.019633347 ubox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
