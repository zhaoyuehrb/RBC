%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SEL1L2)
} def

/sequence { (\
ACCACAGUCCCUGAGAAGAGGAGCUCUUGGGCCAAUCACCUAGUUUCUGCCUGUGUUACAGUGAAGAGAAGCUGCUUAAGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.061591408 ubox
2 7 0.084079500 ubox
2 21 0.041300363 ubox
2 30 0.026932643 ubox
2 31 0.006464921 ubox
3 13 0.008091574 ubox
3 20 0.041423717 ubox
3 29 0.027027679 ubox
3 30 0.006439792 ubox
3 55 0.005992465 ubox
4 12 0.007559221 ubox
4 28 0.026209875 ubox
4 54 0.006051928 ubox
5 13 0.043391132 ubox
5 29 0.003762986 ubox
5 53 0.006056464 ubox
6 12 0.043482134 ubox
6 25 0.091983342 ubox
6 27 0.003952645 ubox
6 52 0.006023938 ubox
7 11 0.042555421 ubox
7 24 0.142200244 ubox
7 26 0.004036299 ubox
7 32 0.021475913 ubox
7 51 0.005879320 ubox
8 14 0.016551198 ubox
8 16 0.031224812 ubox
8 19 0.014797823 ubox
8 21 0.030337258 ubox
8 22 0.783907300 ubox
8 23 0.146296883 ubox
8 31 0.020810817 ubox
8 83 0.007140390 ubox
9 13 0.016588905 ubox
9 15 0.031505365 ubox
9 18 0.015321105 ubox
9 20 0.038560661 ubox
9 21 0.836344896 ubox
9 30 0.020844916 ubox
9 31 0.007486149 ubox
9 82 0.006162676 ubox
10 20 0.833821444 ubox
10 21 0.538213587 ubox
10 29 0.020822576 ubox
10 30 0.007542552 ubox
10 31 0.007525617 ubox
11 18 0.828873997 ubox
11 20 0.543492840 ubox
11 21 0.013555953 ubox
11 23 0.008215155 ubox
11 29 0.007550134 ubox
11 30 0.007608030 ubox
11 80 0.003400942 ubox
12 17 0.820824890 ubox
12 19 0.544158729 ubox
12 20 0.013388894 ubox
12 22 0.008266925 ubox
12 29 0.007589855 ubox
13 26 0.020798883 ubox
13 28 0.009438561 ubox
13 77 0.003558160 ubox
14 25 0.020804910 ubox
14 27 0.009758964 ubox
14 76 0.003666449 ubox
15 24 0.020794583 ubox
15 26 0.009764937 ubox
15 75 0.003658208 ubox
16 25 0.009052772 ubox
16 28 0.005916618 ubox
17 25 0.003467300 ubox
17 27 0.006156239 ubox
18 24 0.004898999 ubox
18 26 0.006213282 ubox
18 77 0.005078305 ubox
19 25 0.006211515 ubox
19 48 0.005064280 ubox
19 76 0.005340279 ubox
20 24 0.006085852 ubox
20 47 0.005168851 ubox
20 75 0.005376622 ubox
21 46 0.005172043 ubox
22 45 0.005256841 ubox
22 73 0.005502434 ubox
23 44 0.005349498 ubox
23 72 0.005536766 ubox
24 43 0.005357486 ubox
24 71 0.005533997 ubox
24 82 0.984540411 ubox
24 85 0.004847271 ubox
25 42 0.005060715 ubox
25 70 0.004953221 ubox
25 81 0.994190297 ubox
25 83 0.007110648 ubox
25 84 0.003185367 ubox
26 80 0.999167095 ubox
26 82 0.008568332 ubox
27 43 0.003805364 ubox
27 79 0.998627525 ubox
27 81 0.008159322 ubox
28 42 0.005457185 ubox
28 78 0.997877043 ubox
28 80 0.006828202 ubox
29 40 0.019200371 ubox
29 41 0.007648161 ubox
29 76 0.004909219 ubox
29 77 0.996775495 ubox
30 39 0.019368173 ubox
30 40 0.011045623 ubox
30 75 0.006360887 ubox
30 76 0.997927933 ubox
31 39 0.011119249 ubox
31 75 0.999017799 ubox
32 74 0.986300115 ubox
33 74 0.070570710 ubox
34 73 0.071796843 ubox
35 44 0.003921988 ubox
36 43 0.004114310 ubox
36 67 0.003323248 ubox
36 69 0.013003586 ubox
36 81 0.007938720 ubox
37 55 0.004452163 ubox
37 66 0.003299946 ubox
37 68 0.013056349 ubox
37 74 0.014819669 ubox
37 80 0.008467098 ubox
37 82 0.003332937 ubox
38 44 0.004258422 ubox
38 54 0.004493773 ubox
38 73 0.028336273 ubox
39 43 0.005271634 ubox
39 53 0.004471680 ubox
40 66 0.006859237 ubox
40 68 0.017610109 ubox
40 71 0.037401802 ubox
40 80 0.004624941 ubox
41 65 0.006220535 ubox
41 67 0.017134160 ubox
41 70 0.035676245 ubox
41 74 0.143841101 ubox
41 79 0.003942319 ubox
42 73 0.984190333 ubox
43 50 0.004976782 ubox
43 72 0.996408031 ubox
44 49 0.004992692 ubox
44 64 0.010305267 ubox
44 65 0.003712071 ubox
44 66 0.018470266 ubox
44 67 0.008377070 ubox
44 69 0.084488947 ubox
44 70 0.011946816 ubox
44 71 0.995031621 ubox
45 63 0.009872860 ubox
45 64 0.003706615 ubox
45 65 0.021781176 ubox
45 66 0.007978868 ubox
45 68 0.110183592 ubox
45 69 0.011839046 ubox
45 70 0.990222968 ubox
46 63 0.003297038 ubox
46 64 0.023323804 ubox
46 65 0.007227236 ubox
46 67 0.137095212 ubox
46 68 0.007925330 ubox
46 69 0.989505808 ubox
47 61 0.011843798 ubox
47 63 0.023607986 ubox
47 66 0.141814913 ubox
47 68 0.989390629 ubox
48 60 0.012082004 ubox
48 63 0.046304416 ubox
48 65 0.145525586 ubox
48 67 0.981123383 ubox
49 56 0.013862877 ubox
49 59 0.012241650 ubox
49 62 0.216239031 ubox
50 55 0.013968087 ubox
50 61 0.154865340 ubox
51 61 0.973834722 ubox
51 66 0.069731190 ubox
52 58 0.004688013 ubox
52 60 0.988492137 ubox
52 63 0.023636607 ubox
52 65 0.069519036 ubox
53 57 0.004386164 ubox
53 59 0.988593945 ubox
53 62 0.026742147 ubox
54 58 0.890621453 ubox
54 60 0.031766855 ubox
54 61 0.031966014 ubox
54 63 0.023807498 ubox
55 59 0.027298271 ubox
55 62 0.021818684 ubox
56 61 0.011612360 ubox
56 64 0.015306684 ubox
57 63 0.015349483 ubox
57 64 0.003549154 ubox
58 62 0.012850030 ubox
59 74 0.006947197 ubox
60 73 0.007775905 ubox
61 72 0.007867639 ubox
62 71 0.007851706 ubox
75 82 0.007331059 ubox
75 85 0.007103247 ubox
76 81 0.006813097 ubox
76 84 0.007252529 ubox
77 83 0.006983985 ubox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
24 82 0.9500000 lbox
25 81 0.9500000 lbox
26 80 0.9500000 lbox
27 79 0.9500000 lbox
28 78 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
32 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
53 59 0.9500000 lbox
54 58 0.9500000 lbox
showpage
end
%%EOF
