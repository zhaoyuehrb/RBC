%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HSCB)
} def

/sequence { (\
UCUGGUUAGACGCUCUCUUUGCUUUUCCCCACGAGUGACCACGGCUAGAUAGGCCGCCGGCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.031166923 ubox
1 34 0.321141658 ubox
1 38 0.011625775 ubox
1 44 0.049970491 ubox
1 49 0.535877799 ubox
1 60 0.009675417 ubox
2 9 0.034590381 ubox
2 33 0.343240273 ubox
2 35 0.040023970 ubox
2 37 0.012856438 ubox
2 43 0.070553126 ubox
2 44 0.011419116 ubox
2 48 0.586377602 ubox
2 59 0.013567446 ubox
2 60 0.074279431 ubox
2 64 0.639935308 ubox
3 8 0.032379454 ubox
3 12 0.005338089 ubox
3 31 0.377749299 ubox
3 33 0.006065746 ubox
3 34 0.038324328 ubox
3 41 0.194140974 ubox
3 43 0.009524973 ubox
3 47 0.586341896 ubox
3 51 0.005157837 ubox
3 59 0.075383054 ubox
3 63 0.659738804 ubox
4 11 0.009960991 ubox
4 14 0.006441524 ubox
4 18 0.003444334 ubox
4 23 0.010006056 ubox
4 28 0.028890705 ubox
4 29 0.069272613 ubox
4 30 0.389205183 ubox
4 32 0.007044438 ubox
4 40 0.216389901 ubox
4 42 0.007288741 ubox
4 46 0.586302199 ubox
4 50 0.005276751 ubox
4 58 0.076069935 ubox
4 62 0.663155935 ubox
5 11 0.006775059 ubox
5 13 0.007670506 ubox
5 17 0.003956646 ubox
5 22 0.010927247 ubox
5 27 0.029047488 ubox
5 28 0.071901823 ubox
5 29 0.388528596 ubox
5 32 0.034983151 ubox
5 39 0.216467229 ubox
5 42 0.006273228 ubox
5 45 0.586496417 ubox
5 50 0.003629581 ubox
5 57 0.075808785 ubox
5 61 0.662498765 ubox
6 10 0.008356708 ubox
6 12 0.007655978 ubox
6 21 0.010841631 ubox
6 31 0.033748342 ubox
6 38 0.215637587 ubox
6 41 0.007964439 ubox
6 44 0.583417534 ubox
6 48 0.008140121 ubox
6 49 0.003715569 ubox
6 56 0.041679838 ubox
6 60 0.587000633 ubox
7 21 0.004599862 ubox
7 37 0.158121859 ubox
7 43 0.506075780 ubox
7 47 0.009971629 ubox
7 48 0.003276610 ubox
7 59 0.486708129 ubox
8 14 0.020821785 ubox
8 16 0.103839422 ubox
8 18 0.130752491 ubox
8 19 0.006164764 ubox
8 20 0.008454706 ubox
8 23 0.009855487 ubox
8 24 0.014220055 ubox
8 25 0.107082216 ubox
8 26 0.355868168 ubox
8 36 0.127172537 ubox
8 46 0.010324355 ubox
9 13 0.022120569 ubox
9 15 0.112390382 ubox
9 17 0.141340614 ubox
9 18 0.007469010 ubox
9 19 0.009748201 ubox
9 20 0.004998846 ubox
9 22 0.010132763 ubox
9 23 0.011672640 ubox
9 24 0.115874545 ubox
9 25 0.367568893 ubox
9 26 0.016411007 ubox
9 27 0.082424710 ubox
9 45 0.009861240 ubox
10 14 0.097828437 ubox
10 16 0.134625113 ubox
10 18 0.009755076 ubox
10 19 0.005548313 ubox
10 23 0.116434767 ubox
10 24 0.365664469 ubox
10 25 0.016802904 ubox
10 26 0.081729857 ubox
10 36 0.011341264 ubox
11 21 0.013113745 ubox
11 33 0.109257801 ubox
11 35 0.012106092 ubox
11 37 0.845372300 ubox
11 43 0.043558511 ubox
11 56 0.012390892 ubox
11 59 0.027816447 ubox
12 20 0.011039889 ubox
12 22 0.415199069 ubox
12 32 0.104786552 ubox
12 36 0.860547739 ubox
12 42 0.044411656 ubox
12 45 0.018521980 ubox
12 54 0.020448557 ubox
12 55 0.009565190 ubox
12 57 0.025683877 ubox
12 58 0.026147879 ubox
12 61 0.004732271 ubox
13 21 0.415641742 ubox
13 35 0.862345745 ubox
13 44 0.018912830 ubox
13 52 0.006255091 ubox
13 53 0.020816055 ubox
13 56 0.025675104 ubox
13 60 0.004852035 ubox
14 34 0.861925087 ubox
14 38 0.065843367 ubox
14 43 0.018163993 ubox
14 51 0.006938751 ubox
14 52 0.017394013 ubox
14 53 0.006597960 ubox
14 59 0.004296461 ubox
15 33 0.860740236 ubox
15 35 0.107445944 ubox
15 37 0.068574940 ubox
15 43 0.004988656 ubox
15 52 0.012154953 ubox
16 34 0.108950297 ubox
16 38 0.031379478 ubox
16 49 0.018268724 ubox
16 51 0.011443546 ubox
17 33 0.109679017 ubox
17 35 0.067525091 ubox
17 37 0.033575591 ubox
17 48 0.018828815 ubox
18 34 0.066552209 ubox
18 35 0.022828733 ubox
18 38 0.011635926 ubox
18 47 0.018503513 ubox
18 49 0.010887468 ubox
19 33 0.063480447 ubox
19 34 0.028782451 ubox
19 35 0.003885566 ubox
19 37 0.009591000 ubox
19 38 0.188661415 ubox
19 48 0.011009227 ubox
20 31 0.261716145 ubox
20 33 0.032340088 ubox
20 34 0.004523694 ubox
20 37 0.205460057 ubox
20 41 0.012004901 ubox
20 47 0.010262189 ubox
21 30 0.271955726 ubox
21 32 0.053726153 ubox
21 36 0.227712557 ubox
21 40 0.013322863 ubox
21 45 0.021300287 ubox
21 54 0.004973863 ubox
22 35 0.229503964 ubox
22 44 0.021392811 ubox
22 53 0.004996239 ubox
23 34 0.228952178 ubox
23 35 0.007200186 ubox
23 38 0.014700599 ubox
23 43 0.020209812 ubox
23 52 0.004982262 ubox
24 33 0.225623421 ubox
24 34 0.011312243 ubox
24 35 0.010770702 ubox
24 37 0.014877775 ubox
24 38 0.007028062 ubox
24 51 0.004456375 ubox
25 33 0.013047920 ubox
25 34 0.014364894 ubox
25 35 0.044611230 ubox
25 37 0.006929245 ubox
26 33 0.014431221 ubox
26 34 0.061691848 ubox
26 38 0.014797463 ubox
26 49 0.004833711 ubox
27 33 0.063820002 ubox
27 37 0.015929298 ubox
27 48 0.004918512 ubox
29 44 0.003216907 ubox
30 37 0.046305334 ubox
30 43 0.003363406 ubox
31 36 0.038646930 ubox
32 43 0.016086793 ubox
32 59 0.014734894 ubox
33 42 0.016720163 ubox
33 58 0.015070065 ubox
34 46 0.015655822 ubox
35 42 0.015934207 ubox
35 45 0.017017575 ubox
35 57 0.014355474 ubox
35 61 0.027012094 ubox
36 41 0.015249918 ubox
36 43 0.004761419 ubox
36 44 0.016625641 ubox
36 56 0.011187131 ubox
36 59 0.005567087 ubox
36 60 0.024341493 ubox
36 63 0.320815146 ubox
37 42 0.010880964 ubox
37 55 0.009053785 ubox
37 58 0.011454466 ubox
37 62 0.355674579 ubox
39 53 0.008894239 ubox
39 60 0.494869840 ubox
40 52 0.008898413 ubox
40 59 0.506397977 ubox
42 56 0.783247036 ubox
42 59 0.103059926 ubox
43 55 0.794483111 ubox
43 58 0.105543291 ubox
43 62 0.018109454 ubox
44 54 0.794529736 ubox
44 57 0.105514459 ubox
44 61 0.018135360 ubox
45 52 0.035130639 ubox
45 53 0.793714426 ubox
45 56 0.105374206 ubox
45 60 0.018132866 ubox
45 64 0.005388417 ubox
46 51 0.046581529 ubox
46 52 0.775489167 ubox
46 59 0.017711669 ubox
46 63 0.005500987 ubox
52 58 0.012161070 ubox
52 62 0.596511467 ubox
53 57 0.011969093 ubox
53 61 0.597141917 ubox
54 60 0.597132509 ubox
55 59 0.592788319 ubox
1 49 0.9500000 lbox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
showpage
end
%%EOF
